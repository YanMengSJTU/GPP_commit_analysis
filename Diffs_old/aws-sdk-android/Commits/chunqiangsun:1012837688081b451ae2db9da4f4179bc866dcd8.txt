diff --git a/.circleci/config.yml b/.circleci/config.yml
index 0066dc8343..6185507724 100644
--- a/.circleci/config.yml
+++ b/.circleci/config.yml
@@ -13,11 +13,6 @@ jobs:
       JVM_OPTS: -Xmx3200m
     steps:
       - checkout
-      - restore_cache:
-          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
-      - run:
-          name: Download Dependencies
-          command: bash gradlew androidDependencies
       - run:
           name: build the whole project
           command: bash gradlew build -x test
@@ -48,22 +43,28 @@ jobs:
   release_tag:
     working_directory: ~/code
     docker:
-      - image: circleci/android:api-27-alpha
-    environment:
-      JVM_OPTS: -Xmx3200m
-    stpes:
+      - image:  circleci/golang:1.11
+    steps:
       - checkout
       - run:
           name: install github-release
-          command: brew install github-release
-
+          command: go get github.com/aktau/github-release          
       - run:
           name: release the tag
           command: |
-            tagdescription=$(sed -n '/## '${CIRCLE_TAG}'/,/## [0-9]*\.[0-9]*\.[0-9]/p'  CHANGELOG.md | sed '1d' | sed '$d')
-            tagname="AWS SDK for Android "${CIRCLE_TAG}
-            github-release release -s ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME}  -t ${CIRCLE_TAG} -d "$tagdescription" -n "$tagname"         
- 
+            set -x
+            export release_tag=${CIRCLE_TAG}
+            echo "release_tag:$release_tag"
+            export version=$(echo "$release_tag" | sed 's|.*v\([0-9\.]*\).*|\1|')
+            export tagdescription=$(sed -n "/## \[Release $version\]/,/## \[Release [0-9]*\.[0-9]*\.[0-9]\]/p"  CHANGELOG.md | sed '1d' | sed '$d')
+            echo "tagdescription:$tagdescription"
+            export tagname="AWS SDK for Android v$version"
+            echo "tagname:$tagname"
+            echo "token:${GH_TOKEN}"
+            echo "username:${CIRCLE_PROJECT_USERNAME}"
+            echo "repo:${CIRCLE_PROJECT_REPONAME}"
+            echo "$tagdescription" | github-release release  -s ${GH_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME}  -t $release_tag   --name  "$tagname" -d - 
+
   release_javadoc:
     docker:
       - image: circleci/android:api-27-alpha
@@ -72,14 +73,25 @@ jobs:
     steps:
       - checkout   
 
+      - run:
+          name: set version
+          command: |
+            set -x
+            export circleci_tag=${CIRCLE_TAG}
+            export version=$(echo "$circleci_tag" | sed 's|.*v\([0-9\.]*\).*|\1|')
+            echo "version:$version"
+            sed  -i   "s/@SDK_VERSION@/$version/"  gradle.properties  
+            cat gradle.properties 
       - run:
           name: generate documents
-          command: bash gradlew generateJavadocs
+          command: |
+            bash gradlew generateJavadocs
+            git checkout -- gradle.properties 
 
       - run:
           name: copy documents
           command: |
-            git config --local user.name "${GITHUB_USER}"
+            git config --local user.name "${CIRCLE_PROJECT_USERNAME}"
             git checkout  gh-pages
             cp -R build/docs/javadoc/*   docs/reference/
 
@@ -88,7 +100,7 @@ jobs:
           command: |
             git add docs/reference
             git commit -m "Update document via CircleCI"
-            git push -q https://${GITHUB_TOKEN}@github.com/aws-amplify/aws-sdk-android.git  
+            git push -q https://${GH_TOKEN}@github.com/aws-amplify/aws-sdk-android.git  
 
   release_maven:
     working_directory: ~/code
@@ -100,9 +112,6 @@ jobs:
  
     steps:
       - checkout
-      - restore_cache:
-          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "build.gradle" }}
-
       - run:
           name: install aws cli
           command: |
@@ -148,8 +157,6 @@ jobs:
             echo "$M2_HOME"
             bash CircleciScripts/maven-release.sh
 
-
-
 workflows:
   version: 2
   build_and_test:
@@ -157,29 +164,52 @@ workflows:
       - build:
           filters:
             branches:
-              ignore: /.*/
-      - unittest:
-          requires:
-            - build
-          filters:
-            branches:
-              ignore: /.*/
-
-  release_sdk:
-    jobs: 
-      - build:
-          filters:
-            branches:
-              ignore: /.*/
-            tags:
-              only: /^[0-9]+.[0-9]+.[0-9]+$/
-      - unittest:
-          requires:
-            - build            
-      - release_tag:
-          requires:
-            - unittest
-      - release_maven:    
-          requires:
-            - release_tag  
-        
+              ignore: /gh-.*/
+  #     - unittest:
+  #         requires:
+  #           - build
+
+  # release_sdk:
+  #   jobs: 
+  #     - build:
+  #         filters:
+  #           branches:
+  #             ignore: /.*/            
+  #           tags:
+  #             only: /^release_v[0-9]+.[0-9]+.[0-9]+$/
+
+  #     - unittest:
+  #         requires:
+  #           - build         
+  #         filters:
+  #           branches:
+  #             ignore: /.*/            
+  #           tags:
+  #             only: /^release_v[0-9]+.[0-9]+.[0-9]+$/
+
+  #     - release_tag:
+  #         requires:
+  #           - unittest
+  #         filters:
+  #           branches:
+  #             ignore: /.*/            
+  #           tags:
+  #             only: /^release_v[0-9]+.[0-9]+.[0-9]+$/
+
+  #     - release_maven:    
+  #         requires:
+  #           - release_tag  
+  #         filters:
+  #           branches:
+  #             ignore: /.*/            
+  #           tags:
+  #             only: /^release_v[0-9]+.[0-9]+.[0-9]+$/
+
+  #     - release_javadoc:    
+  #         requires:
+  #           - release_tag  
+  #         filters:
+  #           branches:
+  #             ignore: /.*/            
+  #           tags:
+  #             only: /^release_v[0-9]+.[0-9]+.[0-9]+$/
diff --git a/CHANGELOG.md b/CHANGELOG.md
index f0b4714ccc..1f76e29d3c 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,33 @@
 # Change Log - AWS SDK for Android
 
+## [Release 2.9.0](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.9.0)
+
+### New Features
+
+* **AWS Core Runtime**
+  * Added support for EU (Stockholm) region - `eu-north-1`.
+
+### Bug Fixes
+
+* **Amazon Pinpoint**
+    * `AppPackageName`, `AppTitle`, `AppVersionCode`, `SdkName` fields will now be accepted as part of the `Event` when submitting events from your app to Amazon Pinpoint. This fixes the issue where the event when exported by Amazon Kinesis Streams was missing these fields in the exported event.
+
+### Misc. Updates
+
+* Model updates for the following services
+    * Amazon Pinpoint
+        * **Breaking API Changes:** The following APIs have been changed:
+            * `PutEventsRequest`
+                * The type of `Endpoint` field is now changed back from `EndpointRequest` to `PublicEndpoint`.
+            * `PutEventsResponse`
+                * `PutEventsResponse` will have an `EventsResponse` field. The `Results` object in the `PutEventsResponse` is now nested under `EventsResponse`.
+
+* **Amazon Cognito Sync**
+  * This library is deprecated. Please use [AWS AppSync](https://aws-amplify.github.io/docs/android/api#graphql-realtime-and-offline) for synchronizing data across devices.
+
+* **Amazon Mobile Analytics**
+  * This library is deprecated. Please use [Amazon Pinpoint](https://aws-amplify.github.io/docs/android/analytics#using-amazon-pinpoint) for analytics.
+
 ## [Release 2.8.5](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.8.5)
 
 ### New Features
diff --git a/CircleciScripts/__pycache__/functions.cpython-37.pyc b/CircleciScripts/__pycache__/functions.cpython-37.pyc
new file mode 100644
index 0000000000..2050af9715
Binary files /dev/null and b/CircleciScripts/__pycache__/functions.cpython-37.pyc differ
diff --git a/CircleciScripts/run_unittest.py b/CircleciScripts/run_unittest.py
index 316334cb11..d73dd08969 100644
--- a/CircleciScripts/run_unittest.py
+++ b/CircleciScripts/run_unittest.py
@@ -2,18 +2,19 @@
 from functions import runtest
 from functions import TestTypes
 import sys
+import re
+
+with open("settings.gradle") as f:
+    lines = f.readlines()
+# you may also want to remove whitespace characters like `\n` at the end of each line
+testmodules = []
+for line in lines:
+    m = re.match(".*':(.*).*'", line)
+    if m is not None:
+        testmodules.append(m.group(1))
+    else:
+        print(line)
 
-testmodules = [
-    "aws-android-sdk-sdb",
-    "aws-android-sdk-polly",
-    "aws-android-sdk-kinesis",
-    "aws-android-sdk-pinpoint",
-    "aws-android-sdk-ddb-mapper",
-    "aws-android-sdk-mobileanalytics",
-    "aws-android-sdk-core",
-    "aws-android-sdk-lambda",
-    "aws-android-sdk-s3"
-] 
 test_results = sys.argv[1]
 runcommand("mkdir {0}".format(test_results))
 for module in testmodules:
diff --git a/aws-android-sdk-apigateway-core/pom.xml b/aws-android-sdk-apigateway-core/pom.xml
index e41c665a21..8da812e8a3 100644
--- a/aws-android-sdk-apigateway-core/pom.xml
+++ b/aws-android-sdk-apigateway-core/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-auth-core/pom.xml b/aws-android-sdk-auth-core/pom.xml
index 86f21f39dc..e6713280eb 100644
--- a/aws-android-sdk-auth-core/pom.xml
+++ b/aws-android-sdk-auth-core/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -29,7 +29,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
 
     <dependency>
@@ -49,8 +49,8 @@
         <extensions>true</extensions>
         <configuration>
           <sdk>
-            <platform>${env.ANDROID_PLATFORM}</platform>
-            <buildTools>${env.ANDROID_BUILDTOOL_VERSION}</buildTools>
+            <platform>11</platform>
+            <buildTools>19.1.0</buildTools>
           </sdk>
         </configuration>
       </plugin>
diff --git a/aws-android-sdk-auth-facebook/pom.xml b/aws-android-sdk-auth-facebook/pom.xml
index d7a52af3c5..9c78366854 100644
--- a/aws-android-sdk-auth-facebook/pom.xml
+++ b/aws-android-sdk-auth-facebook/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <repositories>
@@ -36,7 +36,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
       <type>aar</type>
     </dependency>
     <dependency>
@@ -80,8 +80,8 @@
         <extensions>true</extensions>
         <configuration>
           <sdk>
-            <platform>${env.ANDROID_PLATFORM}</platform>
-            <buildTools>${env.ANDROID_BUILDTOOL_VERSION}</buildTools>
+            <platform>25</platform>
+            <buildTools>19.1.0</buildTools>
           </sdk>
         </configuration>
       </plugin>
diff --git a/aws-android-sdk-auth-google/pom.xml b/aws-android-sdk-auth-google/pom.xml
index 9a730c429e..0baa1054b2 100644
--- a/aws-android-sdk-auth-google/pom.xml
+++ b/aws-android-sdk-auth-google/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <repositories>
@@ -40,7 +40,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
       <type>aar</type>
     </dependency>
     
@@ -77,8 +77,8 @@
         <extensions>true</extensions>
         <configuration>
           <sdk>
-            <platform>${env.ANDROID_PLATFORM}</platform>
-            <buildTools>${env.ANDROID_BUILDTOOL_VERSION}</buildTools>
+            <platform>25</platform>
+            <buildTools>19.1.0</buildTools>
           </sdk>
         </configuration>
       </plugin>
diff --git a/aws-android-sdk-auth-ui/pom.xml b/aws-android-sdk-auth-ui/pom.xml
index ac3c2b88fa..2405d39bd7 100644
--- a/aws-android-sdk-auth-ui/pom.xml
+++ b/aws-android-sdk-auth-ui/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <repositories>
@@ -36,28 +36,28 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
       <type>aar</type>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-google</artifactId>
       <optional>true</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
       <type>aar</type>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-facebook</artifactId>
       <optional>true</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
       <type>aar</type>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-userpools</artifactId>
       <optional>true</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
       <type>aar</type>
     </dependency>
     <dependency>
@@ -84,8 +84,8 @@
         <extensions>true</extensions>
         <configuration>
           <sdk>
-            <platform>${env.ANDROID_PLATFORM}</platform>
-            <buildTools>${env.ANDROID_BUILDTOOL_VERSION}</buildTools>
+            <platform>25</platform>
+            <buildTools>19.1.0</buildTools>
           </sdk>
         </configuration>
       </plugin>
diff --git a/aws-android-sdk-auth-userpools/pom.xml b/aws-android-sdk-auth-userpools/pom.xml
index e56da36a05..c5ef13041e 100644
--- a/aws-android-sdk-auth-userpools/pom.xml
+++ b/aws-android-sdk-auth-userpools/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <repositories>
@@ -36,14 +36,14 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-cognitoidentityprovider</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
     
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
       <type>aar</type>
     </dependency>
 
@@ -72,8 +72,8 @@
         <extensions>true</extensions>
         <configuration>
           <sdk>
-            <platform>${env.ANDROID_PLATFORM}</platform>
-            <buildTools>${env.ANDROID_BUILDTOOL_VERSION}</buildTools>
+            <platform>25</platform>
+            <buildTools>19.1.0</buildTools>
           </sdk>
         </configuration>
       </plugin>
diff --git a/aws-android-sdk-autoscaling/build.gradle b/aws-android-sdk-autoscaling/build.gradle
index 9415c6efd3..77c265925e 100644
--- a/aws-android-sdk-autoscaling/build.gradle
+++ b/aws-android-sdk-autoscaling/build.gradle
@@ -8,8 +8,3 @@ dependencies {
 
 sourceCompatibility = "1.7"
 targetCompatibility = "1.7"
-
-task myJavadocs11(type: Javadoc) {
-    source = sourceSets.main.allJava
-
-}
\ No newline at end of file
diff --git a/aws-android-sdk-autoscaling/pom.xml b/aws-android-sdk-autoscaling/pom.xml
index 4a347c05e9..c7eab85cab 100644
--- a/aws-android-sdk-autoscaling/pom.xml
+++ b/aws-android-sdk-autoscaling/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-cloudwatch/pom.xml b/aws-android-sdk-cloudwatch/pom.xml
index f927b792a2..9583c3e6a9 100644
--- a/aws-android-sdk-cloudwatch/pom.xml
+++ b/aws-android-sdk-cloudwatch/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-cognito/pom.xml b/aws-android-sdk-cognito/pom.xml
index 6adda0fbff..6e069e843f 100644
--- a/aws-android-sdk-cognito/pom.xml
+++ b/aws-android-sdk-cognito/pom.xml
@@ -6,14 +6,14 @@
   <artifactId>aws-android-sdk-cognito</artifactId>
   <packaging>jar</packaging>
   <name>AWS SDK for Android - Amazon Cognito Sync</name>
-  <version>2.8.5</version>
+  <version>2.9.0</version>
   <description>The AWS Android SDK for Amazon Cognito Sync module holds the client classes that are used for communicating with Amazon Cognito Sync Service</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <licenses>
@@ -29,7 +29,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
     <dependency>
       <groupId>com.google.android</groupId>
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/CognitoSyncManager.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/CognitoSyncManager.java
index ac852d5cf9..412448b6fd 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/CognitoSyncManager.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/CognitoSyncManager.java
@@ -60,8 +60,9 @@
  *     // override callbacks
  * });
  * </pre>
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
-
+@Deprecated
 public class CognitoSyncManager {
 
     private static final Log LOGGER = LogFactory.getLog(CognitoSyncManager.class);
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/Dataset.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/Dataset.java
index 8ca801c771..14aefba7de 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/Dataset.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/Dataset.java
@@ -42,7 +42,9 @@
  * // push changes to remote if needed
  * dataset.synchronizesyncCallback);
  * </pre>
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public interface Dataset {
 
     /**
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/DatasetMetadata.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/DatasetMetadata.java
index 171689b120..2531753359 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/DatasetMetadata.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/DatasetMetadata.java
@@ -25,7 +25,9 @@
  * reflect the most up-to-date information stored remotely. Please call
  * {@link CognitoSyncManager#refreshDatasetMetadata()} to pull the latest
  * information.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public final class DatasetMetadata {
     /**
      * Non empty String name of the dataset
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/DefaultDataset.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/DefaultDataset.java
index 6e20c8dee6..dc130bca5a 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/DefaultDataset.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/DefaultDataset.java
@@ -52,7 +52,9 @@
 /**
  * Default implementation of {@link Dataset}. It uses {@link CognitoSyncStorage}
  * as remote storage and {@link SQLiteLocalStorage} as local storage.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 class DefaultDataset implements Dataset {
 
     private static final Log LOGGER = LogFactory.getLog(DefaultDataset.class);
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/DefaultSyncCallback.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/DefaultSyncCallback.java
index 19d1f0534f..75587b4c56 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/DefaultSyncCallback.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/DefaultSyncCallback.java
@@ -14,7 +14,9 @@
  * A default implementation of SyncCallback. All methods but onConflict are
  * stubbed with logging. onConflict resolves conflicts using a 'last writer
  * wins' strategy
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class DefaultSyncCallback implements SyncCallback {
 
     private static final Log LOGGER = LogFactory.getLog(DefaultSyncCallback.class);
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/PushSyncUpdate.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/PushSyncUpdate.java
index b77ee0ac39..68c308a94d 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/PushSyncUpdate.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/PushSyncUpdate.java
@@ -28,7 +28,9 @@
  * that information to synchronize the local data. This class should only be used 
  * with a push sync notification, isPushSyncUpdate(Intent intent) can be used 
  * to verify as much. 
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class PushSyncUpdate {
     private final String source;
     private final String identityPoolId;
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/Record.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/Record.java
index 44e4b6baab..0a72ba7133 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/Record.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/Record.java
@@ -24,7 +24,9 @@
 /**
  * A Record is the element stored in a {@link Dataset}. There can be up to 1k
  * records or up to 1 MB in size in a {@link Dataset}.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public final class Record {
     /**
      * The key of this record. It's a non empty string.
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/SyncConflict.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/SyncConflict.java
index 1e1deabad0..c7aaab96af 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/SyncConflict.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/SyncConflict.java
@@ -22,7 +22,9 @@
 /**
  * This consists of the conflicting record from the remote storage and the local
  * storage.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class SyncConflict {
     private final String key;
     private final Record remoteRecord;
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DataAccessNotAuthorizedException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DataAccessNotAuthorizedException.java
index 27c6a38dc7..4e428fa909 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DataAccessNotAuthorizedException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DataAccessNotAuthorizedException.java
@@ -20,7 +20,9 @@
 /**
  * This exception is thrown when the data set of interest is not authorized to
  * be accessed
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class DataAccessNotAuthorizedException extends DataStorageException {
 
     private static final long serialVersionUID = 5067700802587075978L;
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DataConflictException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DataConflictException.java
index 98f22b9567..290b0e0fab 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DataConflictException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DataConflictException.java
@@ -19,7 +19,9 @@
 
 /**
  * This exception is thrown when an update fails due to conflicting states.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class DataConflictException extends DataStorageException {
 
     private static final long serialVersionUID = 4937963535057299466L;
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DataLimitExceededException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DataLimitExceededException.java
index a6d3146c89..134e617f8d 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DataLimitExceededException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DataLimitExceededException.java
@@ -5,7 +5,9 @@
  * This exception is thrown when the dataset operation exceeds certain limit,
  * e.g. maximum of 20 datasets per identity, 1024 records per dataset, and 1mb
  * in size per dataset, etc.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class DataLimitExceededException extends DataStorageException {
 
     private static final long serialVersionUID = 4722137117318719134L;
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DataStorageException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DataStorageException.java
index 544e9da374..ff44d47d79 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DataStorageException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DataStorageException.java
@@ -22,7 +22,9 @@
 /**
  * This exception is thrown when an error occurs during an data storage
  * operation.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class DataStorageException extends AmazonClientException {
 
     private static final long serialVersionUID = -6906342391685175623L;
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DatasetNotFoundException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DatasetNotFoundException.java
index 3fb480cf70..95dce86a64 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DatasetNotFoundException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/DatasetNotFoundException.java
@@ -20,7 +20,9 @@
 /**
  * This exception is thrown when the dataset that is attempted to access does
  * not exist.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class DatasetNotFoundException extends DataStorageException {
 
     private static final long serialVersionUID = -5043074429464815354L;
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/NetworkException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/NetworkException.java
index fc9c2a3364..71c1b17a56 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/NetworkException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/NetworkException.java
@@ -4,7 +4,9 @@
 /**
  * This exception is thrown when a service request failed due to network
  * connectivity problem.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class NetworkException extends DataStorageException {
 
     private static final long serialVersionUID = 8685123233927843893L;
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/RegistrationFailedException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/RegistrationFailedException.java
index 802b1ae24e..db8b92a47b 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/RegistrationFailedException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/RegistrationFailedException.java
@@ -21,7 +21,9 @@
 
 /**
  * An exception thrown when a registration of a device for silentsync fails
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class RegistrationFailedException extends AmazonClientException {
     private static final long serialVersionUID = 5706724903415180392L;
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/SubscribeFailedException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/SubscribeFailedException.java
index a81132d56b..2d99cba9e0 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/SubscribeFailedException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/SubscribeFailedException.java
@@ -22,7 +22,9 @@
 /**
  * An exception that's thrown when the subscription to a silent sync dataset
  * fails
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class SubscribeFailedException extends AmazonClientException {
     private static final long serialVersionUID = 5706724903415180392L;
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/UnsubscribeFailedException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/UnsubscribeFailedException.java
index 5fdb9f702e..3055881d69 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/UnsubscribeFailedException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/exceptions/UnsubscribeFailedException.java
@@ -21,7 +21,9 @@
 
 /**
  * An exception thrown when silent sync dataset unsubscription fails
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class UnsubscribeFailedException extends AmazonClientException {
 
     private static final long serialVersionUID = 5706724903415180392L;
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/storage/CognitoSyncStorage.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/storage/CognitoSyncStorage.java
index 770c40d016..1810854fe1 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/storage/CognitoSyncStorage.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/storage/CognitoSyncStorage.java
@@ -61,7 +61,9 @@
 
 /**
  * Cognito remote storage powered by AWS Cognito Sync service
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class CognitoSyncStorage implements RemoteDataStorage {
 
     private static final String TAG = "CognitoSyncStorage";
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/storage/LocalStorage.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/storage/LocalStorage.java
index 82f19994e8..b79cfedba1 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/storage/LocalStorage.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/storage/LocalStorage.java
@@ -28,7 +28,9 @@
 
 /**
  * The interface of local storage of {@link Dataset}.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public interface LocalStorage {
 
     /**
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/storage/RemoteDataStorage.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/storage/RemoteDataStorage.java
index a9630f6fb2..efa492134a 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/storage/RemoteDataStorage.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/storage/RemoteDataStorage.java
@@ -28,7 +28,9 @@
 
 /**
  * The interface of remote storage of {@link Dataset}.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public interface RemoteDataStorage {
 
     /**
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/storage/SQLiteLocalStorage.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/storage/SQLiteLocalStorage.java
index 22a72d53fd..edbbb42bf8 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/storage/SQLiteLocalStorage.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/storage/SQLiteLocalStorage.java
@@ -43,7 +43,9 @@
  * An SQLite implementation of {@link LocalStorage}. Datasets are stored in a
  * SQLite database. There are two tables: 'datasets' table stores metadata of a
  * dataset; 'records' stores records of a dataset.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class SQLiteLocalStorage implements LocalStorage {
 
     private static final String TAG = "SQLiteLocalStorage";
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/util/DatasetUtils.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/util/DatasetUtils.java
index 97a503e6fc..41e6b624c4 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/util/DatasetUtils.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/util/DatasetUtils.java
@@ -8,7 +8,9 @@
 
 /**
  * A utility class for datasets objects.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public final class DatasetUtils {
 
     /**
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/util/StringUtils.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/util/StringUtils.java
index 907fe388e9..618d7a9988 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/util/StringUtils.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/mobileconnectors/cognito/internal/util/StringUtils.java
@@ -21,7 +21,9 @@
 
 /**
  * A utility class of String objects.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public final class StringUtils {
     /**
      * UTF-8 {@link Charset}
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/AmazonCognitoSync.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/AmazonCognitoSync.java
index 51ec1a3d37..a30b8c9b0f 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/AmazonCognitoSync.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/AmazonCognitoSync.java
@@ -49,7 +49,9 @@
  * "http://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-sync.html"
  * >Developer Guide for iOS</a>.
  * </p>
- **/
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
+ */
+@Deprecated
 public interface AmazonCognitoSync {
 
     /**
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/AmazonCognitoSyncClient.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/AmazonCognitoSyncClient.java
index 464b7eae6d..cccc68ea7a 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/AmazonCognitoSyncClient.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/AmazonCognitoSyncClient.java
@@ -62,7 +62,9 @@
  * "http://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-sync.html"
  * >Developer Guide for iOS</a>.
  * </p>
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class AmazonCognitoSyncClient extends AmazonWebServiceClient implements AmazonCognitoSync {
     /** Provider for AWS credentials. */
     private AWSCredentialsProvider awsCredentialsProvider;
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/Dataset.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/Dataset.java
index ffb8337e1d..2b6abebd11 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/Dataset.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/Dataset.java
@@ -23,7 +23,9 @@
  * particular entity in an application (like a saved game). Datasets are
  * automatically created if they don't exist. Data is synced by dataset, and a
  * dataset can hold up to 1MB of key-value pairs.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class Dataset implements Serializable {
     /**
      * A name-spaced GUID (for example,
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/DeleteDatasetRequest.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/DeleteDatasetRequest.java
index efaf431e2a..4eab3ac835 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/DeleteDatasetRequest.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/DeleteDatasetRequest.java
@@ -30,7 +30,9 @@
  * This API can be called with temporary user credentials provided by Cognito
  * Identity or with developer credentials.
  * </p>
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class DeleteDatasetRequest extends AmazonWebServiceRequest implements Serializable {
     /**
      * A name-spaced GUID (for example,
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/DeleteDatasetResult.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/DeleteDatasetResult.java
index 9aa82531e7..e788a11daf 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/DeleteDatasetResult.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/DeleteDatasetResult.java
@@ -19,7 +19,9 @@
 
 /**
  * Response to a successful DeleteDataset request.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class DeleteDatasetResult implements Serializable {
     /**
      * A collection of data for an identity pool. An identity pool can have
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/DescribeDatasetRequest.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/DescribeDatasetRequest.java
index 6167a19f14..b6fb4960e8 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/DescribeDatasetRequest.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/DescribeDatasetRequest.java
@@ -31,7 +31,9 @@
  * Identity or with developer credentials. You should use Cognito Identity
  * credentials to make this API call.
  * </p>
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class DescribeDatasetRequest extends AmazonWebServiceRequest implements Serializable {
     /**
      * A name-spaced GUID (for example,
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/DescribeDatasetResult.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/DescribeDatasetResult.java
index cd65e2524b..6a0a666f61 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/DescribeDatasetResult.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/DescribeDatasetResult.java
@@ -19,7 +19,9 @@
 
 /**
  * Response to a successful DescribeDataset request.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class DescribeDatasetResult implements Serializable {
     /**
      * Meta data for a collection of data for an identity. An identity can have
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/InternalErrorException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/InternalErrorException.java
index 133ee8e012..ee342fb87e 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/InternalErrorException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/InternalErrorException.java
@@ -19,7 +19,9 @@
 
 /**
  * Indicates an internal service error.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class InternalErrorException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/InvalidConfigurationException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/InvalidConfigurationException.java
index 86bc498566..cd4bd530f4 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/InvalidConfigurationException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/InvalidConfigurationException.java
@@ -19,7 +19,9 @@
 
 /**
  * 
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class InvalidConfigurationException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/InvalidLambdaFunctionOutputException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/InvalidLambdaFunctionOutputException.java
index 275692a41d..a9bdd2ed44 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/InvalidLambdaFunctionOutputException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/InvalidLambdaFunctionOutputException.java
@@ -21,7 +21,9 @@
  * <p>
  * The AWS Lambda function returned invalid output or an exception.
  * </p>
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class InvalidLambdaFunctionOutputException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/InvalidParameterException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/InvalidParameterException.java
index 6324bfd47e..a96bf9624d 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/InvalidParameterException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/InvalidParameterException.java
@@ -20,7 +20,9 @@
 /**
  * Thrown when a request parameter does not comply with the associated
  * constraints.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class InvalidParameterException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/LambdaThrottledException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/LambdaThrottledException.java
index 5295477136..a50febc323 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/LambdaThrottledException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/LambdaThrottledException.java
@@ -21,7 +21,9 @@
  * <p>
  * AWS Lambda throttled your account, please contact AWS Support
  * </p>
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class LambdaThrottledException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/LimitExceededException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/LimitExceededException.java
index fa9978663a..d4c7390475 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/LimitExceededException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/LimitExceededException.java
@@ -20,7 +20,9 @@
 /**
  * Thrown when the limit on the number of objects or operations has been
  * exceeded.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class LimitExceededException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ListDatasetsRequest.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ListDatasetsRequest.java
index a7d081860a..c91c47ea6b 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ListDatasetsRequest.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ListDatasetsRequest.java
@@ -30,7 +30,9 @@
  * Cognito Identity or with developer credentials. You should use the Cognito
  * Identity credentials to make this API call.
  * </p>
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class ListDatasetsRequest extends AmazonWebServiceRequest implements Serializable {
     /**
      * A name-spaced GUID (for example,
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ListDatasetsResult.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ListDatasetsResult.java
index d37ac5f3e6..af6b3611c1 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ListDatasetsResult.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ListDatasetsResult.java
@@ -19,7 +19,9 @@
 
 /**
  * Returned for a successful ListDatasets request.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class ListDatasetsResult implements Serializable {
     /**
      * A set of datasets.
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ListRecordsRequest.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ListRecordsRequest.java
index a8e777759d..be1502572d 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ListRecordsRequest.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ListRecordsRequest.java
@@ -31,7 +31,9 @@
  * Identity or with developer credentials. You should use Cognito Identity
  * credentials to make this API call.
  * </p>
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class ListRecordsRequest extends AmazonWebServiceRequest implements Serializable {
     /**
      * A name-spaced GUID (for example,
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ListRecordsResult.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ListRecordsResult.java
index 72e4cbb426..f6cd8f4abf 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ListRecordsResult.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ListRecordsResult.java
@@ -19,7 +19,9 @@
 
 /**
  * Returned for a successful ListRecordsRequest.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class ListRecordsResult implements Serializable {
     /**
      * A list of all records.
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/NotAuthorizedException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/NotAuthorizedException.java
index cad7ca598f..ca849132f5 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/NotAuthorizedException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/NotAuthorizedException.java
@@ -19,7 +19,9 @@
 
 /**
  * Thrown when a user is not authorized to access the requested resource.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class NotAuthorizedException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/Operation.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/Operation.java
index e17cfa9eaf..3131d912f1 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/Operation.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/Operation.java
@@ -20,7 +20,9 @@
 
 /**
  * Operation
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public enum Operation {
 
     Replace("replace"),
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/Platform.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/Platform.java
index d8a9d93a18..1bceb5f4d4 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/Platform.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/Platform.java
@@ -20,7 +20,9 @@
 
 /**
  * Platform
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public enum Platform {
 
     APNS("APNS"),
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/Record.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/Record.java
index 491312bc30..e539a85c85 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/Record.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/Record.java
@@ -19,7 +19,9 @@
 
 /**
  * The basic data structure of a dataset.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class Record implements Serializable {
     /**
      * The key for the record.
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/RecordPatch.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/RecordPatch.java
index 2b07755f86..bad9fef5b2 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/RecordPatch.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/RecordPatch.java
@@ -19,7 +19,9 @@
 
 /**
  * An update operation for a record.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class RecordPatch implements Serializable {
     /**
      * An operation, either replace or remove.
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/RegisterDeviceRequest.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/RegisterDeviceRequest.java
index 0a5164e964..7e26a661af 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/RegisterDeviceRequest.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/RegisterDeviceRequest.java
@@ -27,7 +27,9 @@
  * This API can only be called with temporary credentials provided by Cognito
  * Identity. You cannot call this API with developer credentials.
  * </p>
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class RegisterDeviceRequest extends AmazonWebServiceRequest implements Serializable {
     /**
      * <p>
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/RegisterDeviceResult.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/RegisterDeviceResult.java
index 38ca8d94f7..b5ea72b3db 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/RegisterDeviceResult.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/RegisterDeviceResult.java
@@ -21,7 +21,9 @@
  * <p>
  * Response to a RegisterDevice request.
  * </p>
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class RegisterDeviceResult implements Serializable {
     /**
      * <p>
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ResourceConflictException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ResourceConflictException.java
index 353fbc3fc0..563b833c6d 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ResourceConflictException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ResourceConflictException.java
@@ -20,7 +20,9 @@
 /**
  * Thrown if an update can't be applied because the resource was changed by
  * another call and this would result in a conflict.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class ResourceConflictException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ResourceNotFoundException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ResourceNotFoundException.java
index bd742d7a8d..31773e09c7 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ResourceNotFoundException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/ResourceNotFoundException.java
@@ -19,7 +19,9 @@
 
 /**
  * Thrown if the resource doesn't exist.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class ResourceNotFoundException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/SubscribeToDatasetRequest.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/SubscribeToDatasetRequest.java
index 55400cd487..36378b7c98 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/SubscribeToDatasetRequest.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/SubscribeToDatasetRequest.java
@@ -28,7 +28,9 @@
  * This API can only be called with temporary credentials provided by Cognito
  * Identity. You cannot call this API with developer credentials.
  * </p>
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class SubscribeToDatasetRequest extends AmazonWebServiceRequest implements Serializable {
     /**
      * <p>
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/SubscribeToDatasetResult.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/SubscribeToDatasetResult.java
index 23e0db58d2..2f865d5274 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/SubscribeToDatasetResult.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/SubscribeToDatasetResult.java
@@ -21,7 +21,9 @@
  * <p>
  * Response to a SubscribeToDataset request.
  * </p>
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class SubscribeToDatasetResult implements Serializable {
     /**
      * Returns a string representation of this object; useful for testing and
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/TooManyRequestsException.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/TooManyRequestsException.java
index 244bfa646f..36f036b8ac 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/TooManyRequestsException.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/TooManyRequestsException.java
@@ -19,7 +19,9 @@
 
 /**
  * Thrown if the request is throttled.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class TooManyRequestsException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/UnsubscribeFromDatasetRequest.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/UnsubscribeFromDatasetRequest.java
index 6411a067bd..bdf076c63f 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/UnsubscribeFromDatasetRequest.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/UnsubscribeFromDatasetRequest.java
@@ -28,7 +28,9 @@
  * This API can only be called with temporary credentials provided by Cognito
  * Identity. You cannot call this API with developer credentials.
  * </p>
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class UnsubscribeFromDatasetRequest extends AmazonWebServiceRequest implements Serializable {
     /**
      * <p>
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/UnsubscribeFromDatasetResult.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/UnsubscribeFromDatasetResult.java
index e28a2fc05e..56a7857e2e 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/UnsubscribeFromDatasetResult.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/UnsubscribeFromDatasetResult.java
@@ -21,7 +21,9 @@
  * <p>
  * Response to an UnsubscribeFromDataset request.
  * </p>
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class UnsubscribeFromDatasetResult implements Serializable {
     /**
      * Returns a string representation of this object; useful for testing and
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/UpdateRecordsRequest.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/UpdateRecordsRequest.java
index 05037dab74..e06c65ce1e 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/UpdateRecordsRequest.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/UpdateRecordsRequest.java
@@ -42,7 +42,9 @@
  * This API can be called with temporary user credentials provided by Cognito
  * Identity or with developer credentials.
  * </p>
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class UpdateRecordsRequest extends AmazonWebServiceRequest implements Serializable {
     /**
      * A name-spaced GUID (for example,
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/UpdateRecordsResult.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/UpdateRecordsResult.java
index 99e9179140..ac04c473f2 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/UpdateRecordsResult.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/UpdateRecordsResult.java
@@ -19,7 +19,9 @@
 
 /**
  * Returned for a successful UpdateRecordsRequest.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class UpdateRecordsResult implements Serializable {
     /**
      * A list of records that have been updated.
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DatasetJsonMarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DatasetJsonMarshaller.java
index d2dbe4ffcd..3367b80c80 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DatasetJsonMarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DatasetJsonMarshaller.java
@@ -20,7 +20,10 @@
 
 /**
  * JSON marshaller for POJO Dataset
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 class DatasetJsonMarshaller {
 
     public void marshall(Dataset dataset, AwsJsonWriter jsonWriter) throws Exception {
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DatasetJsonUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DatasetJsonUnmarshaller.java
index 2c2228a9ae..bfd6880533 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DatasetJsonUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DatasetJsonUnmarshaller.java
@@ -22,7 +22,9 @@
 
 /**
  * JSON unmarshaller for POJO Dataset
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 class DatasetJsonUnmarshaller implements Unmarshaller<Dataset, JsonUnmarshallerContext> {
 
     public Dataset unmarshall(JsonUnmarshallerContext context) throws Exception {
@@ -36,19 +38,26 @@ public Dataset unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("IdentityId")) {
-                dataset.setIdentityId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                dataset.setIdentityId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("DatasetName")) {
-                dataset.setDatasetName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                dataset.setDatasetName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CreationDate")) {
-                dataset.setCreationDate(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                dataset.setCreationDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastModifiedDate")) {
-                dataset.setLastModifiedDate(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                dataset.setLastModifiedDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastModifiedBy")) {
-                dataset.setLastModifiedBy(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                dataset.setLastModifiedBy(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("DataStorage")) {
-                dataset.setDataStorage(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                dataset.setDataStorage(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("NumRecords")) {
-                dataset.setNumRecords(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                dataset.setNumRecords(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DeleteDatasetRequestMarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DeleteDatasetRequestMarshaller.java
index 20d41f6283..0eb3a5e687 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DeleteDatasetRequestMarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DeleteDatasetRequestMarshaller.java
@@ -36,7 +36,10 @@
 
 /**
  * JSON request marshaller for DeleteDatasetRequest
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class DeleteDatasetRequestMarshaller implements
         Marshaller<Request<DeleteDatasetRequest>, DeleteDatasetRequest> {
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DeleteDatasetResultJsonUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DeleteDatasetResultJsonUnmarshaller.java
index a5d40cb9cf..1e64f3ccd8 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DeleteDatasetResultJsonUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DeleteDatasetResultJsonUnmarshaller.java
@@ -22,7 +22,9 @@
 
 /**
  * JSON unmarshaller for response DeleteDatasetResult
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class DeleteDatasetResultJsonUnmarshaller implements
         Unmarshaller<DeleteDatasetResult, JsonUnmarshallerContext> {
 
@@ -34,8 +36,8 @@ public DeleteDatasetResult unmarshall(JsonUnmarshallerContext context) throws Ex
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Dataset")) {
-                deleteDatasetResult.setDataset(DatasetJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                deleteDatasetResult.setDataset(DatasetJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DescribeDatasetRequestMarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DescribeDatasetRequestMarshaller.java
index c5b30a47d0..a3601ed4e9 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DescribeDatasetRequestMarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DescribeDatasetRequestMarshaller.java
@@ -36,7 +36,9 @@
 
 /**
  * JSON request marshaller for DescribeDatasetRequest
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class DescribeDatasetRequestMarshaller implements
         Marshaller<Request<DescribeDatasetRequest>, DescribeDatasetRequest> {
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DescribeDatasetResultJsonUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DescribeDatasetResultJsonUnmarshaller.java
index b98228edda..6271b301b9 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DescribeDatasetResultJsonUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/DescribeDatasetResultJsonUnmarshaller.java
@@ -22,7 +22,9 @@
 
 /**
  * JSON unmarshaller for response DescribeDatasetResult
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class DescribeDatasetResultJsonUnmarshaller implements
         Unmarshaller<DescribeDatasetResult, JsonUnmarshallerContext> {
 
@@ -34,8 +36,8 @@ public DescribeDatasetResult unmarshall(JsonUnmarshallerContext context) throws
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Dataset")) {
-                describeDatasetResult.setDataset(DatasetJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                describeDatasetResult.setDataset(DatasetJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/InternalErrorExceptionUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/InternalErrorExceptionUnmarshaller.java
index e5f0ff483e..f7006da4bf 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/InternalErrorExceptionUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/InternalErrorExceptionUnmarshaller.java
@@ -17,12 +17,13 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.cognitosync.model.InternalErrorException;
 
+/**
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
+ */
+@Deprecated
 public class InternalErrorExceptionUnmarshaller extends JsonErrorUnmarshaller {
 
     public InternalErrorExceptionUnmarshaller() {
@@ -42,31 +43,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InternalErrorException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InternalErrorException internalErrorException = new InternalErrorException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                internalErrorException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return internalErrorException;
-    }
 }
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/InvalidConfigurationExceptionUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/InvalidConfigurationExceptionUnmarshaller.java
index 8639b53f09..bd8489844c 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/InvalidConfigurationExceptionUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/InvalidConfigurationExceptionUnmarshaller.java
@@ -17,12 +17,13 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.cognitosync.model.InvalidConfigurationException;
 
+/**
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
+ */
+@Deprecated
 public class InvalidConfigurationExceptionUnmarshaller extends JsonErrorUnmarshaller {
 
     public InvalidConfigurationExceptionUnmarshaller() {
@@ -42,32 +43,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidConfigurationException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidConfigurationException invalidConfigurationException = new InvalidConfigurationException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidConfigurationException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidConfigurationException;
-    }
 }
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/InvalidLambdaFunctionOutputExceptionUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/InvalidLambdaFunctionOutputExceptionUnmarshaller.java
index 7bde0ab405..db8e9014b1 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/InvalidLambdaFunctionOutputExceptionUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/InvalidLambdaFunctionOutputExceptionUnmarshaller.java
@@ -17,12 +17,13 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.cognitosync.model.InvalidLambdaFunctionOutputException;
 
+/**
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
+ */
+@Deprecated
 public class InvalidLambdaFunctionOutputExceptionUnmarshaller extends JsonErrorUnmarshaller {
 
     public InvalidLambdaFunctionOutputExceptionUnmarshaller() {
@@ -43,32 +44,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidLambdaFunctionOutputException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidLambdaFunctionOutputException invalidLambdaFunctionOutputException = new InvalidLambdaFunctionOutputException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidLambdaFunctionOutputException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidLambdaFunctionOutputException;
-    }
 }
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/InvalidParameterExceptionUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/InvalidParameterExceptionUnmarshaller.java
index 0d6b650c2a..e8a0a54374 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/InvalidParameterExceptionUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/InvalidParameterExceptionUnmarshaller.java
@@ -17,12 +17,13 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.cognitosync.model.InvalidParameterException;
 
+/**
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
+ */
+@Deprecated
 public class InvalidParameterExceptionUnmarshaller extends JsonErrorUnmarshaller {
 
     public InvalidParameterExceptionUnmarshaller() {
@@ -42,31 +43,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidParameterException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidParameterException invalidParameterException = new InvalidParameterException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidParameterException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidParameterException;
-    }
 }
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/LambdaThrottledExceptionUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/LambdaThrottledExceptionUnmarshaller.java
index 3a77ee6f69..345bff849b 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/LambdaThrottledExceptionUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/LambdaThrottledExceptionUnmarshaller.java
@@ -17,12 +17,13 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.cognitosync.model.LambdaThrottledException;
 
+/**
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
+ */
+@Deprecated
 public class LambdaThrottledExceptionUnmarshaller extends JsonErrorUnmarshaller {
 
     public LambdaThrottledExceptionUnmarshaller() {
@@ -42,31 +43,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public LambdaThrottledException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        LambdaThrottledException lambdaThrottledException = new LambdaThrottledException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                lambdaThrottledException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return lambdaThrottledException;
-    }
 }
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/LimitExceededExceptionUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/LimitExceededExceptionUnmarshaller.java
index 4ff7518409..4427299625 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/LimitExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/LimitExceededExceptionUnmarshaller.java
@@ -17,12 +17,13 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.cognitosync.model.LimitExceededException;
 
+/**
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
+ */
+@Deprecated
 public class LimitExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
 
     public LimitExceededExceptionUnmarshaller() {
@@ -42,31 +43,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public LimitExceededException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        LimitExceededException limitExceededException = new LimitExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                limitExceededException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return limitExceededException;
-    }
 }
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ListDatasetsRequestMarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ListDatasetsRequestMarshaller.java
index 747bd792e3..5dbce6bd7f 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ListDatasetsRequestMarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ListDatasetsRequestMarshaller.java
@@ -36,7 +36,9 @@
 
 /**
  * JSON request marshaller for ListDatasetsRequest
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class ListDatasetsRequestMarshaller implements
         Marshaller<Request<ListDatasetsRequest>, ListDatasetsRequest> {
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ListDatasetsResultJsonUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ListDatasetsResultJsonUnmarshaller.java
index 17703f208c..bd6a61c586 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ListDatasetsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ListDatasetsResultJsonUnmarshaller.java
@@ -22,7 +22,9 @@
 
 /**
  * JSON unmarshaller for response ListDatasetsResult
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class ListDatasetsResultJsonUnmarshaller implements
         Unmarshaller<ListDatasetsResult, JsonUnmarshallerContext> {
 
@@ -35,13 +37,15 @@ public ListDatasetsResult unmarshall(JsonUnmarshallerContext context) throws Exc
             String name = reader.nextName();
             if (name.equals("Datasets")) {
                 listDatasetsResult.setDatasets(new ListUnmarshaller<Dataset>(
-                        DatasetJsonUnmarshaller.getInstance()).unmarshall(context));
+                        DatasetJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Count")) {
-                listDatasetsResult.setCount(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listDatasetsResult.setCount(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("NextToken")) {
-                listDatasetsResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listDatasetsResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ListRecordsRequestMarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ListRecordsRequestMarshaller.java
index 1e9430834c..385d062ef6 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ListRecordsRequestMarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ListRecordsRequestMarshaller.java
@@ -36,7 +36,9 @@
 
 /**
  * JSON request marshaller for ListRecordsRequest
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class ListRecordsRequestMarshaller implements
         Marshaller<Request<ListRecordsRequest>, ListRecordsRequest> {
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ListRecordsResultJsonUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ListRecordsResultJsonUnmarshaller.java
index b4b3e8120a..754d7dfdd9 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ListRecordsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ListRecordsResultJsonUnmarshaller.java
@@ -22,7 +22,9 @@
 
 /**
  * JSON unmarshaller for response ListRecordsResult
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class ListRecordsResultJsonUnmarshaller implements
         Unmarshaller<ListRecordsResult, JsonUnmarshallerContext> {
 
@@ -35,10 +37,12 @@ public ListRecordsResult unmarshall(JsonUnmarshallerContext context) throws Exce
             String name = reader.nextName();
             if (name.equals("Records")) {
                 listRecordsResult.setRecords(new ListUnmarshaller<Record>(RecordJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextToken")) {
-                listRecordsResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listRecordsResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Count")) {
                 listRecordsResult.setCount(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -50,13 +54,16 @@ public ListRecordsResult unmarshall(JsonUnmarshallerContext context) throws Exce
                         .unmarshall(context));
             } else if (name.equals("MergedDatasetNames")) {
                 listRecordsResult.setMergedDatasetNames(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("DatasetExists")) {
                 listRecordsResult.setDatasetExists(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("DatasetDeletedAfterRequestedSyncCount")) {
                 listRecordsResult.setDatasetDeletedAfterRequestedSyncCount(BooleanJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SyncSessionToken")) {
                 listRecordsResult.setSyncSessionToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/NotAuthorizedExceptionUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/NotAuthorizedExceptionUnmarshaller.java
index 6a83cc1945..883a913800 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/NotAuthorizedExceptionUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/NotAuthorizedExceptionUnmarshaller.java
@@ -17,12 +17,13 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.cognitosync.model.NotAuthorizedException;
 
+/**
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
+ */
+@Deprecated
 public class NotAuthorizedExceptionUnmarshaller extends JsonErrorUnmarshaller {
 
     public NotAuthorizedExceptionUnmarshaller() {
@@ -42,31 +43,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public NotAuthorizedException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        NotAuthorizedException notAuthorizedException = new NotAuthorizedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                notAuthorizedException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return notAuthorizedException;
-    }
 }
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RecordJsonMarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RecordJsonMarshaller.java
index 2f767fc5d9..3c91b77827 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RecordJsonMarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RecordJsonMarshaller.java
@@ -20,7 +20,9 @@
 
 /**
  * JSON marshaller for POJO Record
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 class RecordJsonMarshaller {
 
     public void marshall(Record record, AwsJsonWriter jsonWriter) throws Exception {
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RecordJsonUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RecordJsonUnmarshaller.java
index c8dc7d77e8..888c0c6400 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RecordJsonUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RecordJsonUnmarshaller.java
@@ -22,7 +22,9 @@
 
 /**
  * JSON unmarshaller for POJO Record
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 class RecordJsonUnmarshaller implements Unmarshaller<Record, JsonUnmarshallerContext> {
 
     public Record unmarshall(JsonUnmarshallerContext context) throws Exception {
@@ -36,18 +38,23 @@ public Record unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Key")) {
-                record.setKey(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                record.setKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Value")) {
-                record.setValue(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                record.setValue(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SyncCount")) {
-                record.setSyncCount(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                record.setSyncCount(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastModifiedDate")) {
-                record.setLastModifiedDate(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                record.setLastModifiedDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastModifiedBy")) {
-                record.setLastModifiedBy(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                record.setLastModifiedBy(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("DeviceLastModifiedDate")) {
-                record.setDeviceLastModifiedDate(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                record.setDeviceLastModifiedDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RecordPatchJsonMarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RecordPatchJsonMarshaller.java
index f582371982..5cb6163f9a 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RecordPatchJsonMarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RecordPatchJsonMarshaller.java
@@ -20,7 +20,9 @@
 
 /**
  * JSON marshaller for POJO RecordPatch
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 class RecordPatchJsonMarshaller {
 
     public void marshall(RecordPatch recordPatch, AwsJsonWriter jsonWriter) throws Exception {
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RecordPatchJsonUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RecordPatchJsonUnmarshaller.java
index 18d006dd81..cbf096e858 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RecordPatchJsonUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RecordPatchJsonUnmarshaller.java
@@ -22,7 +22,9 @@
 
 /**
  * JSON unmarshaller for POJO RecordPatch
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 class RecordPatchJsonUnmarshaller implements Unmarshaller<RecordPatch, JsonUnmarshallerContext> {
 
     public RecordPatch unmarshall(JsonUnmarshallerContext context) throws Exception {
@@ -36,13 +38,17 @@ public RecordPatch unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Op")) {
-                recordPatch.setOp(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                recordPatch.setOp(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Key")) {
-                recordPatch.setKey(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                recordPatch.setKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Value")) {
-                recordPatch.setValue(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                recordPatch.setValue(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SyncCount")) {
-                recordPatch.setSyncCount(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                recordPatch.setSyncCount(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("DeviceLastModifiedDate")) {
                 recordPatch.setDeviceLastModifiedDate(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RegisterDeviceRequestMarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RegisterDeviceRequestMarshaller.java
index 0a18a40938..ad975b97b0 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RegisterDeviceRequestMarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RegisterDeviceRequestMarshaller.java
@@ -36,7 +36,9 @@
 
 /**
  * JSON request marshaller for RegisterDeviceRequest
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class RegisterDeviceRequestMarshaller implements
         Marshaller<Request<RegisterDeviceRequest>, RegisterDeviceRequest> {
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RegisterDeviceResultJsonUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RegisterDeviceResultJsonUnmarshaller.java
index ccefa25ffb..8ce7300351 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RegisterDeviceResultJsonUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/RegisterDeviceResultJsonUnmarshaller.java
@@ -22,7 +22,9 @@
 
 /**
  * JSON unmarshaller for response RegisterDeviceResult
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class RegisterDeviceResultJsonUnmarshaller implements
         Unmarshaller<RegisterDeviceResult, JsonUnmarshallerContext> {
 
@@ -34,8 +36,8 @@ public RegisterDeviceResult unmarshall(JsonUnmarshallerContext context) throws E
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("DeviceId")) {
-                registerDeviceResult.setDeviceId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                registerDeviceResult.setDeviceId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ResourceConflictExceptionUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ResourceConflictExceptionUnmarshaller.java
index f1a3fd3b35..5ea4432ed2 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ResourceConflictExceptionUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ResourceConflictExceptionUnmarshaller.java
@@ -17,12 +17,13 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.cognitosync.model.ResourceConflictException;
 
+/**
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
+ */
+@Deprecated
 public class ResourceConflictExceptionUnmarshaller extends JsonErrorUnmarshaller {
 
     public ResourceConflictExceptionUnmarshaller() {
@@ -42,31 +43,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceConflictException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceConflictException resourceConflictException = new ResourceConflictException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceConflictException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceConflictException;
-    }
 }
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ResourceNotFoundExceptionUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ResourceNotFoundExceptionUnmarshaller.java
index 758d14c0b0..00adf19179 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ResourceNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/ResourceNotFoundExceptionUnmarshaller.java
@@ -17,12 +17,13 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.cognitosync.model.ResourceNotFoundException;
 
+/**
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
+ */
+@Deprecated
 public class ResourceNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
 
     public ResourceNotFoundExceptionUnmarshaller() {
@@ -42,31 +43,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceNotFoundException resourceNotFoundException = new ResourceNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/SubscribeToDatasetRequestMarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/SubscribeToDatasetRequestMarshaller.java
index 68d50591b7..3898b2377f 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/SubscribeToDatasetRequestMarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/SubscribeToDatasetRequestMarshaller.java
@@ -36,7 +36,9 @@
 
 /**
  * JSON request marshaller for SubscribeToDatasetRequest
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class SubscribeToDatasetRequestMarshaller implements
         Marshaller<Request<SubscribeToDatasetRequest>, SubscribeToDatasetRequest> {
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/SubscribeToDatasetResultJsonUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/SubscribeToDatasetResultJsonUnmarshaller.java
index 04afbeaec7..81601d68e5 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/SubscribeToDatasetResultJsonUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/SubscribeToDatasetResultJsonUnmarshaller.java
@@ -22,7 +22,9 @@
 
 /**
  * JSON unmarshaller for response SubscribeToDatasetResult
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class SubscribeToDatasetResultJsonUnmarshaller implements
         Unmarshaller<SubscribeToDatasetResult, JsonUnmarshallerContext> {
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/TooManyRequestsExceptionUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/TooManyRequestsExceptionUnmarshaller.java
index 5ff78c2a0a..aaa2445444 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/TooManyRequestsExceptionUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/TooManyRequestsExceptionUnmarshaller.java
@@ -17,12 +17,13 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.cognitosync.model.TooManyRequestsException;
 
+/**
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
+ */
+@Deprecated
 public class TooManyRequestsExceptionUnmarshaller extends JsonErrorUnmarshaller {
 
     public TooManyRequestsExceptionUnmarshaller() {
@@ -42,31 +43,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public TooManyRequestsException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        TooManyRequestsException tooManyRequestsException = new TooManyRequestsException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                tooManyRequestsException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return tooManyRequestsException;
-    }
 }
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/UnsubscribeFromDatasetRequestMarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/UnsubscribeFromDatasetRequestMarshaller.java
index 1d576a7b20..16e58b7583 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/UnsubscribeFromDatasetRequestMarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/UnsubscribeFromDatasetRequestMarshaller.java
@@ -36,7 +36,9 @@
 
 /**
  * JSON request marshaller for UnsubscribeFromDatasetRequest
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class UnsubscribeFromDatasetRequestMarshaller implements
         Marshaller<Request<UnsubscribeFromDatasetRequest>, UnsubscribeFromDatasetRequest> {
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/UnsubscribeFromDatasetResultJsonUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/UnsubscribeFromDatasetResultJsonUnmarshaller.java
index 38e2f8f2fa..8d000e3d61 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/UnsubscribeFromDatasetResultJsonUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/UnsubscribeFromDatasetResultJsonUnmarshaller.java
@@ -22,7 +22,9 @@
 
 /**
  * JSON unmarshaller for response UnsubscribeFromDatasetResult
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class UnsubscribeFromDatasetResultJsonUnmarshaller implements
         Unmarshaller<UnsubscribeFromDatasetResult, JsonUnmarshallerContext> {
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/UpdateRecordsRequestMarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/UpdateRecordsRequestMarshaller.java
index e6cc2efc0d..1846c5a022 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/UpdateRecordsRequestMarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/UpdateRecordsRequestMarshaller.java
@@ -36,7 +36,9 @@
 
 /**
  * JSON request marshaller for UpdateRecordsRequest
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class UpdateRecordsRequestMarshaller implements
         Marshaller<Request<UpdateRecordsRequest>, UpdateRecordsRequest> {
 
diff --git a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/UpdateRecordsResultJsonUnmarshaller.java b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/UpdateRecordsResultJsonUnmarshaller.java
index ddc963e2ad..72c958bd16 100644
--- a/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/UpdateRecordsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-cognito/src/main/java/com/amazonaws/services/cognitosync/model/transform/UpdateRecordsResultJsonUnmarshaller.java
@@ -22,7 +22,9 @@
 
 /**
  * JSON unmarshaller for response UpdateRecordsResult
+ * @deprecated The Amazon Cognito Sync SDK for Android is deprecated as of release 2.9.0. Please use the AWS AppSync SDK for Android along with AWS AppSync service instead.
  */
+@Deprecated
 public class UpdateRecordsResultJsonUnmarshaller implements
         Unmarshaller<UpdateRecordsResult, JsonUnmarshallerContext> {
 
@@ -35,7 +37,9 @@ public UpdateRecordsResult unmarshall(JsonUnmarshallerContext context) throws Ex
             String name = reader.nextName();
             if (name.equals("Records")) {
                 updateRecordsResult.setRecords(new ListUnmarshaller<Record>(RecordJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties b/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties
index 1ae28697d6..a75d4a60cf 100644
--- a/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties
+++ b/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties
@@ -1,3 +1,3 @@
 fabric-identifier=com.amazonaws.aws-android-sdk-cognito
-fabric-version=2.8.5
+fabric-version=2.9.0
 fabric-build-type=binary
diff --git a/aws-android-sdk-cognitoauth/pom.xml b/aws-android-sdk-cognitoauth/pom.xml
index a6b749a1e5..69773898a4 100644
--- a/aws-android-sdk-cognitoauth/pom.xml
+++ b/aws-android-sdk-cognitoauth/pom.xml
@@ -6,14 +6,14 @@
   <artifactId>aws-android-sdk-cognitoauth</artifactId>
   <packaging>aar</packaging>
   <name>AWS SDK for Android - Amazon Cognito Auth</name>
-  <version>2.8.5</version>
+  <version>2.9.0</version>
   <description>The AWS Android SDK with app integration for Amazon Cognito Your User Pools Service</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <repositories>
@@ -60,16 +60,15 @@
   <build>
     <plugins>
       <plugin>
-          <groupId>com.simpligility.maven.plugins</groupId>
-          <artifactId>android-maven-plugin</artifactId>
-          <version>4.5.0</version>
-          <extensions>true</extensions>
-          <configuration>
-            <sdk>
-              <platform>${env.ANDROID_PLATFORM}</platform>
-              <buildTools>${env.ANDROID_BUILDTOOL_VERSION}</buildTools>
-            </sdk>
-          </configuration>
+                <groupId>com.simpligility.maven.plugins</groupId>
+                <artifactId>android-maven-plugin</artifactId>
+                <version>4.5.0</version>
+                <extensions>true</extensions>
+                <configuration>
+                    <sdk>
+                        <platform>15</platform>
+                    </sdk>
+                </configuration>
       </plugin>
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
diff --git a/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/Auth.java b/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/Auth.java
index 5a58c06442..1f805192f8 100644
--- a/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/Auth.java
+++ b/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/Auth.java
@@ -19,6 +19,7 @@
 
 import android.content.Context;
 import android.net.Uri;
+import android.os.Bundle;
 import android.util.Patterns;
 
 import com.amazonaws.mobileconnectors.cognitoauth.exceptions.AuthInvalidParameterException;
@@ -59,6 +60,11 @@
      */
     private final String idpIdentifier;
 
+    /**
+     * Bundle containing customization flags for chrome custom tab
+     */
+    private final Bundle customTabExtras;
+
     /**
      * This identifies the settings for additional userPool features.
      */
@@ -143,7 +149,8 @@ private Auth(final Context context,
                  final AuthHandler userHandler,
                  final boolean advancedSecurityDataCollectionFlag,
                  final String identityProvider,
-                 final String idpIdentifier) {
+                 final String idpIdentifier,
+                 final Bundle customTabExtras) {
         this.context = context;
         this.appWebDomain = appWebDomain;
         this.appId = appId;
@@ -158,6 +165,7 @@ private Auth(final Context context,
         this.advancedSecurityDataCollectionFlag = advancedSecurityDataCollectionFlag;
         this.identityProvider = identityProvider;
         this.idpIdentifier = idpIdentifier;
+        this.customTabExtras = customTabExtras;
         getCurrentUser();
     }
 
@@ -222,6 +230,11 @@ private Auth(final Context context,
          */
         private String mIdpIdentifier;
 
+        /**
+         * Bundle of flags to customize chrome custom tab UI
+         */
+        private Bundle mCustomTabsExtras;
+
         /**
          * Flag indicating if data collection for advanced security mode is enabled.
          * By default this is enabled.
@@ -400,6 +413,20 @@ public Builder setIdpIdentifier(final String mIdpIdentifier) {
             return this;
         }
 
+        /**
+         * Sets customization bundle. This allow to customize chrome custom tab.
+         * <p>
+         *     Optional. Set a bundle to customize UI
+         * </p>
+         * @param mCustomTabsExtras Optional: Pass to chrome custom tab a bundle of customization flags
+         * @return A reference to this builder.
+         */
+        @SuppressWarnings("checkstyle:hiddenfield")
+        public Builder setCustomTabsExtras(final Bundle mCustomTabsExtras) {
+            this.mCustomTabsExtras = mCustomTabsExtras;
+            return this;
+        }
+
         /**
          * Instantiates {@link Auth} with the set options.
          * @return {@link Auth}.
@@ -417,7 +444,8 @@ public Auth build() {
                     this.mUserHandler,
                     this.mAdvancedSecurityDataCollectionFlag,
                     this.mIdentityProvider,
-                    this.mIdpIdentifier);
+                    this.mIdpIdentifier,
+                    this.mCustomTabsExtras);
         }
 
 
@@ -559,6 +587,13 @@ public String getIdpIdentifier() {
         return idpIdentifier;
     }
 
+    /**
+     * @return Extra customization bundle for this {@link Auth} instance.
+     */
+    public Bundle getCustomTabExtras() {
+        return customTabExtras;
+    }
+
     /**
      * Use this method to get tokens for a user, the tokens are returned though the callback.
      * {@link AuthHandler#onSuccess(AuthUserSession)}.
diff --git a/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java b/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java
index 8069422c68..0e222883a4 100644
--- a/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java
+++ b/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java
@@ -531,6 +531,8 @@ private void launchCustomTabs(final Uri uri) {
     	try {
 	        CustomTabsIntent.Builder builder = new CustomTabsIntent.Builder(mCustomTabsSession);
 	        mCustomTabsIntent = builder.build();
+	        if(pool.getCustomTabExtras() != null)
+	            mCustomTabsIntent.intent.putExtras(pool.getCustomTabExtras());
 	        mCustomTabsIntent.intent.setPackage(ClientConstants.CHROME_PACKAGE);
 	        mCustomTabsIntent.intent.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
 	        mCustomTabsIntent.intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
diff --git a/aws-android-sdk-cognitoidentityprovider/pom.xml b/aws-android-sdk-cognitoidentityprovider/pom.xml
index c5c78f1de7..5d8e34fc0d 100644
--- a/aws-android-sdk-cognitoidentityprovider/pom.xml
+++ b/aws-android-sdk-cognitoidentityprovider/pom.xml
@@ -6,14 +6,14 @@
   <artifactId>aws-android-sdk-cognitoidentityprovider</artifactId>
   <packaging>jar</packaging>
   <name>AWS SDK for Android - Amazon Cognito Identity Provider</name>
-  <version>2.8.5</version>
+  <version>2.9.0</version>
   <description>The AWS Android SDK for Amazon Cognito Identity Provider module holds the client classes that are used for communicating with Amazon Cognito Identity Provider Service</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <licenses>
@@ -29,7 +29,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
diff --git a/aws-android-sdk-comprehend/pom.xml b/aws-android-sdk-comprehend/pom.xml
index 688902d008..43bb07317c 100644
--- a/aws-android-sdk-comprehend/pom.xml
+++ b/aws-android-sdk-comprehend/pom.xml
@@ -11,14 +11,14 @@
     <parent>
         <groupId>com.amazonaws</groupId>
         <artifactId>aws-android-sdk-pom</artifactId>
-        <version>2.8.5</version>
+        <version>2.9.0</version>
     </parent>
     <dependencies>
         <dependency>
             <groupId>com.amazonaws</groupId>
             <artifactId>aws-android-sdk-core</artifactId>
             <optional>false</optional>
-            <version>2.8.5</version>
+            <version>2.9.0</version>
         </dependency>
     </dependencies>
     <build>
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectDominantLanguageItemResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectDominantLanguageItemResultJsonUnmarshaller.java
index 96b2fc3f41..85586d0550 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectDominantLanguageItemResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectDominantLanguageItemResultJsonUnmarshaller.java
@@ -39,11 +39,14 @@ public BatchDetectDominantLanguageItemResult unmarshall(JsonUnmarshallerContext
             String name = reader.nextName();
             if (name.equals("Index")) {
                 batchDetectDominantLanguageItemResult.setIndex(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Languages")) {
                 batchDetectDominantLanguageItemResult
                         .setLanguages(new ListUnmarshaller<DominantLanguage>(
-                                DominantLanguageJsonUnmarshaller.getInstance()).unmarshall(context));
+                                DominantLanguageJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectDominantLanguageResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectDominantLanguageResultJsonUnmarshaller.java
index c3737aad41..246ae43a7d 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectDominantLanguageResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectDominantLanguageResultJsonUnmarshaller.java
@@ -37,12 +37,15 @@ public BatchDetectDominantLanguageResult unmarshall(JsonUnmarshallerContext cont
             if (name.equals("ResultList")) {
                 batchDetectDominantLanguageResult
                         .setResultList(new ListUnmarshaller<BatchDetectDominantLanguageItemResult>(
-                                BatchDetectDominantLanguageItemResultJsonUnmarshaller.getInstance())
+                                BatchDetectDominantLanguageItemResultJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("ErrorList")) {
                 batchDetectDominantLanguageResult
                         .setErrorList(new ListUnmarshaller<BatchItemError>(
-                                BatchItemErrorJsonUnmarshaller.getInstance()).unmarshall(context));
+                                BatchItemErrorJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectEntitiesItemResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectEntitiesItemResultJsonUnmarshaller.java
index fc1d6eefc4..a3d8005042 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectEntitiesItemResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectEntitiesItemResultJsonUnmarshaller.java
@@ -42,7 +42,9 @@ public BatchDetectEntitiesItemResult unmarshall(JsonUnmarshallerContext context)
                         .unmarshall(context));
             } else if (name.equals("Entities")) {
                 batchDetectEntitiesItemResult.setEntities(new ListUnmarshaller<Entity>(
-                        EntityJsonUnmarshaller.getInstance()).unmarshall(context));
+                        EntityJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectEntitiesResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectEntitiesResultJsonUnmarshaller.java
index 372cf2f847..cbb97fbc53 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectEntitiesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectEntitiesResultJsonUnmarshaller.java
@@ -36,11 +36,14 @@ public BatchDetectEntitiesResult unmarshall(JsonUnmarshallerContext context) thr
             if (name.equals("ResultList")) {
                 batchDetectEntitiesResult
                         .setResultList(new ListUnmarshaller<BatchDetectEntitiesItemResult>(
-                                BatchDetectEntitiesItemResultJsonUnmarshaller.getInstance())
+                                BatchDetectEntitiesItemResultJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("ErrorList")) {
                 batchDetectEntitiesResult.setErrorList(new ListUnmarshaller<BatchItemError>(
-                        BatchItemErrorJsonUnmarshaller.getInstance()).unmarshall(context));
+                        BatchItemErrorJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectKeyPhrasesItemResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectKeyPhrasesItemResultJsonUnmarshaller.java
index 994b155515..6a368eb93a 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectKeyPhrasesItemResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectKeyPhrasesItemResultJsonUnmarshaller.java
@@ -42,7 +42,9 @@ public BatchDetectKeyPhrasesItemResult unmarshall(JsonUnmarshallerContext contex
                         .unmarshall(context));
             } else if (name.equals("KeyPhrases")) {
                 batchDetectKeyPhrasesItemResult.setKeyPhrases(new ListUnmarshaller<KeyPhrase>(
-                        KeyPhraseJsonUnmarshaller.getInstance()).unmarshall(context));
+                        KeyPhraseJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectKeyPhrasesResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectKeyPhrasesResultJsonUnmarshaller.java
index 7beeb6a217..0cec9da253 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectKeyPhrasesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectKeyPhrasesResultJsonUnmarshaller.java
@@ -36,11 +36,14 @@ public BatchDetectKeyPhrasesResult unmarshall(JsonUnmarshallerContext context) t
             if (name.equals("ResultList")) {
                 batchDetectKeyPhrasesResult
                         .setResultList(new ListUnmarshaller<BatchDetectKeyPhrasesItemResult>(
-                                BatchDetectKeyPhrasesItemResultJsonUnmarshaller.getInstance())
+                                BatchDetectKeyPhrasesItemResultJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("ErrorList")) {
                 batchDetectKeyPhrasesResult.setErrorList(new ListUnmarshaller<BatchItemError>(
-                        BatchItemErrorJsonUnmarshaller.getInstance()).unmarshall(context));
+                        BatchItemErrorJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectSentimentItemResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectSentimentItemResultJsonUnmarshaller.java
index 53cb775f43..d2262342af 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectSentimentItemResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectSentimentItemResultJsonUnmarshaller.java
@@ -45,7 +45,8 @@ public BatchDetectSentimentItemResult unmarshall(JsonUnmarshallerContext context
                         .unmarshall(context));
             } else if (name.equals("SentimentScore")) {
                 batchDetectSentimentItemResult.setSentimentScore(SentimentScoreJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectSentimentResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectSentimentResultJsonUnmarshaller.java
index 538ed4cb8f..de60e16be0 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectSentimentResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectSentimentResultJsonUnmarshaller.java
@@ -36,11 +36,14 @@ public BatchDetectSentimentResult unmarshall(JsonUnmarshallerContext context) th
             if (name.equals("ResultList")) {
                 batchDetectSentimentResult
                         .setResultList(new ListUnmarshaller<BatchDetectSentimentItemResult>(
-                                BatchDetectSentimentItemResultJsonUnmarshaller.getInstance())
+                                BatchDetectSentimentItemResultJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("ErrorList")) {
                 batchDetectSentimentResult.setErrorList(new ListUnmarshaller<BatchItemError>(
-                        BatchItemErrorJsonUnmarshaller.getInstance()).unmarshall(context));
+                        BatchItemErrorJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectSyntaxItemResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectSyntaxItemResultJsonUnmarshaller.java
index 0d9fa04198..0ef3492ff2 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectSyntaxItemResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectSyntaxItemResultJsonUnmarshaller.java
@@ -41,7 +41,9 @@ public BatchDetectSyntaxItemResult unmarshall(JsonUnmarshallerContext context) t
                         .unmarshall(context));
             } else if (name.equals("SyntaxTokens")) {
                 batchDetectSyntaxItemResult.setSyntaxTokens(new ListUnmarshaller<SyntaxToken>(
-                        SyntaxTokenJsonUnmarshaller.getInstance()).unmarshall(context));
+                        SyntaxTokenJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectSyntaxResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectSyntaxResultJsonUnmarshaller.java
index ffa955cf1d..1568aa6b47 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectSyntaxResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchDetectSyntaxResultJsonUnmarshaller.java
@@ -36,11 +36,14 @@ public BatchDetectSyntaxResult unmarshall(JsonUnmarshallerContext context) throw
             if (name.equals("ResultList")) {
                 batchDetectSyntaxResult
                         .setResultList(new ListUnmarshaller<BatchDetectSyntaxItemResult>(
-                                BatchDetectSyntaxItemResultJsonUnmarshaller.getInstance())
+                                BatchDetectSyntaxItemResultJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("ErrorList")) {
                 batchDetectSyntaxResult.setErrorList(new ListUnmarshaller<BatchItemError>(
-                        BatchItemErrorJsonUnmarshaller.getInstance()).unmarshall(context));
+                        BatchItemErrorJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchItemErrorJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchItemErrorJsonUnmarshaller.java
index 9bba810d9a..eed79ed402 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchItemErrorJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchItemErrorJsonUnmarshaller.java
@@ -37,13 +37,14 @@ public BatchItemError unmarshall(JsonUnmarshallerContext context) throws Excepti
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Index")) {
-                batchItemError.setIndex(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                batchItemError.setIndex(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ErrorCode")) {
                 batchItemError.setErrorCode(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ErrorMessage")) {
-                batchItemError.setErrorMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                batchItemError.setErrorMessage(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchSizeLimitExceededExceptionUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchSizeLimitExceededExceptionUnmarshaller.java
index 729bdd9528..5085b8de20 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchSizeLimitExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/BatchSizeLimitExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.comprehend.model.BatchSizeLimitExceededException;
 
 public class BatchSizeLimitExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public BatchSizeLimitExceededException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        BatchSizeLimitExceededException batchSizeLimitExceededException = new BatchSizeLimitExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                batchSizeLimitExceededException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return batchSizeLimitExceededException;
-    }
 }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ClassifierMetadataJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ClassifierMetadataJsonUnmarshaller.java
index 40d438ac68..1759cbe4d4 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ClassifierMetadataJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ClassifierMetadataJsonUnmarshaller.java
@@ -41,13 +41,15 @@ public ClassifierMetadata unmarshall(JsonUnmarshallerContext context) throws Exc
                         .unmarshall(context));
             } else if (name.equals("NumberOfTrainedDocuments")) {
                 classifierMetadata.setNumberOfTrainedDocuments(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("NumberOfTestDocuments")) {
                 classifierMetadata.setNumberOfTestDocuments(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("EvaluationMetrics")) {
                 classifierMetadata.setEvaluationMetrics(ClassifierEvaluationMetricsJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/CreateDocumentClassifierResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/CreateDocumentClassifierResultJsonUnmarshaller.java
index 5a8d1cf19e..5f8b340d0f 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/CreateDocumentClassifierResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/CreateDocumentClassifierResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public CreateDocumentClassifierResult unmarshall(JsonUnmarshallerContext context
             String name = reader.nextName();
             if (name.equals("DocumentClassifierArn")) {
                 createDocumentClassifierResult.setDocumentClassifierArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/CreateEntityRecognizerResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/CreateEntityRecognizerResultJsonUnmarshaller.java
index f85ac89c57..0ceb06769f 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/CreateEntityRecognizerResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/CreateEntityRecognizerResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public CreateEntityRecognizerResult unmarshall(JsonUnmarshallerContext context)
             String name = reader.nextName();
             if (name.equals("EntityRecognizerArn")) {
                 createEntityRecognizerResult.setEntityRecognizerArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeDocumentClassificationJobResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeDocumentClassificationJobResultJsonUnmarshaller.java
index 8c0ff27794..859f6a663b 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeDocumentClassificationJobResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeDocumentClassificationJobResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public DescribeDocumentClassificationJobResult unmarshall(JsonUnmarshallerContex
             if (name.equals("DocumentClassificationJobProperties")) {
                 describeDocumentClassificationJobResult
                         .setDocumentClassificationJobProperties(DocumentClassificationJobPropertiesJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeDocumentClassifierResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeDocumentClassifierResultJsonUnmarshaller.java
index 0ce06d5766..95321f307d 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeDocumentClassifierResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeDocumentClassifierResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public DescribeDocumentClassifierResult unmarshall(JsonUnmarshallerContext conte
             if (name.equals("DocumentClassifierProperties")) {
                 describeDocumentClassifierResult
                         .setDocumentClassifierProperties(DocumentClassifierPropertiesJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeDominantLanguageDetectionJobResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeDominantLanguageDetectionJobResultJsonUnmarshaller.java
index 168d0a7d76..35b81822ce 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeDominantLanguageDetectionJobResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeDominantLanguageDetectionJobResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public DescribeDominantLanguageDetectionJobResult unmarshall(JsonUnmarshallerCon
             if (name.equals("DominantLanguageDetectionJobProperties")) {
                 describeDominantLanguageDetectionJobResult
                         .setDominantLanguageDetectionJobProperties(DominantLanguageDetectionJobPropertiesJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeEntitiesDetectionJobResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeEntitiesDetectionJobResultJsonUnmarshaller.java
index 8ccc21bfce..49245a9173 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeEntitiesDetectionJobResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeEntitiesDetectionJobResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public DescribeEntitiesDetectionJobResult unmarshall(JsonUnmarshallerContext con
             if (name.equals("EntitiesDetectionJobProperties")) {
                 describeEntitiesDetectionJobResult
                         .setEntitiesDetectionJobProperties(EntitiesDetectionJobPropertiesJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeEntityRecognizerResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeEntityRecognizerResultJsonUnmarshaller.java
index d992325d26..635b48d408 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeEntityRecognizerResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeEntityRecognizerResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public DescribeEntityRecognizerResult unmarshall(JsonUnmarshallerContext context
             if (name.equals("EntityRecognizerProperties")) {
                 describeEntityRecognizerResult
                         .setEntityRecognizerProperties(EntityRecognizerPropertiesJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeKeyPhrasesDetectionJobResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeKeyPhrasesDetectionJobResultJsonUnmarshaller.java
index a575edfadb..17d8d68728 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeKeyPhrasesDetectionJobResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeKeyPhrasesDetectionJobResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public DescribeKeyPhrasesDetectionJobResult unmarshall(JsonUnmarshallerContext c
             if (name.equals("KeyPhrasesDetectionJobProperties")) {
                 describeKeyPhrasesDetectionJobResult
                         .setKeyPhrasesDetectionJobProperties(KeyPhrasesDetectionJobPropertiesJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeSentimentDetectionJobResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeSentimentDetectionJobResultJsonUnmarshaller.java
index 3e9ddcfeeb..9481dd681a 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeSentimentDetectionJobResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeSentimentDetectionJobResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public DescribeSentimentDetectionJobResult unmarshall(JsonUnmarshallerContext co
             if (name.equals("SentimentDetectionJobProperties")) {
                 describeSentimentDetectionJobResult
                         .setSentimentDetectionJobProperties(SentimentDetectionJobPropertiesJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeTopicsDetectionJobResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeTopicsDetectionJobResultJsonUnmarshaller.java
index 830ca95ade..d0d4f18246 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeTopicsDetectionJobResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DescribeTopicsDetectionJobResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public DescribeTopicsDetectionJobResult unmarshall(JsonUnmarshallerContext conte
             if (name.equals("TopicsDetectionJobProperties")) {
                 describeTopicsDetectionJobResult
                         .setTopicsDetectionJobProperties(TopicsDetectionJobPropertiesJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectDominantLanguageResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectDominantLanguageResultJsonUnmarshaller.java
index 43fa791489..e734d1c69a 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectDominantLanguageResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectDominantLanguageResultJsonUnmarshaller.java
@@ -36,7 +36,9 @@ public DetectDominantLanguageResult unmarshall(JsonUnmarshallerContext context)
             String name = reader.nextName();
             if (name.equals("Languages")) {
                 detectDominantLanguageResult.setLanguages(new ListUnmarshaller<DominantLanguage>(
-                        DominantLanguageJsonUnmarshaller.getInstance()).unmarshall(context));
+                        DominantLanguageJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectEntitiesResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectEntitiesResultJsonUnmarshaller.java
index 183c448216..048686179e 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectEntitiesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectEntitiesResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public DetectEntitiesResult unmarshall(JsonUnmarshallerContext context) throws E
             String name = reader.nextName();
             if (name.equals("Entities")) {
                 detectEntitiesResult.setEntities(new ListUnmarshaller<Entity>(
-                        EntityJsonUnmarshaller.getInstance()).unmarshall(context));
+                        EntityJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectKeyPhrasesResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectKeyPhrasesResultJsonUnmarshaller.java
index c6b38c8430..d09e91530b 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectKeyPhrasesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectKeyPhrasesResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public DetectKeyPhrasesResult unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("KeyPhrases")) {
                 detectKeyPhrasesResult.setKeyPhrases(new ListUnmarshaller<KeyPhrase>(
-                        KeyPhraseJsonUnmarshaller.getInstance()).unmarshall(context));
+                        KeyPhraseJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectSentimentResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectSentimentResultJsonUnmarshaller.java
index 92945fb250..d1c64f515d 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectSentimentResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectSentimentResultJsonUnmarshaller.java
@@ -34,11 +34,12 @@ public DetectSentimentResult unmarshall(JsonUnmarshallerContext context) throws
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Sentiment")) {
-                detectSentimentResult.setSentiment(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                detectSentimentResult.setSentiment(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SentimentScore")) {
                 detectSentimentResult.setSentimentScore(SentimentScoreJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectSyntaxResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectSyntaxResultJsonUnmarshaller.java
index 0c6e1c23ab..b24524ce1b 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectSyntaxResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DetectSyntaxResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public DetectSyntaxResult unmarshall(JsonUnmarshallerContext context) throws Exc
             String name = reader.nextName();
             if (name.equals("SyntaxTokens")) {
                 detectSyntaxResult.setSyntaxTokens(new ListUnmarshaller<SyntaxToken>(
-                        SyntaxTokenJsonUnmarshaller.getInstance()).unmarshall(context));
+                        SyntaxTokenJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DocumentClassificationJobFilterJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DocumentClassificationJobFilterJsonUnmarshaller.java
index 874f4c8655..23ab30a6e6 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DocumentClassificationJobFilterJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DocumentClassificationJobFilterJsonUnmarshaller.java
@@ -45,10 +45,12 @@ public DocumentClassificationJobFilter unmarshall(JsonUnmarshallerContext contex
                         .unmarshall(context));
             } else if (name.equals("SubmitTimeBefore")) {
                 documentClassificationJobFilter.setSubmitTimeBefore(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SubmitTimeAfter")) {
                 documentClassificationJobFilter.setSubmitTimeAfter(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DocumentClassificationJobPropertiesJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DocumentClassificationJobPropertiesJsonUnmarshaller.java
index 8b344feae4..83e65d8132 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DocumentClassificationJobPropertiesJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DocumentClassificationJobPropertiesJsonUnmarshaller.java
@@ -45,19 +45,22 @@ public DocumentClassificationJobProperties unmarshall(JsonUnmarshallerContext co
                         .unmarshall(context));
             } else if (name.equals("JobStatus")) {
                 documentClassificationJobProperties.setJobStatus(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Message")) {
                 documentClassificationJobProperties.setMessage(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("SubmitTime")) {
                 documentClassificationJobProperties.setSubmitTime(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EndTime")) {
                 documentClassificationJobProperties.setEndTime(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("DocumentClassifierArn")) {
                 documentClassificationJobProperties.setDocumentClassifierArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("InputDataConfig")) {
                 documentClassificationJobProperties
                         .setInputDataConfig(InputDataConfigJsonUnmarshaller.getInstance()
@@ -68,7 +71,8 @@ public DocumentClassificationJobProperties unmarshall(JsonUnmarshallerContext co
                                 .unmarshall(context));
             } else if (name.equals("DataAccessRoleArn")) {
                 documentClassificationJobProperties.setDataAccessRoleArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DocumentClassifierFilterJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DocumentClassifierFilterJsonUnmarshaller.java
index 4c6e54f2f6..e113221aaa 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DocumentClassifierFilterJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DocumentClassifierFilterJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public DocumentClassifierFilter unmarshall(JsonUnmarshallerContext context) thro
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Status")) {
-                documentClassifierFilter.setStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                documentClassifierFilter.setStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SubmitTimeBefore")) {
                 documentClassifierFilter.setSubmitTimeBefore(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DocumentClassifierPropertiesJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DocumentClassifierPropertiesJsonUnmarshaller.java
index 26d5b5527f..b10c08652b 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DocumentClassifierPropertiesJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DocumentClassifierPropertiesJsonUnmarshaller.java
@@ -39,7 +39,8 @@ public DocumentClassifierProperties unmarshall(JsonUnmarshallerContext context)
             String name = reader.nextName();
             if (name.equals("DocumentClassifierArn")) {
                 documentClassifierProperties.setDocumentClassifierArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LanguageCode")) {
                 documentClassifierProperties.setLanguageCode(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -57,21 +58,24 @@ public DocumentClassifierProperties unmarshall(JsonUnmarshallerContext context)
                         .unmarshall(context));
             } else if (name.equals("TrainingStartTime")) {
                 documentClassifierProperties.setTrainingStartTime(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TrainingEndTime")) {
                 documentClassifierProperties.setTrainingEndTime(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("InputDataConfig")) {
                 documentClassifierProperties
                         .setInputDataConfig(DocumentClassifierInputDataConfigJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("ClassifierMetadata")) {
                 documentClassifierProperties
                         .setClassifierMetadata(ClassifierMetadataJsonUnmarshaller.getInstance()
                                 .unmarshall(context));
             } else if (name.equals("DataAccessRoleArn")) {
                 documentClassifierProperties.setDataAccessRoleArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DominantLanguageDetectionJobFilterJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DominantLanguageDetectionJobFilterJsonUnmarshaller.java
index e4aa2d8544..1756eaf398 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DominantLanguageDetectionJobFilterJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DominantLanguageDetectionJobFilterJsonUnmarshaller.java
@@ -42,13 +42,16 @@ public DominantLanguageDetectionJobFilter unmarshall(JsonUnmarshallerContext con
                         .unmarshall(context));
             } else if (name.equals("JobStatus")) {
                 dominantLanguageDetectionJobFilter.setJobStatus(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SubmitTimeBefore")) {
                 dominantLanguageDetectionJobFilter.setSubmitTimeBefore(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SubmitTimeAfter")) {
                 dominantLanguageDetectionJobFilter.setSubmitTimeAfter(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DominantLanguageDetectionJobPropertiesJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DominantLanguageDetectionJobPropertiesJsonUnmarshaller.java
index 7085042247..e95d1b2732 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DominantLanguageDetectionJobPropertiesJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DominantLanguageDetectionJobPropertiesJsonUnmarshaller.java
@@ -39,22 +39,28 @@ public DominantLanguageDetectionJobProperties unmarshall(JsonUnmarshallerContext
             String name = reader.nextName();
             if (name.equals("JobId")) {
                 dominantLanguageDetectionJobProperties.setJobId(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("JobName")) {
                 dominantLanguageDetectionJobProperties.setJobName(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("JobStatus")) {
                 dominantLanguageDetectionJobProperties.setJobStatus(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Message")) {
                 dominantLanguageDetectionJobProperties.setMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SubmitTime")) {
                 dominantLanguageDetectionJobProperties.setSubmitTime(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EndTime")) {
                 dominantLanguageDetectionJobProperties.setEndTime(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("InputDataConfig")) {
                 dominantLanguageDetectionJobProperties
                         .setInputDataConfig(InputDataConfigJsonUnmarshaller.getInstance()
@@ -65,7 +71,8 @@ public DominantLanguageDetectionJobProperties unmarshall(JsonUnmarshallerContext
                                 .unmarshall(context));
             } else if (name.equals("DataAccessRoleArn")) {
                 dominantLanguageDetectionJobProperties.setDataAccessRoleArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DominantLanguageJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DominantLanguageJsonUnmarshaller.java
index acfd2dd09a..4ababfcc9b 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DominantLanguageJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/DominantLanguageJsonUnmarshaller.java
@@ -37,10 +37,11 @@ public DominantLanguage unmarshall(JsonUnmarshallerContext context) throws Excep
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("LanguageCode")) {
-                dominantLanguage.setLanguageCode(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                dominantLanguage.setLanguageCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Score")) {
-                dominantLanguage.setScore(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                dominantLanguage.setScore(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntitiesDetectionJobPropertiesJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntitiesDetectionJobPropertiesJsonUnmarshaller.java
index a577f0b9ba..20cbad8e35 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntitiesDetectionJobPropertiesJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntitiesDetectionJobPropertiesJsonUnmarshaller.java
@@ -57,19 +57,23 @@ public EntitiesDetectionJobProperties unmarshall(JsonUnmarshallerContext context
                         .unmarshall(context));
             } else if (name.equals("EntityRecognizerArn")) {
                 entitiesDetectionJobProperties.setEntityRecognizerArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("InputDataConfig")) {
                 entitiesDetectionJobProperties.setInputDataConfig(InputDataConfigJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("OutputDataConfig")) {
                 entitiesDetectionJobProperties.setOutputDataConfig(OutputDataConfigJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LanguageCode")) {
                 entitiesDetectionJobProperties.setLanguageCode(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("DataAccessRoleArn")) {
                 entitiesDetectionJobProperties.setDataAccessRoleArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityJsonUnmarshaller.java
index a33f6961eb..312bb29898 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityJsonUnmarshaller.java
@@ -36,15 +36,20 @@ public Entity unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Score")) {
-                entity.setScore(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                entity.setScore(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Type")) {
-                entity.setType(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                entity.setType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Text")) {
-                entity.setText(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                entity.setText(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("BeginOffset")) {
-                entity.setBeginOffset(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                entity.setBeginOffset(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EndOffset")) {
-                entity.setEndOffset(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                entity.setEndOffset(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerDocumentsJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerDocumentsJsonUnmarshaller.java
index fd3c6d2716..0d13a4ed62 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerDocumentsJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerDocumentsJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public EntityRecognizerDocuments unmarshall(JsonUnmarshallerContext context) thr
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("S3Uri")) {
-                entityRecognizerDocuments.setS3Uri(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                entityRecognizerDocuments.setS3Uri(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerFilterJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerFilterJsonUnmarshaller.java
index 6d081ff8cb..294a0089e3 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerFilterJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerFilterJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public EntityRecognizerFilter unmarshall(JsonUnmarshallerContext context) throws
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Status")) {
-                entityRecognizerFilter.setStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                entityRecognizerFilter.setStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SubmitTimeBefore")) {
                 entityRecognizerFilter.setSubmitTimeBefore(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerInputDataConfigJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerInputDataConfigJsonUnmarshaller.java
index b5dd3e2e6a..54ffc4cc3e 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerInputDataConfigJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerInputDataConfigJsonUnmarshaller.java
@@ -40,7 +40,8 @@ public EntityRecognizerInputDataConfig unmarshall(JsonUnmarshallerContext contex
             if (name.equals("EntityTypes")) {
                 entityRecognizerInputDataConfig
                         .setEntityTypes(new ListUnmarshaller<EntityTypesListItem>(
-                                EntityTypesListItemJsonUnmarshaller.getInstance())
+                                EntityTypesListItemJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("Documents")) {
                 entityRecognizerInputDataConfig
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerMetadataEntityTypesListItemJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerMetadataEntityTypesListItemJsonUnmarshaller.java
index b9b916fb46..5cfd921426 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerMetadataEntityTypesListItemJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerMetadataEntityTypesListItemJsonUnmarshaller.java
@@ -39,7 +39,8 @@ public EntityRecognizerMetadataEntityTypesListItem unmarshall(JsonUnmarshallerCo
             String name = reader.nextName();
             if (name.equals("Type")) {
                 entityRecognizerMetadataEntityTypesListItem.setType(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerMetadataJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerMetadataJsonUnmarshaller.java
index be04d0999b..0fddad0d64 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerMetadataJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerMetadataJsonUnmarshaller.java
@@ -38,19 +38,24 @@ public EntityRecognizerMetadata unmarshall(JsonUnmarshallerContext context) thro
             String name = reader.nextName();
             if (name.equals("NumberOfTrainedDocuments")) {
                 entityRecognizerMetadata.setNumberOfTrainedDocuments(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("NumberOfTestDocuments")) {
                 entityRecognizerMetadata.setNumberOfTestDocuments(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EvaluationMetrics")) {
                 entityRecognizerMetadata
                         .setEvaluationMetrics(EntityRecognizerEvaluationMetricsJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("EntityTypes")) {
                 entityRecognizerMetadata
                         .setEntityTypes(new ListUnmarshaller<EntityRecognizerMetadataEntityTypesListItem>(
                                 EntityRecognizerMetadataEntityTypesListItemJsonUnmarshaller
-                                        .getInstance()).unmarshall(context));
+                                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerPropertiesJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerPropertiesJsonUnmarshaller.java
index cdb8dba77d..8b511331fe 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerPropertiesJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/EntityRecognizerPropertiesJsonUnmarshaller.java
@@ -38,7 +38,8 @@ public EntityRecognizerProperties unmarshall(JsonUnmarshallerContext context) th
             String name = reader.nextName();
             if (name.equals("EntityRecognizerArn")) {
                 entityRecognizerProperties.setEntityRecognizerArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LanguageCode")) {
                 entityRecognizerProperties.setLanguageCode(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -63,14 +64,17 @@ public EntityRecognizerProperties unmarshall(JsonUnmarshallerContext context) th
             } else if (name.equals("InputDataConfig")) {
                 entityRecognizerProperties
                         .setInputDataConfig(EntityRecognizerInputDataConfigJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("RecognizerMetadata")) {
                 entityRecognizerProperties
                         .setRecognizerMetadata(EntityRecognizerMetadataJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("DataAccessRoleArn")) {
                 entityRecognizerProperties.setDataAccessRoleArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/InputDataConfigJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/InputDataConfigJsonUnmarshaller.java
index 86415005ee..da7d4e986b 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/InputDataConfigJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/InputDataConfigJsonUnmarshaller.java
@@ -37,10 +37,11 @@ public InputDataConfig unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("S3Uri")) {
-                inputDataConfig.setS3Uri(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                inputDataConfig.setS3Uri(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("InputFormat")) {
-                inputDataConfig.setInputFormat(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                inputDataConfig.setInputFormat(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/InternalServerExceptionUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/InternalServerExceptionUnmarshaller.java
index 414420cbfe..c2b63fb70d 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/InternalServerExceptionUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/InternalServerExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.comprehend.model.InternalServerException;
 
 public class InternalServerExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InternalServerException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InternalServerException internalServerException = new InternalServerException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                internalServerException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return internalServerException;
-    }
 }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/InvalidFilterExceptionUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/InvalidFilterExceptionUnmarshaller.java
index 3443876145..e3436bf78e 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/InvalidFilterExceptionUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/InvalidFilterExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.comprehend.model.InvalidFilterException;
 
 public class InvalidFilterExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidFilterException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidFilterException invalidFilterException = new InvalidFilterException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidFilterException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidFilterException;
-    }
 }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/InvalidRequestExceptionUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/InvalidRequestExceptionUnmarshaller.java
index 93b27b269d..61a0257540 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/InvalidRequestExceptionUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/InvalidRequestExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.comprehend.model.InvalidRequestException;
 
 public class InvalidRequestExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidRequestException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidRequestException invalidRequestException = new InvalidRequestException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidRequestException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidRequestException;
-    }
 }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/JobNotFoundExceptionUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/JobNotFoundExceptionUnmarshaller.java
index 79aedf07a4..f8aa79f1da 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/JobNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/JobNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.comprehend.model.JobNotFoundException;
 
 public class JobNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public JobNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        JobNotFoundException jobNotFoundException = new JobNotFoundException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                jobNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return jobNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/KeyPhraseJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/KeyPhraseJsonUnmarshaller.java
index 604a249f1a..360d2551f8 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/KeyPhraseJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/KeyPhraseJsonUnmarshaller.java
@@ -36,13 +36,17 @@ public KeyPhrase unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Score")) {
-                keyPhrase.setScore(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                keyPhrase.setScore(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Text")) {
-                keyPhrase.setText(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                keyPhrase.setText(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("BeginOffset")) {
-                keyPhrase.setBeginOffset(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                keyPhrase.setBeginOffset(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EndOffset")) {
-                keyPhrase.setEndOffset(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                keyPhrase.setEndOffset(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/KeyPhrasesDetectionJobPropertiesJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/KeyPhrasesDetectionJobPropertiesJsonUnmarshaller.java
index b722db1081..80c54ac36e 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/KeyPhrasesDetectionJobPropertiesJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/KeyPhrasesDetectionJobPropertiesJsonUnmarshaller.java
@@ -57,17 +57,20 @@ public KeyPhrasesDetectionJobProperties unmarshall(JsonUnmarshallerContext conte
                         .unmarshall(context));
             } else if (name.equals("InputDataConfig")) {
                 keyPhrasesDetectionJobProperties.setInputDataConfig(InputDataConfigJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("OutputDataConfig")) {
                 keyPhrasesDetectionJobProperties
                         .setOutputDataConfig(OutputDataConfigJsonUnmarshaller.getInstance()
                                 .unmarshall(context));
             } else if (name.equals("LanguageCode")) {
                 keyPhrasesDetectionJobProperties.setLanguageCode(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("DataAccessRoleArn")) {
                 keyPhrasesDetectionJobProperties.setDataAccessRoleArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListDocumentClassificationJobsResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListDocumentClassificationJobsResultJsonUnmarshaller.java
index a3ba1e69b4..f6e6126910 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListDocumentClassificationJobsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListDocumentClassificationJobsResultJsonUnmarshaller.java
@@ -37,11 +37,13 @@ public ListDocumentClassificationJobsResult unmarshall(JsonUnmarshallerContext c
             if (name.equals("DocumentClassificationJobPropertiesList")) {
                 listDocumentClassificationJobsResult
                         .setDocumentClassificationJobPropertiesList(new ListUnmarshaller<DocumentClassificationJobProperties>(
-                                DocumentClassificationJobPropertiesJsonUnmarshaller.getInstance())
+                                DocumentClassificationJobPropertiesJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("NextToken")) {
                 listDocumentClassificationJobsResult.setNextToken(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListDocumentClassifiersResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListDocumentClassifiersResultJsonUnmarshaller.java
index f7edf16846..848574f9a5 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListDocumentClassifiersResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListDocumentClassifiersResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public ListDocumentClassifiersResult unmarshall(JsonUnmarshallerContext context)
             if (name.equals("DocumentClassifierPropertiesList")) {
                 listDocumentClassifiersResult
                         .setDocumentClassifierPropertiesList(new ListUnmarshaller<DocumentClassifierProperties>(
-                                DocumentClassifierPropertiesJsonUnmarshaller.getInstance())
+                                DocumentClassifierPropertiesJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("NextToken")) {
                 listDocumentClassifiersResult.setNextToken(StringJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListDominantLanguageDetectionJobsResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListDominantLanguageDetectionJobsResultJsonUnmarshaller.java
index b52ecd5423..9e790911c8 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListDominantLanguageDetectionJobsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListDominantLanguageDetectionJobsResultJsonUnmarshaller.java
@@ -38,10 +38,13 @@ public ListDominantLanguageDetectionJobsResult unmarshall(JsonUnmarshallerContex
                 listDominantLanguageDetectionJobsResult
                         .setDominantLanguageDetectionJobPropertiesList(new ListUnmarshaller<DominantLanguageDetectionJobProperties>(
                                 DominantLanguageDetectionJobPropertiesJsonUnmarshaller
-                                        .getInstance()).unmarshall(context));
+                                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextToken")) {
                 listDominantLanguageDetectionJobsResult.setNextToken(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListEntitiesDetectionJobsResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListEntitiesDetectionJobsResultJsonUnmarshaller.java
index 31729d5f52..9a555715f0 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListEntitiesDetectionJobsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListEntitiesDetectionJobsResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public ListEntitiesDetectionJobsResult unmarshall(JsonUnmarshallerContext contex
             if (name.equals("EntitiesDetectionJobPropertiesList")) {
                 listEntitiesDetectionJobsResult
                         .setEntitiesDetectionJobPropertiesList(new ListUnmarshaller<EntitiesDetectionJobProperties>(
-                                EntitiesDetectionJobPropertiesJsonUnmarshaller.getInstance())
+                                EntitiesDetectionJobPropertiesJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("NextToken")) {
                 listEntitiesDetectionJobsResult.setNextToken(StringJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListEntityRecognizersResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListEntityRecognizersResultJsonUnmarshaller.java
index 44e3c3c960..5a0be471f6 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListEntityRecognizersResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListEntityRecognizersResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public ListEntityRecognizersResult unmarshall(JsonUnmarshallerContext context) t
             if (name.equals("EntityRecognizerPropertiesList")) {
                 listEntityRecognizersResult
                         .setEntityRecognizerPropertiesList(new ListUnmarshaller<EntityRecognizerProperties>(
-                                EntityRecognizerPropertiesJsonUnmarshaller.getInstance())
+                                EntityRecognizerPropertiesJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("NextToken")) {
                 listEntityRecognizersResult.setNextToken(StringJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListKeyPhrasesDetectionJobsResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListKeyPhrasesDetectionJobsResultJsonUnmarshaller.java
index ab8e9850c1..00a91143e9 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListKeyPhrasesDetectionJobsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListKeyPhrasesDetectionJobsResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public ListKeyPhrasesDetectionJobsResult unmarshall(JsonUnmarshallerContext cont
             if (name.equals("KeyPhrasesDetectionJobPropertiesList")) {
                 listKeyPhrasesDetectionJobsResult
                         .setKeyPhrasesDetectionJobPropertiesList(new ListUnmarshaller<KeyPhrasesDetectionJobProperties>(
-                                KeyPhrasesDetectionJobPropertiesJsonUnmarshaller.getInstance())
+                                KeyPhrasesDetectionJobPropertiesJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("NextToken")) {
                 listKeyPhrasesDetectionJobsResult.setNextToken(StringJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListSentimentDetectionJobsResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListSentimentDetectionJobsResultJsonUnmarshaller.java
index 168a0bd7aa..cfc1f5393a 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListSentimentDetectionJobsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListSentimentDetectionJobsResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public ListSentimentDetectionJobsResult unmarshall(JsonUnmarshallerContext conte
             if (name.equals("SentimentDetectionJobPropertiesList")) {
                 listSentimentDetectionJobsResult
                         .setSentimentDetectionJobPropertiesList(new ListUnmarshaller<SentimentDetectionJobProperties>(
-                                SentimentDetectionJobPropertiesJsonUnmarshaller.getInstance())
+                                SentimentDetectionJobPropertiesJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("NextToken")) {
                 listSentimentDetectionJobsResult.setNextToken(StringJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListTopicsDetectionJobsResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListTopicsDetectionJobsResultJsonUnmarshaller.java
index 586e34b23a..88319308d2 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListTopicsDetectionJobsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ListTopicsDetectionJobsResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public ListTopicsDetectionJobsResult unmarshall(JsonUnmarshallerContext context)
             if (name.equals("TopicsDetectionJobPropertiesList")) {
                 listTopicsDetectionJobsResult
                         .setTopicsDetectionJobPropertiesList(new ListUnmarshaller<TopicsDetectionJobProperties>(
-                                TopicsDetectionJobPropertiesJsonUnmarshaller.getInstance())
+                                TopicsDetectionJobPropertiesJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("NextToken")) {
                 listTopicsDetectionJobsResult.setNextToken(StringJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/OutputDataConfigJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/OutputDataConfigJsonUnmarshaller.java
index 6939a711b6..18c918913c 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/OutputDataConfigJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/OutputDataConfigJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public OutputDataConfig unmarshall(JsonUnmarshallerContext context) throws Excep
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("S3Uri")) {
-                outputDataConfig.setS3Uri(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                outputDataConfig.setS3Uri(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/PartOfSpeechTagJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/PartOfSpeechTagJsonUnmarshaller.java
index 1d9ed6addc..92e5fbcf4d 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/PartOfSpeechTagJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/PartOfSpeechTagJsonUnmarshaller.java
@@ -37,9 +37,11 @@ public PartOfSpeechTag unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Tag")) {
-                partOfSpeechTag.setTag(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                partOfSpeechTag.setTag(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Score")) {
-                partOfSpeechTag.setScore(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                partOfSpeechTag.setScore(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ResourceInUseExceptionUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ResourceInUseExceptionUnmarshaller.java
index e168815962..00c87e8409 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ResourceInUseExceptionUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ResourceInUseExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.comprehend.model.ResourceInUseException;
 
 public class ResourceInUseExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceInUseException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceInUseException resourceInUseException = new ResourceInUseException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceInUseException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceInUseException;
-    }
 }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ResourceLimitExceededExceptionUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ResourceLimitExceededExceptionUnmarshaller.java
index d3f85c1fba..bd3b4455e7 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ResourceLimitExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ResourceLimitExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.comprehend.model.ResourceLimitExceededException;
 
 public class ResourceLimitExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceLimitExceededException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceLimitExceededException resourceLimitExceededException = new ResourceLimitExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceLimitExceededException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceLimitExceededException;
-    }
 }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ResourceNotFoundExceptionUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ResourceNotFoundExceptionUnmarshaller.java
index 27877fca18..605c52130e 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ResourceNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ResourceNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.comprehend.model.ResourceNotFoundException;
 
 public class ResourceNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceNotFoundException resourceNotFoundException = new ResourceNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ResourceUnavailableExceptionUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ResourceUnavailableExceptionUnmarshaller.java
index 97052980a3..0e1f3f5209 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ResourceUnavailableExceptionUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/ResourceUnavailableExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.comprehend.model.ResourceUnavailableException;
 
 public class ResourceUnavailableExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceUnavailableException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceUnavailableException resourceUnavailableException = new ResourceUnavailableException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceUnavailableException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceUnavailableException;
-    }
 }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/SentimentDetectionJobPropertiesJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/SentimentDetectionJobPropertiesJsonUnmarshaller.java
index dfefbb3a2f..099bad89eb 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/SentimentDetectionJobPropertiesJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/SentimentDetectionJobPropertiesJsonUnmarshaller.java
@@ -57,17 +57,20 @@ public SentimentDetectionJobProperties unmarshall(JsonUnmarshallerContext contex
                         .unmarshall(context));
             } else if (name.equals("InputDataConfig")) {
                 sentimentDetectionJobProperties.setInputDataConfig(InputDataConfigJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("OutputDataConfig")) {
                 sentimentDetectionJobProperties
                         .setOutputDataConfig(OutputDataConfigJsonUnmarshaller.getInstance()
                                 .unmarshall(context));
             } else if (name.equals("LanguageCode")) {
                 sentimentDetectionJobProperties.setLanguageCode(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("DataAccessRoleArn")) {
                 sentimentDetectionJobProperties.setDataAccessRoleArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/SentimentScoreJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/SentimentScoreJsonUnmarshaller.java
index 3a82dfd958..ecc7651678 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/SentimentScoreJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/SentimentScoreJsonUnmarshaller.java
@@ -37,13 +37,17 @@ public SentimentScore unmarshall(JsonUnmarshallerContext context) throws Excepti
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Positive")) {
-                sentimentScore.setPositive(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                sentimentScore.setPositive(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Negative")) {
-                sentimentScore.setNegative(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                sentimentScore.setNegative(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Neutral")) {
-                sentimentScore.setNeutral(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                sentimentScore.setNeutral(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Mixed")) {
-                sentimentScore.setMixed(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                sentimentScore.setMixed(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StartDocumentClassificationJobResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StartDocumentClassificationJobResultJsonUnmarshaller.java
index a6a5a1c32c..f78a6c8abe 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StartDocumentClassificationJobResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StartDocumentClassificationJobResultJsonUnmarshaller.java
@@ -39,7 +39,8 @@ public StartDocumentClassificationJobResult unmarshall(JsonUnmarshallerContext c
                         .unmarshall(context));
             } else if (name.equals("JobStatus")) {
                 startDocumentClassificationJobResult.setJobStatus(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StartDominantLanguageDetectionJobResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StartDominantLanguageDetectionJobResultJsonUnmarshaller.java
index 74a073ee9e..b4f71fdacb 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StartDominantLanguageDetectionJobResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StartDominantLanguageDetectionJobResultJsonUnmarshaller.java
@@ -36,10 +36,12 @@ public StartDominantLanguageDetectionJobResult unmarshall(JsonUnmarshallerContex
             String name = reader.nextName();
             if (name.equals("JobId")) {
                 startDominantLanguageDetectionJobResult.setJobId(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("JobStatus")) {
                 startDominantLanguageDetectionJobResult.setJobStatus(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StopDominantLanguageDetectionJobResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StopDominantLanguageDetectionJobResultJsonUnmarshaller.java
index cfd4360fdf..e0953915bb 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StopDominantLanguageDetectionJobResultJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StopDominantLanguageDetectionJobResultJsonUnmarshaller.java
@@ -36,10 +36,12 @@ public StopDominantLanguageDetectionJobResult unmarshall(JsonUnmarshallerContext
             String name = reader.nextName();
             if (name.equals("JobId")) {
                 stopDominantLanguageDetectionJobResult.setJobId(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("JobStatus")) {
                 stopDominantLanguageDetectionJobResult.setJobStatus(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/SyntaxTokenJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/SyntaxTokenJsonUnmarshaller.java
index d8014c35a9..a48613d77e 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/SyntaxTokenJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/SyntaxTokenJsonUnmarshaller.java
@@ -36,14 +36,17 @@ public SyntaxToken unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("TokenId")) {
-                syntaxToken.setTokenId(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                syntaxToken.setTokenId(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Text")) {
-                syntaxToken.setText(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                syntaxToken.setText(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("BeginOffset")) {
                 syntaxToken.setBeginOffset(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("EndOffset")) {
-                syntaxToken.setEndOffset(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                syntaxToken.setEndOffset(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("PartOfSpeech")) {
                 syntaxToken.setPartOfSpeech(PartOfSpeechTagJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/TextSizeLimitExceededExceptionUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/TextSizeLimitExceededExceptionUnmarshaller.java
index 2edfa75f3b..ce1b666267 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/TextSizeLimitExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/TextSizeLimitExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.comprehend.model.TextSizeLimitExceededException;
 
 public class TextSizeLimitExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public TextSizeLimitExceededException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        TextSizeLimitExceededException textSizeLimitExceededException = new TextSizeLimitExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                textSizeLimitExceededException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return textSizeLimitExceededException;
-    }
 }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/TooManyRequestsExceptionUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/TooManyRequestsExceptionUnmarshaller.java
index 40d5bb7be3..65eece1199 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/TooManyRequestsExceptionUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/TooManyRequestsExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.comprehend.model.TooManyRequestsException;
 
 public class TooManyRequestsExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public TooManyRequestsException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        TooManyRequestsException tooManyRequestsException = new TooManyRequestsException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                tooManyRequestsException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return tooManyRequestsException;
-    }
 }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/TopicsDetectionJobPropertiesJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/TopicsDetectionJobPropertiesJsonUnmarshaller.java
index a263f2eed1..c4ce75215b 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/TopicsDetectionJobPropertiesJsonUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/TopicsDetectionJobPropertiesJsonUnmarshaller.java
@@ -57,13 +57,16 @@ public TopicsDetectionJobProperties unmarshall(JsonUnmarshallerContext context)
                         .unmarshall(context));
             } else if (name.equals("InputDataConfig")) {
                 topicsDetectionJobProperties.setInputDataConfig(InputDataConfigJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("OutputDataConfig")) {
                 topicsDetectionJobProperties.setOutputDataConfig(OutputDataConfigJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("NumberOfTopics")) {
                 topicsDetectionJobProperties.setNumberOfTopics(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/UnsupportedLanguageExceptionUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/UnsupportedLanguageExceptionUnmarshaller.java
index 963e12e20a..cac54cab4b 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/UnsupportedLanguageExceptionUnmarshaller.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/UnsupportedLanguageExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.comprehend.model.UnsupportedLanguageException;
 
 public class UnsupportedLanguageExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public UnsupportedLanguageException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        UnsupportedLanguageException unsupportedLanguageException = new UnsupportedLanguageException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                unsupportedLanguageException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return unsupportedLanguageException;
-    }
 }
diff --git a/aws-android-sdk-core/pom.xml b/aws-android-sdk-core/pom.xml
index 2e72cfdd69..fb5c628453 100644
--- a/aws-android-sdk-core/pom.xml
+++ b/aws-android-sdk-core/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/regions/Regions.java b/aws-android-sdk-core/src/main/java/com/amazonaws/regions/Regions.java
index 4927e821c9..f014bbb5cd 100644
--- a/aws-android-sdk-core/src/main/java/com/amazonaws/regions/Regions.java
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/regions/Regions.java
@@ -50,6 +50,9 @@
     /** eu-central-1. */
     EU_CENTRAL_1("eu-central-1"),
 
+    /** eu-north-1. */
+    EU_NORTH_1("eu-north-1"),
+
     /** ap-south-1. */
     AP_SOUTH_1("ap-south-1"),
 
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java b/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java
index 2dd537c260..c5ba2ed5c9 100644
--- a/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java
@@ -26,7 +26,7 @@
     private static final int DEFAULT_STRING_LENGTH = 128;
 
     /** SDK version info */
-    private static volatile String version = "2.8.5";
+    private static volatile String version = "2.9.0";
                                                                 // changed build
                                                                 // logic
 
diff --git a/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java b/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java
index 0cd32576f0..049d4e73a3 100644
--- a/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java
+++ b/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java
@@ -24,7 +24,7 @@
 
     @Test
     public void getVersion() {
-        assertEquals("2.8.5", VersionInfoUtils.getVersion());
+        assertEquals("2.9.0", VersionInfoUtils.getVersion());
     }
 
     @Test
diff --git a/aws-android-sdk-ddb-document/pom.xml b/aws-android-sdk-ddb-document/pom.xml
index e07ab0f590..a0ac6ed1f1 100644
--- a/aws-android-sdk-ddb-document/pom.xml
+++ b/aws-android-sdk-ddb-document/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,13 +20,13 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-ddb</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
     <dependency>
       <groupId>com.google.guava</groupId>
diff --git a/aws-android-sdk-ddb-mapper/pom.xml b/aws-android-sdk-ddb-mapper/pom.xml
index d034884ade..c61a6a8818 100644
--- a/aws-android-sdk-ddb-mapper/pom.xml
+++ b/aws-android-sdk-ddb-mapper/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,19 +20,19 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-ddb</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-s3</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
         <dependency>
         <groupId>junit</groupId>
diff --git a/aws-android-sdk-ddb/pom.xml b/aws-android-sdk-ddb/pom.xml
index 3df439c9b6..e376a74fd6 100644
--- a/aws-android-sdk-ddb/pom.xml
+++ b/aws-android-sdk-ddb/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
         <dependency>
         <groupId>junit</groupId>
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AttributeValueJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AttributeValueJsonUnmarshaller.java
index 2e7aa03e50..9cd84a6653 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AttributeValueJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AttributeValueJsonUnmarshaller.java
@@ -37,30 +37,45 @@ public AttributeValue unmarshall(JsonUnmarshallerContext context) throws Excepti
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("S")) {
-                attributeValue.setS(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                attributeValue.setS(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("N")) {
-                attributeValue.setN(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                attributeValue.setN(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("B")) {
-                attributeValue.setB(ByteBufferJsonUnmarshaller.getInstance().unmarshall(context));
+                attributeValue.setB(ByteBufferJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SS")) {
                 attributeValue.setSS(new ListUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NS")) {
                 attributeValue.setNS(new ListUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("BS")) {
                 attributeValue.setBS(new ListUnmarshaller<java.nio.ByteBuffer>(
-                        ByteBufferJsonUnmarshaller.getInstance()).unmarshall(context));
+                        ByteBufferJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("M")) {
                 attributeValue.setM(new MapUnmarshaller<AttributeValue>(
-                        AttributeValueJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AttributeValueJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("L")) {
                 attributeValue.setL(new ListUnmarshaller<AttributeValue>(
-                        AttributeValueJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AttributeValueJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NULL")) {
-                attributeValue.setNULL(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                attributeValue.setNULL(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("BOOL")) {
-                attributeValue.setBOOL(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                attributeValue.setBOOL(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AttributeValueUpdateJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AttributeValueUpdateJsonUnmarshaller.java
index f012ae4447..e9fc868cbd 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AttributeValueUpdateJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AttributeValueUpdateJsonUnmarshaller.java
@@ -40,8 +40,8 @@ public AttributeValueUpdate unmarshall(JsonUnmarshallerContext context) throws E
                 attributeValueUpdate.setValue(AttributeValueJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Action")) {
-                attributeValueUpdate.setAction(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                attributeValueUpdate.setAction(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingPolicyDescriptionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingPolicyDescriptionJsonUnmarshaller.java
index 83bc8ceb1b..fbc819893f 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingPolicyDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingPolicyDescriptionJsonUnmarshaller.java
@@ -43,7 +43,8 @@ public AutoScalingPolicyDescription unmarshall(JsonUnmarshallerContext context)
             } else if (name.equals("TargetTrackingScalingPolicyConfiguration")) {
                 autoScalingPolicyDescription
                         .setTargetTrackingScalingPolicyConfiguration(AutoScalingTargetTrackingScalingPolicyConfigurationDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingPolicyUpdateJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingPolicyUpdateJsonUnmarshaller.java
index 26b7efb2bc..70949234ce 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingPolicyUpdateJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingPolicyUpdateJsonUnmarshaller.java
@@ -42,7 +42,8 @@ public AutoScalingPolicyUpdate unmarshall(JsonUnmarshallerContext context) throw
             } else if (name.equals("TargetTrackingScalingPolicyConfiguration")) {
                 autoScalingPolicyUpdate
                         .setTargetTrackingScalingPolicyConfiguration(AutoScalingTargetTrackingScalingPolicyConfigurationUpdateJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingSettingsDescriptionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingSettingsDescriptionJsonUnmarshaller.java
index 3e6ed07e8b..0089723bd4 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingSettingsDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingSettingsDescriptionJsonUnmarshaller.java
@@ -45,14 +45,17 @@ public AutoScalingSettingsDescription unmarshall(JsonUnmarshallerContext context
                         .unmarshall(context));
             } else if (name.equals("AutoScalingDisabled")) {
                 autoScalingSettingsDescription.setAutoScalingDisabled(BooleanJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("AutoScalingRoleArn")) {
                 autoScalingSettingsDescription.setAutoScalingRoleArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ScalingPolicies")) {
                 autoScalingSettingsDescription
                         .setScalingPolicies(new ListUnmarshaller<AutoScalingPolicyDescription>(
-                                AutoScalingPolicyDescriptionJsonUnmarshaller.getInstance())
+                                AutoScalingPolicyDescriptionJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else {
                 reader.skipValue();
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingSettingsUpdateJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingSettingsUpdateJsonUnmarshaller.java
index bf0e8cd535..47f493acca 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingSettingsUpdateJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingSettingsUpdateJsonUnmarshaller.java
@@ -44,14 +44,17 @@ public AutoScalingSettingsUpdate unmarshall(JsonUnmarshallerContext context) thr
                         .unmarshall(context));
             } else if (name.equals("AutoScalingDisabled")) {
                 autoScalingSettingsUpdate.setAutoScalingDisabled(BooleanJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("AutoScalingRoleArn")) {
                 autoScalingSettingsUpdate.setAutoScalingRoleArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ScalingPolicyUpdate")) {
                 autoScalingSettingsUpdate
                         .setScalingPolicyUpdate(AutoScalingPolicyUpdateJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingTargetTrackingScalingPolicyConfigurationDescriptionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingTargetTrackingScalingPolicyConfigurationDescriptionJsonUnmarshaller.java
index f3024b0406..c9f667326a 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingTargetTrackingScalingPolicyConfigurationDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingTargetTrackingScalingPolicyConfigurationDescriptionJsonUnmarshaller.java
@@ -45,15 +45,16 @@ public AutoScalingTargetTrackingScalingPolicyConfigurationDescription unmarshall
                                 .unmarshall(context));
             } else if (name.equals("ScaleInCooldown")) {
                 autoScalingTargetTrackingScalingPolicyConfigurationDescription
-                        .setScaleInCooldown(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                                context));
+                        .setScaleInCooldown(IntegerJsonUnmarshaller.getInstance()
+                                .unmarshall(context));
             } else if (name.equals("ScaleOutCooldown")) {
                 autoScalingTargetTrackingScalingPolicyConfigurationDescription
-                        .setScaleOutCooldown(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                                context));
+                        .setScaleOutCooldown(IntegerJsonUnmarshaller.getInstance()
+                                .unmarshall(context));
             } else if (name.equals("TargetValue")) {
                 autoScalingTargetTrackingScalingPolicyConfigurationDescription
-                        .setTargetValue(DoubleJsonUnmarshaller.getInstance().unmarshall(context));
+                        .setTargetValue(DoubleJsonUnmarshaller.getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingTargetTrackingScalingPolicyConfigurationUpdateJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingTargetTrackingScalingPolicyConfigurationUpdateJsonUnmarshaller.java
index a0ad4650fb..ff4e2e1a2c 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingTargetTrackingScalingPolicyConfigurationUpdateJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/AutoScalingTargetTrackingScalingPolicyConfigurationUpdateJsonUnmarshaller.java
@@ -45,15 +45,16 @@ public AutoScalingTargetTrackingScalingPolicyConfigurationUpdate unmarshall(
                                 .unmarshall(context));
             } else if (name.equals("ScaleInCooldown")) {
                 autoScalingTargetTrackingScalingPolicyConfigurationUpdate
-                        .setScaleInCooldown(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                                context));
+                        .setScaleInCooldown(IntegerJsonUnmarshaller.getInstance()
+                                .unmarshall(context));
             } else if (name.equals("ScaleOutCooldown")) {
                 autoScalingTargetTrackingScalingPolicyConfigurationUpdate
-                        .setScaleOutCooldown(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                                context));
+                        .setScaleOutCooldown(IntegerJsonUnmarshaller.getInstance()
+                                .unmarshall(context));
             } else if (name.equals("TargetValue")) {
                 autoScalingTargetTrackingScalingPolicyConfigurationUpdate
-                        .setTargetValue(DoubleJsonUnmarshaller.getInstance().unmarshall(context));
+                        .setTargetValue(DoubleJsonUnmarshaller.getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupDescriptionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupDescriptionJsonUnmarshaller.java
index 0f5f77a4df..f90c8604ac 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupDescriptionJsonUnmarshaller.java
@@ -41,11 +41,13 @@ public BackupDescription unmarshall(JsonUnmarshallerContext context) throws Exce
                         .unmarshall(context));
             } else if (name.equals("SourceTableDetails")) {
                 backupDescription.setSourceTableDetails(SourceTableDetailsJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SourceTableFeatureDetails")) {
                 backupDescription
                         .setSourceTableFeatureDetails(SourceTableFeatureDetailsJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupDetailsJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupDetailsJsonUnmarshaller.java
index f78dd48459..cbdfb51196 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupDetailsJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupDetailsJsonUnmarshaller.java
@@ -36,17 +36,17 @@ public BackupDetails unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("BackupArn")) {
-                backupDetails
-                        .setBackupArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                backupDetails.setBackupArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("BackupName")) {
                 backupDetails.setBackupName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("BackupSizeBytes")) {
-                backupDetails.setBackupSizeBytes(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                backupDetails.setBackupSizeBytes(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("BackupStatus")) {
-                backupDetails.setBackupStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                backupDetails.setBackupStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("BackupType")) {
                 backupDetails.setBackupType(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupInUseExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupInUseExceptionUnmarshaller.java
index 9c430fedcc..9a584bb5d9 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupInUseExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupInUseExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.BackupInUseException;
 
 public class BackupInUseExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public BackupInUseException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        BackupInUseException backupInUseException = new BackupInUseException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                backupInUseException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return backupInUseException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupNotFoundExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupNotFoundExceptionUnmarshaller.java
index 59a28e76fb..44995228d4 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.BackupNotFoundException;
 
 public class BackupNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public BackupNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        BackupNotFoundException backupNotFoundException = new BackupNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                backupNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return backupNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupSummaryJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupSummaryJsonUnmarshaller.java
index 378b8a3a66..b10249b689 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupSummaryJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BackupSummaryJsonUnmarshaller.java
@@ -36,15 +36,17 @@ public BackupSummary unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("TableName")) {
-                backupSummary
-                        .setTableName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                backupSummary.setTableName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TableId")) {
-                backupSummary.setTableId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                backupSummary.setTableId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TableArn")) {
-                backupSummary.setTableArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                backupSummary.setTableArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("BackupArn")) {
-                backupSummary
-                        .setBackupArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                backupSummary.setBackupArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("BackupName")) {
                 backupSummary.setBackupName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -55,14 +57,14 @@ public BackupSummary unmarshall(JsonUnmarshallerContext context) throws Exceptio
                 backupSummary.setBackupExpiryDateTime(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("BackupStatus")) {
-                backupSummary.setBackupStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                backupSummary.setBackupStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("BackupType")) {
                 backupSummary.setBackupType(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("BackupSizeBytes")) {
-                backupSummary.setBackupSizeBytes(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                backupSummary.setBackupSizeBytes(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BatchGetItemResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BatchGetItemResultJsonUnmarshaller.java
index 19ef12d7e2..9cb03e2815 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BatchGetItemResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BatchGetItemResultJsonUnmarshaller.java
@@ -38,14 +38,21 @@ public BatchGetItemResult unmarshall(JsonUnmarshallerContext context) throws Exc
                         .setResponses(new MapUnmarshaller<java.util.List<java.util.Map<String, AttributeValue>>>(
                                 new ListUnmarshaller<java.util.Map<String, AttributeValue>>(
                                         new MapUnmarshaller<AttributeValue>(
-                                                AttributeValueJsonUnmarshaller.getInstance())))
+                                                AttributeValueJsonUnmarshaller.getInstance()
+                                        )
+                                )
+                        )
                                 .unmarshall(context));
             } else if (name.equals("UnprocessedKeys")) {
                 batchGetItemResult.setUnprocessedKeys(new MapUnmarshaller<KeysAndAttributes>(
-                        KeysAndAttributesJsonUnmarshaller.getInstance()).unmarshall(context));
+                        KeysAndAttributesJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ConsumedCapacity")) {
                 batchGetItemResult.setConsumedCapacity(new ListUnmarshaller<ConsumedCapacity>(
-                        ConsumedCapacityJsonUnmarshaller.getInstance()).unmarshall(context));
+                        ConsumedCapacityJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BatchWriteItemResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BatchWriteItemResultJsonUnmarshaller.java
index 9c84d75ec7..6011d76ca6 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BatchWriteItemResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/BatchWriteItemResultJsonUnmarshaller.java
@@ -37,16 +37,23 @@ public BatchWriteItemResult unmarshall(JsonUnmarshallerContext context) throws E
                 batchWriteItemResult
                         .setUnprocessedItems(new MapUnmarshaller<java.util.List<WriteRequest>>(
                                 new ListUnmarshaller<WriteRequest>(WriteRequestJsonUnmarshaller
-                                        .getInstance())).unmarshall(context));
+                                        .getInstance()
+                                )
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ItemCollectionMetrics")) {
                 batchWriteItemResult
                         .setItemCollectionMetrics(new MapUnmarshaller<java.util.List<ItemCollectionMetrics>>(
                                 new ListUnmarshaller<ItemCollectionMetrics>(
-                                        ItemCollectionMetricsJsonUnmarshaller.getInstance()))
+                                        ItemCollectionMetricsJsonUnmarshaller.getInstance()
+                                )
+                        )
                                 .unmarshall(context));
             } else if (name.equals("ConsumedCapacity")) {
                 batchWriteItemResult.setConsumedCapacity(new ListUnmarshaller<ConsumedCapacity>(
-                        ConsumedCapacityJsonUnmarshaller.getInstance()).unmarshall(context));
+                        ConsumedCapacityJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CapacityJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CapacityJsonUnmarshaller.java
index 397c4af201..6aefcb9b4c 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CapacityJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CapacityJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public Capacity unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("CapacityUnits")) {
-                capacity.setCapacityUnits(DoubleJsonUnmarshaller.getInstance().unmarshall(context));
+                capacity.setCapacityUnits(DoubleJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ConditionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ConditionJsonUnmarshaller.java
index 9171a4de89..05be6eaebf 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ConditionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ConditionJsonUnmarshaller.java
@@ -37,10 +37,12 @@ public Condition unmarshall(JsonUnmarshallerContext context) throws Exception {
             String name = reader.nextName();
             if (name.equals("AttributeValueList")) {
                 condition.setAttributeValueList(new ListUnmarshaller<AttributeValue>(
-                        AttributeValueJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AttributeValueJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ComparisonOperator")) {
-                condition.setComparisonOperator(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                condition.setComparisonOperator(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ConditionalCheckFailedExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ConditionalCheckFailedExceptionUnmarshaller.java
index 52ec62af69..38a6521a49 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ConditionalCheckFailedExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ConditionalCheckFailedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.ConditionalCheckFailedException;
 
 public class ConditionalCheckFailedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ConditionalCheckFailedException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ConditionalCheckFailedException conditionalCheckFailedException = new ConditionalCheckFailedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                conditionalCheckFailedException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return conditionalCheckFailedException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ConsumedCapacityJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ConsumedCapacityJsonUnmarshaller.java
index 8fea01bc42..72be4ba0b3 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ConsumedCapacityJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ConsumedCapacityJsonUnmarshaller.java
@@ -37,20 +37,24 @@ public ConsumedCapacity unmarshall(JsonUnmarshallerContext context) throws Excep
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("TableName")) {
-                consumedCapacity.setTableName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                consumedCapacity.setTableName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CapacityUnits")) {
-                consumedCapacity.setCapacityUnits(DoubleJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                consumedCapacity.setCapacityUnits(DoubleJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Table")) {
                 consumedCapacity.setTable(CapacityJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("LocalSecondaryIndexes")) {
                 consumedCapacity.setLocalSecondaryIndexes(new MapUnmarshaller<Capacity>(
-                        CapacityJsonUnmarshaller.getInstance()).unmarshall(context));
+                        CapacityJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("GlobalSecondaryIndexes")) {
                 consumedCapacity.setGlobalSecondaryIndexes(new MapUnmarshaller<Capacity>(
-                        CapacityJsonUnmarshaller.getInstance()).unmarshall(context));
+                        CapacityJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ContinuousBackupsDescriptionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ContinuousBackupsDescriptionJsonUnmarshaller.java
index 1cbabfd0ed..2d113318c5 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ContinuousBackupsDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ContinuousBackupsDescriptionJsonUnmarshaller.java
@@ -39,11 +39,13 @@ public ContinuousBackupsDescription unmarshall(JsonUnmarshallerContext context)
             String name = reader.nextName();
             if (name.equals("ContinuousBackupsStatus")) {
                 continuousBackupsDescription.setContinuousBackupsStatus(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("PointInTimeRecoveryDescription")) {
                 continuousBackupsDescription
                         .setPointInTimeRecoveryDescription(PointInTimeRecoveryDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ContinuousBackupsUnavailableExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ContinuousBackupsUnavailableExceptionUnmarshaller.java
index 50d4ab2b9f..0cc5d40886 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ContinuousBackupsUnavailableExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ContinuousBackupsUnavailableExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.ContinuousBackupsUnavailableException;
 
 public class ContinuousBackupsUnavailableExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ContinuousBackupsUnavailableException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ContinuousBackupsUnavailableException continuousBackupsUnavailableException = new ContinuousBackupsUnavailableException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                continuousBackupsUnavailableException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return continuousBackupsUnavailableException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CreateGlobalSecondaryIndexActionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CreateGlobalSecondaryIndexActionJsonUnmarshaller.java
index cea30a0472..92dd3429f1 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CreateGlobalSecondaryIndexActionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CreateGlobalSecondaryIndexActionJsonUnmarshaller.java
@@ -43,14 +43,18 @@ public CreateGlobalSecondaryIndexAction unmarshall(JsonUnmarshallerContext conte
             } else if (name.equals("KeySchema")) {
                 createGlobalSecondaryIndexAction
                         .setKeySchema(new ListUnmarshaller<KeySchemaElement>(
-                                KeySchemaElementJsonUnmarshaller.getInstance()).unmarshall(context));
+                                KeySchemaElementJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Projection")) {
                 createGlobalSecondaryIndexAction.setProjection(ProjectionJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ProvisionedThroughput")) {
                 createGlobalSecondaryIndexAction
                         .setProvisionedThroughput(ProvisionedThroughputJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CreateGlobalTableResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CreateGlobalTableResultJsonUnmarshaller.java
index 59ecd1517a..456b9ee166 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CreateGlobalTableResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CreateGlobalTableResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public CreateGlobalTableResult unmarshall(JsonUnmarshallerContext context) throw
             if (name.equals("GlobalTableDescription")) {
                 createGlobalTableResult
                         .setGlobalTableDescription(GlobalTableDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CreateReplicaActionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CreateReplicaActionJsonUnmarshaller.java
index addd6c56d1..412e4aa092 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CreateReplicaActionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CreateReplicaActionJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public CreateReplicaAction unmarshall(JsonUnmarshallerContext context) throws Ex
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("RegionName")) {
-                createReplicaAction.setRegionName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                createReplicaAction.setRegionName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CreateTableResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CreateTableResultJsonUnmarshaller.java
index 4c7cacc9af..dc22319f3c 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CreateTableResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/CreateTableResultJsonUnmarshaller.java
@@ -35,7 +35,8 @@ public CreateTableResult unmarshall(JsonUnmarshallerContext context) throws Exce
             String name = reader.nextName();
             if (name.equals("TableDescription")) {
                 createTableResult.setTableDescription(TableDescriptionJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteBackupResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteBackupResultJsonUnmarshaller.java
index 9a45c30295..f26875e2b1 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteBackupResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteBackupResultJsonUnmarshaller.java
@@ -35,7 +35,8 @@ public DeleteBackupResult unmarshall(JsonUnmarshallerContext context) throws Exc
             String name = reader.nextName();
             if (name.equals("BackupDescription")) {
                 deleteBackupResult.setBackupDescription(BackupDescriptionJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteItemResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteItemResultJsonUnmarshaller.java
index 4dc90b8517..752816d2bc 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteItemResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteItemResultJsonUnmarshaller.java
@@ -35,13 +35,16 @@ public DeleteItemResult unmarshall(JsonUnmarshallerContext context) throws Excep
             String name = reader.nextName();
             if (name.equals("Attributes")) {
                 deleteItemResult.setAttributes(new MapUnmarshaller<AttributeValue>(
-                        AttributeValueJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AttributeValueJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ConsumedCapacity")) {
                 deleteItemResult.setConsumedCapacity(ConsumedCapacityJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ItemCollectionMetrics")) {
                 deleteItemResult.setItemCollectionMetrics(ItemCollectionMetricsJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteReplicaActionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteReplicaActionJsonUnmarshaller.java
index 0d6fdd5477..a0628d88dc 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteReplicaActionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteReplicaActionJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public DeleteReplicaAction unmarshall(JsonUnmarshallerContext context) throws Ex
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("RegionName")) {
-                deleteReplicaAction.setRegionName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                deleteReplicaAction.setRegionName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteRequestJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteRequestJsonUnmarshaller.java
index ffd34ef8c0..e58f377b6e 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteRequestJsonUnmarshaller.java
@@ -37,7 +37,9 @@ public DeleteRequest unmarshall(JsonUnmarshallerContext context) throws Exceptio
             String name = reader.nextName();
             if (name.equals("Key")) {
                 deleteRequest.setKey(new MapUnmarshaller<AttributeValue>(
-                        AttributeValueJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AttributeValueJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteTableResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteTableResultJsonUnmarshaller.java
index 2f839e50ca..8199aae502 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteTableResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DeleteTableResultJsonUnmarshaller.java
@@ -35,7 +35,8 @@ public DeleteTableResult unmarshall(JsonUnmarshallerContext context) throws Exce
             String name = reader.nextName();
             if (name.equals("TableDescription")) {
                 deleteTableResult.setTableDescription(TableDescriptionJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeBackupResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeBackupResultJsonUnmarshaller.java
index 5195c55300..4dc0999f7d 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeBackupResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeBackupResultJsonUnmarshaller.java
@@ -35,7 +35,8 @@ public DescribeBackupResult unmarshall(JsonUnmarshallerContext context) throws E
             String name = reader.nextName();
             if (name.equals("BackupDescription")) {
                 describeBackupResult.setBackupDescription(BackupDescriptionJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeContinuousBackupsResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeContinuousBackupsResultJsonUnmarshaller.java
index 9505566654..8e77bf3c78 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeContinuousBackupsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeContinuousBackupsResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public DescribeContinuousBackupsResult unmarshall(JsonUnmarshallerContext contex
             if (name.equals("ContinuousBackupsDescription")) {
                 describeContinuousBackupsResult
                         .setContinuousBackupsDescription(ContinuousBackupsDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeEndpointsResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeEndpointsResultJsonUnmarshaller.java
index 017cf78972..7a415e924f 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeEndpointsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeEndpointsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public DescribeEndpointsResult unmarshall(JsonUnmarshallerContext context) throw
             String name = reader.nextName();
             if (name.equals("Endpoints")) {
                 describeEndpointsResult.setEndpoints(new ListUnmarshaller<Endpoint>(
-                        EndpointJsonUnmarshaller.getInstance()).unmarshall(context));
+                        EndpointJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeGlobalTableResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeGlobalTableResultJsonUnmarshaller.java
index ca357eea44..8c50a0d4e3 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeGlobalTableResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeGlobalTableResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public DescribeGlobalTableResult unmarshall(JsonUnmarshallerContext context) thr
             if (name.equals("GlobalTableDescription")) {
                 describeGlobalTableResult
                         .setGlobalTableDescription(GlobalTableDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeGlobalTableSettingsResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeGlobalTableSettingsResultJsonUnmarshaller.java
index 6d02eaca8b..1acff48b8d 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeGlobalTableSettingsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeGlobalTableSettingsResultJsonUnmarshaller.java
@@ -36,11 +36,13 @@ public DescribeGlobalTableSettingsResult unmarshall(JsonUnmarshallerContext cont
             String name = reader.nextName();
             if (name.equals("GlobalTableName")) {
                 describeGlobalTableSettingsResult.setGlobalTableName(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ReplicaSettings")) {
                 describeGlobalTableSettingsResult
                         .setReplicaSettings(new ListUnmarshaller<ReplicaSettingsDescription>(
-                                ReplicaSettingsDescriptionJsonUnmarshaller.getInstance())
+                                ReplicaSettingsDescriptionJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else {
                 reader.skipValue();
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeLimitsResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeLimitsResultJsonUnmarshaller.java
index f85caf9416..0ee5a76ed2 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeLimitsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeLimitsResultJsonUnmarshaller.java
@@ -35,16 +35,20 @@ public DescribeLimitsResult unmarshall(JsonUnmarshallerContext context) throws E
             String name = reader.nextName();
             if (name.equals("AccountMaxReadCapacityUnits")) {
                 describeLimitsResult.setAccountMaxReadCapacityUnits(LongJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("AccountMaxWriteCapacityUnits")) {
                 describeLimitsResult.setAccountMaxWriteCapacityUnits(LongJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TableMaxReadCapacityUnits")) {
                 describeLimitsResult.setTableMaxReadCapacityUnits(LongJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TableMaxWriteCapacityUnits")) {
                 describeLimitsResult.setTableMaxWriteCapacityUnits(LongJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeTimeToLiveResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeTimeToLiveResultJsonUnmarshaller.java
index 0de5a16557..573783888b 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeTimeToLiveResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/DescribeTimeToLiveResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public DescribeTimeToLiveResult unmarshall(JsonUnmarshallerContext context) thro
             if (name.equals("TimeToLiveDescription")) {
                 describeTimeToLiveResult
                         .setTimeToLiveDescription(TimeToLiveDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/EndpointJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/EndpointJsonUnmarshaller.java
index 216b7076e7..e79b9eabcb 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/EndpointJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/EndpointJsonUnmarshaller.java
@@ -36,10 +36,11 @@ public Endpoint unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Address")) {
-                endpoint.setAddress(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                endpoint.setAddress(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CachePeriodInMinutes")) {
-                endpoint.setCachePeriodInMinutes(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpoint.setCachePeriodInMinutes(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ExpectedAttributeValueJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ExpectedAttributeValueJsonUnmarshaller.java
index 951f8f6243..e3894693da 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ExpectedAttributeValueJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ExpectedAttributeValueJsonUnmarshaller.java
@@ -40,14 +40,16 @@ public ExpectedAttributeValue unmarshall(JsonUnmarshallerContext context) throws
                 expectedAttributeValue.setValue(AttributeValueJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Exists")) {
-                expectedAttributeValue.setExists(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                expectedAttributeValue.setExists(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ComparisonOperator")) {
                 expectedAttributeValue.setComparisonOperator(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("AttributeValueList")) {
                 expectedAttributeValue.setAttributeValueList(new ListUnmarshaller<AttributeValue>(
-                        AttributeValueJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AttributeValueJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GetItemResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GetItemResultJsonUnmarshaller.java
index f05a97868f..3485376d36 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GetItemResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GetItemResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public GetItemResult unmarshall(JsonUnmarshallerContext context) throws Exceptio
             String name = reader.nextName();
             if (name.equals("Item")) {
                 getItemResult.setItem(new MapUnmarshaller<AttributeValue>(
-                        AttributeValueJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AttributeValueJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ConsumedCapacity")) {
                 getItemResult.setConsumedCapacity(ConsumedCapacityJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalSecondaryIndexDescriptionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalSecondaryIndexDescriptionJsonUnmarshaller.java
index 4cb98ff251..fdc1443a02 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalSecondaryIndexDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalSecondaryIndexDescriptionJsonUnmarshaller.java
@@ -43,23 +43,29 @@ public GlobalSecondaryIndexDescription unmarshall(JsonUnmarshallerContext contex
             } else if (name.equals("KeySchema")) {
                 globalSecondaryIndexDescription
                         .setKeySchema(new ListUnmarshaller<KeySchemaElement>(
-                                KeySchemaElementJsonUnmarshaller.getInstance()).unmarshall(context));
+                                KeySchemaElementJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Projection")) {
                 globalSecondaryIndexDescription.setProjection(ProjectionJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("IndexStatus")) {
                 globalSecondaryIndexDescription.setIndexStatus(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Backfilling")) {
                 globalSecondaryIndexDescription.setBackfilling(BooleanJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ProvisionedThroughput")) {
                 globalSecondaryIndexDescription
                         .setProvisionedThroughput(ProvisionedThroughputDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("IndexSizeBytes")) {
                 globalSecondaryIndexDescription.setIndexSizeBytes(LongJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ItemCount")) {
                 globalSecondaryIndexDescription.setItemCount(LongJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalSecondaryIndexInfoJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalSecondaryIndexInfoJsonUnmarshaller.java
index 6fe11b9d65..ec1d29e53b 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalSecondaryIndexInfoJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalSecondaryIndexInfoJsonUnmarshaller.java
@@ -41,14 +41,17 @@ public GlobalSecondaryIndexInfo unmarshall(JsonUnmarshallerContext context) thro
                         .unmarshall(context));
             } else if (name.equals("KeySchema")) {
                 globalSecondaryIndexInfo.setKeySchema(new ListUnmarshaller<KeySchemaElement>(
-                        KeySchemaElementJsonUnmarshaller.getInstance()).unmarshall(context));
+                        KeySchemaElementJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Projection")) {
                 globalSecondaryIndexInfo.setProjection(ProjectionJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ProvisionedThroughput")) {
                 globalSecondaryIndexInfo
                         .setProvisionedThroughput(ProvisionedThroughputJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalSecondaryIndexJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalSecondaryIndexJsonUnmarshaller.java
index f9dc285f12..06596bd094 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalSecondaryIndexJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalSecondaryIndexJsonUnmarshaller.java
@@ -37,17 +37,20 @@ public GlobalSecondaryIndex unmarshall(JsonUnmarshallerContext context) throws E
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("IndexName")) {
-                globalSecondaryIndex.setIndexName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                globalSecondaryIndex.setIndexName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("KeySchema")) {
                 globalSecondaryIndex.setKeySchema(new ListUnmarshaller<KeySchemaElement>(
-                        KeySchemaElementJsonUnmarshaller.getInstance()).unmarshall(context));
+                        KeySchemaElementJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Projection")) {
                 globalSecondaryIndex.setProjection(ProjectionJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ProvisionedThroughput")) {
                 globalSecondaryIndex.setProvisionedThroughput(ProvisionedThroughputJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableAlreadyExistsExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableAlreadyExistsExceptionUnmarshaller.java
index ad1da01973..233389c89f 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableAlreadyExistsExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableAlreadyExistsExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.GlobalTableAlreadyExistsException;
 
 public class GlobalTableAlreadyExistsExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public GlobalTableAlreadyExistsException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        GlobalTableAlreadyExistsException globalTableAlreadyExistsException = new GlobalTableAlreadyExistsException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                globalTableAlreadyExistsException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return globalTableAlreadyExistsException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableDescriptionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableDescriptionJsonUnmarshaller.java
index 23ec2330a9..e4e4ec7702 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableDescriptionJsonUnmarshaller.java
@@ -39,7 +39,8 @@ public GlobalTableDescription unmarshall(JsonUnmarshallerContext context) throws
             if (name.equals("ReplicationGroup")) {
                 globalTableDescription
                         .setReplicationGroup(new ListUnmarshaller<ReplicaDescription>(
-                                ReplicaDescriptionJsonUnmarshaller.getInstance())
+                                ReplicaDescriptionJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("GlobalTableArn")) {
                 globalTableDescription.setGlobalTableArn(StringJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableGlobalSecondaryIndexSettingsUpdateJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableGlobalSecondaryIndexSettingsUpdateJsonUnmarshaller.java
index 7fbc48d9eb..d62c857976 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableGlobalSecondaryIndexSettingsUpdateJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableGlobalSecondaryIndexSettingsUpdateJsonUnmarshaller.java
@@ -39,7 +39,8 @@ public GlobalTableGlobalSecondaryIndexSettingsUpdate unmarshall(JsonUnmarshaller
             String name = reader.nextName();
             if (name.equals("IndexName")) {
                 globalTableGlobalSecondaryIndexSettingsUpdate.setIndexName(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ProvisionedWriteCapacityUnits")) {
                 globalTableGlobalSecondaryIndexSettingsUpdate
                         .setProvisionedWriteCapacityUnits(LongJsonUnmarshaller.getInstance()
@@ -47,7 +48,8 @@ public GlobalTableGlobalSecondaryIndexSettingsUpdate unmarshall(JsonUnmarshaller
             } else if (name.equals("ProvisionedWriteCapacityAutoScalingSettingsUpdate")) {
                 globalTableGlobalSecondaryIndexSettingsUpdate
                         .setProvisionedWriteCapacityAutoScalingSettingsUpdate(AutoScalingSettingsUpdateJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableJsonUnmarshaller.java
index 44528ee429..d9499bd2cb 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableJsonUnmarshaller.java
@@ -36,11 +36,13 @@ public GlobalTable unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("GlobalTableName")) {
-                globalTable.setGlobalTableName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                globalTable.setGlobalTableName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ReplicationGroup")) {
                 globalTable.setReplicationGroup(new ListUnmarshaller<Replica>(
-                        ReplicaJsonUnmarshaller.getInstance()).unmarshall(context));
+                        ReplicaJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableNotFoundExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableNotFoundExceptionUnmarshaller.java
index 38d220496e..df5a0367d7 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/GlobalTableNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.GlobalTableNotFoundException;
 
 public class GlobalTableNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public GlobalTableNotFoundException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        GlobalTableNotFoundException globalTableNotFoundException = new GlobalTableNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                globalTableNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return globalTableNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/IndexNotFoundExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/IndexNotFoundExceptionUnmarshaller.java
index fb966cc390..733b1f90cd 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/IndexNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/IndexNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.IndexNotFoundException;
 
 public class IndexNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public IndexNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        IndexNotFoundException indexNotFoundException = new IndexNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                indexNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return indexNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/InternalServerErrorExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/InternalServerErrorExceptionUnmarshaller.java
index b96c5fec11..8e865cd821 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/InternalServerErrorExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/InternalServerErrorExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.InternalServerErrorException;
 
 public class InternalServerErrorExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InternalServerErrorException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InternalServerErrorException internalServerErrorException = new InternalServerErrorException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                internalServerErrorException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return internalServerErrorException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/InvalidRestoreTimeExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/InvalidRestoreTimeExceptionUnmarshaller.java
index 88a1b1c1d1..94c49dd0a3 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/InvalidRestoreTimeExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/InvalidRestoreTimeExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.InvalidRestoreTimeException;
 
 public class InvalidRestoreTimeExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidRestoreTimeException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidRestoreTimeException invalidRestoreTimeException = new InvalidRestoreTimeException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidRestoreTimeException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidRestoreTimeException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ItemCollectionMetricsJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ItemCollectionMetricsJsonUnmarshaller.java
index ebda387539..ff61176b4c 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ItemCollectionMetricsJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ItemCollectionMetricsJsonUnmarshaller.java
@@ -38,10 +38,14 @@ public ItemCollectionMetrics unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("ItemCollectionKey")) {
                 itemCollectionMetrics.setItemCollectionKey(new MapUnmarshaller<AttributeValue>(
-                        AttributeValueJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AttributeValueJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("SizeEstimateRangeGB")) {
                 itemCollectionMetrics.setSizeEstimateRangeGB(new ListUnmarshaller<Double>(
-                        DoubleJsonUnmarshaller.getInstance()).unmarshall(context));
+                        DoubleJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ItemCollectionSizeLimitExceededExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ItemCollectionSizeLimitExceededExceptionUnmarshaller.java
index 40a00bed26..bca0d107cf 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ItemCollectionSizeLimitExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ItemCollectionSizeLimitExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.ItemCollectionSizeLimitExceededException;
 
 public class ItemCollectionSizeLimitExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ItemCollectionSizeLimitExceededException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ItemCollectionSizeLimitExceededException itemCollectionSizeLimitExceededException = new ItemCollectionSizeLimitExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                itemCollectionSizeLimitExceededException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return itemCollectionSizeLimitExceededException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/KeySchemaElementJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/KeySchemaElementJsonUnmarshaller.java
index adc951601e..61fda320d0 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/KeySchemaElementJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/KeySchemaElementJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public KeySchemaElement unmarshall(JsonUnmarshallerContext context) throws Excep
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("AttributeName")) {
-                keySchemaElement.setAttributeName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                keySchemaElement.setAttributeName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("KeyType")) {
                 keySchemaElement.setKeyType(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/KeysAndAttributesJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/KeysAndAttributesJsonUnmarshaller.java
index ad1f57642c..211aaeff29 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/KeysAndAttributesJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/KeysAndAttributesJsonUnmarshaller.java
@@ -40,10 +40,15 @@ public KeysAndAttributes unmarshall(JsonUnmarshallerContext context) throws Exce
                 keysAndAttributes
                         .setKeys(new ListUnmarshaller<java.util.Map<String, AttributeValue>>(
                                 new MapUnmarshaller<AttributeValue>(AttributeValueJsonUnmarshaller
-                                        .getInstance())).unmarshall(context));
+                                        .getInstance()
+                                )
+                        )
+                                .unmarshall(context));
             } else if (name.equals("AttributesToGet")) {
                 keysAndAttributes.setAttributesToGet(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ConsistentRead")) {
                 keysAndAttributes.setConsistentRead(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -52,7 +57,9 @@ public KeysAndAttributes unmarshall(JsonUnmarshallerContext context) throws Exce
                         .unmarshall(context));
             } else if (name.equals("ExpressionAttributeNames")) {
                 keysAndAttributes.setExpressionAttributeNames(new MapUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/LimitExceededExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/LimitExceededExceptionUnmarshaller.java
index f1c44c3cb1..0881fee62d 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/LimitExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/LimitExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.LimitExceededException;
 
 public class LimitExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public LimitExceededException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        LimitExceededException limitExceededException = new LimitExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                limitExceededException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return limitExceededException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ListBackupsResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ListBackupsResultJsonUnmarshaller.java
index 9bf8b46370..a66c772430 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ListBackupsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ListBackupsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListBackupsResult unmarshall(JsonUnmarshallerContext context) throws Exce
             String name = reader.nextName();
             if (name.equals("BackupSummaries")) {
                 listBackupsResult.setBackupSummaries(new ListUnmarshaller<BackupSummary>(
-                        BackupSummaryJsonUnmarshaller.getInstance()).unmarshall(context));
+                        BackupSummaryJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("LastEvaluatedBackupArn")) {
                 listBackupsResult.setLastEvaluatedBackupArn(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ListGlobalTablesResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ListGlobalTablesResultJsonUnmarshaller.java
index 000c983c6c..f86ec95f7e 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ListGlobalTablesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ListGlobalTablesResultJsonUnmarshaller.java
@@ -35,10 +35,13 @@ public ListGlobalTablesResult unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("GlobalTables")) {
                 listGlobalTablesResult.setGlobalTables(new ListUnmarshaller<GlobalTable>(
-                        GlobalTableJsonUnmarshaller.getInstance()).unmarshall(context));
+                        GlobalTableJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("LastEvaluatedGlobalTableName")) {
                 listGlobalTablesResult.setLastEvaluatedGlobalTableName(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ListTablesResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ListTablesResultJsonUnmarshaller.java
index e8f04451df..8814940c58 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ListTablesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ListTablesResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListTablesResult unmarshall(JsonUnmarshallerContext context) throws Excep
             String name = reader.nextName();
             if (name.equals("TableNames")) {
                 listTablesResult.setTableNames(new ListUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("LastEvaluatedTableName")) {
                 listTablesResult.setLastEvaluatedTableName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ListTagsOfResourceResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ListTagsOfResourceResultJsonUnmarshaller.java
index cdae83c8b9..42feac6a4d 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ListTagsOfResourceResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ListTagsOfResourceResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListTagsOfResourceResult unmarshall(JsonUnmarshallerContext context) thro
             String name = reader.nextName();
             if (name.equals("Tags")) {
                 listTagsOfResourceResult.setTags(new ListUnmarshaller<Tag>(TagJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextToken")) {
                 listTagsOfResourceResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/LocalSecondaryIndexDescriptionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/LocalSecondaryIndexDescriptionJsonUnmarshaller.java
index fb0945f069..377e0f4fb6 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/LocalSecondaryIndexDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/LocalSecondaryIndexDescriptionJsonUnmarshaller.java
@@ -42,10 +42,13 @@ public LocalSecondaryIndexDescription unmarshall(JsonUnmarshallerContext context
                         .unmarshall(context));
             } else if (name.equals("KeySchema")) {
                 localSecondaryIndexDescription.setKeySchema(new ListUnmarshaller<KeySchemaElement>(
-                        KeySchemaElementJsonUnmarshaller.getInstance()).unmarshall(context));
+                        KeySchemaElementJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Projection")) {
                 localSecondaryIndexDescription.setProjection(ProjectionJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("IndexSizeBytes")) {
                 localSecondaryIndexDescription.setIndexSizeBytes(LongJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/LocalSecondaryIndexInfoJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/LocalSecondaryIndexInfoJsonUnmarshaller.java
index a3946fb2d8..0dda1873f7 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/LocalSecondaryIndexInfoJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/LocalSecondaryIndexInfoJsonUnmarshaller.java
@@ -41,7 +41,9 @@ public LocalSecondaryIndexInfo unmarshall(JsonUnmarshallerContext context) throw
                         .unmarshall(context));
             } else if (name.equals("KeySchema")) {
                 localSecondaryIndexInfo.setKeySchema(new ListUnmarshaller<KeySchemaElement>(
-                        KeySchemaElementJsonUnmarshaller.getInstance()).unmarshall(context));
+                        KeySchemaElementJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Projection")) {
                 localSecondaryIndexInfo.setProjection(ProjectionJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/LocalSecondaryIndexJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/LocalSecondaryIndexJsonUnmarshaller.java
index 91bc78652f..45b926ef9a 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/LocalSecondaryIndexJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/LocalSecondaryIndexJsonUnmarshaller.java
@@ -37,11 +37,13 @@ public LocalSecondaryIndex unmarshall(JsonUnmarshallerContext context) throws Ex
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("IndexName")) {
-                localSecondaryIndex.setIndexName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                localSecondaryIndex.setIndexName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("KeySchema")) {
                 localSecondaryIndex.setKeySchema(new ListUnmarshaller<KeySchemaElement>(
-                        KeySchemaElementJsonUnmarshaller.getInstance()).unmarshall(context));
+                        KeySchemaElementJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Projection")) {
                 localSecondaryIndex.setProjection(ProjectionJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/PointInTimeRecoveryDescriptionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/PointInTimeRecoveryDescriptionJsonUnmarshaller.java
index 0f1409522f..e629e4304f 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/PointInTimeRecoveryDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/PointInTimeRecoveryDescriptionJsonUnmarshaller.java
@@ -39,13 +39,16 @@ public PointInTimeRecoveryDescription unmarshall(JsonUnmarshallerContext context
             String name = reader.nextName();
             if (name.equals("PointInTimeRecoveryStatus")) {
                 pointInTimeRecoveryDescription.setPointInTimeRecoveryStatus(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EarliestRestorableDateTime")) {
                 pointInTimeRecoveryDescription.setEarliestRestorableDateTime(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LatestRestorableDateTime")) {
                 pointInTimeRecoveryDescription.setLatestRestorableDateTime(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/PointInTimeRecoveryUnavailableExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/PointInTimeRecoveryUnavailableExceptionUnmarshaller.java
index eb2626b8d9..f9583793cd 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/PointInTimeRecoveryUnavailableExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/PointInTimeRecoveryUnavailableExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.PointInTimeRecoveryUnavailableException;
 
 public class PointInTimeRecoveryUnavailableExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public PointInTimeRecoveryUnavailableException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        PointInTimeRecoveryUnavailableException pointInTimeRecoveryUnavailableException = new PointInTimeRecoveryUnavailableException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                pointInTimeRecoveryUnavailableException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return pointInTimeRecoveryUnavailableException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ProjectionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ProjectionJsonUnmarshaller.java
index 8193debf50..2276b572bc 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ProjectionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ProjectionJsonUnmarshaller.java
@@ -36,11 +36,13 @@ public Projection unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("ProjectionType")) {
-                projection.setProjectionType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                projection.setProjectionType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("NonKeyAttributes")) {
                 projection.setNonKeyAttributes(new ListUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ProvisionedThroughputDescriptionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ProvisionedThroughputDescriptionJsonUnmarshaller.java
index 94cb02cfc9..2c8da941b9 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ProvisionedThroughputDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ProvisionedThroughputDescriptionJsonUnmarshaller.java
@@ -39,19 +39,24 @@ public ProvisionedThroughputDescription unmarshall(JsonUnmarshallerContext conte
             String name = reader.nextName();
             if (name.equals("LastIncreaseDateTime")) {
                 provisionedThroughputDescription.setLastIncreaseDateTime(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastDecreaseDateTime")) {
                 provisionedThroughputDescription.setLastDecreaseDateTime(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("NumberOfDecreasesToday")) {
                 provisionedThroughputDescription.setNumberOfDecreasesToday(LongJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ReadCapacityUnits")) {
                 provisionedThroughputDescription.setReadCapacityUnits(LongJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("WriteCapacityUnits")) {
                 provisionedThroughputDescription.setWriteCapacityUnits(LongJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ProvisionedThroughputExceededExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ProvisionedThroughputExceededExceptionUnmarshaller.java
index 65f7a0218d..85e50d0f90 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ProvisionedThroughputExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ProvisionedThroughputExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.ProvisionedThroughputExceededException;
 
 public class ProvisionedThroughputExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ProvisionedThroughputExceededException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ProvisionedThroughputExceededException provisionedThroughputExceededException = new ProvisionedThroughputExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                provisionedThroughputExceededException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return provisionedThroughputExceededException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/PutItemResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/PutItemResultJsonUnmarshaller.java
index 3978a39d9a..25124220e6 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/PutItemResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/PutItemResultJsonUnmarshaller.java
@@ -35,13 +35,16 @@ public PutItemResult unmarshall(JsonUnmarshallerContext context) throws Exceptio
             String name = reader.nextName();
             if (name.equals("Attributes")) {
                 putItemResult.setAttributes(new MapUnmarshaller<AttributeValue>(
-                        AttributeValueJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AttributeValueJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ConsumedCapacity")) {
                 putItemResult.setConsumedCapacity(ConsumedCapacityJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ItemCollectionMetrics")) {
                 putItemResult.setItemCollectionMetrics(ItemCollectionMetricsJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/PutRequestJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/PutRequestJsonUnmarshaller.java
index c3cc9039fa..14fe3cf755 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/PutRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/PutRequestJsonUnmarshaller.java
@@ -37,7 +37,9 @@ public PutRequest unmarshall(JsonUnmarshallerContext context) throws Exception {
             String name = reader.nextName();
             if (name.equals("Item")) {
                 putRequest.setItem(new MapUnmarshaller<AttributeValue>(
-                        AttributeValueJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AttributeValueJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/QueryResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/QueryResultJsonUnmarshaller.java
index 425dcc3b08..3face1d303 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/QueryResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/QueryResultJsonUnmarshaller.java
@@ -36,15 +36,21 @@ public QueryResult unmarshall(JsonUnmarshallerContext context) throws Exception
             if (name.equals("Items")) {
                 queryResult.setItems(new ListUnmarshaller<java.util.Map<String, AttributeValue>>(
                         new MapUnmarshaller<AttributeValue>(AttributeValueJsonUnmarshaller
-                                .getInstance())).unmarshall(context));
+                                .getInstance()
+                        )
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Count")) {
-                queryResult.setCount(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                queryResult.setCount(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ScannedCount")) {
-                queryResult.setScannedCount(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                queryResult.setScannedCount(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastEvaluatedKey")) {
                 queryResult.setLastEvaluatedKey(new MapUnmarshaller<AttributeValue>(
-                        AttributeValueJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AttributeValueJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ConsumedCapacity")) {
                 queryResult.setConsumedCapacity(ConsumedCapacityJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaAlreadyExistsExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaAlreadyExistsExceptionUnmarshaller.java
index 5d12b8aec5..f5ca3ec697 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaAlreadyExistsExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaAlreadyExistsExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.ReplicaAlreadyExistsException;
 
 public class ReplicaAlreadyExistsExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ReplicaAlreadyExistsException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ReplicaAlreadyExistsException replicaAlreadyExistsException = new ReplicaAlreadyExistsException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                replicaAlreadyExistsException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return replicaAlreadyExistsException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaDescriptionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaDescriptionJsonUnmarshaller.java
index 49ea7edc24..b1e5165fcb 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaDescriptionJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public ReplicaDescription unmarshall(JsonUnmarshallerContext context) throws Exc
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("RegionName")) {
-                replicaDescription.setRegionName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                replicaDescription.setRegionName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaGlobalSecondaryIndexSettingsDescriptionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaGlobalSecondaryIndexSettingsDescriptionJsonUnmarshaller.java
index becafc97f6..1afb6493ff 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaGlobalSecondaryIndexSettingsDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaGlobalSecondaryIndexSettingsDescriptionJsonUnmarshaller.java
@@ -39,10 +39,12 @@ public ReplicaGlobalSecondaryIndexSettingsDescription unmarshall(JsonUnmarshalle
             String name = reader.nextName();
             if (name.equals("IndexName")) {
                 replicaGlobalSecondaryIndexSettingsDescription.setIndexName(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("IndexStatus")) {
                 replicaGlobalSecondaryIndexSettingsDescription
-                        .setIndexStatus(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                        .setIndexStatus(StringJsonUnmarshaller.getInstance()
+                                .unmarshall(context));
             } else if (name.equals("ProvisionedReadCapacityUnits")) {
                 replicaGlobalSecondaryIndexSettingsDescription
                         .setProvisionedReadCapacityUnits(LongJsonUnmarshaller.getInstance()
@@ -50,7 +52,8 @@ public ReplicaGlobalSecondaryIndexSettingsDescription unmarshall(JsonUnmarshalle
             } else if (name.equals("ProvisionedReadCapacityAutoScalingSettings")) {
                 replicaGlobalSecondaryIndexSettingsDescription
                         .setProvisionedReadCapacityAutoScalingSettings(AutoScalingSettingsDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("ProvisionedWriteCapacityUnits")) {
                 replicaGlobalSecondaryIndexSettingsDescription
                         .setProvisionedWriteCapacityUnits(LongJsonUnmarshaller.getInstance()
@@ -58,7 +61,8 @@ public ReplicaGlobalSecondaryIndexSettingsDescription unmarshall(JsonUnmarshalle
             } else if (name.equals("ProvisionedWriteCapacityAutoScalingSettings")) {
                 replicaGlobalSecondaryIndexSettingsDescription
                         .setProvisionedWriteCapacityAutoScalingSettings(AutoScalingSettingsDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaGlobalSecondaryIndexSettingsUpdateJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaGlobalSecondaryIndexSettingsUpdateJsonUnmarshaller.java
index 426fd5dd08..1576f9e5af 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaGlobalSecondaryIndexSettingsUpdateJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaGlobalSecondaryIndexSettingsUpdateJsonUnmarshaller.java
@@ -39,7 +39,8 @@ public ReplicaGlobalSecondaryIndexSettingsUpdate unmarshall(JsonUnmarshallerCont
             String name = reader.nextName();
             if (name.equals("IndexName")) {
                 replicaGlobalSecondaryIndexSettingsUpdate.setIndexName(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ProvisionedReadCapacityUnits")) {
                 replicaGlobalSecondaryIndexSettingsUpdate
                         .setProvisionedReadCapacityUnits(LongJsonUnmarshaller.getInstance()
@@ -47,7 +48,8 @@ public ReplicaGlobalSecondaryIndexSettingsUpdate unmarshall(JsonUnmarshallerCont
             } else if (name.equals("ProvisionedReadCapacityAutoScalingSettingsUpdate")) {
                 replicaGlobalSecondaryIndexSettingsUpdate
                         .setProvisionedReadCapacityAutoScalingSettingsUpdate(AutoScalingSettingsUpdateJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaJsonUnmarshaller.java
index 50a9c7e573..a7d2eb9a6e 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public Replica unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("RegionName")) {
-                replica.setRegionName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                replica.setRegionName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaNotFoundExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaNotFoundExceptionUnmarshaller.java
index 2d7a8414d3..6e571d1a1a 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.ReplicaNotFoundException;
 
 public class ReplicaNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ReplicaNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ReplicaNotFoundException replicaNotFoundException = new ReplicaNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                replicaNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return replicaNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaSettingsDescriptionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaSettingsDescriptionJsonUnmarshaller.java
index c0374972d5..df6ebe1b33 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaSettingsDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaSettingsDescriptionJsonUnmarshaller.java
@@ -49,7 +49,8 @@ public ReplicaSettingsDescription unmarshall(JsonUnmarshallerContext context) th
             } else if (name.equals("ReplicaProvisionedReadCapacityAutoScalingSettings")) {
                 replicaSettingsDescription
                         .setReplicaProvisionedReadCapacityAutoScalingSettings(AutoScalingSettingsDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("ReplicaProvisionedWriteCapacityUnits")) {
                 replicaSettingsDescription
                         .setReplicaProvisionedWriteCapacityUnits(LongJsonUnmarshaller.getInstance()
@@ -57,12 +58,15 @@ public ReplicaSettingsDescription unmarshall(JsonUnmarshallerContext context) th
             } else if (name.equals("ReplicaProvisionedWriteCapacityAutoScalingSettings")) {
                 replicaSettingsDescription
                         .setReplicaProvisionedWriteCapacityAutoScalingSettings(AutoScalingSettingsDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("ReplicaGlobalSecondaryIndexSettings")) {
                 replicaSettingsDescription
                         .setReplicaGlobalSecondaryIndexSettings(new ListUnmarshaller<ReplicaGlobalSecondaryIndexSettingsDescription>(
                                 ReplicaGlobalSecondaryIndexSettingsDescriptionJsonUnmarshaller
-                                        .getInstance()).unmarshall(context));
+                                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaSettingsUpdateJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaSettingsUpdateJsonUnmarshaller.java
index 71f89c6b7e..993b6089ca 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaSettingsUpdateJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ReplicaSettingsUpdateJsonUnmarshaller.java
@@ -41,16 +41,20 @@ public ReplicaSettingsUpdate unmarshall(JsonUnmarshallerContext context) throws
                         .unmarshall(context));
             } else if (name.equals("ReplicaProvisionedReadCapacityUnits")) {
                 replicaSettingsUpdate.setReplicaProvisionedReadCapacityUnits(LongJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate")) {
                 replicaSettingsUpdate
                         .setReplicaProvisionedReadCapacityAutoScalingSettingsUpdate(AutoScalingSettingsUpdateJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("ReplicaGlobalSecondaryIndexSettingsUpdate")) {
                 replicaSettingsUpdate
                         .setReplicaGlobalSecondaryIndexSettingsUpdate(new ListUnmarshaller<ReplicaGlobalSecondaryIndexSettingsUpdate>(
                                 ReplicaGlobalSecondaryIndexSettingsUpdateJsonUnmarshaller
-                                        .getInstance()).unmarshall(context));
+                                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ResourceInUseExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ResourceInUseExceptionUnmarshaller.java
index 47ba87312c..4d21e1da18 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ResourceInUseExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ResourceInUseExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.ResourceInUseException;
 
 public class ResourceInUseExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceInUseException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceInUseException resourceInUseException = new ResourceInUseException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceInUseException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceInUseException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ResourceNotFoundExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ResourceNotFoundExceptionUnmarshaller.java
index e7399f35df..ea45800d0c 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ResourceNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ResourceNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.ResourceNotFoundException;
 
 public class ResourceNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceNotFoundException resourceNotFoundException = new ResourceNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/RestoreSummaryJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/RestoreSummaryJsonUnmarshaller.java
index b3ff3dd091..48d7cd0b48 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/RestoreSummaryJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/RestoreSummaryJsonUnmarshaller.java
@@ -37,14 +37,14 @@ public RestoreSummary unmarshall(JsonUnmarshallerContext context) throws Excepti
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("SourceBackupArn")) {
-                restoreSummary.setSourceBackupArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                restoreSummary.setSourceBackupArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SourceTableArn")) {
-                restoreSummary.setSourceTableArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                restoreSummary.setSourceTableArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RestoreDateTime")) {
-                restoreSummary.setRestoreDateTime(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                restoreSummary.setRestoreDateTime(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RestoreInProgress")) {
                 restoreSummary.setRestoreInProgress(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/RestoreTableFromBackupResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/RestoreTableFromBackupResultJsonUnmarshaller.java
index 0f9694d10f..2d7947101e 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/RestoreTableFromBackupResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/RestoreTableFromBackupResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public RestoreTableFromBackupResult unmarshall(JsonUnmarshallerContext context)
             String name = reader.nextName();
             if (name.equals("TableDescription")) {
                 restoreTableFromBackupResult.setTableDescription(TableDescriptionJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/SSEDescriptionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/SSEDescriptionJsonUnmarshaller.java
index 34f2112c83..723892be80 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/SSEDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/SSEDescriptionJsonUnmarshaller.java
@@ -37,12 +37,14 @@ public SSEDescription unmarshall(JsonUnmarshallerContext context) throws Excepti
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Status")) {
-                sSEDescription.setStatus(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                sSEDescription.setStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SSEType")) {
-                sSEDescription.setSSEType(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                sSEDescription.setSSEType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("KMSMasterKeyArn")) {
-                sSEDescription.setKMSMasterKeyArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sSEDescription.setKMSMasterKeyArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/SSESpecificationJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/SSESpecificationJsonUnmarshaller.java
index c9732e9888..999656b932 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/SSESpecificationJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/SSESpecificationJsonUnmarshaller.java
@@ -37,14 +37,14 @@ public SSESpecification unmarshall(JsonUnmarshallerContext context) throws Excep
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Enabled")) {
-                sSESpecification.setEnabled(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sSESpecification.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SSEType")) {
                 sSESpecification.setSSEType(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("KMSMasterKeyId")) {
-                sSESpecification.setKMSMasterKeyId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sSESpecification.setKMSMasterKeyId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ScanResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ScanResultJsonUnmarshaller.java
index 5e484614c8..0b230c4aad 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ScanResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/ScanResultJsonUnmarshaller.java
@@ -36,15 +36,21 @@ public ScanResult unmarshall(JsonUnmarshallerContext context) throws Exception {
             if (name.equals("Items")) {
                 scanResult.setItems(new ListUnmarshaller<java.util.Map<String, AttributeValue>>(
                         new MapUnmarshaller<AttributeValue>(AttributeValueJsonUnmarshaller
-                                .getInstance())).unmarshall(context));
+                                .getInstance()
+                        )
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Count")) {
-                scanResult.setCount(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                scanResult.setCount(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ScannedCount")) {
                 scanResult.setScannedCount(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("LastEvaluatedKey")) {
                 scanResult.setLastEvaluatedKey(new MapUnmarshaller<AttributeValue>(
-                        AttributeValueJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AttributeValueJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ConsumedCapacity")) {
                 scanResult.setConsumedCapacity(ConsumedCapacityJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/SourceTableDetailsJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/SourceTableDetailsJsonUnmarshaller.java
index f9060808ca..612bc205b5 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/SourceTableDetailsJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/SourceTableDetailsJsonUnmarshaller.java
@@ -37,29 +37,32 @@ public SourceTableDetails unmarshall(JsonUnmarshallerContext context) throws Exc
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("TableName")) {
-                sourceTableDetails.setTableName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sourceTableDetails.setTableName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TableId")) {
-                sourceTableDetails.setTableId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sourceTableDetails.setTableId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TableArn")) {
-                sourceTableDetails.setTableArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sourceTableDetails.setTableArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TableSizeBytes")) {
-                sourceTableDetails.setTableSizeBytes(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sourceTableDetails.setTableSizeBytes(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("KeySchema")) {
                 sourceTableDetails.setKeySchema(new ListUnmarshaller<KeySchemaElement>(
-                        KeySchemaElementJsonUnmarshaller.getInstance()).unmarshall(context));
+                        KeySchemaElementJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("TableCreationDateTime")) {
                 sourceTableDetails.setTableCreationDateTime(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ProvisionedThroughput")) {
                 sourceTableDetails.setProvisionedThroughput(ProvisionedThroughputJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ItemCount")) {
-                sourceTableDetails.setItemCount(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sourceTableDetails.setItemCount(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/SourceTableFeatureDetailsJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/SourceTableFeatureDetailsJsonUnmarshaller.java
index bb6f38419c..ddb4246956 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/SourceTableFeatureDetailsJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/SourceTableFeatureDetailsJsonUnmarshaller.java
@@ -39,23 +39,28 @@ public SourceTableFeatureDetails unmarshall(JsonUnmarshallerContext context) thr
             if (name.equals("LocalSecondaryIndexes")) {
                 sourceTableFeatureDetails
                         .setLocalSecondaryIndexes(new ListUnmarshaller<LocalSecondaryIndexInfo>(
-                                LocalSecondaryIndexInfoJsonUnmarshaller.getInstance())
+                                LocalSecondaryIndexInfoJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("GlobalSecondaryIndexes")) {
                 sourceTableFeatureDetails
                         .setGlobalSecondaryIndexes(new ListUnmarshaller<GlobalSecondaryIndexInfo>(
-                                GlobalSecondaryIndexInfoJsonUnmarshaller.getInstance())
+                                GlobalSecondaryIndexInfoJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("StreamDescription")) {
                 sourceTableFeatureDetails.setStreamDescription(StreamSpecificationJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TimeToLiveDescription")) {
                 sourceTableFeatureDetails
                         .setTimeToLiveDescription(TimeToLiveDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("SSEDescription")) {
                 sourceTableFeatureDetails.setSSEDescription(SSEDescriptionJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TableAlreadyExistsExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TableAlreadyExistsExceptionUnmarshaller.java
index b87c5aaf4c..a222ed9d27 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TableAlreadyExistsExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TableAlreadyExistsExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.TableAlreadyExistsException;
 
 public class TableAlreadyExistsExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public TableAlreadyExistsException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        TableAlreadyExistsException tableAlreadyExistsException = new TableAlreadyExistsException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                tableAlreadyExistsException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return tableAlreadyExistsException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TableDescriptionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TableDescriptionJsonUnmarshaller.java
index 2046b2ab18..2d2a066432 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TableDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TableDescriptionJsonUnmarshaller.java
@@ -38,48 +38,56 @@ public TableDescription unmarshall(JsonUnmarshallerContext context) throws Excep
             String name = reader.nextName();
             if (name.equals("AttributeDefinitions")) {
                 tableDescription.setAttributeDefinitions(new ListUnmarshaller<AttributeDefinition>(
-                        AttributeDefinitionJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AttributeDefinitionJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("TableName")) {
-                tableDescription.setTableName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                tableDescription.setTableName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("KeySchema")) {
                 tableDescription.setKeySchema(new ListUnmarshaller<KeySchemaElement>(
-                        KeySchemaElementJsonUnmarshaller.getInstance()).unmarshall(context));
+                        KeySchemaElementJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("TableStatus")) {
-                tableDescription.setTableStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                tableDescription.setTableStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CreationDateTime")) {
-                tableDescription.setCreationDateTime(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                tableDescription.setCreationDateTime(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ProvisionedThroughput")) {
                 tableDescription
                         .setProvisionedThroughput(ProvisionedThroughputDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("TableSizeBytes")) {
-                tableDescription.setTableSizeBytes(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                tableDescription.setTableSizeBytes(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ItemCount")) {
                 tableDescription.setItemCount(LongJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("TableArn")) {
-                tableDescription.setTableArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                tableDescription.setTableArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TableId")) {
                 tableDescription.setTableId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("LocalSecondaryIndexes")) {
                 tableDescription
                         .setLocalSecondaryIndexes(new ListUnmarshaller<LocalSecondaryIndexDescription>(
-                                LocalSecondaryIndexDescriptionJsonUnmarshaller.getInstance())
+                                LocalSecondaryIndexDescriptionJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("GlobalSecondaryIndexes")) {
                 tableDescription
                         .setGlobalSecondaryIndexes(new ListUnmarshaller<GlobalSecondaryIndexDescription>(
-                                GlobalSecondaryIndexDescriptionJsonUnmarshaller.getInstance())
+                                GlobalSecondaryIndexDescriptionJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("StreamSpecification")) {
                 tableDescription.setStreamSpecification(StreamSpecificationJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LatestStreamLabel")) {
                 tableDescription.setLatestStreamLabel(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TableInUseExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TableInUseExceptionUnmarshaller.java
index f8c9d4e8e6..951648713c 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TableInUseExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TableInUseExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.TableInUseException;
 
 public class TableInUseExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public TableInUseException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        TableInUseException tableInUseException = new TableInUseException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                tableInUseException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return tableInUseException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TableNotFoundExceptionUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TableNotFoundExceptionUnmarshaller.java
index 7c4c2e300a..b520787478 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TableNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TableNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.dynamodbv2.model.TableNotFoundException;
 
 public class TableNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public TableNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        TableNotFoundException tableNotFoundException = new TableNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                tableNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return tableNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TagJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TagJsonUnmarshaller.java
index 3318b7ff03..3005ae9f5b 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TagJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/TagJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Tag unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Key")) {
-                tag.setKey(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                tag.setKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Value")) {
-                tag.setValue(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                tag.setValue(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateContinuousBackupsResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateContinuousBackupsResultJsonUnmarshaller.java
index 92493b46c8..80171f7fac 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateContinuousBackupsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateContinuousBackupsResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public UpdateContinuousBackupsResult unmarshall(JsonUnmarshallerContext context)
             if (name.equals("ContinuousBackupsDescription")) {
                 updateContinuousBackupsResult
                         .setContinuousBackupsDescription(ContinuousBackupsDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateGlobalSecondaryIndexActionJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateGlobalSecondaryIndexActionJsonUnmarshaller.java
index dcb521ee9e..7acb27e635 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateGlobalSecondaryIndexActionJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateGlobalSecondaryIndexActionJsonUnmarshaller.java
@@ -43,7 +43,8 @@ public UpdateGlobalSecondaryIndexAction unmarshall(JsonUnmarshallerContext conte
             } else if (name.equals("ProvisionedThroughput")) {
                 updateGlobalSecondaryIndexAction
                         .setProvisionedThroughput(ProvisionedThroughputJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateGlobalTableResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateGlobalTableResultJsonUnmarshaller.java
index c5ad9971c6..81a63400e1 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateGlobalTableResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateGlobalTableResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public UpdateGlobalTableResult unmarshall(JsonUnmarshallerContext context) throw
             if (name.equals("GlobalTableDescription")) {
                 updateGlobalTableResult
                         .setGlobalTableDescription(GlobalTableDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateGlobalTableSettingsResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateGlobalTableSettingsResultJsonUnmarshaller.java
index 0e68605112..116b8b677e 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateGlobalTableSettingsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateGlobalTableSettingsResultJsonUnmarshaller.java
@@ -36,11 +36,13 @@ public UpdateGlobalTableSettingsResult unmarshall(JsonUnmarshallerContext contex
             String name = reader.nextName();
             if (name.equals("GlobalTableName")) {
                 updateGlobalTableSettingsResult.setGlobalTableName(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ReplicaSettings")) {
                 updateGlobalTableSettingsResult
                         .setReplicaSettings(new ListUnmarshaller<ReplicaSettingsDescription>(
-                                ReplicaSettingsDescriptionJsonUnmarshaller.getInstance())
+                                ReplicaSettingsDescriptionJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else {
                 reader.skipValue();
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateItemResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateItemResultJsonUnmarshaller.java
index 361acf618f..a6f341e917 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateItemResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateItemResultJsonUnmarshaller.java
@@ -35,13 +35,16 @@ public UpdateItemResult unmarshall(JsonUnmarshallerContext context) throws Excep
             String name = reader.nextName();
             if (name.equals("Attributes")) {
                 updateItemResult.setAttributes(new MapUnmarshaller<AttributeValue>(
-                        AttributeValueJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AttributeValueJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ConsumedCapacity")) {
                 updateItemResult.setConsumedCapacity(ConsumedCapacityJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ItemCollectionMetrics")) {
                 updateItemResult.setItemCollectionMetrics(ItemCollectionMetricsJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateTableResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateTableResultJsonUnmarshaller.java
index b2ca4e878a..c5928de51e 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateTableResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateTableResultJsonUnmarshaller.java
@@ -35,7 +35,8 @@ public UpdateTableResult unmarshall(JsonUnmarshallerContext context) throws Exce
             String name = reader.nextName();
             if (name.equals("TableDescription")) {
                 updateTableResult.setTableDescription(TableDescriptionJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateTimeToLiveResultJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateTimeToLiveResultJsonUnmarshaller.java
index 264671ae95..d5a0f1a509 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateTimeToLiveResultJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/UpdateTimeToLiveResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public UpdateTimeToLiveResult unmarshall(JsonUnmarshallerContext context) throws
             if (name.equals("TimeToLiveSpecification")) {
                 updateTimeToLiveResult
                         .setTimeToLiveSpecification(TimeToLiveSpecificationJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/WriteRequestJsonUnmarshaller.java b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/WriteRequestJsonUnmarshaller.java
index 32f75ac9b2..3a0ce6bfac 100644
--- a/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/WriteRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-ddb/src/main/java/com/amazonaws/services/dynamodbv2/model/transform/WriteRequestJsonUnmarshaller.java
@@ -36,8 +36,8 @@ public WriteRequest unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("PutRequest")) {
-                writeRequest.setPutRequest(PutRequestJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                writeRequest.setPutRequest(PutRequestJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("DeleteRequest")) {
                 writeRequest.setDeleteRequest(DeleteRequestJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-ec2/pom.xml b/aws-android-sdk-ec2/pom.xml
index 6a78f47ba6..632ea74b35 100644
--- a/aws-android-sdk-ec2/pom.xml
+++ b/aws-android-sdk-ec2/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-elb/pom.xml b/aws-android-sdk-elb/pom.xml
index 1e78175c06..cd25706356 100644
--- a/aws-android-sdk-elb/pom.xml
+++ b/aws-android-sdk-elb/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-iot/build.gradle b/aws-android-sdk-iot/build.gradle
index f7125e8cfa..7918f6b83e 100644
--- a/aws-android-sdk-iot/build.gradle
+++ b/aws-android-sdk-iot/build.gradle
@@ -5,6 +5,10 @@ dependencies {
 
     api project(":aws-android-sdk-core")
     implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0"
+
+    testImplementation "junit:junit:4.12"
+    testImplementation "org.robolectric:robolectric:2.4"
+    testImplementation "org.mockito:mockito-all:1.10.5"
 }
 
 sourceCompatibility = "1.7"
diff --git a/aws-android-sdk-iot/pom.xml b/aws-android-sdk-iot/pom.xml
index d9b606e019..d4776f69f5 100644
--- a/aws-android-sdk-iot/pom.xml
+++ b/aws-android-sdk-iot/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
     <dependency>
       <groupId>org.eclipse.paho</groupId>
@@ -28,6 +28,24 @@
       <optional>false</optional>
       <version>1.1.0</version>
     </dependency>
+    <dependency>
+      <groupId>junit</groupId>
+      <artifactId>junit</artifactId>
+      <version>4.12</version>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.robolectric</groupId>
+      <artifactId>robolectric</artifactId>
+      <version>2.4</version>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.mockito</groupId>
+      <artifactId>mockito-all</artifactId>
+      <version>1.10.5</version>
+      <scope>test</scope>
+    </dependency>
   </dependencies>
 
   <build>
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java
index 3e78df9306..4966be13d1 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java
@@ -1053,6 +1053,7 @@ public void run() {
                     if (mqttClient != null && !mqttClient.isConnected()) {
                         reconnectToSession();
                     }
+                    ht.quit();
                 }
             }, MILLIS_IN_ONE_SECOND * currentReconnectRetryTime);
             currentReconnectRetryTime = Math.min(currentReconnectRetryTime * 2, maxReconnectRetryTime);
@@ -1261,6 +1262,8 @@ public void publishData(byte[] data, String topic, AWSIotMqttQos qos,
                             AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus.Fail,
                             userData);
                 }
+            } else {
+            	throw new AmazonClientException("Client is reconnecting and publishing from offline queue is disabled.");
             }
         } else {
             throw new AmazonClientException("Client is disconnected or not yet connected.");
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AbortConfigJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AbortConfigJsonUnmarshaller.java
index 8932e82341..6dcc750c22 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AbortConfigJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AbortConfigJsonUnmarshaller.java
@@ -37,7 +37,9 @@ public AbortConfig unmarshall(JsonUnmarshallerContext context) throws Exception
             String name = reader.nextName();
             if (name.equals("criteriaList")) {
                 abortConfig.setCriteriaList(new ListUnmarshaller<AbortCriteria>(
-                        AbortCriteriaJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AbortCriteriaJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AbortCriteriaJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AbortCriteriaJsonUnmarshaller.java
index 1b6a1d7054..770eefb465 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AbortCriteriaJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AbortCriteriaJsonUnmarshaller.java
@@ -36,10 +36,11 @@ public AbortCriteria unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("failureType")) {
-                abortCriteria.setFailureType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                abortCriteria.setFailureType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("action")) {
-                abortCriteria.setAction(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                abortCriteria.setAction(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thresholdPercentage")) {
                 abortCriteria.setThresholdPercentage(DoubleJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ActionJsonUnmarshaller.java
index 5a6895023c..5770041493 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ActionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ActionJsonUnmarshaller.java
@@ -36,25 +36,32 @@ public Action unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("dynamoDB")) {
-                action.setDynamoDB(DynamoDBActionJsonUnmarshaller.getInstance().unmarshall(context));
+                action.setDynamoDB(DynamoDBActionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("dynamoDBv2")) {
-                action.setDynamoDBv2(DynamoDBv2ActionJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                action.setDynamoDBv2(DynamoDBv2ActionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("lambda")) {
-                action.setLambda(LambdaActionJsonUnmarshaller.getInstance().unmarshall(context));
+                action.setLambda(LambdaActionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("sns")) {
-                action.setSns(SnsActionJsonUnmarshaller.getInstance().unmarshall(context));
+                action.setSns(SnsActionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("sqs")) {
-                action.setSqs(SqsActionJsonUnmarshaller.getInstance().unmarshall(context));
+                action.setSqs(SqsActionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("kinesis")) {
-                action.setKinesis(KinesisActionJsonUnmarshaller.getInstance().unmarshall(context));
+                action.setKinesis(KinesisActionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("republish")) {
-                action.setRepublish(RepublishActionJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                action.setRepublish(RepublishActionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("s3")) {
-                action.setS3(S3ActionJsonUnmarshaller.getInstance().unmarshall(context));
+                action.setS3(S3ActionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("firehose")) {
-                action.setFirehose(FirehoseActionJsonUnmarshaller.getInstance().unmarshall(context));
+                action.setFirehose(FirehoseActionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("cloudwatchMetric")) {
                 action.setCloudwatchMetric(CloudwatchMetricActionJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -65,14 +72,14 @@ public Action unmarshall(JsonUnmarshallerContext context) throws Exception {
                 action.setElasticsearch(ElasticsearchActionJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("salesforce")) {
-                action.setSalesforce(SalesforceActionJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                action.setSalesforce(SalesforceActionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("iotAnalytics")) {
-                action.setIotAnalytics(IotAnalyticsActionJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                action.setIotAnalytics(IotAnalyticsActionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("iotEvents")) {
-                action.setIotEvents(IotEventsActionJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                action.setIotEvents(IotEventsActionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("stepFunctions")) {
                 action.setStepFunctions(StepFunctionsActionJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ActiveViolationJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ActiveViolationJsonUnmarshaller.java
index cbdc0bca14..3f21d4c45e 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ActiveViolationJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ActiveViolationJsonUnmarshaller.java
@@ -37,23 +37,23 @@ public ActiveViolation unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("violationId")) {
-                activeViolation.setViolationId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                activeViolation.setViolationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingName")) {
-                activeViolation.setThingName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                activeViolation.setThingName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("securityProfileName")) {
                 activeViolation.setSecurityProfileName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("behavior")) {
-                activeViolation.setBehavior(BehaviorJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                activeViolation.setBehavior(BehaviorJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("lastViolationValue")) {
                 activeViolation.setLastViolationValue(MetricValueJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("lastViolationTime")) {
-                activeViolation.setLastViolationTime(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                activeViolation.setLastViolationTime(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("violationStartTime")) {
                 activeViolation.setViolationStartTime(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AlertTargetJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AlertTargetJsonUnmarshaller.java
index 9cacce1f8b..98e346a3ff 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AlertTargetJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AlertTargetJsonUnmarshaller.java
@@ -36,10 +36,11 @@ public AlertTarget unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("alertTargetArn")) {
-                alertTarget.setAlertTargetArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                alertTarget.setAlertTargetArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("roleArn")) {
-                alertTarget.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                alertTarget.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AllowedJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AllowedJsonUnmarshaller.java
index bcda270280..82da8abeaa 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AllowedJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AllowedJsonUnmarshaller.java
@@ -37,7 +37,9 @@ public Allowed unmarshall(JsonUnmarshallerContext context) throws Exception {
             String name = reader.nextName();
             if (name.equals("policies")) {
                 allowed.setPolicies(new ListUnmarshaller<Policy>(PolicyJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AttributePayloadJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AttributePayloadJsonUnmarshaller.java
index 460d0d3a85..e63c1be8fa 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AttributePayloadJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AttributePayloadJsonUnmarshaller.java
@@ -38,10 +38,12 @@ public AttributePayload unmarshall(JsonUnmarshallerContext context) throws Excep
             String name = reader.nextName();
             if (name.equals("attributes")) {
                 attributePayload.setAttributes(new MapUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("merge")) {
-                attributePayload
-                        .setMerge(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                attributePayload.setMerge(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditCheckDetailsJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditCheckDetailsJsonUnmarshaller.java
index 6db123718e..41b74fcdfb 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditCheckDetailsJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditCheckDetailsJsonUnmarshaller.java
@@ -49,11 +49,11 @@ public AuditCheckDetails unmarshall(JsonUnmarshallerContext context) throws Exce
                 auditCheckDetails.setNonCompliantResourcesCount(LongJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("errorCode")) {
-                auditCheckDetails.setErrorCode(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                auditCheckDetails.setErrorCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("message")) {
-                auditCheckDetails.setMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                auditCheckDetails.setMessage(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditFindingJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditFindingJsonUnmarshaller.java
index 13b3810bad..2a3ce3ac78 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditFindingJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditFindingJsonUnmarshaller.java
@@ -36,22 +36,29 @@ public AuditFinding unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("taskId")) {
-                auditFinding.setTaskId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                auditFinding.setTaskId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("checkName")) {
-                auditFinding.setCheckName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                auditFinding.setCheckName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("taskStartTime")) {
                 auditFinding.setTaskStartTime(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("findingTime")) {
-                auditFinding.setFindingTime(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                auditFinding.setFindingTime(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("severity")) {
-                auditFinding.setSeverity(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                auditFinding.setSeverity(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("nonCompliantResource")) {
                 auditFinding.setNonCompliantResource(NonCompliantResourceJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("relatedResources")) {
                 auditFinding.setRelatedResources(new ListUnmarshaller<RelatedResource>(
-                        RelatedResourceJsonUnmarshaller.getInstance()).unmarshall(context));
+                        RelatedResourceJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("reasonForNonCompliance")) {
                 auditFinding.setReasonForNonCompliance(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditNotificationTargetJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditNotificationTargetJsonUnmarshaller.java
index 75e18cb33c..f787e5e8d5 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditNotificationTargetJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditNotificationTargetJsonUnmarshaller.java
@@ -40,8 +40,8 @@ public AuditNotificationTarget unmarshall(JsonUnmarshallerContext context) throw
                 auditNotificationTarget.setTargetArn(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("roleArn")) {
-                auditNotificationTarget.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                auditNotificationTarget.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("enabled")) {
                 auditNotificationTarget.setEnabled(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditTaskMetadataJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditTaskMetadataJsonUnmarshaller.java
index cfc1ed20ad..fa7d8d8dda 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditTaskMetadataJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditTaskMetadataJsonUnmarshaller.java
@@ -40,11 +40,11 @@ public AuditTaskMetadata unmarshall(JsonUnmarshallerContext context) throws Exce
                 auditTaskMetadata.setTaskId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("taskStatus")) {
-                auditTaskMetadata.setTaskStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                auditTaskMetadata.setTaskStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("taskType")) {
-                auditTaskMetadata.setTaskType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                auditTaskMetadata.setTaskType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuthInfoJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuthInfoJsonUnmarshaller.java
index f67333cc86..aaf1f4a1a5 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuthInfoJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuthInfoJsonUnmarshaller.java
@@ -36,10 +36,13 @@ public AuthInfo unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("actionType")) {
-                authInfo.setActionType(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                authInfo.setActionType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("resources")) {
                 authInfo.setResources(new ListUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuthResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuthResultJsonUnmarshaller.java
index 4427f25041..3b8bb53a67 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuthResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuthResultJsonUnmarshaller.java
@@ -36,17 +36,22 @@ public AuthResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("authInfo")) {
-                authResult.setAuthInfo(AuthInfoJsonUnmarshaller.getInstance().unmarshall(context));
+                authResult.setAuthInfo(AuthInfoJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("allowed")) {
-                authResult.setAllowed(AllowedJsonUnmarshaller.getInstance().unmarshall(context));
+                authResult.setAllowed(AllowedJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("denied")) {
-                authResult.setDenied(DeniedJsonUnmarshaller.getInstance().unmarshall(context));
+                authResult.setDenied(DeniedJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("authDecision")) {
-                authResult
-                        .setAuthDecision(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                authResult.setAuthDecision(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("missingContextValues")) {
                 authResult.setMissingContextValues(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuthorizerDescriptionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuthorizerDescriptionJsonUnmarshaller.java
index 9c264d3015..2c9eb4db28 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuthorizerDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuthorizerDescriptionJsonUnmarshaller.java
@@ -50,10 +50,12 @@ public AuthorizerDescription unmarshall(JsonUnmarshallerContext context) throws
                         .unmarshall(context));
             } else if (name.equals("tokenSigningPublicKeys")) {
                 authorizerDescription.setTokenSigningPublicKeys(new MapUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("status")) {
-                authorizerDescription.setStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                authorizerDescription.setStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("creationDate")) {
                 authorizerDescription.setCreationDate(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuthorizerSummaryJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuthorizerSummaryJsonUnmarshaller.java
index 8bbbf72989..8ce9151e12 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuthorizerSummaryJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuthorizerSummaryJsonUnmarshaller.java
@@ -40,8 +40,8 @@ public AuthorizerSummary unmarshall(JsonUnmarshallerContext context) throws Exce
                 authorizerSummary.setAuthorizerName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("authorizerArn")) {
-                authorizerSummary.setAuthorizerArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                authorizerSummary.setAuthorizerArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AwsJobExecutionsRolloutConfigJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AwsJobExecutionsRolloutConfigJsonUnmarshaller.java
index 84becd6647..71f54974b9 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AwsJobExecutionsRolloutConfigJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AwsJobExecutionsRolloutConfigJsonUnmarshaller.java
@@ -39,7 +39,8 @@ public AwsJobExecutionsRolloutConfig unmarshall(JsonUnmarshallerContext context)
             String name = reader.nextName();
             if (name.equals("maximumPerMinute")) {
                 awsJobExecutionsRolloutConfig.setMaximumPerMinute(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/BehaviorCriteriaJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/BehaviorCriteriaJsonUnmarshaller.java
index d5d910b81f..b631f6b7df 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/BehaviorCriteriaJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/BehaviorCriteriaJsonUnmarshaller.java
@@ -40,8 +40,8 @@ public BehaviorCriteria unmarshall(JsonUnmarshallerContext context) throws Excep
                 behaviorCriteria.setComparisonOperator(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("value")) {
-                behaviorCriteria.setValue(MetricValueJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                behaviorCriteria.setValue(MetricValueJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("durationSeconds")) {
                 behaviorCriteria.setDurationSeconds(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/BehaviorJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/BehaviorJsonUnmarshaller.java
index 8d3176c1c8..05847db76f 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/BehaviorJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/BehaviorJsonUnmarshaller.java
@@ -36,12 +36,14 @@ public Behavior unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("name")) {
-                behavior.setName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                behavior.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("metric")) {
-                behavior.setMetric(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                behavior.setMetric(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("criteria")) {
-                behavior.setCriteria(BehaviorCriteriaJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                behavior.setCriteria(BehaviorCriteriaJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/BillingGroupMetadataJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/BillingGroupMetadataJsonUnmarshaller.java
index 38adadf963..210df1070a 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/BillingGroupMetadataJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/BillingGroupMetadataJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public BillingGroupMetadata unmarshall(JsonUnmarshallerContext context) throws E
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("creationDate")) {
-                billingGroupMetadata.setCreationDate(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                billingGroupMetadata.setCreationDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/BillingGroupPropertiesJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/BillingGroupPropertiesJsonUnmarshaller.java
index 3ae8c02c73..24611f10a6 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/BillingGroupPropertiesJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/BillingGroupPropertiesJsonUnmarshaller.java
@@ -38,7 +38,8 @@ public BillingGroupProperties unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("billingGroupDescription")) {
                 billingGroupProperties.setBillingGroupDescription(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CACertificateDescriptionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CACertificateDescriptionJsonUnmarshaller.java
index 09eb9bc816..29472c53c3 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CACertificateDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CACertificateDescriptionJsonUnmarshaller.java
@@ -43,8 +43,8 @@ public CACertificateDescription unmarshall(JsonUnmarshallerContext context) thro
                 cACertificateDescription.setCertificateId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("status")) {
-                cACertificateDescription.setStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                cACertificateDescription.setStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("certificatePem")) {
                 cACertificateDescription.setCertificatePem(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -56,7 +56,8 @@ public CACertificateDescription unmarshall(JsonUnmarshallerContext context) thro
                         .unmarshall(context));
             } else if (name.equals("autoRegistrationStatus")) {
                 cACertificateDescription.setAutoRegistrationStatus(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("lastModifiedDate")) {
                 cACertificateDescription.setLastModifiedDate(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -68,7 +69,8 @@ public CACertificateDescription unmarshall(JsonUnmarshallerContext context) thro
                         .unmarshall(context));
             } else if (name.equals("validity")) {
                 cACertificateDescription.setValidity(CertificateValidityJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CACertificateJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CACertificateJsonUnmarshaller.java
index 5b09c8fca6..0ca782012c 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CACertificateJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CACertificateJsonUnmarshaller.java
@@ -36,13 +36,14 @@ public CACertificate unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("certificateArn")) {
-                cACertificate.setCertificateArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                cACertificate.setCertificateArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("certificateId")) {
-                cACertificate.setCertificateId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                cACertificate.setCertificateId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("status")) {
-                cACertificate.setStatus(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                cACertificate.setStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("creationDate")) {
                 cACertificate.setCreationDate(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CancelJobResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CancelJobResultJsonUnmarshaller.java
index 014c494acd..ea8fe9db98 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CancelJobResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CancelJobResultJsonUnmarshaller.java
@@ -34,12 +34,14 @@ public CancelJobResult unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("jobArn")) {
-                cancelJobResult.setJobArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                cancelJobResult.setJobArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("jobId")) {
-                cancelJobResult.setJobId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                cancelJobResult.setJobId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("description")) {
-                cancelJobResult.setDescription(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                cancelJobResult.setDescription(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateConflictExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateConflictExceptionUnmarshaller.java
index d6b24043bd..edf73b6440 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateConflictExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateConflictExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.CertificateConflictException;
 
 public class CertificateConflictExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public CertificateConflictException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        CertificateConflictException certificateConflictException = new CertificateConflictException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                certificateConflictException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return certificateConflictException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateDescriptionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateDescriptionJsonUnmarshaller.java
index aa70020231..cb06f55be7 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateDescriptionJsonUnmarshaller.java
@@ -46,14 +46,14 @@ public CertificateDescription unmarshall(JsonUnmarshallerContext context) throws
                 certificateDescription.setCaCertificateId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("status")) {
-                certificateDescription.setStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                certificateDescription.setStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("certificatePem")) {
                 certificateDescription.setCertificatePem(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ownedBy")) {
-                certificateDescription.setOwnedBy(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                certificateDescription.setOwnedBy(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("previousOwnedBy")) {
                 certificateDescription.setPreviousOwnedBy(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -74,7 +74,8 @@ public CertificateDescription unmarshall(JsonUnmarshallerContext context) throws
                         .unmarshall(context));
             } else if (name.equals("validity")) {
                 certificateDescription.setValidity(CertificateValidityJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateJsonUnmarshaller.java
index 9b028f26b4..6e710f7b2c 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateJsonUnmarshaller.java
@@ -36,15 +36,17 @@ public Certificate unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("certificateArn")) {
-                certificate.setCertificateArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                certificate.setCertificateArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("certificateId")) {
-                certificate.setCertificateId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                certificate.setCertificateId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("status")) {
-                certificate.setStatus(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                certificate.setStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("creationDate")) {
-                certificate.setCreationDate(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                certificate.setCreationDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateStateExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateStateExceptionUnmarshaller.java
index 51b7f39a46..64a5a4f5de 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateStateExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateStateExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.CertificateStateException;
 
 public class CertificateStateExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public CertificateStateException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        CertificateStateException certificateStateException = new CertificateStateException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                certificateStateException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return certificateStateException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateValidationExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateValidationExceptionUnmarshaller.java
index f1fd5112d6..a22c849331 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateValidationExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateValidationExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.CertificateValidationException;
 
 public class CertificateValidationExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public CertificateValidationException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        CertificateValidationException certificateValidationException = new CertificateValidationException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                certificateValidationException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return certificateValidationException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateValidityJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateValidityJsonUnmarshaller.java
index edf3ca0a95..52fecfd663 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateValidityJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CertificateValidityJsonUnmarshaller.java
@@ -37,11 +37,11 @@ public CertificateValidity unmarshall(JsonUnmarshallerContext context) throws Ex
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("notBefore")) {
-                certificateValidity.setNotBefore(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                certificateValidity.setNotBefore(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("notAfter")) {
-                certificateValidity.setNotAfter(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                certificateValidity.setNotAfter(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CloudwatchAlarmActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CloudwatchAlarmActionJsonUnmarshaller.java
index 23c9a59627..7f5ac1b6f6 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CloudwatchAlarmActionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CloudwatchAlarmActionJsonUnmarshaller.java
@@ -37,11 +37,11 @@ public CloudwatchAlarmAction unmarshall(JsonUnmarshallerContext context) throws
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("roleArn")) {
-                cloudwatchAlarmAction.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                cloudwatchAlarmAction.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("alarmName")) {
-                cloudwatchAlarmAction.setAlarmName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                cloudwatchAlarmAction.setAlarmName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("stateReason")) {
                 cloudwatchAlarmAction.setStateReason(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CloudwatchMetricActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CloudwatchMetricActionJsonUnmarshaller.java
index c226a57f68..3f472fdb52 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CloudwatchMetricActionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CloudwatchMetricActionJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public CloudwatchMetricAction unmarshall(JsonUnmarshallerContext context) throws
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("roleArn")) {
-                cloudwatchMetricAction.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                cloudwatchMetricAction.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("metricNamespace")) {
                 cloudwatchMetricAction.setMetricNamespace(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CodeSigningJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CodeSigningJsonUnmarshaller.java
index 03e5c57589..40973d4403 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CodeSigningJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CodeSigningJsonUnmarshaller.java
@@ -36,11 +36,12 @@ public CodeSigning unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("awsSignerJobId")) {
-                codeSigning.setAwsSignerJobId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                codeSigning.setAwsSignerJobId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("startSigningJobParameter")) {
                 codeSigning.setStartSigningJobParameter(StartSigningJobParameterJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("customCodeSigning")) {
                 codeSigning.setCustomCodeSigning(CustomCodeSigningJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ConfigurationJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ConfigurationJsonUnmarshaller.java
index 9fef097a3a..579c96501b 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ConfigurationJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ConfigurationJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public Configuration unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Enabled")) {
-                configuration.setEnabled(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                configuration.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ConflictingResourceUpdateExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ConflictingResourceUpdateExceptionUnmarshaller.java
index 733f255e4f..46fd1c32d6 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ConflictingResourceUpdateExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ConflictingResourceUpdateExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.ConflictingResourceUpdateException;
 
 public class ConflictingResourceUpdateExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ConflictingResourceUpdateException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ConflictingResourceUpdateException conflictingResourceUpdateException = new ConflictingResourceUpdateException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                conflictingResourceUpdateException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return conflictingResourceUpdateException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateCertificateFromCsrResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateCertificateFromCsrResultJsonUnmarshaller.java
index ec30751e1b..644f3f501b 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateCertificateFromCsrResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateCertificateFromCsrResultJsonUnmarshaller.java
@@ -36,13 +36,16 @@ public CreateCertificateFromCsrResult unmarshall(JsonUnmarshallerContext context
             String name = reader.nextName();
             if (name.equals("certificateArn")) {
                 createCertificateFromCsrResult.setCertificateArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("certificateId")) {
                 createCertificateFromCsrResult.setCertificateId(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("certificatePem")) {
                 createCertificateFromCsrResult.setCertificatePem(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateDynamicThingGroupResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateDynamicThingGroupResultJsonUnmarshaller.java
index ec262c3466..1091b494b8 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateDynamicThingGroupResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateDynamicThingGroupResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public CreateDynamicThingGroupResult unmarshall(JsonUnmarshallerContext context)
             String name = reader.nextName();
             if (name.equals("thingGroupName")) {
                 createDynamicThingGroupResult.setThingGroupName(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingGroupArn")) {
                 createDynamicThingGroupResult.setThingGroupArn(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateJobResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateJobResultJsonUnmarshaller.java
index d77c4ac92c..388ec167f5 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateJobResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateJobResultJsonUnmarshaller.java
@@ -34,12 +34,14 @@ public CreateJobResult unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("jobArn")) {
-                createJobResult.setJobArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                createJobResult.setJobArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("jobId")) {
-                createJobResult.setJobId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                createJobResult.setJobId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("description")) {
-                createJobResult.setDescription(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                createJobResult.setDescription(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateKeysAndCertificateResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateKeysAndCertificateResultJsonUnmarshaller.java
index ba5a18a022..7b286ca753 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateKeysAndCertificateResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateKeysAndCertificateResultJsonUnmarshaller.java
@@ -36,13 +36,16 @@ public CreateKeysAndCertificateResult unmarshall(JsonUnmarshallerContext context
             String name = reader.nextName();
             if (name.equals("certificateArn")) {
                 createKeysAndCertificateResult.setCertificateArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("certificateId")) {
                 createKeysAndCertificateResult.setCertificateId(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("certificatePem")) {
                 createKeysAndCertificateResult.setCertificatePem(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("keyPair")) {
                 createKeysAndCertificateResult.setKeyPair(KeyPairJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreatePolicyResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreatePolicyResultJsonUnmarshaller.java
index 5dc4f6adff..239e106be0 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreatePolicyResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreatePolicyResultJsonUnmarshaller.java
@@ -34,11 +34,11 @@ public CreatePolicyResult unmarshall(JsonUnmarshallerContext context) throws Exc
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("policyName")) {
-                createPolicyResult.setPolicyName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                createPolicyResult.setPolicyName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("policyArn")) {
-                createPolicyResult.setPolicyArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                createPolicyResult.setPolicyArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("policyDocument")) {
                 createPolicyResult.setPolicyDocument(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateRoleAliasResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateRoleAliasResultJsonUnmarshaller.java
index 318eb97850..e9876617bb 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateRoleAliasResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateRoleAliasResultJsonUnmarshaller.java
@@ -34,8 +34,8 @@ public CreateRoleAliasResult unmarshall(JsonUnmarshallerContext context) throws
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("roleAlias")) {
-                createRoleAliasResult.setRoleAlias(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                createRoleAliasResult.setRoleAlias(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("roleAliasArn")) {
                 createRoleAliasResult.setRoleAliasArn(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateScheduledAuditResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateScheduledAuditResultJsonUnmarshaller.java
index dfc4bbb004..b4043e905d 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateScheduledAuditResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateScheduledAuditResultJsonUnmarshaller.java
@@ -35,7 +35,8 @@ public CreateScheduledAuditResult unmarshall(JsonUnmarshallerContext context) th
             String name = reader.nextName();
             if (name.equals("scheduledAuditArn")) {
                 createScheduledAuditResult.setScheduledAuditArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateSecurityProfileResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateSecurityProfileResultJsonUnmarshaller.java
index 024df1a85d..949dc03bc9 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateSecurityProfileResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateSecurityProfileResultJsonUnmarshaller.java
@@ -35,10 +35,12 @@ public CreateSecurityProfileResult unmarshall(JsonUnmarshallerContext context) t
             String name = reader.nextName();
             if (name.equals("securityProfileName")) {
                 createSecurityProfileResult.setSecurityProfileName(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("securityProfileArn")) {
                 createSecurityProfileResult.setSecurityProfileArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateStreamResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateStreamResultJsonUnmarshaller.java
index 88ea3e50db..df18796523 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateStreamResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateStreamResultJsonUnmarshaller.java
@@ -34,14 +34,14 @@ public CreateStreamResult unmarshall(JsonUnmarshallerContext context) throws Exc
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("streamId")) {
-                createStreamResult.setStreamId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                createStreamResult.setStreamId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("streamArn")) {
-                createStreamResult.setStreamArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                createStreamResult.setStreamArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("description")) {
-                createStreamResult.setDescription(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                createStreamResult.setDescription(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("streamVersion")) {
                 createStreamResult.setStreamVersion(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateThingResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateThingResultJsonUnmarshaller.java
index 9693d885f3..937673c6ff 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateThingResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateThingResultJsonUnmarshaller.java
@@ -34,14 +34,14 @@ public CreateThingResult unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("thingName")) {
-                createThingResult.setThingName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                createThingResult.setThingName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingArn")) {
-                createThingResult.setThingArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                createThingResult.setThingArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingId")) {
-                createThingResult.setThingId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                createThingResult.setThingId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CustomCodeSigningJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CustomCodeSigningJsonUnmarshaller.java
index 4f99919733..f877f7cc76 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CustomCodeSigningJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CustomCodeSigningJsonUnmarshaller.java
@@ -41,10 +41,11 @@ public CustomCodeSigning unmarshall(JsonUnmarshallerContext context) throws Exce
                         .unmarshall(context));
             } else if (name.equals("certificateChain")) {
                 customCodeSigning.setCertificateChain(CodeSigningCertificateChainJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("hashAlgorithm")) {
-                customCodeSigning.setHashAlgorithm(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                customCodeSigning.setHashAlgorithm(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("signatureAlgorithm")) {
                 customCodeSigning.setSignatureAlgorithm(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DeleteConflictExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DeleteConflictExceptionUnmarshaller.java
index 6a9898f097..27af8c83fc 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DeleteConflictExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DeleteConflictExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.DeleteConflictException;
 
 public class DeleteConflictExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public DeleteConflictException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        DeleteConflictException deleteConflictException = new DeleteConflictException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                deleteConflictException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return deleteConflictException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DeniedJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DeniedJsonUnmarshaller.java
index 15c29b26ce..488323cefc 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DeniedJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DeniedJsonUnmarshaller.java
@@ -36,11 +36,11 @@ public Denied unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("implicitDeny")) {
-                denied.setImplicitDeny(ImplicitDenyJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                denied.setImplicitDeny(ImplicitDenyJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("explicitDeny")) {
-                denied.setExplicitDeny(ExplicitDenyJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                denied.setExplicitDeny(ExplicitDenyJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAccountAuditConfigurationResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAccountAuditConfigurationResultJsonUnmarshaller.java
index 6d9a76b947..b8ae3123c3 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAccountAuditConfigurationResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAccountAuditConfigurationResultJsonUnmarshaller.java
@@ -36,16 +36,19 @@ public DescribeAccountAuditConfigurationResult unmarshall(JsonUnmarshallerContex
             String name = reader.nextName();
             if (name.equals("roleArn")) {
                 describeAccountAuditConfigurationResult.setRoleArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("auditNotificationTargetConfigurations")) {
                 describeAccountAuditConfigurationResult
                         .setAuditNotificationTargetConfigurations(new MapUnmarshaller<AuditNotificationTarget>(
-                                AuditNotificationTargetJsonUnmarshaller.getInstance())
+                                AuditNotificationTargetJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("auditCheckConfigurations")) {
                 describeAccountAuditConfigurationResult
                         .setAuditCheckConfigurations(new MapUnmarshaller<AuditCheckConfiguration>(
-                                AuditCheckConfigurationJsonUnmarshaller.getInstance())
+                                AuditCheckConfigurationJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else {
                 reader.skipValue();
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuditTaskResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuditTaskResultJsonUnmarshaller.java
index a720800b7f..73623ad7b2 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuditTaskResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuditTaskResultJsonUnmarshaller.java
@@ -44,13 +44,16 @@ public DescribeAuditTaskResult unmarshall(JsonUnmarshallerContext context) throw
                         .unmarshall(context));
             } else if (name.equals("taskStatistics")) {
                 describeAuditTaskResult.setTaskStatistics(TaskStatisticsJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("scheduledAuditName")) {
                 describeAuditTaskResult.setScheduledAuditName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("auditDetails")) {
                 describeAuditTaskResult.setAuditDetails(new MapUnmarshaller<AuditCheckDetails>(
-                        AuditCheckDetailsJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AuditCheckDetailsJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuthorizerResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuthorizerResultJsonUnmarshaller.java
index 63f53db313..26cc114f67 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuthorizerResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuthorizerResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public DescribeAuthorizerResult unmarshall(JsonUnmarshallerContext context) thro
             if (name.equals("authorizerDescription")) {
                 describeAuthorizerResult
                         .setAuthorizerDescription(AuthorizerDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeBillingGroupResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeBillingGroupResultJsonUnmarshaller.java
index c80844dd4f..70ca5f3c1d 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeBillingGroupResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeBillingGroupResultJsonUnmarshaller.java
@@ -48,7 +48,8 @@ public DescribeBillingGroupResult unmarshall(JsonUnmarshallerContext context) th
             } else if (name.equals("billingGroupProperties")) {
                 describeBillingGroupResult
                         .setBillingGroupProperties(BillingGroupPropertiesJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("billingGroupMetadata")) {
                 describeBillingGroupResult
                         .setBillingGroupMetadata(BillingGroupMetadataJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeCACertificateResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeCACertificateResultJsonUnmarshaller.java
index 928a05895b..d8a4258a54 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeCACertificateResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeCACertificateResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public DescribeCACertificateResult unmarshall(JsonUnmarshallerContext context) t
             if (name.equals("certificateDescription")) {
                 describeCACertificateResult
                         .setCertificateDescription(CACertificateDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("registrationConfig")) {
                 describeCACertificateResult
                         .setRegistrationConfig(RegistrationConfigJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeCertificateResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeCertificateResultJsonUnmarshaller.java
index e6bb0c47ad..23a913e4f7 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeCertificateResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeCertificateResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public DescribeCertificateResult unmarshall(JsonUnmarshallerContext context) thr
             if (name.equals("certificateDescription")) {
                 describeCertificateResult
                         .setCertificateDescription(CertificateDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeDefaultAuthorizerResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeDefaultAuthorizerResultJsonUnmarshaller.java
index d918c41160..834401bda4 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeDefaultAuthorizerResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeDefaultAuthorizerResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public DescribeDefaultAuthorizerResult unmarshall(JsonUnmarshallerContext contex
             if (name.equals("authorizerDescription")) {
                 describeDefaultAuthorizerResult
                         .setAuthorizerDescription(AuthorizerDescriptionJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeEventConfigurationsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeEventConfigurationsResultJsonUnmarshaller.java
index 58eecc8087..f476e54e9d 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeEventConfigurationsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeEventConfigurationsResultJsonUnmarshaller.java
@@ -37,13 +37,17 @@ public DescribeEventConfigurationsResult unmarshall(JsonUnmarshallerContext cont
             if (name.equals("eventConfigurations")) {
                 describeEventConfigurationsResult
                         .setEventConfigurations(new MapUnmarshaller<Configuration>(
-                                ConfigurationJsonUnmarshaller.getInstance()).unmarshall(context));
+                                ConfigurationJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("creationDate")) {
                 describeEventConfigurationsResult.setCreationDate(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("lastModifiedDate")) {
                 describeEventConfigurationsResult.setLastModifiedDate(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeIndexResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeIndexResultJsonUnmarshaller.java
index 541c317057..ef9289d190 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeIndexResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeIndexResultJsonUnmarshaller.java
@@ -34,14 +34,14 @@ public DescribeIndexResult unmarshall(JsonUnmarshallerContext context) throws Ex
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("indexName")) {
-                describeIndexResult.setIndexName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                describeIndexResult.setIndexName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("indexStatus")) {
-                describeIndexResult.setIndexStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                describeIndexResult.setIndexStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("schema")) {
-                describeIndexResult.setSchema(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                describeIndexResult.setSchema(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeJobResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeJobResultJsonUnmarshaller.java
index 49b5c1f79d..a9c34a123f 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeJobResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeJobResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public DescribeJobResult unmarshall(JsonUnmarshallerContext context) throws Exce
                 describeJobResult.setDocumentSource(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("job")) {
-                describeJobResult.setJob(JobJsonUnmarshaller.getInstance().unmarshall(context));
+                describeJobResult.setJob(JobJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeScheduledAuditResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeScheduledAuditResultJsonUnmarshaller.java
index 9817e39c4d..0027c0eff9 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeScheduledAuditResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeScheduledAuditResultJsonUnmarshaller.java
@@ -45,13 +45,17 @@ public DescribeScheduledAuditResult unmarshall(JsonUnmarshallerContext context)
                         .unmarshall(context));
             } else if (name.equals("targetCheckNames")) {
                 describeScheduledAuditResult.setTargetCheckNames(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("scheduledAuditName")) {
                 describeScheduledAuditResult.setScheduledAuditName(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("scheduledAuditArn")) {
                 describeScheduledAuditResult.setScheduledAuditArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeSecurityProfileResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeSecurityProfileResultJsonUnmarshaller.java
index 2a08aa8753..3ecc6cbe76 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeSecurityProfileResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeSecurityProfileResultJsonUnmarshaller.java
@@ -36,19 +36,26 @@ public DescribeSecurityProfileResult unmarshall(JsonUnmarshallerContext context)
             String name = reader.nextName();
             if (name.equals("securityProfileName")) {
                 describeSecurityProfileResult.setSecurityProfileName(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("securityProfileArn")) {
                 describeSecurityProfileResult.setSecurityProfileArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("securityProfileDescription")) {
                 describeSecurityProfileResult.setSecurityProfileDescription(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("behaviors")) {
                 describeSecurityProfileResult.setBehaviors(new ListUnmarshaller<Behavior>(
-                        BehaviorJsonUnmarshaller.getInstance()).unmarshall(context));
+                        BehaviorJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("alertTargets")) {
                 describeSecurityProfileResult.setAlertTargets(new MapUnmarshaller<AlertTarget>(
-                        AlertTargetJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AlertTargetJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("version")) {
                 describeSecurityProfileResult.setVersion(LongJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -57,7 +64,8 @@ public DescribeSecurityProfileResult unmarshall(JsonUnmarshallerContext context)
                         .unmarshall(context));
             } else if (name.equals("lastModifiedDate")) {
                 describeSecurityProfileResult.setLastModifiedDate(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeThingGroupResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeThingGroupResultJsonUnmarshaller.java
index 43bb6ad7a1..31b89cb54a 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeThingGroupResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeThingGroupResultJsonUnmarshaller.java
@@ -43,15 +43,16 @@ public DescribeThingGroupResult unmarshall(JsonUnmarshallerContext context) thro
                 describeThingGroupResult.setThingGroupArn(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("version")) {
-                describeThingGroupResult.setVersion(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                describeThingGroupResult.setVersion(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingGroupProperties")) {
                 describeThingGroupResult
                         .setThingGroupProperties(ThingGroupPropertiesJsonUnmarshaller.getInstance()
                                 .unmarshall(context));
             } else if (name.equals("thingGroupMetadata")) {
                 describeThingGroupResult.setThingGroupMetadata(ThingGroupMetadataJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("indexName")) {
                 describeThingGroupResult.setIndexName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -62,8 +63,8 @@ public DescribeThingGroupResult unmarshall(JsonUnmarshallerContext context) thro
                 describeThingGroupResult.setQueryVersion(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("status")) {
-                describeThingGroupResult.setStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                describeThingGroupResult.setStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeThingRegistrationTaskResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeThingRegistrationTaskResultJsonUnmarshaller.java
index 7ad115df68..4a53d4cc62 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeThingRegistrationTaskResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeThingRegistrationTaskResultJsonUnmarshaller.java
@@ -39,19 +39,24 @@ public DescribeThingRegistrationTaskResult unmarshall(JsonUnmarshallerContext co
                         .unmarshall(context));
             } else if (name.equals("creationDate")) {
                 describeThingRegistrationTaskResult.setCreationDate(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("lastModifiedDate")) {
                 describeThingRegistrationTaskResult.setLastModifiedDate(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("templateBody")) {
                 describeThingRegistrationTaskResult.setTemplateBody(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("inputFileBucket")) {
                 describeThingRegistrationTaskResult.setInputFileBucket(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("inputFileKey")) {
                 describeThingRegistrationTaskResult.setInputFileKey(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("roleArn")) {
                 describeThingRegistrationTaskResult.setRoleArn(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -63,13 +68,16 @@ public DescribeThingRegistrationTaskResult unmarshall(JsonUnmarshallerContext co
                         .unmarshall(context));
             } else if (name.equals("successCount")) {
                 describeThingRegistrationTaskResult.setSuccessCount(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("failureCount")) {
                 describeThingRegistrationTaskResult.setFailureCount(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("percentageProgress")) {
                 describeThingRegistrationTaskResult.setPercentageProgress(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeThingResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeThingResultJsonUnmarshaller.java
index fdd942ce26..a43bb8c456 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeThingResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeThingResultJsonUnmarshaller.java
@@ -37,23 +37,25 @@ public DescribeThingResult unmarshall(JsonUnmarshallerContext context) throws Ex
                 describeThingResult.setDefaultClientId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("thingName")) {
-                describeThingResult.setThingName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                describeThingResult.setThingName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingId")) {
-                describeThingResult.setThingId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                describeThingResult.setThingId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingArn")) {
-                describeThingResult.setThingArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                describeThingResult.setThingArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingTypeName")) {
                 describeThingResult.setThingTypeName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("attributes")) {
                 describeThingResult.setAttributes(new MapUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("version")) {
-                describeThingResult.setVersion(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                describeThingResult.setVersion(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("billingGroupName")) {
                 describeThingResult.setBillingGroupName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeThingTypeResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeThingTypeResultJsonUnmarshaller.java
index 9f126cb3c1..21df2b4280 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeThingTypeResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeThingTypeResultJsonUnmarshaller.java
@@ -44,10 +44,12 @@ public DescribeThingTypeResult unmarshall(JsonUnmarshallerContext context) throw
                         .unmarshall(context));
             } else if (name.equals("thingTypeProperties")) {
                 describeThingTypeResult.setThingTypeProperties(ThingTypePropertiesJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingTypeMetadata")) {
                 describeThingTypeResult.setThingTypeMetadata(ThingTypeMetadataJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DynamoDBActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DynamoDBActionJsonUnmarshaller.java
index b57d1c31db..f58ebc7609 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DynamoDBActionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DynamoDBActionJsonUnmarshaller.java
@@ -40,31 +40,32 @@ public DynamoDBAction unmarshall(JsonUnmarshallerContext context) throws Excepti
                 dynamoDBAction.setTableName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("roleArn")) {
-                dynamoDBAction.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                dynamoDBAction.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("operation")) {
                 dynamoDBAction.setOperation(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("hashKeyField")) {
-                dynamoDBAction.setHashKeyField(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                dynamoDBAction.setHashKeyField(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("hashKeyValue")) {
-                dynamoDBAction.setHashKeyValue(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                dynamoDBAction.setHashKeyValue(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("hashKeyType")) {
-                dynamoDBAction.setHashKeyType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                dynamoDBAction.setHashKeyType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("rangeKeyField")) {
-                dynamoDBAction.setRangeKeyField(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                dynamoDBAction.setRangeKeyField(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("rangeKeyValue")) {
-                dynamoDBAction.setRangeKeyValue(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                dynamoDBAction.setRangeKeyValue(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("rangeKeyType")) {
-                dynamoDBAction.setRangeKeyType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                dynamoDBAction.setRangeKeyType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("payloadField")) {
-                dynamoDBAction.setPayloadField(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                dynamoDBAction.setPayloadField(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DynamoDBv2ActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DynamoDBv2ActionJsonUnmarshaller.java
index c539c61b5c..8e763c49af 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DynamoDBv2ActionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DynamoDBv2ActionJsonUnmarshaller.java
@@ -40,8 +40,8 @@ public DynamoDBv2Action unmarshall(JsonUnmarshallerContext context) throws Excep
                 dynamoDBv2Action.setRoleArn(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("putItem")) {
-                dynamoDBv2Action.setPutItem(PutItemInputJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                dynamoDBv2Action.setPutItem(PutItemInputJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/EffectivePolicyJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/EffectivePolicyJsonUnmarshaller.java
index 6a0d5dbdfa..b65f5054e8 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/EffectivePolicyJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/EffectivePolicyJsonUnmarshaller.java
@@ -37,14 +37,14 @@ public EffectivePolicy unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("policyName")) {
-                effectivePolicy.setPolicyName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                effectivePolicy.setPolicyName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("policyArn")) {
-                effectivePolicy.setPolicyArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                effectivePolicy.setPolicyArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("policyDocument")) {
-                effectivePolicy.setPolicyDocument(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                effectivePolicy.setPolicyDocument(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ElasticsearchActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ElasticsearchActionJsonUnmarshaller.java
index a52c908b5f..a1db4079f3 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ElasticsearchActionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ElasticsearchActionJsonUnmarshaller.java
@@ -37,19 +37,20 @@ public ElasticsearchAction unmarshall(JsonUnmarshallerContext context) throws Ex
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("roleArn")) {
-                elasticsearchAction.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                elasticsearchAction.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("endpoint")) {
-                elasticsearchAction.setEndpoint(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                elasticsearchAction.setEndpoint(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("index")) {
-                elasticsearchAction.setIndex(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                elasticsearchAction.setIndex(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("type")) {
                 elasticsearchAction.setType(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("id")) {
-                elasticsearchAction.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                elasticsearchAction.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ErrorInfoJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ErrorInfoJsonUnmarshaller.java
index 86497ee803..0c4c7c1108 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ErrorInfoJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ErrorInfoJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public ErrorInfo unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("code")) {
-                errorInfo.setCode(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                errorInfo.setCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("message")) {
-                errorInfo.setMessage(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                errorInfo.setMessage(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ExplicitDenyJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ExplicitDenyJsonUnmarshaller.java
index 973efa31c6..3e8ade9fbe 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ExplicitDenyJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ExplicitDenyJsonUnmarshaller.java
@@ -37,7 +37,9 @@ public ExplicitDeny unmarshall(JsonUnmarshallerContext context) throws Exception
             String name = reader.nextName();
             if (name.equals("policies")) {
                 explicitDeny.setPolicies(new ListUnmarshaller<Policy>(PolicyJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ExponentialRolloutRateJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ExponentialRolloutRateJsonUnmarshaller.java
index c7c8218457..e515c009da 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ExponentialRolloutRateJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ExponentialRolloutRateJsonUnmarshaller.java
@@ -44,7 +44,8 @@ public ExponentialRolloutRate unmarshall(JsonUnmarshallerContext context) throws
                         .unmarshall(context));
             } else if (name.equals("rateIncreaseCriteria")) {
                 exponentialRolloutRate.setRateIncreaseCriteria(RateIncreaseCriteriaJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/FileLocationJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/FileLocationJsonUnmarshaller.java
index 01e05fac37..f63141eac7 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/FileLocationJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/FileLocationJsonUnmarshaller.java
@@ -36,10 +36,11 @@ public FileLocation unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("stream")) {
-                fileLocation.setStream(StreamJsonUnmarshaller.getInstance().unmarshall(context));
+                fileLocation.setStream(StreamJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("s3Location")) {
-                fileLocation.setS3Location(S3LocationJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                fileLocation.setS3Location(S3LocationJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/FirehoseActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/FirehoseActionJsonUnmarshaller.java
index 5f3fd1b6fa..5928e20079 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/FirehoseActionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/FirehoseActionJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public FirehoseAction unmarshall(JsonUnmarshallerContext context) throws Excepti
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("roleArn")) {
-                firehoseAction.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                firehoseAction.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("deliveryStreamName")) {
                 firehoseAction.setDeliveryStreamName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetEffectivePoliciesResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetEffectivePoliciesResultJsonUnmarshaller.java
index 209a72755f..54c55c76d1 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetEffectivePoliciesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetEffectivePoliciesResultJsonUnmarshaller.java
@@ -36,7 +36,9 @@ public GetEffectivePoliciesResult unmarshall(JsonUnmarshallerContext context) th
             if (name.equals("effectivePolicies")) {
                 getEffectivePoliciesResult
                         .setEffectivePolicies(new ListUnmarshaller<EffectivePolicy>(
-                                EffectivePolicyJsonUnmarshaller.getInstance()).unmarshall(context));
+                                EffectivePolicyJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetIndexingConfigurationResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetIndexingConfigurationResultJsonUnmarshaller.java
index c79addce69..721440c1a0 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetIndexingConfigurationResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetIndexingConfigurationResultJsonUnmarshaller.java
@@ -37,11 +37,13 @@ public GetIndexingConfigurationResult unmarshall(JsonUnmarshallerContext context
             if (name.equals("thingIndexingConfiguration")) {
                 getIndexingConfigurationResult
                         .setThingIndexingConfiguration(ThingIndexingConfigurationJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("thingGroupIndexingConfiguration")) {
                 getIndexingConfigurationResult
                         .setThingGroupIndexingConfiguration(ThingGroupIndexingConfigurationJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetJobDocumentResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetJobDocumentResultJsonUnmarshaller.java
index 21362b2794..12d111ca95 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetJobDocumentResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetJobDocumentResultJsonUnmarshaller.java
@@ -34,8 +34,8 @@ public GetJobDocumentResult unmarshall(JsonUnmarshallerContext context) throws E
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("document")) {
-                getJobDocumentResult.setDocument(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getJobDocumentResult.setDocument(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetLoggingOptionsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetLoggingOptionsResultJsonUnmarshaller.java
index 7be844af15..0cb2e0e181 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetLoggingOptionsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetLoggingOptionsResultJsonUnmarshaller.java
@@ -34,8 +34,8 @@ public GetLoggingOptionsResult unmarshall(JsonUnmarshallerContext context) throw
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("roleArn")) {
-                getLoggingOptionsResult.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getLoggingOptionsResult.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("logLevel")) {
                 getLoggingOptionsResult.setLogLevel(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetPolicyResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetPolicyResultJsonUnmarshaller.java
index fd6d64ecac..0f1ea1da39 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetPolicyResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetPolicyResultJsonUnmarshaller.java
@@ -34,26 +34,26 @@ public GetPolicyResult unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("policyName")) {
-                getPolicyResult.setPolicyName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getPolicyResult.setPolicyName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("policyArn")) {
-                getPolicyResult.setPolicyArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getPolicyResult.setPolicyArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("policyDocument")) {
-                getPolicyResult.setPolicyDocument(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getPolicyResult.setPolicyDocument(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("defaultVersionId")) {
                 getPolicyResult.setDefaultVersionId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("creationDate")) {
-                getPolicyResult.setCreationDate(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getPolicyResult.setCreationDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("lastModifiedDate")) {
-                getPolicyResult.setLastModifiedDate(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getPolicyResult.setLastModifiedDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("generationId")) {
-                getPolicyResult.setGenerationId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getPolicyResult.setGenerationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetTopicRuleResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetTopicRuleResultJsonUnmarshaller.java
index 501adb98e4..06ed03defd 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetTopicRuleResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GetTopicRuleResultJsonUnmarshaller.java
@@ -34,11 +34,11 @@ public GetTopicRuleResult unmarshall(JsonUnmarshallerContext context) throws Exc
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("ruleArn")) {
-                getTopicRuleResult.setRuleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getTopicRuleResult.setRuleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("rule")) {
-                getTopicRuleResult.setRule(TopicRuleJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getTopicRuleResult.setRule(TopicRuleJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GroupNameAndArnJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GroupNameAndArnJsonUnmarshaller.java
index a8caa6eefd..e1e02fa7d2 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GroupNameAndArnJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/GroupNameAndArnJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public GroupNameAndArn unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("groupName")) {
-                groupNameAndArn.setGroupName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                groupNameAndArn.setGroupName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("groupArn")) {
                 groupNameAndArn.setGroupArn(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ImplicitDenyJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ImplicitDenyJsonUnmarshaller.java
index 0c4551b08d..aea7161284 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ImplicitDenyJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ImplicitDenyJsonUnmarshaller.java
@@ -37,7 +37,9 @@ public ImplicitDeny unmarshall(JsonUnmarshallerContext context) throws Exception
             String name = reader.nextName();
             if (name.equals("policies")) {
                 implicitDeny.setPolicies(new ListUnmarshaller<Policy>(PolicyJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/IndexNotReadyExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/IndexNotReadyExceptionUnmarshaller.java
index 52e2007c6f..2e0a4b0fc0 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/IndexNotReadyExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/IndexNotReadyExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.IndexNotReadyException;
 
 public class IndexNotReadyExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public IndexNotReadyException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        IndexNotReadyException indexNotReadyException = new IndexNotReadyException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                indexNotReadyException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return indexNotReadyException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InternalExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InternalExceptionUnmarshaller.java
index 076a6ba3c3..6924337dde 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InternalExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InternalExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.InternalException;
 
 public class InternalExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InternalException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InternalException internalException = new InternalException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                internalException.setErrorMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return internalException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InternalFailureExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InternalFailureExceptionUnmarshaller.java
index 245b225ce7..a137305f7f 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InternalFailureExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InternalFailureExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.InternalFailureException;
 
 public class InternalFailureExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InternalFailureException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InternalFailureException internalFailureException = new InternalFailureException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                internalFailureException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return internalFailureException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InvalidQueryExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InvalidQueryExceptionUnmarshaller.java
index e66f73611e..d1d229066e 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InvalidQueryExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InvalidQueryExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.InvalidQueryException;
 
 public class InvalidQueryExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidQueryException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidQueryException invalidQueryException = new InvalidQueryException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidQueryException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidQueryException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InvalidRequestExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InvalidRequestExceptionUnmarshaller.java
index 2d5aea97e0..5b9160558a 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InvalidRequestExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InvalidRequestExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.InvalidRequestException;
 
 public class InvalidRequestExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidRequestException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidRequestException invalidRequestException = new InvalidRequestException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidRequestException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidRequestException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InvalidResponseExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InvalidResponseExceptionUnmarshaller.java
index 86cb19f01a..58772aa995 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InvalidResponseExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InvalidResponseExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.InvalidResponseException;
 
 public class InvalidResponseExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidResponseException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidResponseException invalidResponseException = new InvalidResponseException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidResponseException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidResponseException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InvalidStateTransitionExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InvalidStateTransitionExceptionUnmarshaller.java
index 268f2210b5..a0334c02cb 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InvalidStateTransitionExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/InvalidStateTransitionExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.InvalidStateTransitionException;
 
 public class InvalidStateTransitionExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidStateTransitionException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidStateTransitionException invalidStateTransitionException = new InvalidStateTransitionException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidStateTransitionException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidStateTransitionException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/IotAnalyticsActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/IotAnalyticsActionJsonUnmarshaller.java
index e3e794b135..c54019e826 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/IotAnalyticsActionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/IotAnalyticsActionJsonUnmarshaller.java
@@ -37,14 +37,14 @@ public IotAnalyticsAction unmarshall(JsonUnmarshallerContext context) throws Exc
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("channelArn")) {
-                iotAnalyticsAction.setChannelArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                iotAnalyticsAction.setChannelArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("channelName")) {
-                iotAnalyticsAction.setChannelName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                iotAnalyticsAction.setChannelName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("roleArn")) {
-                iotAnalyticsAction.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                iotAnalyticsAction.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/IotEventsActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/IotEventsActionJsonUnmarshaller.java
index d0e4a0c452..ca1a74a469 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/IotEventsActionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/IotEventsActionJsonUnmarshaller.java
@@ -37,14 +37,14 @@ public IotEventsAction unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("inputName")) {
-                iotEventsAction.setInputName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                iotEventsAction.setInputName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("messageId")) {
-                iotEventsAction.setMessageId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                iotEventsAction.setMessageId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("roleArn")) {
-                iotEventsAction
-                        .setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                iotEventsAction.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobExecutionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobExecutionJsonUnmarshaller.java
index f22333522a..bbcc3fc4af 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobExecutionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobExecutionJsonUnmarshaller.java
@@ -36,27 +36,33 @@ public JobExecution unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("jobId")) {
-                jobExecution.setJobId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                jobExecution.setJobId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("status")) {
-                jobExecution.setStatus(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                jobExecution.setStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("forceCanceled")) {
-                jobExecution.setForceCanceled(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                jobExecution.setForceCanceled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("statusDetails")) {
                 jobExecution.setStatusDetails(JobExecutionStatusDetailsJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingArn")) {
-                jobExecution.setThingArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                jobExecution.setThingArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("queuedAt")) {
-                jobExecution.setQueuedAt(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                jobExecution.setQueuedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("startedAt")) {
-                jobExecution.setStartedAt(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                jobExecution.setStartedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("lastUpdatedAt")) {
                 jobExecution.setLastUpdatedAt(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("executionNumber")) {
-                jobExecution.setExecutionNumber(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                jobExecution.setExecutionNumber(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("versionNumber")) {
                 jobExecution.setVersionNumber(LongJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobExecutionStatusDetailsJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobExecutionStatusDetailsJsonUnmarshaller.java
index 654701a459..c0c3159660 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobExecutionStatusDetailsJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobExecutionStatusDetailsJsonUnmarshaller.java
@@ -38,7 +38,9 @@ public JobExecutionStatusDetails unmarshall(JsonUnmarshallerContext context) thr
             String name = reader.nextName();
             if (name.equals("detailsMap")) {
                 jobExecutionStatusDetails.setDetailsMap(new MapUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobExecutionSummaryJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobExecutionSummaryJsonUnmarshaller.java
index 6944a2f6fa..ce9edf35b5 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobExecutionSummaryJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobExecutionSummaryJsonUnmarshaller.java
@@ -37,17 +37,17 @@ public JobExecutionSummary unmarshall(JsonUnmarshallerContext context) throws Ex
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("status")) {
-                jobExecutionSummary.setStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                jobExecutionSummary.setStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("queuedAt")) {
-                jobExecutionSummary.setQueuedAt(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                jobExecutionSummary.setQueuedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("startedAt")) {
-                jobExecutionSummary.setStartedAt(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                jobExecutionSummary.setStartedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("lastUpdatedAt")) {
-                jobExecutionSummary.setLastUpdatedAt(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                jobExecutionSummary.setLastUpdatedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("executionNumber")) {
                 jobExecutionSummary.setExecutionNumber(LongJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobExecutionsRolloutConfigJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobExecutionsRolloutConfigJsonUnmarshaller.java
index 35460848f8..dbd0c19d2b 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobExecutionsRolloutConfigJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobExecutionsRolloutConfigJsonUnmarshaller.java
@@ -38,7 +38,8 @@ public JobExecutionsRolloutConfig unmarshall(JsonUnmarshallerContext context) th
             String name = reader.nextName();
             if (name.equals("maximumPerMinute")) {
                 jobExecutionsRolloutConfig.setMaximumPerMinute(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("exponentialRate")) {
                 jobExecutionsRolloutConfig
                         .setExponentialRate(ExponentialRolloutRateJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobJsonUnmarshaller.java
index 4ebc522d73..067c1dd93b 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobJsonUnmarshaller.java
@@ -36,38 +36,52 @@ public Job unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("jobArn")) {
-                job.setJobArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                job.setJobArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("jobId")) {
-                job.setJobId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                job.setJobId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("targetSelection")) {
-                job.setTargetSelection(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                job.setTargetSelection(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("status")) {
-                job.setStatus(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                job.setStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("forceCanceled")) {
-                job.setForceCanceled(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                job.setForceCanceled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("reasonCode")) {
-                job.setReasonCode(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                job.setReasonCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("comment")) {
-                job.setComment(StringJsonUnmarshaller.getInstance().unmarshall(context));
-            } else if (name.equals("targets")) {
-                job.setTargets(new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance())
+                job.setComment(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("targets")) {
+                job.setTargets(new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("description")) {
-                job.setDescription(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                job.setDescription(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("presignedUrlConfig")) {
                 job.setPresignedUrlConfig(PresignedUrlConfigJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("jobExecutionsRolloutConfig")) {
                 job.setJobExecutionsRolloutConfig(JobExecutionsRolloutConfigJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("abortConfig")) {
-                job.setAbortConfig(AbortConfigJsonUnmarshaller.getInstance().unmarshall(context));
+                job.setAbortConfig(AbortConfigJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("createdAt")) {
-                job.setCreatedAt(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                job.setCreatedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("lastUpdatedAt")) {
-                job.setLastUpdatedAt(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                job.setLastUpdatedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("completedAt")) {
-                job.setCompletedAt(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                job.setCompletedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("jobProcessDetails")) {
                 job.setJobProcessDetails(JobProcessDetailsJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobProcessDetailsJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobProcessDetailsJsonUnmarshaller.java
index fcd978f70c..b17452b20e 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobProcessDetailsJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobProcessDetailsJsonUnmarshaller.java
@@ -38,7 +38,9 @@ public JobProcessDetails unmarshall(JsonUnmarshallerContext context) throws Exce
             String name = reader.nextName();
             if (name.equals("processingTargets")) {
                 jobProcessDetails.setProcessingTargets(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("numberOfCanceledThings")) {
                 jobProcessDetails.setNumberOfCanceledThings(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobSummaryJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobSummaryJsonUnmarshaller.java
index e2f0a4f607..9267769f68 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobSummaryJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/JobSummaryJsonUnmarshaller.java
@@ -36,23 +36,29 @@ public JobSummary unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("jobArn")) {
-                jobSummary.setJobArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                jobSummary.setJobArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("jobId")) {
-                jobSummary.setJobId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                jobSummary.setJobId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingGroupId")) {
-                jobSummary
-                        .setThingGroupId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                jobSummary.setThingGroupId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("targetSelection")) {
-                jobSummary.setTargetSelection(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                jobSummary.setTargetSelection(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("status")) {
-                jobSummary.setStatus(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                jobSummary.setStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("createdAt")) {
-                jobSummary.setCreatedAt(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                jobSummary.setCreatedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("lastUpdatedAt")) {
-                jobSummary.setLastUpdatedAt(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                jobSummary.setLastUpdatedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("completedAt")) {
-                jobSummary.setCompletedAt(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                jobSummary.setCompletedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/KeyPairJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/KeyPairJsonUnmarshaller.java
index 2412402278..4cffe6183d 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/KeyPairJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/KeyPairJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public KeyPair unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("PublicKey")) {
-                keyPair.setPublicKey(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                keyPair.setPublicKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("PrivateKey")) {
-                keyPair.setPrivateKey(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                keyPair.setPrivateKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/KinesisActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/KinesisActionJsonUnmarshaller.java
index efe1460c81..d0c8234d8f 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/KinesisActionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/KinesisActionJsonUnmarshaller.java
@@ -36,13 +36,14 @@ public KinesisAction unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("roleArn")) {
-                kinesisAction.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                kinesisAction.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("streamName")) {
                 kinesisAction.setStreamName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("partitionKey")) {
-                kinesisAction.setPartitionKey(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                kinesisAction.setPartitionKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/LimitExceededExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/LimitExceededExceptionUnmarshaller.java
index fac6c6368e..5f20e93fd2 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/LimitExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/LimitExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.LimitExceededException;
 
 public class LimitExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public LimitExceededException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        LimitExceededException limitExceededException = new LimitExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                limitExceededException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return limitExceededException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListActiveViolationsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListActiveViolationsResultJsonUnmarshaller.java
index 2f74cd7f10..2629e9216c 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListActiveViolationsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListActiveViolationsResultJsonUnmarshaller.java
@@ -36,7 +36,9 @@ public ListActiveViolationsResult unmarshall(JsonUnmarshallerContext context) th
             if (name.equals("activeViolations")) {
                 listActiveViolationsResult
                         .setActiveViolations(new ListUnmarshaller<ActiveViolation>(
-                                ActiveViolationJsonUnmarshaller.getInstance()).unmarshall(context));
+                                ActiveViolationJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listActiveViolationsResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAttachedPoliciesResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAttachedPoliciesResultJsonUnmarshaller.java
index 6d08e3d7a9..1099ce8889 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAttachedPoliciesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAttachedPoliciesResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListAttachedPoliciesResult unmarshall(JsonUnmarshallerContext context) th
             String name = reader.nextName();
             if (name.equals("policies")) {
                 listAttachedPoliciesResult.setPolicies(new ListUnmarshaller<Policy>(
-                        PolicyJsonUnmarshaller.getInstance()).unmarshall(context));
+                        PolicyJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextMarker")) {
                 listAttachedPoliciesResult.setNextMarker(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditFindingsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditFindingsResultJsonUnmarshaller.java
index 86329a80f4..1d0644ef83 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditFindingsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditFindingsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListAuditFindingsResult unmarshall(JsonUnmarshallerContext context) throw
             String name = reader.nextName();
             if (name.equals("findings")) {
                 listAuditFindingsResult.setFindings(new ListUnmarshaller<AuditFinding>(
-                        AuditFindingJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AuditFindingJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listAuditFindingsResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditTasksResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditTasksResultJsonUnmarshaller.java
index 1bd846f676..705bbf734b 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditTasksResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditTasksResultJsonUnmarshaller.java
@@ -35,10 +35,12 @@ public ListAuditTasksResult unmarshall(JsonUnmarshallerContext context) throws E
             String name = reader.nextName();
             if (name.equals("tasks")) {
                 listAuditTasksResult.setTasks(new ListUnmarshaller<AuditTaskMetadata>(
-                        AuditTaskMetadataJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AuditTaskMetadataJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
-                listAuditTasksResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listAuditTasksResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuthorizersResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuthorizersResultJsonUnmarshaller.java
index cd54f58791..29f08ed375 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuthorizersResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuthorizersResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListAuthorizersResult unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("authorizers")) {
                 listAuthorizersResult.setAuthorizers(new ListUnmarshaller<AuthorizerSummary>(
-                        AuthorizerSummaryJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AuthorizerSummaryJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextMarker")) {
                 listAuthorizersResult.setNextMarker(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListBillingGroupsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListBillingGroupsResultJsonUnmarshaller.java
index 2b0c920a05..6d47a0af3a 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListBillingGroupsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListBillingGroupsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListBillingGroupsResult unmarshall(JsonUnmarshallerContext context) throw
             String name = reader.nextName();
             if (name.equals("billingGroups")) {
                 listBillingGroupsResult.setBillingGroups(new ListUnmarshaller<GroupNameAndArn>(
-                        GroupNameAndArnJsonUnmarshaller.getInstance()).unmarshall(context));
+                        GroupNameAndArnJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listBillingGroupsResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListCACertificatesResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListCACertificatesResultJsonUnmarshaller.java
index 5dc67119b9..b62f995503 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListCACertificatesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListCACertificatesResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListCACertificatesResult unmarshall(JsonUnmarshallerContext context) thro
             String name = reader.nextName();
             if (name.equals("certificates")) {
                 listCACertificatesResult.setCertificates(new ListUnmarshaller<CACertificate>(
-                        CACertificateJsonUnmarshaller.getInstance()).unmarshall(context));
+                        CACertificateJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextMarker")) {
                 listCACertificatesResult.setNextMarker(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListCertificatesByCAResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListCertificatesByCAResultJsonUnmarshaller.java
index 72ef6f77a3..b39d9536cb 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListCertificatesByCAResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListCertificatesByCAResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListCertificatesByCAResult unmarshall(JsonUnmarshallerContext context) th
             String name = reader.nextName();
             if (name.equals("certificates")) {
                 listCertificatesByCAResult.setCertificates(new ListUnmarshaller<Certificate>(
-                        CertificateJsonUnmarshaller.getInstance()).unmarshall(context));
+                        CertificateJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextMarker")) {
                 listCertificatesByCAResult.setNextMarker(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListCertificatesResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListCertificatesResultJsonUnmarshaller.java
index 8a6ac93bd7..51ff2d65af 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListCertificatesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListCertificatesResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListCertificatesResult unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("certificates")) {
                 listCertificatesResult.setCertificates(new ListUnmarshaller<Certificate>(
-                        CertificateJsonUnmarshaller.getInstance()).unmarshall(context));
+                        CertificateJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextMarker")) {
                 listCertificatesResult.setNextMarker(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListIndicesResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListIndicesResultJsonUnmarshaller.java
index c7d3938477..f42ead5242 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListIndicesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListIndicesResultJsonUnmarshaller.java
@@ -35,10 +35,12 @@ public ListIndicesResult unmarshall(JsonUnmarshallerContext context) throws Exce
             String name = reader.nextName();
             if (name.equals("indexNames")) {
                 listIndicesResult.setIndexNames(new ListUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
-                listIndicesResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listIndicesResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListJobExecutionsForJobResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListJobExecutionsForJobResultJsonUnmarshaller.java
index be8c549556..ace5279f54 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListJobExecutionsForJobResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListJobExecutionsForJobResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public ListJobExecutionsForJobResult unmarshall(JsonUnmarshallerContext context)
             if (name.equals("executionSummaries")) {
                 listJobExecutionsForJobResult
                         .setExecutionSummaries(new ListUnmarshaller<JobExecutionSummaryForJob>(
-                                JobExecutionSummaryForJobJsonUnmarshaller.getInstance())
+                                JobExecutionSummaryForJobJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listJobExecutionsForJobResult.setNextToken(StringJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListJobExecutionsForThingResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListJobExecutionsForThingResultJsonUnmarshaller.java
index 1396db11bb..c297ae23c5 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListJobExecutionsForThingResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListJobExecutionsForThingResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public ListJobExecutionsForThingResult unmarshall(JsonUnmarshallerContext contex
             if (name.equals("executionSummaries")) {
                 listJobExecutionsForThingResult
                         .setExecutionSummaries(new ListUnmarshaller<JobExecutionSummaryForThing>(
-                                JobExecutionSummaryForThingJsonUnmarshaller.getInstance())
+                                JobExecutionSummaryForThingJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listJobExecutionsForThingResult.setNextToken(StringJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListJobsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListJobsResultJsonUnmarshaller.java
index 119a120885..0d7cb7b6b8 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListJobsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListJobsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListJobsResult unmarshall(JsonUnmarshallerContext context) throws Excepti
             String name = reader.nextName();
             if (name.equals("jobs")) {
                 listJobsResult.setJobs(new ListUnmarshaller<JobSummary>(JobSummaryJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listJobsResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListOTAUpdatesResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListOTAUpdatesResultJsonUnmarshaller.java
index d5174ce1c5..452b21006e 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListOTAUpdatesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListOTAUpdatesResultJsonUnmarshaller.java
@@ -35,10 +35,12 @@ public ListOTAUpdatesResult unmarshall(JsonUnmarshallerContext context) throws E
             String name = reader.nextName();
             if (name.equals("otaUpdates")) {
                 listOTAUpdatesResult.setOtaUpdates(new ListUnmarshaller<OTAUpdateSummary>(
-                        OTAUpdateSummaryJsonUnmarshaller.getInstance()).unmarshall(context));
+                        OTAUpdateSummaryJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
-                listOTAUpdatesResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listOTAUpdatesResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListOutgoingCertificatesResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListOutgoingCertificatesResultJsonUnmarshaller.java
index 29dc79c265..0eee013eed 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListOutgoingCertificatesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListOutgoingCertificatesResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public ListOutgoingCertificatesResult unmarshall(JsonUnmarshallerContext context
             if (name.equals("outgoingCertificates")) {
                 listOutgoingCertificatesResult
                         .setOutgoingCertificates(new ListUnmarshaller<OutgoingCertificate>(
-                                OutgoingCertificateJsonUnmarshaller.getInstance())
+                                OutgoingCertificateJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("nextMarker")) {
                 listOutgoingCertificatesResult.setNextMarker(StringJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPoliciesResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPoliciesResultJsonUnmarshaller.java
index c26f8d92d1..42217c82a8 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPoliciesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPoliciesResultJsonUnmarshaller.java
@@ -35,10 +35,12 @@ public ListPoliciesResult unmarshall(JsonUnmarshallerContext context) throws Exc
             String name = reader.nextName();
             if (name.equals("policies")) {
                 listPoliciesResult.setPolicies(new ListUnmarshaller<Policy>(PolicyJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextMarker")) {
-                listPoliciesResult.setNextMarker(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listPoliciesResult.setNextMarker(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPolicyPrincipalsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPolicyPrincipalsResultJsonUnmarshaller.java
index e1cc066631..250fea0aa0 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPolicyPrincipalsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPolicyPrincipalsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListPolicyPrincipalsResult unmarshall(JsonUnmarshallerContext context) th
             String name = reader.nextName();
             if (name.equals("principals")) {
                 listPolicyPrincipalsResult.setPrincipals(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextMarker")) {
                 listPolicyPrincipalsResult.setNextMarker(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPolicyVersionsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPolicyVersionsResultJsonUnmarshaller.java
index 67b39c16bc..f51458a314 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPolicyVersionsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPolicyVersionsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListPolicyVersionsResult unmarshall(JsonUnmarshallerContext context) thro
             String name = reader.nextName();
             if (name.equals("policyVersions")) {
                 listPolicyVersionsResult.setPolicyVersions(new ListUnmarshaller<PolicyVersion>(
-                        PolicyVersionJsonUnmarshaller.getInstance()).unmarshall(context));
+                        PolicyVersionJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPrincipalPoliciesResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPrincipalPoliciesResultJsonUnmarshaller.java
index fa7cf12550..5274b51151 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPrincipalPoliciesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPrincipalPoliciesResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListPrincipalPoliciesResult unmarshall(JsonUnmarshallerContext context) t
             String name = reader.nextName();
             if (name.equals("policies")) {
                 listPrincipalPoliciesResult.setPolicies(new ListUnmarshaller<Policy>(
-                        PolicyJsonUnmarshaller.getInstance()).unmarshall(context));
+                        PolicyJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextMarker")) {
                 listPrincipalPoliciesResult.setNextMarker(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPrincipalThingsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPrincipalThingsResultJsonUnmarshaller.java
index 9878fdca67..7365b7460c 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPrincipalThingsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListPrincipalThingsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListPrincipalThingsResult unmarshall(JsonUnmarshallerContext context) thr
             String name = reader.nextName();
             if (name.equals("things")) {
                 listPrincipalThingsResult.setThings(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listPrincipalThingsResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListRoleAliasesResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListRoleAliasesResultJsonUnmarshaller.java
index f391ef861a..450fed658b 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListRoleAliasesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListRoleAliasesResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListRoleAliasesResult unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("roleAliases")) {
                 listRoleAliasesResult.setRoleAliases(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextMarker")) {
                 listRoleAliasesResult.setNextMarker(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListScheduledAuditsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListScheduledAuditsResultJsonUnmarshaller.java
index 2c5635ef9a..1ef4ab2d61 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListScheduledAuditsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListScheduledAuditsResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public ListScheduledAuditsResult unmarshall(JsonUnmarshallerContext context) thr
             if (name.equals("scheduledAudits")) {
                 listScheduledAuditsResult
                         .setScheduledAudits(new ListUnmarshaller<ScheduledAuditMetadata>(
-                                ScheduledAuditMetadataJsonUnmarshaller.getInstance())
+                                ScheduledAuditMetadataJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listScheduledAuditsResult.setNextToken(StringJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListSecurityProfilesForTargetResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListSecurityProfilesForTargetResultJsonUnmarshaller.java
index d244d017c7..b4cccc26e3 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListSecurityProfilesForTargetResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListSecurityProfilesForTargetResultJsonUnmarshaller.java
@@ -37,11 +37,13 @@ public ListSecurityProfilesForTargetResult unmarshall(JsonUnmarshallerContext co
             if (name.equals("securityProfileTargetMappings")) {
                 listSecurityProfilesForTargetResult
                         .setSecurityProfileTargetMappings(new ListUnmarshaller<SecurityProfileTargetMapping>(
-                                SecurityProfileTargetMappingJsonUnmarshaller.getInstance())
+                                SecurityProfileTargetMappingJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listSecurityProfilesForTargetResult.setNextToken(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListSecurityProfilesResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListSecurityProfilesResultJsonUnmarshaller.java
index fafa083928..959efe5450 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListSecurityProfilesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListSecurityProfilesResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public ListSecurityProfilesResult unmarshall(JsonUnmarshallerContext context) th
             if (name.equals("securityProfileIdentifiers")) {
                 listSecurityProfilesResult
                         .setSecurityProfileIdentifiers(new ListUnmarshaller<SecurityProfileIdentifier>(
-                                SecurityProfileIdentifierJsonUnmarshaller.getInstance())
+                                SecurityProfileIdentifierJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listSecurityProfilesResult.setNextToken(StringJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListStreamsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListStreamsResultJsonUnmarshaller.java
index 5e5541be6b..b641e88337 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListStreamsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListStreamsResultJsonUnmarshaller.java
@@ -35,10 +35,12 @@ public ListStreamsResult unmarshall(JsonUnmarshallerContext context) throws Exce
             String name = reader.nextName();
             if (name.equals("streams")) {
                 listStreamsResult.setStreams(new ListUnmarshaller<StreamSummary>(
-                        StreamSummaryJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StreamSummaryJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
-                listStreamsResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listStreamsResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListTagsForResourceResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListTagsForResourceResultJsonUnmarshaller.java
index 3288fcd87c..37fcc58610 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListTagsForResourceResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListTagsForResourceResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListTagsForResourceResult unmarshall(JsonUnmarshallerContext context) thr
             String name = reader.nextName();
             if (name.equals("tags")) {
                 listTagsForResourceResult.setTags(new ListUnmarshaller<Tag>(TagJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listTagsForResourceResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListTargetsForPolicyResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListTargetsForPolicyResultJsonUnmarshaller.java
index 25d5a9c400..f2c05cfdab 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListTargetsForPolicyResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListTargetsForPolicyResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListTargetsForPolicyResult unmarshall(JsonUnmarshallerContext context) th
             String name = reader.nextName();
             if (name.equals("targets")) {
                 listTargetsForPolicyResult.setTargets(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextMarker")) {
                 listTargetsForPolicyResult.setNextMarker(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListTargetsForSecurityProfileResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListTargetsForSecurityProfileResultJsonUnmarshaller.java
index 0533e65f55..afaf6114d8 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListTargetsForSecurityProfileResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListTargetsForSecurityProfileResultJsonUnmarshaller.java
@@ -37,11 +37,13 @@ public ListTargetsForSecurityProfileResult unmarshall(JsonUnmarshallerContext co
             if (name.equals("securityProfileTargets")) {
                 listTargetsForSecurityProfileResult
                         .setSecurityProfileTargets(new ListUnmarshaller<SecurityProfileTarget>(
-                                SecurityProfileTargetJsonUnmarshaller.getInstance())
+                                SecurityProfileTargetJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listTargetsForSecurityProfileResult.setNextToken(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingGroupsForThingResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingGroupsForThingResultJsonUnmarshaller.java
index eee353f124..005d78f808 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingGroupsForThingResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingGroupsForThingResultJsonUnmarshaller.java
@@ -36,7 +36,9 @@ public ListThingGroupsForThingResult unmarshall(JsonUnmarshallerContext context)
             String name = reader.nextName();
             if (name.equals("thingGroups")) {
                 listThingGroupsForThingResult.setThingGroups(new ListUnmarshaller<GroupNameAndArn>(
-                        GroupNameAndArnJsonUnmarshaller.getInstance()).unmarshall(context));
+                        GroupNameAndArnJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listThingGroupsForThingResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingGroupsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingGroupsResultJsonUnmarshaller.java
index f6393d4b7d..68a58ce82a 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingGroupsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingGroupsResultJsonUnmarshaller.java
@@ -35,10 +35,12 @@ public ListThingGroupsResult unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("thingGroups")) {
                 listThingGroupsResult.setThingGroups(new ListUnmarshaller<GroupNameAndArn>(
-                        GroupNameAndArnJsonUnmarshaller.getInstance()).unmarshall(context));
+                        GroupNameAndArnJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
-                listThingGroupsResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listThingGroupsResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingPrincipalsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingPrincipalsResultJsonUnmarshaller.java
index 6d530d1612..53d7a256fe 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingPrincipalsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingPrincipalsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListThingPrincipalsResult unmarshall(JsonUnmarshallerContext context) thr
             String name = reader.nextName();
             if (name.equals("principals")) {
                 listThingPrincipalsResult.setPrincipals(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingRegistrationTaskReportsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingRegistrationTaskReportsResultJsonUnmarshaller.java
index 195ea95fe1..2c7e673e16 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingRegistrationTaskReportsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingRegistrationTaskReportsResultJsonUnmarshaller.java
@@ -37,13 +37,17 @@ public ListThingRegistrationTaskReportsResult unmarshall(JsonUnmarshallerContext
             if (name.equals("resourceLinks")) {
                 listThingRegistrationTaskReportsResult
                         .setResourceLinks(new ListUnmarshaller<String>(StringJsonUnmarshaller
-                                .getInstance()).unmarshall(context));
+                                .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("reportType")) {
                 listThingRegistrationTaskReportsResult.setReportType(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listThingRegistrationTaskReportsResult.setNextToken(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingRegistrationTasksResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingRegistrationTasksResultJsonUnmarshaller.java
index bdc9205a08..a98201cd17 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingRegistrationTasksResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingRegistrationTasksResultJsonUnmarshaller.java
@@ -36,7 +36,9 @@ public ListThingRegistrationTasksResult unmarshall(JsonUnmarshallerContext conte
             String name = reader.nextName();
             if (name.equals("taskIds")) {
                 listThingRegistrationTasksResult.setTaskIds(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listThingRegistrationTasksResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingTypesResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingTypesResultJsonUnmarshaller.java
index 27819f7cce..c8b4f3c547 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingTypesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingTypesResultJsonUnmarshaller.java
@@ -35,10 +35,12 @@ public ListThingTypesResult unmarshall(JsonUnmarshallerContext context) throws E
             String name = reader.nextName();
             if (name.equals("thingTypes")) {
                 listThingTypesResult.setThingTypes(new ListUnmarshaller<ThingTypeDefinition>(
-                        ThingTypeDefinitionJsonUnmarshaller.getInstance()).unmarshall(context));
+                        ThingTypeDefinitionJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
-                listThingTypesResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listThingTypesResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingsInBillingGroupResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingsInBillingGroupResultJsonUnmarshaller.java
index 6743d679db..32dc6594d9 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingsInBillingGroupResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingsInBillingGroupResultJsonUnmarshaller.java
@@ -36,7 +36,9 @@ public ListThingsInBillingGroupResult unmarshall(JsonUnmarshallerContext context
             String name = reader.nextName();
             if (name.equals("things")) {
                 listThingsInBillingGroupResult.setThings(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listThingsInBillingGroupResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingsInThingGroupResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingsInThingGroupResultJsonUnmarshaller.java
index da96898a20..ee550c2b82 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingsInThingGroupResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingsInThingGroupResultJsonUnmarshaller.java
@@ -36,7 +36,9 @@ public ListThingsInThingGroupResult unmarshall(JsonUnmarshallerContext context)
             String name = reader.nextName();
             if (name.equals("things")) {
                 listThingsInThingGroupResult.setThings(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listThingsInThingGroupResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingsResultJsonUnmarshaller.java
index 66b7b66511..bbceaea2e6 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListThingsResultJsonUnmarshaller.java
@@ -35,10 +35,12 @@ public ListThingsResult unmarshall(JsonUnmarshallerContext context) throws Excep
             String name = reader.nextName();
             if (name.equals("things")) {
                 listThingsResult.setThings(new ListUnmarshaller<ThingAttribute>(
-                        ThingAttributeJsonUnmarshaller.getInstance()).unmarshall(context));
+                        ThingAttributeJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
-                listThingsResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listThingsResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListTopicRulesResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListTopicRulesResultJsonUnmarshaller.java
index bd8e4fef75..dc641a46dd 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListTopicRulesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListTopicRulesResultJsonUnmarshaller.java
@@ -35,10 +35,12 @@ public ListTopicRulesResult unmarshall(JsonUnmarshallerContext context) throws E
             String name = reader.nextName();
             if (name.equals("rules")) {
                 listTopicRulesResult.setRules(new ListUnmarshaller<TopicRuleListItem>(
-                        TopicRuleListItemJsonUnmarshaller.getInstance()).unmarshall(context));
+                        TopicRuleListItemJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
-                listTopicRulesResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listTopicRulesResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListV2LoggingLevelsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListV2LoggingLevelsResultJsonUnmarshaller.java
index 5a1a8f9c64..cce61e1534 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListV2LoggingLevelsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListV2LoggingLevelsResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public ListV2LoggingLevelsResult unmarshall(JsonUnmarshallerContext context) thr
             if (name.equals("logTargetConfigurations")) {
                 listV2LoggingLevelsResult
                         .setLogTargetConfigurations(new ListUnmarshaller<LogTargetConfiguration>(
-                                LogTargetConfigurationJsonUnmarshaller.getInstance())
+                                LogTargetConfigurationJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listV2LoggingLevelsResult.setNextToken(StringJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListViolationEventsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListViolationEventsResultJsonUnmarshaller.java
index 343e382111..afe24702c5 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListViolationEventsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListViolationEventsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListViolationEventsResult unmarshall(JsonUnmarshallerContext context) thr
             String name = reader.nextName();
             if (name.equals("violationEvents")) {
                 listViolationEventsResult.setViolationEvents(new ListUnmarshaller<ViolationEvent>(
-                        ViolationEventJsonUnmarshaller.getInstance()).unmarshall(context));
+                        ViolationEventJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 listViolationEventsResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/LogTargetConfigurationJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/LogTargetConfigurationJsonUnmarshaller.java
index 07618874ca..f0360d3ac0 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/LogTargetConfigurationJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/LogTargetConfigurationJsonUnmarshaller.java
@@ -40,8 +40,8 @@ public LogTargetConfiguration unmarshall(JsonUnmarshallerContext context) throws
                 logTargetConfiguration.setLogTarget(LogTargetJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("logLevel")) {
-                logTargetConfiguration.setLogLevel(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                logTargetConfiguration.setLogLevel(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/LogTargetJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/LogTargetJsonUnmarshaller.java
index 3cbc558c3b..73ebbc95eb 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/LogTargetJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/LogTargetJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public LogTarget unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("targetType")) {
-                logTarget.setTargetType(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                logTarget.setTargetType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("targetName")) {
-                logTarget.setTargetName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                logTarget.setTargetName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/LoggingOptionsPayloadJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/LoggingOptionsPayloadJsonUnmarshaller.java
index 1f6d69bdb9..7063dbe071 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/LoggingOptionsPayloadJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/LoggingOptionsPayloadJsonUnmarshaller.java
@@ -37,11 +37,11 @@ public LoggingOptionsPayload unmarshall(JsonUnmarshallerContext context) throws
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("roleArn")) {
-                loggingOptionsPayload.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                loggingOptionsPayload.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("logLevel")) {
-                loggingOptionsPayload.setLogLevel(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                loggingOptionsPayload.setLogLevel(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MalformedPolicyExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MalformedPolicyExceptionUnmarshaller.java
index 2966f4cd18..9cec1d9994 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MalformedPolicyExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MalformedPolicyExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.MalformedPolicyException;
 
 public class MalformedPolicyExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public MalformedPolicyException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        MalformedPolicyException malformedPolicyException = new MalformedPolicyException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                malformedPolicyException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return malformedPolicyException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MetricValueJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MetricValueJsonUnmarshaller.java
index 83687f31f5..6e9f67eaa5 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MetricValueJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MetricValueJsonUnmarshaller.java
@@ -36,13 +36,18 @@ public MetricValue unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("count")) {
-                metricValue.setCount(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                metricValue.setCount(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("cidrs")) {
                 metricValue.setCidrs(new ListUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ports")) {
                 metricValue.setPorts(new ListUnmarshaller<Integer>(IntegerJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/NonCompliantResourceJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/NonCompliantResourceJsonUnmarshaller.java
index 6a42afb5c9..f5f0914f77 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/NonCompliantResourceJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/NonCompliantResourceJsonUnmarshaller.java
@@ -41,10 +41,13 @@ public NonCompliantResource unmarshall(JsonUnmarshallerContext context) throws E
                         .unmarshall(context));
             } else if (name.equals("resourceIdentifier")) {
                 nonCompliantResource.setResourceIdentifier(ResourceIdentifierJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("additionalInfo")) {
                 nonCompliantResource.setAdditionalInfo(new MapUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/NotConfiguredExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/NotConfiguredExceptionUnmarshaller.java
index a76cbf9b4f..0f049ee733 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/NotConfiguredExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/NotConfiguredExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.NotConfiguredException;
 
 public class NotConfiguredExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public NotConfiguredException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        NotConfiguredException notConfiguredException = new NotConfiguredException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                notConfiguredException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return notConfiguredException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/OTAUpdateFileJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/OTAUpdateFileJsonUnmarshaller.java
index 73d25a9ad2..718a2cd0f3 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/OTAUpdateFileJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/OTAUpdateFileJsonUnmarshaller.java
@@ -36,19 +36,22 @@ public OTAUpdateFile unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("fileName")) {
-                oTAUpdateFile.setFileName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                oTAUpdateFile.setFileName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("fileVersion")) {
-                oTAUpdateFile.setFileVersion(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                oTAUpdateFile.setFileVersion(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("fileLocation")) {
                 oTAUpdateFile.setFileLocation(FileLocationJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("codeSigning")) {
-                oTAUpdateFile.setCodeSigning(CodeSigningJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                oTAUpdateFile.setCodeSigning(CodeSigningJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("attributes")) {
                 oTAUpdateFile.setAttributes(new MapUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/OTAUpdateInfoJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/OTAUpdateInfoJsonUnmarshaller.java
index b311cd332e..3f959d9f73 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/OTAUpdateInfoJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/OTAUpdateInfoJsonUnmarshaller.java
@@ -36,48 +36,55 @@ public OTAUpdateInfo unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("otaUpdateId")) {
-                oTAUpdateInfo.setOtaUpdateId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                oTAUpdateInfo.setOtaUpdateId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("otaUpdateArn")) {
-                oTAUpdateInfo.setOtaUpdateArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                oTAUpdateInfo.setOtaUpdateArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("creationDate")) {
                 oTAUpdateInfo.setCreationDate(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("lastModifiedDate")) {
-                oTAUpdateInfo.setLastModifiedDate(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                oTAUpdateInfo.setLastModifiedDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("description")) {
-                oTAUpdateInfo.setDescription(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                oTAUpdateInfo.setDescription(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("targets")) {
                 oTAUpdateInfo.setTargets(new ListUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("awsJobExecutionsRolloutConfig")) {
                 oTAUpdateInfo
                         .setAwsJobExecutionsRolloutConfig(AwsJobExecutionsRolloutConfigJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("targetSelection")) {
-                oTAUpdateInfo.setTargetSelection(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                oTAUpdateInfo.setTargetSelection(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("otaUpdateFiles")) {
                 oTAUpdateInfo.setOtaUpdateFiles(new ListUnmarshaller<OTAUpdateFile>(
-                        OTAUpdateFileJsonUnmarshaller.getInstance()).unmarshall(context));
+                        OTAUpdateFileJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("otaUpdateStatus")) {
-                oTAUpdateInfo.setOtaUpdateStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                oTAUpdateInfo.setOtaUpdateStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("awsIotJobId")) {
-                oTAUpdateInfo.setAwsIotJobId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                oTAUpdateInfo.setAwsIotJobId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("awsIotJobArn")) {
-                oTAUpdateInfo.setAwsIotJobArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                oTAUpdateInfo.setAwsIotJobArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("errorInfo")) {
-                oTAUpdateInfo.setErrorInfo(ErrorInfoJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                oTAUpdateInfo.setErrorInfo(ErrorInfoJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("additionalParameters")) {
                 oTAUpdateInfo.setAdditionalParameters(new MapUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/OTAUpdateSummaryJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/OTAUpdateSummaryJsonUnmarshaller.java
index f165e50e0a..9f0984e825 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/OTAUpdateSummaryJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/OTAUpdateSummaryJsonUnmarshaller.java
@@ -37,14 +37,14 @@ public OTAUpdateSummary unmarshall(JsonUnmarshallerContext context) throws Excep
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("otaUpdateId")) {
-                oTAUpdateSummary.setOtaUpdateId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                oTAUpdateSummary.setOtaUpdateId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("otaUpdateArn")) {
-                oTAUpdateSummary.setOtaUpdateArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                oTAUpdateSummary.setOtaUpdateArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("creationDate")) {
-                oTAUpdateSummary.setCreationDate(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                oTAUpdateSummary.setCreationDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/OutgoingCertificateJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/OutgoingCertificateJsonUnmarshaller.java
index 00660deed2..626a00c03b 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/OutgoingCertificateJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/OutgoingCertificateJsonUnmarshaller.java
@@ -46,14 +46,14 @@ public OutgoingCertificate unmarshall(JsonUnmarshallerContext context) throws Ex
                 outgoingCertificate.setTransferredTo(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("transferDate")) {
-                outgoingCertificate.setTransferDate(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                outgoingCertificate.setTransferDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("transferMessage")) {
                 outgoingCertificate.setTransferMessage(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("creationDate")) {
-                outgoingCertificate.setCreationDate(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                outgoingCertificate.setCreationDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PolicyJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PolicyJsonUnmarshaller.java
index 8441ca391a..a6daf69390 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PolicyJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PolicyJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Policy unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("policyName")) {
-                policy.setPolicyName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                policy.setPolicyName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("policyArn")) {
-                policy.setPolicyArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                policy.setPolicyArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PolicyVersionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PolicyVersionJsonUnmarshaller.java
index d7d2ed4457..3e35acac2a 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PolicyVersionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PolicyVersionJsonUnmarshaller.java
@@ -36,13 +36,14 @@ public PolicyVersion unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("versionId")) {
-                policyVersion
-                        .setVersionId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                policyVersion.setVersionId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("isDefaultVersion")) {
-                policyVersion.setIsDefaultVersion(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                policyVersion.setIsDefaultVersion(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("createDate")) {
-                policyVersion.setCreateDate(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                policyVersion.setCreateDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PresignedUrlConfigJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PresignedUrlConfigJsonUnmarshaller.java
index df68284e68..07ecd1c828 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PresignedUrlConfigJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PresignedUrlConfigJsonUnmarshaller.java
@@ -37,11 +37,11 @@ public PresignedUrlConfig unmarshall(JsonUnmarshallerContext context) throws Exc
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("roleArn")) {
-                presignedUrlConfig.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                presignedUrlConfig.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("expiresInSec")) {
-                presignedUrlConfig.setExpiresInSec(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                presignedUrlConfig.setExpiresInSec(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PutItemInputJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PutItemInputJsonUnmarshaller.java
index adb7e23037..c3038eac9e 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PutItemInputJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PutItemInputJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public PutItemInput unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("tableName")) {
-                putItemInput.setTableName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                putItemInput.setTableName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RateIncreaseCriteriaJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RateIncreaseCriteriaJsonUnmarshaller.java
index 0640237a0f..f98fa848ab 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RateIncreaseCriteriaJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RateIncreaseCriteriaJsonUnmarshaller.java
@@ -38,10 +38,12 @@ public RateIncreaseCriteria unmarshall(JsonUnmarshallerContext context) throws E
             String name = reader.nextName();
             if (name.equals("numberOfNotifiedThings")) {
                 rateIncreaseCriteria.setNumberOfNotifiedThings(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("numberOfSucceededThings")) {
                 rateIncreaseCriteria.setNumberOfSucceededThings(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RegisterThingResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RegisterThingResultJsonUnmarshaller.java
index 3e2b847e2e..f60bfc5e46 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RegisterThingResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RegisterThingResultJsonUnmarshaller.java
@@ -38,7 +38,9 @@ public RegisterThingResult unmarshall(JsonUnmarshallerContext context) throws Ex
                         .unmarshall(context));
             } else if (name.equals("resourceArns")) {
                 registerThingResult.setResourceArns(new MapUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RegistrationCodeValidationExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RegistrationCodeValidationExceptionUnmarshaller.java
index ea0e04bf17..966b9896af 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RegistrationCodeValidationExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RegistrationCodeValidationExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.RegistrationCodeValidationException;
 
 public class RegistrationCodeValidationExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public RegistrationCodeValidationException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        RegistrationCodeValidationException registrationCodeValidationException = new RegistrationCodeValidationException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                registrationCodeValidationException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return registrationCodeValidationException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RegistrationConfigJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RegistrationConfigJsonUnmarshaller.java
index 6b0d175200..ac6932f0c3 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RegistrationConfigJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RegistrationConfigJsonUnmarshaller.java
@@ -37,11 +37,11 @@ public RegistrationConfig unmarshall(JsonUnmarshallerContext context) throws Exc
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("templateBody")) {
-                registrationConfig.setTemplateBody(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                registrationConfig.setTemplateBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("roleArn")) {
-                registrationConfig.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                registrationConfig.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RelatedResourceJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RelatedResourceJsonUnmarshaller.java
index 054e2d4395..39e1f53606 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RelatedResourceJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RelatedResourceJsonUnmarshaller.java
@@ -37,14 +37,17 @@ public RelatedResource unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("resourceType")) {
-                relatedResource.setResourceType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                relatedResource.setResourceType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("resourceIdentifier")) {
                 relatedResource.setResourceIdentifier(ResourceIdentifierJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("additionalInfo")) {
                 relatedResource.setAdditionalInfo(new MapUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RepublishActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RepublishActionJsonUnmarshaller.java
index 727617e500..cfdb4ce1c5 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RepublishActionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RepublishActionJsonUnmarshaller.java
@@ -37,10 +37,11 @@ public RepublishAction unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("roleArn")) {
-                republishAction
-                        .setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                republishAction.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("topic")) {
-                republishAction.setTopic(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                republishAction.setTopic(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ResourceAlreadyExistsExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ResourceAlreadyExistsExceptionUnmarshaller.java
index 75b95b649c..bf96e9339a 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ResourceAlreadyExistsExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ResourceAlreadyExistsExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.ResourceAlreadyExistsException;
 
 public class ResourceAlreadyExistsExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -45,38 +42,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceAlreadyExistsException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceAlreadyExistsException resourceAlreadyExistsException = new ResourceAlreadyExistsException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceAlreadyExistsException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("resourceId")) {
-                resourceAlreadyExistsException.setResourceId(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("resourceArn")) {
-                resourceAlreadyExistsException.setResourceArn(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceAlreadyExistsException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ResourceIdentifierJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ResourceIdentifierJsonUnmarshaller.java
index 8fa3c06144..42fcca46d6 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ResourceIdentifierJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ResourceIdentifierJsonUnmarshaller.java
@@ -46,15 +46,16 @@ public ResourceIdentifier unmarshall(JsonUnmarshallerContext context) throws Exc
                 resourceIdentifier.setCognitoIdentityPoolId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("clientId")) {
-                resourceIdentifier.setClientId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                resourceIdentifier.setClientId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("policyVersionIdentifier")) {
                 resourceIdentifier
                         .setPolicyVersionIdentifier(PolicyVersionIdentifierJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("account")) {
-                resourceIdentifier.setAccount(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                resourceIdentifier.setAccount(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ResourceNotFoundExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ResourceNotFoundExceptionUnmarshaller.java
index 4fe12d598b..3daaff9ec5 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ResourceNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ResourceNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.ResourceNotFoundException;
 
 public class ResourceNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceNotFoundException resourceNotFoundException = new ResourceNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ResourceRegistrationFailureExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ResourceRegistrationFailureExceptionUnmarshaller.java
index 9f67f6f915..330422d4da 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ResourceRegistrationFailureExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ResourceRegistrationFailureExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.ResourceRegistrationFailureException;
 
 public class ResourceRegistrationFailureExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceRegistrationFailureException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceRegistrationFailureException resourceRegistrationFailureException = new ResourceRegistrationFailureException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceRegistrationFailureException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceRegistrationFailureException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RoleAliasDescriptionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RoleAliasDescriptionJsonUnmarshaller.java
index 1daa041fc6..ce8ccc399d 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RoleAliasDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RoleAliasDescriptionJsonUnmarshaller.java
@@ -37,23 +37,24 @@ public RoleAliasDescription unmarshall(JsonUnmarshallerContext context) throws E
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("roleAlias")) {
-                roleAliasDescription.setRoleAlias(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                roleAliasDescription.setRoleAlias(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("roleAliasArn")) {
                 roleAliasDescription.setRoleAliasArn(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("roleArn")) {
-                roleAliasDescription.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                roleAliasDescription.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("owner")) {
-                roleAliasDescription.setOwner(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                roleAliasDescription.setOwner(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("credentialDurationSeconds")) {
                 roleAliasDescription.setCredentialDurationSeconds(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("creationDate")) {
-                roleAliasDescription.setCreationDate(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                roleAliasDescription.setCreationDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("lastModifiedDate")) {
                 roleAliasDescription.setLastModifiedDate(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/S3ActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/S3ActionJsonUnmarshaller.java
index e20cb480e4..b33522d706 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/S3ActionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/S3ActionJsonUnmarshaller.java
@@ -36,13 +36,17 @@ public S3Action unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("roleArn")) {
-                s3Action.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                s3Action.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("bucketName")) {
-                s3Action.setBucketName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                s3Action.setBucketName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("key")) {
-                s3Action.setKey(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                s3Action.setKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("cannedAcl")) {
-                s3Action.setCannedAcl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                s3Action.setCannedAcl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/S3DestinationJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/S3DestinationJsonUnmarshaller.java
index 41754473fa..369253f0fe 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/S3DestinationJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/S3DestinationJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public S3Destination unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("bucket")) {
-                s3Destination.setBucket(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                s3Destination.setBucket(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("prefix")) {
-                s3Destination.setPrefix(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                s3Destination.setPrefix(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/S3LocationJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/S3LocationJsonUnmarshaller.java
index 3b6d08b634..0a66a36708 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/S3LocationJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/S3LocationJsonUnmarshaller.java
@@ -36,11 +36,14 @@ public S3Location unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("bucket")) {
-                s3Location.setBucket(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                s3Location.setBucket(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("key")) {
-                s3Location.setKey(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                s3Location.setKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("version")) {
-                s3Location.setVersion(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                s3Location.setVersion(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SalesforceActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SalesforceActionJsonUnmarshaller.java
index bca0773fab..00c96411cd 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SalesforceActionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SalesforceActionJsonUnmarshaller.java
@@ -37,9 +37,11 @@ public SalesforceAction unmarshall(JsonUnmarshallerContext context) throws Excep
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("token")) {
-                salesforceAction.setToken(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                salesforceAction.setToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("url")) {
-                salesforceAction.setUrl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                salesforceAction.setUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SearchIndexResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SearchIndexResultJsonUnmarshaller.java
index fc99401dab..98294a50f2 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SearchIndexResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SearchIndexResultJsonUnmarshaller.java
@@ -34,14 +34,18 @@ public SearchIndexResult unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("nextToken")) {
-                searchIndexResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                searchIndexResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("things")) {
                 searchIndexResult.setThings(new ListUnmarshaller<ThingDocument>(
-                        ThingDocumentJsonUnmarshaller.getInstance()).unmarshall(context));
+                        ThingDocumentJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("thingGroups")) {
                 searchIndexResult.setThingGroups(new ListUnmarshaller<ThingGroupDocument>(
-                        ThingGroupDocumentJsonUnmarshaller.getInstance()).unmarshall(context));
+                        ThingGroupDocumentJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SecurityProfileIdentifierJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SecurityProfileIdentifierJsonUnmarshaller.java
index 1f775aadc3..82e79a4795 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SecurityProfileIdentifierJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SecurityProfileIdentifierJsonUnmarshaller.java
@@ -37,11 +37,11 @@ public SecurityProfileIdentifier unmarshall(JsonUnmarshallerContext context) thr
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("name")) {
-                securityProfileIdentifier.setName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                securityProfileIdentifier.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("arn")) {
-                securityProfileIdentifier.setArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                securityProfileIdentifier.setArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SecurityProfileTargetJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SecurityProfileTargetJsonUnmarshaller.java
index f4c4e46405..e8cc91a03d 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SecurityProfileTargetJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SecurityProfileTargetJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public SecurityProfileTarget unmarshall(JsonUnmarshallerContext context) throws
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("arn")) {
-                securityProfileTarget.setArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                securityProfileTarget.setArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SecurityProfileTargetMappingJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SecurityProfileTargetMappingJsonUnmarshaller.java
index deb19da91a..4b30073cc6 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SecurityProfileTargetMappingJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SecurityProfileTargetMappingJsonUnmarshaller.java
@@ -40,10 +40,12 @@ public SecurityProfileTargetMapping unmarshall(JsonUnmarshallerContext context)
             if (name.equals("securityProfileIdentifier")) {
                 securityProfileTargetMapping
                         .setSecurityProfileIdentifier(SecurityProfileIdentifierJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("target")) {
                 securityProfileTargetMapping.setTarget(SecurityProfileTargetJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ServiceUnavailableExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ServiceUnavailableExceptionUnmarshaller.java
index 665c74340c..70da4fdadd 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ServiceUnavailableExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ServiceUnavailableExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.ServiceUnavailableException;
 
 public class ServiceUnavailableExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ServiceUnavailableException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ServiceUnavailableException serviceUnavailableException = new ServiceUnavailableException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                serviceUnavailableException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return serviceUnavailableException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SigningProfileParameterJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SigningProfileParameterJsonUnmarshaller.java
index e302642089..0982dbe17a 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SigningProfileParameterJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SigningProfileParameterJsonUnmarshaller.java
@@ -44,7 +44,8 @@ public SigningProfileParameter unmarshall(JsonUnmarshallerContext context) throw
                         .unmarshall(context));
             } else if (name.equals("certificatePathOnDevice")) {
                 signingProfileParameter.setCertificatePathOnDevice(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SnsActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SnsActionJsonUnmarshaller.java
index 3ef9ff633c..8d335e164c 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SnsActionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SnsActionJsonUnmarshaller.java
@@ -36,12 +36,14 @@ public SnsAction unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("targetArn")) {
-                snsAction.setTargetArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                snsAction.setTargetArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("roleArn")) {
-                snsAction.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                snsAction.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("messageFormat")) {
-                snsAction
-                        .setMessageFormat(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                snsAction.setMessageFormat(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SqlParseExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SqlParseExceptionUnmarshaller.java
index e6c3c28970..8b121d8ccd 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SqlParseExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SqlParseExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.SqlParseException;
 
 public class SqlParseExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public SqlParseException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        SqlParseException sqlParseException = new SqlParseException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                sqlParseException.setErrorMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return sqlParseException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SqsActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SqsActionJsonUnmarshaller.java
index 8790043f14..ae8d8ea445 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SqsActionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SqsActionJsonUnmarshaller.java
@@ -36,11 +36,14 @@ public SqsAction unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("roleArn")) {
-                sqsAction.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                sqsAction.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("queueUrl")) {
-                sqsAction.setQueueUrl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                sqsAction.setQueueUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("useBase64")) {
-                sqsAction.setUseBase64(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                sqsAction.setUseBase64(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StartSigningJobParameterJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StartSigningJobParameterJsonUnmarshaller.java
index e66df97fca..f4994a2337 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StartSigningJobParameterJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StartSigningJobParameterJsonUnmarshaller.java
@@ -39,7 +39,8 @@ public StartSigningJobParameter unmarshall(JsonUnmarshallerContext context) thro
             if (name.equals("signingProfileParameter")) {
                 startSigningJobParameter
                         .setSigningProfileParameter(SigningProfileParameterJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("signingProfileName")) {
                 startSigningJobParameter.setSigningProfileName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StepFunctionsActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StepFunctionsActionJsonUnmarshaller.java
index e4d7c1ff51..6ec13255ad 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StepFunctionsActionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StepFunctionsActionJsonUnmarshaller.java
@@ -43,8 +43,8 @@ public StepFunctionsAction unmarshall(JsonUnmarshallerContext context) throws Ex
                 stepFunctionsAction.setStateMachineName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("roleArn")) {
-                stepFunctionsAction.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                stepFunctionsAction.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StreamFileJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StreamFileJsonUnmarshaller.java
index 699a409128..5cdc49d5b1 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StreamFileJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StreamFileJsonUnmarshaller.java
@@ -36,10 +36,11 @@ public StreamFile unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("fileId")) {
-                streamFile.setFileId(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                streamFile.setFileId(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("s3Location")) {
-                streamFile.setS3Location(S3LocationJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                streamFile.setS3Location(S3LocationJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StreamInfoJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StreamInfoJsonUnmarshaller.java
index d849ab56d6..feaea7f014 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StreamInfoJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StreamInfoJsonUnmarshaller.java
@@ -36,23 +36,31 @@ public StreamInfo unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("streamId")) {
-                streamInfo.setStreamId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                streamInfo.setStreamId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("streamArn")) {
-                streamInfo.setStreamArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                streamInfo.setStreamArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("streamVersion")) {
-                streamInfo.setStreamVersion(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                streamInfo.setStreamVersion(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("description")) {
-                streamInfo.setDescription(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                streamInfo.setDescription(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("files")) {
                 streamInfo.setFiles(new ListUnmarshaller<StreamFile>(StreamFileJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("createdAt")) {
-                streamInfo.setCreatedAt(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                streamInfo.setCreatedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("lastUpdatedAt")) {
-                streamInfo.setLastUpdatedAt(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                streamInfo.setLastUpdatedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("roleArn")) {
-                streamInfo.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                streamInfo.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StreamJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StreamJsonUnmarshaller.java
index f98c6dbad9..74292a363b 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StreamJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StreamJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Stream unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("streamId")) {
-                stream.setStreamId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                stream.setStreamId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("fileId")) {
-                stream.setFileId(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                stream.setFileId(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StreamSummaryJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StreamSummaryJsonUnmarshaller.java
index b33dca50dd..1fd60e0a5b 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StreamSummaryJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StreamSummaryJsonUnmarshaller.java
@@ -36,16 +36,17 @@ public StreamSummary unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("streamId")) {
-                streamSummary.setStreamId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                streamSummary.setStreamId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("streamArn")) {
-                streamSummary
-                        .setStreamArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                streamSummary.setStreamArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("streamVersion")) {
-                streamSummary.setStreamVersion(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                streamSummary.setStreamVersion(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("description")) {
-                streamSummary.setDescription(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                streamSummary.setDescription(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TagJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TagJsonUnmarshaller.java
index 0f2079cfda..9d6d73146e 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TagJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TagJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Tag unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Key")) {
-                tag.setKey(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                tag.setKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Value")) {
-                tag.setValue(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                tag.setValue(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TaskStatisticsJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TaskStatisticsJsonUnmarshaller.java
index cbe2822a23..416e215bf6 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TaskStatisticsJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TaskStatisticsJsonUnmarshaller.java
@@ -37,26 +37,27 @@ public TaskStatistics unmarshall(JsonUnmarshallerContext context) throws Excepti
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("totalChecks")) {
-                taskStatistics.setTotalChecks(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                taskStatistics.setTotalChecks(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("inProgressChecks")) {
                 taskStatistics.setInProgressChecks(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("waitingForDataCollectionChecks")) {
                 taskStatistics.setWaitingForDataCollectionChecks(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("compliantChecks")) {
-                taskStatistics.setCompliantChecks(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                taskStatistics.setCompliantChecks(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("nonCompliantChecks")) {
                 taskStatistics.setNonCompliantChecks(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("failedChecks")) {
-                taskStatistics.setFailedChecks(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                taskStatistics.setFailedChecks(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("canceledChecks")) {
-                taskStatistics.setCanceledChecks(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                taskStatistics.setCanceledChecks(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TestAuthorizationResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TestAuthorizationResultJsonUnmarshaller.java
index 63638a8b79..90defe8946 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TestAuthorizationResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TestAuthorizationResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public TestAuthorizationResult unmarshall(JsonUnmarshallerContext context) throw
             String name = reader.nextName();
             if (name.equals("authResults")) {
                 testAuthorizationResult.setAuthResults(new ListUnmarshaller<AuthResult>(
-                        AuthResultJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AuthResultJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TestInvokeAuthorizerResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TestInvokeAuthorizerResultJsonUnmarshaller.java
index 8194a59986..9863c22cea 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TestInvokeAuthorizerResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TestInvokeAuthorizerResultJsonUnmarshaller.java
@@ -41,13 +41,17 @@ public TestInvokeAuthorizerResult unmarshall(JsonUnmarshallerContext context) th
                         .unmarshall(context));
             } else if (name.equals("policyDocuments")) {
                 testInvokeAuthorizerResult.setPolicyDocuments(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("refreshAfterInSeconds")) {
                 testInvokeAuthorizerResult.setRefreshAfterInSeconds(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("disconnectAfterInSeconds")) {
                 testInvokeAuthorizerResult.setDisconnectAfterInSeconds(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingAttributeJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingAttributeJsonUnmarshaller.java
index 0dd6ab3a05..03f5c0e108 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingAttributeJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingAttributeJsonUnmarshaller.java
@@ -40,16 +40,19 @@ public ThingAttribute unmarshall(JsonUnmarshallerContext context) throws Excepti
                 thingAttribute.setThingName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("thingTypeName")) {
-                thingAttribute.setThingTypeName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                thingAttribute.setThingTypeName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingArn")) {
-                thingAttribute
-                        .setThingArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                thingAttribute.setThingArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("attributes")) {
                 thingAttribute.setAttributes(new MapUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("version")) {
-                thingAttribute.setVersion(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                thingAttribute.setVersion(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingConnectivityJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingConnectivityJsonUnmarshaller.java
index bcb70e2c5f..ff76896bcf 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingConnectivityJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingConnectivityJsonUnmarshaller.java
@@ -37,11 +37,11 @@ public ThingConnectivity unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("connected")) {
-                thingConnectivity.setConnected(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                thingConnectivity.setConnected(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("timestamp")) {
-                thingConnectivity.setTimestamp(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                thingConnectivity.setTimestamp(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingDocumentJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingDocumentJsonUnmarshaller.java
index f05a1a6146..9df1a72fcf 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingDocumentJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingDocumentJsonUnmarshaller.java
@@ -36,21 +36,27 @@ public ThingDocument unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("thingName")) {
-                thingDocument
-                        .setThingName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                thingDocument.setThingName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingId")) {
-                thingDocument.setThingId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                thingDocument.setThingId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingTypeName")) {
-                thingDocument.setThingTypeName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                thingDocument.setThingTypeName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingGroupNames")) {
                 thingDocument.setThingGroupNames(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("attributes")) {
                 thingDocument.setAttributes(new MapUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("shadow")) {
-                thingDocument.setShadow(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                thingDocument.setShadow(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("connectivity")) {
                 thingDocument.setConnectivity(ThingConnectivityJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingGroupDocumentJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingGroupDocumentJsonUnmarshaller.java
index bb49129a73..670966dccc 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingGroupDocumentJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingGroupDocumentJsonUnmarshaller.java
@@ -40,17 +40,21 @@ public ThingGroupDocument unmarshall(JsonUnmarshallerContext context) throws Exc
                 thingGroupDocument.setThingGroupName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("thingGroupId")) {
-                thingGroupDocument.setThingGroupId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                thingGroupDocument.setThingGroupId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingGroupDescription")) {
                 thingGroupDocument.setThingGroupDescription(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("attributes")) {
                 thingGroupDocument.setAttributes(new MapUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("parentGroupNames")) {
                 thingGroupDocument.setParentGroupNames(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingGroupIndexingConfigurationJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingGroupIndexingConfigurationJsonUnmarshaller.java
index a611b35ab4..28f966def1 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingGroupIndexingConfigurationJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingGroupIndexingConfigurationJsonUnmarshaller.java
@@ -39,7 +39,8 @@ public ThingGroupIndexingConfiguration unmarshall(JsonUnmarshallerContext contex
             String name = reader.nextName();
             if (name.equals("thingGroupIndexingMode")) {
                 thingGroupIndexingConfiguration.setThingGroupIndexingMode(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingGroupMetadataJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingGroupMetadataJsonUnmarshaller.java
index f1806fb822..86888ddd0d 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingGroupMetadataJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingGroupMetadataJsonUnmarshaller.java
@@ -42,10 +42,12 @@ public ThingGroupMetadata unmarshall(JsonUnmarshallerContext context) throws Exc
             } else if (name.equals("rootToParentThingGroups")) {
                 thingGroupMetadata
                         .setRootToParentThingGroups(new ListUnmarshaller<GroupNameAndArn>(
-                                GroupNameAndArnJsonUnmarshaller.getInstance()).unmarshall(context));
+                                GroupNameAndArnJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("creationDate")) {
-                thingGroupMetadata.setCreationDate(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                thingGroupMetadata.setCreationDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingGroupPropertiesJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingGroupPropertiesJsonUnmarshaller.java
index 639008948a..e8e5312556 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingGroupPropertiesJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingGroupPropertiesJsonUnmarshaller.java
@@ -41,7 +41,8 @@ public ThingGroupProperties unmarshall(JsonUnmarshallerContext context) throws E
                         .unmarshall(context));
             } else if (name.equals("attributePayload")) {
                 thingGroupProperties.setAttributePayload(AttributePayloadJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingIndexingConfigurationJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingIndexingConfigurationJsonUnmarshaller.java
index 157e2aab18..b2a356df91 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingIndexingConfigurationJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingIndexingConfigurationJsonUnmarshaller.java
@@ -38,10 +38,12 @@ public ThingIndexingConfiguration unmarshall(JsonUnmarshallerContext context) th
             String name = reader.nextName();
             if (name.equals("thingIndexingMode")) {
                 thingIndexingConfiguration.setThingIndexingMode(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingConnectivityIndexingMode")) {
                 thingIndexingConfiguration.setThingConnectivityIndexingMode(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingTypeDefinitionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingTypeDefinitionJsonUnmarshaller.java
index b507dca099..1156ae48be 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingTypeDefinitionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingTypeDefinitionJsonUnmarshaller.java
@@ -44,10 +44,12 @@ public ThingTypeDefinition unmarshall(JsonUnmarshallerContext context) throws Ex
                         .unmarshall(context));
             } else if (name.equals("thingTypeProperties")) {
                 thingTypeDefinition.setThingTypeProperties(ThingTypePropertiesJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingTypeMetadata")) {
                 thingTypeDefinition.setThingTypeMetadata(ThingTypeMetadataJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingTypeMetadataJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingTypeMetadataJsonUnmarshaller.java
index e881eef5ff..687a9c9e2a 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingTypeMetadataJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingTypeMetadataJsonUnmarshaller.java
@@ -37,14 +37,14 @@ public ThingTypeMetadata unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("deprecated")) {
-                thingTypeMetadata.setDeprecated(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                thingTypeMetadata.setDeprecated(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("deprecationDate")) {
-                thingTypeMetadata.setDeprecationDate(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                thingTypeMetadata.setDeprecationDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("creationDate")) {
-                thingTypeMetadata.setCreationDate(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                thingTypeMetadata.setCreationDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingTypePropertiesJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingTypePropertiesJsonUnmarshaller.java
index 587d0a640d..0e6089bdd0 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingTypePropertiesJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThingTypePropertiesJsonUnmarshaller.java
@@ -41,7 +41,9 @@ public ThingTypeProperties unmarshall(JsonUnmarshallerContext context) throws Ex
                         .unmarshall(context));
             } else if (name.equals("searchableAttributes")) {
                 thingTypeProperties.setSearchableAttributes(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThrottlingExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThrottlingExceptionUnmarshaller.java
index fe07d7e2b8..554c8006ac 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThrottlingExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ThrottlingExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.ThrottlingException;
 
 public class ThrottlingExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ThrottlingException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ThrottlingException throttlingException = new ThrottlingException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                throttlingException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return throttlingException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TopicRuleJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TopicRuleJsonUnmarshaller.java
index 54eb4b43f3..533557a551 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TopicRuleJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TopicRuleJsonUnmarshaller.java
@@ -36,24 +36,31 @@ public TopicRule unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("ruleName")) {
-                topicRule.setRuleName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                topicRule.setRuleName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("sql")) {
-                topicRule.setSql(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                topicRule.setSql(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("description")) {
-                topicRule.setDescription(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                topicRule.setDescription(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("createdAt")) {
-                topicRule.setCreatedAt(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                topicRule.setCreatedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("actions")) {
                 topicRule.setActions(new ListUnmarshaller<Action>(ActionJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ruleDisabled")) {
-                topicRule
-                        .setRuleDisabled(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                topicRule.setRuleDisabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("awsIotSqlVersion")) {
-                topicRule.setAwsIotSqlVersion(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                topicRule.setAwsIotSqlVersion(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("errorAction")) {
-                topicRule.setErrorAction(ActionJsonUnmarshaller.getInstance().unmarshall(context));
+                topicRule.setErrorAction(ActionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TopicRuleListItemJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TopicRuleListItemJsonUnmarshaller.java
index 9a138e0ee6..05df2ed104 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TopicRuleListItemJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TopicRuleListItemJsonUnmarshaller.java
@@ -37,20 +37,20 @@ public TopicRuleListItem unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("ruleArn")) {
-                topicRuleListItem.setRuleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                topicRuleListItem.setRuleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ruleName")) {
-                topicRuleListItem.setRuleName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                topicRuleListItem.setRuleName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("topicPattern")) {
-                topicRuleListItem.setTopicPattern(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                topicRuleListItem.setTopicPattern(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("createdAt")) {
-                topicRuleListItem.setCreatedAt(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                topicRuleListItem.setCreatedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ruleDisabled")) {
-                topicRuleListItem.setRuleDisabled(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                topicRuleListItem.setRuleDisabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TopicRulePayloadJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TopicRulePayloadJsonUnmarshaller.java
index d85a076bdd..41e25da142 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TopicRulePayloadJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TopicRulePayloadJsonUnmarshaller.java
@@ -37,22 +37,25 @@ public TopicRulePayload unmarshall(JsonUnmarshallerContext context) throws Excep
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("sql")) {
-                topicRulePayload.setSql(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                topicRulePayload.setSql(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("description")) {
-                topicRulePayload.setDescription(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                topicRulePayload.setDescription(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("actions")) {
                 topicRulePayload.setActions(new ListUnmarshaller<Action>(ActionJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ruleDisabled")) {
-                topicRulePayload.setRuleDisabled(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                topicRulePayload.setRuleDisabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("awsIotSqlVersion")) {
                 topicRulePayload.setAwsIotSqlVersion(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("errorAction")) {
-                topicRulePayload.setErrorAction(ActionJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                topicRulePayload.setErrorAction(ActionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TransferAlreadyCompletedExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TransferAlreadyCompletedExceptionUnmarshaller.java
index 579e086aaa..34cca2b312 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TransferAlreadyCompletedExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TransferAlreadyCompletedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.TransferAlreadyCompletedException;
 
 public class TransferAlreadyCompletedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public TransferAlreadyCompletedException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        TransferAlreadyCompletedException transferAlreadyCompletedException = new TransferAlreadyCompletedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                transferAlreadyCompletedException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return transferAlreadyCompletedException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TransferCertificateResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TransferCertificateResultJsonUnmarshaller.java
index a131cea950..8135dd1088 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TransferCertificateResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TransferCertificateResultJsonUnmarshaller.java
@@ -35,7 +35,8 @@ public TransferCertificateResult unmarshall(JsonUnmarshallerContext context) thr
             String name = reader.nextName();
             if (name.equals("transferredCertificateArn")) {
                 transferCertificateResult.setTransferredCertificateArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TransferConflictExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TransferConflictExceptionUnmarshaller.java
index 49e3070279..a797055517 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TransferConflictExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TransferConflictExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.TransferConflictException;
 
 public class TransferConflictExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public TransferConflictException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        TransferConflictException transferConflictException = new TransferConflictException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                transferConflictException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return transferConflictException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TransferDataJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TransferDataJsonUnmarshaller.java
index c784a4e1ac..6e8cfd52c8 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TransferDataJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TransferDataJsonUnmarshaller.java
@@ -36,18 +36,20 @@ public TransferData unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("transferMessage")) {
-                transferData.setTransferMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                transferData.setTransferMessage(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("rejectReason")) {
-                transferData.setRejectReason(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                transferData.setRejectReason(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("transferDate")) {
-                transferData
-                        .setTransferDate(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                transferData.setTransferDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("acceptDate")) {
-                transferData.setAcceptDate(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                transferData.setAcceptDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("rejectDate")) {
-                transferData.setRejectDate(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                transferData.setRejectDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UnauthorizedExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UnauthorizedExceptionUnmarshaller.java
index bf6415c3ff..6e1da044c4 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UnauthorizedExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UnauthorizedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.UnauthorizedException;
 
 public class UnauthorizedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public UnauthorizedException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        UnauthorizedException unauthorizedException = new UnauthorizedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                unauthorizedException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return unauthorizedException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateBillingGroupResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateBillingGroupResultJsonUnmarshaller.java
index 59d6d617b0..ec591bb51d 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateBillingGroupResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateBillingGroupResultJsonUnmarshaller.java
@@ -34,8 +34,8 @@ public UpdateBillingGroupResult unmarshall(JsonUnmarshallerContext context) thro
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("version")) {
-                updateBillingGroupResult.setVersion(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                updateBillingGroupResult.setVersion(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateRoleAliasResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateRoleAliasResultJsonUnmarshaller.java
index 34a0329b89..b0f5c02e9b 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateRoleAliasResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateRoleAliasResultJsonUnmarshaller.java
@@ -34,8 +34,8 @@ public UpdateRoleAliasResult unmarshall(JsonUnmarshallerContext context) throws
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("roleAlias")) {
-                updateRoleAliasResult.setRoleAlias(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                updateRoleAliasResult.setRoleAlias(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("roleAliasArn")) {
                 updateRoleAliasResult.setRoleAliasArn(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateScheduledAuditResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateScheduledAuditResultJsonUnmarshaller.java
index 006d267f9e..374b5a26cc 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateScheduledAuditResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateScheduledAuditResultJsonUnmarshaller.java
@@ -35,7 +35,8 @@ public UpdateScheduledAuditResult unmarshall(JsonUnmarshallerContext context) th
             String name = reader.nextName();
             if (name.equals("scheduledAuditArn")) {
                 updateScheduledAuditResult.setScheduledAuditArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateSecurityProfileResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateSecurityProfileResultJsonUnmarshaller.java
index e3296d2405..e9446f3dde 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateSecurityProfileResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateSecurityProfileResultJsonUnmarshaller.java
@@ -35,19 +35,26 @@ public UpdateSecurityProfileResult unmarshall(JsonUnmarshallerContext context) t
             String name = reader.nextName();
             if (name.equals("securityProfileName")) {
                 updateSecurityProfileResult.setSecurityProfileName(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("securityProfileArn")) {
                 updateSecurityProfileResult.setSecurityProfileArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("securityProfileDescription")) {
                 updateSecurityProfileResult.setSecurityProfileDescription(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("behaviors")) {
                 updateSecurityProfileResult.setBehaviors(new ListUnmarshaller<Behavior>(
-                        BehaviorJsonUnmarshaller.getInstance()).unmarshall(context));
+                        BehaviorJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("alertTargets")) {
                 updateSecurityProfileResult.setAlertTargets(new MapUnmarshaller<AlertTarget>(
-                        AlertTargetJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AlertTargetJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("version")) {
                 updateSecurityProfileResult.setVersion(LongJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateStreamResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateStreamResultJsonUnmarshaller.java
index 7e194367e0..64b819c984 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateStreamResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateStreamResultJsonUnmarshaller.java
@@ -34,14 +34,14 @@ public UpdateStreamResult unmarshall(JsonUnmarshallerContext context) throws Exc
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("streamId")) {
-                updateStreamResult.setStreamId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                updateStreamResult.setStreamId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("streamArn")) {
-                updateStreamResult.setStreamArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                updateStreamResult.setStreamArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("description")) {
-                updateStreamResult.setDescription(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                updateStreamResult.setDescription(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("streamVersion")) {
                 updateStreamResult.setStreamVersion(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateThingGroupResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateThingGroupResultJsonUnmarshaller.java
index 740a434502..41ec80f1d5 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateThingGroupResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateThingGroupResultJsonUnmarshaller.java
@@ -34,8 +34,8 @@ public UpdateThingGroupResult unmarshall(JsonUnmarshallerContext context) throws
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("version")) {
-                updateThingGroupResult.setVersion(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                updateThingGroupResult.setVersion(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ValidateSecurityProfileBehaviorsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ValidateSecurityProfileBehaviorsResultJsonUnmarshaller.java
index 3b952360d9..ca06d13486 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ValidateSecurityProfileBehaviorsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ValidateSecurityProfileBehaviorsResultJsonUnmarshaller.java
@@ -36,11 +36,14 @@ public ValidateSecurityProfileBehaviorsResult unmarshall(JsonUnmarshallerContext
             String name = reader.nextName();
             if (name.equals("valid")) {
                 validateSecurityProfileBehaviorsResult.setValid(BooleanJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("validationErrors")) {
                 validateSecurityProfileBehaviorsResult
                         .setValidationErrors(new ListUnmarshaller<ValidationError>(
-                                ValidationErrorJsonUnmarshaller.getInstance()).unmarshall(context));
+                                ValidationErrorJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ValidationErrorJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ValidationErrorJsonUnmarshaller.java
index 23d4134e72..b2144bfee6 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ValidationErrorJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ValidationErrorJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public ValidationError unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("errorMessage")) {
-                validationError.setErrorMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                validationError.setErrorMessage(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/VersionConflictExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/VersionConflictExceptionUnmarshaller.java
index a1545fa223..1eb536ad40 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/VersionConflictExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/VersionConflictExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.VersionConflictException;
 
 public class VersionConflictExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public VersionConflictException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        VersionConflictException versionConflictException = new VersionConflictException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                versionConflictException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return versionConflictException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/VersionsLimitExceededExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/VersionsLimitExceededExceptionUnmarshaller.java
index 21298a1ea5..25d2f787e8 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/VersionsLimitExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/VersionsLimitExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iot.model.VersionsLimitExceededException;
 
 public class VersionsLimitExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public VersionsLimitExceededException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        VersionsLimitExceededException versionsLimitExceededException = new VersionsLimitExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                versionsLimitExceededException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return versionsLimitExceededException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ViolationEventJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ViolationEventJsonUnmarshaller.java
index e832867195..e28d794e81 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ViolationEventJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ViolationEventJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public ViolationEvent unmarshall(JsonUnmarshallerContext context) throws Excepti
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("violationId")) {
-                violationEvent.setViolationId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                violationEvent.setViolationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("thingName")) {
                 violationEvent.setThingName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -46,17 +46,17 @@ public ViolationEvent unmarshall(JsonUnmarshallerContext context) throws Excepti
                 violationEvent.setSecurityProfileName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("behavior")) {
-                violationEvent.setBehavior(BehaviorJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                violationEvent.setBehavior(BehaviorJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("metricValue")) {
-                violationEvent.setMetricValue(MetricValueJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                violationEvent.setMetricValue(MetricValueJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("violationEventType")) {
                 violationEvent.setViolationEventType(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("violationEventTime")) {
-                violationEvent.setViolationEventTime(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                violationEvent.setViolationEventTime(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/ConflictExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/ConflictExceptionUnmarshaller.java
index 2cffea58c4..f12e291f67 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/ConflictExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/ConflictExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iotdata.model.ConflictException;
 
 public class ConflictExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ConflictException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ConflictException conflictException = new ConflictException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                conflictException.setErrorMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return conflictException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/InternalFailureExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/InternalFailureExceptionUnmarshaller.java
index 8cf6f8a210..cb29c99162 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/InternalFailureExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/InternalFailureExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iotdata.model.InternalFailureException;
 
 public class InternalFailureExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InternalFailureException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InternalFailureException internalFailureException = new InternalFailureException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                internalFailureException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return internalFailureException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/InvalidRequestExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/InvalidRequestExceptionUnmarshaller.java
index eff1d5b1b3..a8bbc4c66e 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/InvalidRequestExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/InvalidRequestExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iotdata.model.InvalidRequestException;
 
 public class InvalidRequestExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidRequestException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidRequestException invalidRequestException = new InvalidRequestException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidRequestException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidRequestException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/MethodNotAllowedExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/MethodNotAllowedExceptionUnmarshaller.java
index ffc4640c23..0b734614f1 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/MethodNotAllowedExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/MethodNotAllowedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iotdata.model.MethodNotAllowedException;
 
 public class MethodNotAllowedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public MethodNotAllowedException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        MethodNotAllowedException methodNotAllowedException = new MethodNotAllowedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                methodNotAllowedException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return methodNotAllowedException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/RequestEntityTooLargeExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/RequestEntityTooLargeExceptionUnmarshaller.java
index 9175ac892c..b0f18b3715 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/RequestEntityTooLargeExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/RequestEntityTooLargeExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iotdata.model.RequestEntityTooLargeException;
 
 public class RequestEntityTooLargeExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public RequestEntityTooLargeException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        RequestEntityTooLargeException requestEntityTooLargeException = new RequestEntityTooLargeException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                requestEntityTooLargeException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return requestEntityTooLargeException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/ResourceNotFoundExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/ResourceNotFoundExceptionUnmarshaller.java
index 93be39fd19..52084810ba 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/ResourceNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/ResourceNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iotdata.model.ResourceNotFoundException;
 
 public class ResourceNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceNotFoundException resourceNotFoundException = new ResourceNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/ServiceUnavailableExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/ServiceUnavailableExceptionUnmarshaller.java
index 5234949978..96bc9aaf89 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/ServiceUnavailableExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/ServiceUnavailableExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iotdata.model.ServiceUnavailableException;
 
 public class ServiceUnavailableExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ServiceUnavailableException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ServiceUnavailableException serviceUnavailableException = new ServiceUnavailableException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                serviceUnavailableException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return serviceUnavailableException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/ThrottlingExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/ThrottlingExceptionUnmarshaller.java
index ab1d678341..77f5d87b1e 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/ThrottlingExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/ThrottlingExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iotdata.model.ThrottlingException;
 
 public class ThrottlingExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ThrottlingException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ThrottlingException throttlingException = new ThrottlingException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                throttlingException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return throttlingException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/UnauthorizedExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/UnauthorizedExceptionUnmarshaller.java
index e23af5fa15..5ba273ad48 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/UnauthorizedExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/UnauthorizedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iotdata.model.UnauthorizedException;
 
 public class UnauthorizedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public UnauthorizedException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        UnauthorizedException unauthorizedException = new UnauthorizedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                unauthorizedException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return unauthorizedException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/UnsupportedDocumentEncodingExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/UnsupportedDocumentEncodingExceptionUnmarshaller.java
index 18b70afd90..8aec726598 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/UnsupportedDocumentEncodingExceptionUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iotdata/model/transform/UnsupportedDocumentEncodingExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.iotdata.model.UnsupportedDocumentEncodingException;
 
 public class UnsupportedDocumentEncodingExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public UnsupportedDocumentEncodingException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        UnsupportedDocumentEncodingException unsupportedDocumentEncodingException = new UnsupportedDocumentEncodingException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                unsupportedDocumentEncodingException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return unsupportedDocumentEncodingException;
-    }
 }
diff --git a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotClientIdHelperTest.java b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotClientIdHelperTest.java
new file mode 100644
index 0000000000..d4b53cd53f
--- /dev/null
+++ b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotClientIdHelperTest.java
@@ -0,0 +1,76 @@
+
+package com.amazonaws.mobileconnectors.iot;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+
+import com.amazonaws.util.StringUtils;
+
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+
+import java.io.File;
+import java.io.FileOutputStream;
+
+public class AWSIotClientIdHelperTest {
+
+    private static final String TEST_DIRECTORY = "./";
+    private static final String PERSISTENCE_FILENAME = "CLIENT_ID";
+
+    @Before
+    public void setUp() throws Exception {
+        // remove any existing file, clear the static class variable
+        File persistenceFile = new File(TEST_DIRECTORY, PERSISTENCE_FILENAME);
+        if (persistenceFile.exists()) {
+            persistenceFile.delete();
+        }
+        AWSIotClientIdHelper.reset();
+    }
+
+    @After
+    public void tearDown() throws Exception {
+        // remove any existing file
+        File persistenceFile = new File(TEST_DIRECTORY, PERSISTENCE_FILENAME);
+        if (persistenceFile.exists()) {
+            persistenceFile.delete();
+        }
+    }
+
+    @Test
+    public void testGenerateClientId() throws Exception {
+        String testId1 = AWSIotClientIdHelper.generateClientId();
+        String testId2 = AWSIotClientIdHelper.generateClientId();
+        String testId3 = AWSIotClientIdHelper.generateClientId();
+        // UUIDs are 36 character strings
+        assertEquals(36, testId1.length());
+        assertEquals(36, testId2.length());
+        assertEquals(36, testId3.length());
+        // generate gets a new ID each call
+        assertFalse(testId1.equals(testId2));
+        assertFalse(testId2.equals(testId3));
+        assertFalse(testId1.equals(testId3));
+    }
+
+    @Test
+    public void testGetPersistedClientId() throws Exception {
+        String testId = AWSIotClientIdHelper.getPersistedClientId(TEST_DIRECTORY);
+        // UUIDs are 36 character strings
+        assertEquals(36, testId.length());
+        // ensure same ID is returned 2nd time
+        assertEquals(testId, AWSIotClientIdHelper.getPersistedClientId(TEST_DIRECTORY));
+    }
+
+    @Test
+    public void testGetPersistedClientIdFilePresent() throws Exception {
+        File persistenceFile = new File(TEST_DIRECTORY, PERSISTENCE_FILENAME);
+        FileOutputStream out = new FileOutputStream(persistenceFile);
+        out.write("this-is-a-36-character-string-4-test".getBytes(StringUtils.UTF8));
+        out.close();
+        String testId = AWSIotClientIdHelper.getPersistedClientId(TEST_DIRECTORY);
+        // UUIDs are 36 character strings
+        assertEquals(36, testId.length());
+        // ensure same ID as create above is returned
+        assertEquals("this-is-a-36-character-string-4-test", testId);
+    }
+}
diff --git a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttLastWillAndTestamentTest.java b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttLastWillAndTestamentTest.java
new file mode 100644
index 0000000000..60add4cedb
--- /dev/null
+++ b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttLastWillAndTestamentTest.java
@@ -0,0 +1,43 @@
+package com.amazonaws.mobileconnectors.iot;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+public class AWSIotMqttLastWillAndTestamentTest {
+
+    @Test
+    public void testTopic() throws Exception {
+        AWSIotMqttLastWillAndTestament lwt = new AWSIotMqttLastWillAndTestament("test/lwt", "bye", AWSIotMqttQos.QOS0);
+        assertEquals("test/lwt", lwt.getTopic());
+    }
+
+    @Test
+    public void testMessage() throws Exception {
+        AWSIotMqttLastWillAndTestament lwt = new AWSIotMqttLastWillAndTestament("test/lwt", "bye", AWSIotMqttQos.QOS0);
+        assertEquals("bye", lwt.getMessage());
+    }
+
+    @Test
+    public void testQos() throws Exception {
+        AWSIotMqttLastWillAndTestament lwt = new AWSIotMqttLastWillAndTestament("test/lwt", "bye", AWSIotMqttQos.QOS0);
+        assertEquals(AWSIotMqttQos.QOS0, lwt.getQos());
+    }
+
+    @Test(expected=IllegalArgumentException.class)
+    public void testCreateLwtWithNullTopic() throws Exception {
+        AWSIotMqttLastWillAndTestament lwt = new AWSIotMqttLastWillAndTestament(null, "bye", AWSIotMqttQos.QOS0);
+    }
+    @Test(expected=IllegalArgumentException.class)
+    public void testCreateLwtWithEmptyTopic() throws Exception {
+        AWSIotMqttLastWillAndTestament lwt = new AWSIotMqttLastWillAndTestament("", "bye", AWSIotMqttQos.QOS0);
+    }
+    @Test(expected=IllegalArgumentException.class)
+    public void testCreateLwtWithNullMessage() throws Exception {
+        AWSIotMqttLastWillAndTestament lwt = new AWSIotMqttLastWillAndTestament("test/lwt", null, AWSIotMqttQos.QOS0);
+    }
+    @Test(expected=IllegalArgumentException.class)
+    public void testCreateLwtWithNullQos() throws Exception {
+        AWSIotMqttLastWillAndTestament lwt = new AWSIotMqttLastWillAndTestament("test/lwt", "bye", null);
+    }
+}
diff --git a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManagerTest.java b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManagerTest.java
new file mode 100644
index 0000000000..0829392705
--- /dev/null
+++ b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManagerTest.java
@@ -0,0 +1,2955 @@
+
+package com.amazonaws.mobileconnectors.iot;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.auth.AWSCredentials;
+import com.amazonaws.auth.AWSCredentialsProvider;
+import com.amazonaws.auth.BasicAWSCredentials;
+import com.amazonaws.regions.Region;
+import com.amazonaws.regions.Regions;
+import com.amazonaws.util.StringUtils;
+
+import org.eclipse.paho.client.mqttv3.MqttException;
+import org.eclipse.paho.client.mqttv3.MqttMessage;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.Robolectric;
+import org.robolectric.RobolectricTestRunner;
+import org.robolectric.annotation.Config;
+
+import java.io.File;
+import java.security.KeyPair;
+import java.security.KeyStore;
+import java.util.ArrayList;
+import java.util.concurrent.ConcurrentLinkedQueue;
+
+@RunWith(RobolectricTestRunner.class)
+@Config(manifest = Config.NONE, emulateSdk = 16, reportSdk = 16)
+public class AWSIotMqttManagerTest {
+
+    // This certificate is an invalid (to AWS IoT) certificate for unit testing only.
+    private final static String TestCert = "-----BEGIN CERTIFICATE-----\n" +
+            "MIIDlTCCAn2gAwIBAgIVAKuR4L6GajQRv1DzXlUFigMoiwzsMA0GCSqGSIb3DQEB\n" +
+            "CwUAME0xSzBJBgNVBAsMQkFtYXpvbiBXZWIgU2VydmljZXMgTz1BbWF6b24uY29t\n" +
+            "IEluYy4gTD1TZWF0dGxlIFNUPVdhc2hpbmd0b24gQz1VUzAeFw0xNTA5MTUwMDEz\n" +
+            "MjhaFw00OTEyMzEyMzU5NTlaMFkxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJXQTEQ\n" +
+            "MA4GA1UEBxMHU2VhdHRsZTEPMA0GA1UEChMGQW1hem9uMQwwCgYDVQQLEwNBV1Mx\n" +
+            "DDAKBgNVBAMTA1NESzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALrx\n" +
+            "n1ZGjBDdasdmuJh8F/KxhMSB/u7f8olGaoPtkvFHkzCf3sXqoHVxzYITzWH8UlmM\n" +
+            "hNJ0CaRfcT/Dmi0PDxPrPQLR1/MjV9WpHTLfI2kA+PI+d4LnnlYQYnQc9wgZIX2c\n" +
+            "+D0mA12By8BRduwM3rDAULmwjjfFX/MLLkDDng+mEIMjXOZnWjMJ3dorSzajVP2C\n" +
+            "bWt1JMRGoSjY2fQVBc2JzU+7y9s9fxMO5329Hne1E8bNVZd+rHJKlJhvIWJCAoya\n" +
+            "NnF4whXMp+UHGPJdhHQCnSPbX5r2c2UdDL/1bftNlX6grCmivuIv6qw+dtA4V7pc\n" +
+            "lsMSEt9zFrVJ6VkZXbUCAwEAAaNgMF4wHwYDVR0jBBgwFoAULXQSP9o80neirjAW\n" +
+            "SlF+yZWjLh0wHQYDVR0OBBYEFCDoMMxiSPyy4D6a5qhg+6FXZtMtMAwGA1UdEwEB\n" +
+            "/wQCMAAwDgYDVR0PAQH/BAQDAgeAMA0GCSqGSIb3DQEBCwUAA4IBAQAtlG5ytjMN\n" +
+            "c95dlafQVhPoAKEJ0JkDYl3ZmbNYHXgTQfG08a8zFQLLECODiiO/5HyNaAI3Pzc3\n" +
+            "M580RijF/D23XUHLCvVxaeZgQnJbs+xmHPIeFxCiGfBXBTET3IZApXW2V92dcZf3\n" +
+            "Pccbfemdl7t7KycuBNszbTsCZygg5sq1NTCF0ZkSGuJfmbjO9YBY2bV8H66pNdCq\n" +
+            "72nhlD7w3fTcfpo8rmz7CzNTVg9bGILUnr7WiaC3nCxsM1EiPH/JRGSKrbA2/96B\n" +
+            "7OWv9idOJbp/fKdub3lqzWwPtMwLWAyM/sevEqQbWOvH3sfPafYYp3iwAQmFdCJG\n" +
+            "0zaDUnQHDFV8\n" +
+            "-----END CERTIFICATE-----";
+
+    private static final String CERT_ID = "unittest";
+    private static final String KEYSTORE_PATH = "./";
+    private static final String KEYSTORE_NAME = "unit_test_keystore";
+    private static final String KEYSTORE_PASSWORD = "test";
+    private static final String TEST_ENDPOINT = "ABCDEFG.iot.us-east-1.amazonaws.com";
+    private static final String TEST_ENDPOINT_PREFIX = "ABCDEFG";
+
+    @Before
+    public void setUp() throws Exception {
+        // generate keys
+        KeyPair testKP = AWSIotKeystoreHelper.generatePrivateAndPublicKeys();
+
+        // save in keystore
+        AWSIotKeystoreHelper.saveCertificateAndPrivateKey(CERT_ID, TestCert, testKP.getPrivate(),
+                KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+    }
+
+    @After
+    public void tearDown() throws Exception {
+        File keystoreFile = new File(KEYSTORE_PATH, KEYSTORE_NAME);
+        if (keystoreFile.exists()) {
+            keystoreFile.delete();
+        }
+    }
+
+    @Test
+    public void testCreateClientWithPrefix() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+
+        assertEquals(true, testClient.isAutoReconnect());
+        assertEquals(4, testClient.getReconnectTimeout());
+        assertEquals(4, testClient.getMinReconnectRetryTime());
+        assertEquals(64, testClient.getMaxReconnectRetryTime());
+        assertEquals(10, testClient.getMaxAutoReconnectAttempts());
+        assertEquals(300, testClient.getKeepAlive());
+        assertEquals(10, testClient.getConnectionStabilityTime());
+        assertTrue(testClient.isOfflinePublishQueueEnabled());
+        assertEquals(100L, (long)testClient.getOfflinePublishQueueBound());
+        assertEquals(TEST_ENDPOINT_PREFIX, testClient.getAccountEndpointPrefix());
+        assertEquals(MqttManagerConnectionState.Disconnected, testClient.getConnectionState());
+
+
+        testClient.setAutoReconnect(false);
+        testClient.setReconnectRetryLimits(64, 128);
+        testClient.setMaxAutoReconnectAttepts(5);
+        testClient.setKeepAlive(20);
+        testClient.setConnectionStabilityTime(25);
+        testClient.setOfflinePublishQueueEnabled(false);
+        testClient.setOfflinePublishQueueBound(50);
+
+        AWSIotMqttLastWillAndTestament lwt = new AWSIotMqttLastWillAndTestament("test/lwt", "bye",
+                AWSIotMqttQos.QOS0);
+        testClient.setMqttLastWillAndTestament(lwt);
+
+        assertEquals(testClient.isAutoReconnect(), false);
+        assertEquals(64, testClient.getReconnectTimeout());
+        assertEquals(64, testClient.getMinReconnectRetryTime());
+        assertEquals(128, testClient.getMaxReconnectRetryTime());
+        assertEquals(5, testClient.getMaxAutoReconnectAttempts());
+        assertEquals(20, testClient.getKeepAlive());
+        assertEquals(25, testClient.getConnectionStabilityTime());
+        assertFalse(testClient.isOfflinePublishQueueEnabled());
+        assertEquals(50L, (long)testClient.getOfflinePublishQueueBound());
+
+        assertEquals("test/lwt", testClient.getMqttLastWillAndTestament().getTopic());
+        assertEquals("bye", testClient.getMqttLastWillAndTestament().getMessage());
+        assertEquals(AWSIotMqttQos.QOS0, testClient.getMqttLastWillAndTestament().getQos());
+    }
+
+    @Test
+    public void testCreateClientWithEndpoint() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                "ABCDEFG.iot.us-east-1.amazonaws.com");
+
+        assertEquals(true, testClient.isAutoReconnect());
+        assertEquals(4, testClient.getReconnectTimeout());
+        assertEquals(4, testClient.getMinReconnectRetryTime());
+        assertEquals(64, testClient.getMaxReconnectRetryTime());
+        assertEquals(10, testClient.getMaxAutoReconnectAttempts());
+        assertEquals(300, testClient.getKeepAlive());
+        assertEquals(10, testClient.getConnectionStabilityTime());
+        assertTrue(testClient.isOfflinePublishQueueEnabled());
+        assertEquals(100L, (long)testClient.getOfflinePublishQueueBound());
+        assertEquals(Region.getRegion(Regions.US_EAST_1), testClient.getRegion());
+        assertEquals(MqttManagerConnectionState.Disconnected, testClient.getConnectionState());
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testCreateClientNullRegion() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client", null, TEST_ENDPOINT_PREFIX);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testCreateClientNullClientId() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager(null,
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testCreateClientEmptyClientId() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testCreateClientNullEndpointPrefix() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), null);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testIllegalReconnectTimes() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), null);
+        assertEquals(64, testClient.getMaxReconnectRetryTime());
+        testClient.setReconnectRetryLimits(16, 15);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testCreateClientWithEndpointNullClientId() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager(null, "ABCDEFG.iot.us-east-1.amazonaws.com");
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testCreateClientWithEndpointEmptyClientId() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("", "ABCDEFG.iot.us-east-1.amazonaws.com");
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testCreateClientWithEndpointBadEndpoint1() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client", "ABCDEFG.us-east-1.amazonaws.com");
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testCreateClientWithEndpointBadEndpointRegion() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client", "ABCDEFG.us-east-9.amazonaws.com");
+    }
+
+    public void testLegalReconnectTimeEqual() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), null);
+        assertEquals(4, testClient.getMaxReconnectRetryTime());
+        testClient.setReconnectRetryLimits(16, 16);
+        assertEquals(16, testClient.getMinReconnectRetryTime());
+        assertEquals(16, testClient.getMaxReconnectRetryTime());
+    }
+
+    @Test
+    public void testConnect() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        assertEquals(1, mockClient.connectCalls);
+        assertTrue(mockClient.mostRecentOptions.isCleanSession());
+        assertEquals(300, mockClient.mostRecentOptions.getKeepAliveInterval());
+        assertEquals(2, csb.statuses.size());
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, csb.statuses.get(0));
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, csb.statuses.get(1));
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+    }
+
+    @Test
+    public void testConnectWebSocket() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client", Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        testClient.connect(new TestAwsCredentialsProvider(), csb);
+        Thread.sleep(500);  // connect is async, will return before callback is actually set in connect()
+        mockClient.mockConnectSuccess();
+
+        assertEquals(1, mockClient.connectCalls);
+        assertTrue(mockClient.mostRecentOptions.isCleanSession());
+        assertEquals(300, mockClient.mostRecentOptions.getKeepAliveInterval());
+        assertEquals(2, csb.statuses.size());
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, csb.statuses.get(0));
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, csb.statuses.get(1));
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+    }
+
+    @Test
+    public void testConnectWithLwt() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        AWSIotMqttLastWillAndTestament lwt = new AWSIotMqttLastWillAndTestament("test/lwt", "bye",
+                AWSIotMqttQos.QOS0);
+        testClient.setMqttLastWillAndTestament(lwt);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        assertEquals(1, mockClient.connectCalls);
+        assertTrue(mockClient.mostRecentOptions.isCleanSession());
+        assertEquals(300, mockClient.mostRecentOptions.getKeepAliveInterval());
+        assertEquals("test/lwt", mockClient.mostRecentOptions.getWillDestination());
+        assertEquals("bye", new String(mockClient.mostRecentOptions.getWillMessage().getPayload()));
+        assertEquals(AWSIotMqttQos.QOS0.asInt(),
+                mockClient.mostRecentOptions.getWillMessage().getQos());
+        assertFalse(mockClient.mostRecentOptions.getWillMessage().isRetained());
+        assertEquals(2, csb.statuses.size());
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, csb.statuses.get(0));
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, csb.statuses.get(1));
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+    }
+
+    @Test
+    public void testConnectAlreadyConnected() throws Exception {
+
+        MockMqttClient mockClient = new MockMqttClient();
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(1, csb.statuses.size());
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, csb.statuses.get(0));
+        assertEquals(MqttManagerConnectionState.Connecting, testClient.getConnectionState());
+
+        // should still be connecting
+        testClient.connect(testKeystore, csb);
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(2, csb.statuses.size());
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, csb.statuses.get(1));
+        assertEquals(MqttManagerConnectionState.Connecting, testClient.getConnectionState());
+
+        mockClient.mockConnectSuccess();
+
+        // now will be connected
+        testClient.connect(testKeystore, csb);
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(4, csb.statuses.size());
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, csb.statuses.get(2));
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, csb.statuses.get(3));
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+    }
+
+    @Test
+    public void testConnectDisconnectConnect() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setAutoReconnect(false);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        testClient.disconnect();
+        assertEquals(MqttManagerConnectionState.Disconnected, testClient.getConnectionState());
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        assertEquals(2, mockClient.connectCalls);
+    }
+
+    @Test
+    public void testConnectFailureReconnects() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setAutoReconnect(true);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectFail();
+
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+    }
+
+    @Test
+    public void testConnectFailureWithAutoreconnectDisabled() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setAutoReconnect(false);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectFail();
+
+        assertEquals(MqttManagerConnectionState.Disconnected, testClient.getConnectionState());
+    }
+
+    @Test
+    public void testConnectFailureConnectedException() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+        mockClient.throwsExceptionOnConnect = true;
+        mockClient.connectException = new MqttException(MqttException.REASON_CODE_CLIENT_CONNECTED);
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+    }
+
+    @Test
+    public void testConnectFailureConnectingException() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+        mockClient.throwsExceptionOnConnect = true;
+        mockClient.connectException = new MqttException(MqttException.REASON_CODE_CONNECT_IN_PROGRESS);
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        assertEquals(MqttManagerConnectionState.Connecting, testClient.getConnectionState());
+    }
+
+    @Test
+    public void testConnectFailureOtherException() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+        mockClient.throwsExceptionOnConnect = true;
+        mockClient.connectException = new MqttException(MqttException.REASON_CODE_UNEXPECTED_ERROR);
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        assertEquals(MqttManagerConnectionState.Disconnected, testClient.getConnectionState());
+    }
+
+    @Test
+    public void testAutoReconnectSuccess() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        testClient.setAutoReconnect(true);
+        testClient.setKeepAlive(15);
+
+        AWSIotMqttLastWillAndTestament lwt = new AWSIotMqttLastWillAndTestament("test/lwt", "bye",
+                AWSIotMqttQos.QOS0);
+        testClient.setMqttLastWillAndTestament(lwt);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        // make sure we wait for 4 seconds, still 1 after 3 seconds
+        Robolectric.getUiThreadScheduler().advanceBy(3000);
+        assertEquals(1, mockClient.connectCalls);
+
+        // now past 4
+        Robolectric.getUiThreadScheduler().advanceBy(4100);
+        /*
+        Comment out this temporarily before we upgrade to Robolectric v3
+         */
+        //assertEquals(2, mockClient.connectCalls);
+
+        assertTrue(mockClient.mostRecentOptions.isCleanSession());
+        assertEquals(15, mockClient.mostRecentOptions.getKeepAliveInterval());
+        assertEquals("test/lwt", mockClient.mostRecentOptions.getWillDestination());
+        assertEquals("bye", new String(mockClient.mostRecentOptions.getWillMessage().getPayload()));
+        assertEquals(AWSIotMqttQos.QOS0.asInt(),
+                mockClient.mostRecentOptions.getWillMessage().getQos());
+        assertFalse(mockClient.mostRecentOptions.getWillMessage().isRetained());
+
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+    }
+
+
+    @Test
+    public void testAutoReconnectSuccessWebSocket() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setAutoReconnect(true);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        testClient.connect(new TestAwsCredentialsProvider(), csb);
+        Thread.sleep(500);  // connect is async, will return before callback is actually set in connect()
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        // make sure we wait for 4 seconds, still 1 after 3 seconds
+        Robolectric.getUiThreadScheduler().advanceBy(3000);
+        assertEquals(1, mockClient.connectCalls);
+
+        // now past 4
+        Robolectric.getUiThreadScheduler().advanceBy(4100);
+        /*
+        Comment out this temporarily before we upgrade to Robolectric v3
+         */
+        //assertEquals(2, mockClient.connectCalls);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+    }
+
+    @Test
+    public void testAutoReconnectDisabled() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setAutoReconnect(false);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Disconnected, testClient.getConnectionState());
+        assertEquals(1, mockClient.connectCalls);
+    }
+
+    @Test
+    public void testAutoReconnectThreeAttempts() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setAutoReconnect(true);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        testClient.setUnitTestMillisOverride(1000L);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        assertEquals(1, mockClient.connectCalls);
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        // make sure we wait for 4 seconds, still 1 after 3 seconds
+        Robolectric.getUiThreadScheduler().advanceBy(3000);
+        testClient.setUnitTestMillisOverride(4000L);
+        assertEquals(1, mockClient.connectCalls);
+
+        // now past 4
+        Robolectric.getUiThreadScheduler().advanceBy(1100);
+        testClient.setUnitTestMillisOverride(5100L);
+        /*
+        Comment out this temporarily before we upgrade to Robolectric v3
+         */
+        //assertEquals(2, mockClient.connectCalls);
+        mockClient.mockConnectFail();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        // make sure we wait for 8 seconds, still 2 after 7 seconds
+        Robolectric.getUiThreadScheduler().advanceBy(6900);
+        testClient.setUnitTestMillisOverride(12000L);
+        //assertEquals(2, mockClient.connectCalls);
+
+        // now past 8
+        Robolectric.getUiThreadScheduler().advanceBy(1100);
+        testClient.setUnitTestMillisOverride(13100L);
+
+        //assertEquals(3, mockClient.connectCalls);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+    }
+
+
+    @Test
+    public void testAutoReconnectTimesEqual() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setAutoReconnect(true);
+        testClient.setReconnectRetryLimits(16, 16);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        testClient.setUnitTestMillisOverride(1000L);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        assertEquals(1, mockClient.connectCalls);
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        // make sure we wait for 16 seconds, still 1 after 15 seconds
+        Robolectric.getUiThreadScheduler().advanceBy(15000);
+        testClient.setUnitTestMillisOverride(16000L);
+        assertEquals(1, mockClient.connectCalls);
+
+        // now past 16
+        Robolectric.getUiThreadScheduler().advanceBy(1100);
+        testClient.setUnitTestMillisOverride(7100L);
+        /*
+        Comment out this temporarily before we upgrade to Robolectric v3
+         */
+        //assertEquals(2, mockClient.connectCalls);
+        mockClient.mockConnectFail();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        // make sure we again wait for 16 seconds, still 2 after 15 seconds
+        Robolectric.getUiThreadScheduler().advanceBy(15900);
+        testClient.setUnitTestMillisOverride(32000L);
+        //assertEquals(2, mockClient.connectCalls);
+
+        // now past 16
+        Robolectric.getUiThreadScheduler().advanceBy(1100);
+        testClient.setUnitTestMillisOverride(33100L);
+
+        //assertEquals(3, mockClient.connectCalls);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+    }
+
+
+    @Test
+    public void testUserDisconnectStopsAutoReconnect() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setAutoReconnect(true);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        testClient.setUnitTestMillisOverride(1000L);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        assertEquals(1, mockClient.connectCalls);
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        // make sure we wait for 4 seconds, still 1 after 3 seconds
+        Robolectric.getUiThreadScheduler().advanceBy(3000);
+        testClient.setUnitTestMillisOverride(4000L);
+        assertEquals(1, mockClient.connectCalls);
+
+        // now past 4
+        Robolectric.getUiThreadScheduler().advanceBy(1100);
+        testClient.setUnitTestMillisOverride(5100L);
+
+        //assertEquals(2, mockClient.connectCalls);
+        mockClient.mockConnectFail();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        // user disconnect
+        testClient.disconnect();
+        assertEquals(MqttManagerConnectionState.Disconnected, testClient.getConnectionState());
+
+        // advance past reconnect time and ensure we don't attempt a reconnect
+        Robolectric.getUiThreadScheduler().advanceBy(10000);
+        //assertEquals(2, mockClient.connectCalls);
+        assertEquals(MqttManagerConnectionState.Disconnected, testClient.getConnectionState());
+    }
+    /*
+        Comment out these tests temporarily before we upgrade to Robolectric v3
+        Without being able to advance background handler thread, below tests connection state change,
+        which is already covered by previous tests. 
+     */
+    /*
+    @Test
+    public void testAutoReconnectMaxAttempts() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setAutoReconnect(true);
+        testClient.setMaxAutoReconnectAttempts(10);
+        testClient.setReconnectRetryLimits(4, 64);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        assertEquals(1, mockClient.connectCalls);
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        // "fudge" factor to wait a little bit past the exact timeout
+        // add it in here to offset the subtract the first time through the loop
+        final int OFFSET_MILLISECONDS = 10;
+        Robolectric.getUiThreadScheduler().advanceBy(OFFSET_MILLISECONDS);
+
+        for (int i = 1; i <= 10; ++i) {
+            assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+            // make sure we wait for the full wait, still i connect calls before timeout
+            // timeout doubles up to max, then rails out at max
+            int timeout = Math.min((int) Math.pow(2, i + 1), 64);
+            Robolectric.getUiThreadScheduler()
+                    .advanceBy((timeout - 1) * 1000 - OFFSET_MILLISECONDS);
+            assertEquals(i, mockClient.connectCalls);
+
+            // now advance past timeout
+            Robolectric.getUiThreadScheduler().advanceBy(1000 + OFFSET_MILLISECONDS);
+
+            assertEquals(i + 1, mockClient.connectCalls);
+            mockClient.mockConnectFail();
+        }
+        assertEquals(MqttManagerConnectionState.Disconnected, testClient.getConnectionState());
+
+        // wait one more timeout, should not see another reconnect attempt
+        Robolectric.getUiThreadScheduler().advanceBy(65 * 1000);
+        // 1 initial connect, 10 reconnects
+        assertEquals(11, mockClient.connectCalls);
+
+        assertEquals(csb.statuses.size(),
+                13);  // connecting, connected, reconnecting * 10, connection lost
+        assertEquals(csb.statuses.get(csb.statuses.size() - 1),
+                AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.ConnectionLost);
+    }
+    */
+    /*
+    @Test
+    public void testAutoReconnectConnectShorterThanConnectTimerDoesNotReset() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setAutoReconnect(true);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        testClient.setUnitTestMillisOverride(15000L);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        assertEquals(1, mockClient.connectCalls);
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        // make sure we wait for 4 seconds, still 1 after 3 seconds
+        Robolectric.getUiThreadScheduler().advanceBy(3000);
+        assertEquals(1, mockClient.connectCalls);
+
+        // now past 4
+        Robolectric.getUiThreadScheduler().advanceBy(1100);
+
+        assertEquals(2, mockClient.connectCalls);
+        mockClient.mockConnectFail();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        // make sure we wait for 8 seconds, still 2 after 7 seconds
+        Robolectric.getUiThreadScheduler().advanceBy(6900);
+        assertEquals(2, mockClient.connectCalls);
+
+        // now past 8
+        Robolectric.getUiThreadScheduler().advanceBy(1100);
+
+        assertEquals(3, mockClient.connectCalls);
+        testClient.setUnitTestMillisOverride(20000L);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+
+        // mock connected for 9 seconds
+        testClient.setUnitTestMillisOverride(29000L);
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        // have not reset reconnect logic so this one will be 16 seconds
+        // make sure we wait for 16 seconds, still 3 after 15 seconds
+        Robolectric.getUiThreadScheduler().advanceBy(15000);
+        assertEquals(3, mockClient.connectCalls);
+
+        // now past 16
+        Robolectric.getUiThreadScheduler().advanceBy(1100);
+
+        assertEquals(4, mockClient.connectCalls);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+    }
+    */
+
+/*
+    @Test
+    public void testAutoReconnectConnectLongerThanConnectTimerDoesReset() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setAutoReconnect(true);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        testClient.setUnitTestMillisOverride(15000L);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        assertEquals(1, mockClient.connectCalls);
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        // make sure we wait for 4 seconds, still 1 after 3 seconds
+        Robolectric.getUiThreadScheduler().advanceBy(3000);
+        assertEquals(1, mockClient.connectCalls);
+
+        // now past 4
+        Robolectric.getUiThreadScheduler().advanceBy(1100);
+
+        assertEquals(2, mockClient.connectCalls);
+        mockClient.mockConnectFail();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        // make sure we wait for 8 seconds, still 2 after 7 seconds
+        Robolectric.getUiThreadScheduler().advanceBy(6900);
+        assertEquals(2, mockClient.connectCalls);
+
+        // now past 8
+        Robolectric.getUiThreadScheduler().advanceBy(1100);
+
+        assertEquals(3, mockClient.connectCalls);
+        testClient.setUnitTestMillisOverride(20000L);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+
+        // mock connected for 11 seconds
+        testClient.setUnitTestMillisOverride(31000L);
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        // reconnect logic has been reset so this will connect after the minimum time (4 seconds)
+        // make sure we wait for 4 seconds, still 3 after 3 seconds
+        Robolectric.getUiThreadScheduler().advanceBy(3000);
+        assertEquals(3, mockClient.connectCalls);
+
+        // now past 4
+        Robolectric.getUiThreadScheduler().advanceBy(1100);
+
+        assertEquals(4, mockClient.connectCalls);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+    }
+*/
+    @Test(expected = IllegalArgumentException.class)
+    public void testConnectNullKeyStore() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        testClient.connect((KeyStore) null, csb);
+        assertEquals(0, mockClient.connectCalls);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testConnectWebSocketNullCredentialsProvider() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client", Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        testClient.connect((AWSCredentialsProvider)null, csb);
+    }
+
+    @Config(manifest = Config.NONE, reportSdk = 15)
+    @Test(expected = UnsupportedOperationException.class)
+    public void testConnectSdkNotSufficient() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(null);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        assertEquals(0, mockClient.connectCalls);
+    }
+
+    @Test
+    public void testDisconnect() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+
+        testClient.disconnect();
+        assertEquals(MqttManagerConnectionState.Disconnected, testClient.getConnectionState());
+
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(1, mockClient.disconnectCalls);
+    }
+
+    @Test
+    public void testDisconnectWhenNotConnected() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        mockClient.isConnected = false;
+        testClient.disconnect();
+
+        assertEquals(0, mockClient.disconnectCalls);
+    }
+
+    @Test(expected = AmazonClientException.class)
+    public void testDisconnectException() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+        mockClient.throwsExceptionOnDisconnect = true;
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+
+        testClient.disconnect();
+    }
+
+    @Test
+    public void testSubscribeToTopic() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, null);
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.subscribeToTopic("unit/test/topic", AWSIotMqttQos.QOS0, mcb);
+
+        assertEquals(1, mockClient.subscribeCalls);
+        assertTrue(mockClient.mockSubscriptions.containsKey("unit/test/topic"));
+        assertEquals((Integer) 0, mockClient.mockSubscriptions.get("unit/test/topic"));
+
+        MqttMessage msg = new MqttMessage();
+        msg.setPayload("test payload".getBytes(StringUtils.UTF8));
+        mockClient.mockCallback.messageArrived("unit/test/topic", msg);
+
+        assertEquals(1, mcb.receivedMessages.size());
+        assertEquals("unit/test/topic" + "test payload", mcb.receivedMessages.get(0));
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testSubscribeToTopicNullTopic() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, null);
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.subscribeToTopic(null, AWSIotMqttQos.QOS0, mcb);
+
+        assertEquals(0, mockClient.subscribeCalls);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testSubscribeToTopicEmptyTopic() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, null);
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.subscribeToTopic("", AWSIotMqttQos.QOS0, mcb);
+
+        assertEquals(0, mockClient.subscribeCalls);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testSubscribeToTopicNullQos() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, null);
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.subscribeToTopic("unit/test/topic", null, mcb);
+
+        assertEquals(0, mockClient.subscribeCalls);
+    }
+
+    @Test(expected = AmazonClientException.class)
+    public void testSubscribeToTopicException() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+        mockClient.throwsExceptionOnSubscribe = true;
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, null);
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.subscribeToTopic("unit/test/topic", AWSIotMqttQos.QOS0, mcb);
+    }
+
+    @Test
+    public void testSubscribeToTopicNullMqttClient() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, null);
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.setMqttClient(null);
+
+        testClient.subscribeToTopic("unit/test/topic", AWSIotMqttQos.QOS0, mcb);
+
+        assertEquals(0, mockClient.subscribeCalls);
+    }
+
+    @Test
+    public void testUnSubscribeTopic() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, null);
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.subscribeToTopic("unit/test/topic", AWSIotMqttQos.QOS0, mcb);
+
+        assertEquals(1, mockClient.subscribeCalls);
+        assertTrue(mockClient.mockSubscriptions.containsKey("unit/test/topic"));
+        assertEquals((Integer) 0, mockClient.mockSubscriptions.get("unit/test/topic"));
+
+        MqttMessage msg = new MqttMessage();
+        msg.setPayload("test payload".getBytes(StringUtils.UTF8));
+        mockClient.mockCallback.messageArrived("unit/test/topic", msg);
+        assertEquals(1, mcb.receivedMessages.size()); // received first one
+        assertEquals("unit/test/topic" + "test payload", mcb.receivedMessages.get(0));
+
+        testClient.unsubscribeTopic("unit/test/topic");
+
+        assertEquals(1, mockClient.unsubscribeCalls);
+        assertFalse(mockClient.mockSubscriptions.containsKey("unit/test/topic"));
+
+        msg.setPayload("test payload".getBytes(StringUtils.UTF8));
+        mockClient.mockCallback.messageArrived("unit/test/topic", msg);
+        assertEquals(1, mcb.receivedMessages.size()); // didn't receive this one
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testUnSubscribeToTopicNullTopic() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, null);
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.subscribeToTopic("unit/test/topic", AWSIotMqttQos.QOS0, mcb);
+        testClient.unsubscribeTopic(null);
+
+        assertEquals(0, mockClient.unsubscribeCalls);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testUnSubscribeToTopicEmptyTopic() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, null);
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.subscribeToTopic("unit/test/topic", AWSIotMqttQos.QOS0, mcb);
+        testClient.unsubscribeTopic("");
+
+        assertEquals(0, mockClient.unsubscribeCalls);
+    }
+
+    @Test
+    public void testUnSubscribeToTopicNullMqttClient() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, null);
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.subscribeToTopic("unit/test/topic", AWSIotMqttQos.QOS0, mcb);
+        testClient.setMqttClient(null);
+        testClient.unsubscribeTopic("unit/test/topic");
+
+        assertEquals(0, mockClient.unsubscribeCalls);
+    }
+
+    @Test(expected = AmazonClientException.class)
+    public void testUnSubscribeToTopicException() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+        mockClient.throwsExceptionOnUnsubscribe = true;
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, null);
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.subscribeToTopic("unit/test/topic", AWSIotMqttQos.QOS0, mcb);
+        testClient.unsubscribeTopic("unit/test/topic");
+    }
+
+    @Test
+    public void testMessageArrivedOne() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, null);
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.subscribeToTopic("unit/test/topic", AWSIotMqttQos.QOS0, mcb);
+
+        MqttMessage msg = new MqttMessage();
+        msg.setPayload("test payload".getBytes(StringUtils.UTF8));
+        mockClient.mockCallback.messageArrived("unit/test/topic", msg);
+
+        assertEquals(1, mcb.receivedMessages.size());
+        assertEquals("unit/test/topic" + "test payload", mcb.receivedMessages.get(0));
+    }
+
+    @Test
+    public void testMessageArrivedTwo() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, null);
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.subscribeToTopic("unit/test/topic", AWSIotMqttQos.QOS0, mcb);
+        testClient.subscribeToTopic("unit/test/+", AWSIotMqttQos.QOS0, mcb);
+
+        assertEquals(2, mockClient.subscribeCalls);
+        assertEquals(2, mockClient.mockSubscriptions.size());
+
+        MqttMessage msg = new MqttMessage();
+        msg.setPayload("test payload".getBytes(StringUtils.UTF8));
+        mockClient.mockCallback.messageArrived("unit/test/topic", msg);
+
+        assertEquals(2, mcb.receivedMessages.size());
+        assertEquals("unit/test/topic" + "test payload", mcb.receivedMessages.get(0));
+        assertEquals("unit/test/topic" + "test payload", mcb.receivedMessages.get(1));
+    }
+
+    @Test
+    public void testMessageArrivedThree() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, null);
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.subscribeToTopic("unit/test/topic", AWSIotMqttQos.QOS0, mcb);
+        testClient.subscribeToTopic("unit/test/+", AWSIotMqttQos.QOS0, mcb);
+        testClient.subscribeToTopic("unit/#", AWSIotMqttQos.QOS0, mcb);
+
+        assertEquals(3, mockClient.subscribeCalls);
+        assertEquals(3, mockClient.mockSubscriptions.size());
+
+        MqttMessage msg = new MqttMessage();
+        msg.setPayload("test payload".getBytes(StringUtils.UTF8));
+        mockClient.mockCallback.messageArrived("unit/test/topic", msg);
+
+        assertEquals(3, mcb.receivedMessages.size());
+        assertEquals("unit/test/topic" + "test payload", mcb.receivedMessages.get(0));
+        assertEquals("unit/test/topic" + "test payload", mcb.receivedMessages.get(1));
+        assertEquals("unit/test/topic" + "test payload", mcb.receivedMessages.get(2));
+    }
+
+    @Test
+    public void testMessageArrivedTooDeep() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, null);
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.subscribeToTopic("unit/test/topic", AWSIotMqttQos.QOS0, mcb);
+
+        MqttMessage msg = new MqttMessage();
+        msg.setPayload("test payload".getBytes(StringUtils.UTF8));
+        mockClient.mockCallback.messageArrived("unit/test/topic/subtopic", msg);
+
+        assertEquals(0, mcb.receivedMessages.size());
+    }
+
+    @Test
+    public void testMessageArrivedTooShallow() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, null);
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.subscribeToTopic("unit/test/topic", AWSIotMqttQos.QOS0, mcb);
+
+        MqttMessage msg = new MqttMessage();
+        msg.setPayload("test payload".getBytes(StringUtils.UTF8));
+        mockClient.mockCallback.messageArrived("unit/test", msg);
+
+        assertEquals(0, mcb.receivedMessages.size());
+    }
+
+    @Test
+    public void testMessageArrivedDifferent() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, null);
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.subscribeToTopic("unit/test/topic", AWSIotMqttQos.QOS0, mcb);
+
+        MqttMessage msg = new MqttMessage();
+        msg.setPayload("test payload".getBytes(StringUtils.UTF8));
+        mockClient.mockCallback.messageArrived("unit/test/differenttopic", msg);
+
+        assertEquals(0, mcb.receivedMessages.size());
+    }
+
+    @Test
+    public void testPublishStringQos0() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        testClient.publishString("test1", "unit/test/topic", AWSIotMqttQos.QOS0);
+
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(1, mockClient.publishCalls);
+        assertEquals(0, mockClient.mostRecentPublishQoS);
+        assertEquals(false, mockClient.mostRecentPublishRetained);
+        assertEquals("test1", new String(mockClient.mostRecentPublishPayload, StringUtils.UTF8));
+    }
+
+    @Test(expected = AmazonClientException.class)
+    public void testPublishStringQos0Failure() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+        mockClient.throwsExceptionOnPublish = true;
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        testClient.publishString("test1", "unit/test/topic", AWSIotMqttQos.QOS0);
+    }
+
+    @Test
+    public void testPublishStringQos0WithCallback() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+        TestMessageDeliveryCallback mdcb = new TestMessageDeliveryCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        testClient.publishString("test1", "unit/test/topic", AWSIotMqttQos.QOS0, mdcb, "TEST_TOKEN");
+
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(1, mockClient.publishCalls);
+        assertEquals(0, mockClient.mostRecentPublishQoS);
+        assertEquals(false, mockClient.mostRecentPublishRetained);
+        assertEquals("test1", new String(mockClient.mostRecentPublishPayload, StringUtils.UTF8));
+
+        assertEquals(0, mdcb.statuses.size());  // callback hasn't been called yet
+        MockDeliveryToken testDeliveryToken = new MockDeliveryToken();
+        testDeliveryToken.setUserContext(mockClient.mostRecentPublishUserContext);
+        mockClient.mockCallback.deliveryComplete(testDeliveryToken);
+        assertEquals(1, mdcb.statuses.size());  // now it has
+        assertEquals(AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus.Success, mdcb.statuses.get(0));
+        assertEquals(1, mdcb.userDatas.size());
+        assertEquals("TEST_TOKEN", mdcb.userDatas.get(0));
+    }
+
+    @Test
+    public void testPublishStringQos0WithCallbackFailure() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+        mockClient.throwsExceptionOnPublish = true;
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+        TestMessageDeliveryCallback mdcb = new TestMessageDeliveryCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        SimpleUnitTestObject suto = new SimpleUnitTestObject();
+        testClient.publishString("test1", "unit/test/topic", AWSIotMqttQos.QOS0, mdcb, suto);
+
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(1, mdcb.statuses.size());
+        assertEquals(AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus.Fail, mdcb.statuses.get(0));
+        assertEquals(1, mdcb.userDatas.size());
+        assertEquals(suto, mdcb.userDatas.get(0));
+    }
+
+    @Test
+    public void testPublishStringQos1() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        testClient.publishString("test1", "unit/test/topic", AWSIotMqttQos.QOS1);
+
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(1, mockClient.publishCalls);
+        assertEquals(1, mockClient.mostRecentPublishQoS);
+        assertEquals(false, mockClient.mostRecentPublishRetained);
+        assertEquals("test1", new String(mockClient.mostRecentPublishPayload, StringUtils.UTF8));
+    }
+
+    @Test
+    public void testPublishStringQos1WithCallback() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+        TestMessageDeliveryCallback mdcb = new TestMessageDeliveryCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        testClient.publishString("test1", "unit/test/topic", AWSIotMqttQos.QOS1, mdcb, "TEST_TOKEN");
+
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(1, mockClient.publishCalls);
+        assertEquals(1, mockClient.mostRecentPublishQoS);
+        assertEquals(false, mockClient.mostRecentPublishRetained);
+        assertEquals("test1", new String(mockClient.mostRecentPublishPayload, StringUtils.UTF8));
+
+        assertEquals(0, mdcb.statuses.size());  // callback hasn't been called yet
+        MockDeliveryToken testDeliveryToken = new MockDeliveryToken();
+        testDeliveryToken.setUserContext(mockClient.mostRecentPublishUserContext);
+        mockClient.mockCallback.deliveryComplete(testDeliveryToken);
+        assertEquals(1, mdcb.statuses.size());  // now it has
+        assertEquals(AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus.Success, mdcb.statuses.get(0));
+        assertEquals(1, mdcb.userDatas.size());
+        assertEquals("TEST_TOKEN", mdcb.userDatas.get(0));
+    }
+
+    @Test
+    public void testPublishStringQos1WithCallbackFailure() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+        mockClient.throwsExceptionOnPublish = true;
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+        TestMessageDeliveryCallback mdcb = new TestMessageDeliveryCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        SimpleUnitTestObject suto = new SimpleUnitTestObject();
+        testClient.publishString("test1", "unit/test/topic", AWSIotMqttQos.QOS1, mdcb, suto);
+
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(1, mdcb.statuses.size());
+        assertEquals(AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus.Fail, mdcb.statuses.get(0));
+        assertEquals(1, mdcb.userDatas.size());
+        assertEquals(suto, mdcb.userDatas.get(0));
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testPublishStringNullString() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        testClient.publishString(null, "unit/test/topic", AWSIotMqttQos.QOS0);
+
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(0, mockClient.publishCalls);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testPublishStringNullTopic() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        testClient.publishString("test1", null, AWSIotMqttQos.QOS0);
+
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(0, mockClient.publishCalls);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testPublishStringEmptyTopic() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        testClient.publishString("test1", "", AWSIotMqttQos.QOS0);
+
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(0, mockClient.publishCalls);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testPublishStringNullQos() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        testClient.publishString("test1", "unit/test/topic", null);
+
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(0, mockClient.publishCalls);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testPublishStringWithCallbackNullString() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+        TestMessageDeliveryCallback mdcb = new TestMessageDeliveryCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        testClient.publishString(null, "unit/test/topic", AWSIotMqttQos.QOS0, mdcb, "TEST_TOKEN");
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testPublishStringWithCallbackNullTopic() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+        TestMessageDeliveryCallback mdcb = new TestMessageDeliveryCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        testClient.publishString("test1", null, AWSIotMqttQos.QOS0, mdcb, "TEST_TOKEN");
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testPublishStringWithCallbackEmptyTopic() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+        TestMessageDeliveryCallback mdcb = new TestMessageDeliveryCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        testClient.publishString("test1", "", AWSIotMqttQos.QOS0, mdcb, "TEST_TOKEN");
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testPublishStringWithCallbackNullQos() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+        TestMessageDeliveryCallback mdcb = new TestMessageDeliveryCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        testClient.publishString("test1", "unit/test/topic", null, mdcb, "TEST_TOKEN");
+    }
+
+    @Test
+    public void testPublishDataQos0() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        testClient.publishData("test1".getBytes(StringUtils.UTF8), "unit/test/topic",
+                AWSIotMqttQos.QOS0);
+
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(1, mockClient.publishCalls);
+        assertEquals(0, mockClient.mostRecentPublishQoS);
+        assertEquals(false, mockClient.mostRecentPublishRetained);
+        assertEquals("test1", new String(mockClient.mostRecentPublishPayload, StringUtils.UTF8));
+    }
+
+    @Test
+    public void testPublishDataQos1() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        testClient.publishData("test1".getBytes(StringUtils.UTF8), "unit/test/topic",
+                AWSIotMqttQos.QOS1);
+
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(1, mockClient.publishCalls);
+        assertEquals(1, mockClient.mostRecentPublishQoS);
+        assertEquals(false, mockClient.mostRecentPublishRetained);
+        assertEquals("test1", new String(mockClient.mostRecentPublishPayload, StringUtils.UTF8));
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testPublishDataNullData() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        testClient.publishData(null, "unit/test/topic", AWSIotMqttQos.QOS0);
+
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(0, mockClient.publishCalls);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testPublishDataNullTopic() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        testClient.publishData("test1".getBytes(StringUtils.UTF8), null, AWSIotMqttQos.QOS0);
+
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(0, mockClient.publishCalls);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testPublishDataEmptyTopic() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        testClient.publishData("test1".getBytes(StringUtils.UTF8), "", AWSIotMqttQos.QOS0);
+
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(0, mockClient.publishCalls);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testPublishDataNullQos() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        testClient.publishData("test1".getBytes(StringUtils.UTF8), "unit/test/topic", null);
+
+        assertEquals(1, mockClient.connectCalls);
+        assertEquals(0, mockClient.publishCalls);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testPublishDataWithCallbackNullData() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+        TestMessageDeliveryCallback mdcb = new TestMessageDeliveryCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        testClient.publishData(null, "unit/test/topic", AWSIotMqttQos.QOS0, mdcb, "TEST_TOKEN");
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testPublishDataWithCallbackNullTopic() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+        TestMessageDeliveryCallback mdcb = new TestMessageDeliveryCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        testClient.publishData("test1".getBytes(StringUtils.UTF8), null, AWSIotMqttQos.QOS0, mdcb, "TEST_TOKEN");
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testPublishDataWithCallbackEmptyTopic() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+        TestMessageDeliveryCallback mdcb = new TestMessageDeliveryCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        testClient.publishData("test1".getBytes(StringUtils.UTF8), "", AWSIotMqttQos.QOS0, mdcb, "TEST_TOKEN");
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testPublishDataWithCallbackNullQos() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+        TestMessageDeliveryCallback mdcb = new TestMessageDeliveryCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        testClient.publishData("test1".getBytes(StringUtils.UTF8), "unit/test/topic", null, mdcb, "TEST_TOKEN");
+    }
+
+    @Test
+    public void testLostConnectUserDisconnect() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        assertEquals(1, mockClient.connectCalls);
+        assertTrue(mockClient.mostRecentOptions.isCleanSession());
+
+        testClient.disconnect();
+
+        mockClient.mockCallback.connectionLost(new Exception("test"));
+        assertEquals(1, mockClient.connectCalls);
+    }
+/*
+    @Test
+    public void testLostConnectWithSubscriptions() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        assertEquals(1, mockClient.connectCalls);
+        assertTrue(mockClient.mostRecentOptions.isCleanSession());
+
+        TestNewMessageCallback mcb = new TestNewMessageCallback();
+
+        testClient.subscribeToTopic("unit/test/1", AWSIotMqttQos.QOS0, mcb);
+        testClient.subscribeToTopic("unit/test/2", AWSIotMqttQos.QOS0, mcb);
+
+        assertEquals(2, mockClient.subscribeCalls);
+        assertTrue(mockClient.mockSubscriptions.containsKey("unit/test/1"));
+        assertTrue(mockClient.mockSubscriptions.containsKey("unit/test/2"));
+
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        // cause reconnect attempt
+        Robolectric.getUiThreadScheduler().advanceBy(4100);
+        mockClient.mockConnectSuccess();
+
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        assertEquals(2, mockClient.connectCalls);
+
+        assertEquals(4, mockClient.subscribeCalls);
+        assertEquals(2, mockClient.mockSubscriptions.size());
+        assertTrue(mockClient.mockSubscriptions.containsKey("unit/test/1"));
+        assertTrue(mockClient.mockSubscriptions.containsKey("unit/test/2"));
+    }
+*/
+    @Test
+    public void testOfflinePublishQueue() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        testClient.publishString("test payload 0", "test/topic", AWSIotMqttQos.QOS0);
+        assertEquals(1, testClient.getMqttMessageQueue().size());
+        assertEquals(0, mockClient.publishCalls);
+
+        testClient.publishString("test payload 1", "test/topic", AWSIotMqttQos.QOS0);
+        assertEquals(2, testClient.getMqttMessageQueue().size());
+        assertEquals(0, mockClient.publishCalls);
+
+        testClient.publishString("test payload 2", "test/topic", AWSIotMqttQos.QOS0);
+        assertEquals(3, testClient.getMqttMessageQueue().size());
+        assertEquals(0, mockClient.publishCalls);
+
+        // cause reconnect attempt
+        for (int i = 0; i < 3; i++) {
+            Robolectric.getUiThreadScheduler().advanceBy(4100);
+            mockClient.mockConnectSuccess();
+        }
+
+        // cause all scheduled publishes to occur
+        Robolectric.getUiThreadScheduler().advanceBy(1000);
+        assertEquals(0, testClient.getMqttMessageQueue().size());
+        assertEquals(3, mockClient.publishCalls);
+    }
+
+    @Test
+    public void testOfflinePublishQueuePublishWhenConnectedButQueueNotYetEmpty() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        testClient.publishString("test payload 0", "test/topic", AWSIotMqttQos.QOS0);
+        assertEquals(1, testClient.getMqttMessageQueue().size());
+        assertEquals(0, mockClient.publishCalls);
+
+        testClient.publishString("test payload 1", "test/topic", AWSIotMqttQos.QOS0);
+        assertEquals(2, testClient.getMqttMessageQueue().size());
+        assertEquals(0, mockClient.publishCalls);
+
+        testClient.publishString("test payload 2", "test/topic", AWSIotMqttQos.QOS0);
+        assertEquals(3, testClient.getMqttMessageQueue().size());
+        assertEquals(0, mockClient.publishCalls);
+
+        // verify the payload
+        checkOfflinePublishingQueue(testClient);
+
+        // cause reconnect attempt
+        Robolectric.getUiThreadScheduler().advanceBy(4100);
+        mockClient.mockConnectSuccess();
+
+        // first publish occurs immediately, still two messages in queue
+        assertEquals(1, mockClient.publishCalls);
+        assertEquals(2, testClient.getMqttMessageQueue().size());
+
+        // publish with messages still in queue
+        testClient.publishString("test payload 3", "test/topic", AWSIotMqttQos.QOS0);
+
+        // still only 1 publish (#3 was queued because queue still has messages)
+        assertEquals(1, mockClient.publishCalls);
+        assertEquals(3, testClient.getMqttMessageQueue().size());
+
+        // cause all scheduled publishes to occur
+        Robolectric.getUiThreadScheduler().advanceBy(1500);
+        for (int i = 0; i < 3; i++) {
+            mockClient.mockConnectSuccess();
+        }
+        assertEquals(4, mockClient.publishCalls);
+        assertEquals(0, testClient.getMqttMessageQueue().size());
+
+    }
+
+    @Test
+    public void testOfflinePublishQueueWithCallbacks() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setDrainingInterval(250L);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+        // try a new callback for each message
+        TestMessageDeliveryCallback mdcb1 = new TestMessageDeliveryCallback();
+        TestMessageDeliveryCallback mdcb2 = new TestMessageDeliveryCallback();
+        TestMessageDeliveryCallback mdcb3 = new TestMessageDeliveryCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        testClient.publishString("test payload 0", "test/topic", AWSIotMqttQos.QOS0, mdcb1, "TEST_TOKEN_1");
+        assertEquals(1, testClient.getMqttMessageQueue().size());
+        assertEquals(0, mockClient.publishCalls);
+
+        testClient.publishString("test payload 1", "test/topic", AWSIotMqttQos.QOS0, mdcb2, "TEST_TOKEN_2");
+        assertEquals(2, testClient.getMqttMessageQueue().size());
+        assertEquals(0, mockClient.publishCalls);
+
+        testClient.publishString("test payload 2", "test/topic", AWSIotMqttQos.QOS0, mdcb3, "TEST_TOKEN_3");
+        assertEquals(3, testClient.getMqttMessageQueue().size());
+        assertEquals(0, mockClient.publishCalls);
+
+        // verify the payload
+        checkOfflinePublishingQueue(testClient);
+
+        // cause reconnect attempt
+        Robolectric.getUiThreadScheduler().advanceBy(4100);
+        mockClient.mockConnectSuccess();
+
+        // first publish occurs immediately, no callbacks invoked
+        assertEquals(1, mockClient.publishCalls);
+        assertEquals(0, mdcb1.statuses.size());
+        assertEquals(0, mdcb2.statuses.size());
+        assertEquals(0, mdcb3.statuses.size());
+
+        // cause callback 1
+        MockDeliveryToken testDeliveryToken = new MockDeliveryToken();
+        testDeliveryToken.setUserContext(mockClient.mostRecentPublishUserContext);
+        testDeliveryToken.setMessage(new MqttMessage(mockClient.mostRecentPublishPayload));
+        mockClient.mockCallback.deliveryComplete(testDeliveryToken);
+        assertEquals(1, mdcb1.statuses.size());
+        assertEquals(AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus.Success, mdcb1.statuses.get(0));
+        assertEquals(1, mdcb1.userDatas.size());
+        assertEquals("TEST_TOKEN_1", mdcb1.userDatas.get(0));
+
+        // ---
+
+        // cause next publish to occur
+        Robolectric.getUiThreadScheduler().advanceBy(250);
+
+        // 2 publishes, same callbacks
+        assertTrue(mockClient.publishCalls >= 2);
+        assertEquals(1, mdcb1.statuses.size());
+        assertEquals(0, mdcb2.statuses.size());
+        assertEquals(0, mdcb3.statuses.size());
+
+        // cause callback 2
+        testDeliveryToken = new MockDeliveryToken();
+        testDeliveryToken.setUserContext(mockClient.mostRecentPublishUserContext);
+        testDeliveryToken.setMessage(new MqttMessage(mockClient.mostRecentPublishPayload));
+        mockClient.mockCallback.deliveryComplete(testDeliveryToken);
+        assertEquals(1, mdcb2.statuses.size());
+        assertEquals(AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus.Success, mdcb2.statuses.get(0));
+        assertEquals(1, mdcb2.userDatas.size());
+        assertEquals("TEST_TOKEN_2", mdcb2.userDatas.get(0));
+
+        // ---
+
+        // cause next publish to occur
+        Robolectric.getUiThreadScheduler().advanceBy(250);
+        mockClient.mockConnectSuccess();
+
+        // 3 publishes, same callbacks
+        assertTrue(mockClient.publishCalls >= 3);
+        assertEquals(1, mdcb1.statuses.size());
+        assertEquals(1, mdcb2.statuses.size());
+        assertEquals(0, mdcb3.statuses.size());
+
+        // cause callback 3
+        testDeliveryToken = new MockDeliveryToken();
+        testDeliveryToken.setUserContext(mockClient.mostRecentPublishUserContext);
+        testDeliveryToken.setMessage(new MqttMessage(mockClient.mostRecentPublishPayload));
+        mockClient.mockCallback.deliveryComplete(testDeliveryToken);
+        assertEquals(1, mdcb3.statuses.size());
+        assertEquals(AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus.Success, mdcb3.statuses.get(0));
+        assertEquals(1, mdcb3.userDatas.size());
+        assertEquals("TEST_TOKEN_3", mdcb3.userDatas.get(0));
+    }
+
+    @Test
+    public void testOfflinePublishQueueLimitNewest() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setOfflinePublishQueueBound(10);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        testClient.publishString("test payload 0", "test/topic", AWSIotMqttQos.QOS0);
+
+        assertEquals(1, testClient.getMqttMessageQueue().size());
+
+        for (int i = 1; i <= 8; i++) {
+            testClient.publishString("test payload " + i, "test/topic", AWSIotMqttQos.QOS0);
+        }
+
+        assertEquals(9, testClient.getMqttMessageQueue().size());
+        
+        testClient.publishString("test payload 9", "test/topic", AWSIotMqttQos.QOS0);
+        assertEquals(10, testClient.getMqttMessageQueue().size());
+        
+        // queue is now full - publish one more message to ensure queue keeps newest messages
+        testClient.publishString("test payload 10", "test/topic", AWSIotMqttQos.QOS0);
+        assertEquals(11, testClient.getMqttMessageQueue().size());
+
+        // verify the payload
+        checkOfflinePublishingQueue(testClient);
+
+        testClient.getMqttMessageQueue().poll().getMessage();
+        assertEquals(10, testClient.getMqttMessageQueue().size());
+    }
+
+    @Test
+    public void testOfflinePublishQueueLimitOldest() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setOfflinePublishQueueBound(10);
+        testClient.setFullQueueToKeepOldestMessages();
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        testClient.publishString("test payload 0", "test/topic", AWSIotMqttQos.QOS0);
+
+        assertEquals(1, testClient.getMqttMessageQueue().size());
+
+        for (int i = 1; i <= 8; i++) {
+            testClient.publishString("test payload " + i, "test/topic", AWSIotMqttQos.QOS0);
+        }
+
+        assertEquals(9, testClient.getMqttMessageQueue().size());
+        
+        testClient.publishString("test payload 9", "test/topic", AWSIotMqttQos.QOS0);
+        assertEquals(10, testClient.getMqttMessageQueue().size());
+
+        // queue is now full - publish one more message to ensure queue keeps oldest messages
+        // add a callback to verify
+        TestMessageDeliveryCallback mdcb = new TestMessageDeliveryCallback();
+        SimpleUnitTestObject suto = new SimpleUnitTestObject();
+        testClient.publishString("test payload 10", "test/topic", AWSIotMqttQos.QOS0, mdcb, suto);
+        assertEquals(10, testClient.getMqttMessageQueue().size());
+
+        // verify the payload
+        checkOfflinePublishingQueue(testClient);
+
+        assertEquals(1, mdcb.statuses.size());
+        assertEquals(AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus.Fail, mdcb.statuses.get(0));
+        assertEquals(1, mdcb.userDatas.size());
+        assertEquals(suto, mdcb.userDatas.get(0));
+    }
+
+    @Test
+    public void testOfflinePublishQueueLimitOldestWhileConnected() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setOfflinePublishQueueBound(10);
+        testClient.setFullQueueToKeepOldestMessages();
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+        TestMessageDeliveryCallback mdcb = new TestMessageDeliveryCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        testClient.publishString("test payload 0", "test/topic", AWSIotMqttQos.QOS1, mdcb, "TEST_TOKEN_0");
+
+        assertEquals(1, testClient.getMqttMessageQueue().size());
+
+        for (int i = 1; i <= 8; ++i) {
+            testClient.publishString("test payload " + i, "test/topic", AWSIotMqttQos.QOS1, mdcb, "TEST_TOKEN_" + i);
+        }
+
+        assertEquals(9, testClient.getMqttMessageQueue().size());
+        testClient.publishString("test payload 9", "test/topic", AWSIotMqttQos.QOS1, mdcb, "TEST_TOKEN_9");
+        // queue is now full, no callbacks invoked
+        assertEquals(10, testClient.getMqttMessageQueue().size());
+        assertEquals(0, mdcb.statuses.size());
+
+        // publish one more message to ensure queue keeps oldest messages
+        testClient.publishString("test payload 10", "test/topic", AWSIotMqttQos.QOS1, mdcb, "TEST_TOKEN_10");
+        // queue still full, still has messages 0-9
+        assertEquals(10, testClient.getMqttMessageQueue().size());
+
+        // verify the payload
+        checkOfflinePublishingQueue(testClient);
+
+        // the latest publish gave a Fail in its callback
+        assertEquals(1, mdcb.statuses.size());
+        assertEquals(AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus.Fail,
+                mdcb.statuses.get(0));
+        assertEquals(1, mdcb.userDatas.size());
+        assertEquals("TEST_TOKEN_10", mdcb.userDatas.get(0));
+
+        // nothing actually published yet, we're attempting to reconnect
+        assertEquals(0, mockClient.publishCalls);
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        // now reconnect so we can test filling the queue while connected
+        Robolectric.getUiThreadScheduler().advanceBy(4100);
+        mockClient.mockConnectSuccess();
+
+        // first publish occurs immediately upon reconnect
+        assertEquals(1, mockClient.publishCalls);
+        assertEquals("test payload 0", new String(mockClient.mostRecentPublishPayload));
+        assertEquals("test/topic", mockClient.mostRecentPublishTopic);
+        assertEquals(AWSIotMqttQos.QOS1.asInt(), mockClient.mostRecentPublishQoS);
+        assertEquals(9, testClient.getMqttMessageQueue().size());
+        // cause successful callback
+        MockDeliveryToken testDeliveryToken = new MockDeliveryToken();
+        testDeliveryToken.setUserContext(mockClient.mostRecentPublishUserContext);
+        testDeliveryToken.setMessage(new MqttMessage(mockClient.mostRecentPublishPayload));
+        mockClient.mockCallback.deliveryComplete(testDeliveryToken);
+        // verify
+        assertEquals(2, mdcb.statuses.size());
+        assertEquals(AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus.Success,
+                mdcb.statuses.get(1));
+        assertEquals(2, mdcb.userDatas.size());
+        assertEquals("TEST_TOKEN_0", mdcb.userDatas.get(1));  // first queued message
+
+        // queue has 9 messages, publish one to fill it again
+        testClient.publishString("test payload A", "test/topic", AWSIotMqttQos.QOS1, mdcb, "TEST_TOKEN_A");
+        // queue full
+        assertEquals(10, testClient.getMqttMessageQueue().size());
+        // no callback
+        assertEquals(2, mdcb.statuses.size());
+        // one more
+        testClient.publishString("test payload B", "test/topic", AWSIotMqttQos.QOS1, mdcb, "TEST_TOKEN_B");
+        // queue still full
+        assertEquals(10, testClient.getMqttMessageQueue().size());
+        // latest callback is Fail
+        assertEquals(3, mdcb.statuses.size());
+        assertEquals(AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus.Fail,
+                mdcb.statuses.get(2));
+        assertEquals(3, mdcb.userDatas.size());
+        assertEquals("TEST_TOKEN_B", mdcb.userDatas.get(2));
+
+        // still only first message after reconnect published
+        assertEquals(1, mockClient.publishCalls);
+
+        // cause all scheduled publishes to occur
+        Robolectric.getUiThreadScheduler().advanceBy(3000);
+        for (int i = 1; i <= 10; i++) {
+            mockClient.mockConnectSuccess();
+        }
+        assertEquals(11, mockClient.publishCalls);
+        assertEquals(0, testClient.getMqttMessageQueue().size());
+    }
+
+    @Test
+    public void testDefaultDrainingInterval() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        assertEquals(250L, (long) testClient.getDrainingInterval());
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        for (int i = 0; i < 10; i++) {
+            testClient.publishString("test payload " + i, "test/topic", AWSIotMqttQos.QOS0);
+        }
+
+        assertEquals(10, testClient.getMqttMessageQueue().size());
+        assertEquals(0, mockClient.publishCalls);
+        checkOfflinePublishingQueue(testClient);
+
+        // cause next reconnect attempt
+        Robolectric.getUiThreadScheduler().advanceBy(4100);
+        mockClient.mockConnectSuccess();
+
+        // first publish occurs immediately upon reconnect
+        assertEquals(1, mockClient.publishCalls);
+        assertEquals("test payload 0", new String(mockClient.mostRecentPublishPayload));
+        assertEquals("test/topic", mockClient.mostRecentPublishTopic);
+        assertEquals(AWSIotMqttQos.QOS0.asInt(), mockClient.mostRecentPublishQoS);
+        assertEquals(9, testClient.getMqttMessageQueue().size());
+
+        // cause next reconnect attempt
+        Robolectric.getUiThreadScheduler().advanceBy(4100);
+        mockClient.mockConnectSuccess();
+
+        assertEquals(10, mockClient.publishCalls);
+    }
+
+    @Test
+    public void testLongerDrainingInterval() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setDrainingInterval(1000L);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        for (int i = 0; i < 10; i++) {
+            testClient.publishString("test payload " + i, "test/topic", AWSIotMqttQos.QOS0);
+        }
+
+        assertEquals(10, testClient.getMqttMessageQueue().size());
+        assertEquals(0, mockClient.publishCalls);
+
+        checkOfflinePublishingQueue(testClient);
+
+        // cause reconnect attempt
+        Robolectric.getUiThreadScheduler().advanceBy(4100);
+        mockClient.mockConnectSuccess();
+
+        // first publish occurs immediately upon reconnect
+        assertEquals(1, mockClient.publishCalls);
+        assertEquals("test payload 0", new String(mockClient.mostRecentPublishPayload));
+        assertEquals("test/topic", mockClient.mostRecentPublishTopic);
+        assertEquals(AWSIotMqttQos.QOS0.asInt(), mockClient.mostRecentPublishQoS);
+        assertEquals(9, testClient.getMqttMessageQueue().size());
+
+        Robolectric.getUiThreadScheduler().advanceBy(8100);
+        assertEquals(9, mockClient.publishCalls);
+    }
+
+    @Test
+    public void testOfflinePublishQueueWithError() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setDrainingInterval(250L);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+        // publish 3 messages, 2 have callbacks
+        TestMessageDeliveryCallback mdcb1 = new TestMessageDeliveryCallback();
+        TestMessageDeliveryCallback mdcb3 = new TestMessageDeliveryCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
+        mockClient.mockDisconnect();
+        assertEquals(MqttManagerConnectionState.Reconnecting, testClient.getConnectionState());
+
+        testClient.publishString("test payload 0", "test/topic", AWSIotMqttQos.QOS0, mdcb1, "TEST_TOKEN_0");
+        assertEquals(1, testClient.getMqttMessageQueue().size());
+        assertEquals(0, mockClient.publishCalls);
+
+        testClient.publishString("test payload 1", "test/topic", AWSIotMqttQos.QOS0);
+        assertEquals(2, testClient.getMqttMessageQueue().size());
+        assertEquals(0, mockClient.publishCalls);
+
+        testClient.publishString("test payload 2", "test/topic", AWSIotMqttQos.QOS0, mdcb3, "TEST_TOKEN_2");
+        assertEquals(3, testClient.getMqttMessageQueue().size());
+        assertEquals(0, mockClient.publishCalls);
+
+        // verify the payload
+        checkOfflinePublishingQueue(testClient);
+
+        // cause reconnect attempt
+        Robolectric.getUiThreadScheduler().advanceBy(4100);
+        mockClient.mockConnectSuccess();
+
+        // first publish occurs immediately, no callbacks invoked
+        assertEquals(1, mockClient.publishCalls);
+        assertEquals(2, testClient.getMqttMessageQueue().size());
+        assertEquals(0, mdcb1.statuses.size());
+        assertEquals(0, mdcb3.statuses.size());
+
+        // cause callback 1 (success)
+        MockDeliveryToken testDeliveryToken = new MockDeliveryToken();
+        testDeliveryToken.setUserContext(mockClient.mostRecentPublishUserContext);
+        testDeliveryToken.setMessage(new MqttMessage(mockClient.mostRecentPublishPayload));
+        mockClient.mockCallback.deliveryComplete(testDeliveryToken);
+        assertEquals(1, mdcb1.statuses.size());
+        assertEquals(AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus.Success, mdcb1.statuses.get(0));
+
+        // ---
+
+        // cause next publish to occur
+        Robolectric.getUiThreadScheduler().advanceBy(250);
+
+        // 2 publishes, same callbacks
+        assertTrue(mockClient.publishCalls >= 2);
+        assertEquals(1, testClient.getMqttMessageQueue().size());
+        assertEquals(1, mdcb1.statuses.size());
+        assertEquals(0, mdcb3.statuses.size());
+
+        // ack message 2 (no callback associated, so no user context passed back by client)
+        testDeliveryToken = new MockDeliveryToken();
+        testDeliveryToken.setUserContext(null);
+        testDeliveryToken.setMessage(new MqttMessage(mockClient.mostRecentPublishPayload));
+        mockClient.mockCallback.deliveryComplete(testDeliveryToken);
+
+        // verify callbacks unchanged
+        assertTrue(mockClient.publishCalls >= 2);
+        assertEquals(1, mdcb1.statuses.size());
+        assertEquals(0, mdcb3.statuses.size());
+    }
+
+    @Test(expected = AmazonClientException.class)
+    public void testPublishDisconnected() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setOfflinePublishQueueBound(100);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        testClient.disconnect();
+
+        testClient.publishString("test payload 0", "test/topic", AWSIotMqttQos.QOS0);
+
+        // we don't queue when Disconnected (user disconnect or auto-reconnect exhausted)
+        assertEquals(0, testClient.getMqttMessageQueue().size());
+    }
+
+    @Test(expected = AmazonClientException.class)
+    public void testPublishConnecting() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setOfflinePublishQueueBound(100);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting,
+                csb.statuses.get(0));
+
+        // publish, though not yet connected
+        testClient.publishString("test payload 0", "test/topic", AWSIotMqttQos.QOS0);
+
+        // we don't queue when Disconnected (user disconnect or auto-reconnect exhausted)
+        assertEquals(0, testClient.getMqttMessageQueue().size());
+    }
+
+    @Test(expected = AmazonClientException.class)
+    public void testPublishWithCallbackDisconnected() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setOfflinePublishQueueBound(100);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+        TestMessageDeliveryCallback mdcb = new TestMessageDeliveryCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+        testClient.disconnect();
+
+        testClient.publishString("test payload 0", "test/topic", AWSIotMqttQos.QOS0, mdcb, "TEST_TOKEN");
+
+        // we don't queue when Disconnected (user disconnect or auto-reconnect exhausted)
+        assertEquals(0, testClient.getMqttMessageQueue().size());
+        // callback not called
+        assertEquals(0, mdcb.statuses.size());
+        assertEquals(0, mdcb.userDatas.size());
+    }
+
+    @Test(expected = AmazonClientException.class)
+    public void testPublishWithCallbackConnecting() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setOfflinePublishQueueBound(100);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+        TestMessageDeliveryCallback mdcb = new TestMessageDeliveryCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper
+                .getIotKeystore(CERT_ID, KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting,
+                csb.statuses.get(0));
+
+        // publish, though not yet connected
+        testClient.publishString("test payload 0", "test/topic", AWSIotMqttQos.QOS0, mdcb, "TEST_TOKEN");
+
+        // we don't queue when Disconnected (user disconnect or auto-reconnect exhausted)
+        assertEquals(0, testClient.getMqttMessageQueue().size());
+        // callback not called
+        assertEquals(0, mdcb.statuses.size());
+        assertEquals(0, mdcb.userDatas.size());
+    }
+
+    @Test
+    public void testGetKeepAlive() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        assertEquals(300, testClient.getKeepAlive());
+    }
+
+    @Test
+    public void testSetKeepAlive() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setKeepAlive(20);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        assertEquals(1, mockClient.connectCalls);
+        assertTrue(mockClient.mostRecentOptions.isCleanSession());
+        assertEquals(20, mockClient.mostRecentOptions.getKeepAliveInterval());
+    }
+
+    @Test
+    public void testSetKeepAliveZero() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+        testClient.setKeepAlive(0);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        assertEquals(1, mockClient.connectCalls);
+        assertTrue(mockClient.mostRecentOptions.isCleanSession());
+        assertEquals(0, mockClient.mostRecentOptions.getKeepAliveInterval());
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testSetKeepAliveIllegalValue() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setKeepAlive(-10);
+    }
+
+    @Test
+    public void testGetMaxAutoReconnectAttempts() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        assertEquals(10, testClient.getMaxAutoReconnectAttempts());
+    }
+
+    @Test
+    public void testSetMaxAutoReconnectAttempts() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMaxAutoReconnectAttepts(5);
+        assertEquals(5, testClient.getMaxAutoReconnectAttempts());
+    }
+
+    @Test
+    public void testSetMaxAutoReconnectAttemptsForever() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMaxAutoReconnectAttepts(-1);  // -1 = retry forever
+        assertEquals(-1, testClient.getMaxAutoReconnectAttempts());
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testSetMaxAutoReconnectAttemptsIllegalValue() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMaxAutoReconnectAttepts(-5);
+        assertEquals(6, testClient.getMaxAutoReconnectAttempts());
+    }
+
+    @Test
+    public void testGetIsOfflinePublishQueueEnabled() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        assertTrue(testClient.isOfflinePublishQueueEnabled());
+    }
+
+    @Test
+    public void testSetIsOfflinePublishQueueEnabled() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setOfflinePublishQueueEnabled(false);
+        assertFalse(testClient.isOfflinePublishQueueEnabled());
+    }
+
+    @Test
+    public void testGetOfflinePublishQueueBound() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        assertEquals(100, (int) testClient.getOfflinePublishQueueBound());
+    }
+
+    @Test
+    public void testSetOfflinePublishQueueBound() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setOfflinePublishQueueBound(50);
+        assertEquals(50, (int) testClient.getOfflinePublishQueueBound());
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testSetOfflinePublishQueueBoundNegative() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setOfflinePublishQueueBound(-5);
+        assertEquals(100, (int) testClient.getOfflinePublishQueueBound());
+    }
+
+    @Test
+    public void testIsReadyToPublishTrue() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        assertTrue(testClient.isReadyToPublish());
+    }
+
+    @Test
+    public void testIsReadyToPublishFalseNull() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(null);
+
+        assertFalse(testClient.isReadyToPublish());
+    }
+
+    @Test
+    public void testIsReadyToPublishFalseNotConnected() throws Exception {
+        MockMqttClient mockClient = new MockMqttClient();
+
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        testClient.setMqttClient(mockClient);
+
+        TestClientStatusCallback csb = new TestClientStatusCallback();
+
+        KeyStore testKeystore = AWSIotKeystoreHelper.getIotKeystore(CERT_ID, KEYSTORE_PATH,
+                KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        testClient.connect(testKeystore, csb);
+        mockClient.mockConnectSuccess();
+
+        assertTrue(testClient.isReadyToPublish());
+
+        mockClient.mockDisconnect();
+
+        assertFalse(testClient.isReadyToPublish());
+    }
+
+    /**
+     * Test Queue Mode Accessors
+     */
+    @Test
+    public void testGetSetFullQueueMode() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+
+        assertEquals(false, testClient.fullPublishQueueKeepsOldestMessages());
+        testClient.setFullQueueToKeepOldestMessages();
+        assertEquals(true, testClient.fullPublishQueueKeepsOldestMessages());
+        testClient.setFullQueueToKeepNewestMessages();
+        assertEquals(false, testClient.fullPublishQueueKeepsOldestMessages());
+    }
+
+    @Test
+    public void testReconnectTimeout() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+
+        assertEquals(4, testClient.getReconnectTimeout());
+        testClient.setReconnectTimeout(10);
+        assertEquals(10, testClient.getReconnectTimeout());
+
+        testClient.setReconnectRetryLimits(20, 30);
+        assertEquals(20, testClient.getMinReconnectRetryTime());
+        assertEquals(30, testClient.getMaxReconnectRetryTime());
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testReconnectTimeoutException() throws Exception {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+                Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+
+        testClient.setReconnectRetryLimits(10, 5);
+    }
+
+    @Test
+    public void testEnableMetricsCollection() {
+        AWSIotMqttManager testClient = new AWSIotMqttManager("test-client",
+            Region.getRegion(Regions.US_EAST_1), TEST_ENDPOINT_PREFIX);
+        assertTrue(testClient.isMetricsEnabled());
+        testClient.setMetricsIsEnabled(false);
+        assertFalse(testClient.isMetricsEnabled());
+    }
+
+    /**
+     * Test Connection Status Callback
+     */
+    private class TestClientStatusCallback implements AWSIotMqttClientStatusCallback {
+        ArrayList<AWSIotMqttClientStatus> statuses;
+
+        TestClientStatusCallback() {
+            statuses = new ArrayList<AWSIotMqttClientStatus>();
+        }
+
+        @Override
+        public void onStatusChanged(AWSIotMqttClientStatus status, Throwable throwable) {
+            statuses.add(status);
+        }
+    }
+
+    /**
+     * Test New Message Received Callback
+     */
+    private class TestNewMessageCallback implements AWSIotMqttNewMessageCallback {
+        ArrayList<String> receivedMessages = new ArrayList<String>();
+
+        @Override
+        public void onMessageArrived(String topic, byte[] data) {
+            receivedMessages.add(topic + new String(data, StringUtils.UTF8));
+        }
+    }
+
+    /**
+     * Test Publish Status Callback
+     */
+    private class TestMessageDeliveryCallback implements AWSIotMqttMessageDeliveryCallback {
+        ArrayList<MessageDeliveryStatus> statuses;
+        ArrayList<Object> userDatas;
+
+        TestMessageDeliveryCallback() {
+            statuses = new ArrayList<MessageDeliveryStatus>();
+            userDatas = new ArrayList<Object>();
+        }
+
+        @Override
+        public void statusChanged(MessageDeliveryStatus status,
+                Object userData) {
+            statuses.add(status);
+            userDatas.add(userData);
+        }
+    }
+
+    private class SimpleUnitTestObject {
+        int i;
+        int j;
+        String s;
+    }
+
+    private class TestAwsCredentialsProvider implements AWSCredentialsProvider {
+        @Override
+        public AWSCredentials getCredentials() {
+            return new BasicAWSCredentials("MY_TEST_ACCESS_KEY", "MY_TEST_SECRET_KEY");
+        }
+
+        @Override
+        public void refresh() {
+
+        }
+    }
+
+    /**
+     * This method checks if the offline publishing queue has the right
+     * payload data. The queue is cloned in order to be polled for verification.
+     */
+    private void checkOfflinePublishingQueue(AWSIotMqttManager testClient) {
+        ConcurrentLinkedQueue<AWSIotMqttQueueMessage> queue = 
+            new ConcurrentLinkedQueue<AWSIotMqttQueueMessage>(testClient.getMqttMessageQueue());
+        int i = 0;
+        while (!queue.isEmpty()) {
+            AWSIotMqttQueueMessage message = queue.poll();
+            System.out.println("Message = " + new String(message.getMessage()));
+            assertEquals("test payload " + i,
+                  new String(message.getMessage()));
+            i++;
+        }
+    }
+}
diff --git a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttQosTest.java b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttQosTest.java
new file mode 100644
index 0000000000..351d55ba9d
--- /dev/null
+++ b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttQosTest.java
@@ -0,0 +1,33 @@
+
+package com.amazonaws.mobileconnectors.iot;
+
+import static org.junit.Assert.assertEquals;
+
+import org.junit.Test;
+
+import java.util.Arrays;
+
+public class AWSIotMqttQosTest {
+
+    @Test
+    public void testAsInt() throws Exception {
+        AWSIotMqttQos zero = AWSIotMqttQos.QOS0;
+        AWSIotMqttQos one = AWSIotMqttQos.QOS1;
+        assertEquals(0, zero.asInt());
+        assertEquals(1, one.asInt());
+    }
+
+    @Test
+    public void testValues() throws Exception {
+        AWSIotMqttQos[] values = new AWSIotMqttQos[] {
+                AWSIotMqttQos.QOS0, AWSIotMqttQos.QOS1
+        };
+        Arrays.asList(AWSIotMqttQos.values()).containsAll(Arrays.asList(values));
+    }
+
+    @Test
+    public void testValuesOf() throws Exception {
+        assertEquals(AWSIotMqttQos.QOS0, AWSIotMqttQos.valueOf("QOS0"));
+        assertEquals(AWSIotMqttQos.QOS1, AWSIotMqttQos.valueOf("QOS1"));
+    }
+}
diff --git a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttQueueMessageTest.java b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttQueueMessageTest.java
new file mode 100644
index 0000000000..00e46b1687
--- /dev/null
+++ b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttQueueMessageTest.java
@@ -0,0 +1,70 @@
+
+package com.amazonaws.mobileconnectors.iot;
+
+import static org.junit.Assert.assertEquals;
+
+import com.amazonaws.util.StringUtils;
+
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+
+public class AWSIotMqttQueueMessageTest {
+
+    AWSIotMqttQueueMessage qMessage;
+    MyTestObject testObject;
+    AWSIotMqttMessageDeliveryCallback mdcb = new AWSIotMqttMessageDeliveryCallback() {
+        @Override
+        public void statusChanged(MessageDeliveryStatus status, Object userData) {
+
+        }
+    };
+
+    @Before
+    public void setUp() {
+        testObject = new MyTestObject(1, "test", 2.0);
+        qMessage = new AWSIotMqttQueueMessage("test-topic",
+                "test-message".getBytes(StringUtils.UTF8),
+                AWSIotMqttQos.QOS0,
+                new PublishMessageUserData(mdcb, testObject));
+    }
+
+    @After
+    public void tearDown() {
+
+    }
+
+    @Test
+    public void testGetTopic() throws Exception {
+        assertEquals("test-topic", qMessage.getTopic());
+    }
+
+    @Test
+    public void testGetMessage() throws Exception {
+        assertEquals("test-message", new String(qMessage.getMessage(), StringUtils.UTF8));
+    }
+
+    @Test
+    public void testGetQos() throws Exception {
+        assertEquals(AWSIotMqttQos.QOS0, qMessage.getQos());
+    }
+
+    @Test
+    public void testGetMessageUserData() throws Exception {
+        assertEquals(mdcb, qMessage.getUserData().getUserCallback());
+        assertEquals(testObject, qMessage.getUserData().getUserData());
+    }
+
+    private class MyTestObject {
+        int i;
+        String s;
+        Double d;
+
+        MyTestObject(int i, String s, Double d) {
+            this.i = i;
+            this.s = s;
+            this.d = d;
+        }
+    }
+
+}
diff --git a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttTopicTest.java b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttTopicTest.java
new file mode 100644
index 0000000000..d1bd7f1d17
--- /dev/null
+++ b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttTopicTest.java
@@ -0,0 +1,61 @@
+
+package com.amazonaws.mobileconnectors.iot;
+
+import static org.junit.Assert.assertEquals;
+
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+
+public class AWSIotMqttTopicTest {
+
+    AWSIotMqttTopic topicModel;
+    AWSIotMqttNewMessageCallback callback1;
+    AWSIotMqttNewMessageCallback callback2;
+
+    @Before
+    public void setUp() throws Exception {
+        topicModel = new AWSIotMqttTopic("test-topic", AWSIotMqttQos.QOS0, callback1);
+    }
+
+    @After
+    public void tearDown() throws Exception {
+
+    }
+
+    @Test
+    public void testGetTopic() throws Exception {
+        assertEquals("test-topic", topicModel.getTopic());
+    }
+
+    @Test
+    public void testSetTopic() throws Exception {
+        topicModel.setTopic("not-test-topic");
+        assertEquals("not-test-topic", topicModel.getTopic());
+        topicModel.setTopic("test-topic");
+    }
+
+    @Test
+    public void testGetQos() throws Exception {
+        assertEquals(AWSIotMqttQos.QOS0, topicModel.getQos());
+    }
+
+    @Test
+    public void testSetQos() throws Exception {
+        topicModel.setQos(AWSIotMqttQos.QOS1);
+        assertEquals(AWSIotMqttQos.QOS1, topicModel.getQos());
+        topicModel.setQos(AWSIotMqttQos.QOS0);
+    }
+
+    @Test
+    public void testGetCallback() throws Exception {
+        assertEquals(callback1, topicModel.getCallback());
+    }
+
+    @Test
+    public void testSetCallback() throws Exception {
+        topicModel.setCallback(callback2);
+        assertEquals(callback2, topicModel.getCallback());
+        topicModel.setCallback(callback1);
+    }
+}
diff --git a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotSslUtilityTest.java b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotSslUtilityTest.java
new file mode 100644
index 0000000000..6c345e82bf
--- /dev/null
+++ b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotSslUtilityTest.java
@@ -0,0 +1,75 @@
+
+package com.amazonaws.mobileconnectors.iot;
+
+import static org.junit.Assert.assertTrue;
+
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.security.KeyPair;
+import java.security.KeyStore;
+
+import javax.net.ssl.SSLSocketFactory;
+
+public class AWSIotSslUtilityTest {
+
+    private final static String TestCert = "-----BEGIN CERTIFICATE-----\n" +
+            "MIIDlTCCAn2gAwIBAgIVAKuR4L6GajQRv1DzXlUFigMoiwzsMA0GCSqGSIb3DQEB\n" +
+            "CwUAME0xSzBJBgNVBAsMQkFtYXpvbiBXZWIgU2VydmljZXMgTz1BbWF6b24uY29t\n" +
+            "IEluYy4gTD1TZWF0dGxlIFNUPVdhc2hpbmd0b24gQz1VUzAeFw0xNTA5MTUwMDEz\n" +
+            "MjhaFw00OTEyMzEyMzU5NTlaMFkxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJXQTEQ\n" +
+            "MA4GA1UEBxMHU2VhdHRsZTEPMA0GA1UEChMGQW1hem9uMQwwCgYDVQQLEwNBV1Mx\n" +
+            "DDAKBgNVBAMTA1NESzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALrx\n" +
+            "n1ZGjBDdasdmuJh8F/KxhMSB/u7f8olGaoPtkvFHkzCf3sXqoHVxzYITzWH8UlmM\n" +
+            "hNJ0CaRfcT/Dmi0PDxPrPQLR1/MjV9WpHTLfI2kA+PI+d4LnnlYQYnQc9wgZIX2c\n" +
+            "+D0mA12By8BRduwM3rDAULmwjjfFX/MLLkDDng+mEIMjXOZnWjMJ3dorSzajVP2C\n" +
+            "bWt1JMRGoSjY2fQVBc2JzU+7y9s9fxMO5329Hne1E8bNVZd+rHJKlJhvIWJCAoya\n" +
+            "NnF4whXMp+UHGPJdhHQCnSPbX5r2c2UdDL/1bftNlX6grCmivuIv6qw+dtA4V7pc\n" +
+            "lsMSEt9zFrVJ6VkZXbUCAwEAAaNgMF4wHwYDVR0jBBgwFoAULXQSP9o80neirjAW\n" +
+            "SlF+yZWjLh0wHQYDVR0OBBYEFCDoMMxiSPyy4D6a5qhg+6FXZtMtMAwGA1UdEwEB\n" +
+            "/wQCMAAwDgYDVR0PAQH/BAQDAgeAMA0GCSqGSIb3DQEBCwUAA4IBAQAtlG5ytjMN\n" +
+            "c95dlafQVhPoAKEJ0JkDYl3ZmbNYHXgTQfG08a8zFQLLECODiiO/5HyNaAI3Pzc3\n" +
+            "M580RijF/D23XUHLCvVxaeZgQnJbs+xmHPIeFxCiGfBXBTET3IZApXW2V92dcZf3\n" +
+            "Pccbfemdl7t7KycuBNszbTsCZygg5sq1NTCF0ZkSGuJfmbjO9YBY2bV8H66pNdCq\n" +
+            "72nhlD7w3fTcfpo8rmz7CzNTVg9bGILUnr7WiaC3nCxsM1EiPH/JRGSKrbA2/96B\n" +
+            "7OWv9idOJbp/fKdub3lqzWwPtMwLWAyM/sevEqQbWOvH3sfPafYYp3iwAQmFdCJG\n" +
+            "0zaDUnQHDFV8\n" +
+            "-----END CERTIFICATE-----";
+
+    private static final String CERT_ID = "unittest";
+    private static final String KEYSTORE_PATH = "./";
+    private static final String KEYSTORE_NAME = "unit_test_keystore";
+    private static final String KEYSTORE_PASSWORD = AWSIotKeystoreHelper.AWS_IOT_INTERNAL_KEYSTORE_PASSWORD;
+
+    @Before
+    public void setUp() throws Exception {
+        // generate keys
+        KeyPair testKP = AWSIotKeystoreHelper.generatePrivateAndPublicKeys();
+
+        // save in keystore
+        AWSIotKeystoreHelper.saveCertificateAndPrivateKey(CERT_ID, TestCert, testKP.getPrivate(),
+                KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+    }
+
+    @After
+    public void tearDown() throws Exception {
+        File keystoreFile = new File(KEYSTORE_PATH, KEYSTORE_NAME);
+        if (keystoreFile.exists()) {
+            keystoreFile.delete();
+        }
+    }
+
+    @Test
+    public void testGetSocketFactory() throws Exception {
+        File keystoreFile = new File(KEYSTORE_PATH, KEYSTORE_NAME);
+        FileInputStream fis = new FileInputStream(keystoreFile);
+        KeyStore testKeystore = KeyStore.getInstance(KeyStore.getDefaultType());
+        testKeystore.load(fis,
+                AWSIotKeystoreHelper.AWS_IOT_INTERNAL_KEYSTORE_PASSWORD.toCharArray());
+        SSLSocketFactory factory = AWSIotSslUtility.getSocketFactoryWithKeyStore(testKeystore);
+        assertTrue(factory instanceof AWSIotTLSSocketFactory);
+    }
+}
diff --git a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/Asn1ObjectTest.java b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/Asn1ObjectTest.java
new file mode 100644
index 0000000000..0ed3bb0e18
--- /dev/null
+++ b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/Asn1ObjectTest.java
@@ -0,0 +1,112 @@
+package com.amazonaws.mobileconnectors.iot;
+
+import org.junit.Test;
+
+import java.io.IOException;
+import java.math.BigInteger;
+import java.util.Arrays;
+
+import static org.junit.Assert.*;
+
+public class Asn1ObjectTest {
+
+    private static final byte DER_CONSTRUCTED = 0x20;
+
+    @Test
+    public void testCreationDerConstructed() throws Exception {
+        byte[] testValue = {0x00, 0x01, 0x02, 0x03, 0x04};
+        Asn1Object asn1Object = new Asn1Object(DerParser.NUMERIC_STRING | DER_CONSTRUCTED, 5, testValue);
+        assertEquals(DerParser.NUMERIC_STRING, asn1Object.getType());
+        assertEquals(5, asn1Object.getLength());
+        assertEquals(testValue, asn1Object.getValue());
+        assertTrue(asn1Object.isConstructed());
+    }
+
+    @Test
+    public void testCreationDerNotConstructed() throws Exception {
+        byte[] testValue = {0x00, 0x01, 0x02, 0x03, 0x04};
+        Asn1Object asn1Object = new Asn1Object(DerParser.NUMERIC_STRING, 5, testValue);
+        assertEquals(DerParser.NUMERIC_STRING, asn1Object.getType());
+        assertEquals(5, asn1Object.getLength());
+        assertEquals(testValue, asn1Object.getValue());
+        assertFalse(asn1Object.isConstructed());
+    }
+
+    @Test
+    public void testGetParser() throws Exception {
+        byte[] testValue = {0x00, 0x01, 0x02, 0x03, 0x04};
+        Asn1Object asn1Object = new Asn1Object(DerParser.NUMERIC_STRING | DER_CONSTRUCTED, 5, testValue);
+
+        assertTrue(asn1Object.getParser() instanceof DerParser);
+    }
+
+    @Test(expected=IOException.class)
+    public void testGetParserNotConstructed() throws Exception {
+        byte[] testValue = {0x00, 0x01, 0x02, 0x03, 0x04};
+        Asn1Object asn1Object = new Asn1Object(DerParser.NUMERIC_STRING, 5, testValue);
+
+        asn1Object.getParser();
+    }
+
+    @Test
+    public void testGetInteger() throws Exception {
+        byte[] testValue = {0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
+        Asn1Object asn1Object = new Asn1Object(DerParser.INTEGER, 8, testValue);
+
+        BigInteger testBigInteger = asn1Object.getInteger();
+        assertTrue(Arrays.equals(testValue, testBigInteger.toByteArray()));
+    }
+
+    @Test(expected=IOException.class)
+    public void testGetIntegerNotInteger() throws Exception {
+        byte[] testValue = {0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
+        Asn1Object asn1Object = new Asn1Object(DerParser.GENERAL_STRING, 8, testValue);
+
+        BigInteger testBigInteger = asn1Object.getInteger();
+    }
+
+    @Test
+    public void testGetStringType1() throws Exception {
+        final String TEST_STRING = "my fancy test string";
+
+        Asn1Object asn1Object = new Asn1Object(DerParser.GENERAL_STRING, TEST_STRING.length(), TEST_STRING.getBytes("ISO-8859-1"));
+
+        assertEquals(TEST_STRING, asn1Object.getString());
+    }
+
+    @Test
+    public void testGetStringType2() throws Exception {
+        final String TEST_STRING = "my fancy test string";
+
+        Asn1Object asn1Object = new Asn1Object(DerParser.BMP_STRING, TEST_STRING.length(), TEST_STRING.getBytes("UTF-16BE"));
+
+        assertEquals(TEST_STRING, asn1Object.getString());
+    }
+
+    @Test
+    public void testGetStringType3() throws Exception {
+        final String TEST_STRING = "my fancy test string";
+
+        Asn1Object asn1Object = new Asn1Object(DerParser.UTF8_STRING, TEST_STRING.length(), TEST_STRING.getBytes("UTF-8"));
+
+        assertEquals(TEST_STRING, asn1Object.getString());
+    }
+
+    @Test(expected=IOException.class)
+    public void testGetStringBad1() throws Exception {
+        final String TEST_STRING = "my fancy test string";
+
+        Asn1Object asn1Object = new Asn1Object(DerParser.UNIVERSAL_STRING, TEST_STRING.length(), TEST_STRING.getBytes());
+
+        asn1Object.getString();
+    }
+
+    @Test(expected=IOException.class)
+    public void testGetStringBad2() throws Exception {
+        final String TEST_STRING = "my fancy test string";
+
+        Asn1Object asn1Object = new Asn1Object(DerParser.INTEGER, TEST_STRING.length(), TEST_STRING.getBytes());
+
+        asn1Object.getString();
+    }
+}
\ No newline at end of file
diff --git a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AwsIotEndpointUtilityTest.java b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AwsIotEndpointUtilityTest.java
new file mode 100644
index 0000000000..76dc0f63e8
--- /dev/null
+++ b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AwsIotEndpointUtilityTest.java
@@ -0,0 +1,77 @@
+package com.amazonaws.mobileconnectors.iot;
+
+import com.amazonaws.regions.Region;
+import com.amazonaws.regions.Regions;
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+public class AwsIotEndpointUtilityTest {
+
+    @Test
+    public void testGetRegionFromCustomIotEndpoint() throws Exception {
+        String testEndpoint = "ABCDEFG.iot.us-east-1.amazonaws.com";
+        assertEquals(Region.getRegion(Regions.US_EAST_1), AwsIotEndpointUtility.getRegionFromIotEndpoint(testEndpoint));
+    }
+
+    @Test
+    public void testGetRegionFromCustomIotEndpointWithPort() throws Exception {
+        String testEndpoint = "ABCDEFG.iot.us-east-1.amazonaws.com:443";
+        assertEquals(Region.getRegion(Regions.US_EAST_1), AwsIotEndpointUtility.getRegionFromIotEndpoint(testEndpoint));
+    }
+
+    @Test(expected=IllegalArgumentException.class)
+    public void testGetRegionFromCustomIotEndpointBadRegion1() throws Exception {
+        String testEndpoint = "ABCDEFG.iot.us-east.amazonaws.com";
+        assertEquals(Region.getRegion(Regions.US_EAST_1), AwsIotEndpointUtility.getRegionFromIotEndpoint(testEndpoint));
+    }
+
+    @Test(expected=IllegalArgumentException.class)
+    public void testGetRegionFromCustomIotEndpointBadRegion2() throws Exception {
+        String testEndpoint = "ABCDEFG.iot.us-east-9.amazonaws.com";
+        assertEquals(Region.getRegion(Regions.US_EAST_1), AwsIotEndpointUtility.getRegionFromIotEndpoint(testEndpoint));
+    }
+
+    @Test(expected=IllegalArgumentException.class)
+    public void testGetRegionFromCustomIotEndpointBadRegion3() throws Exception {
+        String testEndpoint = "ABCDEFG.iot.us-central-1.amazonaws.com";
+        assertEquals(Region.getRegion(Regions.US_EAST_1), AwsIotEndpointUtility.getRegionFromIotEndpoint(testEndpoint));
+    }
+
+    @Test
+    public void testGetRegionFromDataIotEndpointWithPort() throws Exception {
+        String testEndpoint = "data.iot.us-east-1.amazonaws.com:443";
+        assertEquals(Region.getRegion(Regions.US_EAST_1), AwsIotEndpointUtility.getRegionFromIotEndpoint(testEndpoint));
+    }
+
+    @Test(expected=IllegalArgumentException.class)
+    public void testGetRegionFromCustomIotEndpointNoPrefix() throws Exception {
+        String testEndpoint = "iot.us-east-1.amazonaws.com";
+        AwsIotEndpointUtility.getRegionFromIotEndpoint(testEndpoint);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void testRegionFromBadEndpointMissingCN() throws Exception {
+        String testEndpoint = "random.ats.iot.cn-north-1.amazonaws.com";
+        AwsIotEndpointUtility.getRegionFromIotEndpoint(testEndpoint);
+    }
+
+    @Test
+    public void testRegionFromCNEndpoint() throws Exception {
+        String testEndpoint = "random.iot.cn-north-1.amazonaws.com.cn";
+        assertEquals(Region.getRegion(Regions.CN_NORTH_1), AwsIotEndpointUtility.getRegionFromIotEndpoint(testEndpoint));
+    }
+
+    @Test
+    public void testRegionFromCNATSEndpoint() throws Exception {
+        String testEndpoint = "random.ats.iot.cn-north-1.amazonaws.com.cn";
+        assertEquals(Region.getRegion(Regions.CN_NORTH_1), AwsIotEndpointUtility.getRegionFromIotEndpoint(testEndpoint));
+        assertEquals("amazonaws.com.cn", AwsIotEndpointUtility.getRegionFromIotEndpoint(testEndpoint).getDomain());
+    }
+
+    @Test (expected = IllegalArgumentException.class)
+    public void testEndpointTooLongShouldThrowException() throws Exception {
+        String longEndpoint = "long.iot.cn-north-1.amazonaws.com.cn.long";
+        AwsIotEndpointUtility.getRegionFromIotEndpoint(longEndpoint);
+    }
+}
diff --git a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/IntegrationTestBase.java b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/IntegrationTestBase.java
new file mode 100644
index 0000000000..3a3f808e26
--- /dev/null
+++ b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/IntegrationTestBase.java
@@ -0,0 +1,22 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at:
+ *
+ *    http://aws.amazon.com/apache2.0
+ *
+ * This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
+ * OR CONDITIONS OF ANY KIND, either express or implied. See the
+ * License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.amazonaws.mobileconnectors.iot;
+
+public class IntegrationTestBase {
+
+    // testing credentials constants
+    protected static final String IDENTITY_POOL_ID = "redacted-iot-identity-pool";
+}
diff --git a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/MockDeliveryToken.java b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/MockDeliveryToken.java
new file mode 100644
index 0000000000..1843877ec3
--- /dev/null
+++ b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/MockDeliveryToken.java
@@ -0,0 +1,23 @@
+package com.amazonaws.mobileconnectors.iot;
+
+import org.eclipse.paho.client.mqttv3.IMqttDeliveryToken;
+import org.eclipse.paho.client.mqttv3.MqttException;
+import org.eclipse.paho.client.mqttv3.MqttMessage;
+import org.eclipse.paho.client.mqttv3.MqttToken;
+import org.eclipse.paho.client.mqttv3.internal.Token;
+
+public class MockDeliveryToken extends MqttToken implements IMqttDeliveryToken {
+
+    public MockDeliveryToken() {
+        super();
+        internalTok = new Token("unittest");
+    }
+
+    public MqttMessage getMessage() throws MqttException {
+        return internalTok.getMessage();
+    }
+
+    protected void setMessage(MqttMessage msg) {
+        internalTok.setMessage(msg);
+    }
+}
diff --git a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/MockMqttClient.java b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/MockMqttClient.java
new file mode 100644
index 0000000000..713a866372
--- /dev/null
+++ b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/MockMqttClient.java
@@ -0,0 +1,136 @@
+
+package com.amazonaws.mobileconnectors.iot;
+
+import org.eclipse.paho.client.mqttv3.*;
+
+import java.util.HashMap;
+
+public class MockMqttClient extends MqttAsyncClient {
+    public int connectCalls = 0;
+    public int publishCalls = 0;
+    public int subscribeCalls = 0;
+    public int unsubscribeCalls = 0;
+    public int disconnectCalls = 0;
+    public MqttConnectOptions mostRecentOptions;
+    public String mostRecentPublishTopic;
+    public byte[] mostRecentPublishPayload;
+    public int mostRecentPublishQoS;
+    public boolean mostRecentPublishRetained;
+    public Object mostRecentPublishUserContext;
+    public IMqttActionListener mostRecentPublishCallback;
+    public boolean isConnected;
+    public MqttCallback mockCallback;
+    public IMqttActionListener mockConnectionStatusCallback;
+    public boolean throwsExceptionOnConnect;
+    public MqttException connectException;
+    public boolean throwsExceptionOnPublish;
+    public boolean throwsExceptionOnSubscribe;
+    public boolean throwsExceptionOnUnsubscribe;
+    public boolean throwsExceptionOnDisconnect;
+
+    public HashMap<String, Integer> mockSubscriptions;
+
+    IMqttToken testToken = new MqttToken("unit-test");
+    IMqttDeliveryToken testDeliveryToken = new MqttDeliveryToken();
+
+    MockMqttClient() throws MqttException {
+        super("local://mockendpoint.example.com", "mock-id");
+        mockSubscriptions = new HashMap<String, Integer>();
+        isConnected = false;
+        throwsExceptionOnConnect = false;
+        connectException = null;
+        throwsExceptionOnPublish = false;
+        throwsExceptionOnSubscribe = false;
+        throwsExceptionOnUnsubscribe = false;
+        throwsExceptionOnDisconnect = false;
+    }
+
+    public IMqttToken connect(MqttConnectOptions options, Object userContext,
+            IMqttActionListener callback) throws MqttException, MqttSecurityException {
+        if (throwsExceptionOnConnect && connectException != null) {
+            throw connectException;
+        }
+        ++connectCalls;
+        mostRecentOptions = options;
+        mockConnectionStatusCallback = callback;
+        return testToken;
+    }
+
+    public IMqttToken disconnect(long quiesceTimeout) throws MqttException {
+        if (throwsExceptionOnDisconnect) {
+            throw new MqttException(MqttException.REASON_CODE_CLIENT_EXCEPTION);
+        }
+        ++disconnectCalls;
+        return testToken;
+    }
+
+    public IMqttDeliveryToken publish(String topic, byte[] payload, int qos, boolean retained)
+            throws MqttException {
+        if (throwsExceptionOnPublish) {
+            throw new MqttException(MqttException.REASON_CODE_CLIENT_EXCEPTION);
+        }
+        ++publishCalls;
+        mostRecentPublishTopic = topic;
+        mostRecentPublishPayload = payload;
+        mostRecentPublishQoS = qos;
+        mostRecentPublishRetained = retained;
+        return testDeliveryToken;
+    }
+
+    public IMqttDeliveryToken publish(String topic, byte[] payload, int qos, boolean retained,
+            Object userContext, IMqttActionListener callback)
+            throws MqttException {
+        if (throwsExceptionOnPublish) {
+            throw new MqttException(MqttException.REASON_CODE_CLIENT_EXCEPTION);
+        }
+        ++publishCalls;
+        mostRecentPublishTopic = topic;
+        mostRecentPublishPayload = payload;
+        mostRecentPublishQoS = qos;
+        mostRecentPublishRetained = retained;
+        mostRecentPublishUserContext = userContext;
+        mostRecentPublishCallback = callback;
+        return testDeliveryToken;
+    }
+
+    public IMqttToken subscribe(String topicFilter, int qos) throws MqttException {
+        if (throwsExceptionOnSubscribe) {
+            throw new MqttException(MqttException.REASON_CODE_CLIENT_EXCEPTION);
+        }
+        ++subscribeCalls;
+        mockSubscriptions.put(topicFilter, qos);
+        return testToken;
+    }
+
+    public IMqttToken unsubscribe(String topicFilter) throws MqttException {
+        if (throwsExceptionOnUnsubscribe) {
+            throw new MqttException(MqttException.REASON_CODE_CLIENT_EXCEPTION);
+        }
+        ++unsubscribeCalls;
+        mockSubscriptions.remove(topicFilter);
+        return testToken;
+    }
+
+    public boolean isConnected() {
+        return isConnected;
+    }
+
+    public void setCallback(MqttCallback callback) {
+        mockCallback = callback;
+    }
+
+    public void mockConnectSuccess() {
+        mockConnectionStatusCallback.onSuccess(testToken);
+        isConnected = true;
+    }
+
+    public void mockConnectFail() {
+        mockConnectionStatusCallback.onFailure(testToken, new Exception("fail"));
+        isConnected = false;
+    }
+
+    public void mockDisconnect() {
+        isConnected = false;
+        mockCallback.connectionLost(new Exception("disconnect"));
+    }
+}
diff --git a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/MqttManagerIntegrationTest.java b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/MqttManagerIntegrationTest.java
new file mode 100644
index 0000000000..6836cd4eb7
--- /dev/null
+++ b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/MqttManagerIntegrationTest.java
@@ -0,0 +1,1202 @@
+/*
+ * Copyright 2010-2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at:
+ *
+ *    http://aws.amazon.com/apache2.0
+ *
+ * This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
+ * OR CONDITIONS OF ANY KIND, either express or implied. See the
+ * License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.amazonaws.mobileconnectors.iot;
+
+import java.io.File;
+import java.security.KeyStore;
+import java.util.Arrays;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Random;
+import java.util.concurrent.CountDownLatch;
+
+import android.app.Activity;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.auth.AWSCredentialsProvider;
+import com.amazonaws.auth.CognitoCachingCredentialsProvider;
+import com.amazonaws.regions.Region;
+import com.amazonaws.regions.Regions;
+import com.amazonaws.services.iot.AWSIotClient;
+import com.amazonaws.services.iot.model.AttachPrincipalPolicyRequest;
+import com.amazonaws.services.iot.model.CertificateStatus;
+import com.amazonaws.services.iot.model.CreateKeysAndCertificateRequest;
+import com.amazonaws.services.iot.model.CreateKeysAndCertificateResult;
+import com.amazonaws.services.iot.model.CreatePolicyRequest;
+import com.amazonaws.services.iot.model.CreatePolicyResult;
+import com.amazonaws.services.iot.model.DeleteCertificateRequest;
+import com.amazonaws.services.iot.model.DeletePolicyRequest;
+import com.amazonaws.services.iot.model.DescribeEndpointRequest;
+import com.amazonaws.services.iot.model.DescribeEndpointResult;
+import com.amazonaws.services.iot.model.DetachPrincipalPolicyRequest;
+import com.amazonaws.services.iot.model.UpdateCertificateRequest;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Ignore;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.Robolectric;
+import org.robolectric.RobolectricTestRunner;
+import org.robolectric.annotation.Config;
+
+import static org.junit.Assert.*;
+
+@RunWith(RobolectricTestRunner.class)
+@Config(manifest=Config.NONE, emulateSdk = 16, reportSdk = 16)
+public class MqttManagerIntegrationTest extends IntegrationTestBase {
+
+    private static final Integer ONE_TWENTY_KB = 120000;
+
+    private static final String KEYSTORE_PATH = "./";
+    private static final String KEYSTORE_NAME = "integration_test.bks";
+    private static final String KEYSTORE_PASSWORD = "test password";
+    private static final String IOT_POLICY_NAME = "android-integration-test";
+
+    private static boolean initCompleted = false;
+
+    private static AWSCredentialsProvider credentialsProvider;
+    private static String endpointPrefix;
+    private static AWSIotClient iotClient;
+
+    private static Random r;
+
+    @Before
+    public void setUp() throws Exception {
+        if (!initCompleted) {
+
+            r = new Random();
+
+            credentialsProvider = new CognitoCachingCredentialsProvider(new Activity(), IDENTITY_POOL_ID, Regions.US_EAST_1);
+
+            iotClient = new AWSIotClient(credentialsProvider);
+
+            DescribeEndpointRequest request = new DescribeEndpointRequest();
+            DescribeEndpointResult result = iotClient.describeEndpoint(request);
+            endpointPrefix = result.getEndpointAddress().split("\\.")[0];
+
+            initCompleted = true;
+        }
+    }
+
+    @After
+    public void tearDown() throws Exception {
+        File keystoreFile = new File(KEYSTORE_PATH, KEYSTORE_NAME);
+        if (keystoreFile.exists()) {
+            keystoreFile.delete();
+        }
+    }
+
+    @Test
+    public void mqttConnect_USEast1_ATS_Endpoint() throws Exception {
+        DescribeEndpointRequest request = new DescribeEndpointRequest();
+        request.setEndpointType("iot:Data-ATS");
+        DescribeEndpointResult result = iotClient.describeEndpoint(request);
+        endpointPrefix = result.getEndpointAddress().split("\\.")[0];
+        System.out.println("Endpoint prefix: " + endpointPrefix);
+        
+        String endpoint = endpointPrefix + ".iot." + Region.getRegion(Regions.US_EAST_1).getName() + ".amazonaws.com";
+        System.out.println("Endpoint: " + endpoint);
+        
+        AWSIotMqttManager mqttManager = new AWSIotMqttManager("int-test-w-certs", endpoint);
+        mqttConnect(mqttManager);
+    }
+
+
+    @Test
+    public void mqttConnect_USEast1_Endpoint() throws Exception {
+        DescribeEndpointRequest request = new DescribeEndpointRequest();
+        request.setEndpointType("iot:Data");
+        DescribeEndpointResult result = iotClient.describeEndpoint(request);
+        endpointPrefix = result.getEndpointAddress().split("\\.")[0];
+        System.out.println("Endpoint prefix: " + endpointPrefix);
+        
+        String endpoint = endpointPrefix + ".iot." + Region.getRegion(Regions.US_EAST_1).getName() + ".amazonaws.com";
+        System.out.println("Endpoint: " + endpoint);
+        
+        AWSIotMqttManager mqttManager = new AWSIotMqttManager("int-test-w-certs", endpoint);
+        mqttConnect(mqttManager);
+    }
+
+    @Test
+    public void mqttConnect_USEast1_EndpointPrefix_Region() throws Exception {
+        DescribeEndpointRequest request = new DescribeEndpointRequest();
+        request.setEndpointType("iot:Data");
+        DescribeEndpointResult result = iotClient.describeEndpoint(request);
+        endpointPrefix = result.getEndpointAddress().split("\\.")[0];
+        System.out.println("Endpoint prefix: " + endpointPrefix);
+        
+        AWSIotMqttManager mqttManager = new AWSIotMqttManager("int-test-w-certs", 
+            Region.getRegion(Regions.US_EAST_1), 
+            endpointPrefix);
+        mqttConnect(mqttManager);
+    }
+
+    @Ignore
+    @Test
+    public void mqttConnectMalformedEndpoints() throws Exception {
+        DescribeEndpointRequest request = new DescribeEndpointRequest();
+        request.setEndpointType("iot:Data");
+        DescribeEndpointResult result = iotClient.describeEndpoint(request);
+        endpointPrefix = result.getEndpointAddress().split("\\.")[0];
+        System.out.println("Endpoint prefix: " + endpointPrefix);
+
+        DescribeEndpointRequest atsRequest = new DescribeEndpointRequest();
+        atsRequest.setEndpointType("iot:Data-ATS");
+        DescribeEndpointResult atsResult = iotClient.describeEndpoint(atsRequest);
+        String atsEndpointPrefix = atsResult.getEndpointAddress().split("\\.")[0];
+        String atsEndpointPrefixWithDot = atsEndpointPrefix.replaceAll("-", ".");
+        System.out.println("ATS Endpoint prefix: " + atsEndpointPrefix);
+
+        final String[] malformedEndpoints = {
+            endpointPrefix + "." + Region.getRegion(Regions.CN_NORTH_1).getName() + ".amazonaws.com.cn",
+            endpointPrefix + ".iot." + Region.getRegion(Regions.CN_NORTH_1).getName() + ".amazonaws.com",
+            endpointPrefix + ".iot." + Region.getRegion(Regions.US_EAST_1).getName() + ".amazonaws.com.cn",
+            endpointPrefix + "." + Region.getRegion(Regions.US_EAST_1).getName() + ".amazonaws.com.cn",
+            atsEndpointPrefix + "." + Region.getRegion(Regions.CN_NORTH_1).getName() + ".amazonaws.com.cn",
+            atsEndpointPrefix + ".iot." + Region.getRegion(Regions.CN_NORTH_1).getName() + ".amazonaws.com",
+            atsEndpointPrefix + ".iot." + Region.getRegion(Regions.US_EAST_1).getName() + ".amazonaws.com.cn",
+            atsEndpointPrefix + "." + Region.getRegion(Regions.US_EAST_1).getName() + ".amazonaws.com.cn",
+            atsEndpointPrefixWithDot + "." + Region.getRegion(Regions.CN_NORTH_1).getName() + ".amazonaws.com.cn",
+            atsEndpointPrefixWithDot + ".iot." + Region.getRegion(Regions.CN_NORTH_1).getName() + ".amazonaws.com",
+            atsEndpointPrefixWithDot + ".iot." + Region.getRegion(Regions.US_EAST_1).getName() + ".amazonaws.com.cn",
+            atsEndpointPrefixWithDot + "." + Region.getRegion(Regions.US_EAST_1).getName() + ".amazonaws.com.cn"
+        };
+        
+        for (final String endpoint : malformedEndpoints) {
+            try {
+                System.out.println("Trying to connect to endpoint: " + endpoint);
+                AWSIotMqttManager mqttManager = new AWSIotMqttManager("int-test-w-certs", endpoint);
+                mqttConnect(mqttManager);
+            } catch (Exception ex) {
+                System.out.println("Received Exception for endpoint: " + 
+                    endpoint + "; exception: " + ex.getMessage());
+                continue;
+            }
+            assertTrue("Exception not thrown for a malformed endpoint while connecting.", false);
+        }
+    }
+
+    private void mqttConnect(final AWSIotMqttManager mqttManager) throws Exception {
+
+        final ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus> statuses = new ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus>();
+        final ArrayList<String> messages = new ArrayList<String>();
+        final ArrayList<AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus> cbStatuses = new ArrayList<AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus>();
+
+        // create a new certificate and private key
+        CreateKeysAndCertificateRequest certRequest = new CreateKeysAndCertificateRequest();
+        certRequest.setSetAsActive(true);
+        CreateKeysAndCertificateResult certResult = iotClient.createKeysAndCertificate(certRequest);
+        // save certificate and private key in a keystore
+        AWSIotKeystoreHelper.saveCertificateAndPrivateKey(certResult.getCertificateId(),
+                certResult.getCertificatePem(),
+                certResult.getKeyPair().getPrivateKey(),
+                KEYSTORE_PATH,
+                KEYSTORE_NAME,
+                KEYSTORE_PASSWORD);
+
+        // create an IoT policy allowing all actions in IoT
+        String policyDocument;
+        CreatePolicyRequest createPolicyRequest = null;
+        CreatePolicyResult createPolicyResult = null;
+
+        try {
+            // create an IoT policy allowing all actions in IoT
+            policyDocument = "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"iot:*\",\"Resource\":\"*\",\"Effect\":\"Allow\"}]}";
+            createPolicyRequest = new CreatePolicyRequest();
+            createPolicyRequest.setPolicyName(IOT_POLICY_NAME);
+            createPolicyRequest.setPolicyDocument(policyDocument);
+            createPolicyResult = iotClient.createPolicy(createPolicyRequest);
+        }  catch (Exception ex) {
+            assertTrue("Error in creating the policy. ",
+                ex.getMessage().startsWith("Policy cannot be created - name already exists "));
+        }
+
+        // attach the policy to the new cert
+        AttachPrincipalPolicyRequest policyRequest = new AttachPrincipalPolicyRequest();
+        policyRequest.setPolicyName(createPolicyResult.getPolicyName());
+        policyRequest.setPrincipal(certResult.getCertificateArn());
+        iotClient.attachPrincipalPolicy(policyRequest);
+        // retrieve the keystore
+        KeyStore ks = AWSIotKeystoreHelper.getIotKeystore(certResult.getCertificateId(), KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        // connect to AWS IoT using keystore
+        mqttManager.connect(ks, new AWSIotMqttClientStatusCallback() {
+            @Override
+            public void onStatusChanged(AWSIotMqttClientStatus status, Throwable throwable) {
+                statuses.add(status);
+            }
+        });
+
+        // wait for connection
+        Thread.sleep(3000);
+
+        // subscribe to MQTT topic, new messages are captured in list
+        mqttManager.subscribeToTopic("sdk/test/integration/cert", AWSIotMqttQos.QOS1, new AWSIotMqttNewMessageCallback() {
+            @Override
+            public void onMessageArrived(String topic, byte[] data) {
+                messages.add(new String(data));
+            }
+        });
+
+        // ensure subscribe propagates
+        Thread.sleep(2000);
+
+        final HashMap<String, Integer> tokenTable = new HashMap<String, Integer>();
+
+        // publish 20 messages
+        for (int i=0; i<20; ++i) {
+            tokenTable.put("integration-test-" + i, 0);
+            mqttManager.publishString("integration-test-" + i, "sdk/test/integration/cert",
+                    AWSIotMqttQos.QOS1,
+                    new AWSIotMqttMessageDeliveryCallback() {
+                        @Override
+                        public void statusChanged(MessageDeliveryStatus status, Object userData) {
+                            cbStatuses.add(status);
+                            if (userData instanceof String) {
+                                tokenTable.put((String)userData, 1);
+                            }
+                        }
+                    },
+                    "integration-test-" + i);
+            Thread.sleep(250);
+        }
+
+        Thread.sleep(1000);
+
+        // disconnect
+        mqttManager.disconnect();
+
+        // detach policy
+        DetachPrincipalPolicyRequest detachPrincipalPolicyRequest = new DetachPrincipalPolicyRequest();
+        detachPrincipalPolicyRequest.setPrincipal(certResult.getCertificateArn());
+        detachPrincipalPolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
+        iotClient.detachPrincipalPolicy(detachPrincipalPolicyRequest);
+        // delete policy
+        DeletePolicyRequest deletePolicyRequest = new DeletePolicyRequest();
+        deletePolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
+        iotClient.deletePolicy(deletePolicyRequest);
+        // set cert inactive
+        UpdateCertificateRequest updateCertificateRequest = new UpdateCertificateRequest();
+        updateCertificateRequest.setCertificateId(certResult.getCertificateId());
+        updateCertificateRequest.setNewStatus(CertificateStatus.INACTIVE);
+        iotClient.updateCertificate(updateCertificateRequest);
+        // delete cert
+        DeleteCertificateRequest deleteCertificateRequest = new DeleteCertificateRequest();
+        deleteCertificateRequest.setCertificateId(certResult.getCertificateId());
+        iotClient.deleteCertificate(deleteCertificateRequest);
+
+        // verify connection events emitted
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, statuses.get(0));
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, statuses.get(1));
+
+        // verify messages arrived on subscribed topic
+        assertEquals(20, messages.size());
+        int msgnum[] = new int[20];
+        for (String m : messages) {
+            assertTrue(m.contains("integration-test-"));
+            ++msgnum[Integer.parseInt(m.split("-")[2])];
+        }
+        for (int i : msgnum) {
+            assertEquals(1, i);
+        }
+
+        // verify callbacks
+        for (AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus status : cbStatuses) {
+            assertEquals(AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus.Success, status);
+        }
+
+        // verify all tokens were received
+        for (int i : tokenTable.values()) {
+            assertEquals(1, i);
+        }
+    }
+
+    @Test
+    public void mqttCertificate() throws Exception {
+
+        final ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus> statuses = new ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus>();
+        final ArrayList<String> messages = new ArrayList<String>();
+
+        AWSIotMqttManager mqttManager = new AWSIotMqttManager("int-test-w-certs", Region.getRegion(Regions.US_EAST_1), endpointPrefix);
+
+        // create a new certificate and private key
+        CreateKeysAndCertificateRequest certRequest = new CreateKeysAndCertificateRequest();
+        certRequest.setSetAsActive(true);
+        CreateKeysAndCertificateResult certResult = iotClient.createKeysAndCertificate(certRequest);
+        // save certificate and private key in a keystore
+        AWSIotKeystoreHelper.saveCertificateAndPrivateKey(certResult.getCertificateId(),
+                certResult.getCertificatePem(),
+                certResult.getKeyPair().getPrivateKey(),
+                KEYSTORE_PATH,
+                KEYSTORE_NAME,
+                KEYSTORE_PASSWORD);
+        
+        // create an IoT policy allowing all actions in IoT
+        String policyDocument;
+        CreatePolicyRequest createPolicyRequest = null;
+        CreatePolicyResult createPolicyResult = null;
+
+        try {
+            // create an IoT policy allowing all actions in IoT
+            policyDocument = "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"iot:*\",\"Resource\":\"*\",\"Effect\":\"Allow\"}]}";
+            createPolicyRequest = new CreatePolicyRequest();
+            createPolicyRequest.setPolicyName(IOT_POLICY_NAME);
+            createPolicyRequest.setPolicyDocument(policyDocument);
+            createPolicyResult = iotClient.createPolicy(createPolicyRequest);
+        }  catch (Exception ex) {
+            assertTrue("Error in creating the policy. ",
+                ex.getMessage().startsWith("Policy cannot be created - name already exists "));
+        }
+
+        // attach the policy to the new cert
+        AttachPrincipalPolicyRequest policyRequest = new AttachPrincipalPolicyRequest();
+        policyRequest.setPolicyName(createPolicyResult.getPolicyName());
+        policyRequest.setPrincipal(certResult.getCertificateArn());
+        iotClient.attachPrincipalPolicy(policyRequest);
+        // retrieve the keystore
+        KeyStore ks = AWSIotKeystoreHelper.getIotKeystore(certResult.getCertificateId(), KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        // connect to AWS IoT using keystore
+        mqttManager.connect(ks, new AWSIotMqttClientStatusCallback() {
+            @Override
+            public void onStatusChanged(AWSIotMqttClientStatus status, Throwable throwable) {
+                statuses.add(status);
+            }
+        });
+
+        // wait for connection
+        Thread.sleep(3000);
+
+        // subscribe to MQTT topic, new messages are captured in list
+        mqttManager.subscribeToTopic("sdk/test/integration/cert", AWSIotMqttQos.QOS0, new AWSIotMqttNewMessageCallback() {
+            @Override
+            public void onMessageArrived(String topic, byte[] data) {
+                messages.add(new String(data));
+            }
+        });
+
+        // ensure subscribe propagates
+        Thread.sleep(2000);
+
+        // publish 20 messages
+        for (int i=0; i<20; ++i) {
+            mqttManager.publishString("integration test " + i, "sdk/test/integration/cert", AWSIotMqttQos.QOS0);
+            Thread.sleep(250);
+        }
+
+        Thread.sleep(1000);
+
+        // disconnect
+        mqttManager.disconnect();
+
+        // detach policy
+        DetachPrincipalPolicyRequest detachPrincipalPolicyRequest = new DetachPrincipalPolicyRequest();
+        detachPrincipalPolicyRequest.setPrincipal(certResult.getCertificateArn());
+        detachPrincipalPolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
+        iotClient.detachPrincipalPolicy(detachPrincipalPolicyRequest);
+        // delete policy
+        DeletePolicyRequest deletePolicyRequest = new DeletePolicyRequest();
+        deletePolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
+        iotClient.deletePolicy(deletePolicyRequest);
+        // set cert inactive
+        UpdateCertificateRequest updateCertificateRequest = new UpdateCertificateRequest();
+        updateCertificateRequest.setCertificateId(certResult.getCertificateId());
+        updateCertificateRequest.setNewStatus(CertificateStatus.INACTIVE);
+        iotClient.updateCertificate(updateCertificateRequest);
+        // delete cert
+        DeleteCertificateRequest deleteCertificateRequest = new DeleteCertificateRequest();
+        deleteCertificateRequest.setCertificateId(certResult.getCertificateId());
+        iotClient.deleteCertificate(deleteCertificateRequest);
+
+        // verify connection events emitted
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, statuses.get(0));
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, statuses.get(1));
+
+        // verify messages arrived on subscribed topic
+        assertEquals(20, messages.size());
+        int msgnum[] = new int[20];
+        for (String m : messages) {
+            assertTrue(m.contains("integration test "));
+            ++msgnum[Integer.parseInt(m.split(" ")[2])];
+        }
+        for (int i : msgnum) {
+            assertEquals(1, i);
+        }
+    }
+
+    @Test
+    public void mqttCertificateQos1WithCallbacks() throws Exception {
+
+        final ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus> statuses = new ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus>();
+        final ArrayList<String> messages = new ArrayList<String>();
+        final ArrayList<AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus> cbStatuses = new ArrayList<AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus>();
+
+        String endpoint = endpointPrefix + ".iot." + Region.getRegion(Regions.US_EAST_1).getName() + ".amazonaws.com";
+        AWSIotMqttManager mqttManager = new AWSIotMqttManager("int-test-w-certs", endpoint);
+
+        // create a new certificate and private key
+        CreateKeysAndCertificateRequest certRequest = new CreateKeysAndCertificateRequest();
+        certRequest.setSetAsActive(true);
+        CreateKeysAndCertificateResult certResult = iotClient.createKeysAndCertificate(certRequest);
+        // save certificate and private key in a keystore
+        AWSIotKeystoreHelper.saveCertificateAndPrivateKey(certResult.getCertificateId(),
+                certResult.getCertificatePem(),
+                certResult.getKeyPair().getPrivateKey(),
+                KEYSTORE_PATH,
+                KEYSTORE_NAME,
+                KEYSTORE_PASSWORD);
+        
+        // create an IoT policy allowing all actions in IoT
+        String policyDocument;
+        CreatePolicyRequest createPolicyRequest = null;
+        CreatePolicyResult createPolicyResult = null;
+
+        try {
+            // create an IoT policy allowing all actions in IoT
+            policyDocument = "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"iot:*\",\"Resource\":\"*\",\"Effect\":\"Allow\"}]}";
+            createPolicyRequest = new CreatePolicyRequest();
+            createPolicyRequest.setPolicyName(IOT_POLICY_NAME);
+            createPolicyRequest.setPolicyDocument(policyDocument);
+            createPolicyResult = iotClient.createPolicy(createPolicyRequest);
+        }  catch (Exception ex) {
+            assertTrue("Error in creating the policy. ",
+                ex.getMessage().startsWith("Policy cannot be created - name already exists "));
+        }
+
+        // attach the policy to the new cert
+        AttachPrincipalPolicyRequest policyRequest = new AttachPrincipalPolicyRequest();
+        policyRequest.setPolicyName(createPolicyResult.getPolicyName());
+        policyRequest.setPrincipal(certResult.getCertificateArn());
+        iotClient.attachPrincipalPolicy(policyRequest);
+        // retrieve the keystore
+        KeyStore ks = AWSIotKeystoreHelper.getIotKeystore(certResult.getCertificateId(), KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        // connect to AWS IoT using keystore
+        mqttManager.connect(ks, new AWSIotMqttClientStatusCallback() {
+            @Override
+            public void onStatusChanged(AWSIotMqttClientStatus status, Throwable throwable) {
+                statuses.add(status);
+            }
+        });
+
+        // wait for connection
+        Thread.sleep(3000);
+
+        // subscribe to MQTT topic, new messages are captured in list
+        mqttManager.subscribeToTopic("sdk/test/integration/cert", AWSIotMqttQos.QOS1, new AWSIotMqttNewMessageCallback() {
+            @Override
+            public void onMessageArrived(String topic, byte[] data) {
+                messages.add(new String(data));
+            }
+        });
+
+        // ensure subscribe propagates
+        Thread.sleep(2000);
+
+        final HashMap<String, Integer> tokenTable = new HashMap<String, Integer>();
+
+        // publish 20 messages
+        for (int i=0; i<20; ++i) {
+            tokenTable.put("integration-test-" + i, 0);
+            mqttManager.publishString("integration-test-" + i, "sdk/test/integration/cert",
+                    AWSIotMqttQos.QOS1,
+                    new AWSIotMqttMessageDeliveryCallback() {
+                        @Override
+                        public void statusChanged(MessageDeliveryStatus status, Object userData) {
+                            cbStatuses.add(status);
+                            if (userData instanceof String) {
+                                tokenTable.put((String)userData, 1);
+                            }
+                        }
+                    },
+                    "integration-test-" + i);
+            Thread.sleep(250);
+        }
+
+        Thread.sleep(1000);
+
+        // disconnect
+        mqttManager.disconnect();
+
+        // detach policy
+        DetachPrincipalPolicyRequest detachPrincipalPolicyRequest = new DetachPrincipalPolicyRequest();
+        detachPrincipalPolicyRequest.setPrincipal(certResult.getCertificateArn());
+        detachPrincipalPolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
+        iotClient.detachPrincipalPolicy(detachPrincipalPolicyRequest);
+        // delete policy
+        DeletePolicyRequest deletePolicyRequest = new DeletePolicyRequest();
+        deletePolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
+        iotClient.deletePolicy(deletePolicyRequest);
+        // set cert inactive
+        UpdateCertificateRequest updateCertificateRequest = new UpdateCertificateRequest();
+        updateCertificateRequest.setCertificateId(certResult.getCertificateId());
+        updateCertificateRequest.setNewStatus(CertificateStatus.INACTIVE);
+        iotClient.updateCertificate(updateCertificateRequest);
+        // delete cert
+        DeleteCertificateRequest deleteCertificateRequest = new DeleteCertificateRequest();
+        deleteCertificateRequest.setCertificateId(certResult.getCertificateId());
+        iotClient.deleteCertificate(deleteCertificateRequest);
+
+        // verify connection events emitted
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, statuses.get(0));
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, statuses.get(1));
+
+        // verify messages arrived on subscribed topic
+        assertEquals(20, messages.size());
+        int msgnum[] = new int[20];
+        for (String m : messages) {
+            assertTrue(m.contains("integration-test-"));
+            ++msgnum[Integer.parseInt(m.split("-")[2])];
+        }
+        for (int i : msgnum) {
+            assertEquals(1, i);
+        }
+
+        // verify callbacks
+        for (AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus status : cbStatuses) {
+            assertEquals(AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus.Success, status);
+        }
+
+        // verify all tokens were received
+        for (int i : tokenTable.values()) {
+            assertEquals(1, i);
+        }
+    }
+
+    @Test
+    public void mqttCertificateReconnect() throws Exception {
+
+        final ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus> statuses = new ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus>();
+        final ArrayList<String> messages = new ArrayList<String>();
+
+        AWSIotMqttManager mqttManager = new AWSIotMqttManager("int-test-c-reconnect", Region.getRegion(Regions.US_EAST_1), endpointPrefix);
+        mqttManager.setAutoReconnect(true);
+
+        // create a new certificate and private key
+        CreateKeysAndCertificateRequest certRequest = new CreateKeysAndCertificateRequest();
+        certRequest.setSetAsActive(true);
+        CreateKeysAndCertificateResult certResult = iotClient.createKeysAndCertificate(certRequest);
+        // save certificate and private key in a keystore
+        AWSIotKeystoreHelper.saveCertificateAndPrivateKey(certResult.getCertificateId(),
+                certResult.getCertificatePem(),
+                certResult.getKeyPair().getPrivateKey(),
+                KEYSTORE_PATH,
+                KEYSTORE_NAME,
+                KEYSTORE_PASSWORD);
+        
+        // create an IoT policy allowing all actions in IoT
+        String policyDocument;
+        CreatePolicyRequest createPolicyRequest = null;
+        CreatePolicyResult createPolicyResult = null;
+
+        try {
+            // create an IoT policy allowing all actions in IoT
+            policyDocument = "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"iot:*\",\"Resource\":\"*\",\"Effect\":\"Allow\"}]}";
+            createPolicyRequest = new CreatePolicyRequest();
+            createPolicyRequest.setPolicyName(IOT_POLICY_NAME);
+            createPolicyRequest.setPolicyDocument(policyDocument);
+            createPolicyResult = iotClient.createPolicy(createPolicyRequest);
+        }  catch (Exception ex) {
+            assertTrue("Error in creating the policy. ",
+                ex.getMessage().startsWith("Policy cannot be created - name already exists "));
+        }
+
+        // attach the policy to the new cert
+        AttachPrincipalPolicyRequest policyRequest = new AttachPrincipalPolicyRequest();
+        policyRequest.setPolicyName(createPolicyResult.getPolicyName());
+        policyRequest.setPrincipal(certResult.getCertificateArn());
+        iotClient.attachPrincipalPolicy(policyRequest);
+        // retrieve the keystore
+        KeyStore ks = AWSIotKeystoreHelper.getIotKeystore(certResult.getCertificateId(), KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        // connect to AWS IoT using keystore
+        mqttManager.connect(ks, new AWSIotMqttClientStatusCallback() {
+            @Override
+            public void onStatusChanged(AWSIotMqttClientStatus status, Throwable throwable) {
+                statuses.add(status);
+            }
+        });
+
+        // wait for connection
+        Thread.sleep(3000);
+
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, statuses.get(0));
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, statuses.get(1));
+
+        // subscribe to MQTT topic, new messages are captured in list
+        mqttManager.subscribeToTopic("sdk/test/integration/cert/reconnect", AWSIotMqttQos.QOS0, new AWSIotMqttNewMessageCallback() {
+            @Override
+            public void onMessageArrived(String topic, byte[] data) {
+                messages.add(new String(data));
+            }
+        });
+
+        // ensure subscribe propagates
+        Thread.sleep(2000);
+
+        // publish a message
+        mqttManager.publishString("message 0", "sdk/test/integration/cert/reconnect", AWSIotMqttQos.QOS0);
+        Thread.sleep(1000);
+        // verify messages arrived on subscribed topic
+        assertEquals("message 0", messages.get(0));
+
+        // publish on $aws will cause a disconnect
+        mqttManager.publishString("please kill me", "$aws", AWSIotMqttQos.QOS0);
+
+        Thread.sleep(1000);
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Reconnecting, statuses.get(2));
+
+        //Comment out this temporarily until upgrade to Robolectric v3 in order to advance background thread.
+        /*
+        //advance UI thread for 5sec, by that time, it should be reconnected.
+        Robolectric.getUiThreadScheduler().advanceBy(5000);
+        Thread.sleep(2000);
+
+        // verify connection events emitted
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, statuses.get(3));
+        // publish a second message
+        mqttManager.publishString("message 1", "sdk/test/integration/cert/reconnect", AWSIotMqttQos.QOS0);
+
+        Thread.sleep(1000);
+        assertEquals("message 1", messages.get(1));
+        */
+
+        // disconnect
+        mqttManager.disconnect();
+
+        // detach policy
+        DetachPrincipalPolicyRequest detachPrincipalPolicyRequest = new DetachPrincipalPolicyRequest();
+        detachPrincipalPolicyRequest.setPrincipal(certResult.getCertificateArn());
+        detachPrincipalPolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
+        iotClient.detachPrincipalPolicy(detachPrincipalPolicyRequest);
+        // delete policy
+        DeletePolicyRequest deletePolicyRequest = new DeletePolicyRequest();
+        deletePolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
+        iotClient.deletePolicy(deletePolicyRequest);
+        // set cert inactive
+        UpdateCertificateRequest updateCertificateRequest = new UpdateCertificateRequest();
+        updateCertificateRequest.setCertificateId(certResult.getCertificateId());
+        updateCertificateRequest.setNewStatus(CertificateStatus.INACTIVE);
+        iotClient.updateCertificate(updateCertificateRequest);
+        // delete cert
+        DeleteCertificateRequest deleteCertificateRequest = new DeleteCertificateRequest();
+        deleteCertificateRequest.setCertificateId(certResult.getCertificateId());
+        iotClient.deleteCertificate(deleteCertificateRequest);
+    }
+
+    @Test
+    public void mqttCertificateLargeMessage() throws Exception {
+
+        final ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus> statuses = new ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus>();
+        final ArrayList<String> messages = new ArrayList<String>();
+
+        // create large message
+        byte largeMessageBytes[] = new byte[ONE_TWENTY_KB];
+        for(int i=0; i<ONE_TWENTY_KB; ++i) {
+            largeMessageBytes[i] = getAlphaChar();
+        }
+        String largeMessageString = new String(largeMessageBytes);
+
+        AWSIotMqttManager mqttManager = new AWSIotMqttManager("int-test-cert-lm", Region.getRegion(Regions.US_EAST_1), endpointPrefix);
+
+        mqttManager.setAutoReconnect(false);
+
+        // create a new certificate and private key
+        CreateKeysAndCertificateRequest certRequest = new CreateKeysAndCertificateRequest();
+        certRequest.setSetAsActive(true);
+        CreateKeysAndCertificateResult certResult = iotClient.createKeysAndCertificate(certRequest);
+        // save certificate and private key in a keystore
+        AWSIotKeystoreHelper.saveCertificateAndPrivateKey(certResult.getCertificateId(),
+                certResult.getCertificatePem(),
+                certResult.getKeyPair().getPrivateKey(),
+                KEYSTORE_PATH,
+                KEYSTORE_NAME,
+                KEYSTORE_PASSWORD);
+        
+        // create an IoT policy allowing all actions in IoT
+        String policyDocument;
+        CreatePolicyRequest createPolicyRequest = null;
+        CreatePolicyResult createPolicyResult = null;
+
+        try {
+            // create an IoT policy allowing all actions in IoT
+            policyDocument = "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"iot:*\",\"Resource\":\"*\",\"Effect\":\"Allow\"}]}";
+            createPolicyRequest = new CreatePolicyRequest();
+            createPolicyRequest.setPolicyName(IOT_POLICY_NAME);
+            createPolicyRequest.setPolicyDocument(policyDocument);
+            createPolicyResult = iotClient.createPolicy(createPolicyRequest);
+        }  catch (Exception ex) {
+            assertTrue("Error in creating the policy. ",
+                ex.getMessage().startsWith("Policy cannot be created - name already exists "));
+        }
+
+        // attach the policy to the new cert
+        AttachPrincipalPolicyRequest policyRequest = new AttachPrincipalPolicyRequest();
+        policyRequest.setPolicyName(createPolicyResult.getPolicyName());
+        policyRequest.setPrincipal(certResult.getCertificateArn());
+        iotClient.attachPrincipalPolicy(policyRequest);
+        // retrieve the keystore
+        KeyStore ks = AWSIotKeystoreHelper.getIotKeystore(certResult.getCertificateId(), KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        // connect to AWS IoT using keystore
+        mqttManager.connect(ks, new AWSIotMqttClientStatusCallback() {
+            @Override
+            public void onStatusChanged(AWSIotMqttClientStatus status, Throwable throwable) {
+                statuses.add(status);
+            }
+        });
+
+        Thread.sleep(3000);
+
+        // subscribe to MQTT topic
+        mqttManager.subscribeToTopic("sdk/test/integration/cert/large", AWSIotMqttQos.QOS0, new AWSIotMqttNewMessageCallback() {
+            @Override
+            public void onMessageArrived(String topic, byte[] data) {
+                messages.add(new String(data));
+            }
+        });
+        // ensure subscription propagates
+        Thread.sleep(2000);
+        // publish large message
+        mqttManager.publishString(largeMessageString, "sdk/test/integration/cert/large", AWSIotMqttQos.QOS0);
+
+        Thread.sleep(2000);
+
+        // disconnect
+        mqttManager.disconnect();
+
+        // detach policy
+        DetachPrincipalPolicyRequest detachPrincipalPolicyRequest = new DetachPrincipalPolicyRequest();
+        detachPrincipalPolicyRequest.setPrincipal(certResult.getCertificateArn());
+        detachPrincipalPolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
+        iotClient.detachPrincipalPolicy(detachPrincipalPolicyRequest);
+        // delete policy
+        DeletePolicyRequest deletePolicyRequest = new DeletePolicyRequest();
+        deletePolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
+        iotClient.deletePolicy(deletePolicyRequest);
+        // set cert inactive
+        UpdateCertificateRequest updateCertificateRequest = new UpdateCertificateRequest();
+        updateCertificateRequest.setCertificateId(certResult.getCertificateId());
+        updateCertificateRequest.setNewStatus(CertificateStatus.INACTIVE);
+        iotClient.updateCertificate(updateCertificateRequest);
+        // delete cert
+        DeleteCertificateRequest deleteCertificateRequest = new DeleteCertificateRequest();
+        deleteCertificateRequest.setCertificateId(certResult.getCertificateId());
+        iotClient.deleteCertificate(deleteCertificateRequest);
+
+        // ensure connection events emitted
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, statuses.get(0));
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, statuses.get(1));
+
+        // verify messages arrived on topic
+        assertEquals(1, messages.size());
+        assertEquals(largeMessageString, messages.get(0));
+        assertEquals((int)ONE_TWENTY_KB, messages.get(0).length());
+    }
+
+    @Test
+    public void mqttWebSocket() throws Exception {
+
+        final ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus> statuses = new ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus>();
+        final ArrayList<String> messages = new ArrayList<String>();
+
+        AWSIotMqttManager mqttManager = new AWSIotMqttManager("int-test-w-ws", Region.getRegion(Regions.US_EAST_1), endpointPrefix);
+
+        mqttManager.setAutoReconnect(false);
+        // connect using WebSockets and IAM credentials
+        mqttManager.connect(credentialsProvider, new AWSIotMqttClientStatusCallback() {
+            @Override
+            public void onStatusChanged(AWSIotMqttClientStatus status, Throwable throwable) {
+                statuses.add(status);
+            }
+        });
+
+        Thread.sleep(3000);
+
+        // ensure connection events emitted
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, statuses.get(0));
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, statuses.get(1));
+
+        // subscribe to MQTT topic
+        mqttManager.subscribeToTopic("sdk/test/integration/ws", AWSIotMqttQos.QOS0, new AWSIotMqttNewMessageCallback() {
+            @Override
+            public void onMessageArrived(String topic, byte[] data) {
+                messages.add(new String(data));
+            }
+        });
+        // ensure subscription propagates
+        Thread.sleep(2000);
+        // publish 20 messages
+        for (int i=0; i<20; ++i) {
+            mqttManager.publishString("integration test " + i, "sdk/test/integration/ws", AWSIotMqttQos.QOS0);
+            Thread.sleep(250);
+        }
+
+        Thread.sleep(1000);
+        // disconnect
+        mqttManager.disconnect();
+        // verify messages arrived on topic
+        assertEquals(20, messages.size());
+        int msgnum[] = new int[20];
+        for (String m : messages) {
+            assertTrue(m.contains("integration test "));
+            ++msgnum[Integer.parseInt(m.split(" ")[2])];
+        }
+        for (int i : msgnum) {
+            assertEquals(1, i);
+        }
+    }
+
+    @Test
+    public void mqttWebSocketReconnect() throws Exception {
+
+        final ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus> statuses = new ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus>();
+        final ArrayList<String> messages = new ArrayList<String>();
+
+        AWSIotMqttManager mqttManager = new AWSIotMqttManager("int-test-ws-rc", Region.getRegion(Regions.US_EAST_1), endpointPrefix);
+
+        mqttManager.setAutoReconnect(true);
+        // connect using WebSockets and IAM credentials
+        mqttManager.connect(credentialsProvider, new AWSIotMqttClientStatusCallback() {
+            @Override
+            public void onStatusChanged(AWSIotMqttClientStatus status, Throwable throwable) {
+                statuses.add(status);
+            }
+        });
+
+        Thread.sleep(3000);
+
+        // ensure connection events emitted
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, statuses.get(0));
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, statuses.get(1));
+
+        // subscribe to MQTT topic
+        mqttManager.subscribeToTopic("sdk/test/integration/ws/reconnect", AWSIotMqttQos.QOS0, new AWSIotMqttNewMessageCallback() {
+            @Override
+            public void onMessageArrived(String topic, byte[] data) {
+                messages.add(new String(data));
+            }
+        });
+        // ensure subscription propagates
+        Thread.sleep(2000);
+
+        // publish a message
+        mqttManager.publishString("message 0", "sdk/test/integration/ws/reconnect", AWSIotMqttQos.QOS0);
+
+        Thread.sleep(1000);
+        // verify messages arrived on subscribed topic
+        assertEquals(1, messages.size());
+        assertEquals("message 0", messages.get(0));
+
+        // publish on $aws will cause a disconnect
+        mqttManager.publishString("please kill me", "$aws", AWSIotMqttQos.QOS0);
+
+        Thread.sleep(1000);
+        // verify connection events emitted
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Reconnecting, statuses.get(2));
+
+        //Comment out this temporarily until upgrade to Robolectric v3 in order to advance background thread.
+        /*
+        //advance UI thread for 5sec, by that time, it should be reconnected.
+        Robolectric.getUiThreadScheduler().advanceBy(5000);
+        Thread.sleep(2000);
+
+        //assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, statuses.get(3));
+
+        // publish a second message
+        mqttManager.publishString("message 1", "sdk/test/integration/ws/reconnect", AWSIotMqttQos.QOS0);
+
+        Thread.sleep(1000);
+
+        assertEquals("message 1", messages.get(1));
+        */
+
+        // disconnect
+        mqttManager.disconnect();
+    }
+
+    @Test
+    public void mqttCleanSessionTrue() throws Exception {
+        final ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus> statuses = new ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus>();
+        final ArrayList<String> messages = new ArrayList<String>();
+
+        String largeMessageString = new String("largeMessageBytes");
+        final String topic = "sdk/test/integration/ws/reconnect";
+
+        AWSIotMqttManager mqttManager = new AWSIotMqttManager("client-id-1", 
+            Region.getRegion(Regions.US_EAST_1), 
+            endpointPrefix);
+
+        mqttManager.setCleanSession(true);
+        mqttManager.setAutoReconnect(true);
+
+        // connect to AWS IoT using keystore
+        final CountDownLatch countDownLatch = new CountDownLatch(1);
+        mqttManager.connect(credentialsProvider, new AWSIotMqttClientStatusCallback() {
+            @Override
+            public void onStatusChanged(AWSIotMqttClientStatus status, Throwable throwable) {
+                statuses.add(status);
+                if (status == AWSIotMqttClientStatus.Connecting) {
+                    System.out.println("Client client-id-1 connecton status: " + status);
+                } else if (status == AWSIotMqttClientStatus.Connected) {
+                    System.out.println("Client client-id-1 connecton status: " + status);
+                    countDownLatch.countDown();
+                }
+            }
+        });
+
+        try {
+            countDownLatch.await();
+        } catch (Exception ex) {
+            ex.printStackTrace();
+        }
+
+        // subscribe to MQTT topic
+        System.out.println("Subscribing to topic: " + topic);
+        mqttManager.subscribeToTopic(topic, 
+            AWSIotMqttQos.QOS0, 
+            new AWSIotMqttNewMessageCallback() {
+                @Override
+                public void onMessageArrived(String topic, byte[] data) {
+                    messages.add(new String(data));
+                }
+            });
+        Thread.sleep(2000);
+
+        // disconnect
+        mqttManager.disconnect();
+        Thread.sleep(3000);
+
+        // ensure connection events emitted
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, statuses.get(0));
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, statuses.get(1));
+
+        AWSIotMqttManager mqttManager2 = new AWSIotMqttManager("client-id-2", 
+            Region.getRegion(Regions.US_EAST_1), 
+            endpointPrefix);
+
+        mqttManager2.setCleanSession(true);
+        mqttManager.setAutoReconnect(true);
+
+        // connect to AWS IoT using keystore
+        final CountDownLatch countDownLatch2 = new CountDownLatch(1);
+        mqttManager2.connect(credentialsProvider, new AWSIotMqttClientStatusCallback() {
+            @Override
+            public void onStatusChanged(AWSIotMqttClientStatus status, Throwable throwable) {
+                statuses.add(status);
+                if (status == AWSIotMqttClientStatus.Connecting) {
+                    System.out.println("Client client-id-2 connecton status: " + status);
+                } else if (status == AWSIotMqttClientStatus.Connected) {
+                    System.out.println("Client client-id-2 connecton status: " + status);
+                    countDownLatch2.countDown();
+                }
+            }
+        });
+
+        try {
+            countDownLatch2.await();
+        } catch (Exception ex) {
+            ex.printStackTrace();
+        }
+
+        // publish large message
+        mqttManager2.publishString(largeMessageString, 
+            topic, 
+            AWSIotMqttQos.QOS0);
+
+        Thread.sleep(3000);
+
+        mqttManager = new AWSIotMqttManager("client-id-1", 
+            Region.getRegion(Regions.US_EAST_1), 
+            endpointPrefix);
+
+        mqttManager.setCleanSession(true);
+        mqttManager.setAutoReconnect(true);
+
+        // connect to AWS IoT using keystore
+        final CountDownLatch countDownLatch3 = new CountDownLatch(1);
+        mqttManager.connect(credentialsProvider, new AWSIotMqttClientStatusCallback() {
+            @Override
+            public void onStatusChanged(AWSIotMqttClientStatus status, Throwable throwable) {
+                statuses.add(status);
+                if (status == AWSIotMqttClientStatus.Connecting) {
+                    System.out.println("Client client-id-1 connecton status: " + status);
+                } else if (status == AWSIotMqttClientStatus.Connected) {
+                    System.out.println("Client client-id-1 connecton status: " + status);
+                    countDownLatch3.countDown();
+                }
+            }
+        });
+
+        try {
+            countDownLatch3.await();
+        } catch (Exception ex) {
+            ex.printStackTrace();
+        }
+
+        // subscribe to MQTT topic
+        mqttManager.subscribeToTopic(topic, 
+            AWSIotMqttQos.QOS0, 
+            new AWSIotMqttNewMessageCallback() {
+                @Override
+                public void onMessageArrived(String topic, byte[] data) {
+                    messages.add(new String(data));
+                }
+            });
+        
+        Thread.sleep(10000);
+
+        // verify messages arrived on topic
+        assertEquals(0, messages.size());
+    }
+
+    @Ignore
+    @Test
+    public void mqttCleanSessionFalse() throws Exception {
+        final ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus> statuses = new ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus>();
+        final ArrayList<String> messages = new ArrayList<String>();
+
+        String largeMessageString = new String("largeMessageBytes");
+        final String topic = "sdk/test/integration/ws/reconnect";
+
+        AWSIotMqttManager mqttManager = new AWSIotMqttManager("client-id-1", 
+            Region.getRegion(Regions.US_EAST_1), 
+            endpointPrefix);
+
+        mqttManager.setCleanSession(false);
+        mqttManager.setAutoReconnect(true);
+
+        // connect to AWS IoT using keystore
+        final CountDownLatch countDownLatch = new CountDownLatch(1);
+        mqttManager.connect(credentialsProvider, new AWSIotMqttClientStatusCallback() {
+            @Override
+            public void onStatusChanged(AWSIotMqttClientStatus status, Throwable throwable) {
+                statuses.add(status);
+                if (status == AWSIotMqttClientStatus.Connecting) {
+                    System.out.println("Client client-id-1 connecton status: " + status);
+                } else if (status == AWSIotMqttClientStatus.Connected) {
+                    System.out.println("Client client-id-1 connecton status: " + status);
+                    countDownLatch.countDown();
+                }
+            }
+        });
+
+        try {
+            countDownLatch.await();
+        } catch (Exception ex) {
+            ex.printStackTrace();
+        }
+
+        // subscribe to MQTT topic
+        mqttManager.subscribeToTopic(topic, 
+            AWSIotMqttQos.QOS0, 
+            new AWSIotMqttNewMessageCallback() {
+                @Override
+                public void onMessageArrived(String topic, byte[] data) {
+                    messages.add(new String(data));
+                }
+            });
+        // ensure subscription propagates
+        Thread.sleep(2000);
+
+        // disconnect
+        mqttManager.disconnect();
+        Thread.sleep(3000);
+
+        // ensure connection events emitted
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, statuses.get(0));
+        assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, statuses.get(1));
+
+        AWSIotMqttManager mqttManager2 = new AWSIotMqttManager("client-id-2", 
+            Region.getRegion(Regions.US_EAST_1), 
+            endpointPrefix);
+
+        mqttManager2.setCleanSession(false);
+        mqttManager2.setAutoReconnect(true);
+
+        // connect to AWS IoT using keystore
+        final CountDownLatch countDownLatch2 = new CountDownLatch(1);
+        mqttManager2.connect(credentialsProvider, new AWSIotMqttClientStatusCallback() {
+            @Override
+            public void onStatusChanged(AWSIotMqttClientStatus status, Throwable throwable) {
+                statuses.add(status);
+                if (status == AWSIotMqttClientStatus.Connecting) {
+                    System.out.println("Client client-id-2 connecton status: " + status);
+                } else if (status == AWSIotMqttClientStatus.Connected) {
+                    System.out.println("Client client-id-2 connecton status: " + status);
+                    countDownLatch2.countDown();
+                }
+            }
+        });
+
+        try {
+            countDownLatch2.await();
+        } catch (Exception ex) {
+            ex.printStackTrace();
+        }
+
+        // publish large message
+        mqttManager2.publishString(largeMessageString, 
+            topic, 
+            AWSIotMqttQos.QOS0);
+
+        Thread.sleep(3000);
+
+        mqttManager = new AWSIotMqttManager("client-id-1", 
+            Region.getRegion(Regions.US_EAST_1), 
+            endpointPrefix);
+
+        mqttManager.setCleanSession(false);
+        mqttManager.setAutoReconnect(true);
+
+        // connect to AWS IoT using keystore
+        final CountDownLatch countDownLatch3 = new CountDownLatch(1);
+        mqttManager.connect(credentialsProvider, new AWSIotMqttClientStatusCallback() {
+            @Override
+            public void onStatusChanged(AWSIotMqttClientStatus status, Throwable throwable) {
+                statuses.add(status);
+                if (status == AWSIotMqttClientStatus.Connecting) {
+                    System.out.println("Client client-id-1 connecton status: " + status);
+                } else if (status == AWSIotMqttClientStatus.Connected) {
+                    System.out.println("Client client-id-1 connecton status: " + status);
+                    countDownLatch3.countDown();
+                }
+            }
+        });
+
+        try {
+            countDownLatch3.await();
+        } catch (Exception ex) {
+            ex.printStackTrace();
+        }
+
+        // subscribe to MQTT topic
+        mqttManager.subscribeToTopic(topic, 
+            AWSIotMqttQos.QOS0, 
+            new AWSIotMqttNewMessageCallback() {
+                @Override
+                public void onMessageArrived(String topic, byte[] data) {
+                    messages.add(new String(data));
+                }
+            });
+        
+        // ensure subscription propagates
+        Thread.sleep(2000);
+
+        // verify messages arrived on topic
+        assertEquals(1, messages.size());
+    }
+
+    private static byte getAlphaChar() {
+        return (byte)(0x41 + r.nextInt(57));
+    }
+}
diff --git a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/TopicMatchTest.java b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/TopicMatchTest.java
new file mode 100644
index 0000000000..ad80d06b2f
--- /dev/null
+++ b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/TopicMatchTest.java
@@ -0,0 +1,75 @@
+
+package com.amazonaws.mobileconnectors.iot;
+
+import static org.junit.Assert.assertEquals;
+
+import com.amazonaws.regions.Region;
+import com.amazonaws.regions.Regions;
+
+import org.junit.Before;
+import org.junit.Test;
+
+import java.util.ArrayList;
+
+public class TopicMatchTest {
+
+    ArrayList<TopicMatchTestCase> testCases;
+    AWSIotMqttManager client;
+
+    @Before
+    public void setUp() throws Exception {
+        client = new AWSIotMqttManager("test-client-id", Region.getRegion(Regions.US_EAST_1),
+                "test-prefix");
+
+        testCases = new ArrayList<TopicMatchTestCase>();
+        testCases.add(new TopicMatchTestCase("test", "test", true));
+        testCases.add(new TopicMatchTestCase("test/1", "test/1", true));
+        testCases.add(new TopicMatchTestCase("test/1", "test/1/2", false));
+        testCases.add(new TopicMatchTestCase("test/1/2", "test/1/2/3", false));
+        testCases.add(new TopicMatchTestCase("#", "test", true));
+        testCases.add(new TopicMatchTestCase("#", "test/1", true));
+        testCases.add(new TopicMatchTestCase("#", "test/1/2", true));
+        testCases.add(new TopicMatchTestCase("test/+", "test/1", true));
+        testCases.add(new TopicMatchTestCase("test/+/1", "test/1/1", true));
+        testCases.add(new TopicMatchTestCase("test/+/1", "test/1/2", false));
+        testCases.add(new TopicMatchTestCase("test/+/+/+/+", "test/1", false));
+        testCases.add(new TopicMatchTestCase("test/+/+/+/+", "test/1/2", false));
+        testCases.add(new TopicMatchTestCase("test/+/+/+/+", "test/1/2/3", false));
+        testCases.add(new TopicMatchTestCase("test/+/+/+/+", "test/1/2/3/4", true));
+        testCases.add(new TopicMatchTestCase("test/+/+/+/+", "test/1/2/3/4/5", false));
+        testCases.add(new TopicMatchTestCase("+", "test", true));
+        testCases.add(new TopicMatchTestCase("+", "test/1", false));
+        testCases.add(new TopicMatchTestCase("+/1", "test/1", true));
+        testCases.add(new TopicMatchTestCase("+/1", "nottest/1", true));
+        testCases.add(new TopicMatchTestCase("+/1", "test/12", false));
+        testCases.add(new TopicMatchTestCase("+/1", "test/1/2", false));
+        testCases.add(new TopicMatchTestCase("+/1/+", "test/1/test", true));
+        testCases.add(new TopicMatchTestCase("+/1/+", "A/1/B", true));
+        testCases.add(new TopicMatchTestCase("+/1/+", "test/test/test", false));
+        testCases.add(new TopicMatchTestCase("test/#", "test/1", true));
+        testCases.add(new TopicMatchTestCase("test/#", "test/1/2", true));
+        testCases.add(new TopicMatchTestCase("test/#", "test/1/2/3", true));
+        testCases.add(new TopicMatchTestCase("test/#", "test/1/2/3/4", true));
+        testCases.add(new TopicMatchTestCase("test/#", "test/1/2/3/4/5", true));
+        testCases.add(new TopicMatchTestCase("test/#", "not/1", false));
+    }
+
+    @Test
+    public void topicMatchingTest() throws Exception {
+        for (TopicMatchTestCase tc : testCases) {
+            assertEquals(tc.matches, client.isTopicMatch(tc.topicFilter, tc.topic));
+        }
+    }
+
+    public class TopicMatchTestCase {
+        String topic;
+        String topicFilter;
+        boolean matches;
+
+        TopicMatchTestCase(String tf, String t, boolean m) {
+            topicFilter = tf;
+            topic = t;
+            matches = m;
+        }
+    }
+}
diff --git a/aws-android-sdk-kinesis/pom.xml b/aws-android-sdk-kinesis/pom.xml
index 797cb765ea..bd89ba51b3 100644
--- a/aws-android-sdk-kinesis/pom.xml
+++ b/aws-android-sdk-kinesis/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/DescribeStreamResultJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/DescribeStreamResultJsonUnmarshaller.java
index 3ef02a63fe..44af5c27a6 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/DescribeStreamResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/DescribeStreamResultJsonUnmarshaller.java
@@ -35,7 +35,8 @@ public DescribeStreamResult unmarshall(JsonUnmarshallerContext context) throws E
             String name = reader.nextName();
             if (name.equals("StreamDescription")) {
                 describeStreamResult.setStreamDescription(StreamDescriptionJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/DescribeStreamSummaryResultJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/DescribeStreamSummaryResultJsonUnmarshaller.java
index e4eb20c5bb..e047b8251b 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/DescribeStreamSummaryResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/DescribeStreamSummaryResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public DescribeStreamSummaryResult unmarshall(JsonUnmarshallerContext context) t
             if (name.equals("StreamDescriptionSummary")) {
                 describeStreamSummaryResult
                         .setStreamDescriptionSummary(StreamDescriptionSummaryJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/DisableEnhancedMonitoringResultJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/DisableEnhancedMonitoringResultJsonUnmarshaller.java
index 252a22cdff..032c607710 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/DisableEnhancedMonitoringResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/DisableEnhancedMonitoringResultJsonUnmarshaller.java
@@ -40,11 +40,15 @@ public DisableEnhancedMonitoringResult unmarshall(JsonUnmarshallerContext contex
             } else if (name.equals("CurrentShardLevelMetrics")) {
                 disableEnhancedMonitoringResult
                         .setCurrentShardLevelMetrics(new ListUnmarshaller<String>(
-                                StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                                StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("DesiredShardLevelMetrics")) {
                 disableEnhancedMonitoringResult
                         .setDesiredShardLevelMetrics(new ListUnmarshaller<String>(
-                                StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                                StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/EnableEnhancedMonitoringResultJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/EnableEnhancedMonitoringResultJsonUnmarshaller.java
index 902fb809f8..0edeff46fe 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/EnableEnhancedMonitoringResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/EnableEnhancedMonitoringResultJsonUnmarshaller.java
@@ -40,11 +40,15 @@ public EnableEnhancedMonitoringResult unmarshall(JsonUnmarshallerContext context
             } else if (name.equals("CurrentShardLevelMetrics")) {
                 enableEnhancedMonitoringResult
                         .setCurrentShardLevelMetrics(new ListUnmarshaller<String>(
-                                StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                                StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("DesiredShardLevelMetrics")) {
                 enableEnhancedMonitoringResult
                         .setDesiredShardLevelMetrics(new ListUnmarshaller<String>(
-                                StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                                StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/EnhancedMetricsJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/EnhancedMetricsJsonUnmarshaller.java
index eace026209..3d4c02604d 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/EnhancedMetricsJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/EnhancedMetricsJsonUnmarshaller.java
@@ -38,7 +38,9 @@ public EnhancedMetrics unmarshall(JsonUnmarshallerContext context) throws Except
             String name = reader.nextName();
             if (name.equals("ShardLevelMetrics")) {
                 enhancedMetrics.setShardLevelMetrics(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ExpiredIteratorExceptionUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ExpiredIteratorExceptionUnmarshaller.java
index d1c7797bc6..6f620cf891 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ExpiredIteratorExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ExpiredIteratorExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesis.model.ExpiredIteratorException;
 
 public class ExpiredIteratorExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ExpiredIteratorException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ExpiredIteratorException expiredIteratorException = new ExpiredIteratorException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                expiredIteratorException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return expiredIteratorException;
-    }
 }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ExpiredNextTokenExceptionUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ExpiredNextTokenExceptionUnmarshaller.java
index 240ac45e79..f363873446 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ExpiredNextTokenExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ExpiredNextTokenExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesis.model.ExpiredNextTokenException;
 
 public class ExpiredNextTokenExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ExpiredNextTokenException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ExpiredNextTokenException expiredNextTokenException = new ExpiredNextTokenException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                expiredNextTokenException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return expiredNextTokenException;
-    }
 }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/GetRecordsResultJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/GetRecordsResultJsonUnmarshaller.java
index f88eeabfb5..bad0789f87 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/GetRecordsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/GetRecordsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public GetRecordsResult unmarshall(JsonUnmarshallerContext context) throws Excep
             String name = reader.nextName();
             if (name.equals("Records")) {
                 getRecordsResult.setRecords(new ListUnmarshaller<Record>(RecordJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextShardIterator")) {
                 getRecordsResult.setNextShardIterator(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/HashKeyRangeJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/HashKeyRangeJsonUnmarshaller.java
index acfb95ef35..0a28f92d1c 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/HashKeyRangeJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/HashKeyRangeJsonUnmarshaller.java
@@ -36,11 +36,11 @@ public HashKeyRange unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("StartingHashKey")) {
-                hashKeyRange.setStartingHashKey(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                hashKeyRange.setStartingHashKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EndingHashKey")) {
-                hashKeyRange.setEndingHashKey(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                hashKeyRange.setEndingHashKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/InvalidArgumentExceptionUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/InvalidArgumentExceptionUnmarshaller.java
index 3b43033e14..893421719f 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/InvalidArgumentExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/InvalidArgumentExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesis.model.InvalidArgumentException;
 
 public class InvalidArgumentExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidArgumentException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidArgumentException invalidArgumentException = new InvalidArgumentException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidArgumentException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidArgumentException;
-    }
 }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSAccessDeniedExceptionUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSAccessDeniedExceptionUnmarshaller.java
index f29a56b34e..dc97e4a024 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSAccessDeniedExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSAccessDeniedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesis.model.KMSAccessDeniedException;
 
 public class KMSAccessDeniedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public KMSAccessDeniedException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        KMSAccessDeniedException kMSAccessDeniedException = new KMSAccessDeniedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                kMSAccessDeniedException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return kMSAccessDeniedException;
-    }
 }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSDisabledExceptionUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSDisabledExceptionUnmarshaller.java
index 7376921448..1e75d4522f 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSDisabledExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSDisabledExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesis.model.KMSDisabledException;
 
 public class KMSDisabledExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public KMSDisabledException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        KMSDisabledException kMSDisabledException = new KMSDisabledException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                kMSDisabledException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return kMSDisabledException;
-    }
 }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSInvalidStateExceptionUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSInvalidStateExceptionUnmarshaller.java
index 2adb86b922..0f385c9335 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSInvalidStateExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSInvalidStateExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesis.model.KMSInvalidStateException;
 
 public class KMSInvalidStateExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public KMSInvalidStateException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        KMSInvalidStateException kMSInvalidStateException = new KMSInvalidStateException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                kMSInvalidStateException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return kMSInvalidStateException;
-    }
 }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSNotFoundExceptionUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSNotFoundExceptionUnmarshaller.java
index 1f7bf36b55..41e18ed258 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesis.model.KMSNotFoundException;
 
 public class KMSNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public KMSNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        KMSNotFoundException kMSNotFoundException = new KMSNotFoundException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                kMSNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return kMSNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSOptInRequiredExceptionUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSOptInRequiredExceptionUnmarshaller.java
index 93a21c7df9..1c209106be 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSOptInRequiredExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSOptInRequiredExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesis.model.KMSOptInRequiredException;
 
 public class KMSOptInRequiredExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public KMSOptInRequiredException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        KMSOptInRequiredException kMSOptInRequiredException = new KMSOptInRequiredException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                kMSOptInRequiredException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return kMSOptInRequiredException;
-    }
 }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSThrottlingExceptionUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSThrottlingExceptionUnmarshaller.java
index 3386690c3e..b80e2fcdb9 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSThrottlingExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/KMSThrottlingExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesis.model.KMSThrottlingException;
 
 public class KMSThrottlingExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public KMSThrottlingException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        KMSThrottlingException kMSThrottlingException = new KMSThrottlingException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                kMSThrottlingException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return kMSThrottlingException;
-    }
 }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/LimitExceededExceptionUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/LimitExceededExceptionUnmarshaller.java
index c90099154a..c46f12b074 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/LimitExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/LimitExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesis.model.LimitExceededException;
 
 public class LimitExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public LimitExceededException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        LimitExceededException limitExceededException = new LimitExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                limitExceededException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return limitExceededException;
-    }
 }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ListShardsResultJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ListShardsResultJsonUnmarshaller.java
index 98f69bf6a1..c473f6c4fa 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ListShardsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ListShardsResultJsonUnmarshaller.java
@@ -35,10 +35,12 @@ public ListShardsResult unmarshall(JsonUnmarshallerContext context) throws Excep
             String name = reader.nextName();
             if (name.equals("Shards")) {
                 listShardsResult.setShards(new ListUnmarshaller<Shard>(ShardJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextToken")) {
-                listShardsResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listShardsResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ListStreamsResultJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ListStreamsResultJsonUnmarshaller.java
index fee2503e27..8c572e3da9 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ListStreamsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ListStreamsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListStreamsResult unmarshall(JsonUnmarshallerContext context) throws Exce
             String name = reader.nextName();
             if (name.equals("StreamNames")) {
                 listStreamsResult.setStreamNames(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("HasMoreStreams")) {
                 listStreamsResult.setHasMoreStreams(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ListTagsForStreamResultJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ListTagsForStreamResultJsonUnmarshaller.java
index 62e28b4743..366b54a78b 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ListTagsForStreamResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ListTagsForStreamResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListTagsForStreamResult unmarshall(JsonUnmarshallerContext context) throw
             String name = reader.nextName();
             if (name.equals("Tags")) {
                 listTagsForStreamResult.setTags(new ListUnmarshaller<Tag>(TagJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("HasMoreTags")) {
                 listTagsForStreamResult.setHasMoreTags(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ProvisionedThroughputExceededExceptionUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ProvisionedThroughputExceededExceptionUnmarshaller.java
index cf6b5ed84f..b8a24968d2 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ProvisionedThroughputExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ProvisionedThroughputExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesis.model.ProvisionedThroughputExceededException;
 
 public class ProvisionedThroughputExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ProvisionedThroughputExceededException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ProvisionedThroughputExceededException provisionedThroughputExceededException = new ProvisionedThroughputExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                provisionedThroughputExceededException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return provisionedThroughputExceededException;
-    }
 }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/PutRecordResultJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/PutRecordResultJsonUnmarshaller.java
index a3dfed4bea..e02a8d68c8 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/PutRecordResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/PutRecordResultJsonUnmarshaller.java
@@ -34,14 +34,14 @@ public PutRecordResult unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("ShardId")) {
-                putRecordResult
-                        .setShardId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                putRecordResult.setShardId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SequenceNumber")) {
-                putRecordResult.setSequenceNumber(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                putRecordResult.setSequenceNumber(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EncryptionType")) {
-                putRecordResult.setEncryptionType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                putRecordResult.setEncryptionType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/PutRecordsRequestEntryJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/PutRecordsRequestEntryJsonUnmarshaller.java
index 28a1cfbbd0..385b7a5279 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/PutRecordsRequestEntryJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/PutRecordsRequestEntryJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public PutRecordsRequestEntry unmarshall(JsonUnmarshallerContext context) throws
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Data")) {
-                putRecordsRequestEntry.setData(ByteBufferJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                putRecordsRequestEntry.setData(ByteBufferJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ExplicitHashKey")) {
                 putRecordsRequestEntry.setExplicitHashKey(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/PutRecordsResultEntryJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/PutRecordsResultEntryJsonUnmarshaller.java
index 83101acc6c..6645133007 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/PutRecordsResultEntryJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/PutRecordsResultEntryJsonUnmarshaller.java
@@ -40,11 +40,11 @@ public PutRecordsResultEntry unmarshall(JsonUnmarshallerContext context) throws
                 putRecordsResultEntry.setSequenceNumber(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ShardId")) {
-                putRecordsResultEntry.setShardId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                putRecordsResultEntry.setShardId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ErrorCode")) {
-                putRecordsResultEntry.setErrorCode(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                putRecordsResultEntry.setErrorCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ErrorMessage")) {
                 putRecordsResultEntry.setErrorMessage(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/PutRecordsResultJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/PutRecordsResultJsonUnmarshaller.java
index 17a2172659..5fb3721636 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/PutRecordsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/PutRecordsResultJsonUnmarshaller.java
@@ -38,10 +38,12 @@ public PutRecordsResult unmarshall(JsonUnmarshallerContext context) throws Excep
                         .unmarshall(context));
             } else if (name.equals("Records")) {
                 putRecordsResult.setRecords(new ListUnmarshaller<PutRecordsResultEntry>(
-                        PutRecordsResultEntryJsonUnmarshaller.getInstance()).unmarshall(context));
+                        PutRecordsResultEntryJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("EncryptionType")) {
-                putRecordsResult.setEncryptionType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                putRecordsResult.setEncryptionType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/RecordJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/RecordJsonUnmarshaller.java
index 9332ad7185..2e87671edf 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/RecordJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/RecordJsonUnmarshaller.java
@@ -36,16 +36,20 @@ public Record unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("SequenceNumber")) {
-                record.setSequenceNumber(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                record.setSequenceNumber(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ApproximateArrivalTimestamp")) {
                 record.setApproximateArrivalTimestamp(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Data")) {
-                record.setData(ByteBufferJsonUnmarshaller.getInstance().unmarshall(context));
+                record.setData(ByteBufferJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("PartitionKey")) {
-                record.setPartitionKey(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                record.setPartitionKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EncryptionType")) {
-                record.setEncryptionType(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                record.setEncryptionType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ResourceInUseExceptionUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ResourceInUseExceptionUnmarshaller.java
index 2f9470a275..628ee7c3aa 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ResourceInUseExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ResourceInUseExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesis.model.ResourceInUseException;
 
 public class ResourceInUseExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceInUseException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceInUseException resourceInUseException = new ResourceInUseException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceInUseException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceInUseException;
-    }
 }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ResourceNotFoundExceptionUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ResourceNotFoundExceptionUnmarshaller.java
index 44ebba5d34..ee96f5933a 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ResourceNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ResourceNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesis.model.ResourceNotFoundException;
 
 public class ResourceNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceNotFoundException resourceNotFoundException = new ResourceNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ShardJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ShardJsonUnmarshaller.java
index da61f72119..cfed09a613 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ShardJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/ShardJsonUnmarshaller.java
@@ -36,12 +36,14 @@ public Shard unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("ShardId")) {
-                shard.setShardId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                shard.setShardId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ParentShardId")) {
-                shard.setParentShardId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                shard.setParentShardId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("AdjacentParentShardId")) {
-                shard.setAdjacentParentShardId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                shard.setAdjacentParentShardId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("HashKeyRange")) {
                 shard.setHashKeyRange(HashKeyRangeJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/StreamDescriptionJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/StreamDescriptionJsonUnmarshaller.java
index 07f492e518..381febd732 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/StreamDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/StreamDescriptionJsonUnmarshaller.java
@@ -37,17 +37,19 @@ public StreamDescription unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("StreamName")) {
-                streamDescription.setStreamName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                streamDescription.setStreamName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("StreamARN")) {
-                streamDescription.setStreamARN(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                streamDescription.setStreamARN(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("StreamStatus")) {
-                streamDescription.setStreamStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                streamDescription.setStreamStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Shards")) {
                 streamDescription.setShards(new ListUnmarshaller<Shard>(ShardJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("HasMoreShards")) {
                 streamDescription.setHasMoreShards(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -59,13 +61,15 @@ public StreamDescription unmarshall(JsonUnmarshallerContext context) throws Exce
                         .unmarshall(context));
             } else if (name.equals("EnhancedMonitoring")) {
                 streamDescription.setEnhancedMonitoring(new ListUnmarshaller<EnhancedMetrics>(
-                        EnhancedMetricsJsonUnmarshaller.getInstance()).unmarshall(context));
+                        EnhancedMetricsJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("EncryptionType")) {
                 streamDescription.setEncryptionType(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("KeyId")) {
-                streamDescription
-                        .setKeyId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                streamDescription.setKeyId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/StreamDescriptionSummaryJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/StreamDescriptionSummaryJsonUnmarshaller.java
index bece2a0804..569de12cf8 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/StreamDescriptionSummaryJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/StreamDescriptionSummaryJsonUnmarshaller.java
@@ -47,20 +47,24 @@ public StreamDescriptionSummary unmarshall(JsonUnmarshallerContext context) thro
                         .unmarshall(context));
             } else if (name.equals("RetentionPeriodHours")) {
                 streamDescriptionSummary.setRetentionPeriodHours(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("StreamCreationTimestamp")) {
                 streamDescriptionSummary.setStreamCreationTimestamp(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EnhancedMonitoring")) {
                 streamDescriptionSummary
                         .setEnhancedMonitoring(new ListUnmarshaller<EnhancedMetrics>(
-                                EnhancedMetricsJsonUnmarshaller.getInstance()).unmarshall(context));
+                                EnhancedMetricsJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("EncryptionType")) {
                 streamDescriptionSummary.setEncryptionType(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("KeyId")) {
-                streamDescriptionSummary.setKeyId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                streamDescriptionSummary.setKeyId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("OpenShardCount")) {
                 streamDescriptionSummary.setOpenShardCount(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/TagJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/TagJsonUnmarshaller.java
index d581d27f82..1b5b8af5b7 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/TagJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesis/model/transform/TagJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Tag unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Key")) {
-                tag.setKey(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                tag.setKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Value")) {
-                tag.setValue(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                tag.setValue(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/InvalidArgumentExceptionUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/InvalidArgumentExceptionUnmarshaller.java
index 7cb2d51e98..defac7c064 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/InvalidArgumentExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/InvalidArgumentExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesisfirehose.model.InvalidArgumentException;
 
 public class InvalidArgumentExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidArgumentException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidArgumentException invalidArgumentException = new InvalidArgumentException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidArgumentException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidArgumentException;
-    }
 }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/PutRecordBatchResultJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/PutRecordBatchResultJsonUnmarshaller.java
index 5a33194bf7..6ff278fa8b 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/PutRecordBatchResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/PutRecordBatchResultJsonUnmarshaller.java
@@ -37,12 +37,13 @@ public PutRecordBatchResult unmarshall(JsonUnmarshallerContext context) throws E
                 putRecordBatchResult.setFailedPutCount(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Encrypted")) {
-                putRecordBatchResult.setEncrypted(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                putRecordBatchResult.setEncrypted(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RequestResponses")) {
                 putRecordBatchResult
                         .setRequestResponses(new ListUnmarshaller<PutRecordBatchResponseEntry>(
-                                PutRecordBatchResponseEntryJsonUnmarshaller.getInstance())
+                                PutRecordBatchResponseEntryJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else {
                 reader.skipValue();
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/RecordJsonUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/RecordJsonUnmarshaller.java
index b8f29e6132..92896cf255 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/RecordJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/RecordJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public Record unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Data")) {
-                record.setData(ByteBufferJsonUnmarshaller.getInstance().unmarshall(context));
+                record.setData(ByteBufferJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/ResourceNotFoundExceptionUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/ResourceNotFoundExceptionUnmarshaller.java
index 26e11ec5fb..ae36c13404 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/ResourceNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/ResourceNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesisfirehose.model.ResourceNotFoundException;
 
 public class ResourceNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceNotFoundException resourceNotFoundException = new ResourceNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/ServiceUnavailableExceptionUnmarshaller.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/ServiceUnavailableExceptionUnmarshaller.java
index 9cbaf565e8..3c115949c2 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/ServiceUnavailableExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/transform/ServiceUnavailableExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesisfirehose.model.ServiceUnavailableException;
 
 public class ServiceUnavailableExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ServiceUnavailableException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ServiceUnavailableException serviceUnavailableException = new ServiceUnavailableException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                serviceUnavailableException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return serviceUnavailableException;
-    }
 }
diff --git a/aws-android-sdk-kinesisvideo-archivedmedia/pom.xml b/aws-android-sdk-kinesisvideo-archivedmedia/pom.xml
index 51c07f87ac..3bf7b34b26 100644
--- a/aws-android-sdk-kinesisvideo-archivedmedia/pom.xml
+++ b/aws-android-sdk-kinesisvideo-archivedmedia/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/ClientLimitExceededExceptionUnmarshaller.java b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/ClientLimitExceededExceptionUnmarshaller.java
index 9fd69ebb68..1f2c5bd05b 100644
--- a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/ClientLimitExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/ClientLimitExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesisvideoarchivedmedia.model.ClientLimitExceededException;
 
 public class ClientLimitExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ClientLimitExceededException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ClientLimitExceededException clientLimitExceededException = new ClientLimitExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                clientLimitExceededException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return clientLimitExceededException;
-    }
 }
diff --git a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/FragmentJsonUnmarshaller.java b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/FragmentJsonUnmarshaller.java
index c58b1b3ba3..67eb0e44e5 100644
--- a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/FragmentJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/FragmentJsonUnmarshaller.java
@@ -36,15 +36,17 @@ public Fragment unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("FragmentNumber")) {
-                fragment.setFragmentNumber(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                fragment.setFragmentNumber(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("FragmentSizeInBytes")) {
-                fragment.setFragmentSizeInBytes(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                fragment.setFragmentSizeInBytes(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ProducerTimestamp")) {
                 fragment.setProducerTimestamp(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ServerTimestamp")) {
-                fragment.setServerTimestamp(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                fragment.setServerTimestamp(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("FragmentLengthInMilliseconds")) {
                 fragment.setFragmentLengthInMilliseconds(LongJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/GetHLSStreamingSessionURLResultJsonUnmarshaller.java b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/GetHLSStreamingSessionURLResultJsonUnmarshaller.java
index 571c5e8540..c3f003d9fc 100644
--- a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/GetHLSStreamingSessionURLResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/GetHLSStreamingSessionURLResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public GetHLSStreamingSessionURLResult unmarshall(JsonUnmarshallerContext contex
             String name = reader.nextName();
             if (name.equals("HLSStreamingSessionURL")) {
                 getHLSStreamingSessionURLResult.setHLSStreamingSessionURL(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/HLSFragmentSelectorJsonUnmarshaller.java b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/HLSFragmentSelectorJsonUnmarshaller.java
index 21878faff4..85416ee01f 100644
--- a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/HLSFragmentSelectorJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/HLSFragmentSelectorJsonUnmarshaller.java
@@ -41,7 +41,8 @@ public HLSFragmentSelector unmarshall(JsonUnmarshallerContext context) throws Ex
                         .unmarshall(context));
             } else if (name.equals("TimestampRange")) {
                 hLSFragmentSelector.setTimestampRange(HLSTimestampRangeJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/HLSTimestampRangeJsonUnmarshaller.java b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/HLSTimestampRangeJsonUnmarshaller.java
index 6519fd3122..b776de67e1 100644
--- a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/HLSTimestampRangeJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/HLSTimestampRangeJsonUnmarshaller.java
@@ -37,11 +37,11 @@ public HLSTimestampRange unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("StartTimestamp")) {
-                hLSTimestampRange.setStartTimestamp(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                hLSTimestampRange.setStartTimestamp(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EndTimestamp")) {
-                hLSTimestampRange.setEndTimestamp(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                hLSTimestampRange.setEndTimestamp(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/InvalidArgumentExceptionUnmarshaller.java b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/InvalidArgumentExceptionUnmarshaller.java
index f972c28057..20360a73df 100644
--- a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/InvalidArgumentExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/InvalidArgumentExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesisvideoarchivedmedia.model.InvalidArgumentException;
 
 public class InvalidArgumentExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidArgumentException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidArgumentException invalidArgumentException = new InvalidArgumentException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidArgumentException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidArgumentException;
-    }
 }
diff --git a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/InvalidCodecPrivateDataExceptionUnmarshaller.java b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/InvalidCodecPrivateDataExceptionUnmarshaller.java
index 866fff70af..a1d8a99aa3 100644
--- a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/InvalidCodecPrivateDataExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/InvalidCodecPrivateDataExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesisvideoarchivedmedia.model.InvalidCodecPrivateDataException;
 
 public class InvalidCodecPrivateDataExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidCodecPrivateDataException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidCodecPrivateDataException invalidCodecPrivateDataException = new InvalidCodecPrivateDataException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidCodecPrivateDataException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidCodecPrivateDataException;
-    }
 }
diff --git a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/ListFragmentsResultJsonUnmarshaller.java b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/ListFragmentsResultJsonUnmarshaller.java
index 5b1473c4b5..18c156673f 100644
--- a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/ListFragmentsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/ListFragmentsResultJsonUnmarshaller.java
@@ -35,10 +35,12 @@ public ListFragmentsResult unmarshall(JsonUnmarshallerContext context) throws Ex
             String name = reader.nextName();
             if (name.equals("Fragments")) {
                 listFragmentsResult.setFragments(new ListUnmarshaller<Fragment>(
-                        FragmentJsonUnmarshaller.getInstance()).unmarshall(context));
+                        FragmentJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextToken")) {
-                listFragmentsResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listFragmentsResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/MissingCodecPrivateDataExceptionUnmarshaller.java b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/MissingCodecPrivateDataExceptionUnmarshaller.java
index 8bbf539f23..d036e97333 100644
--- a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/MissingCodecPrivateDataExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/MissingCodecPrivateDataExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesisvideoarchivedmedia.model.MissingCodecPrivateDataException;
 
 public class MissingCodecPrivateDataExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public MissingCodecPrivateDataException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        MissingCodecPrivateDataException missingCodecPrivateDataException = new MissingCodecPrivateDataException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                missingCodecPrivateDataException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return missingCodecPrivateDataException;
-    }
 }
diff --git a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/NoDataRetentionExceptionUnmarshaller.java b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/NoDataRetentionExceptionUnmarshaller.java
index 9674d0c7f0..da469a35a1 100644
--- a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/NoDataRetentionExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/NoDataRetentionExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesisvideoarchivedmedia.model.NoDataRetentionException;
 
 public class NoDataRetentionExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public NoDataRetentionException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        NoDataRetentionException noDataRetentionException = new NoDataRetentionException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                noDataRetentionException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return noDataRetentionException;
-    }
 }
diff --git a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/NotAuthorizedExceptionUnmarshaller.java b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/NotAuthorizedExceptionUnmarshaller.java
index 8f9b7c66b1..fe8f40291f 100644
--- a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/NotAuthorizedExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/NotAuthorizedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesisvideoarchivedmedia.model.NotAuthorizedException;
 
 public class NotAuthorizedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public NotAuthorizedException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        NotAuthorizedException notAuthorizedException = new NotAuthorizedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                notAuthorizedException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return notAuthorizedException;
-    }
 }
diff --git a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/ResourceNotFoundExceptionUnmarshaller.java b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/ResourceNotFoundExceptionUnmarshaller.java
index 5f67856469..6221312b31 100644
--- a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/ResourceNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/ResourceNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesisvideoarchivedmedia.model.ResourceNotFoundException;
 
 public class ResourceNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceNotFoundException resourceNotFoundException = new ResourceNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/TimestampRangeJsonUnmarshaller.java b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/TimestampRangeJsonUnmarshaller.java
index 6a3d17e3e5..cde1df7552 100644
--- a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/TimestampRangeJsonUnmarshaller.java
+++ b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/TimestampRangeJsonUnmarshaller.java
@@ -37,11 +37,11 @@ public TimestampRange unmarshall(JsonUnmarshallerContext context) throws Excepti
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("StartTimestamp")) {
-                timestampRange.setStartTimestamp(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                timestampRange.setStartTimestamp(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EndTimestamp")) {
-                timestampRange.setEndTimestamp(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                timestampRange.setEndTimestamp(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/UnsupportedStreamMediaTypeExceptionUnmarshaller.java b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/UnsupportedStreamMediaTypeExceptionUnmarshaller.java
index 6c2baa1d74..83121ef0d4 100644
--- a/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/UnsupportedStreamMediaTypeExceptionUnmarshaller.java
+++ b/aws-android-sdk-kinesisvideo-archivedmedia/src/main/java/com/amazonaws/services/kinesisvideoarchivedmedia/model/transform/UnsupportedStreamMediaTypeExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kinesisvideoarchivedmedia.model.UnsupportedStreamMediaTypeException;
 
 public class UnsupportedStreamMediaTypeExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public UnsupportedStreamMediaTypeException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        UnsupportedStreamMediaTypeException unsupportedStreamMediaTypeException = new UnsupportedStreamMediaTypeException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                unsupportedStreamMediaTypeException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return unsupportedStreamMediaTypeException;
-    }
 }
diff --git a/aws-android-sdk-kinesisvideo/pom.xml b/aws-android-sdk-kinesisvideo/pom.xml
index 2a4673bf55..5c6c791513 100644
--- a/aws-android-sdk-kinesisvideo/pom.xml
+++ b/aws-android-sdk-kinesisvideo/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <licenses>
@@ -43,7 +43,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
 
     <dependency>
@@ -57,7 +57,7 @@
        <artifactId>android</artifactId>
        <version>5.0</version>
        <scope>system</scope>
-       <systemPath>${env.ANDROID_HOME}/platforms/android-${env.ANDROID_PLATFORM}/android.jar</systemPath>
+       <systemPath>${basedir}/../android-21-linux.jar</systemPath>
      </dependency>
 
     <dependency>
@@ -76,8 +76,7 @@
          <extensions>true</extensions>
          <configuration>
            <sdk>
-              <platform>${env.ANDROID_PLATFORM}</platform>
-              <buildTools>${env.ANDROID_BUILDTOOL_VERSION}</buildTools>
+             <platform>21</platform>
            </sdk>
            <nativeLibrariesDirectory>${project.basedir}/src/main/jni</nativeLibrariesDirectory>
          </configuration>
diff --git a/aws-android-sdk-kms/pom.xml b/aws-android-sdk-kms/pom.xml
index ff1a6f2376..32f8a2a039 100644
--- a/aws-android-sdk-kms/pom.xml
+++ b/aws-android-sdk-kms/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/AWSKMS.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/AWSKMS.java
index e78e999b5d..6fb5037f35 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/AWSKMS.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/AWSKMS.java
@@ -26,8 +26,8 @@
  * AWS Key Management Service (AWS KMS) is an encryption and key management web
  * service. This guide describes the AWS KMS operations that you can call
  * programmatically. For general information about AWS KMS, see the <a
- * href="http://docs.aws.amazon.com/kms/latest/developerguide/">AWS Key
- * Management Service Developer Guide</a>.
+ * href="http://docs.aws.amazon.com/kms/latest/developerguide/"> <i>AWS Key
+ * Management Service Developer Guide</i> </a>.
  * </p>
  * <note>
  * <p>
@@ -59,9 +59,9 @@
  * Requests must be signed by using an access key ID and a secret access key. We
  * strongly recommend that you <i>do not</i> use your AWS account (root) access
  * key ID and secret key for everyday work with AWS KMS. Instead, use the access
- * key ID and secret access key for an IAM user. You can also use the AWS
- * Security Token Service to generate temporary security credentials that you
- * can use to sign requests.
+ * key ID and secret access key for an IAM user, or you can use the AWS Security
+ * Token Service to generate temporary security credentials that you can use to
+ * sign requests.
  * </p>
  * <p>
  * All AWS KMS operations require <a href=
@@ -94,7 +94,7 @@
  * <a href=
  * "http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html"
  * >AWS Security Credentials</a> - This topic provides general information about
- * the types of credentials used for accessing AWS.
+ * the of credentials used for accessing AWS.
  * </p>
  * </li>
  * <li>
@@ -116,13 +116,12 @@
  * </li>
  * </ul>
  * <p>
- * <b>Commonly Used API Operations</b>
+ * <b>Commonly Used APIs</b>
  * </p>
  * <p>
- * Of the API operations discussed in this guide, the following will prove the
- * most useful for most applications. You will likely perform operations other
- * than these, such as creating keys and assigning policies, by using the
- * console.
+ * Of the APIs discussed in this guide, the following will prove the most useful
+ * for most applications. You will likely perform actions other than these, such
+ * as creating keys and assigning policies, by using the console.
  * </p>
  * <ul>
  * <li>
@@ -250,9 +249,89 @@ CancelKeyDeletionResult cancelKeyDeletion(CancelKeyDeletionRequest cancelKeyDele
 
     /**
      * <p>
-     * Creates a display name for a customer-managed customer master key (CMK).
-     * You can use an alias to identify a CMK in selected operations, such as
-     * <a>Encrypt</a> and <a>GenerateDataKey</a>.
+     * Connects or reconnects a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> to its associated AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * The custom key store must be connected before you can create customer
+     * master keys (CMKs) in the key store or use the CMKs it contains. You can
+     * disconnect and reconnect a custom key store at any time.
+     * </p>
+     * <p>
+     * To connect a custom key store, its associated AWS CloudHSM cluster must
+     * have at least one active HSM. To get the number of active HSMs in a
+     * cluster, use the <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters"
+     * >DescribeClusters</a> operation. To add HSMs to the cluster, use the <a
+     * href
+     * ="http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_CreateHsm"
+     * >CreateHsm</a> operation.
+     * </p>
+     * <p>
+     * The connection process can take an extended amount of time to complete;
+     * up to 20 minutes. This operation starts the connection process, but it
+     * does not wait for it to complete. When it succeeds, this operation
+     * quickly returns an HTTP 200 response and a JSON object with no
+     * properties. However, this response does not indicate that the custom key
+     * store is connected. To get the connection state of the custom key store,
+     * use the <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * During the connection process, AWS KMS finds the AWS CloudHSM cluster
+     * that is associated with the custom key store, creates the connection
+     * infrastructure, connects to the cluster, logs into the AWS CloudHSM
+     * client as the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+     * > <code>kmsuser</code> crypto user</a> (CU), and rotates its password.
+     * </p>
+     * <p>
+     * The <code>ConnectCustomKeyStore</code> operation might fail for various
+     * reasons. To find the reason, use the <a>DescribeCustomKeyStores</a>
+     * operation and see the <code>ConnectionErrorCode</code> in the response.
+     * For help interpreting the <code>ConnectionErrorCode</code>, see
+     * <a>CustomKeyStoresListEntry</a>.
+     * </p>
+     * <p>
+     * To fix the failure, use the <a>DisconnectCustomKeyStore</a> operation to
+     * disconnect the custom key store, correct the error, use the
+     * <a>UpdateCustomKeyStore</a> operation if necessary, and then use
+     * <code>ConnectCustomKeyStore</code> again.
+     * </p>
+     * <p>
+     * If you are having trouble connecting or disconnecting a custom key store,
+     * see <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     * >Troubleshooting a Custom Key Store</a> in the <i>AWS Key Management
+     * Service Developer Guide</i>.
+     * </p>
+     * 
+     * @param connectCustomKeyStoreRequest
+     * @return connectCustomKeyStoreResult The response from the
+     *         ConnectCustomKeyStore service method, as returned by AWS Key
+     *         Management Service.
+     * @throws CloudHsmClusterNotActiveException
+     * @throws CustomKeyStoreInvalidStateException
+     * @throws CustomKeyStoreNotFoundException
+     * @throws KMSInternalException
+     * @throws CloudHsmClusterInvalidConfigurationException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             Key Management Service indicating either a problem with the
+     *             data in the request, or a server side issue.
+     */
+    ConnectCustomKeyStoreResult connectCustomKeyStore(
+            ConnectCustomKeyStoreRequest connectCustomKeyStoreRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Creates a display name for a customer master key (CMK). You can use an
+     * alias to identify a CMK in selected operations, such as <a>Encrypt</a>
+     * and <a>GenerateDataKey</a>.
      * </p>
      * <p>
      * Each CMK can have multiple aliases, but each alias points to only one
@@ -267,9 +346,11 @@ CancelKeyDeletionResult cancelKeyDeletion(CancelKeyDeletionRequest cancelKeyDele
      * aliases of all CMKs, use the <a>ListAliases</a> operation.
      * </p>
      * <p>
-     * The alias name can contain only alphanumeric characters, forward slashes
-     * (/), underscores (_), and dashes (-). Alias names cannot begin with
-     * <b>aws/</b>. That alias name prefix is reserved for AWS managed CMKs.
+     * An alias must start with the word <code>alias</code> followed by a
+     * forward slash (<code>alias/</code>). The alias name can contain only
+     * alphanumeric characters, forward slashes (/), underscores (_), and dashes
+     * (-). Alias names cannot begin with <code>aws</code>; that alias name
+     * prefix is reserved by Amazon Web Services (AWS).
      * </p>
      * <p>
      * The alias and the CMK it is mapped to must be in the same AWS account and
@@ -306,6 +387,150 @@ CancelKeyDeletionResult cancelKeyDeletion(CancelKeyDeletionRequest cancelKeyDele
     void createAlias(CreateAliasRequest createAliasRequest) throws AmazonClientException,
             AmazonServiceException;
 
+    /**
+     * <p>
+     * Creates a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> that is associated with an <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/clusters.html">AWS
+     * CloudHSM cluster</a> that you own and manage.
+     * </p>
+     * <p>
+     * This operation is part of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+     * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+     * convenience and extensive integration of AWS KMS with the isolation and
+     * control of a single-tenant key store.
+     * </p>
+     * <p>
+     * When the operation completes successfully, it returns the ID of the new
+     * custom key store. Before you can use your new custom key store, you need
+     * to use the <a>ConnectCustomKeyStore</a> operation to connect the new key
+     * store to its AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * The <code>CreateCustomKeyStore</code> operation requires the following
+     * elements.
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * You must specify an active AWS CloudHSM cluster in the same account and
+     * AWS Region as the custom key store. You can use an existing cluster or <a
+     * href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/create-cluster.html"
+     * >create and activate a new AWS CloudHSM cluster</a> for the key store.
+     * AWS KMS does not require exclusive use of the cluster.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * You must include the content of the <i>trust anchor certificate</i> for
+     * the cluster. You created this certificate, and saved it in the
+     * <code>customerCA.crt</code> file, when you <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html#sign-csr"
+     * >initialized the cluster</a>.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * You must provide the password of the dedicated <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+     * > <code>kmsuser</code> crypto user</a> (CU) account in the cluster.
+     * </p>
+     * <p>
+     * Before you create the custom key store, use the <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/cloudhsm_mgmt_util-createUser.html"
+     * >createUser</a> command in <code>cloudhsm_mgmt_util</code> to create <a
+     * href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+     * >a crypto user (CU) named <code>kmsuser</code> </a>in specified AWS
+     * CloudHSM cluster. AWS KMS uses the <code>kmsuser</code> CU account to
+     * create and manage key material on your behalf. For instructions, see <a
+     * href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/create-keystore.html#before-keystore"
+     * >Create the kmsuser Crypto User</a> in the <i>AWS Key Management Service
+     * Developer Guide</i>.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * The AWS CloudHSM cluster that you specify must meet the following
+     * requirements.
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * The cluster must be active and be in the same AWS account and Region as
+     * the custom key store.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Each custom key store must be associated with a different AWS CloudHSM
+     * cluster. The cluster cannot be associated with another custom key store
+     * or have the same cluster certificate as a cluster that is associated with
+     * another custom key store. To view the cluster certificate, use the AWS
+     * CloudHSM <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     * >DescribeClusters</a> operation. Clusters that share a backup history
+     * have the same cluster certificate.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * The cluster must be configured with subnets in at least two different
+     * Availability Zones in the Region. Because AWS CloudHSM is not supported
+     * in all Availability Zones, we recommend that the cluster have subnets in
+     * all Availability Zones in the Region.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * The cluster must contain at least two active HSMs, each in a different
+     * Availability Zone.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * New custom key stores are not automatically connected. After you create
+     * your custom key store, use the <a>ConnectCustomKeyStore</a> operation to
+     * connect the custom key store to its associated AWS CloudHSM cluster. Even
+     * if you are not going to use your custom key store immediately, you might
+     * want to connect it to verify that all settings are correct and then
+     * disconnect it until you are ready to use it.
+     * </p>
+     * <p>
+     * If this operation succeeds, it returns the ID of the new custom key
+     * store. For help with failures, see <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     * >Troubleshoot a Custom Key Store</a> in the <i>AWS KMS Developer
+     * Guide</i>.
+     * </p>
+     * 
+     * @param createCustomKeyStoreRequest
+     * @return createCustomKeyStoreResult The response from the
+     *         CreateCustomKeyStore service method, as returned by AWS Key
+     *         Management Service.
+     * @throws CloudHsmClusterInUseException
+     * @throws CustomKeyStoreNameInUseException
+     * @throws CloudHsmClusterNotFoundException
+     * @throws KMSInternalException
+     * @throws CloudHsmClusterNotActiveException
+     * @throws IncorrectTrustAnchorException
+     * @throws CloudHsmClusterInvalidConfigurationException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             Key Management Service indicating either a problem with the
+     *             data in the request, or a server side issue.
+     */
+    CreateCustomKeyStoreResult createCustomKeyStore(
+            CreateCustomKeyStoreRequest createCustomKeyStoreRequest) throws AmazonClientException,
+            AmazonServiceException;
+
     /**
      * <p>
      * Adds a grant to a customer master key (CMK). The grant specifies who can
@@ -355,9 +580,9 @@ CreateGrantResult createGrant(CreateGrantRequest createGrantRequest)
      * </p>
      * <p>
      * You can use a CMK to encrypt small amounts of data (4 KiB or less)
-     * directly. But CMKs are more commonly used to encrypt data encryption keys
-     * (DEKs), which are used to encrypt raw data. For more information about
-     * DEKs and the difference between CMKs and DEKs, see the following:
+     * directly, but CMKs are more commonly used to encrypt data keys, which are
+     * used to encrypt raw data. For more information about data keys and the
+     * difference between CMKs and data keys, see the following:
      * </p>
      * <ul>
      * <li>
@@ -375,6 +600,21 @@ CreateGrantResult createGrant(CreateGrantRequest createGrantRequest)
      * </li>
      * </ul>
      * <p>
+     * If you plan to <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html"
+     * >import key material</a>, use the <code>Origin</code> parameter with a
+     * value of <code>EXTERNAL</code> to create a CMK with no key material.
+     * </p>
+     * <p>
+     * To create a CMK in a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>, use <code>CustomKeyStoreId</code> parameter to
+     * specify the custom key store. You must also use the <code>Origin</code>
+     * parameter with a value of <code>AWS_CLOUDHSM</code>. The AWS CloudHSM
+     * cluster that is associated with the custom key store must have at least
+     * two active HSMs, each in a different Availability Zone in the Region.
+     * </p>
+     * <p>
      * You cannot use this operation to create a CMK in a different AWS account.
      * </p>
      * 
@@ -388,6 +628,9 @@ CreateGrantResult createGrant(CreateGrantRequest createGrantRequest)
      * @throws KMSInternalException
      * @throws LimitExceededException
      * @throws TagException
+     * @throws CustomKeyStoreNotFoundException
+     * @throws CustomKeyStoreInvalidStateException
+     * @throws CloudHsmClusterInvalidConfigurationException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -422,13 +665,15 @@ CreateKeyResult createKey(CreateKeyRequest createKeyRequest) throws AmazonClient
      * </li>
      * </ul>
      * <p>
-     * Whenever possible, use key policies to give users permission to call the
-     * Decrypt operation on the CMK, instead of IAM policies. Otherwise, you
-     * might create an IAM user policy that gives the user Decrypt permission on
-     * all CMKs. This user could decrypt ciphertext that was encrypted by CMKs
-     * in other accounts if the key policy for the cross-account CMK permits it.
-     * If you must use an IAM policy for <code>Decrypt</code> permissions, limit
-     * the user to particular CMKs or particular trusted accounts.
+     * Note that if a caller has been granted access permissions to all keys
+     * (through, for example, IAM user policies that grant <code>Decrypt</code>
+     * permission on all resources), then ciphertext encrypted by using keys in
+     * other accounts where the key grants access to the caller can be
+     * decrypted. To remedy this, we recommend that you do not grant
+     * <code>Decrypt</code> access in an IAM user policy. Instead grant
+     * <code>Decrypt</code> access only in key policies. If you must grant
+     * <code>Decrypt</code> access in an IAM user policy, you should scope the
+     * resource to specific keys or to specific trusted accounts.
      * </p>
      * <p>
      * The result of this operation varies with the key state of the CMK. For
@@ -494,6 +739,71 @@ DecryptResult decrypt(DecryptRequest decryptRequest) throws AmazonClientExceptio
     void deleteAlias(DeleteAliasRequest deleteAliasRequest) throws AmazonClientException,
             AmazonServiceException;
 
+    /**
+     * <p>
+     * Deletes a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>. This operation does not delete the AWS CloudHSM
+     * cluster that is associated with the custom key store, or affect any users
+     * or keys in the cluster.
+     * </p>
+     * <p>
+     * The custom key store that you delete cannot contain any AWS KMS <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys"
+     * >customer master keys (CMKs)</a>. Before deleting the key store, verify
+     * that you will never need to use any of the CMKs in the key store for any
+     * cryptographic operations. Then, use <a>ScheduleKeyDeletion</a> to delete
+     * the AWS KMS customer master keys (CMKs) from the key store. When the
+     * scheduled waiting period expires, the <code>ScheduleKeyDeletion</code>
+     * operation deletes the CMKs. Then it makes a best effort to delete the key
+     * material from the associated cluster. However, you might need to manually
+     * <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-orphaned-key"
+     * >delete the orphaned key material</a> from the cluster and its backups.
+     * </p>
+     * <p>
+     * After all CMKs are deleted from AWS KMS, use
+     * <a>DisconnectCustomKeyStore</a> to disconnect the key store from AWS KMS.
+     * Then, you can delete the custom key store.
+     * </p>
+     * <p>
+     * Instead of deleting the custom key store, consider using
+     * <a>DisconnectCustomKeyStore</a> to disconnect it from AWS KMS. While the
+     * key store is disconnected, you cannot create or use the CMKs in the key
+     * store. But, you do not need to delete CMKs and you can reconnect a
+     * disconnected custom key store at any time.
+     * </p>
+     * <p>
+     * If the operation succeeds, it returns a JSON object with no properties.
+     * </p>
+     * <p>
+     * This operation is part of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+     * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+     * convenience and extensive integration of AWS KMS with the isolation and
+     * control of a single-tenant key store.
+     * </p>
+     * 
+     * @param deleteCustomKeyStoreRequest
+     * @return deleteCustomKeyStoreResult The response from the
+     *         DeleteCustomKeyStore service method, as returned by AWS Key
+     *         Management Service.
+     * @throws CustomKeyStoreHasCMKsException
+     * @throws CustomKeyStoreInvalidStateException
+     * @throws CustomKeyStoreNotFoundException
+     * @throws KMSInternalException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             Key Management Service indicating either a problem with the
+     *             data in the request, or a server side issue.
+     */
+    DeleteCustomKeyStoreResult deleteCustomKeyStore(
+            DeleteCustomKeyStoreRequest deleteCustomKeyStoreRequest) throws AmazonClientException,
+            AmazonServiceException;
+
     /**
      * <p>
      * Deletes key material that you previously imported. This operation makes
@@ -539,15 +849,78 @@ void deleteAlias(DeleteAliasRequest deleteAliasRequest) throws AmazonClientExcep
     void deleteImportedKeyMaterial(DeleteImportedKeyMaterialRequest deleteImportedKeyMaterialRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * <p>
+     * Gets information about <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key stores</a> in the account and region.
+     * </p>
+     * <p>
+     * This operation is part of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+     * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+     * convenience and extensive integration of AWS KMS with the isolation and
+     * control of a single-tenant key store.
+     * </p>
+     * <p>
+     * By default, this operation returns information about all custom key
+     * stores in the account and region. To get only information about a
+     * particular custom key store, use either the
+     * <code>CustomKeyStoreName</code> or <code>CustomKeyStoreId</code>
+     * parameter (but not both).
+     * </p>
+     * <p>
+     * To determine whether the custom key store is connected to its AWS
+     * CloudHSM cluster, use the <code>ConnectionState</code> element in the
+     * response. If an attempt to connect the custom key store failed, the
+     * <code>ConnectionState</code> value is <code>FAILED</code> and the
+     * <code>ConnectionErrorCode</code> element in the response indicates the
+     * cause of the failure. For help interpreting the
+     * <code>ConnectionErrorCode</code>, see <a>CustomKeyStoresListEntry</a>.
+     * </p>
+     * <p>
+     * Custom key stores have a <code>DISCONNECTED</code> connection state if
+     * the key store has never been connected or you use the
+     * <a>DisconnectCustomKeyStore</a> operation to disconnect it. If your
+     * custom key store state is <code>CONNECTED</code> but you are having
+     * trouble using it, make sure that its associated AWS CloudHSM cluster is
+     * active and contains the minimum number of HSMs required for the
+     * operation, if any.
+     * </p>
+     * <p>
+     * For help repairing your custom key store, see the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore-html"
+     * >Troubleshooting Custom Key Stores</a> topic in the <i>AWS Key Management
+     * Service Developer Guide</i>.
+     * </p>
+     * 
+     * @param describeCustomKeyStoresRequest
+     * @return describeCustomKeyStoresResult The response from the
+     *         DescribeCustomKeyStores service method, as returned by AWS Key
+     *         Management Service.
+     * @throws CustomKeyStoreNotFoundException
+     * @throws KMSInternalException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             Key Management Service indicating either a problem with the
+     *             data in the request, or a server side issue.
+     */
+    DescribeCustomKeyStoresResult describeCustomKeyStores(
+            DescribeCustomKeyStoresRequest describeCustomKeyStoresRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * <p>
      * Provides detailed information about the specified customer master key
      * (CMK).
      * </p>
      * <p>
-     * You can use <code>DescribeKey</code> on a predefined AWS alias, that is,
-     * an AWS alias with no key ID. When you do, AWS KMS associates the alias
-     * with an <a href=
+     * If you use <code>DescribeKey</code> on a predefined AWS alias, that is,
+     * an AWS alias with no key ID, AWS KMS associates the alias with an <a
+     * href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys"
      * >AWS managed CMK</a> and returns its <code>KeyId</code> and
      * <code>Arn</code> in the response.
@@ -650,8 +1023,61 @@ void disableKeyRotation(DisableKeyRotationRequest disableKeyRotationRequest)
 
     /**
      * <p>
-     * Sets the state of a customer master key (CMK) to enabled, thereby
-     * permitting its use for cryptographic operations. You cannot perform this
+     * Disconnects the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> from its associated AWS CloudHSM cluster. While a
+     * custom key store is disconnected, you can manage the custom key store and
+     * its customer master keys (CMKs), but you cannot create or use CMKs in the
+     * custom key store. You can reconnect the custom key store at any time.
+     * </p>
+     * <note>
+     * <p>
+     * While a custom key store is disconnected, all attempts to create customer
+     * master keys (CMKs) in the custom key store or to use existing CMKs in
+     * cryptographic operations will fail. This action can prevent users from
+     * storing and accessing sensitive data.
+     * </p>
+     * </note>
+     * <p/>
+     * <p>
+     * To find the connection state of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation. To reconnect a custom key
+     * store, use the <a>ConnectCustomKeyStore</a> operation.
+     * </p>
+     * <p>
+     * If the operation succeeds, it returns a JSON object with no properties.
+     * </p>
+     * <p>
+     * This operation is part of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+     * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+     * convenience and extensive integration of AWS KMS with the isolation and
+     * control of a single-tenant key store.
+     * </p>
+     * 
+     * @param disconnectCustomKeyStoreRequest
+     * @return disconnectCustomKeyStoreResult The response from the
+     *         DisconnectCustomKeyStore service method, as returned by AWS Key
+     *         Management Service.
+     * @throws CustomKeyStoreInvalidStateException
+     * @throws CustomKeyStoreNotFoundException
+     * @throws KMSInternalException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             Key Management Service indicating either a problem with the
+     *             data in the request, or a server side issue.
+     */
+    DisconnectCustomKeyStoreResult disconnectCustomKeyStore(
+            DisconnectCustomKeyStoreRequest disconnectCustomKeyStoreRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Sets the key state of a customer master key (CMK) to enabled. This allows
+     * you to use the CMK for cryptographic operations. You cannot perform this
      * operation on a CMK in a different AWS account.
      * </p>
      * <p>
@@ -689,6 +1115,12 @@ void enableKey(EnableKeyRequest enableKeyRequest) throws AmazonClientException,
      * different AWS account.
      * </p>
      * <p>
+     * You cannot enable automatic rotation of CMKs with imported key material
+     * or CMKs in a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>.
+     * </p>
+     * <p>
      * The result of this operation varies with the key state of the CMK. For
      * details, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
@@ -729,24 +1161,30 @@ void enableKeyRotation(EnableKeyRotationRequest enableKeyRotationRequest)
      * </li>
      * <li>
      * <p>
-     * You can use the <code>Encrypt</code> operation to move encrypted data
-     * from one AWS region to another. In the first region, generate a data key
-     * and use the plaintext key to encrypt the data. Then, in the new region,
-     * call the <code>Encrypt</code> method on same plaintext data key. Now, you
-     * can safely move the encrypted data and encrypted data key to the new
-     * region, and decrypt in the new region when necessary.
+     * To move encrypted data from one AWS region to another, you can use this
+     * operation to encrypt in the new region the plaintext data key that was
+     * used to encrypt the data in the original region. This provides you with
+     * an encrypted copy of the data key that can be decrypted in the new region
+     * and used there to decrypt the encrypted data.
      * </p>
      * </li>
      * </ul>
      * <p>
-     * You don't need use this operation to encrypt a data key within a region.
-     * The <a>GenerateDataKey</a> and <a>GenerateDataKeyWithoutPlaintext</a>
-     * operations return an encrypted data key.
+     * To perform this operation on a CMK in a different AWS account, specify
+     * the key ARN or alias ARN in the value of the KeyId parameter.
+     * </p>
+     * <p>
+     * Unless you are moving encrypted data from one region to another, you
+     * don't use this operation to encrypt a generated data key within a region.
+     * To get data keys that are already encrypted, call the
+     * <a>GenerateDataKey</a> or <a>GenerateDataKeyWithoutPlaintext</a>
+     * operation. Data keys don't need to be encrypted again by calling
+     * <code>Encrypt</code>.
      * </p>
      * <p>
-     * Also, you don't need to use this operation to encrypt data in your
-     * application. You can use the plaintext and encrypted data keys that the
-     * <code>GenerateDataKey</code> operation returns.
+     * To encrypt data locally in your application, use the
+     * <a>GenerateDataKey</a> operation to return a plaintext data encryption
+     * key and a copy of the key encrypted under the CMK of your choosing.
      * </p>
      * <p>
      * The result of this operation varies with the key state of the CMK. For
@@ -755,10 +1193,6 @@ void enableKeyRotation(EnableKeyRotationRequest enableKeyRotationRequest)
      * Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
      * Management Service Developer Guide</i>.
      * </p>
-     * <p>
-     * To perform this operation on a CMK in a different AWS account, specify
-     * the key ARN or alias ARN in the value of the KeyId parameter.
-     * </p>
      * 
      * @param encryptRequest
      * @return encryptResult The response from the Encrypt service method, as
@@ -913,8 +1347,8 @@ GenerateDataKeyResult generateDataKey(GenerateDataKeyRequest generateDataKeyRequ
      * key and then stores it in the container. Later, a different component of
      * the system, called the <i>data plane</i>, puts encrypted data into the
      * containers. To do this, it passes the encrypted data key to the
-     * <a>Decrypt</a> operation. It then uses the returned plaintext data key to
-     * encrypt data and finally stores the encrypted data in the container. In
+     * <a>Decrypt</a> operation, then uses the returned plaintext data key to
+     * encrypt data, and finally stores the encrypted data in the container. In
      * this system, the control plane never sees the plaintext data key.
      * </p>
      * <p>
@@ -954,6 +1388,13 @@ GenerateDataKeyWithoutPlaintextResult generateDataKeyWithoutPlaintext(
      * Returns a random byte string that is cryptographically secure.
      * </p>
      * <p>
+     * By default, the random byte string is generated in AWS KMS. To generate
+     * the byte string in the AWS CloudHSM cluster that is associated with a <a
+     * href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>, specify the custom key store ID.
+     * </p>
+     * <p>
      * For more information about entropy and random number generation, see the
      * <a href=
      * "https://d0.awsstatic.com/whitepapers/KMS-Cryptographic-Details.pdf">AWS
@@ -965,6 +1406,8 @@ GenerateDataKeyWithoutPlaintextResult generateDataKeyWithoutPlaintext(
      *         method, as returned by AWS Key Management Service.
      * @throws DependencyTimeoutException
      * @throws KMSInternalException
+     * @throws CustomKeyStoreNotFoundException
+     * @throws CustomKeyStoreInvalidStateException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1169,7 +1612,7 @@ GetParametersForImportResult getParametersForImport(
      * </li>
      * </ul>
      * <p>
-     * When this operation is successful, the CMK's key state changes from
+     * When this operation is successful, the key state of the CMK changes from
      * <code>PendingImport</code> to <code>Enabled</code>, and you can use the
      * CMK. After you successfully import key material into a CMK, you can
      * reimport the same key material into that CMK, but you cannot import
@@ -1209,28 +1652,22 @@ ImportKeyMaterialResult importKeyMaterial(ImportKeyMaterialRequest importKeyMate
 
     /**
      * <p>
-     * Gets a list of aliases in the caller's AWS account and region. You cannot
-     * list aliases in other accounts. For more information about aliases, see
-     * <a>CreateAlias</a>.
+     * Gets a list of all aliases in the caller's AWS account and region. You
+     * cannot list aliases in other accounts. For more information about
+     * aliases, see <a>CreateAlias</a>.
      * </p>
      * <p>
-     * By default, the ListAliases command returns all aliases in the account
-     * and region. To get only the aliases that point to a particular customer
-     * master key (CMK), use the <code>KeyId</code> parameter.
-     * </p>
-     * <p>
-     * The <code>ListAliases</code> response can include aliases that you
-     * created and associated with your customer managed CMKs, and aliases that
-     * AWS created and associated with AWS managed CMKs in your account. You can
-     * recognize AWS aliases because their names have the format
-     * <code>aws/&lt;service-name&gt;</code>, such as <code>aws/dynamodb</code>.
+     * By default, the <code>ListAliases</code> command returns all aliases in
+     * the account and region. To get only the aliases that point to a
+     * particular customer master key (CMK), use the <code>KeyId</code>
+     * parameter.
      * </p>
      * <p>
-     * The response might also include aliases that have no
-     * <code>TargetKeyId</code> field. These are predefined aliases that AWS has
-     * created but has not yet associated with a CMK. Aliases that AWS creates
-     * in your account, including predefined aliases, do not count against your
-     * <a href=
+     * The <code>ListAliases</code> response might include several aliases have
+     * no <code>TargetKeyId</code> field. These are predefined aliases that AWS
+     * has created but has not yet associated with a CMK. Aliases that AWS
+     * creates in your account, including predefined aliases, do not count
+     * against your <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/limits.html#aliases-limit"
      * >AWS KMS aliases limit</a>.
      * </p>
@@ -1241,6 +1678,8 @@ ImportKeyMaterialResult importKeyMaterial(ImportKeyMaterialRequest importKeyMate
      * @throws DependencyTimeoutException
      * @throws InvalidMarkerException
      * @throws KMSInternalException
+     * @throws InvalidArnException
+     * @throws NotFoundException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1439,7 +1878,7 @@ void putKeyPolicy(PutKeyPolicyRequest putKeyPolicyRequest) throws AmazonClientEx
      * "http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html"
      * >key policies</a> to permit reencryption from or to the CMK. This
      * permission is automatically included in the key policy when you create a
-     * CMK through the console. But you must include it manually when you create
+     * CMK through the console, but you must include it manually when you create
      * a CMK programmatically or when you set a key policy with the
      * <a>PutKeyPolicy</a> operation.
      * </p>
@@ -1559,24 +1998,34 @@ void revokeGrant(RevokeGrantRequest revokeGrantRequest) throws AmazonClientExcep
      * Schedules the deletion of a customer master key (CMK). You may provide a
      * waiting period, specified in days, before deletion occurs. If you do not
      * provide a waiting period, the default period of 30 days is used. When
-     * this operation is successful, the state of the CMK changes to
+     * this operation is successful, the key state of the CMK changes to
      * <code>PendingDeletion</code>. Before the waiting period ends, you can use
      * <a>CancelKeyDeletion</a> to cancel the deletion of the CMK. After the
      * waiting period ends, AWS KMS deletes the CMK and all AWS KMS data
      * associated with it, including all aliases that refer to it.
      * </p>
-     * <p>
-     * You cannot perform this operation on a CMK in a different AWS account.
-     * </p>
      * <important>
      * <p>
      * Deleting a CMK is a destructive and potentially dangerous operation. When
-     * a CMK is deleted, all data that was encrypted under the CMK is rendered
-     * unrecoverable. To restrict the use of a CMK without deleting it, use
+     * a CMK is deleted, all data that was encrypted under the CMK is
+     * unrecoverable. To prevent the use of a CMK without deleting it, use
      * <a>DisableKey</a>.
      * </p>
      * </important>
      * <p>
+     * If you schedule deletion of a CMK from a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>, when the waiting period expires,
+     * <code>ScheduleKeyDeletion</code> deletes the CMK from AWS KMS. Then AWS
+     * KMS makes a best effort to delete the key material from the associated
+     * AWS CloudHSM cluster. However, you might need to manually <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-orphaned-key"
+     * >delete the orphaned key material</a> from the cluster and its backups.
+     * </p>
+     * <p>
+     * You cannot perform this operation on a CMK in a different AWS account.
+     * </p>
+     * <p>
      * For more information about scheduling a CMK for deletion, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html"
      * >Deleting Customer Master Keys</a> in the <i>AWS Key Management Service
@@ -1743,10 +2192,117 @@ void untagResource(UntagResourceRequest untagResourceRequest) throws AmazonClien
     void updateAlias(UpdateAliasRequest updateAliasRequest) throws AmazonClientException,
             AmazonServiceException;
 
+    /**
+     * <p>
+     * Changes the properties of a custom key store. Use the
+     * <code>CustomKeyStoreId</code> parameter to identify the custom key store
+     * you want to edit. Use the remaining parameters to change the properties
+     * of the custom key store.
+     * </p>
+     * <p>
+     * You can only update a custom key store that is disconnected. To
+     * disconnect the custom key store, use <a>DisconnectCustomKeyStore</a>. To
+     * reconnect the custom key store after the update completes, use
+     * <a>ConnectCustomKeyStore</a>. To find the connection state of a custom
+     * key store, use the <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * Use the <code>NewCustomKeyStoreName</code> parameter to change the
+     * friendly name of the custom key store to the value that you specify.
+     * </p>
+     * <p>
+     * Use the <code>KeyStorePassword</code> parameter tell AWS KMS the current
+     * password of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+     * > <code>kmsuser</code> crypto user (CU)</a> in the associated AWS
+     * CloudHSM cluster. You can use this parameter to fix connection failures
+     * that occur when AWS KMS cannot log into the associated cluster because
+     * the <code>kmsuser</code> password has changed. This value does not change
+     * the password in the AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * Use the <code>CloudHsmClusterId</code> parameter to associate the custom
+     * key store with a related AWS CloudHSM cluster, that is, a cluster that
+     * shares a backup history with the original cluster. You can use this
+     * parameter to repair a custom key store if its AWS CloudHSM cluster
+     * becomes corrupted or is deleted, or when you need to create or restore a
+     * cluster from a backup.
+     * </p>
+     * <p>
+     * The cluster ID must identify a AWS CloudHSM cluster with the following
+     * requirements.
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * The cluster must be active and be in the same AWS account and Region as
+     * the custom key store.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * The cluster must have the same cluster certificate as the original
+     * cluster. You cannot use this parameter to associate the custom key store
+     * with an unrelated cluster. To view the cluster certificate, use the AWS
+     * CloudHSM <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     * >DescribeClusters</a> operation. Clusters that share a backup history
+     * have the same cluster certificate.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * The cluster must be configured with subnets in at least two different
+     * Availability Zones in the Region. Because AWS CloudHSM is not supported
+     * in all Availability Zones, we recommend that the cluster have subnets in
+     * all Availability Zones in the Region.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * The cluster must contain at least two active HSMs, each in a different
+     * Availability Zone.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * If the operation succeeds, it returns a JSON object with no properties.
+     * </p>
+     * <p>
+     * This operation is part of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+     * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+     * convenience and extensive integration of AWS KMS with the isolation and
+     * control of a single-tenant key store.
+     * </p>
+     * 
+     * @param updateCustomKeyStoreRequest
+     * @return updateCustomKeyStoreResult The response from the
+     *         UpdateCustomKeyStore service method, as returned by AWS Key
+     *         Management Service.
+     * @throws CustomKeyStoreNotFoundException
+     * @throws CloudHsmClusterNotFoundException
+     * @throws CloudHsmClusterNotRelatedException
+     * @throws CustomKeyStoreInvalidStateException
+     * @throws KMSInternalException
+     * @throws CloudHsmClusterNotActiveException
+     * @throws CloudHsmClusterInvalidConfigurationException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             Key Management Service indicating either a problem with the
+     *             data in the request, or a server side issue.
+     */
+    UpdateCustomKeyStoreResult updateCustomKeyStore(
+            UpdateCustomKeyStoreRequest updateCustomKeyStoreRequest) throws AmazonClientException,
+            AmazonServiceException;
+
     /**
      * <p>
      * Updates the description of a customer master key (CMK). To see the
-     * description of a CMK, use <a>DescribeKey</a>.
+     * decription of a CMK, use <a>DescribeKey</a>.
      * </p>
      * <p>
      * You cannot perform this operation on a CMK in a different AWS account.
@@ -1782,9 +2338,9 @@ void updateKeyDescription(UpdateKeyDescriptionRequest updateKeyDescriptionReques
      * </p>
      * <p>
      * You can use a CMK to encrypt small amounts of data (4 KiB or less)
-     * directly. But CMKs are more commonly used to encrypt data encryption keys
-     * (DEKs), which are used to encrypt raw data. For more information about
-     * DEKs and the difference between CMKs and DEKs, see the following:
+     * directly, but CMKs are more commonly used to encrypt data keys, which are
+     * used to encrypt raw data. For more information about data keys and the
+     * difference between CMKs and data keys, see the following:
      * </p>
      * <ul>
      * <li>
@@ -1802,6 +2358,21 @@ void updateKeyDescription(UpdateKeyDescriptionRequest updateKeyDescriptionReques
      * </li>
      * </ul>
      * <p>
+     * If you plan to <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html"
+     * >import key material</a>, use the <code>Origin</code> parameter with a
+     * value of <code>EXTERNAL</code> to create a CMK with no key material.
+     * </p>
+     * <p>
+     * To create a CMK in a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>, use <code>CustomKeyStoreId</code> parameter to
+     * specify the custom key store. You must also use the <code>Origin</code>
+     * parameter with a value of <code>AWS_CLOUDHSM</code>. The AWS CloudHSM
+     * cluster that is associated with the custom key store must have at least
+     * two active HSMs, each in a different Availability Zone in the Region.
+     * </p>
+     * <p>
      * You cannot use this operation to create a CMK in a different AWS account.
      * </p>
      * 
@@ -1814,6 +2385,9 @@ void updateKeyDescription(UpdateKeyDescriptionRequest updateKeyDescriptionReques
      * @throws KMSInternalException
      * @throws LimitExceededException
      * @throws TagException
+     * @throws CustomKeyStoreNotFoundException
+     * @throws CustomKeyStoreInvalidStateException
+     * @throws CloudHsmClusterInvalidConfigurationException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1847,28 +2421,22 @@ void updateKeyDescription(UpdateKeyDescriptionRequest updateKeyDescriptionReques
 
     /**
      * <p>
-     * Gets a list of aliases in the caller's AWS account and region. You cannot
-     * list aliases in other accounts. For more information about aliases, see
-     * <a>CreateAlias</a>.
+     * Gets a list of all aliases in the caller's AWS account and region. You
+     * cannot list aliases in other accounts. For more information about
+     * aliases, see <a>CreateAlias</a>.
      * </p>
      * <p>
-     * By default, the ListAliases command returns all aliases in the account
-     * and region. To get only the aliases that point to a particular customer
-     * master key (CMK), use the <code>KeyId</code> parameter.
-     * </p>
-     * <p>
-     * The <code>ListAliases</code> response can include aliases that you
-     * created and associated with your customer managed CMKs, and aliases that
-     * AWS created and associated with AWS managed CMKs in your account. You can
-     * recognize AWS aliases because their names have the format
-     * <code>aws/&lt;service-name&gt;</code>, such as <code>aws/dynamodb</code>.
+     * By default, the <code>ListAliases</code> command returns all aliases in
+     * the account and region. To get only the aliases that point to a
+     * particular customer master key (CMK), use the <code>KeyId</code>
+     * parameter.
      * </p>
      * <p>
-     * The response might also include aliases that have no
-     * <code>TargetKeyId</code> field. These are predefined aliases that AWS has
-     * created but has not yet associated with a CMK. Aliases that AWS creates
-     * in your account, including predefined aliases, do not count against your
-     * <a href=
+     * The <code>ListAliases</code> response might include several aliases have
+     * no <code>TargetKeyId</code> field. These are predefined aliases that AWS
+     * has created but has not yet associated with a CMK. Aliases that AWS
+     * creates in your account, including predefined aliases, do not count
+     * against your <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/limits.html#aliases-limit"
      * >AWS KMS aliases limit</a>.
      * </p>
@@ -1878,6 +2446,8 @@ void updateKeyDescription(UpdateKeyDescriptionRequest updateKeyDescriptionReques
      * @throws DependencyTimeoutException
      * @throws InvalidMarkerException
      * @throws KMSInternalException
+     * @throws InvalidArnException
+     * @throws NotFoundException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1943,6 +2513,13 @@ void updateKeyDescription(UpdateKeyDescriptionRequest updateKeyDescriptionReques
      * Returns a random byte string that is cryptographically secure.
      * </p>
      * <p>
+     * By default, the random byte string is generated in AWS KMS. To generate
+     * the byte string in the AWS CloudHSM cluster that is associated with a <a
+     * href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>, specify the custom key store ID.
+     * </p>
+     * <p>
      * For more information about entropy and random number generation, see the
      * <a href=
      * "https://d0.awsstatic.com/whitepapers/KMS-Cryptographic-Details.pdf">AWS
@@ -1953,6 +2530,8 @@ void updateKeyDescription(UpdateKeyDescriptionRequest updateKeyDescriptionReques
      *         method, as returned by AWS Key Management Service.
      * @throws DependencyTimeoutException
      * @throws KMSInternalException
+     * @throws CustomKeyStoreNotFoundException
+     * @throws CustomKeyStoreInvalidStateException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/AWSKMSClient.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/AWSKMSClient.java
index 21173eb9f4..23f57e4670 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/AWSKMSClient.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/AWSKMSClient.java
@@ -40,8 +40,8 @@
  * AWS Key Management Service (AWS KMS) is an encryption and key management web
  * service. This guide describes the AWS KMS operations that you can call
  * programmatically. For general information about AWS KMS, see the <a
- * href="http://docs.aws.amazon.com/kms/latest/developerguide/">AWS Key
- * Management Service Developer Guide</a>.
+ * href="http://docs.aws.amazon.com/kms/latest/developerguide/"> <i>AWS Key
+ * Management Service Developer Guide</i> </a>.
  * </p>
  * <note>
  * <p>
@@ -73,9 +73,9 @@
  * Requests must be signed by using an access key ID and a secret access key. We
  * strongly recommend that you <i>do not</i> use your AWS account (root) access
  * key ID and secret key for everyday work with AWS KMS. Instead, use the access
- * key ID and secret access key for an IAM user. You can also use the AWS
- * Security Token Service to generate temporary security credentials that you
- * can use to sign requests.
+ * key ID and secret access key for an IAM user, or you can use the AWS Security
+ * Token Service to generate temporary security credentials that you can use to
+ * sign requests.
  * </p>
  * <p>
  * All AWS KMS operations require <a href=
@@ -108,7 +108,7 @@
  * <a href=
  * "http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html"
  * >AWS Security Credentials</a> - This topic provides general information about
- * the types of credentials used for accessing AWS.
+ * the of credentials used for accessing AWS.
  * </p>
  * </li>
  * <li>
@@ -130,13 +130,12 @@
  * </li>
  * </ul>
  * <p>
- * <b>Commonly Used API Operations</b>
+ * <b>Commonly Used APIs</b>
  * </p>
  * <p>
- * Of the API operations discussed in this guide, the following will prove the
- * most useful for most applications. You will likely perform operations other
- * than these, such as creating keys and assigning policies, by using the
- * console.
+ * Of the APIs discussed in this guide, the following will prove the most useful
+ * for most applications. You will likely perform actions other than these, such
+ * as creating keys and assigning policies, by using the console.
  * </p>
  * <ul>
  * <li>
@@ -381,10 +380,20 @@ public AWSKMSClient(AWSCredentialsProvider awsCredentialsProvider,
     private void init() {
         jsonErrorUnmarshallers = new ArrayList<JsonErrorUnmarshaller>();
         jsonErrorUnmarshallers.add(new AlreadyExistsExceptionUnmarshaller());
+        jsonErrorUnmarshallers.add(new CloudHsmClusterInUseExceptionUnmarshaller());
+        jsonErrorUnmarshallers.add(new CloudHsmClusterInvalidConfigurationExceptionUnmarshaller());
+        jsonErrorUnmarshallers.add(new CloudHsmClusterNotActiveExceptionUnmarshaller());
+        jsonErrorUnmarshallers.add(new CloudHsmClusterNotFoundExceptionUnmarshaller());
+        jsonErrorUnmarshallers.add(new CloudHsmClusterNotRelatedExceptionUnmarshaller());
+        jsonErrorUnmarshallers.add(new CustomKeyStoreHasCMKsExceptionUnmarshaller());
+        jsonErrorUnmarshallers.add(new CustomKeyStoreInvalidStateExceptionUnmarshaller());
+        jsonErrorUnmarshallers.add(new CustomKeyStoreNameInUseExceptionUnmarshaller());
+        jsonErrorUnmarshallers.add(new CustomKeyStoreNotFoundExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new DependencyTimeoutExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new DisabledExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new ExpiredImportTokenExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new IncorrectKeyMaterialExceptionUnmarshaller());
+        jsonErrorUnmarshallers.add(new IncorrectTrustAnchorExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new InvalidAliasNameExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new InvalidArnExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new InvalidCiphertextExceptionUnmarshaller());
@@ -491,9 +500,116 @@ public CancelKeyDeletionResult cancelKeyDeletion(
 
     /**
      * <p>
-     * Creates a display name for a customer-managed customer master key (CMK).
-     * You can use an alias to identify a CMK in selected operations, such as
-     * <a>Encrypt</a> and <a>GenerateDataKey</a>.
+     * Connects or reconnects a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> to its associated AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * The custom key store must be connected before you can create customer
+     * master keys (CMKs) in the key store or use the CMKs it contains. You can
+     * disconnect and reconnect a custom key store at any time.
+     * </p>
+     * <p>
+     * To connect a custom key store, its associated AWS CloudHSM cluster must
+     * have at least one active HSM. To get the number of active HSMs in a
+     * cluster, use the <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters"
+     * >DescribeClusters</a> operation. To add HSMs to the cluster, use the <a
+     * href
+     * ="http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_CreateHsm"
+     * >CreateHsm</a> operation.
+     * </p>
+     * <p>
+     * The connection process can take an extended amount of time to complete;
+     * up to 20 minutes. This operation starts the connection process, but it
+     * does not wait for it to complete. When it succeeds, this operation
+     * quickly returns an HTTP 200 response and a JSON object with no
+     * properties. However, this response does not indicate that the custom key
+     * store is connected. To get the connection state of the custom key store,
+     * use the <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * During the connection process, AWS KMS finds the AWS CloudHSM cluster
+     * that is associated with the custom key store, creates the connection
+     * infrastructure, connects to the cluster, logs into the AWS CloudHSM
+     * client as the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+     * > <code>kmsuser</code> crypto user</a> (CU), and rotates its password.
+     * </p>
+     * <p>
+     * The <code>ConnectCustomKeyStore</code> operation might fail for various
+     * reasons. To find the reason, use the <a>DescribeCustomKeyStores</a>
+     * operation and see the <code>ConnectionErrorCode</code> in the response.
+     * For help interpreting the <code>ConnectionErrorCode</code>, see
+     * <a>CustomKeyStoresListEntry</a>.
+     * </p>
+     * <p>
+     * To fix the failure, use the <a>DisconnectCustomKeyStore</a> operation to
+     * disconnect the custom key store, correct the error, use the
+     * <a>UpdateCustomKeyStore</a> operation if necessary, and then use
+     * <code>ConnectCustomKeyStore</code> again.
+     * </p>
+     * <p>
+     * If you are having trouble connecting or disconnecting a custom key store,
+     * see <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     * >Troubleshooting a Custom Key Store</a> in the <i>AWS Key Management
+     * Service Developer Guide</i>.
+     * </p>
+     * 
+     * @param connectCustomKeyStoreRequest
+     * @return connectCustomKeyStoreResult The response from the
+     *         ConnectCustomKeyStore service method, as returned by AWS Key
+     *         Management Service.
+     * @throws CloudHsmClusterNotActiveException
+     * @throws CustomKeyStoreInvalidStateException
+     * @throws CustomKeyStoreNotFoundException
+     * @throws KMSInternalException
+     * @throws CloudHsmClusterInvalidConfigurationException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             Key Management Service indicating either a problem with the
+     *             data in the request, or a server side issue.
+     */
+    public ConnectCustomKeyStoreResult connectCustomKeyStore(
+            ConnectCustomKeyStoreRequest connectCustomKeyStoreRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(connectCustomKeyStoreRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<ConnectCustomKeyStoreRequest> request = null;
+        Response<ConnectCustomKeyStoreResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new ConnectCustomKeyStoreRequestMarshaller()
+                        .marshall(connectCustomKeyStoreRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<ConnectCustomKeyStoreResult, JsonUnmarshallerContext> unmarshaller = new ConnectCustomKeyStoreResultJsonUnmarshaller();
+            JsonResponseHandler<ConnectCustomKeyStoreResult> responseHandler = new JsonResponseHandler<ConnectCustomKeyStoreResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Creates a display name for a customer master key (CMK). You can use an
+     * alias to identify a CMK in selected operations, such as <a>Encrypt</a>
+     * and <a>GenerateDataKey</a>.
      * </p>
      * <p>
      * Each CMK can have multiple aliases, but each alias points to only one
@@ -508,9 +624,11 @@ public CancelKeyDeletionResult cancelKeyDeletion(
      * aliases of all CMKs, use the <a>ListAliases</a> operation.
      * </p>
      * <p>
-     * The alias name can contain only alphanumeric characters, forward slashes
-     * (/), underscores (_), and dashes (-). Alias names cannot begin with
-     * <b>aws/</b>. That alias name prefix is reserved for AWS managed CMKs.
+     * An alias must start with the word <code>alias</code> followed by a
+     * forward slash (<code>alias/</code>). The alias name can contain only
+     * alphanumeric characters, forward slashes (/), underscores (_), and dashes
+     * (-). Alias names cannot begin with <code>aws</code>; that alias name
+     * prefix is reserved by Amazon Web Services (AWS).
      * </p>
      * <p>
      * The alias and the CMK it is mapped to must be in the same AWS account and
@@ -568,6 +686,177 @@ public void createAlias(CreateAliasRequest createAliasRequest)
         }
     }
 
+    /**
+     * <p>
+     * Creates a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> that is associated with an <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/clusters.html">AWS
+     * CloudHSM cluster</a> that you own and manage.
+     * </p>
+     * <p>
+     * This operation is part of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+     * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+     * convenience and extensive integration of AWS KMS with the isolation and
+     * control of a single-tenant key store.
+     * </p>
+     * <p>
+     * When the operation completes successfully, it returns the ID of the new
+     * custom key store. Before you can use your new custom key store, you need
+     * to use the <a>ConnectCustomKeyStore</a> operation to connect the new key
+     * store to its AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * The <code>CreateCustomKeyStore</code> operation requires the following
+     * elements.
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * You must specify an active AWS CloudHSM cluster in the same account and
+     * AWS Region as the custom key store. You can use an existing cluster or <a
+     * href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/create-cluster.html"
+     * >create and activate a new AWS CloudHSM cluster</a> for the key store.
+     * AWS KMS does not require exclusive use of the cluster.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * You must include the content of the <i>trust anchor certificate</i> for
+     * the cluster. You created this certificate, and saved it in the
+     * <code>customerCA.crt</code> file, when you <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html#sign-csr"
+     * >initialized the cluster</a>.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * You must provide the password of the dedicated <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+     * > <code>kmsuser</code> crypto user</a> (CU) account in the cluster.
+     * </p>
+     * <p>
+     * Before you create the custom key store, use the <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/cloudhsm_mgmt_util-createUser.html"
+     * >createUser</a> command in <code>cloudhsm_mgmt_util</code> to create <a
+     * href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+     * >a crypto user (CU) named <code>kmsuser</code> </a>in specified AWS
+     * CloudHSM cluster. AWS KMS uses the <code>kmsuser</code> CU account to
+     * create and manage key material on your behalf. For instructions, see <a
+     * href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/create-keystore.html#before-keystore"
+     * >Create the kmsuser Crypto User</a> in the <i>AWS Key Management Service
+     * Developer Guide</i>.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * The AWS CloudHSM cluster that you specify must meet the following
+     * requirements.
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * The cluster must be active and be in the same AWS account and Region as
+     * the custom key store.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Each custom key store must be associated with a different AWS CloudHSM
+     * cluster. The cluster cannot be associated with another custom key store
+     * or have the same cluster certificate as a cluster that is associated with
+     * another custom key store. To view the cluster certificate, use the AWS
+     * CloudHSM <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     * >DescribeClusters</a> operation. Clusters that share a backup history
+     * have the same cluster certificate.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * The cluster must be configured with subnets in at least two different
+     * Availability Zones in the Region. Because AWS CloudHSM is not supported
+     * in all Availability Zones, we recommend that the cluster have subnets in
+     * all Availability Zones in the Region.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * The cluster must contain at least two active HSMs, each in a different
+     * Availability Zone.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * New custom key stores are not automatically connected. After you create
+     * your custom key store, use the <a>ConnectCustomKeyStore</a> operation to
+     * connect the custom key store to its associated AWS CloudHSM cluster. Even
+     * if you are not going to use your custom key store immediately, you might
+     * want to connect it to verify that all settings are correct and then
+     * disconnect it until you are ready to use it.
+     * </p>
+     * <p>
+     * If this operation succeeds, it returns the ID of the new custom key
+     * store. For help with failures, see <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     * >Troubleshoot a Custom Key Store</a> in the <i>AWS KMS Developer
+     * Guide</i>.
+     * </p>
+     * 
+     * @param createCustomKeyStoreRequest
+     * @return createCustomKeyStoreResult The response from the
+     *         CreateCustomKeyStore service method, as returned by AWS Key
+     *         Management Service.
+     * @throws CloudHsmClusterInUseException
+     * @throws CustomKeyStoreNameInUseException
+     * @throws CloudHsmClusterNotFoundException
+     * @throws KMSInternalException
+     * @throws CloudHsmClusterNotActiveException
+     * @throws IncorrectTrustAnchorException
+     * @throws CloudHsmClusterInvalidConfigurationException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             Key Management Service indicating either a problem with the
+     *             data in the request, or a server side issue.
+     */
+    public CreateCustomKeyStoreResult createCustomKeyStore(
+            CreateCustomKeyStoreRequest createCustomKeyStoreRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(createCustomKeyStoreRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<CreateCustomKeyStoreRequest> request = null;
+        Response<CreateCustomKeyStoreResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new CreateCustomKeyStoreRequestMarshaller()
+                        .marshall(createCustomKeyStoreRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<CreateCustomKeyStoreResult, JsonUnmarshallerContext> unmarshaller = new CreateCustomKeyStoreResultJsonUnmarshaller();
+            JsonResponseHandler<CreateCustomKeyStoreResult> responseHandler = new JsonResponseHandler<CreateCustomKeyStoreResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * <p>
      * Adds a grant to a customer master key (CMK). The grant specifies who can
@@ -643,9 +932,9 @@ public CreateGrantResult createGrant(CreateGrantRequest createGrantRequest)
      * </p>
      * <p>
      * You can use a CMK to encrypt small amounts of data (4 KiB or less)
-     * directly. But CMKs are more commonly used to encrypt data encryption keys
-     * (DEKs), which are used to encrypt raw data. For more information about
-     * DEKs and the difference between CMKs and DEKs, see the following:
+     * directly, but CMKs are more commonly used to encrypt data keys, which are
+     * used to encrypt raw data. For more information about data keys and the
+     * difference between CMKs and data keys, see the following:
      * </p>
      * <ul>
      * <li>
@@ -663,6 +952,21 @@ public CreateGrantResult createGrant(CreateGrantRequest createGrantRequest)
      * </li>
      * </ul>
      * <p>
+     * If you plan to <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html"
+     * >import key material</a>, use the <code>Origin</code> parameter with a
+     * value of <code>EXTERNAL</code> to create a CMK with no key material.
+     * </p>
+     * <p>
+     * To create a CMK in a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>, use <code>CustomKeyStoreId</code> parameter to
+     * specify the custom key store. You must also use the <code>Origin</code>
+     * parameter with a value of <code>AWS_CLOUDHSM</code>. The AWS CloudHSM
+     * cluster that is associated with the custom key store must have at least
+     * two active HSMs, each in a different Availability Zone in the Region.
+     * </p>
+     * <p>
      * You cannot use this operation to create a CMK in a different AWS account.
      * </p>
      * 
@@ -676,6 +980,9 @@ public CreateGrantResult createGrant(CreateGrantRequest createGrantRequest)
      * @throws KMSInternalException
      * @throws LimitExceededException
      * @throws TagException
+     * @throws CustomKeyStoreNotFoundException
+     * @throws CustomKeyStoreInvalidStateException
+     * @throws CloudHsmClusterInvalidConfigurationException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -736,13 +1043,15 @@ public CreateKeyResult createKey(CreateKeyRequest createKeyRequest)
      * </li>
      * </ul>
      * <p>
-     * Whenever possible, use key policies to give users permission to call the
-     * Decrypt operation on the CMK, instead of IAM policies. Otherwise, you
-     * might create an IAM user policy that gives the user Decrypt permission on
-     * all CMKs. This user could decrypt ciphertext that was encrypted by CMKs
-     * in other accounts if the key policy for the cross-account CMK permits it.
-     * If you must use an IAM policy for <code>Decrypt</code> permissions, limit
-     * the user to particular CMKs or particular trusted accounts.
+     * Note that if a caller has been granted access permissions to all keys
+     * (through, for example, IAM user policies that grant <code>Decrypt</code>
+     * permission on all resources), then ciphertext encrypted by using keys in
+     * other accounts where the key grants access to the caller can be
+     * decrypted. To remedy this, we recommend that you do not grant
+     * <code>Decrypt</code> access in an IAM user policy. Instead grant
+     * <code>Decrypt</code> access only in key policies. If you must grant
+     * <code>Decrypt</code> access in an IAM user policy, you should scope the
+     * resource to specific keys or to specific trusted accounts.
      * </p>
      * <p>
      * The result of this operation varies with the key state of the CMK. For
@@ -855,6 +1164,98 @@ public void deleteAlias(DeleteAliasRequest deleteAliasRequest)
         }
     }
 
+    /**
+     * <p>
+     * Deletes a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>. This operation does not delete the AWS CloudHSM
+     * cluster that is associated with the custom key store, or affect any users
+     * or keys in the cluster.
+     * </p>
+     * <p>
+     * The custom key store that you delete cannot contain any AWS KMS <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys"
+     * >customer master keys (CMKs)</a>. Before deleting the key store, verify
+     * that you will never need to use any of the CMKs in the key store for any
+     * cryptographic operations. Then, use <a>ScheduleKeyDeletion</a> to delete
+     * the AWS KMS customer master keys (CMKs) from the key store. When the
+     * scheduled waiting period expires, the <code>ScheduleKeyDeletion</code>
+     * operation deletes the CMKs. Then it makes a best effort to delete the key
+     * material from the associated cluster. However, you might need to manually
+     * <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-orphaned-key"
+     * >delete the orphaned key material</a> from the cluster and its backups.
+     * </p>
+     * <p>
+     * After all CMKs are deleted from AWS KMS, use
+     * <a>DisconnectCustomKeyStore</a> to disconnect the key store from AWS KMS.
+     * Then, you can delete the custom key store.
+     * </p>
+     * <p>
+     * Instead of deleting the custom key store, consider using
+     * <a>DisconnectCustomKeyStore</a> to disconnect it from AWS KMS. While the
+     * key store is disconnected, you cannot create or use the CMKs in the key
+     * store. But, you do not need to delete CMKs and you can reconnect a
+     * disconnected custom key store at any time.
+     * </p>
+     * <p>
+     * If the operation succeeds, it returns a JSON object with no properties.
+     * </p>
+     * <p>
+     * This operation is part of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+     * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+     * convenience and extensive integration of AWS KMS with the isolation and
+     * control of a single-tenant key store.
+     * </p>
+     * 
+     * @param deleteCustomKeyStoreRequest
+     * @return deleteCustomKeyStoreResult The response from the
+     *         DeleteCustomKeyStore service method, as returned by AWS Key
+     *         Management Service.
+     * @throws CustomKeyStoreHasCMKsException
+     * @throws CustomKeyStoreInvalidStateException
+     * @throws CustomKeyStoreNotFoundException
+     * @throws KMSInternalException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             Key Management Service indicating either a problem with the
+     *             data in the request, or a server side issue.
+     */
+    public DeleteCustomKeyStoreResult deleteCustomKeyStore(
+            DeleteCustomKeyStoreRequest deleteCustomKeyStoreRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(deleteCustomKeyStoreRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<DeleteCustomKeyStoreRequest> request = null;
+        Response<DeleteCustomKeyStoreResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new DeleteCustomKeyStoreRequestMarshaller()
+                        .marshall(deleteCustomKeyStoreRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<DeleteCustomKeyStoreResult, JsonUnmarshallerContext> unmarshaller = new DeleteCustomKeyStoreResultJsonUnmarshaller();
+            JsonResponseHandler<DeleteCustomKeyStoreResult> responseHandler = new JsonResponseHandler<DeleteCustomKeyStoreResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * <p>
      * Deletes key material that you previously imported. This operation makes
@@ -923,15 +1324,105 @@ public void deleteImportedKeyMaterial(
         }
     }
 
+    /**
+     * <p>
+     * Gets information about <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key stores</a> in the account and region.
+     * </p>
+     * <p>
+     * This operation is part of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+     * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+     * convenience and extensive integration of AWS KMS with the isolation and
+     * control of a single-tenant key store.
+     * </p>
+     * <p>
+     * By default, this operation returns information about all custom key
+     * stores in the account and region. To get only information about a
+     * particular custom key store, use either the
+     * <code>CustomKeyStoreName</code> or <code>CustomKeyStoreId</code>
+     * parameter (but not both).
+     * </p>
+     * <p>
+     * To determine whether the custom key store is connected to its AWS
+     * CloudHSM cluster, use the <code>ConnectionState</code> element in the
+     * response. If an attempt to connect the custom key store failed, the
+     * <code>ConnectionState</code> value is <code>FAILED</code> and the
+     * <code>ConnectionErrorCode</code> element in the response indicates the
+     * cause of the failure. For help interpreting the
+     * <code>ConnectionErrorCode</code>, see <a>CustomKeyStoresListEntry</a>.
+     * </p>
+     * <p>
+     * Custom key stores have a <code>DISCONNECTED</code> connection state if
+     * the key store has never been connected or you use the
+     * <a>DisconnectCustomKeyStore</a> operation to disconnect it. If your
+     * custom key store state is <code>CONNECTED</code> but you are having
+     * trouble using it, make sure that its associated AWS CloudHSM cluster is
+     * active and contains the minimum number of HSMs required for the
+     * operation, if any.
+     * </p>
+     * <p>
+     * For help repairing your custom key store, see the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore-html"
+     * >Troubleshooting Custom Key Stores</a> topic in the <i>AWS Key Management
+     * Service Developer Guide</i>.
+     * </p>
+     * 
+     * @param describeCustomKeyStoresRequest
+     * @return describeCustomKeyStoresResult The response from the
+     *         DescribeCustomKeyStores service method, as returned by AWS Key
+     *         Management Service.
+     * @throws CustomKeyStoreNotFoundException
+     * @throws KMSInternalException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             Key Management Service indicating either a problem with the
+     *             data in the request, or a server side issue.
+     */
+    public DescribeCustomKeyStoresResult describeCustomKeyStores(
+            DescribeCustomKeyStoresRequest describeCustomKeyStoresRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(describeCustomKeyStoresRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<DescribeCustomKeyStoresRequest> request = null;
+        Response<DescribeCustomKeyStoresResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new DescribeCustomKeyStoresRequestMarshaller()
+                        .marshall(describeCustomKeyStoresRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<DescribeCustomKeyStoresResult, JsonUnmarshallerContext> unmarshaller = new DescribeCustomKeyStoresResultJsonUnmarshaller();
+            JsonResponseHandler<DescribeCustomKeyStoresResult> responseHandler = new JsonResponseHandler<DescribeCustomKeyStoresResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * <p>
      * Provides detailed information about the specified customer master key
      * (CMK).
      * </p>
      * <p>
-     * You can use <code>DescribeKey</code> on a predefined AWS alias, that is,
-     * an AWS alias with no key ID. When you do, AWS KMS associates the alias
-     * with an <a href=
+     * If you use <code>DescribeKey</code> on a predefined AWS alias, that is,
+     * an AWS alias with no key ID, AWS KMS associates the alias with an <a
+     * href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys"
      * >AWS managed CMK</a> and returns its <code>KeyId</code> and
      * <code>Arn</code> in the response.
@@ -1103,8 +1594,88 @@ public void disableKeyRotation(DisableKeyRotationRequest disableKeyRotationReque
 
     /**
      * <p>
-     * Sets the state of a customer master key (CMK) to enabled, thereby
-     * permitting its use for cryptographic operations. You cannot perform this
+     * Disconnects the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> from its associated AWS CloudHSM cluster. While a
+     * custom key store is disconnected, you can manage the custom key store and
+     * its customer master keys (CMKs), but you cannot create or use CMKs in the
+     * custom key store. You can reconnect the custom key store at any time.
+     * </p>
+     * <note>
+     * <p>
+     * While a custom key store is disconnected, all attempts to create customer
+     * master keys (CMKs) in the custom key store or to use existing CMKs in
+     * cryptographic operations will fail. This action can prevent users from
+     * storing and accessing sensitive data.
+     * </p>
+     * </note>
+     * <p/>
+     * <p>
+     * To find the connection state of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation. To reconnect a custom key
+     * store, use the <a>ConnectCustomKeyStore</a> operation.
+     * </p>
+     * <p>
+     * If the operation succeeds, it returns a JSON object with no properties.
+     * </p>
+     * <p>
+     * This operation is part of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+     * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+     * convenience and extensive integration of AWS KMS with the isolation and
+     * control of a single-tenant key store.
+     * </p>
+     * 
+     * @param disconnectCustomKeyStoreRequest
+     * @return disconnectCustomKeyStoreResult The response from the
+     *         DisconnectCustomKeyStore service method, as returned by AWS Key
+     *         Management Service.
+     * @throws CustomKeyStoreInvalidStateException
+     * @throws CustomKeyStoreNotFoundException
+     * @throws KMSInternalException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             Key Management Service indicating either a problem with the
+     *             data in the request, or a server side issue.
+     */
+    public DisconnectCustomKeyStoreResult disconnectCustomKeyStore(
+            DisconnectCustomKeyStoreRequest disconnectCustomKeyStoreRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(disconnectCustomKeyStoreRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<DisconnectCustomKeyStoreRequest> request = null;
+        Response<DisconnectCustomKeyStoreResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new DisconnectCustomKeyStoreRequestMarshaller()
+                        .marshall(disconnectCustomKeyStoreRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<DisconnectCustomKeyStoreResult, JsonUnmarshallerContext> unmarshaller = new DisconnectCustomKeyStoreResultJsonUnmarshaller();
+            JsonResponseHandler<DisconnectCustomKeyStoreResult> responseHandler = new JsonResponseHandler<DisconnectCustomKeyStoreResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Sets the key state of a customer master key (CMK) to enabled. This allows
+     * you to use the CMK for cryptographic operations. You cannot perform this
      * operation on a CMK in a different AWS account.
      * </p>
      * <p>
@@ -1163,6 +1734,12 @@ public void enableKey(EnableKeyRequest enableKeyRequest)
      * different AWS account.
      * </p>
      * <p>
+     * You cannot enable automatic rotation of CMKs with imported key material
+     * or CMKs in a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>.
+     * </p>
+     * <p>
      * The result of this operation varies with the key state of the CMK. For
      * details, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
@@ -1225,24 +1802,30 @@ public void enableKeyRotation(EnableKeyRotationRequest enableKeyRotationRequest)
      * </li>
      * <li>
      * <p>
-     * You can use the <code>Encrypt</code> operation to move encrypted data
-     * from one AWS region to another. In the first region, generate a data key
-     * and use the plaintext key to encrypt the data. Then, in the new region,
-     * call the <code>Encrypt</code> method on same plaintext data key. Now, you
-     * can safely move the encrypted data and encrypted data key to the new
-     * region, and decrypt in the new region when necessary.
+     * To move encrypted data from one AWS region to another, you can use this
+     * operation to encrypt in the new region the plaintext data key that was
+     * used to encrypt the data in the original region. This provides you with
+     * an encrypted copy of the data key that can be decrypted in the new region
+     * and used there to decrypt the encrypted data.
      * </p>
      * </li>
      * </ul>
      * <p>
-     * You don't need use this operation to encrypt a data key within a region.
-     * The <a>GenerateDataKey</a> and <a>GenerateDataKeyWithoutPlaintext</a>
-     * operations return an encrypted data key.
+     * To perform this operation on a CMK in a different AWS account, specify
+     * the key ARN or alias ARN in the value of the KeyId parameter.
+     * </p>
+     * <p>
+     * Unless you are moving encrypted data from one region to another, you
+     * don't use this operation to encrypt a generated data key within a region.
+     * To get data keys that are already encrypted, call the
+     * <a>GenerateDataKey</a> or <a>GenerateDataKeyWithoutPlaintext</a>
+     * operation. Data keys don't need to be encrypted again by calling
+     * <code>Encrypt</code>.
      * </p>
      * <p>
-     * Also, you don't need to use this operation to encrypt data in your
-     * application. You can use the plaintext and encrypted data keys that the
-     * <code>GenerateDataKey</code> operation returns.
+     * To encrypt data locally in your application, use the
+     * <a>GenerateDataKey</a> operation to return a plaintext data encryption
+     * key and a copy of the key encrypted under the CMK of your choosing.
      * </p>
      * <p>
      * The result of this operation varies with the key state of the CMK. For
@@ -1251,10 +1834,6 @@ public void enableKeyRotation(EnableKeyRotationRequest enableKeyRotationRequest)
      * Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
      * Management Service Developer Guide</i>.
      * </p>
-     * <p>
-     * To perform this operation on a CMK in a different AWS account, specify
-     * the key ARN or alias ARN in the value of the KeyId parameter.
-     * </p>
      * 
      * @param encryptRequest
      * @return encryptResult The response from the Encrypt service method, as
@@ -1461,8 +2040,8 @@ public GenerateDataKeyResult generateDataKey(GenerateDataKeyRequest generateData
      * key and then stores it in the container. Later, a different component of
      * the system, called the <i>data plane</i>, puts encrypted data into the
      * containers. To do this, it passes the encrypted data key to the
-     * <a>Decrypt</a> operation. It then uses the returned plaintext data key to
-     * encrypt data and finally stores the encrypted data in the container. In
+     * <a>Decrypt</a> operation, then uses the returned plaintext data key to
+     * encrypt data, and finally stores the encrypted data in the container. In
      * this system, the control plane never sees the plaintext data key.
      * </p>
      * <p>
@@ -1529,6 +2108,13 @@ public GenerateDataKeyWithoutPlaintextResult generateDataKeyWithoutPlaintext(
      * Returns a random byte string that is cryptographically secure.
      * </p>
      * <p>
+     * By default, the random byte string is generated in AWS KMS. To generate
+     * the byte string in the AWS CloudHSM cluster that is associated with a <a
+     * href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>, specify the custom key store ID.
+     * </p>
+     * <p>
      * For more information about entropy and random number generation, see the
      * <a href=
      * "https://d0.awsstatic.com/whitepapers/KMS-Cryptographic-Details.pdf">AWS
@@ -1540,6 +2126,8 @@ public GenerateDataKeyWithoutPlaintextResult generateDataKeyWithoutPlaintext(
      *         method, as returned by AWS Key Management Service.
      * @throws DependencyTimeoutException
      * @throws KMSInternalException
+     * @throws CustomKeyStoreNotFoundException
+     * @throws CustomKeyStoreInvalidStateException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1850,7 +2438,7 @@ public GetParametersForImportResult getParametersForImport(
      * </li>
      * </ul>
      * <p>
-     * When this operation is successful, the CMK's key state changes from
+     * When this operation is successful, the key state of the CMK changes from
      * <code>PendingImport</code> to <code>Enabled</code>, and you can use the
      * CMK. After you successfully import key material into a CMK, you can
      * reimport the same key material into that CMK, but you cannot import
@@ -1918,28 +2506,22 @@ public ImportKeyMaterialResult importKeyMaterial(
 
     /**
      * <p>
-     * Gets a list of aliases in the caller's AWS account and region. You cannot
-     * list aliases in other accounts. For more information about aliases, see
-     * <a>CreateAlias</a>.
-     * </p>
-     * <p>
-     * By default, the ListAliases command returns all aliases in the account
-     * and region. To get only the aliases that point to a particular customer
-     * master key (CMK), use the <code>KeyId</code> parameter.
+     * Gets a list of all aliases in the caller's AWS account and region. You
+     * cannot list aliases in other accounts. For more information about
+     * aliases, see <a>CreateAlias</a>.
      * </p>
      * <p>
-     * The <code>ListAliases</code> response can include aliases that you
-     * created and associated with your customer managed CMKs, and aliases that
-     * AWS created and associated with AWS managed CMKs in your account. You can
-     * recognize AWS aliases because their names have the format
-     * <code>aws/&lt;service-name&gt;</code>, such as <code>aws/dynamodb</code>.
+     * By default, the <code>ListAliases</code> command returns all aliases in
+     * the account and region. To get only the aliases that point to a
+     * particular customer master key (CMK), use the <code>KeyId</code>
+     * parameter.
      * </p>
      * <p>
-     * The response might also include aliases that have no
-     * <code>TargetKeyId</code> field. These are predefined aliases that AWS has
-     * created but has not yet associated with a CMK. Aliases that AWS creates
-     * in your account, including predefined aliases, do not count against your
-     * <a href=
+     * The <code>ListAliases</code> response might include several aliases have
+     * no <code>TargetKeyId</code> field. These are predefined aliases that AWS
+     * has created but has not yet associated with a CMK. Aliases that AWS
+     * creates in your account, including predefined aliases, do not count
+     * against your <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/limits.html#aliases-limit"
      * >AWS KMS aliases limit</a>.
      * </p>
@@ -1950,6 +2532,8 @@ public ImportKeyMaterialResult importKeyMaterial(
      * @throws DependencyTimeoutException
      * @throws InvalidMarkerException
      * @throws KMSInternalException
+     * @throws InvalidArnException
+     * @throws NotFoundException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -2326,7 +2910,7 @@ public void putKeyPolicy(PutKeyPolicyRequest putKeyPolicyRequest)
      * "http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html"
      * >key policies</a> to permit reencryption from or to the CMK. This
      * permission is automatically included in the key policy when you create a
-     * CMK through the console. But you must include it manually when you create
+     * CMK through the console, but you must include it manually when you create
      * a CMK programmatically or when you set a key policy with the
      * <a>PutKeyPolicy</a> operation.
      * </p>
@@ -2514,24 +3098,34 @@ public void revokeGrant(RevokeGrantRequest revokeGrantRequest)
      * Schedules the deletion of a customer master key (CMK). You may provide a
      * waiting period, specified in days, before deletion occurs. If you do not
      * provide a waiting period, the default period of 30 days is used. When
-     * this operation is successful, the state of the CMK changes to
+     * this operation is successful, the key state of the CMK changes to
      * <code>PendingDeletion</code>. Before the waiting period ends, you can use
      * <a>CancelKeyDeletion</a> to cancel the deletion of the CMK. After the
      * waiting period ends, AWS KMS deletes the CMK and all AWS KMS data
      * associated with it, including all aliases that refer to it.
      * </p>
-     * <p>
-     * You cannot perform this operation on a CMK in a different AWS account.
-     * </p>
      * <important>
      * <p>
      * Deleting a CMK is a destructive and potentially dangerous operation. When
-     * a CMK is deleted, all data that was encrypted under the CMK is rendered
-     * unrecoverable. To restrict the use of a CMK without deleting it, use
+     * a CMK is deleted, all data that was encrypted under the CMK is
+     * unrecoverable. To prevent the use of a CMK without deleting it, use
      * <a>DisableKey</a>.
      * </p>
      * </important>
      * <p>
+     * If you schedule deletion of a CMK from a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>, when the waiting period expires,
+     * <code>ScheduleKeyDeletion</code> deletes the CMK from AWS KMS. Then AWS
+     * KMS makes a best effort to delete the key material from the associated
+     * AWS CloudHSM cluster. However, you might need to manually <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-orphaned-key"
+     * >delete the orphaned key material</a> from the cluster and its backups.
+     * </p>
+     * <p>
+     * You cannot perform this operation on a CMK in a different AWS account.
+     * </p>
+     * <p>
      * For more information about scheduling a CMK for deletion, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html"
      * >Deleting Customer Master Keys</a> in the <i>AWS Key Management Service
@@ -2788,10 +3382,144 @@ public void updateAlias(UpdateAliasRequest updateAliasRequest)
         }
     }
 
+    /**
+     * <p>
+     * Changes the properties of a custom key store. Use the
+     * <code>CustomKeyStoreId</code> parameter to identify the custom key store
+     * you want to edit. Use the remaining parameters to change the properties
+     * of the custom key store.
+     * </p>
+     * <p>
+     * You can only update a custom key store that is disconnected. To
+     * disconnect the custom key store, use <a>DisconnectCustomKeyStore</a>. To
+     * reconnect the custom key store after the update completes, use
+     * <a>ConnectCustomKeyStore</a>. To find the connection state of a custom
+     * key store, use the <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * Use the <code>NewCustomKeyStoreName</code> parameter to change the
+     * friendly name of the custom key store to the value that you specify.
+     * </p>
+     * <p>
+     * Use the <code>KeyStorePassword</code> parameter tell AWS KMS the current
+     * password of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+     * > <code>kmsuser</code> crypto user (CU)</a> in the associated AWS
+     * CloudHSM cluster. You can use this parameter to fix connection failures
+     * that occur when AWS KMS cannot log into the associated cluster because
+     * the <code>kmsuser</code> password has changed. This value does not change
+     * the password in the AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * Use the <code>CloudHsmClusterId</code> parameter to associate the custom
+     * key store with a related AWS CloudHSM cluster, that is, a cluster that
+     * shares a backup history with the original cluster. You can use this
+     * parameter to repair a custom key store if its AWS CloudHSM cluster
+     * becomes corrupted or is deleted, or when you need to create or restore a
+     * cluster from a backup.
+     * </p>
+     * <p>
+     * The cluster ID must identify a AWS CloudHSM cluster with the following
+     * requirements.
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * The cluster must be active and be in the same AWS account and Region as
+     * the custom key store.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * The cluster must have the same cluster certificate as the original
+     * cluster. You cannot use this parameter to associate the custom key store
+     * with an unrelated cluster. To view the cluster certificate, use the AWS
+     * CloudHSM <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     * >DescribeClusters</a> operation. Clusters that share a backup history
+     * have the same cluster certificate.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * The cluster must be configured with subnets in at least two different
+     * Availability Zones in the Region. Because AWS CloudHSM is not supported
+     * in all Availability Zones, we recommend that the cluster have subnets in
+     * all Availability Zones in the Region.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * The cluster must contain at least two active HSMs, each in a different
+     * Availability Zone.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * If the operation succeeds, it returns a JSON object with no properties.
+     * </p>
+     * <p>
+     * This operation is part of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+     * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+     * convenience and extensive integration of AWS KMS with the isolation and
+     * control of a single-tenant key store.
+     * </p>
+     * 
+     * @param updateCustomKeyStoreRequest
+     * @return updateCustomKeyStoreResult The response from the
+     *         UpdateCustomKeyStore service method, as returned by AWS Key
+     *         Management Service.
+     * @throws CustomKeyStoreNotFoundException
+     * @throws CloudHsmClusterNotFoundException
+     * @throws CloudHsmClusterNotRelatedException
+     * @throws CustomKeyStoreInvalidStateException
+     * @throws KMSInternalException
+     * @throws CloudHsmClusterNotActiveException
+     * @throws CloudHsmClusterInvalidConfigurationException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             Key Management Service indicating either a problem with the
+     *             data in the request, or a server side issue.
+     */
+    public UpdateCustomKeyStoreResult updateCustomKeyStore(
+            UpdateCustomKeyStoreRequest updateCustomKeyStoreRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(updateCustomKeyStoreRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<UpdateCustomKeyStoreRequest> request = null;
+        Response<UpdateCustomKeyStoreResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new UpdateCustomKeyStoreRequestMarshaller()
+                        .marshall(updateCustomKeyStoreRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<UpdateCustomKeyStoreResult, JsonUnmarshallerContext> unmarshaller = new UpdateCustomKeyStoreResultJsonUnmarshaller();
+            JsonResponseHandler<UpdateCustomKeyStoreResult> responseHandler = new JsonResponseHandler<UpdateCustomKeyStoreResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * <p>
      * Updates the description of a customer master key (CMK). To see the
-     * description of a CMK, use <a>DescribeKey</a>.
+     * decription of a CMK, use <a>DescribeKey</a>.
      * </p>
      * <p>
      * You cannot perform this operation on a CMK in a different AWS account.
@@ -2849,9 +3577,9 @@ public void updateKeyDescription(UpdateKeyDescriptionRequest updateKeyDescriptio
      * </p>
      * <p>
      * You can use a CMK to encrypt small amounts of data (4 KiB or less)
-     * directly. But CMKs are more commonly used to encrypt data encryption keys
-     * (DEKs), which are used to encrypt raw data. For more information about
-     * DEKs and the difference between CMKs and DEKs, see the following:
+     * directly, but CMKs are more commonly used to encrypt data keys, which are
+     * used to encrypt raw data. For more information about data keys and the
+     * difference between CMKs and data keys, see the following:
      * </p>
      * <ul>
      * <li>
@@ -2869,6 +3597,21 @@ public void updateKeyDescription(UpdateKeyDescriptionRequest updateKeyDescriptio
      * </li>
      * </ul>
      * <p>
+     * If you plan to <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html"
+     * >import key material</a>, use the <code>Origin</code> parameter with a
+     * value of <code>EXTERNAL</code> to create a CMK with no key material.
+     * </p>
+     * <p>
+     * To create a CMK in a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>, use <code>CustomKeyStoreId</code> parameter to
+     * specify the custom key store. You must also use the <code>Origin</code>
+     * parameter with a value of <code>AWS_CLOUDHSM</code>. The AWS CloudHSM
+     * cluster that is associated with the custom key store must have at least
+     * two active HSMs, each in a different Availability Zone in the Region.
+     * </p>
+     * <p>
      * You cannot use this operation to create a CMK in a different AWS account.
      * </p>
      * 
@@ -2881,6 +3624,9 @@ public void updateKeyDescription(UpdateKeyDescriptionRequest updateKeyDescriptio
      * @throws KMSInternalException
      * @throws LimitExceededException
      * @throws TagException
+     * @throws CustomKeyStoreNotFoundException
+     * @throws CustomKeyStoreInvalidStateException
+     * @throws CloudHsmClusterInvalidConfigurationException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -2922,28 +3668,22 @@ public ListKeysResult listKeys()
 
     /**
      * <p>
-     * Gets a list of aliases in the caller's AWS account and region. You cannot
-     * list aliases in other accounts. For more information about aliases, see
-     * <a>CreateAlias</a>.
-     * </p>
-     * <p>
-     * By default, the ListAliases command returns all aliases in the account
-     * and region. To get only the aliases that point to a particular customer
-     * master key (CMK), use the <code>KeyId</code> parameter.
+     * Gets a list of all aliases in the caller's AWS account and region. You
+     * cannot list aliases in other accounts. For more information about
+     * aliases, see <a>CreateAlias</a>.
      * </p>
      * <p>
-     * The <code>ListAliases</code> response can include aliases that you
-     * created and associated with your customer managed CMKs, and aliases that
-     * AWS created and associated with AWS managed CMKs in your account. You can
-     * recognize AWS aliases because their names have the format
-     * <code>aws/&lt;service-name&gt;</code>, such as <code>aws/dynamodb</code>.
+     * By default, the <code>ListAliases</code> command returns all aliases in
+     * the account and region. To get only the aliases that point to a
+     * particular customer master key (CMK), use the <code>KeyId</code>
+     * parameter.
      * </p>
      * <p>
-     * The response might also include aliases that have no
-     * <code>TargetKeyId</code> field. These are predefined aliases that AWS has
-     * created but has not yet associated with a CMK. Aliases that AWS creates
-     * in your account, including predefined aliases, do not count against your
-     * <a href=
+     * The <code>ListAliases</code> response might include several aliases have
+     * no <code>TargetKeyId</code> field. These are predefined aliases that AWS
+     * has created but has not yet associated with a CMK. Aliases that AWS
+     * creates in your account, including predefined aliases, do not count
+     * against your <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/limits.html#aliases-limit"
      * >AWS KMS aliases limit</a>.
      * </p>
@@ -2953,6 +3693,8 @@ public ListKeysResult listKeys()
      * @throws DependencyTimeoutException
      * @throws InvalidMarkerException
      * @throws KMSInternalException
+     * @throws InvalidArnException
+     * @throws NotFoundException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -3026,6 +3768,13 @@ public void retireGrant()
      * Returns a random byte string that is cryptographically secure.
      * </p>
      * <p>
+     * By default, the random byte string is generated in AWS KMS. To generate
+     * the byte string in the AWS CloudHSM cluster that is associated with a <a
+     * href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>, specify the custom key store ID.
+     * </p>
+     * <p>
      * For more information about entropy and random number generation, see the
      * <a href=
      * "https://d0.awsstatic.com/whitepapers/KMS-Cryptographic-Details.pdf">AWS
@@ -3036,6 +3785,8 @@ public void retireGrant()
      *         method, as returned by AWS Key Management Service.
      * @throws DependencyTimeoutException
      * @throws KMSInternalException
+     * @throws CustomKeyStoreNotFoundException
+     * @throws CustomKeyStoreInvalidStateException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CloudHsmClusterInUseException.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CloudHsmClusterInUseException.java
new file mode 100644
index 0000000000..8326ece876
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CloudHsmClusterInUseException.java
@@ -0,0 +1,46 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import com.amazonaws.AmazonServiceException;
+
+/**
+ * <p>
+ * The request was rejected because the specified AWS CloudHSM cluster is
+ * already associated with a custom key store or it shares a backup history with
+ * a cluster that is associated with a custom key store. Each custom key store
+ * must be associated with a different AWS CloudHSM cluster.
+ * </p>
+ * <p>
+ * Clusters that share a backup history have the same cluster certificate. To
+ * view the cluster certificate of a cluster, use the <a href=
+ * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+ * >DescribeClusters</a> operation.
+ * </p>
+ */
+public class CloudHsmClusterInUseException extends AmazonServiceException {
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * Constructs a new CloudHsmClusterInUseException with the specified error
+     * message.
+     *
+     * @param message Describes the error encountered.
+     */
+    public CloudHsmClusterInUseException(String message) {
+        super(message);
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CloudHsmClusterInvalidConfigurationException.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CloudHsmClusterInvalidConfigurationException.java
new file mode 100644
index 0000000000..76fe2a9bbf
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CloudHsmClusterInvalidConfigurationException.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import com.amazonaws.AmazonServiceException;
+
+/**
+ * <p>
+ * The request was rejected because the associated AWS CloudHSM cluster did not
+ * meet the configuration requirements for a custom key store. The cluster must
+ * be configured with private subnets in at least two different Availability
+ * Zones in the Region. Also, it must contain at least as many HSMs as the
+ * operation requires.
+ * </p>
+ * <p>
+ * For the <a>CreateCustomKeyStore</a>, <a>UpdateCustomKeyStore</a>, and
+ * <a>CreateKey</a> operations, the AWS CloudHSM cluster must have at least two
+ * active HSMs, each in a different Availability Zone. For the
+ * <a>ConnectCustomKeyStore</a> operation, the AWS CloudHSM must contain at
+ * least one active HSM.
+ * </p>
+ * <p>
+ * For information about creating a private subnet for a AWS CloudHSM cluster,
+ * see <a href=
+ * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/create-subnets.html"
+ * >Create a Private Subnet</a> in the <i>AWS CloudHSM User Guide</i>. To add
+ * HSMs, use the AWS CloudHSM <a href=
+ * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_CreateHsm.html"
+ * >CreateHsm</a> operation.
+ * </p>
+ */
+public class CloudHsmClusterInvalidConfigurationException extends AmazonServiceException {
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * Constructs a new CloudHsmClusterInvalidConfigurationException with the
+     * specified error message.
+     *
+     * @param message Describes the error encountered.
+     */
+    public CloudHsmClusterInvalidConfigurationException(String message) {
+        super(message);
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CloudHsmClusterNotActiveException.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CloudHsmClusterNotActiveException.java
new file mode 100644
index 0000000000..019a4ec368
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CloudHsmClusterNotActiveException.java
@@ -0,0 +1,41 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import com.amazonaws.AmazonServiceException;
+
+/**
+ * <p>
+ * The request was rejected because the AWS CloudHSM cluster that is associated
+ * with the custom key store is not active. Initialize and activate the cluster
+ * and try the command again. For detailed instructions, see <a href=
+ * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/getting-started.html"
+ * >Getting Started</a> in the <i>AWS CloudHSM User Guide</i>.
+ * </p>
+ */
+public class CloudHsmClusterNotActiveException extends AmazonServiceException {
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * Constructs a new CloudHsmClusterNotActiveException with the specified
+     * error message.
+     *
+     * @param message Describes the error encountered.
+     */
+    public CloudHsmClusterNotActiveException(String message) {
+        super(message);
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CloudHsmClusterNotFoundException.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CloudHsmClusterNotFoundException.java
new file mode 100644
index 0000000000..b8de3d677d
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CloudHsmClusterNotFoundException.java
@@ -0,0 +1,38 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import com.amazonaws.AmazonServiceException;
+
+/**
+ * <p>
+ * The request was rejected because AWS KMS cannot find the AWS CloudHSM cluster
+ * with the specified cluster ID. Retry the request with a different cluster ID.
+ * </p>
+ */
+public class CloudHsmClusterNotFoundException extends AmazonServiceException {
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * Constructs a new CloudHsmClusterNotFoundException with the specified
+     * error message.
+     *
+     * @param message Describes the error encountered.
+     */
+    public CloudHsmClusterNotFoundException(String message) {
+        super(message);
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CloudHsmClusterNotRelatedException.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CloudHsmClusterNotRelatedException.java
new file mode 100644
index 0000000000..ff87cd2cc0
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CloudHsmClusterNotRelatedException.java
@@ -0,0 +1,51 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import com.amazonaws.AmazonServiceException;
+
+/**
+ * <p>
+ * The request was rejected because the specified AWS CloudHSM cluster has a
+ * different cluster certificate than the original cluster. You cannot use the
+ * operation to specify an unrelated cluster.
+ * </p>
+ * <p>
+ * Specify a cluster that shares a backup history with the original cluster.
+ * This includes clusters that were created from a backup of the current
+ * cluster, and clusters that were created from the same backup that produced
+ * the current cluster.
+ * </p>
+ * <p>
+ * Clusters that share a backup history have the same cluster certificate. To
+ * view the cluster certificate of a cluster, use the <a href=
+ * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+ * >DescribeClusters</a> operation.
+ * </p>
+ */
+public class CloudHsmClusterNotRelatedException extends AmazonServiceException {
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * Constructs a new CloudHsmClusterNotRelatedException with the specified
+     * error message.
+     *
+     * @param message Describes the error encountered.
+     */
+    public CloudHsmClusterNotRelatedException(String message) {
+        super(message);
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ConnectCustomKeyStoreRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ConnectCustomKeyStoreRequest.java
new file mode 100644
index 0000000000..bade80c9a3
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ConnectCustomKeyStoreRequest.java
@@ -0,0 +1,203 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Connects or reconnects a <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+ * >custom key store</a> to its associated AWS CloudHSM cluster.
+ * </p>
+ * <p>
+ * The custom key store must be connected before you can create customer master
+ * keys (CMKs) in the key store or use the CMKs it contains. You can disconnect
+ * and reconnect a custom key store at any time.
+ * </p>
+ * <p>
+ * To connect a custom key store, its associated AWS CloudHSM cluster must have
+ * at least one active HSM. To get the number of active HSMs in a cluster, use
+ * the <a href=
+ * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters"
+ * >DescribeClusters</a> operation. To add HSMs to the cluster, use the <a href=
+ * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_CreateHsm"
+ * >CreateHsm</a> operation.
+ * </p>
+ * <p>
+ * The connection process can take an extended amount of time to complete; up to
+ * 20 minutes. This operation starts the connection process, but it does not
+ * wait for it to complete. When it succeeds, this operation quickly returns an
+ * HTTP 200 response and a JSON object with no properties. However, this
+ * response does not indicate that the custom key store is connected. To get the
+ * connection state of the custom key store, use the
+ * <a>DescribeCustomKeyStores</a> operation.
+ * </p>
+ * <p>
+ * During the connection process, AWS KMS finds the AWS CloudHSM cluster that is
+ * associated with the custom key store, creates the connection infrastructure,
+ * connects to the cluster, logs into the AWS CloudHSM client as the <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+ * > <code>kmsuser</code> crypto user</a> (CU), and rotates its password.
+ * </p>
+ * <p>
+ * The <code>ConnectCustomKeyStore</code> operation might fail for various
+ * reasons. To find the reason, use the <a>DescribeCustomKeyStores</a> operation
+ * and see the <code>ConnectionErrorCode</code> in the response. For help
+ * interpreting the <code>ConnectionErrorCode</code>, see
+ * <a>CustomKeyStoresListEntry</a>.
+ * </p>
+ * <p>
+ * To fix the failure, use the <a>DisconnectCustomKeyStore</a> operation to
+ * disconnect the custom key store, correct the error, use the
+ * <a>UpdateCustomKeyStore</a> operation if necessary, and then use
+ * <code>ConnectCustomKeyStore</code> again.
+ * </p>
+ * <p>
+ * If you are having trouble connecting or disconnecting a custom key store, see
+ * <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+ * >Troubleshooting a Custom Key Store</a> in the <i>AWS Key Management Service
+ * Developer Guide</i>.
+ * </p>
+ */
+public class ConnectCustomKeyStoreRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * Enter the key store ID of the custom key store that you want to connect.
+     * To find the ID of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     */
+    private String customKeyStoreId;
+
+    /**
+     * <p>
+     * Enter the key store ID of the custom key store that you want to connect.
+     * To find the ID of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @return <p>
+     *         Enter the key store ID of the custom key store that you want to
+     *         connect. To find the ID of a custom key store, use the
+     *         <a>DescribeCustomKeyStores</a> operation.
+     *         </p>
+     */
+    public String getCustomKeyStoreId() {
+        return customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * Enter the key store ID of the custom key store that you want to connect.
+     * To find the ID of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            Enter the key store ID of the custom key store that you want
+     *            to connect. To find the ID of a custom key store, use the
+     *            <a>DescribeCustomKeyStores</a> operation.
+     *            </p>
+     */
+    public void setCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * Enter the key store ID of the custom key store that you want to connect.
+     * To find the ID of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            Enter the key store ID of the custom key store that you want
+     *            to connect. To find the ID of a custom key store, use the
+     *            <a>DescribeCustomKeyStores</a> operation.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ConnectCustomKeyStoreRequest withCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getCustomKeyStoreId() != null)
+            sb.append("CustomKeyStoreId: " + getCustomKeyStoreId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getCustomKeyStoreId() == null) ? 0 : getCustomKeyStoreId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ConnectCustomKeyStoreRequest == false)
+            return false;
+        ConnectCustomKeyStoreRequest other = (ConnectCustomKeyStoreRequest) obj;
+
+        if (other.getCustomKeyStoreId() == null ^ this.getCustomKeyStoreId() == null)
+            return false;
+        if (other.getCustomKeyStoreId() != null
+                && other.getCustomKeyStoreId().equals(this.getCustomKeyStoreId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ConnectCustomKeyStoreResult.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ConnectCustomKeyStoreResult.java
new file mode 100644
index 0000000000..6c3e21efd0
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ConnectCustomKeyStoreResult.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import java.io.Serializable;
+
+public class ConnectCustomKeyStoreResult implements Serializable {
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ConnectCustomKeyStoreResult == false)
+            return false;
+        ConnectCustomKeyStoreResult other = (ConnectCustomKeyStoreResult) obj;
+
+        return true;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ConnectionErrorCodeType.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ConnectionErrorCodeType.java
new file mode 100644
index 0000000000..bf9c87b1f0
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ConnectionErrorCodeType.java
@@ -0,0 +1,68 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Connection Error Code Type
+ */
+public enum ConnectionErrorCodeType {
+
+    INVALID_CREDENTIALS("INVALID_CREDENTIALS"),
+    CLUSTER_NOT_FOUND("CLUSTER_NOT_FOUND"),
+    NETWORK_ERRORS("NETWORK_ERRORS"),
+    INSUFFICIENT_CLOUDHSM_HSMS("INSUFFICIENT_CLOUDHSM_HSMS"),
+    USER_LOCKED_OUT("USER_LOCKED_OUT");
+
+    private String value;
+
+    private ConnectionErrorCodeType(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, ConnectionErrorCodeType> enumMap;
+    static {
+        enumMap = new HashMap<String, ConnectionErrorCodeType>();
+        enumMap.put("INVALID_CREDENTIALS", INVALID_CREDENTIALS);
+        enumMap.put("CLUSTER_NOT_FOUND", CLUSTER_NOT_FOUND);
+        enumMap.put("NETWORK_ERRORS", NETWORK_ERRORS);
+        enumMap.put("INSUFFICIENT_CLOUDHSM_HSMS", INSUFFICIENT_CLOUDHSM_HSMS);
+        enumMap.put("USER_LOCKED_OUT", USER_LOCKED_OUT);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return ConnectionErrorCodeType corresponding to the value
+     */
+    public static ConnectionErrorCodeType fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ConnectionStateType.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ConnectionStateType.java
new file mode 100644
index 0000000000..1a1368b28f
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ConnectionStateType.java
@@ -0,0 +1,68 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Connection State Type
+ */
+public enum ConnectionStateType {
+
+    CONNECTED("CONNECTED"),
+    CONNECTING("CONNECTING"),
+    FAILED("FAILED"),
+    DISCONNECTED("DISCONNECTED"),
+    DISCONNECTING("DISCONNECTING");
+
+    private String value;
+
+    private ConnectionStateType(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, ConnectionStateType> enumMap;
+    static {
+        enumMap = new HashMap<String, ConnectionStateType>();
+        enumMap.put("CONNECTED", CONNECTED);
+        enumMap.put("CONNECTING", CONNECTING);
+        enumMap.put("FAILED", FAILED);
+        enumMap.put("DISCONNECTED", DISCONNECTED);
+        enumMap.put("DISCONNECTING", DISCONNECTING);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return ConnectionStateType corresponding to the value
+     */
+    public static ConnectionStateType fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateAliasRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateAliasRequest.java
index 8fb7351e98..4a3f7c2574 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateAliasRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateAliasRequest.java
@@ -21,9 +21,9 @@
 
 /**
  * <p>
- * Creates a display name for a customer-managed customer master key (CMK). You
- * can use an alias to identify a CMK in selected operations, such as
- * <a>Encrypt</a> and <a>GenerateDataKey</a>.
+ * Creates a display name for a customer master key (CMK). You can use an alias
+ * to identify a CMK in selected operations, such as <a>Encrypt</a> and
+ * <a>GenerateDataKey</a>.
  * </p>
  * <p>
  * Each CMK can have multiple aliases, but each alias points to only one CMK.
@@ -38,9 +38,11 @@
  * CMKs, use the <a>ListAliases</a> operation.
  * </p>
  * <p>
- * The alias name can contain only alphanumeric characters, forward slashes (/),
- * underscores (_), and dashes (-). Alias names cannot begin with <b>aws/</b>.
- * That alias name prefix is reserved for AWS managed CMKs.
+ * An alias must start with the word <code>alias</code> followed by a forward
+ * slash (<code>alias/</code>). The alias name can contain only alphanumeric
+ * characters, forward slashes (/), underscores (_), and dashes (-). Alias names
+ * cannot begin with <code>aws</code>; that alias name prefix is reserved by
+ * Amazon Web Services (AWS).
  * </p>
  * <p>
  * The alias and the CMK it is mapped to must be in the same AWS account and the
@@ -61,10 +63,9 @@
 public class CreateAliasRequest extends AmazonWebServiceRequest implements Serializable {
     /**
      * <p>
-     * Specifies the alias name. This value must begin with <code>alias/</code>
-     * followed by the alias name, such as <code>alias/ExampleAlias</code>. The
-     * alias name cannot begin with <code>aws/</code>. The
-     * <code>alias/aws/</code> prefix is reserved for AWS managed CMKs.
+     * String that contains the display name. The name must start with the word
+     * "alias" followed by a forward slash (alias/). Aliases that begin with
+     * "alias/AWS" are reserved.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -109,10 +110,9 @@
 
     /**
      * <p>
-     * Specifies the alias name. This value must begin with <code>alias/</code>
-     * followed by the alias name, such as <code>alias/ExampleAlias</code>. The
-     * alias name cannot begin with <code>aws/</code>. The
-     * <code>alias/aws/</code> prefix is reserved for AWS managed CMKs.
+     * String that contains the display name. The name must start with the word
+     * "alias" followed by a forward slash (alias/). Aliases that begin with
+     * "alias/AWS" are reserved.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -120,11 +120,9 @@
      * <b>Pattern: </b>^[a-zA-Z0-9:/_-]+$<br/>
      *
      * @return <p>
-     *         Specifies the alias name. This value must begin with
-     *         <code>alias/</code> followed by the alias name, such as
-     *         <code>alias/ExampleAlias</code>. The alias name cannot begin with
-     *         <code>aws/</code>. The <code>alias/aws/</code> prefix is reserved
-     *         for AWS managed CMKs.
+     *         String that contains the display name. The name must start with
+     *         the word "alias" followed by a forward slash (alias/). Aliases
+     *         that begin with "alias/AWS" are reserved.
      *         </p>
      */
     public String getAliasName() {
@@ -133,10 +131,9 @@ public String getAliasName() {
 
     /**
      * <p>
-     * Specifies the alias name. This value must begin with <code>alias/</code>
-     * followed by the alias name, such as <code>alias/ExampleAlias</code>. The
-     * alias name cannot begin with <code>aws/</code>. The
-     * <code>alias/aws/</code> prefix is reserved for AWS managed CMKs.
+     * String that contains the display name. The name must start with the word
+     * "alias" followed by a forward slash (alias/). Aliases that begin with
+     * "alias/AWS" are reserved.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -144,11 +141,9 @@ public String getAliasName() {
      * <b>Pattern: </b>^[a-zA-Z0-9:/_-]+$<br/>
      *
      * @param aliasName <p>
-     *            Specifies the alias name. This value must begin with
-     *            <code>alias/</code> followed by the alias name, such as
-     *            <code>alias/ExampleAlias</code>. The alias name cannot begin
-     *            with <code>aws/</code>. The <code>alias/aws/</code> prefix is
-     *            reserved for AWS managed CMKs.
+     *            String that contains the display name. The name must start
+     *            with the word "alias" followed by a forward slash (alias/).
+     *            Aliases that begin with "alias/AWS" are reserved.
      *            </p>
      */
     public void setAliasName(String aliasName) {
@@ -157,10 +152,9 @@ public void setAliasName(String aliasName) {
 
     /**
      * <p>
-     * Specifies the alias name. This value must begin with <code>alias/</code>
-     * followed by the alias name, such as <code>alias/ExampleAlias</code>. The
-     * alias name cannot begin with <code>aws/</code>. The
-     * <code>alias/aws/</code> prefix is reserved for AWS managed CMKs.
+     * String that contains the display name. The name must start with the word
+     * "alias" followed by a forward slash (alias/). Aliases that begin with
+     * "alias/AWS" are reserved.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -171,11 +165,9 @@ public void setAliasName(String aliasName) {
      * <b>Pattern: </b>^[a-zA-Z0-9:/_-]+$<br/>
      *
      * @param aliasName <p>
-     *            Specifies the alias name. This value must begin with
-     *            <code>alias/</code> followed by the alias name, such as
-     *            <code>alias/ExampleAlias</code>. The alias name cannot begin
-     *            with <code>aws/</code>. The <code>alias/aws/</code> prefix is
-     *            reserved for AWS managed CMKs.
+     *            String that contains the display name. The name must start
+     *            with the word "alias" followed by a forward slash (alias/).
+     *            Aliases that begin with "alias/AWS" are reserved.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateCustomKeyStoreRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateCustomKeyStoreRequest.java
new file mode 100644
index 0000000000..0001ca8bba
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateCustomKeyStoreRequest.java
@@ -0,0 +1,601 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Creates a <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+ * >custom key store</a> that is associated with an <a
+ * href="http://docs.aws.amazon.com/cloudhsm/latest/userguide/clusters.html">AWS
+ * CloudHSM cluster</a> that you own and manage.
+ * </p>
+ * <p>
+ * This operation is part of the <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+ * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+ * convenience and extensive integration of AWS KMS with the isolation and
+ * control of a single-tenant key store.
+ * </p>
+ * <p>
+ * When the operation completes successfully, it returns the ID of the new
+ * custom key store. Before you can use your new custom key store, you need to
+ * use the <a>ConnectCustomKeyStore</a> operation to connect the new key store
+ * to its AWS CloudHSM cluster.
+ * </p>
+ * <p>
+ * The <code>CreateCustomKeyStore</code> operation requires the following
+ * elements.
+ * </p>
+ * <ul>
+ * <li>
+ * <p>
+ * You must specify an active AWS CloudHSM cluster in the same account and AWS
+ * Region as the custom key store. You can use an existing cluster or <a href=
+ * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/create-cluster.html"
+ * >create and activate a new AWS CloudHSM cluster</a> for the key store. AWS
+ * KMS does not require exclusive use of the cluster.
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * You must include the content of the <i>trust anchor certificate</i> for the
+ * cluster. You created this certificate, and saved it in the
+ * <code>customerCA.crt</code> file, when you <a href=
+ * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html#sign-csr"
+ * >initialized the cluster</a>.
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * You must provide the password of the dedicated <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+ * > <code>kmsuser</code> crypto user</a> (CU) account in the cluster.
+ * </p>
+ * <p>
+ * Before you create the custom key store, use the <a href=
+ * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/cloudhsm_mgmt_util-createUser.html"
+ * >createUser</a> command in <code>cloudhsm_mgmt_util</code> to create <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+ * >a crypto user (CU) named <code>kmsuser</code> </a>in specified AWS CloudHSM
+ * cluster. AWS KMS uses the <code>kmsuser</code> CU account to create and
+ * manage key material on your behalf. For instructions, see <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/create-keystore.html#before-keystore"
+ * >Create the kmsuser Crypto User</a> in the <i>AWS Key Management Service
+ * Developer Guide</i>.
+ * </p>
+ * </li>
+ * </ul>
+ * <p>
+ * The AWS CloudHSM cluster that you specify must meet the following
+ * requirements.
+ * </p>
+ * <ul>
+ * <li>
+ * <p>
+ * The cluster must be active and be in the same AWS account and Region as the
+ * custom key store.
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * Each custom key store must be associated with a different AWS CloudHSM
+ * cluster. The cluster cannot be associated with another custom key store or
+ * have the same cluster certificate as a cluster that is associated with
+ * another custom key store. To view the cluster certificate, use the AWS
+ * CloudHSM <a href=
+ * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+ * >DescribeClusters</a> operation. Clusters that share a backup history have
+ * the same cluster certificate.
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * The cluster must be configured with subnets in at least two different
+ * Availability Zones in the Region. Because AWS CloudHSM is not supported in
+ * all Availability Zones, we recommend that the cluster have subnets in all
+ * Availability Zones in the Region.
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * The cluster must contain at least two active HSMs, each in a different
+ * Availability Zone.
+ * </p>
+ * </li>
+ * </ul>
+ * <p>
+ * New custom key stores are not automatically connected. After you create your
+ * custom key store, use the <a>ConnectCustomKeyStore</a> operation to connect
+ * the custom key store to its associated AWS CloudHSM cluster. Even if you are
+ * not going to use your custom key store immediately, you might want to connect
+ * it to verify that all settings are correct and then disconnect it until you
+ * are ready to use it.
+ * </p>
+ * <p>
+ * If this operation succeeds, it returns the ID of the new custom key store.
+ * For help with failures, see <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+ * >Troubleshoot a Custom Key Store</a> in the <i>AWS KMS Developer Guide</i>.
+ * </p>
+ */
+public class CreateCustomKeyStoreRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * Specifies a friendly name for the custom key store. The name must be
+     * unique in your AWS account.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     */
+    private String customKeyStoreName;
+
+    /**
+     * <p>
+     * Identifies the AWS CloudHSM cluster for the custom key store. Enter the
+     * cluster ID of any active AWS CloudHSM cluster that is not already
+     * associated with a custom key store. To find the cluster ID, use the <a
+     * href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     * >DescribeClusters</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>19 - 24<br/>
+     */
+    private String cloudHsmClusterId;
+
+    /**
+     * <p>
+     * Enter the content of the trust anchor certificate for the cluster. This
+     * is the content of the <code>customerCA.crt</code> file that you created
+     * when you <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html"
+     * >initialized the cluster</a>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 5000<br/>
+     */
+    private String trustAnchorCertificate;
+
+    /**
+     * <p>
+     * Enter the password of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+     * > <code>kmsuser</code> crypto user (CU) account</a> in the specified AWS
+     * CloudHSM cluster. AWS KMS logs into the cluster as this user to manage
+     * key material on your behalf.
+     * </p>
+     * <p>
+     * This parameter tells AWS KMS the <code>kmsuser</code> account password;
+     * it does not change the password in the AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     */
+    private String keyStorePassword;
+
+    /**
+     * <p>
+     * Specifies a friendly name for the custom key store. The name must be
+     * unique in your AWS account.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     *
+     * @return <p>
+     *         Specifies a friendly name for the custom key store. The name must
+     *         be unique in your AWS account.
+     *         </p>
+     */
+    public String getCustomKeyStoreName() {
+        return customKeyStoreName;
+    }
+
+    /**
+     * <p>
+     * Specifies a friendly name for the custom key store. The name must be
+     * unique in your AWS account.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     *
+     * @param customKeyStoreName <p>
+     *            Specifies a friendly name for the custom key store. The name
+     *            must be unique in your AWS account.
+     *            </p>
+     */
+    public void setCustomKeyStoreName(String customKeyStoreName) {
+        this.customKeyStoreName = customKeyStoreName;
+    }
+
+    /**
+     * <p>
+     * Specifies a friendly name for the custom key store. The name must be
+     * unique in your AWS account.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     *
+     * @param customKeyStoreName <p>
+     *            Specifies a friendly name for the custom key store. The name
+     *            must be unique in your AWS account.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateCustomKeyStoreRequest withCustomKeyStoreName(String customKeyStoreName) {
+        this.customKeyStoreName = customKeyStoreName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Identifies the AWS CloudHSM cluster for the custom key store. Enter the
+     * cluster ID of any active AWS CloudHSM cluster that is not already
+     * associated with a custom key store. To find the cluster ID, use the <a
+     * href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     * >DescribeClusters</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>19 - 24<br/>
+     *
+     * @return <p>
+     *         Identifies the AWS CloudHSM cluster for the custom key store.
+     *         Enter the cluster ID of any active AWS CloudHSM cluster that is
+     *         not already associated with a custom key store. To find the
+     *         cluster ID, use the <a href=
+     *         "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     *         >DescribeClusters</a> operation.
+     *         </p>
+     */
+    public String getCloudHsmClusterId() {
+        return cloudHsmClusterId;
+    }
+
+    /**
+     * <p>
+     * Identifies the AWS CloudHSM cluster for the custom key store. Enter the
+     * cluster ID of any active AWS CloudHSM cluster that is not already
+     * associated with a custom key store. To find the cluster ID, use the <a
+     * href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     * >DescribeClusters</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>19 - 24<br/>
+     *
+     * @param cloudHsmClusterId <p>
+     *            Identifies the AWS CloudHSM cluster for the custom key store.
+     *            Enter the cluster ID of any active AWS CloudHSM cluster that
+     *            is not already associated with a custom key store. To find the
+     *            cluster ID, use the <a href=
+     *            "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     *            >DescribeClusters</a> operation.
+     *            </p>
+     */
+    public void setCloudHsmClusterId(String cloudHsmClusterId) {
+        this.cloudHsmClusterId = cloudHsmClusterId;
+    }
+
+    /**
+     * <p>
+     * Identifies the AWS CloudHSM cluster for the custom key store. Enter the
+     * cluster ID of any active AWS CloudHSM cluster that is not already
+     * associated with a custom key store. To find the cluster ID, use the <a
+     * href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     * >DescribeClusters</a> operation.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>19 - 24<br/>
+     *
+     * @param cloudHsmClusterId <p>
+     *            Identifies the AWS CloudHSM cluster for the custom key store.
+     *            Enter the cluster ID of any active AWS CloudHSM cluster that
+     *            is not already associated with a custom key store. To find the
+     *            cluster ID, use the <a href=
+     *            "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     *            >DescribeClusters</a> operation.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateCustomKeyStoreRequest withCloudHsmClusterId(String cloudHsmClusterId) {
+        this.cloudHsmClusterId = cloudHsmClusterId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Enter the content of the trust anchor certificate for the cluster. This
+     * is the content of the <code>customerCA.crt</code> file that you created
+     * when you <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html"
+     * >initialized the cluster</a>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 5000<br/>
+     *
+     * @return <p>
+     *         Enter the content of the trust anchor certificate for the
+     *         cluster. This is the content of the <code>customerCA.crt</code>
+     *         file that you created when you <a href=
+     *         "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html"
+     *         >initialized the cluster</a>.
+     *         </p>
+     */
+    public String getTrustAnchorCertificate() {
+        return trustAnchorCertificate;
+    }
+
+    /**
+     * <p>
+     * Enter the content of the trust anchor certificate for the cluster. This
+     * is the content of the <code>customerCA.crt</code> file that you created
+     * when you <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html"
+     * >initialized the cluster</a>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 5000<br/>
+     *
+     * @param trustAnchorCertificate <p>
+     *            Enter the content of the trust anchor certificate for the
+     *            cluster. This is the content of the
+     *            <code>customerCA.crt</code> file that you created when you <a
+     *            href=
+     *            "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html"
+     *            >initialized the cluster</a>.
+     *            </p>
+     */
+    public void setTrustAnchorCertificate(String trustAnchorCertificate) {
+        this.trustAnchorCertificate = trustAnchorCertificate;
+    }
+
+    /**
+     * <p>
+     * Enter the content of the trust anchor certificate for the cluster. This
+     * is the content of the <code>customerCA.crt</code> file that you created
+     * when you <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html"
+     * >initialized the cluster</a>.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 5000<br/>
+     *
+     * @param trustAnchorCertificate <p>
+     *            Enter the content of the trust anchor certificate for the
+     *            cluster. This is the content of the
+     *            <code>customerCA.crt</code> file that you created when you <a
+     *            href=
+     *            "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html"
+     *            >initialized the cluster</a>.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateCustomKeyStoreRequest withTrustAnchorCertificate(String trustAnchorCertificate) {
+        this.trustAnchorCertificate = trustAnchorCertificate;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Enter the password of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+     * > <code>kmsuser</code> crypto user (CU) account</a> in the specified AWS
+     * CloudHSM cluster. AWS KMS logs into the cluster as this user to manage
+     * key material on your behalf.
+     * </p>
+     * <p>
+     * This parameter tells AWS KMS the <code>kmsuser</code> account password;
+     * it does not change the password in the AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     *
+     * @return <p>
+     *         Enter the password of the <a href=
+     *         "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+     *         > <code>kmsuser</code> crypto user (CU) account</a> in the
+     *         specified AWS CloudHSM cluster. AWS KMS logs into the cluster as
+     *         this user to manage key material on your behalf.
+     *         </p>
+     *         <p>
+     *         This parameter tells AWS KMS the <code>kmsuser</code> account
+     *         password; it does not change the password in the AWS CloudHSM
+     *         cluster.
+     *         </p>
+     */
+    public String getKeyStorePassword() {
+        return keyStorePassword;
+    }
+
+    /**
+     * <p>
+     * Enter the password of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+     * > <code>kmsuser</code> crypto user (CU) account</a> in the specified AWS
+     * CloudHSM cluster. AWS KMS logs into the cluster as this user to manage
+     * key material on your behalf.
+     * </p>
+     * <p>
+     * This parameter tells AWS KMS the <code>kmsuser</code> account password;
+     * it does not change the password in the AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     *
+     * @param keyStorePassword <p>
+     *            Enter the password of the <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+     *            > <code>kmsuser</code> crypto user (CU) account</a> in the
+     *            specified AWS CloudHSM cluster. AWS KMS logs into the cluster
+     *            as this user to manage key material on your behalf.
+     *            </p>
+     *            <p>
+     *            This parameter tells AWS KMS the <code>kmsuser</code> account
+     *            password; it does not change the password in the AWS CloudHSM
+     *            cluster.
+     *            </p>
+     */
+    public void setKeyStorePassword(String keyStorePassword) {
+        this.keyStorePassword = keyStorePassword;
+    }
+
+    /**
+     * <p>
+     * Enter the password of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+     * > <code>kmsuser</code> crypto user (CU) account</a> in the specified AWS
+     * CloudHSM cluster. AWS KMS logs into the cluster as this user to manage
+     * key material on your behalf.
+     * </p>
+     * <p>
+     * This parameter tells AWS KMS the <code>kmsuser</code> account password;
+     * it does not change the password in the AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     *
+     * @param keyStorePassword <p>
+     *            Enter the password of the <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+     *            > <code>kmsuser</code> crypto user (CU) account</a> in the
+     *            specified AWS CloudHSM cluster. AWS KMS logs into the cluster
+     *            as this user to manage key material on your behalf.
+     *            </p>
+     *            <p>
+     *            This parameter tells AWS KMS the <code>kmsuser</code> account
+     *            password; it does not change the password in the AWS CloudHSM
+     *            cluster.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateCustomKeyStoreRequest withKeyStorePassword(String keyStorePassword) {
+        this.keyStorePassword = keyStorePassword;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getCustomKeyStoreName() != null)
+            sb.append("CustomKeyStoreName: " + getCustomKeyStoreName() + ",");
+        if (getCloudHsmClusterId() != null)
+            sb.append("CloudHsmClusterId: " + getCloudHsmClusterId() + ",");
+        if (getTrustAnchorCertificate() != null)
+            sb.append("TrustAnchorCertificate: " + getTrustAnchorCertificate() + ",");
+        if (getKeyStorePassword() != null)
+            sb.append("KeyStorePassword: " + getKeyStorePassword());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getCustomKeyStoreName() == null) ? 0 : getCustomKeyStoreName().hashCode());
+        hashCode = prime * hashCode
+                + ((getCloudHsmClusterId() == null) ? 0 : getCloudHsmClusterId().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getTrustAnchorCertificate() == null) ? 0 : getTrustAnchorCertificate()
+                        .hashCode());
+        hashCode = prime * hashCode
+                + ((getKeyStorePassword() == null) ? 0 : getKeyStorePassword().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof CreateCustomKeyStoreRequest == false)
+            return false;
+        CreateCustomKeyStoreRequest other = (CreateCustomKeyStoreRequest) obj;
+
+        if (other.getCustomKeyStoreName() == null ^ this.getCustomKeyStoreName() == null)
+            return false;
+        if (other.getCustomKeyStoreName() != null
+                && other.getCustomKeyStoreName().equals(this.getCustomKeyStoreName()) == false)
+            return false;
+        if (other.getCloudHsmClusterId() == null ^ this.getCloudHsmClusterId() == null)
+            return false;
+        if (other.getCloudHsmClusterId() != null
+                && other.getCloudHsmClusterId().equals(this.getCloudHsmClusterId()) == false)
+            return false;
+        if (other.getTrustAnchorCertificate() == null ^ this.getTrustAnchorCertificate() == null)
+            return false;
+        if (other.getTrustAnchorCertificate() != null
+                && other.getTrustAnchorCertificate().equals(this.getTrustAnchorCertificate()) == false)
+            return false;
+        if (other.getKeyStorePassword() == null ^ this.getKeyStorePassword() == null)
+            return false;
+        if (other.getKeyStorePassword() != null
+                && other.getKeyStorePassword().equals(this.getKeyStorePassword()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateCustomKeyStoreResult.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateCustomKeyStoreResult.java
new file mode 100644
index 0000000000..fd16c1bda8
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateCustomKeyStoreResult.java
@@ -0,0 +1,130 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import java.io.Serializable;
+
+public class CreateCustomKeyStoreResult implements Serializable {
+    /**
+     * <p>
+     * A unique identifier for the new custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     */
+    private String customKeyStoreId;
+
+    /**
+     * <p>
+     * A unique identifier for the new custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @return <p>
+     *         A unique identifier for the new custom key store.
+     *         </p>
+     */
+    public String getCustomKeyStoreId() {
+        return customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the new custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            A unique identifier for the new custom key store.
+     *            </p>
+     */
+    public void setCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the new custom key store.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            A unique identifier for the new custom key store.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateCustomKeyStoreResult withCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getCustomKeyStoreId() != null)
+            sb.append("CustomKeyStoreId: " + getCustomKeyStoreId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getCustomKeyStoreId() == null) ? 0 : getCustomKeyStoreId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof CreateCustomKeyStoreResult == false)
+            return false;
+        CreateCustomKeyStoreResult other = (CreateCustomKeyStoreResult) obj;
+
+        if (other.getCustomKeyStoreId() == null ^ this.getCustomKeyStoreId() == null)
+            return false;
+        if (other.getCustomKeyStoreId() != null
+                && other.getCustomKeyStoreId().equals(this.getCustomKeyStoreId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateGrantRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateGrantRequest.java
index d22978bf50..64d54ee356 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateGrantRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateGrantRequest.java
@@ -95,6 +95,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      */
     private String granteePrincipal;
 
@@ -117,6 +118,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      */
     private String retiringPrincipal;
 
@@ -154,7 +156,7 @@
 
     /**
      * <p>
-     * A friendly name for identifying the grant. Use this value to prevent the
+     * A friendly name for identifying the grant. Use this value to prevent
      * unintended creation of duplicate grants when retrying this request.
      * </p>
      * <p>
@@ -405,6 +407,7 @@ public CreateGrantRequest withKeyId(String keyId) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @return <p>
      *         The principal that is given permission to perform the operations
@@ -445,6 +448,7 @@ public String getGranteePrincipal() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @param granteePrincipal <p>
      *            The principal that is given permission to perform the
@@ -488,6 +492,7 @@ public void setGranteePrincipal(String granteePrincipal) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @param granteePrincipal <p>
      *            The principal that is given permission to perform the
@@ -531,6 +536,7 @@ public CreateGrantRequest withGranteePrincipal(String granteePrincipal) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @return <p>
      *         The principal that is given permission to retire the grant by
@@ -571,6 +577,7 @@ public String getRetiringPrincipal() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @param retiringPrincipal <p>
      *            The principal that is given permission to retire the grant by
@@ -614,6 +621,7 @@ public void setRetiringPrincipal(String retiringPrincipal) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @param retiringPrincipal <p>
      *            The principal that is given permission to retire the grant by
@@ -911,7 +919,7 @@ public CreateGrantRequest withGrantTokens(java.util.Collection<String> grantToke
 
     /**
      * <p>
-     * A friendly name for identifying the grant. Use this value to prevent the
+     * A friendly name for identifying the grant. Use this value to prevent
      * unintended creation of duplicate grants when retrying this request.
      * </p>
      * <p>
@@ -936,7 +944,7 @@ public CreateGrantRequest withGrantTokens(java.util.Collection<String> grantToke
      *
      * @return <p>
      *         A friendly name for identifying the grant. Use this value to
-     *         prevent the unintended creation of duplicate grants when retrying
+     *         prevent unintended creation of duplicate grants when retrying
      *         this request.
      *         </p>
      *         <p>
@@ -963,7 +971,7 @@ public String getName() {
 
     /**
      * <p>
-     * A friendly name for identifying the grant. Use this value to prevent the
+     * A friendly name for identifying the grant. Use this value to prevent
      * unintended creation of duplicate grants when retrying this request.
      * </p>
      * <p>
@@ -988,8 +996,8 @@ public String getName() {
      *
      * @param name <p>
      *            A friendly name for identifying the grant. Use this value to
-     *            prevent the unintended creation of duplicate grants when
-     *            retrying this request.
+     *            prevent unintended creation of duplicate grants when retrying
+     *            this request.
      *            </p>
      *            <p>
      *            When this value is absent, all <code>CreateGrant</code>
@@ -1015,7 +1023,7 @@ public void setName(String name) {
 
     /**
      * <p>
-     * A friendly name for identifying the grant. Use this value to prevent the
+     * A friendly name for identifying the grant. Use this value to prevent
      * unintended creation of duplicate grants when retrying this request.
      * </p>
      * <p>
@@ -1043,8 +1051,8 @@ public void setName(String name) {
      *
      * @param name <p>
      *            A friendly name for identifying the grant. Use this value to
-     *            prevent the unintended creation of duplicate grants when
-     *            retrying this request.
+     *            prevent unintended creation of duplicate grants when retrying
+     *            this request.
      *            </p>
      *            <p>
      *            When this value is absent, all <code>CreateGrant</code>
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateKeyRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateKeyRequest.java
index 9bd72a5557..7245def320 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateKeyRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CreateKeyRequest.java
@@ -24,10 +24,10 @@
  * Creates a customer master key (CMK) in the caller's AWS account.
  * </p>
  * <p>
- * You can use a CMK to encrypt small amounts of data (4 KiB or less) directly.
- * But CMKs are more commonly used to encrypt data encryption keys (DEKs), which
- * are used to encrypt raw data. For more information about DEKs and the
- * difference between CMKs and DEKs, see the following:
+ * You can use a CMK to encrypt small amounts of data (4 KiB or less) directly,
+ * but CMKs are more commonly used to encrypt data keys, which are used to
+ * encrypt raw data. For more information about data keys and the difference
+ * between CMKs and data keys, see the following:
  * </p>
  * <ul>
  * <li>
@@ -44,6 +44,21 @@
  * </li>
  * </ul>
  * <p>
+ * If you plan to <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html"
+ * >import key material</a>, use the <code>Origin</code> parameter with a value
+ * of <code>EXTERNAL</code> to create a CMK with no key material.
+ * </p>
+ * <p>
+ * To create a CMK in a <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+ * >custom key store</a>, use <code>CustomKeyStoreId</code> parameter to specify
+ * the custom key store. You must also use the <code>Origin</code> parameter
+ * with a value of <code>AWS_CLOUDHSM</code>. The AWS CloudHSM cluster that is
+ * associated with the custom key store must have at least two active HSMs, each
+ * in a different Availability Zone in the Region.
+ * </p>
+ * <p>
  * You cannot use this operation to create a CMK in a different AWS account.
  * </p>
  */
@@ -74,8 +89,8 @@
      * principals in the key policy must exist and be visible to AWS KMS. When
      * you create a new AWS principal (for example, an IAM user or role), you
      * might need to enforce a delay before including the new principal in a key
-     * policy. The reason for this is that the new principal might not be
-     * immediately visible to AWS KMS. For more information, see <a href=
+     * policy because the new principal might not be immediately visible to AWS
+     * KMS. For more information, see <a href=
      * "http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency"
      * >Changes that I make are not always immediately visible</a> in the <i>AWS
      * Identity and Access Management User Guide</i>.
@@ -128,28 +143,68 @@
 
     /**
      * <p>
-     * The source of the CMK's key material.
+     * The source of the CMK's key material. You cannot change the origin after
+     * you create the CMK.
      * </p>
      * <p>
      * The default is <code>AWS_KMS</code>, which means AWS KMS creates the key
-     * material. When this parameter is set to <code>EXTERNAL</code>, the
-     * request creates a CMK without key material so that you can import key
-     * material from your existing key management infrastructure. For more
-     * information about importing key material into AWS KMS, see <a href=
+     * material in its own key store.
+     * </p>
+     * <p>
+     * When the parameter value is <code>EXTERNAL</code>, AWS KMS creates a CMK
+     * without key material so that you can import key material from your
+     * existing key management infrastructure. For more information about
+     * importing key material into AWS KMS, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html"
      * >Importing Key Material</a> in the <i>AWS Key Management Service
      * Developer Guide</i>.
      * </p>
      * <p>
-     * The CMK's <code>Origin</code> is immutable and is set when the CMK is
-     * created.
+     * When the parameter value is <code>AWS_CLOUDHSM</code>, AWS KMS creates
+     * the CMK in a AWS KMS <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> and creates its key material in the associated AWS
+     * CloudHSM cluster. You must also use the <code>CustomKeyStoreId</code>
+     * parameter to identify the custom key store.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL
+     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL, AWS_CLOUDHSM
      */
     private String origin;
 
+    /**
+     * <p>
+     * Creates the CMK in the specified <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> and the key material in its associated AWS CloudHSM
+     * cluster. To create a CMK in a custom key store, you must also specify the
+     * <code>Origin</code> parameter with a value of <code>AWS_CLOUDHSM</code>.
+     * The AWS CloudHSM cluster that is associated with the custom key store
+     * must have at least two active HSMs, each in a different Availability Zone
+     * in the Region.
+     * </p>
+     * <p>
+     * To find the ID of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * The response includes the custom key store ID and the ID of the AWS
+     * CloudHSM cluster.
+     * </p>
+     * <p>
+     * This operation is part of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+     * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+     * convenience and extensive integration of AWS KMS with the isolation and
+     * control of a single-tenant key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     */
+    private String customKeyStoreId;
+
     /**
      * <p>
      * A flag to indicate whether to bypass the key policy lockout safety check.
@@ -217,8 +272,8 @@
      * principals in the key policy must exist and be visible to AWS KMS. When
      * you create a new AWS principal (for example, an IAM user or role), you
      * might need to enforce a delay before including the new principal in a key
-     * policy. The reason for this is that the new principal might not be
-     * immediately visible to AWS KMS. For more information, see <a href=
+     * policy because the new principal might not be immediately visible to AWS
+     * KMS. For more information, see <a href=
      * "http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency"
      * >Changes that I make are not always immediately visible</a> in the <i>AWS
      * Identity and Access Management User Guide</i>.
@@ -266,9 +321,9 @@
      *         principals. The principals in the key policy must exist and be
      *         visible to AWS KMS. When you create a new AWS principal (for
      *         example, an IAM user or role), you might need to enforce a delay
-     *         before including the new principal in a key policy. The reason
-     *         for this is that the new principal might not be immediately
-     *         visible to AWS KMS. For more information, see <a href=
+     *         before including the new principal in a key policy because the
+     *         new principal might not be immediately visible to AWS KMS. For
+     *         more information, see <a href=
      *         "http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency"
      *         >Changes that I make are not always immediately visible</a> in
      *         the <i>AWS Identity and Access Management User Guide</i>.
@@ -316,8 +371,8 @@ public String getPolicy() {
      * principals in the key policy must exist and be visible to AWS KMS. When
      * you create a new AWS principal (for example, an IAM user or role), you
      * might need to enforce a delay before including the new principal in a key
-     * policy. The reason for this is that the new principal might not be
-     * immediately visible to AWS KMS. For more information, see <a href=
+     * policy because the new principal might not be immediately visible to AWS
+     * KMS. For more information, see <a href=
      * "http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency"
      * >Changes that I make are not always immediately visible</a> in the <i>AWS
      * Identity and Access Management User Guide</i>.
@@ -366,10 +421,9 @@ public String getPolicy() {
      *            principals. The principals in the key policy must exist and be
      *            visible to AWS KMS. When you create a new AWS principal (for
      *            example, an IAM user or role), you might need to enforce a
-     *            delay before including the new principal in a key policy. The
-     *            reason for this is that the new principal might not be
-     *            immediately visible to AWS KMS. For more information, see <a
-     *            href=
+     *            delay before including the new principal in a key policy
+     *            because the new principal might not be immediately visible to
+     *            AWS KMS. For more information, see <a href=
      *            "http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency"
      *            >Changes that I make are not always immediately visible</a> in
      *            the <i>AWS Identity and Access Management User Guide</i>.
@@ -417,8 +471,8 @@ public void setPolicy(String policy) {
      * principals in the key policy must exist and be visible to AWS KMS. When
      * you create a new AWS principal (for example, an IAM user or role), you
      * might need to enforce a delay before including the new principal in a key
-     * policy. The reason for this is that the new principal might not be
-     * immediately visible to AWS KMS. For more information, see <a href=
+     * policy because the new principal might not be immediately visible to AWS
+     * KMS. For more information, see <a href=
      * "http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency"
      * >Changes that I make are not always immediately visible</a> in the <i>AWS
      * Identity and Access Management User Guide</i>.
@@ -470,10 +524,9 @@ public void setPolicy(String policy) {
      *            principals. The principals in the key policy must exist and be
      *            visible to AWS KMS. When you create a new AWS principal (for
      *            example, an IAM user or role), you might need to enforce a
-     *            delay before including the new principal in a key policy. The
-     *            reason for this is that the new principal might not be
-     *            immediately visible to AWS KMS. For more information, see <a
-     *            href=
+     *            delay before including the new principal in a key policy
+     *            because the new principal might not be immediately visible to
+     *            AWS KMS. For more information, see <a href=
      *            "http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency"
      *            >Changes that I make are not always immediately visible</a> in
      *            the <i>AWS Identity and Access Management User Guide</i>.
@@ -705,43 +758,60 @@ public CreateKeyRequest withKeyUsage(KeyUsageType keyUsage) {
 
     /**
      * <p>
-     * The source of the CMK's key material.
+     * The source of the CMK's key material. You cannot change the origin after
+     * you create the CMK.
      * </p>
      * <p>
      * The default is <code>AWS_KMS</code>, which means AWS KMS creates the key
-     * material. When this parameter is set to <code>EXTERNAL</code>, the
-     * request creates a CMK without key material so that you can import key
-     * material from your existing key management infrastructure. For more
-     * information about importing key material into AWS KMS, see <a href=
+     * material in its own key store.
+     * </p>
+     * <p>
+     * When the parameter value is <code>EXTERNAL</code>, AWS KMS creates a CMK
+     * without key material so that you can import key material from your
+     * existing key management infrastructure. For more information about
+     * importing key material into AWS KMS, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html"
      * >Importing Key Material</a> in the <i>AWS Key Management Service
      * Developer Guide</i>.
      * </p>
      * <p>
-     * The CMK's <code>Origin</code> is immutable and is set when the CMK is
-     * created.
+     * When the parameter value is <code>AWS_CLOUDHSM</code>, AWS KMS creates
+     * the CMK in a AWS KMS <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> and creates its key material in the associated AWS
+     * CloudHSM cluster. You must also use the <code>CustomKeyStoreId</code>
+     * parameter to identify the custom key store.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL
+     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL, AWS_CLOUDHSM
      *
      * @return <p>
-     *         The source of the CMK's key material.
+     *         The source of the CMK's key material. You cannot change the
+     *         origin after you create the CMK.
      *         </p>
      *         <p>
      *         The default is <code>AWS_KMS</code>, which means AWS KMS creates
-     *         the key material. When this parameter is set to
-     *         <code>EXTERNAL</code>, the request creates a CMK without key
-     *         material so that you can import key material from your existing
-     *         key management infrastructure. For more information about
-     *         importing key material into AWS KMS, see <a href=
+     *         the key material in its own key store.
+     *         </p>
+     *         <p>
+     *         When the parameter value is <code>EXTERNAL</code>, AWS KMS
+     *         creates a CMK without key material so that you can import key
+     *         material from your existing key management infrastructure. For
+     *         more information about importing key material into AWS KMS, see
+     *         <a href=
      *         "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html"
      *         >Importing Key Material</a> in the <i>AWS Key Management Service
      *         Developer Guide</i>.
      *         </p>
      *         <p>
-     *         The CMK's <code>Origin</code> is immutable and is set when the
-     *         CMK is created.
+     *         When the parameter value is <code>AWS_CLOUDHSM</code>, AWS KMS
+     *         creates the CMK in a AWS KMS <a href=
+     *         "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     *         >custom key store</a> and creates its key material in the
+     *         associated AWS CloudHSM cluster. You must also use the
+     *         <code>CustomKeyStoreId</code> parameter to identify the custom
+     *         key store.
      *         </p>
      * @see OriginType
      */
@@ -751,43 +821,60 @@ public String getOrigin() {
 
     /**
      * <p>
-     * The source of the CMK's key material.
+     * The source of the CMK's key material. You cannot change the origin after
+     * you create the CMK.
      * </p>
      * <p>
      * The default is <code>AWS_KMS</code>, which means AWS KMS creates the key
-     * material. When this parameter is set to <code>EXTERNAL</code>, the
-     * request creates a CMK without key material so that you can import key
-     * material from your existing key management infrastructure. For more
-     * information about importing key material into AWS KMS, see <a href=
+     * material in its own key store.
+     * </p>
+     * <p>
+     * When the parameter value is <code>EXTERNAL</code>, AWS KMS creates a CMK
+     * without key material so that you can import key material from your
+     * existing key management infrastructure. For more information about
+     * importing key material into AWS KMS, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html"
      * >Importing Key Material</a> in the <i>AWS Key Management Service
      * Developer Guide</i>.
      * </p>
      * <p>
-     * The CMK's <code>Origin</code> is immutable and is set when the CMK is
-     * created.
+     * When the parameter value is <code>AWS_CLOUDHSM</code>, AWS KMS creates
+     * the CMK in a AWS KMS <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> and creates its key material in the associated AWS
+     * CloudHSM cluster. You must also use the <code>CustomKeyStoreId</code>
+     * parameter to identify the custom key store.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL
+     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL, AWS_CLOUDHSM
      *
      * @param origin <p>
-     *            The source of the CMK's key material.
+     *            The source of the CMK's key material. You cannot change the
+     *            origin after you create the CMK.
      *            </p>
      *            <p>
      *            The default is <code>AWS_KMS</code>, which means AWS KMS
-     *            creates the key material. When this parameter is set to
-     *            <code>EXTERNAL</code>, the request creates a CMK without key
-     *            material so that you can import key material from your
-     *            existing key management infrastructure. For more information
-     *            about importing key material into AWS KMS, see <a href=
+     *            creates the key material in its own key store.
+     *            </p>
+     *            <p>
+     *            When the parameter value is <code>EXTERNAL</code>, AWS KMS
+     *            creates a CMK without key material so that you can import key
+     *            material from your existing key management infrastructure. For
+     *            more information about importing key material into AWS KMS,
+     *            see <a href=
      *            "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html"
      *            >Importing Key Material</a> in the <i>AWS Key Management
      *            Service Developer Guide</i>.
      *            </p>
      *            <p>
-     *            The CMK's <code>Origin</code> is immutable and is set when the
-     *            CMK is created.
+     *            When the parameter value is <code>AWS_CLOUDHSM</code>, AWS KMS
+     *            creates the CMK in a AWS KMS <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     *            >custom key store</a> and creates its key material in the
+     *            associated AWS CloudHSM cluster. You must also use the
+     *            <code>CustomKeyStoreId</code> parameter to identify the custom
+     *            key store.
      *            </p>
      * @see OriginType
      */
@@ -797,46 +884,63 @@ public void setOrigin(String origin) {
 
     /**
      * <p>
-     * The source of the CMK's key material.
+     * The source of the CMK's key material. You cannot change the origin after
+     * you create the CMK.
      * </p>
      * <p>
      * The default is <code>AWS_KMS</code>, which means AWS KMS creates the key
-     * material. When this parameter is set to <code>EXTERNAL</code>, the
-     * request creates a CMK without key material so that you can import key
-     * material from your existing key management infrastructure. For more
-     * information about importing key material into AWS KMS, see <a href=
+     * material in its own key store.
+     * </p>
+     * <p>
+     * When the parameter value is <code>EXTERNAL</code>, AWS KMS creates a CMK
+     * without key material so that you can import key material from your
+     * existing key management infrastructure. For more information about
+     * importing key material into AWS KMS, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html"
      * >Importing Key Material</a> in the <i>AWS Key Management Service
      * Developer Guide</i>.
      * </p>
      * <p>
-     * The CMK's <code>Origin</code> is immutable and is set when the CMK is
-     * created.
+     * When the parameter value is <code>AWS_CLOUDHSM</code>, AWS KMS creates
+     * the CMK in a AWS KMS <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> and creates its key material in the associated AWS
+     * CloudHSM cluster. You must also use the <code>CustomKeyStoreId</code>
+     * parameter to identify the custom key store.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL
+     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL, AWS_CLOUDHSM
      *
      * @param origin <p>
-     *            The source of the CMK's key material.
+     *            The source of the CMK's key material. You cannot change the
+     *            origin after you create the CMK.
      *            </p>
      *            <p>
      *            The default is <code>AWS_KMS</code>, which means AWS KMS
-     *            creates the key material. When this parameter is set to
-     *            <code>EXTERNAL</code>, the request creates a CMK without key
-     *            material so that you can import key material from your
-     *            existing key management infrastructure. For more information
-     *            about importing key material into AWS KMS, see <a href=
+     *            creates the key material in its own key store.
+     *            </p>
+     *            <p>
+     *            When the parameter value is <code>EXTERNAL</code>, AWS KMS
+     *            creates a CMK without key material so that you can import key
+     *            material from your existing key management infrastructure. For
+     *            more information about importing key material into AWS KMS,
+     *            see <a href=
      *            "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html"
      *            >Importing Key Material</a> in the <i>AWS Key Management
      *            Service Developer Guide</i>.
      *            </p>
      *            <p>
-     *            The CMK's <code>Origin</code> is immutable and is set when the
-     *            CMK is created.
+     *            When the parameter value is <code>AWS_CLOUDHSM</code>, AWS KMS
+     *            creates the CMK in a AWS KMS <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     *            >custom key store</a> and creates its key material in the
+     *            associated AWS CloudHSM cluster. You must also use the
+     *            <code>CustomKeyStoreId</code> parameter to identify the custom
+     *            key store.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -849,43 +953,60 @@ public CreateKeyRequest withOrigin(String origin) {
 
     /**
      * <p>
-     * The source of the CMK's key material.
+     * The source of the CMK's key material. You cannot change the origin after
+     * you create the CMK.
      * </p>
      * <p>
      * The default is <code>AWS_KMS</code>, which means AWS KMS creates the key
-     * material. When this parameter is set to <code>EXTERNAL</code>, the
-     * request creates a CMK without key material so that you can import key
-     * material from your existing key management infrastructure. For more
-     * information about importing key material into AWS KMS, see <a href=
+     * material in its own key store.
+     * </p>
+     * <p>
+     * When the parameter value is <code>EXTERNAL</code>, AWS KMS creates a CMK
+     * without key material so that you can import key material from your
+     * existing key management infrastructure. For more information about
+     * importing key material into AWS KMS, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html"
      * >Importing Key Material</a> in the <i>AWS Key Management Service
      * Developer Guide</i>.
      * </p>
      * <p>
-     * The CMK's <code>Origin</code> is immutable and is set when the CMK is
-     * created.
+     * When the parameter value is <code>AWS_CLOUDHSM</code>, AWS KMS creates
+     * the CMK in a AWS KMS <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> and creates its key material in the associated AWS
+     * CloudHSM cluster. You must also use the <code>CustomKeyStoreId</code>
+     * parameter to identify the custom key store.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL
+     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL, AWS_CLOUDHSM
      *
      * @param origin <p>
-     *            The source of the CMK's key material.
+     *            The source of the CMK's key material. You cannot change the
+     *            origin after you create the CMK.
      *            </p>
      *            <p>
      *            The default is <code>AWS_KMS</code>, which means AWS KMS
-     *            creates the key material. When this parameter is set to
-     *            <code>EXTERNAL</code>, the request creates a CMK without key
-     *            material so that you can import key material from your
-     *            existing key management infrastructure. For more information
-     *            about importing key material into AWS KMS, see <a href=
+     *            creates the key material in its own key store.
+     *            </p>
+     *            <p>
+     *            When the parameter value is <code>EXTERNAL</code>, AWS KMS
+     *            creates a CMK without key material so that you can import key
+     *            material from your existing key management infrastructure. For
+     *            more information about importing key material into AWS KMS,
+     *            see <a href=
      *            "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html"
      *            >Importing Key Material</a> in the <i>AWS Key Management
      *            Service Developer Guide</i>.
      *            </p>
      *            <p>
-     *            The CMK's <code>Origin</code> is immutable and is set when the
-     *            CMK is created.
+     *            When the parameter value is <code>AWS_CLOUDHSM</code>, AWS KMS
+     *            creates the CMK in a AWS KMS <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     *            >custom key store</a> and creates its key material in the
+     *            associated AWS CloudHSM cluster. You must also use the
+     *            <code>CustomKeyStoreId</code> parameter to identify the custom
+     *            key store.
      *            </p>
      * @see OriginType
      */
@@ -895,46 +1016,63 @@ public void setOrigin(OriginType origin) {
 
     /**
      * <p>
-     * The source of the CMK's key material.
+     * The source of the CMK's key material. You cannot change the origin after
+     * you create the CMK.
      * </p>
      * <p>
      * The default is <code>AWS_KMS</code>, which means AWS KMS creates the key
-     * material. When this parameter is set to <code>EXTERNAL</code>, the
-     * request creates a CMK without key material so that you can import key
-     * material from your existing key management infrastructure. For more
-     * information about importing key material into AWS KMS, see <a href=
+     * material in its own key store.
+     * </p>
+     * <p>
+     * When the parameter value is <code>EXTERNAL</code>, AWS KMS creates a CMK
+     * without key material so that you can import key material from your
+     * existing key management infrastructure. For more information about
+     * importing key material into AWS KMS, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html"
      * >Importing Key Material</a> in the <i>AWS Key Management Service
      * Developer Guide</i>.
      * </p>
      * <p>
-     * The CMK's <code>Origin</code> is immutable and is set when the CMK is
-     * created.
+     * When the parameter value is <code>AWS_CLOUDHSM</code>, AWS KMS creates
+     * the CMK in a AWS KMS <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> and creates its key material in the associated AWS
+     * CloudHSM cluster. You must also use the <code>CustomKeyStoreId</code>
+     * parameter to identify the custom key store.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL
+     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL, AWS_CLOUDHSM
      *
      * @param origin <p>
-     *            The source of the CMK's key material.
+     *            The source of the CMK's key material. You cannot change the
+     *            origin after you create the CMK.
      *            </p>
      *            <p>
      *            The default is <code>AWS_KMS</code>, which means AWS KMS
-     *            creates the key material. When this parameter is set to
-     *            <code>EXTERNAL</code>, the request creates a CMK without key
-     *            material so that you can import key material from your
-     *            existing key management infrastructure. For more information
-     *            about importing key material into AWS KMS, see <a href=
+     *            creates the key material in its own key store.
+     *            </p>
+     *            <p>
+     *            When the parameter value is <code>EXTERNAL</code>, AWS KMS
+     *            creates a CMK without key material so that you can import key
+     *            material from your existing key management infrastructure. For
+     *            more information about importing key material into AWS KMS,
+     *            see <a href=
      *            "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html"
      *            >Importing Key Material</a> in the <i>AWS Key Management
      *            Service Developer Guide</i>.
      *            </p>
      *            <p>
-     *            The CMK's <code>Origin</code> is immutable and is set when the
-     *            CMK is created.
+     *            When the parameter value is <code>AWS_CLOUDHSM</code>, AWS KMS
+     *            creates the CMK in a AWS KMS <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     *            >custom key store</a> and creates its key material in the
+     *            associated AWS CloudHSM cluster. You must also use the
+     *            <code>CustomKeyStoreId</code> parameter to identify the custom
+     *            key store.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -945,6 +1083,194 @@ public CreateKeyRequest withOrigin(OriginType origin) {
         return this;
     }
 
+    /**
+     * <p>
+     * Creates the CMK in the specified <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> and the key material in its associated AWS CloudHSM
+     * cluster. To create a CMK in a custom key store, you must also specify the
+     * <code>Origin</code> parameter with a value of <code>AWS_CLOUDHSM</code>.
+     * The AWS CloudHSM cluster that is associated with the custom key store
+     * must have at least two active HSMs, each in a different Availability Zone
+     * in the Region.
+     * </p>
+     * <p>
+     * To find the ID of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * The response includes the custom key store ID and the ID of the AWS
+     * CloudHSM cluster.
+     * </p>
+     * <p>
+     * This operation is part of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+     * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+     * convenience and extensive integration of AWS KMS with the isolation and
+     * control of a single-tenant key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @return <p>
+     *         Creates the CMK in the specified <a href=
+     *         "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     *         >custom key store</a> and the key material in its associated AWS
+     *         CloudHSM cluster. To create a CMK in a custom key store, you must
+     *         also specify the <code>Origin</code> parameter with a value of
+     *         <code>AWS_CLOUDHSM</code>. The AWS CloudHSM cluster that is
+     *         associated with the custom key store must have at least two
+     *         active HSMs, each in a different Availability Zone in the Region.
+     *         </p>
+     *         <p>
+     *         To find the ID of a custom key store, use the
+     *         <a>DescribeCustomKeyStores</a> operation.
+     *         </p>
+     *         <p>
+     *         The response includes the custom key store ID and the ID of the
+     *         AWS CloudHSM cluster.
+     *         </p>
+     *         <p>
+     *         This operation is part of the <a href=
+     *         "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+     *         >Custom Key Store feature</a> feature in AWS KMS, which combines
+     *         the convenience and extensive integration of AWS KMS with the
+     *         isolation and control of a single-tenant key store.
+     *         </p>
+     */
+    public String getCustomKeyStoreId() {
+        return customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * Creates the CMK in the specified <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> and the key material in its associated AWS CloudHSM
+     * cluster. To create a CMK in a custom key store, you must also specify the
+     * <code>Origin</code> parameter with a value of <code>AWS_CLOUDHSM</code>.
+     * The AWS CloudHSM cluster that is associated with the custom key store
+     * must have at least two active HSMs, each in a different Availability Zone
+     * in the Region.
+     * </p>
+     * <p>
+     * To find the ID of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * The response includes the custom key store ID and the ID of the AWS
+     * CloudHSM cluster.
+     * </p>
+     * <p>
+     * This operation is part of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+     * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+     * convenience and extensive integration of AWS KMS with the isolation and
+     * control of a single-tenant key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            Creates the CMK in the specified <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     *            >custom key store</a> and the key material in its associated
+     *            AWS CloudHSM cluster. To create a CMK in a custom key store,
+     *            you must also specify the <code>Origin</code> parameter with a
+     *            value of <code>AWS_CLOUDHSM</code>. The AWS CloudHSM cluster
+     *            that is associated with the custom key store must have at
+     *            least two active HSMs, each in a different Availability Zone
+     *            in the Region.
+     *            </p>
+     *            <p>
+     *            To find the ID of a custom key store, use the
+     *            <a>DescribeCustomKeyStores</a> operation.
+     *            </p>
+     *            <p>
+     *            The response includes the custom key store ID and the ID of
+     *            the AWS CloudHSM cluster.
+     *            </p>
+     *            <p>
+     *            This operation is part of the <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+     *            >Custom Key Store feature</a> feature in AWS KMS, which
+     *            combines the convenience and extensive integration of AWS KMS
+     *            with the isolation and control of a single-tenant key store.
+     *            </p>
+     */
+    public void setCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * Creates the CMK in the specified <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> and the key material in its associated AWS CloudHSM
+     * cluster. To create a CMK in a custom key store, you must also specify the
+     * <code>Origin</code> parameter with a value of <code>AWS_CLOUDHSM</code>.
+     * The AWS CloudHSM cluster that is associated with the custom key store
+     * must have at least two active HSMs, each in a different Availability Zone
+     * in the Region.
+     * </p>
+     * <p>
+     * To find the ID of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * The response includes the custom key store ID and the ID of the AWS
+     * CloudHSM cluster.
+     * </p>
+     * <p>
+     * This operation is part of the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+     * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+     * convenience and extensive integration of AWS KMS with the isolation and
+     * control of a single-tenant key store.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            Creates the CMK in the specified <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     *            >custom key store</a> and the key material in its associated
+     *            AWS CloudHSM cluster. To create a CMK in a custom key store,
+     *            you must also specify the <code>Origin</code> parameter with a
+     *            value of <code>AWS_CLOUDHSM</code>. The AWS CloudHSM cluster
+     *            that is associated with the custom key store must have at
+     *            least two active HSMs, each in a different Availability Zone
+     *            in the Region.
+     *            </p>
+     *            <p>
+     *            To find the ID of a custom key store, use the
+     *            <a>DescribeCustomKeyStores</a> operation.
+     *            </p>
+     *            <p>
+     *            The response includes the custom key store ID and the ID of
+     *            the AWS CloudHSM cluster.
+     *            </p>
+     *            <p>
+     *            This operation is part of the <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+     *            >Custom Key Store feature</a> feature in AWS KMS, which
+     *            combines the convenience and extensive integration of AWS KMS
+     *            with the isolation and control of a single-tenant key store.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateKeyRequest withCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+        return this;
+    }
+
     /**
      * <p>
      * A flag to indicate whether to bypass the key policy lockout safety check.
@@ -1325,6 +1651,8 @@ public String toString() {
             sb.append("KeyUsage: " + getKeyUsage() + ",");
         if (getOrigin() != null)
             sb.append("Origin: " + getOrigin() + ",");
+        if (getCustomKeyStoreId() != null)
+            sb.append("CustomKeyStoreId: " + getCustomKeyStoreId() + ",");
         if (getBypassPolicyLockoutSafetyCheck() != null)
             sb.append("BypassPolicyLockoutSafetyCheck: " + getBypassPolicyLockoutSafetyCheck()
                     + ",");
@@ -1344,6 +1672,8 @@ public int hashCode() {
                 + ((getDescription() == null) ? 0 : getDescription().hashCode());
         hashCode = prime * hashCode + ((getKeyUsage() == null) ? 0 : getKeyUsage().hashCode());
         hashCode = prime * hashCode + ((getOrigin() == null) ? 0 : getOrigin().hashCode());
+        hashCode = prime * hashCode
+                + ((getCustomKeyStoreId() == null) ? 0 : getCustomKeyStoreId().hashCode());
         hashCode = prime
                 * hashCode
                 + ((getBypassPolicyLockoutSafetyCheck() == null) ? 0
@@ -1380,6 +1710,11 @@ public boolean equals(Object obj) {
             return false;
         if (other.getOrigin() != null && other.getOrigin().equals(this.getOrigin()) == false)
             return false;
+        if (other.getCustomKeyStoreId() == null ^ this.getCustomKeyStoreId() == null)
+            return false;
+        if (other.getCustomKeyStoreId() != null
+                && other.getCustomKeyStoreId().equals(this.getCustomKeyStoreId()) == false)
+            return false;
         if (other.getBypassPolicyLockoutSafetyCheck() == null
                 ^ this.getBypassPolicyLockoutSafetyCheck() == null)
             return false;
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CustomKeyStoreHasCMKsException.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CustomKeyStoreHasCMKsException.java
new file mode 100644
index 0000000000..7b58020719
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CustomKeyStoreHasCMKsException.java
@@ -0,0 +1,40 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import com.amazonaws.AmazonServiceException;
+
+/**
+ * <p>
+ * The request was rejected because the custom key store contains AWS KMS
+ * customer master keys (CMKs). After verifying that you do not need to use the
+ * CMKs, use the <a>ScheduleKeyDeletion</a> operation to delete the CMKs. After
+ * they are deleted, you can delete the custom key store.
+ * </p>
+ */
+public class CustomKeyStoreHasCMKsException extends AmazonServiceException {
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * Constructs a new CustomKeyStoreHasCMKsException with the specified error
+     * message.
+     *
+     * @param message Describes the error encountered.
+     */
+    public CustomKeyStoreHasCMKsException(String message) {
+        super(message);
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CustomKeyStoreInvalidStateException.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CustomKeyStoreInvalidStateException.java
new file mode 100644
index 0000000000..746d293076
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CustomKeyStoreInvalidStateException.java
@@ -0,0 +1,67 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import com.amazonaws.AmazonServiceException;
+
+/**
+ * <p>
+ * The request was rejected because of the <code>ConnectionState</code> of the
+ * custom key store. To get the <code>ConnectionState</code> of a custom key
+ * store, use the <a>DescribeCustomKeyStores</a> operation.
+ * </p>
+ * <p>
+ * This exception is thrown under the following conditions:
+ * </p>
+ * <ul>
+ * <li>
+ * <p>
+ * You requested the <a>CreateKey</a> or <a>GenerateRandom</a> operation in a
+ * custom key store that is not connected. These operations are valid only when
+ * the custom key store <code>ConnectionState</code> is <code>CONNECTED</code>.
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * You requested the <a>UpdateCustomKeyStore</a> or <a>DeleteCustomKeyStore</a>
+ * operation on a custom key store that is not disconnected. This operation is
+ * valid only when the custom key store <code>ConnectionState</code> is
+ * <code>DISCONNECTED</code>.
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * You requested the <a>ConnectCustomKeyStore</a> operation on a custom key
+ * store with a <code>ConnectionState</code> of <code>DISCONNECTING</code> or
+ * <code>FAILED</code>. This operation is valid for all other
+ * <code>ConnectionState</code> values.
+ * </p>
+ * </li>
+ * </ul>
+ */
+public class CustomKeyStoreInvalidStateException extends AmazonServiceException {
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * Constructs a new CustomKeyStoreInvalidStateException with the specified
+     * error message.
+     *
+     * @param message Describes the error encountered.
+     */
+    public CustomKeyStoreInvalidStateException(String message) {
+        super(message);
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CustomKeyStoreNameInUseException.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CustomKeyStoreNameInUseException.java
new file mode 100644
index 0000000000..d9f5329893
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CustomKeyStoreNameInUseException.java
@@ -0,0 +1,39 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import com.amazonaws.AmazonServiceException;
+
+/**
+ * <p>
+ * The request was rejected because the specified custom key store name is
+ * already assigned to another custom key store in the account. Try again with a
+ * custom key store name that is unique in the account.
+ * </p>
+ */
+public class CustomKeyStoreNameInUseException extends AmazonServiceException {
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * Constructs a new CustomKeyStoreNameInUseException with the specified
+     * error message.
+     *
+     * @param message Describes the error encountered.
+     */
+    public CustomKeyStoreNameInUseException(String message) {
+        super(message);
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CustomKeyStoreNotFoundException.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CustomKeyStoreNotFoundException.java
new file mode 100644
index 0000000000..bd3864c249
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CustomKeyStoreNotFoundException.java
@@ -0,0 +1,38 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import com.amazonaws.AmazonServiceException;
+
+/**
+ * <p>
+ * The request was rejected because AWS KMS cannot find a custom key store with
+ * the specified key store name or ID.
+ * </p>
+ */
+public class CustomKeyStoreNotFoundException extends AmazonServiceException {
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * Constructs a new CustomKeyStoreNotFoundException with the specified error
+     * message.
+     *
+     * @param message Describes the error encountered.
+     */
+    public CustomKeyStoreNotFoundException(String message) {
+        super(message);
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CustomKeyStoresListEntry.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CustomKeyStoresListEntry.java
new file mode 100644
index 0000000000..afaecb77bb
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/CustomKeyStoresListEntry.java
@@ -0,0 +1,1410 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Contains information about each custom key store in the custom key store
+ * list.
+ * </p>
+ */
+public class CustomKeyStoresListEntry implements Serializable {
+    /**
+     * <p>
+     * A unique identifier for the custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     */
+    private String customKeyStoreId;
+
+    /**
+     * <p>
+     * The user-specified friendly name for the custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     */
+    private String customKeyStoreName;
+
+    /**
+     * <p>
+     * A unique identifier for the AWS CloudHSM cluster that is associated with
+     * the custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>19 - 24<br/>
+     */
+    private String cloudHsmClusterId;
+
+    /**
+     * <p>
+     * The trust anchor certificate of the associated AWS CloudHSM cluster. When
+     * you <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html#sign-csr"
+     * >initialize the cluster</a>, you create this certificate and save it in
+     * the <code>customerCA.crt</code> file.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 5000<br/>
+     */
+    private String trustAnchorCertificate;
+
+    /**
+     * <p>
+     * Indicates whether the custom key store is connected to its AWS CloudHSM
+     * cluster.
+     * </p>
+     * <p>
+     * You can create and use CMKs in your custom key stores only when its
+     * connection state is <code>CONNECTED</code>.
+     * </p>
+     * <p>
+     * The value is <code>DISCONNECTED</code> if the key store has never been
+     * connected or you use the <a>DisconnectCustomKeyStore</a> operation to
+     * disconnect it. If the value is <code>CONNECTED</code> but you are having
+     * trouble using the custom key store, make sure that its associated AWS
+     * CloudHSM cluster is active and contains at least one active HSM.
+     * </p>
+     * <p>
+     * A value of <code>FAILED</code> indicates that an attempt to connect was
+     * unsuccessful. For help resolving a connection failure, see <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     * >Troubleshooting a Custom Key Store</a> in the <i>AWS Key Management
+     * Service Developer Guide</i>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CONNECTED, CONNECTING, FAILED, DISCONNECTED,
+     * DISCONNECTING
+     */
+    private String connectionState;
+
+    /**
+     * <p>
+     * Describes the connection error. Valid values are:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>CLUSTER_NOT_FOUND</code> - AWS KMS cannot find the AWS CloudHSM
+     * cluster with the specified cluster ID.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>INSUFFICIENT_CLOUDHSM_HSMS</code> - The associated AWS CloudHSM
+     * cluster does not contain any active HSMs. To connect a custom key store
+     * to its AWS CloudHSM cluster, the cluster must contain at least one active
+     * HSM.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>INVALID_CREDENTIALS</code> - AWS KMS does not have the correct
+     * password for the <code>kmsuser</code> crypto user in the AWS CloudHSM
+     * cluster.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>NETWORK_ERRORS</code> - Network errors are preventing AWS KMS from
+     * connecting to the custom key store.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>USER_LOCKED_OUT</code> - The <code>kmsuser</code> CU account is
+     * locked out of the associated AWS CloudHSM cluster due to too many failed
+     * password attempts. Before you can connect your custom key store to its
+     * AWS CloudHSM cluster, you must change the <code>kmsuser</code> account
+     * password and update the password value for the custom key store.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * For help with connection failures, see <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     * >Troubleshooting Custom Key Stores</a> in the <i>AWS Key Management
+     * Service Developer Guide</i>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>INVALID_CREDENTIALS, CLUSTER_NOT_FOUND,
+     * NETWORK_ERRORS, INSUFFICIENT_CLOUDHSM_HSMS, USER_LOCKED_OUT
+     */
+    private String connectionErrorCode;
+
+    /**
+     * <p>
+     * The date and time when the custom key store was created.
+     * </p>
+     */
+    private java.util.Date creationDate;
+
+    /**
+     * <p>
+     * A unique identifier for the custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @return <p>
+     *         A unique identifier for the custom key store.
+     *         </p>
+     */
+    public String getCustomKeyStoreId() {
+        return customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            A unique identifier for the custom key store.
+     *            </p>
+     */
+    public void setCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the custom key store.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            A unique identifier for the custom key store.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CustomKeyStoresListEntry withCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The user-specified friendly name for the custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     *
+     * @return <p>
+     *         The user-specified friendly name for the custom key store.
+     *         </p>
+     */
+    public String getCustomKeyStoreName() {
+        return customKeyStoreName;
+    }
+
+    /**
+     * <p>
+     * The user-specified friendly name for the custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     *
+     * @param customKeyStoreName <p>
+     *            The user-specified friendly name for the custom key store.
+     *            </p>
+     */
+    public void setCustomKeyStoreName(String customKeyStoreName) {
+        this.customKeyStoreName = customKeyStoreName;
+    }
+
+    /**
+     * <p>
+     * The user-specified friendly name for the custom key store.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     *
+     * @param customKeyStoreName <p>
+     *            The user-specified friendly name for the custom key store.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CustomKeyStoresListEntry withCustomKeyStoreName(String customKeyStoreName) {
+        this.customKeyStoreName = customKeyStoreName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the AWS CloudHSM cluster that is associated with
+     * the custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>19 - 24<br/>
+     *
+     * @return <p>
+     *         A unique identifier for the AWS CloudHSM cluster that is
+     *         associated with the custom key store.
+     *         </p>
+     */
+    public String getCloudHsmClusterId() {
+        return cloudHsmClusterId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the AWS CloudHSM cluster that is associated with
+     * the custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>19 - 24<br/>
+     *
+     * @param cloudHsmClusterId <p>
+     *            A unique identifier for the AWS CloudHSM cluster that is
+     *            associated with the custom key store.
+     *            </p>
+     */
+    public void setCloudHsmClusterId(String cloudHsmClusterId) {
+        this.cloudHsmClusterId = cloudHsmClusterId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the AWS CloudHSM cluster that is associated with
+     * the custom key store.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>19 - 24<br/>
+     *
+     * @param cloudHsmClusterId <p>
+     *            A unique identifier for the AWS CloudHSM cluster that is
+     *            associated with the custom key store.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CustomKeyStoresListEntry withCloudHsmClusterId(String cloudHsmClusterId) {
+        this.cloudHsmClusterId = cloudHsmClusterId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The trust anchor certificate of the associated AWS CloudHSM cluster. When
+     * you <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html#sign-csr"
+     * >initialize the cluster</a>, you create this certificate and save it in
+     * the <code>customerCA.crt</code> file.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 5000<br/>
+     *
+     * @return <p>
+     *         The trust anchor certificate of the associated AWS CloudHSM
+     *         cluster. When you <a href=
+     *         "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html#sign-csr"
+     *         >initialize the cluster</a>, you create this certificate and save
+     *         it in the <code>customerCA.crt</code> file.
+     *         </p>
+     */
+    public String getTrustAnchorCertificate() {
+        return trustAnchorCertificate;
+    }
+
+    /**
+     * <p>
+     * The trust anchor certificate of the associated AWS CloudHSM cluster. When
+     * you <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html#sign-csr"
+     * >initialize the cluster</a>, you create this certificate and save it in
+     * the <code>customerCA.crt</code> file.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 5000<br/>
+     *
+     * @param trustAnchorCertificate <p>
+     *            The trust anchor certificate of the associated AWS CloudHSM
+     *            cluster. When you <a href=
+     *            "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html#sign-csr"
+     *            >initialize the cluster</a>, you create this certificate and
+     *            save it in the <code>customerCA.crt</code> file.
+     *            </p>
+     */
+    public void setTrustAnchorCertificate(String trustAnchorCertificate) {
+        this.trustAnchorCertificate = trustAnchorCertificate;
+    }
+
+    /**
+     * <p>
+     * The trust anchor certificate of the associated AWS CloudHSM cluster. When
+     * you <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html#sign-csr"
+     * >initialize the cluster</a>, you create this certificate and save it in
+     * the <code>customerCA.crt</code> file.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 5000<br/>
+     *
+     * @param trustAnchorCertificate <p>
+     *            The trust anchor certificate of the associated AWS CloudHSM
+     *            cluster. When you <a href=
+     *            "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html#sign-csr"
+     *            >initialize the cluster</a>, you create this certificate and
+     *            save it in the <code>customerCA.crt</code> file.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CustomKeyStoresListEntry withTrustAnchorCertificate(String trustAnchorCertificate) {
+        this.trustAnchorCertificate = trustAnchorCertificate;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Indicates whether the custom key store is connected to its AWS CloudHSM
+     * cluster.
+     * </p>
+     * <p>
+     * You can create and use CMKs in your custom key stores only when its
+     * connection state is <code>CONNECTED</code>.
+     * </p>
+     * <p>
+     * The value is <code>DISCONNECTED</code> if the key store has never been
+     * connected or you use the <a>DisconnectCustomKeyStore</a> operation to
+     * disconnect it. If the value is <code>CONNECTED</code> but you are having
+     * trouble using the custom key store, make sure that its associated AWS
+     * CloudHSM cluster is active and contains at least one active HSM.
+     * </p>
+     * <p>
+     * A value of <code>FAILED</code> indicates that an attempt to connect was
+     * unsuccessful. For help resolving a connection failure, see <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     * >Troubleshooting a Custom Key Store</a> in the <i>AWS Key Management
+     * Service Developer Guide</i>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CONNECTED, CONNECTING, FAILED, DISCONNECTED,
+     * DISCONNECTING
+     *
+     * @return <p>
+     *         Indicates whether the custom key store is connected to its AWS
+     *         CloudHSM cluster.
+     *         </p>
+     *         <p>
+     *         You can create and use CMKs in your custom key stores only when
+     *         its connection state is <code>CONNECTED</code>.
+     *         </p>
+     *         <p>
+     *         The value is <code>DISCONNECTED</code> if the key store has never
+     *         been connected or you use the <a>DisconnectCustomKeyStore</a>
+     *         operation to disconnect it. If the value is
+     *         <code>CONNECTED</code> but you are having trouble using the
+     *         custom key store, make sure that its associated AWS CloudHSM
+     *         cluster is active and contains at least one active HSM.
+     *         </p>
+     *         <p>
+     *         A value of <code>FAILED</code> indicates that an attempt to
+     *         connect was unsuccessful. For help resolving a connection
+     *         failure, see <a href=
+     *         "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     *         >Troubleshooting a Custom Key Store</a> in the <i>AWS Key
+     *         Management Service Developer Guide</i>.
+     *         </p>
+     * @see ConnectionStateType
+     */
+    public String getConnectionState() {
+        return connectionState;
+    }
+
+    /**
+     * <p>
+     * Indicates whether the custom key store is connected to its AWS CloudHSM
+     * cluster.
+     * </p>
+     * <p>
+     * You can create and use CMKs in your custom key stores only when its
+     * connection state is <code>CONNECTED</code>.
+     * </p>
+     * <p>
+     * The value is <code>DISCONNECTED</code> if the key store has never been
+     * connected or you use the <a>DisconnectCustomKeyStore</a> operation to
+     * disconnect it. If the value is <code>CONNECTED</code> but you are having
+     * trouble using the custom key store, make sure that its associated AWS
+     * CloudHSM cluster is active and contains at least one active HSM.
+     * </p>
+     * <p>
+     * A value of <code>FAILED</code> indicates that an attempt to connect was
+     * unsuccessful. For help resolving a connection failure, see <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     * >Troubleshooting a Custom Key Store</a> in the <i>AWS Key Management
+     * Service Developer Guide</i>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CONNECTED, CONNECTING, FAILED, DISCONNECTED,
+     * DISCONNECTING
+     *
+     * @param connectionState <p>
+     *            Indicates whether the custom key store is connected to its AWS
+     *            CloudHSM cluster.
+     *            </p>
+     *            <p>
+     *            You can create and use CMKs in your custom key stores only
+     *            when its connection state is <code>CONNECTED</code>.
+     *            </p>
+     *            <p>
+     *            The value is <code>DISCONNECTED</code> if the key store has
+     *            never been connected or you use the
+     *            <a>DisconnectCustomKeyStore</a> operation to disconnect it. If
+     *            the value is <code>CONNECTED</code> but you are having trouble
+     *            using the custom key store, make sure that its associated AWS
+     *            CloudHSM cluster is active and contains at least one active
+     *            HSM.
+     *            </p>
+     *            <p>
+     *            A value of <code>FAILED</code> indicates that an attempt to
+     *            connect was unsuccessful. For help resolving a connection
+     *            failure, see <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     *            >Troubleshooting a Custom Key Store</a> in the <i>AWS Key
+     *            Management Service Developer Guide</i>.
+     *            </p>
+     * @see ConnectionStateType
+     */
+    public void setConnectionState(String connectionState) {
+        this.connectionState = connectionState;
+    }
+
+    /**
+     * <p>
+     * Indicates whether the custom key store is connected to its AWS CloudHSM
+     * cluster.
+     * </p>
+     * <p>
+     * You can create and use CMKs in your custom key stores only when its
+     * connection state is <code>CONNECTED</code>.
+     * </p>
+     * <p>
+     * The value is <code>DISCONNECTED</code> if the key store has never been
+     * connected or you use the <a>DisconnectCustomKeyStore</a> operation to
+     * disconnect it. If the value is <code>CONNECTED</code> but you are having
+     * trouble using the custom key store, make sure that its associated AWS
+     * CloudHSM cluster is active and contains at least one active HSM.
+     * </p>
+     * <p>
+     * A value of <code>FAILED</code> indicates that an attempt to connect was
+     * unsuccessful. For help resolving a connection failure, see <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     * >Troubleshooting a Custom Key Store</a> in the <i>AWS Key Management
+     * Service Developer Guide</i>.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CONNECTED, CONNECTING, FAILED, DISCONNECTED,
+     * DISCONNECTING
+     *
+     * @param connectionState <p>
+     *            Indicates whether the custom key store is connected to its AWS
+     *            CloudHSM cluster.
+     *            </p>
+     *            <p>
+     *            You can create and use CMKs in your custom key stores only
+     *            when its connection state is <code>CONNECTED</code>.
+     *            </p>
+     *            <p>
+     *            The value is <code>DISCONNECTED</code> if the key store has
+     *            never been connected or you use the
+     *            <a>DisconnectCustomKeyStore</a> operation to disconnect it. If
+     *            the value is <code>CONNECTED</code> but you are having trouble
+     *            using the custom key store, make sure that its associated AWS
+     *            CloudHSM cluster is active and contains at least one active
+     *            HSM.
+     *            </p>
+     *            <p>
+     *            A value of <code>FAILED</code> indicates that an attempt to
+     *            connect was unsuccessful. For help resolving a connection
+     *            failure, see <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     *            >Troubleshooting a Custom Key Store</a> in the <i>AWS Key
+     *            Management Service Developer Guide</i>.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see ConnectionStateType
+     */
+    public CustomKeyStoresListEntry withConnectionState(String connectionState) {
+        this.connectionState = connectionState;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Indicates whether the custom key store is connected to its AWS CloudHSM
+     * cluster.
+     * </p>
+     * <p>
+     * You can create and use CMKs in your custom key stores only when its
+     * connection state is <code>CONNECTED</code>.
+     * </p>
+     * <p>
+     * The value is <code>DISCONNECTED</code> if the key store has never been
+     * connected or you use the <a>DisconnectCustomKeyStore</a> operation to
+     * disconnect it. If the value is <code>CONNECTED</code> but you are having
+     * trouble using the custom key store, make sure that its associated AWS
+     * CloudHSM cluster is active and contains at least one active HSM.
+     * </p>
+     * <p>
+     * A value of <code>FAILED</code> indicates that an attempt to connect was
+     * unsuccessful. For help resolving a connection failure, see <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     * >Troubleshooting a Custom Key Store</a> in the <i>AWS Key Management
+     * Service Developer Guide</i>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CONNECTED, CONNECTING, FAILED, DISCONNECTED,
+     * DISCONNECTING
+     *
+     * @param connectionState <p>
+     *            Indicates whether the custom key store is connected to its AWS
+     *            CloudHSM cluster.
+     *            </p>
+     *            <p>
+     *            You can create and use CMKs in your custom key stores only
+     *            when its connection state is <code>CONNECTED</code>.
+     *            </p>
+     *            <p>
+     *            The value is <code>DISCONNECTED</code> if the key store has
+     *            never been connected or you use the
+     *            <a>DisconnectCustomKeyStore</a> operation to disconnect it. If
+     *            the value is <code>CONNECTED</code> but you are having trouble
+     *            using the custom key store, make sure that its associated AWS
+     *            CloudHSM cluster is active and contains at least one active
+     *            HSM.
+     *            </p>
+     *            <p>
+     *            A value of <code>FAILED</code> indicates that an attempt to
+     *            connect was unsuccessful. For help resolving a connection
+     *            failure, see <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     *            >Troubleshooting a Custom Key Store</a> in the <i>AWS Key
+     *            Management Service Developer Guide</i>.
+     *            </p>
+     * @see ConnectionStateType
+     */
+    public void setConnectionState(ConnectionStateType connectionState) {
+        this.connectionState = connectionState.toString();
+    }
+
+    /**
+     * <p>
+     * Indicates whether the custom key store is connected to its AWS CloudHSM
+     * cluster.
+     * </p>
+     * <p>
+     * You can create and use CMKs in your custom key stores only when its
+     * connection state is <code>CONNECTED</code>.
+     * </p>
+     * <p>
+     * The value is <code>DISCONNECTED</code> if the key store has never been
+     * connected or you use the <a>DisconnectCustomKeyStore</a> operation to
+     * disconnect it. If the value is <code>CONNECTED</code> but you are having
+     * trouble using the custom key store, make sure that its associated AWS
+     * CloudHSM cluster is active and contains at least one active HSM.
+     * </p>
+     * <p>
+     * A value of <code>FAILED</code> indicates that an attempt to connect was
+     * unsuccessful. For help resolving a connection failure, see <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     * >Troubleshooting a Custom Key Store</a> in the <i>AWS Key Management
+     * Service Developer Guide</i>.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CONNECTED, CONNECTING, FAILED, DISCONNECTED,
+     * DISCONNECTING
+     *
+     * @param connectionState <p>
+     *            Indicates whether the custom key store is connected to its AWS
+     *            CloudHSM cluster.
+     *            </p>
+     *            <p>
+     *            You can create and use CMKs in your custom key stores only
+     *            when its connection state is <code>CONNECTED</code>.
+     *            </p>
+     *            <p>
+     *            The value is <code>DISCONNECTED</code> if the key store has
+     *            never been connected or you use the
+     *            <a>DisconnectCustomKeyStore</a> operation to disconnect it. If
+     *            the value is <code>CONNECTED</code> but you are having trouble
+     *            using the custom key store, make sure that its associated AWS
+     *            CloudHSM cluster is active and contains at least one active
+     *            HSM.
+     *            </p>
+     *            <p>
+     *            A value of <code>FAILED</code> indicates that an attempt to
+     *            connect was unsuccessful. For help resolving a connection
+     *            failure, see <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     *            >Troubleshooting a Custom Key Store</a> in the <i>AWS Key
+     *            Management Service Developer Guide</i>.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see ConnectionStateType
+     */
+    public CustomKeyStoresListEntry withConnectionState(ConnectionStateType connectionState) {
+        this.connectionState = connectionState.toString();
+        return this;
+    }
+
+    /**
+     * <p>
+     * Describes the connection error. Valid values are:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>CLUSTER_NOT_FOUND</code> - AWS KMS cannot find the AWS CloudHSM
+     * cluster with the specified cluster ID.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>INSUFFICIENT_CLOUDHSM_HSMS</code> - The associated AWS CloudHSM
+     * cluster does not contain any active HSMs. To connect a custom key store
+     * to its AWS CloudHSM cluster, the cluster must contain at least one active
+     * HSM.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>INVALID_CREDENTIALS</code> - AWS KMS does not have the correct
+     * password for the <code>kmsuser</code> crypto user in the AWS CloudHSM
+     * cluster.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>NETWORK_ERRORS</code> - Network errors are preventing AWS KMS from
+     * connecting to the custom key store.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>USER_LOCKED_OUT</code> - The <code>kmsuser</code> CU account is
+     * locked out of the associated AWS CloudHSM cluster due to too many failed
+     * password attempts. Before you can connect your custom key store to its
+     * AWS CloudHSM cluster, you must change the <code>kmsuser</code> account
+     * password and update the password value for the custom key store.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * For help with connection failures, see <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     * >Troubleshooting Custom Key Stores</a> in the <i>AWS Key Management
+     * Service Developer Guide</i>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>INVALID_CREDENTIALS, CLUSTER_NOT_FOUND,
+     * NETWORK_ERRORS, INSUFFICIENT_CLOUDHSM_HSMS, USER_LOCKED_OUT
+     *
+     * @return <p>
+     *         Describes the connection error. Valid values are:
+     *         </p>
+     *         <ul>
+     *         <li>
+     *         <p>
+     *         <code>CLUSTER_NOT_FOUND</code> - AWS KMS cannot find the AWS
+     *         CloudHSM cluster with the specified cluster ID.
+     *         </p>
+     *         </li>
+     *         <li>
+     *         <p>
+     *         <code>INSUFFICIENT_CLOUDHSM_HSMS</code> - The associated AWS
+     *         CloudHSM cluster does not contain any active HSMs. To connect a
+     *         custom key store to its AWS CloudHSM cluster, the cluster must
+     *         contain at least one active HSM.
+     *         </p>
+     *         </li>
+     *         <li>
+     *         <p>
+     *         <code>INVALID_CREDENTIALS</code> - AWS KMS does not have the
+     *         correct password for the <code>kmsuser</code> crypto user in the
+     *         AWS CloudHSM cluster.
+     *         </p>
+     *         </li>
+     *         <li>
+     *         <p>
+     *         <code>NETWORK_ERRORS</code> - Network errors are preventing AWS
+     *         KMS from connecting to the custom key store.
+     *         </p>
+     *         </li>
+     *         <li>
+     *         <p>
+     *         <code>USER_LOCKED_OUT</code> - The <code>kmsuser</code> CU
+     *         account is locked out of the associated AWS CloudHSM cluster due
+     *         to too many failed password attempts. Before you can connect your
+     *         custom key store to its AWS CloudHSM cluster, you must change the
+     *         <code>kmsuser</code> account password and update the password
+     *         value for the custom key store.
+     *         </p>
+     *         </li>
+     *         </ul>
+     *         <p>
+     *         For help with connection failures, see <a href=
+     *         "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     *         >Troubleshooting Custom Key Stores</a> in the <i>AWS Key
+     *         Management Service Developer Guide</i>.
+     *         </p>
+     * @see ConnectionErrorCodeType
+     */
+    public String getConnectionErrorCode() {
+        return connectionErrorCode;
+    }
+
+    /**
+     * <p>
+     * Describes the connection error. Valid values are:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>CLUSTER_NOT_FOUND</code> - AWS KMS cannot find the AWS CloudHSM
+     * cluster with the specified cluster ID.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>INSUFFICIENT_CLOUDHSM_HSMS</code> - The associated AWS CloudHSM
+     * cluster does not contain any active HSMs. To connect a custom key store
+     * to its AWS CloudHSM cluster, the cluster must contain at least one active
+     * HSM.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>INVALID_CREDENTIALS</code> - AWS KMS does not have the correct
+     * password for the <code>kmsuser</code> crypto user in the AWS CloudHSM
+     * cluster.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>NETWORK_ERRORS</code> - Network errors are preventing AWS KMS from
+     * connecting to the custom key store.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>USER_LOCKED_OUT</code> - The <code>kmsuser</code> CU account is
+     * locked out of the associated AWS CloudHSM cluster due to too many failed
+     * password attempts. Before you can connect your custom key store to its
+     * AWS CloudHSM cluster, you must change the <code>kmsuser</code> account
+     * password and update the password value for the custom key store.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * For help with connection failures, see <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     * >Troubleshooting Custom Key Stores</a> in the <i>AWS Key Management
+     * Service Developer Guide</i>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>INVALID_CREDENTIALS, CLUSTER_NOT_FOUND,
+     * NETWORK_ERRORS, INSUFFICIENT_CLOUDHSM_HSMS, USER_LOCKED_OUT
+     *
+     * @param connectionErrorCode <p>
+     *            Describes the connection error. Valid values are:
+     *            </p>
+     *            <ul>
+     *            <li>
+     *            <p>
+     *            <code>CLUSTER_NOT_FOUND</code> - AWS KMS cannot find the AWS
+     *            CloudHSM cluster with the specified cluster ID.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>INSUFFICIENT_CLOUDHSM_HSMS</code> - The associated AWS
+     *            CloudHSM cluster does not contain any active HSMs. To connect
+     *            a custom key store to its AWS CloudHSM cluster, the cluster
+     *            must contain at least one active HSM.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>INVALID_CREDENTIALS</code> - AWS KMS does not have the
+     *            correct password for the <code>kmsuser</code> crypto user in
+     *            the AWS CloudHSM cluster.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>NETWORK_ERRORS</code> - Network errors are preventing
+     *            AWS KMS from connecting to the custom key store.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>USER_LOCKED_OUT</code> - The <code>kmsuser</code> CU
+     *            account is locked out of the associated AWS CloudHSM cluster
+     *            due to too many failed password attempts. Before you can
+     *            connect your custom key store to its AWS CloudHSM cluster, you
+     *            must change the <code>kmsuser</code> account password and
+     *            update the password value for the custom key store.
+     *            </p>
+     *            </li>
+     *            </ul>
+     *            <p>
+     *            For help with connection failures, see <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     *            >Troubleshooting Custom Key Stores</a> in the <i>AWS Key
+     *            Management Service Developer Guide</i>.
+     *            </p>
+     * @see ConnectionErrorCodeType
+     */
+    public void setConnectionErrorCode(String connectionErrorCode) {
+        this.connectionErrorCode = connectionErrorCode;
+    }
+
+    /**
+     * <p>
+     * Describes the connection error. Valid values are:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>CLUSTER_NOT_FOUND</code> - AWS KMS cannot find the AWS CloudHSM
+     * cluster with the specified cluster ID.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>INSUFFICIENT_CLOUDHSM_HSMS</code> - The associated AWS CloudHSM
+     * cluster does not contain any active HSMs. To connect a custom key store
+     * to its AWS CloudHSM cluster, the cluster must contain at least one active
+     * HSM.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>INVALID_CREDENTIALS</code> - AWS KMS does not have the correct
+     * password for the <code>kmsuser</code> crypto user in the AWS CloudHSM
+     * cluster.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>NETWORK_ERRORS</code> - Network errors are preventing AWS KMS from
+     * connecting to the custom key store.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>USER_LOCKED_OUT</code> - The <code>kmsuser</code> CU account is
+     * locked out of the associated AWS CloudHSM cluster due to too many failed
+     * password attempts. Before you can connect your custom key store to its
+     * AWS CloudHSM cluster, you must change the <code>kmsuser</code> account
+     * password and update the password value for the custom key store.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * For help with connection failures, see <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     * >Troubleshooting Custom Key Stores</a> in the <i>AWS Key Management
+     * Service Developer Guide</i>.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>INVALID_CREDENTIALS, CLUSTER_NOT_FOUND,
+     * NETWORK_ERRORS, INSUFFICIENT_CLOUDHSM_HSMS, USER_LOCKED_OUT
+     *
+     * @param connectionErrorCode <p>
+     *            Describes the connection error. Valid values are:
+     *            </p>
+     *            <ul>
+     *            <li>
+     *            <p>
+     *            <code>CLUSTER_NOT_FOUND</code> - AWS KMS cannot find the AWS
+     *            CloudHSM cluster with the specified cluster ID.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>INSUFFICIENT_CLOUDHSM_HSMS</code> - The associated AWS
+     *            CloudHSM cluster does not contain any active HSMs. To connect
+     *            a custom key store to its AWS CloudHSM cluster, the cluster
+     *            must contain at least one active HSM.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>INVALID_CREDENTIALS</code> - AWS KMS does not have the
+     *            correct password for the <code>kmsuser</code> crypto user in
+     *            the AWS CloudHSM cluster.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>NETWORK_ERRORS</code> - Network errors are preventing
+     *            AWS KMS from connecting to the custom key store.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>USER_LOCKED_OUT</code> - The <code>kmsuser</code> CU
+     *            account is locked out of the associated AWS CloudHSM cluster
+     *            due to too many failed password attempts. Before you can
+     *            connect your custom key store to its AWS CloudHSM cluster, you
+     *            must change the <code>kmsuser</code> account password and
+     *            update the password value for the custom key store.
+     *            </p>
+     *            </li>
+     *            </ul>
+     *            <p>
+     *            For help with connection failures, see <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     *            >Troubleshooting Custom Key Stores</a> in the <i>AWS Key
+     *            Management Service Developer Guide</i>.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see ConnectionErrorCodeType
+     */
+    public CustomKeyStoresListEntry withConnectionErrorCode(String connectionErrorCode) {
+        this.connectionErrorCode = connectionErrorCode;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Describes the connection error. Valid values are:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>CLUSTER_NOT_FOUND</code> - AWS KMS cannot find the AWS CloudHSM
+     * cluster with the specified cluster ID.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>INSUFFICIENT_CLOUDHSM_HSMS</code> - The associated AWS CloudHSM
+     * cluster does not contain any active HSMs. To connect a custom key store
+     * to its AWS CloudHSM cluster, the cluster must contain at least one active
+     * HSM.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>INVALID_CREDENTIALS</code> - AWS KMS does not have the correct
+     * password for the <code>kmsuser</code> crypto user in the AWS CloudHSM
+     * cluster.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>NETWORK_ERRORS</code> - Network errors are preventing AWS KMS from
+     * connecting to the custom key store.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>USER_LOCKED_OUT</code> - The <code>kmsuser</code> CU account is
+     * locked out of the associated AWS CloudHSM cluster due to too many failed
+     * password attempts. Before you can connect your custom key store to its
+     * AWS CloudHSM cluster, you must change the <code>kmsuser</code> account
+     * password and update the password value for the custom key store.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * For help with connection failures, see <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     * >Troubleshooting Custom Key Stores</a> in the <i>AWS Key Management
+     * Service Developer Guide</i>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>INVALID_CREDENTIALS, CLUSTER_NOT_FOUND,
+     * NETWORK_ERRORS, INSUFFICIENT_CLOUDHSM_HSMS, USER_LOCKED_OUT
+     *
+     * @param connectionErrorCode <p>
+     *            Describes the connection error. Valid values are:
+     *            </p>
+     *            <ul>
+     *            <li>
+     *            <p>
+     *            <code>CLUSTER_NOT_FOUND</code> - AWS KMS cannot find the AWS
+     *            CloudHSM cluster with the specified cluster ID.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>INSUFFICIENT_CLOUDHSM_HSMS</code> - The associated AWS
+     *            CloudHSM cluster does not contain any active HSMs. To connect
+     *            a custom key store to its AWS CloudHSM cluster, the cluster
+     *            must contain at least one active HSM.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>INVALID_CREDENTIALS</code> - AWS KMS does not have the
+     *            correct password for the <code>kmsuser</code> crypto user in
+     *            the AWS CloudHSM cluster.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>NETWORK_ERRORS</code> - Network errors are preventing
+     *            AWS KMS from connecting to the custom key store.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>USER_LOCKED_OUT</code> - The <code>kmsuser</code> CU
+     *            account is locked out of the associated AWS CloudHSM cluster
+     *            due to too many failed password attempts. Before you can
+     *            connect your custom key store to its AWS CloudHSM cluster, you
+     *            must change the <code>kmsuser</code> account password and
+     *            update the password value for the custom key store.
+     *            </p>
+     *            </li>
+     *            </ul>
+     *            <p>
+     *            For help with connection failures, see <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     *            >Troubleshooting Custom Key Stores</a> in the <i>AWS Key
+     *            Management Service Developer Guide</i>.
+     *            </p>
+     * @see ConnectionErrorCodeType
+     */
+    public void setConnectionErrorCode(ConnectionErrorCodeType connectionErrorCode) {
+        this.connectionErrorCode = connectionErrorCode.toString();
+    }
+
+    /**
+     * <p>
+     * Describes the connection error. Valid values are:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>CLUSTER_NOT_FOUND</code> - AWS KMS cannot find the AWS CloudHSM
+     * cluster with the specified cluster ID.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>INSUFFICIENT_CLOUDHSM_HSMS</code> - The associated AWS CloudHSM
+     * cluster does not contain any active HSMs. To connect a custom key store
+     * to its AWS CloudHSM cluster, the cluster must contain at least one active
+     * HSM.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>INVALID_CREDENTIALS</code> - AWS KMS does not have the correct
+     * password for the <code>kmsuser</code> crypto user in the AWS CloudHSM
+     * cluster.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>NETWORK_ERRORS</code> - Network errors are preventing AWS KMS from
+     * connecting to the custom key store.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>USER_LOCKED_OUT</code> - The <code>kmsuser</code> CU account is
+     * locked out of the associated AWS CloudHSM cluster due to too many failed
+     * password attempts. Before you can connect your custom key store to its
+     * AWS CloudHSM cluster, you must change the <code>kmsuser</code> account
+     * password and update the password value for the custom key store.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * For help with connection failures, see <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     * >Troubleshooting Custom Key Stores</a> in the <i>AWS Key Management
+     * Service Developer Guide</i>.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>INVALID_CREDENTIALS, CLUSTER_NOT_FOUND,
+     * NETWORK_ERRORS, INSUFFICIENT_CLOUDHSM_HSMS, USER_LOCKED_OUT
+     *
+     * @param connectionErrorCode <p>
+     *            Describes the connection error. Valid values are:
+     *            </p>
+     *            <ul>
+     *            <li>
+     *            <p>
+     *            <code>CLUSTER_NOT_FOUND</code> - AWS KMS cannot find the AWS
+     *            CloudHSM cluster with the specified cluster ID.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>INSUFFICIENT_CLOUDHSM_HSMS</code> - The associated AWS
+     *            CloudHSM cluster does not contain any active HSMs. To connect
+     *            a custom key store to its AWS CloudHSM cluster, the cluster
+     *            must contain at least one active HSM.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>INVALID_CREDENTIALS</code> - AWS KMS does not have the
+     *            correct password for the <code>kmsuser</code> crypto user in
+     *            the AWS CloudHSM cluster.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>NETWORK_ERRORS</code> - Network errors are preventing
+     *            AWS KMS from connecting to the custom key store.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>USER_LOCKED_OUT</code> - The <code>kmsuser</code> CU
+     *            account is locked out of the associated AWS CloudHSM cluster
+     *            due to too many failed password attempts. Before you can
+     *            connect your custom key store to its AWS CloudHSM cluster, you
+     *            must change the <code>kmsuser</code> account password and
+     *            update the password value for the custom key store.
+     *            </p>
+     *            </li>
+     *            </ul>
+     *            <p>
+     *            For help with connection failures, see <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html"
+     *            >Troubleshooting Custom Key Stores</a> in the <i>AWS Key
+     *            Management Service Developer Guide</i>.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see ConnectionErrorCodeType
+     */
+    public CustomKeyStoresListEntry withConnectionErrorCode(
+            ConnectionErrorCodeType connectionErrorCode) {
+        this.connectionErrorCode = connectionErrorCode.toString();
+        return this;
+    }
+
+    /**
+     * <p>
+     * The date and time when the custom key store was created.
+     * </p>
+     *
+     * @return <p>
+     *         The date and time when the custom key store was created.
+     *         </p>
+     */
+    public java.util.Date getCreationDate() {
+        return creationDate;
+    }
+
+    /**
+     * <p>
+     * The date and time when the custom key store was created.
+     * </p>
+     *
+     * @param creationDate <p>
+     *            The date and time when the custom key store was created.
+     *            </p>
+     */
+    public void setCreationDate(java.util.Date creationDate) {
+        this.creationDate = creationDate;
+    }
+
+    /**
+     * <p>
+     * The date and time when the custom key store was created.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param creationDate <p>
+     *            The date and time when the custom key store was created.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CustomKeyStoresListEntry withCreationDate(java.util.Date creationDate) {
+        this.creationDate = creationDate;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getCustomKeyStoreId() != null)
+            sb.append("CustomKeyStoreId: " + getCustomKeyStoreId() + ",");
+        if (getCustomKeyStoreName() != null)
+            sb.append("CustomKeyStoreName: " + getCustomKeyStoreName() + ",");
+        if (getCloudHsmClusterId() != null)
+            sb.append("CloudHsmClusterId: " + getCloudHsmClusterId() + ",");
+        if (getTrustAnchorCertificate() != null)
+            sb.append("TrustAnchorCertificate: " + getTrustAnchorCertificate() + ",");
+        if (getConnectionState() != null)
+            sb.append("ConnectionState: " + getConnectionState() + ",");
+        if (getConnectionErrorCode() != null)
+            sb.append("ConnectionErrorCode: " + getConnectionErrorCode() + ",");
+        if (getCreationDate() != null)
+            sb.append("CreationDate: " + getCreationDate());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getCustomKeyStoreId() == null) ? 0 : getCustomKeyStoreId().hashCode());
+        hashCode = prime * hashCode
+                + ((getCustomKeyStoreName() == null) ? 0 : getCustomKeyStoreName().hashCode());
+        hashCode = prime * hashCode
+                + ((getCloudHsmClusterId() == null) ? 0 : getCloudHsmClusterId().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getTrustAnchorCertificate() == null) ? 0 : getTrustAnchorCertificate()
+                        .hashCode());
+        hashCode = prime * hashCode
+                + ((getConnectionState() == null) ? 0 : getConnectionState().hashCode());
+        hashCode = prime * hashCode
+                + ((getConnectionErrorCode() == null) ? 0 : getConnectionErrorCode().hashCode());
+        hashCode = prime * hashCode
+                + ((getCreationDate() == null) ? 0 : getCreationDate().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof CustomKeyStoresListEntry == false)
+            return false;
+        CustomKeyStoresListEntry other = (CustomKeyStoresListEntry) obj;
+
+        if (other.getCustomKeyStoreId() == null ^ this.getCustomKeyStoreId() == null)
+            return false;
+        if (other.getCustomKeyStoreId() != null
+                && other.getCustomKeyStoreId().equals(this.getCustomKeyStoreId()) == false)
+            return false;
+        if (other.getCustomKeyStoreName() == null ^ this.getCustomKeyStoreName() == null)
+            return false;
+        if (other.getCustomKeyStoreName() != null
+                && other.getCustomKeyStoreName().equals(this.getCustomKeyStoreName()) == false)
+            return false;
+        if (other.getCloudHsmClusterId() == null ^ this.getCloudHsmClusterId() == null)
+            return false;
+        if (other.getCloudHsmClusterId() != null
+                && other.getCloudHsmClusterId().equals(this.getCloudHsmClusterId()) == false)
+            return false;
+        if (other.getTrustAnchorCertificate() == null ^ this.getTrustAnchorCertificate() == null)
+            return false;
+        if (other.getTrustAnchorCertificate() != null
+                && other.getTrustAnchorCertificate().equals(this.getTrustAnchorCertificate()) == false)
+            return false;
+        if (other.getConnectionState() == null ^ this.getConnectionState() == null)
+            return false;
+        if (other.getConnectionState() != null
+                && other.getConnectionState().equals(this.getConnectionState()) == false)
+            return false;
+        if (other.getConnectionErrorCode() == null ^ this.getConnectionErrorCode() == null)
+            return false;
+        if (other.getConnectionErrorCode() != null
+                && other.getConnectionErrorCode().equals(this.getConnectionErrorCode()) == false)
+            return false;
+        if (other.getCreationDate() == null ^ this.getCreationDate() == null)
+            return false;
+        if (other.getCreationDate() != null
+                && other.getCreationDate().equals(this.getCreationDate()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DecryptRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DecryptRequest.java
index 8c84c2192a..a436ca5cd8 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DecryptRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DecryptRequest.java
@@ -42,13 +42,15 @@
  * </li>
  * </ul>
  * <p>
- * Whenever possible, use key policies to give users permission to call the
- * Decrypt operation on the CMK, instead of IAM policies. Otherwise, you might
- * create an IAM user policy that gives the user Decrypt permission on all CMKs.
- * This user could decrypt ciphertext that was encrypted by CMKs in other
- * accounts if the key policy for the cross-account CMK permits it. If you must
- * use an IAM policy for <code>Decrypt</code> permissions, limit the user to
- * particular CMKs or particular trusted accounts.
+ * Note that if a caller has been granted access permissions to all keys
+ * (through, for example, IAM user policies that grant <code>Decrypt</code>
+ * permission on all resources), then ciphertext encrypted by using keys in
+ * other accounts where the key grants access to the caller can be decrypted. To
+ * remedy this, we recommend that you do not grant <code>Decrypt</code> access
+ * in an IAM user policy. Instead grant <code>Decrypt</code> access only in key
+ * policies. If you must grant <code>Decrypt</code> access in an IAM user
+ * policy, you should scope the resource to specific keys or to specific trusted
+ * accounts.
  * </p>
  * <p>
  * The result of this operation varies with the key state of the CMK. For
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DecryptResult.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DecryptResult.java
index 01312bce40..e07027663c 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DecryptResult.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DecryptResult.java
@@ -32,7 +32,7 @@
     /**
      * <p>
      * Decrypted plaintext data. When you use the HTTP API or the AWS CLI, the
-     * value is Base64-encoded. Otherwise, it is not encoded.
+     * value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -103,7 +103,7 @@ public DecryptResult withKeyId(String keyId) {
     /**
      * <p>
      * Decrypted plaintext data. When you use the HTTP API or the AWS CLI, the
-     * value is Base64-encoded. Otherwise, it is not encoded.
+     * value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -111,7 +111,7 @@ public DecryptResult withKeyId(String keyId) {
      *
      * @return <p>
      *         Decrypted plaintext data. When you use the HTTP API or the AWS
-     *         CLI, the value is Base64-encoded. Otherwise, it is not encoded.
+     *         CLI, the value is Base64-encdoded. Otherwise, it is not encoded.
      *         </p>
      */
     public java.nio.ByteBuffer getPlaintext() {
@@ -121,7 +121,7 @@ public DecryptResult withKeyId(String keyId) {
     /**
      * <p>
      * Decrypted plaintext data. When you use the HTTP API or the AWS CLI, the
-     * value is Base64-encoded. Otherwise, it is not encoded.
+     * value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -129,7 +129,7 @@ public DecryptResult withKeyId(String keyId) {
      *
      * @param plaintext <p>
      *            Decrypted plaintext data. When you use the HTTP API or the AWS
-     *            CLI, the value is Base64-encoded. Otherwise, it is not
+     *            CLI, the value is Base64-encdoded. Otherwise, it is not
      *            encoded.
      *            </p>
      */
@@ -140,7 +140,7 @@ public void setPlaintext(java.nio.ByteBuffer plaintext) {
     /**
      * <p>
      * Decrypted plaintext data. When you use the HTTP API or the AWS CLI, the
-     * value is Base64-encoded. Otherwise, it is not encoded.
+     * value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -151,7 +151,7 @@ public void setPlaintext(java.nio.ByteBuffer plaintext) {
      *
      * @param plaintext <p>
      *            Decrypted plaintext data. When you use the HTTP API or the AWS
-     *            CLI, the value is Base64-encoded. Otherwise, it is not
+     *            CLI, the value is Base64-encdoded. Otherwise, it is not
      *            encoded.
      *            </p>
      * @return A reference to this updated object so that method calls can be
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DeleteCustomKeyStoreRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DeleteCustomKeyStoreRequest.java
new file mode 100644
index 0000000000..555460ab14
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DeleteCustomKeyStoreRequest.java
@@ -0,0 +1,186 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Deletes a <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+ * >custom key store</a>. This operation does not delete the AWS CloudHSM
+ * cluster that is associated with the custom key store, or affect any users or
+ * keys in the cluster.
+ * </p>
+ * <p>
+ * The custom key store that you delete cannot contain any AWS KMS <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys"
+ * >customer master keys (CMKs)</a>. Before deleting the key store, verify that
+ * you will never need to use any of the CMKs in the key store for any
+ * cryptographic operations. Then, use <a>ScheduleKeyDeletion</a> to delete the
+ * AWS KMS customer master keys (CMKs) from the key store. When the scheduled
+ * waiting period expires, the <code>ScheduleKeyDeletion</code> operation
+ * deletes the CMKs. Then it makes a best effort to delete the key material from
+ * the associated cluster. However, you might need to manually <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-orphaned-key"
+ * >delete the orphaned key material</a> from the cluster and its backups.
+ * </p>
+ * <p>
+ * After all CMKs are deleted from AWS KMS, use <a>DisconnectCustomKeyStore</a>
+ * to disconnect the key store from AWS KMS. Then, you can delete the custom key
+ * store.
+ * </p>
+ * <p>
+ * Instead of deleting the custom key store, consider using
+ * <a>DisconnectCustomKeyStore</a> to disconnect it from AWS KMS. While the key
+ * store is disconnected, you cannot create or use the CMKs in the key store.
+ * But, you do not need to delete CMKs and you can reconnect a disconnected
+ * custom key store at any time.
+ * </p>
+ * <p>
+ * If the operation succeeds, it returns a JSON object with no properties.
+ * </p>
+ * <p>
+ * This operation is part of the <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+ * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+ * convenience and extensive integration of AWS KMS with the isolation and
+ * control of a single-tenant key store.
+ * </p>
+ */
+public class DeleteCustomKeyStoreRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * Enter the ID of the custom key store you want to delete. To find the ID
+     * of a custom key store, use the <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     */
+    private String customKeyStoreId;
+
+    /**
+     * <p>
+     * Enter the ID of the custom key store you want to delete. To find the ID
+     * of a custom key store, use the <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @return <p>
+     *         Enter the ID of the custom key store you want to delete. To find
+     *         the ID of a custom key store, use the
+     *         <a>DescribeCustomKeyStores</a> operation.
+     *         </p>
+     */
+    public String getCustomKeyStoreId() {
+        return customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * Enter the ID of the custom key store you want to delete. To find the ID
+     * of a custom key store, use the <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            Enter the ID of the custom key store you want to delete. To
+     *            find the ID of a custom key store, use the
+     *            <a>DescribeCustomKeyStores</a> operation.
+     *            </p>
+     */
+    public void setCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * Enter the ID of the custom key store you want to delete. To find the ID
+     * of a custom key store, use the <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            Enter the ID of the custom key store you want to delete. To
+     *            find the ID of a custom key store, use the
+     *            <a>DescribeCustomKeyStores</a> operation.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteCustomKeyStoreRequest withCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getCustomKeyStoreId() != null)
+            sb.append("CustomKeyStoreId: " + getCustomKeyStoreId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getCustomKeyStoreId() == null) ? 0 : getCustomKeyStoreId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteCustomKeyStoreRequest == false)
+            return false;
+        DeleteCustomKeyStoreRequest other = (DeleteCustomKeyStoreRequest) obj;
+
+        if (other.getCustomKeyStoreId() == null ^ this.getCustomKeyStoreId() == null)
+            return false;
+        if (other.getCustomKeyStoreId() != null
+                && other.getCustomKeyStoreId().equals(this.getCustomKeyStoreId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DeleteCustomKeyStoreResult.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DeleteCustomKeyStoreResult.java
new file mode 100644
index 0000000000..f8dbb28f9c
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DeleteCustomKeyStoreResult.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import java.io.Serializable;
+
+public class DeleteCustomKeyStoreResult implements Serializable {
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteCustomKeyStoreResult == false)
+            return false;
+        DeleteCustomKeyStoreResult other = (DeleteCustomKeyStoreResult) obj;
+
+        return true;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DescribeCustomKeyStoresRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DescribeCustomKeyStoresRequest.java
new file mode 100644
index 0000000000..0ada457fdb
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DescribeCustomKeyStoresRequest.java
@@ -0,0 +1,531 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Gets information about <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+ * >custom key stores</a> in the account and region.
+ * </p>
+ * <p>
+ * This operation is part of the <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+ * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+ * convenience and extensive integration of AWS KMS with the isolation and
+ * control of a single-tenant key store.
+ * </p>
+ * <p>
+ * By default, this operation returns information about all custom key stores in
+ * the account and region. To get only information about a particular custom key
+ * store, use either the <code>CustomKeyStoreName</code> or
+ * <code>CustomKeyStoreId</code> parameter (but not both).
+ * </p>
+ * <p>
+ * To determine whether the custom key store is connected to its AWS CloudHSM
+ * cluster, use the <code>ConnectionState</code> element in the response. If an
+ * attempt to connect the custom key store failed, the
+ * <code>ConnectionState</code> value is <code>FAILED</code> and the
+ * <code>ConnectionErrorCode</code> element in the response indicates the cause
+ * of the failure. For help interpreting the <code>ConnectionErrorCode</code>,
+ * see <a>CustomKeyStoresListEntry</a>.
+ * </p>
+ * <p>
+ * Custom key stores have a <code>DISCONNECTED</code> connection state if the
+ * key store has never been connected or you use the
+ * <a>DisconnectCustomKeyStore</a> operation to disconnect it. If your custom
+ * key store state is <code>CONNECTED</code> but you are having trouble using
+ * it, make sure that its associated AWS CloudHSM cluster is active and contains
+ * the minimum number of HSMs required for the operation, if any.
+ * </p>
+ * <p>
+ * For help repairing your custom key store, see the <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore-html"
+ * >Troubleshooting Custom Key Stores</a> topic in the <i>AWS Key Management
+ * Service Developer Guide</i>.
+ * </p>
+ */
+public class DescribeCustomKeyStoresRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * Gets only information about the specified custom key store. Enter the key
+     * store ID.
+     * </p>
+     * <p>
+     * By default, this operation gets information about all custom key stores
+     * in the account and region. To limit the output to a particular custom key
+     * store, you can use either the <code>CustomKeyStoreId</code> or
+     * <code>CustomKeyStoreName</code> parameter, but not both.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     */
+    private String customKeyStoreId;
+
+    /**
+     * <p>
+     * Gets only information about the specified custom key store. Enter the
+     * friendly name of the custom key store.
+     * </p>
+     * <p>
+     * By default, this operation gets information about all custom key stores
+     * in the account and region. To limit the output to a particular custom key
+     * store, you can use either the <code>CustomKeyStoreId</code> or
+     * <code>CustomKeyStoreName</code> parameter, but not both.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     */
+    private String customKeyStoreName;
+
+    /**
+     * <p>
+     * Use this parameter to specify the maximum number of items to return. When
+     * this value is present, AWS KMS does not return more than the specified
+     * number of items, but it might return fewer.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 1000<br/>
+     */
+    private Integer limit;
+
+    /**
+     * <p>
+     * Use this parameter in a subsequent request after you receive a response
+     * with truncated results. Set it to the value of <code>NextMarker</code>
+     * from the truncated response you just received.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     * <b>Pattern: </b>[ -\u00FF]*<br/>
+     */
+    private String marker;
+
+    /**
+     * <p>
+     * Gets only information about the specified custom key store. Enter the key
+     * store ID.
+     * </p>
+     * <p>
+     * By default, this operation gets information about all custom key stores
+     * in the account and region. To limit the output to a particular custom key
+     * store, you can use either the <code>CustomKeyStoreId</code> or
+     * <code>CustomKeyStoreName</code> parameter, but not both.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @return <p>
+     *         Gets only information about the specified custom key store. Enter
+     *         the key store ID.
+     *         </p>
+     *         <p>
+     *         By default, this operation gets information about all custom key
+     *         stores in the account and region. To limit the output to a
+     *         particular custom key store, you can use either the
+     *         <code>CustomKeyStoreId</code> or <code>CustomKeyStoreName</code>
+     *         parameter, but not both.
+     *         </p>
+     */
+    public String getCustomKeyStoreId() {
+        return customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * Gets only information about the specified custom key store. Enter the key
+     * store ID.
+     * </p>
+     * <p>
+     * By default, this operation gets information about all custom key stores
+     * in the account and region. To limit the output to a particular custom key
+     * store, you can use either the <code>CustomKeyStoreId</code> or
+     * <code>CustomKeyStoreName</code> parameter, but not both.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            Gets only information about the specified custom key store.
+     *            Enter the key store ID.
+     *            </p>
+     *            <p>
+     *            By default, this operation gets information about all custom
+     *            key stores in the account and region. To limit the output to a
+     *            particular custom key store, you can use either the
+     *            <code>CustomKeyStoreId</code> or
+     *            <code>CustomKeyStoreName</code> parameter, but not both.
+     *            </p>
+     */
+    public void setCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * Gets only information about the specified custom key store. Enter the key
+     * store ID.
+     * </p>
+     * <p>
+     * By default, this operation gets information about all custom key stores
+     * in the account and region. To limit the output to a particular custom key
+     * store, you can use either the <code>CustomKeyStoreId</code> or
+     * <code>CustomKeyStoreName</code> parameter, but not both.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            Gets only information about the specified custom key store.
+     *            Enter the key store ID.
+     *            </p>
+     *            <p>
+     *            By default, this operation gets information about all custom
+     *            key stores in the account and region. To limit the output to a
+     *            particular custom key store, you can use either the
+     *            <code>CustomKeyStoreId</code> or
+     *            <code>CustomKeyStoreName</code> parameter, but not both.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeCustomKeyStoresRequest withCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Gets only information about the specified custom key store. Enter the
+     * friendly name of the custom key store.
+     * </p>
+     * <p>
+     * By default, this operation gets information about all custom key stores
+     * in the account and region. To limit the output to a particular custom key
+     * store, you can use either the <code>CustomKeyStoreId</code> or
+     * <code>CustomKeyStoreName</code> parameter, but not both.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     *
+     * @return <p>
+     *         Gets only information about the specified custom key store. Enter
+     *         the friendly name of the custom key store.
+     *         </p>
+     *         <p>
+     *         By default, this operation gets information about all custom key
+     *         stores in the account and region. To limit the output to a
+     *         particular custom key store, you can use either the
+     *         <code>CustomKeyStoreId</code> or <code>CustomKeyStoreName</code>
+     *         parameter, but not both.
+     *         </p>
+     */
+    public String getCustomKeyStoreName() {
+        return customKeyStoreName;
+    }
+
+    /**
+     * <p>
+     * Gets only information about the specified custom key store. Enter the
+     * friendly name of the custom key store.
+     * </p>
+     * <p>
+     * By default, this operation gets information about all custom key stores
+     * in the account and region. To limit the output to a particular custom key
+     * store, you can use either the <code>CustomKeyStoreId</code> or
+     * <code>CustomKeyStoreName</code> parameter, but not both.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     *
+     * @param customKeyStoreName <p>
+     *            Gets only information about the specified custom key store.
+     *            Enter the friendly name of the custom key store.
+     *            </p>
+     *            <p>
+     *            By default, this operation gets information about all custom
+     *            key stores in the account and region. To limit the output to a
+     *            particular custom key store, you can use either the
+     *            <code>CustomKeyStoreId</code> or
+     *            <code>CustomKeyStoreName</code> parameter, but not both.
+     *            </p>
+     */
+    public void setCustomKeyStoreName(String customKeyStoreName) {
+        this.customKeyStoreName = customKeyStoreName;
+    }
+
+    /**
+     * <p>
+     * Gets only information about the specified custom key store. Enter the
+     * friendly name of the custom key store.
+     * </p>
+     * <p>
+     * By default, this operation gets information about all custom key stores
+     * in the account and region. To limit the output to a particular custom key
+     * store, you can use either the <code>CustomKeyStoreId</code> or
+     * <code>CustomKeyStoreName</code> parameter, but not both.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     *
+     * @param customKeyStoreName <p>
+     *            Gets only information about the specified custom key store.
+     *            Enter the friendly name of the custom key store.
+     *            </p>
+     *            <p>
+     *            By default, this operation gets information about all custom
+     *            key stores in the account and region. To limit the output to a
+     *            particular custom key store, you can use either the
+     *            <code>CustomKeyStoreId</code> or
+     *            <code>CustomKeyStoreName</code> parameter, but not both.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeCustomKeyStoresRequest withCustomKeyStoreName(String customKeyStoreName) {
+        this.customKeyStoreName = customKeyStoreName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Use this parameter to specify the maximum number of items to return. When
+     * this value is present, AWS KMS does not return more than the specified
+     * number of items, but it might return fewer.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 1000<br/>
+     *
+     * @return <p>
+     *         Use this parameter to specify the maximum number of items to
+     *         return. When this value is present, AWS KMS does not return more
+     *         than the specified number of items, but it might return fewer.
+     *         </p>
+     */
+    public Integer getLimit() {
+        return limit;
+    }
+
+    /**
+     * <p>
+     * Use this parameter to specify the maximum number of items to return. When
+     * this value is present, AWS KMS does not return more than the specified
+     * number of items, but it might return fewer.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 1000<br/>
+     *
+     * @param limit <p>
+     *            Use this parameter to specify the maximum number of items to
+     *            return. When this value is present, AWS KMS does not return
+     *            more than the specified number of items, but it might return
+     *            fewer.
+     *            </p>
+     */
+    public void setLimit(Integer limit) {
+        this.limit = limit;
+    }
+
+    /**
+     * <p>
+     * Use this parameter to specify the maximum number of items to return. When
+     * this value is present, AWS KMS does not return more than the specified
+     * number of items, but it might return fewer.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 1000<br/>
+     *
+     * @param limit <p>
+     *            Use this parameter to specify the maximum number of items to
+     *            return. When this value is present, AWS KMS does not return
+     *            more than the specified number of items, but it might return
+     *            fewer.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeCustomKeyStoresRequest withLimit(Integer limit) {
+        this.limit = limit;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Use this parameter in a subsequent request after you receive a response
+     * with truncated results. Set it to the value of <code>NextMarker</code>
+     * from the truncated response you just received.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     * <b>Pattern: </b>[ -\u00FF]*<br/>
+     *
+     * @return <p>
+     *         Use this parameter in a subsequent request after you receive a
+     *         response with truncated results. Set it to the value of
+     *         <code>NextMarker</code> from the truncated response you just
+     *         received.
+     *         </p>
+     */
+    public String getMarker() {
+        return marker;
+    }
+
+    /**
+     * <p>
+     * Use this parameter in a subsequent request after you receive a response
+     * with truncated results. Set it to the value of <code>NextMarker</code>
+     * from the truncated response you just received.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     * <b>Pattern: </b>[ -\u00FF]*<br/>
+     *
+     * @param marker <p>
+     *            Use this parameter in a subsequent request after you receive a
+     *            response with truncated results. Set it to the value of
+     *            <code>NextMarker</code> from the truncated response you just
+     *            received.
+     *            </p>
+     */
+    public void setMarker(String marker) {
+        this.marker = marker;
+    }
+
+    /**
+     * <p>
+     * Use this parameter in a subsequent request after you receive a response
+     * with truncated results. Set it to the value of <code>NextMarker</code>
+     * from the truncated response you just received.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     * <b>Pattern: </b>[ -\u00FF]*<br/>
+     *
+     * @param marker <p>
+     *            Use this parameter in a subsequent request after you receive a
+     *            response with truncated results. Set it to the value of
+     *            <code>NextMarker</code> from the truncated response you just
+     *            received.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeCustomKeyStoresRequest withMarker(String marker) {
+        this.marker = marker;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getCustomKeyStoreId() != null)
+            sb.append("CustomKeyStoreId: " + getCustomKeyStoreId() + ",");
+        if (getCustomKeyStoreName() != null)
+            sb.append("CustomKeyStoreName: " + getCustomKeyStoreName() + ",");
+        if (getLimit() != null)
+            sb.append("Limit: " + getLimit() + ",");
+        if (getMarker() != null)
+            sb.append("Marker: " + getMarker());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getCustomKeyStoreId() == null) ? 0 : getCustomKeyStoreId().hashCode());
+        hashCode = prime * hashCode
+                + ((getCustomKeyStoreName() == null) ? 0 : getCustomKeyStoreName().hashCode());
+        hashCode = prime * hashCode + ((getLimit() == null) ? 0 : getLimit().hashCode());
+        hashCode = prime * hashCode + ((getMarker() == null) ? 0 : getMarker().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DescribeCustomKeyStoresRequest == false)
+            return false;
+        DescribeCustomKeyStoresRequest other = (DescribeCustomKeyStoresRequest) obj;
+
+        if (other.getCustomKeyStoreId() == null ^ this.getCustomKeyStoreId() == null)
+            return false;
+        if (other.getCustomKeyStoreId() != null
+                && other.getCustomKeyStoreId().equals(this.getCustomKeyStoreId()) == false)
+            return false;
+        if (other.getCustomKeyStoreName() == null ^ this.getCustomKeyStoreName() == null)
+            return false;
+        if (other.getCustomKeyStoreName() != null
+                && other.getCustomKeyStoreName().equals(this.getCustomKeyStoreName()) == false)
+            return false;
+        if (other.getLimit() == null ^ this.getLimit() == null)
+            return false;
+        if (other.getLimit() != null && other.getLimit().equals(this.getLimit()) == false)
+            return false;
+        if (other.getMarker() == null ^ this.getMarker() == null)
+            return false;
+        if (other.getMarker() != null && other.getMarker().equals(this.getMarker()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DescribeCustomKeyStoresResult.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DescribeCustomKeyStoresResult.java
new file mode 100644
index 0000000000..9f3a10b294
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DescribeCustomKeyStoresResult.java
@@ -0,0 +1,344 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import java.io.Serializable;
+
+public class DescribeCustomKeyStoresResult implements Serializable {
+    /**
+     * <p>
+     * Contains metadata about each custom key store.
+     * </p>
+     */
+    private java.util.List<CustomKeyStoresListEntry> customKeyStores = new java.util.ArrayList<CustomKeyStoresListEntry>();
+
+    /**
+     * <p>
+     * When <code>Truncated</code> is true, this element is present and contains
+     * the value to use for the <code>Marker</code> parameter in a subsequent
+     * request.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     * <b>Pattern: </b>[ -\u00FF]*<br/>
+     */
+    private String nextMarker;
+
+    /**
+     * <p>
+     * A flag that indicates whether there are more items in the list. When this
+     * value is true, the list in this response is truncated. To get more items,
+     * pass the value of the <code>NextMarker</code> element in this response to
+     * the <code>Marker</code> parameter in a subsequent request.
+     * </p>
+     */
+    private Boolean truncated;
+
+    /**
+     * <p>
+     * Contains metadata about each custom key store.
+     * </p>
+     *
+     * @return <p>
+     *         Contains metadata about each custom key store.
+     *         </p>
+     */
+    public java.util.List<CustomKeyStoresListEntry> getCustomKeyStores() {
+        return customKeyStores;
+    }
+
+    /**
+     * <p>
+     * Contains metadata about each custom key store.
+     * </p>
+     *
+     * @param customKeyStores <p>
+     *            Contains metadata about each custom key store.
+     *            </p>
+     */
+    public void setCustomKeyStores(java.util.Collection<CustomKeyStoresListEntry> customKeyStores) {
+        if (customKeyStores == null) {
+            this.customKeyStores = null;
+            return;
+        }
+
+        this.customKeyStores = new java.util.ArrayList<CustomKeyStoresListEntry>(customKeyStores);
+    }
+
+    /**
+     * <p>
+     * Contains metadata about each custom key store.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param customKeyStores <p>
+     *            Contains metadata about each custom key store.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeCustomKeyStoresResult withCustomKeyStores(
+            CustomKeyStoresListEntry... customKeyStores) {
+        if (getCustomKeyStores() == null) {
+            this.customKeyStores = new java.util.ArrayList<CustomKeyStoresListEntry>(
+                    customKeyStores.length);
+        }
+        for (CustomKeyStoresListEntry value : customKeyStores) {
+            this.customKeyStores.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * Contains metadata about each custom key store.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param customKeyStores <p>
+     *            Contains metadata about each custom key store.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeCustomKeyStoresResult withCustomKeyStores(
+            java.util.Collection<CustomKeyStoresListEntry> customKeyStores) {
+        setCustomKeyStores(customKeyStores);
+        return this;
+    }
+
+    /**
+     * <p>
+     * When <code>Truncated</code> is true, this element is present and contains
+     * the value to use for the <code>Marker</code> parameter in a subsequent
+     * request.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     * <b>Pattern: </b>[ -\u00FF]*<br/>
+     *
+     * @return <p>
+     *         When <code>Truncated</code> is true, this element is present and
+     *         contains the value to use for the <code>Marker</code> parameter
+     *         in a subsequent request.
+     *         </p>
+     */
+    public String getNextMarker() {
+        return nextMarker;
+    }
+
+    /**
+     * <p>
+     * When <code>Truncated</code> is true, this element is present and contains
+     * the value to use for the <code>Marker</code> parameter in a subsequent
+     * request.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     * <b>Pattern: </b>[ -\u00FF]*<br/>
+     *
+     * @param nextMarker <p>
+     *            When <code>Truncated</code> is true, this element is present
+     *            and contains the value to use for the <code>Marker</code>
+     *            parameter in a subsequent request.
+     *            </p>
+     */
+    public void setNextMarker(String nextMarker) {
+        this.nextMarker = nextMarker;
+    }
+
+    /**
+     * <p>
+     * When <code>Truncated</code> is true, this element is present and contains
+     * the value to use for the <code>Marker</code> parameter in a subsequent
+     * request.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     * <b>Pattern: </b>[ -\u00FF]*<br/>
+     *
+     * @param nextMarker <p>
+     *            When <code>Truncated</code> is true, this element is present
+     *            and contains the value to use for the <code>Marker</code>
+     *            parameter in a subsequent request.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeCustomKeyStoresResult withNextMarker(String nextMarker) {
+        this.nextMarker = nextMarker;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A flag that indicates whether there are more items in the list. When this
+     * value is true, the list in this response is truncated. To get more items,
+     * pass the value of the <code>NextMarker</code> element in this response to
+     * the <code>Marker</code> parameter in a subsequent request.
+     * </p>
+     *
+     * @return <p>
+     *         A flag that indicates whether there are more items in the list.
+     *         When this value is true, the list in this response is truncated.
+     *         To get more items, pass the value of the <code>NextMarker</code>
+     *         element in this response to the <code>Marker</code> parameter in
+     *         a subsequent request.
+     *         </p>
+     */
+    public Boolean isTruncated() {
+        return truncated;
+    }
+
+    /**
+     * <p>
+     * A flag that indicates whether there are more items in the list. When this
+     * value is true, the list in this response is truncated. To get more items,
+     * pass the value of the <code>NextMarker</code> element in this response to
+     * the <code>Marker</code> parameter in a subsequent request.
+     * </p>
+     *
+     * @return <p>
+     *         A flag that indicates whether there are more items in the list.
+     *         When this value is true, the list in this response is truncated.
+     *         To get more items, pass the value of the <code>NextMarker</code>
+     *         element in this response to the <code>Marker</code> parameter in
+     *         a subsequent request.
+     *         </p>
+     */
+    public Boolean getTruncated() {
+        return truncated;
+    }
+
+    /**
+     * <p>
+     * A flag that indicates whether there are more items in the list. When this
+     * value is true, the list in this response is truncated. To get more items,
+     * pass the value of the <code>NextMarker</code> element in this response to
+     * the <code>Marker</code> parameter in a subsequent request.
+     * </p>
+     *
+     * @param truncated <p>
+     *            A flag that indicates whether there are more items in the
+     *            list. When this value is true, the list in this response is
+     *            truncated. To get more items, pass the value of the
+     *            <code>NextMarker</code> element in this response to the
+     *            <code>Marker</code> parameter in a subsequent request.
+     *            </p>
+     */
+    public void setTruncated(Boolean truncated) {
+        this.truncated = truncated;
+    }
+
+    /**
+     * <p>
+     * A flag that indicates whether there are more items in the list. When this
+     * value is true, the list in this response is truncated. To get more items,
+     * pass the value of the <code>NextMarker</code> element in this response to
+     * the <code>Marker</code> parameter in a subsequent request.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param truncated <p>
+     *            A flag that indicates whether there are more items in the
+     *            list. When this value is true, the list in this response is
+     *            truncated. To get more items, pass the value of the
+     *            <code>NextMarker</code> element in this response to the
+     *            <code>Marker</code> parameter in a subsequent request.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeCustomKeyStoresResult withTruncated(Boolean truncated) {
+        this.truncated = truncated;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getCustomKeyStores() != null)
+            sb.append("CustomKeyStores: " + getCustomKeyStores() + ",");
+        if (getNextMarker() != null)
+            sb.append("NextMarker: " + getNextMarker() + ",");
+        if (getTruncated() != null)
+            sb.append("Truncated: " + getTruncated());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getCustomKeyStores() == null) ? 0 : getCustomKeyStores().hashCode());
+        hashCode = prime * hashCode + ((getNextMarker() == null) ? 0 : getNextMarker().hashCode());
+        hashCode = prime * hashCode + ((getTruncated() == null) ? 0 : getTruncated().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DescribeCustomKeyStoresResult == false)
+            return false;
+        DescribeCustomKeyStoresResult other = (DescribeCustomKeyStoresResult) obj;
+
+        if (other.getCustomKeyStores() == null ^ this.getCustomKeyStores() == null)
+            return false;
+        if (other.getCustomKeyStores() != null
+                && other.getCustomKeyStores().equals(this.getCustomKeyStores()) == false)
+            return false;
+        if (other.getNextMarker() == null ^ this.getNextMarker() == null)
+            return false;
+        if (other.getNextMarker() != null
+                && other.getNextMarker().equals(this.getNextMarker()) == false)
+            return false;
+        if (other.getTruncated() == null ^ this.getTruncated() == null)
+            return false;
+        if (other.getTruncated() != null
+                && other.getTruncated().equals(this.getTruncated()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DescribeKeyRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DescribeKeyRequest.java
index a34ba0c410..90c3a6edd4 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DescribeKeyRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DescribeKeyRequest.java
@@ -24,9 +24,8 @@
  * Provides detailed information about the specified customer master key (CMK).
  * </p>
  * <p>
- * You can use <code>DescribeKey</code> on a predefined AWS alias, that is, an
- * AWS alias with no key ID. When you do, AWS KMS associates the alias with an
- * <a href=
+ * If you use <code>DescribeKey</code> on a predefined AWS alias, that is, an
+ * AWS alias with no key ID, AWS KMS associates the alias with an <a href=
  * "http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys"
  * >AWS managed CMK</a> and returns its <code>KeyId</code> and <code>Arn</code>
  * in the response.
@@ -50,9 +49,9 @@
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -118,9 +117,9 @@
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -171,8 +170,8 @@
      *         <p>
      *         To specify a CMK, use its key ID, Amazon Resource Name (ARN),
      *         alias name, or alias ARN. When using an alias name, prefix it
-     *         with <code>"alias/"</code>. To specify a CMK in a different AWS
-     *         account, you must use the key ARN or alias ARN.
+     *         with "alias/". To specify a CMK in a different AWS account, you
+     *         must use the key ARN or alias ARN.
      *         </p>
      *         <p>
      *         For example:
@@ -224,9 +223,9 @@ public String getKeyId() {
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -277,8 +276,8 @@ public String getKeyId() {
      *            <p>
      *            To specify a CMK, use its key ID, Amazon Resource Name (ARN),
      *            alias name, or alias ARN. When using an alias name, prefix it
-     *            with <code>"alias/"</code>. To specify a CMK in a different
-     *            AWS account, you must use the key ARN or alias ARN.
+     *            with "alias/". To specify a CMK in a different AWS account,
+     *            you must use the key ARN or alias ARN.
      *            </p>
      *            <p>
      *            For example:
@@ -330,9 +329,9 @@ public void setKeyId(String keyId) {
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -386,8 +385,8 @@ public void setKeyId(String keyId) {
      *            <p>
      *            To specify a CMK, use its key ID, Amazon Resource Name (ARN),
      *            alias name, or alias ARN. When using an alias name, prefix it
-     *            with <code>"alias/"</code>. To specify a CMK in a different
-     *            AWS account, you must use the key ARN or alias ARN.
+     *            with "alias/". To specify a CMK in a different AWS account,
+     *            you must use the key ARN or alias ARN.
      *            </p>
      *            <p>
      *            For example:
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DisconnectCustomKeyStoreRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DisconnectCustomKeyStoreRequest.java
new file mode 100644
index 0000000000..3471280fa3
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DisconnectCustomKeyStoreRequest.java
@@ -0,0 +1,181 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Disconnects the <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+ * >custom key store</a> from its associated AWS CloudHSM cluster. While a
+ * custom key store is disconnected, you can manage the custom key store and its
+ * customer master keys (CMKs), but you cannot create or use CMKs in the custom
+ * key store. You can reconnect the custom key store at any time.
+ * </p>
+ * <note>
+ * <p>
+ * While a custom key store is disconnected, all attempts to create customer
+ * master keys (CMKs) in the custom key store or to use existing CMKs in
+ * cryptographic operations will fail. This action can prevent users from
+ * storing and accessing sensitive data.
+ * </p>
+ * </note>
+ * <p/>
+ * <p>
+ * To find the connection state of a custom key store, use the
+ * <a>DescribeCustomKeyStores</a> operation. To reconnect a custom key store,
+ * use the <a>ConnectCustomKeyStore</a> operation.
+ * </p>
+ * <p>
+ * If the operation succeeds, it returns a JSON object with no properties.
+ * </p>
+ * <p>
+ * This operation is part of the <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+ * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+ * convenience and extensive integration of AWS KMS with the isolation and
+ * control of a single-tenant key store.
+ * </p>
+ */
+public class DisconnectCustomKeyStoreRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * <p>
+     * Enter the ID of the custom key store you want to disconnect. To find the
+     * ID of a custom key store, use the <a>DescribeCustomKeyStores</a>
+     * operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     */
+    private String customKeyStoreId;
+
+    /**
+     * <p>
+     * Enter the ID of the custom key store you want to disconnect. To find the
+     * ID of a custom key store, use the <a>DescribeCustomKeyStores</a>
+     * operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @return <p>
+     *         Enter the ID of the custom key store you want to disconnect. To
+     *         find the ID of a custom key store, use the
+     *         <a>DescribeCustomKeyStores</a> operation.
+     *         </p>
+     */
+    public String getCustomKeyStoreId() {
+        return customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * Enter the ID of the custom key store you want to disconnect. To find the
+     * ID of a custom key store, use the <a>DescribeCustomKeyStores</a>
+     * operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            Enter the ID of the custom key store you want to disconnect.
+     *            To find the ID of a custom key store, use the
+     *            <a>DescribeCustomKeyStores</a> operation.
+     *            </p>
+     */
+    public void setCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * Enter the ID of the custom key store you want to disconnect. To find the
+     * ID of a custom key store, use the <a>DescribeCustomKeyStores</a>
+     * operation.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            Enter the ID of the custom key store you want to disconnect.
+     *            To find the ID of a custom key store, use the
+     *            <a>DescribeCustomKeyStores</a> operation.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DisconnectCustomKeyStoreRequest withCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getCustomKeyStoreId() != null)
+            sb.append("CustomKeyStoreId: " + getCustomKeyStoreId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getCustomKeyStoreId() == null) ? 0 : getCustomKeyStoreId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DisconnectCustomKeyStoreRequest == false)
+            return false;
+        DisconnectCustomKeyStoreRequest other = (DisconnectCustomKeyStoreRequest) obj;
+
+        if (other.getCustomKeyStoreId() == null ^ this.getCustomKeyStoreId() == null)
+            return false;
+        if (other.getCustomKeyStoreId() != null
+                && other.getCustomKeyStoreId().equals(this.getCustomKeyStoreId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DisconnectCustomKeyStoreResult.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DisconnectCustomKeyStoreResult.java
new file mode 100644
index 0000000000..f77a7432e1
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/DisconnectCustomKeyStoreResult.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import java.io.Serializable;
+
+public class DisconnectCustomKeyStoreResult implements Serializable {
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DisconnectCustomKeyStoreResult == false)
+            return false;
+        DisconnectCustomKeyStoreResult other = (DisconnectCustomKeyStoreResult) obj;
+
+        return true;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/EnableKeyRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/EnableKeyRequest.java
index b49078f781..031ead3bab 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/EnableKeyRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/EnableKeyRequest.java
@@ -21,9 +21,9 @@
 
 /**
  * <p>
- * Sets the state of a customer master key (CMK) to enabled, thereby permitting
- * its use for cryptographic operations. You cannot perform this operation on a
- * CMK in a different AWS account.
+ * Sets the key state of a customer master key (CMK) to enabled. This allows you
+ * to use the CMK for cryptographic operations. You cannot perform this
+ * operation on a CMK in a different AWS account.
  * </p>
  * <p>
  * The result of this operation varies with the key state of the CMK. For
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/EnableKeyRotationRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/EnableKeyRotationRequest.java
index 917868962a..1ad0e4f28a 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/EnableKeyRotationRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/EnableKeyRotationRequest.java
@@ -28,6 +28,12 @@
  * account.
  * </p>
  * <p>
+ * You cannot enable automatic rotation of CMKs with imported key material or
+ * CMKs in a <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+ * >custom key store</a>.
+ * </p>
+ * <p>
  * The result of this operation varies with the key state of the CMK. For
  * details, see <a
  * href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html"
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/EncryptRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/EncryptRequest.java
index 52db9b4aaf..b74458e481 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/EncryptRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/EncryptRequest.java
@@ -33,24 +33,29 @@
  * </li>
  * <li>
  * <p>
- * You can use the <code>Encrypt</code> operation to move encrypted data from
- * one AWS region to another. In the first region, generate a data key and use
- * the plaintext key to encrypt the data. Then, in the new region, call the
- * <code>Encrypt</code> method on same plaintext data key. Now, you can safely
- * move the encrypted data and encrypted data key to the new region, and decrypt
- * in the new region when necessary.
+ * To move encrypted data from one AWS region to another, you can use this
+ * operation to encrypt in the new region the plaintext data key that was used
+ * to encrypt the data in the original region. This provides you with an
+ * encrypted copy of the data key that can be decrypted in the new region and
+ * used there to decrypt the encrypted data.
  * </p>
  * </li>
  * </ul>
  * <p>
- * You don't need use this operation to encrypt a data key within a region. The
- * <a>GenerateDataKey</a> and <a>GenerateDataKeyWithoutPlaintext</a> operations
- * return an encrypted data key.
+ * To perform this operation on a CMK in a different AWS account, specify the
+ * key ARN or alias ARN in the value of the KeyId parameter.
+ * </p>
+ * <p>
+ * Unless you are moving encrypted data from one region to another, you don't
+ * use this operation to encrypt a generated data key within a region. To get
+ * data keys that are already encrypted, call the <a>GenerateDataKey</a> or
+ * <a>GenerateDataKeyWithoutPlaintext</a> operation. Data keys don't need to be
+ * encrypted again by calling <code>Encrypt</code>.
  * </p>
  * <p>
- * Also, you don't need to use this operation to encrypt data in your
- * application. You can use the plaintext and encrypted data keys that the
- * <code>GenerateDataKey</code> operation returns.
+ * To encrypt data locally in your application, use the <a>GenerateDataKey</a>
+ * operation to return a plaintext data encryption key and a copy of the key
+ * encrypted under the CMK of your choosing.
  * </p>
  * <p>
  * The result of this operation varies with the key state of the CMK. For
@@ -59,10 +64,6 @@
  * >How Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key
  * Management Service Developer Guide</i>.
  * </p>
- * <p>
- * To perform this operation on a CMK in a different AWS account, specify the
- * key ARN or alias ARN in the value of the KeyId parameter.
- * </p>
  */
 public class EncryptRequest extends AmazonWebServiceRequest implements Serializable {
     /**
@@ -71,9 +72,9 @@
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -154,9 +155,9 @@
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -200,8 +201,8 @@
      *         <p>
      *         To specify a CMK, use its key ID, Amazon Resource Name (ARN),
      *         alias name, or alias ARN. When using an alias name, prefix it
-     *         with <code>"alias/"</code>. To specify a CMK in a different AWS
-     *         account, you must use the key ARN or alias ARN.
+     *         with "alias/". To specify a CMK in a different AWS account, you
+     *         must use the key ARN or alias ARN.
      *         </p>
      *         <p>
      *         For example:
@@ -246,9 +247,9 @@ public String getKeyId() {
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -292,8 +293,8 @@ public String getKeyId() {
      *            <p>
      *            To specify a CMK, use its key ID, Amazon Resource Name (ARN),
      *            alias name, or alias ARN. When using an alias name, prefix it
-     *            with <code>"alias/"</code>. To specify a CMK in a different
-     *            AWS account, you must use the key ARN or alias ARN.
+     *            with "alias/". To specify a CMK in a different AWS account,
+     *            you must use the key ARN or alias ARN.
      *            </p>
      *            <p>
      *            For example:
@@ -338,9 +339,9 @@ public void setKeyId(String keyId) {
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -387,8 +388,8 @@ public void setKeyId(String keyId) {
      *            <p>
      *            To specify a CMK, use its key ID, Amazon Resource Name (ARN),
      *            alias name, or alias ARN. When using an alias name, prefix it
-     *            with <code>"alias/"</code>. To specify a CMK in a different
-     *            AWS account, you must use the key ARN or alias ARN.
+     *            with "alias/". To specify a CMK in a different AWS account,
+     *            you must use the key ARN or alias ARN.
      *            </p>
      *            <p>
      *            For example:
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/EncryptResult.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/EncryptResult.java
index 5ebee0e8ec..ddd30f8b55 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/EncryptResult.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/EncryptResult.java
@@ -21,7 +21,7 @@
     /**
      * <p>
      * The encrypted plaintext. When you use the HTTP API or the AWS CLI, the
-     * value is Base64-encoded. Otherwise, it is not encoded.
+     * value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -42,7 +42,7 @@
     /**
      * <p>
      * The encrypted plaintext. When you use the HTTP API or the AWS CLI, the
-     * value is Base64-encoded. Otherwise, it is not encoded.
+     * value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -50,7 +50,7 @@
      *
      * @return <p>
      *         The encrypted plaintext. When you use the HTTP API or the AWS
-     *         CLI, the value is Base64-encoded. Otherwise, it is not encoded.
+     *         CLI, the value is Base64-encdoded. Otherwise, it is not encoded.
      *         </p>
      */
     public java.nio.ByteBuffer getCiphertextBlob() {
@@ -60,7 +60,7 @@
     /**
      * <p>
      * The encrypted plaintext. When you use the HTTP API or the AWS CLI, the
-     * value is Base64-encoded. Otherwise, it is not encoded.
+     * value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -68,7 +68,7 @@
      *
      * @param ciphertextBlob <p>
      *            The encrypted plaintext. When you use the HTTP API or the AWS
-     *            CLI, the value is Base64-encoded. Otherwise, it is not
+     *            CLI, the value is Base64-encdoded. Otherwise, it is not
      *            encoded.
      *            </p>
      */
@@ -79,7 +79,7 @@ public void setCiphertextBlob(java.nio.ByteBuffer ciphertextBlob) {
     /**
      * <p>
      * The encrypted plaintext. When you use the HTTP API or the AWS CLI, the
-     * value is Base64-encoded. Otherwise, it is not encoded.
+     * value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -90,7 +90,7 @@ public void setCiphertextBlob(java.nio.ByteBuffer ciphertextBlob) {
      *
      * @param ciphertextBlob <p>
      *            The encrypted plaintext. When you use the HTTP API or the AWS
-     *            CLI, the value is Base64-encoded. Otherwise, it is not
+     *            CLI, the value is Base64-encdoded. Otherwise, it is not
      *            encoded.
      *            </p>
      * @return A reference to this updated object so that method calls can be
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateDataKeyRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateDataKeyRequest.java
index bc50f835ee..d8daea2e9d 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateDataKeyRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateDataKeyRequest.java
@@ -113,9 +113,9 @@
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -213,9 +213,9 @@
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -260,8 +260,8 @@
      *         <p>
      *         To specify a CMK, use its key ID, Amazon Resource Name (ARN),
      *         alias name, or alias ARN. When using an alias name, prefix it
-     *         with <code>"alias/"</code>. To specify a CMK in a different AWS
-     *         account, you must use the key ARN or alias ARN.
+     *         with "alias/". To specify a CMK in a different AWS account, you
+     *         must use the key ARN or alias ARN.
      *         </p>
      *         <p>
      *         For example:
@@ -307,9 +307,9 @@ public String getKeyId() {
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -354,8 +354,8 @@ public String getKeyId() {
      *            <p>
      *            To specify a CMK, use its key ID, Amazon Resource Name (ARN),
      *            alias name, or alias ARN. When using an alias name, prefix it
-     *            with <code>"alias/"</code>. To specify a CMK in a different
-     *            AWS account, you must use the key ARN or alias ARN.
+     *            with "alias/". To specify a CMK in a different AWS account,
+     *            you must use the key ARN or alias ARN.
      *            </p>
      *            <p>
      *            For example:
@@ -401,9 +401,9 @@ public void setKeyId(String keyId) {
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -451,8 +451,8 @@ public void setKeyId(String keyId) {
      *            <p>
      *            To specify a CMK, use its key ID, Amazon Resource Name (ARN),
      *            alias name, or alias ARN. When using an alias name, prefix it
-     *            with <code>"alias/"</code>. To specify a CMK in a different
-     *            AWS account, you must use the key ARN or alias ARN.
+     *            with "alias/". To specify a CMK in a different AWS account,
+     *            you must use the key ARN or alias ARN.
      *            </p>
      *            <p>
      *            For example:
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateDataKeyResult.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateDataKeyResult.java
index b7c10683eb..b21979ad75 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateDataKeyResult.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateDataKeyResult.java
@@ -21,7 +21,7 @@
     /**
      * <p>
      * The encrypted data encryption key. When you use the HTTP API or the AWS
-     * CLI, the value is Base64-encoded. Otherwise, it is not encoded.
+     * CLI, the value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -32,7 +32,7 @@
     /**
      * <p>
      * The data encryption key. When you use the HTTP API or the AWS CLI, the
-     * value is Base64-encoded. Otherwise, it is not encoded. Use this data key
+     * value is Base64-encdoded. Otherwise, it is not encoded. Use this data key
      * for local encryption and decryption, then remove it from memory as soon
      * as possible.
      * </p>
@@ -56,7 +56,7 @@
     /**
      * <p>
      * The encrypted data encryption key. When you use the HTTP API or the AWS
-     * CLI, the value is Base64-encoded. Otherwise, it is not encoded.
+     * CLI, the value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -64,7 +64,7 @@
      *
      * @return <p>
      *         The encrypted data encryption key. When you use the HTTP API or
-     *         the AWS CLI, the value is Base64-encoded. Otherwise, it is not
+     *         the AWS CLI, the value is Base64-encdoded. Otherwise, it is not
      *         encoded.
      *         </p>
      */
@@ -75,7 +75,7 @@
     /**
      * <p>
      * The encrypted data encryption key. When you use the HTTP API or the AWS
-     * CLI, the value is Base64-encoded. Otherwise, it is not encoded.
+     * CLI, the value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -83,7 +83,7 @@
      *
      * @param ciphertextBlob <p>
      *            The encrypted data encryption key. When you use the HTTP API
-     *            or the AWS CLI, the value is Base64-encoded. Otherwise, it is
+     *            or the AWS CLI, the value is Base64-encdoded. Otherwise, it is
      *            not encoded.
      *            </p>
      */
@@ -94,7 +94,7 @@ public void setCiphertextBlob(java.nio.ByteBuffer ciphertextBlob) {
     /**
      * <p>
      * The encrypted data encryption key. When you use the HTTP API or the AWS
-     * CLI, the value is Base64-encoded. Otherwise, it is not encoded.
+     * CLI, the value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -105,7 +105,7 @@ public void setCiphertextBlob(java.nio.ByteBuffer ciphertextBlob) {
      *
      * @param ciphertextBlob <p>
      *            The encrypted data encryption key. When you use the HTTP API
-     *            or the AWS CLI, the value is Base64-encoded. Otherwise, it is
+     *            or the AWS CLI, the value is Base64-encdoded. Otherwise, it is
      *            not encoded.
      *            </p>
      * @return A reference to this updated object so that method calls can be
@@ -119,7 +119,7 @@ public GenerateDataKeyResult withCiphertextBlob(java.nio.ByteBuffer ciphertextBl
     /**
      * <p>
      * The data encryption key. When you use the HTTP API or the AWS CLI, the
-     * value is Base64-encoded. Otherwise, it is not encoded. Use this data key
+     * value is Base64-encdoded. Otherwise, it is not encoded. Use this data key
      * for local encryption and decryption, then remove it from memory as soon
      * as possible.
      * </p>
@@ -129,7 +129,7 @@ public GenerateDataKeyResult withCiphertextBlob(java.nio.ByteBuffer ciphertextBl
      *
      * @return <p>
      *         The data encryption key. When you use the HTTP API or the AWS
-     *         CLI, the value is Base64-encoded. Otherwise, it is not encoded.
+     *         CLI, the value is Base64-encdoded. Otherwise, it is not encoded.
      *         Use this data key for local encryption and decryption, then
      *         remove it from memory as soon as possible.
      *         </p>
@@ -141,7 +141,7 @@ public GenerateDataKeyResult withCiphertextBlob(java.nio.ByteBuffer ciphertextBl
     /**
      * <p>
      * The data encryption key. When you use the HTTP API or the AWS CLI, the
-     * value is Base64-encoded. Otherwise, it is not encoded. Use this data key
+     * value is Base64-encdoded. Otherwise, it is not encoded. Use this data key
      * for local encryption and decryption, then remove it from memory as soon
      * as possible.
      * </p>
@@ -151,7 +151,7 @@ public GenerateDataKeyResult withCiphertextBlob(java.nio.ByteBuffer ciphertextBl
      *
      * @param plaintext <p>
      *            The data encryption key. When you use the HTTP API or the AWS
-     *            CLI, the value is Base64-encoded. Otherwise, it is not
+     *            CLI, the value is Base64-encdoded. Otherwise, it is not
      *            encoded. Use this data key for local encryption and
      *            decryption, then remove it from memory as soon as possible.
      *            </p>
@@ -163,7 +163,7 @@ public void setPlaintext(java.nio.ByteBuffer plaintext) {
     /**
      * <p>
      * The data encryption key. When you use the HTTP API or the AWS CLI, the
-     * value is Base64-encoded. Otherwise, it is not encoded. Use this data key
+     * value is Base64-encdoded. Otherwise, it is not encoded. Use this data key
      * for local encryption and decryption, then remove it from memory as soon
      * as possible.
      * </p>
@@ -176,7 +176,7 @@ public void setPlaintext(java.nio.ByteBuffer plaintext) {
      *
      * @param plaintext <p>
      *            The data encryption key. When you use the HTTP API or the AWS
-     *            CLI, the value is Base64-encoded. Otherwise, it is not
+     *            CLI, the value is Base64-encdoded. Otherwise, it is not
      *            encoded. Use this data key for local encryption and
      *            decryption, then remove it from memory as soon as possible.
      *            </p>
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateDataKeyWithoutPlaintextRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateDataKeyWithoutPlaintextRequest.java
index c975e5a5a0..c7e20f395e 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateDataKeyWithoutPlaintextRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateDataKeyWithoutPlaintextRequest.java
@@ -40,8 +40,8 @@
  * and then stores it in the container. Later, a different component of the
  * system, called the <i>data plane</i>, puts encrypted data into the
  * containers. To do this, it passes the encrypted data key to the
- * <a>Decrypt</a> operation. It then uses the returned plaintext data key to
- * encrypt data and finally stores the encrypted data in the container. In this
+ * <a>Decrypt</a> operation, then uses the returned plaintext data key to
+ * encrypt data, and finally stores the encrypted data in the container. In this
  * system, the control plane never sees the plaintext data key.
  * </p>
  * <p>
@@ -61,9 +61,9 @@
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -161,9 +161,9 @@
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -208,8 +208,8 @@
      *         <p>
      *         To specify a CMK, use its key ID, Amazon Resource Name (ARN),
      *         alias name, or alias ARN. When using an alias name, prefix it
-     *         with <code>"alias/"</code>. To specify a CMK in a different AWS
-     *         account, you must use the key ARN or alias ARN.
+     *         with "alias/". To specify a CMK in a different AWS account, you
+     *         must use the key ARN or alias ARN.
      *         </p>
      *         <p>
      *         For example:
@@ -255,9 +255,9 @@ public String getKeyId() {
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -302,8 +302,8 @@ public String getKeyId() {
      *            <p>
      *            To specify a CMK, use its key ID, Amazon Resource Name (ARN),
      *            alias name, or alias ARN. When using an alias name, prefix it
-     *            with <code>"alias/"</code>. To specify a CMK in a different
-     *            AWS account, you must use the key ARN or alias ARN.
+     *            with "alias/". To specify a CMK in a different AWS account,
+     *            you must use the key ARN or alias ARN.
      *            </p>
      *            <p>
      *            For example:
@@ -349,9 +349,9 @@ public void setKeyId(String keyId) {
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -399,8 +399,8 @@ public void setKeyId(String keyId) {
      *            <p>
      *            To specify a CMK, use its key ID, Amazon Resource Name (ARN),
      *            alias name, or alias ARN. When using an alias name, prefix it
-     *            with <code>"alias/"</code>. To specify a CMK in a different
-     *            AWS account, you must use the key ARN or alias ARN.
+     *            with "alias/". To specify a CMK in a different AWS account,
+     *            you must use the key ARN or alias ARN.
      *            </p>
      *            <p>
      *            For example:
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateDataKeyWithoutPlaintextResult.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateDataKeyWithoutPlaintextResult.java
index 8380789413..1a57d6307b 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateDataKeyWithoutPlaintextResult.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateDataKeyWithoutPlaintextResult.java
@@ -21,7 +21,7 @@
     /**
      * <p>
      * The encrypted data encryption key. When you use the HTTP API or the AWS
-     * CLI, the value is Base64-encoded. Otherwise, it is not encoded.
+     * CLI, the value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -43,7 +43,7 @@
     /**
      * <p>
      * The encrypted data encryption key. When you use the HTTP API or the AWS
-     * CLI, the value is Base64-encoded. Otherwise, it is not encoded.
+     * CLI, the value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -51,7 +51,7 @@
      *
      * @return <p>
      *         The encrypted data encryption key. When you use the HTTP API or
-     *         the AWS CLI, the value is Base64-encoded. Otherwise, it is not
+     *         the AWS CLI, the value is Base64-encdoded. Otherwise, it is not
      *         encoded.
      *         </p>
      */
@@ -62,7 +62,7 @@
     /**
      * <p>
      * The encrypted data encryption key. When you use the HTTP API or the AWS
-     * CLI, the value is Base64-encoded. Otherwise, it is not encoded.
+     * CLI, the value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -70,7 +70,7 @@
      *
      * @param ciphertextBlob <p>
      *            The encrypted data encryption key. When you use the HTTP API
-     *            or the AWS CLI, the value is Base64-encoded. Otherwise, it is
+     *            or the AWS CLI, the value is Base64-encdoded. Otherwise, it is
      *            not encoded.
      *            </p>
      */
@@ -81,7 +81,7 @@ public void setCiphertextBlob(java.nio.ByteBuffer ciphertextBlob) {
     /**
      * <p>
      * The encrypted data encryption key. When you use the HTTP API or the AWS
-     * CLI, the value is Base64-encoded. Otherwise, it is not encoded.
+     * CLI, the value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -92,7 +92,7 @@ public void setCiphertextBlob(java.nio.ByteBuffer ciphertextBlob) {
      *
      * @param ciphertextBlob <p>
      *            The encrypted data encryption key. When you use the HTTP API
-     *            or the AWS CLI, the value is Base64-encoded. Otherwise, it is
+     *            or the AWS CLI, the value is Base64-encdoded. Otherwise, it is
      *            not encoded.
      *            </p>
      * @return A reference to this updated object so that method calls can be
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateRandomRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateRandomRequest.java
index a67eabccd6..ea869d6f62 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateRandomRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateRandomRequest.java
@@ -24,6 +24,12 @@
  * Returns a random byte string that is cryptographically secure.
  * </p>
  * <p>
+ * By default, the random byte string is generated in AWS KMS. To generate the
+ * byte string in the AWS CloudHSM cluster that is associated with a <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+ * >custom key store</a>, specify the custom key store ID.
+ * </p>
+ * <p>
  * For more information about entropy and random number generation, see the <a
  * href="https://d0.awsstatic.com/whitepapers/KMS-Cryptographic-Details.pdf">AWS
  * Key Management Service Cryptographic Details</a> whitepaper.
@@ -40,6 +46,20 @@
      */
     private Integer numberOfBytes;
 
+    /**
+     * <p>
+     * Generates the random byte string in the AWS CloudHSM cluster that is
+     * associated with the specified <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>. To find the ID of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     */
+    private String customKeyStoreId;
+
     /**
      * <p>
      * The length of the byte string.
@@ -94,6 +114,84 @@ public GenerateRandomRequest withNumberOfBytes(Integer numberOfBytes) {
         return this;
     }
 
+    /**
+     * <p>
+     * Generates the random byte string in the AWS CloudHSM cluster that is
+     * associated with the specified <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>. To find the ID of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @return <p>
+     *         Generates the random byte string in the AWS CloudHSM cluster that
+     *         is associated with the specified <a href=
+     *         "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     *         >custom key store</a>. To find the ID of a custom key store, use
+     *         the <a>DescribeCustomKeyStores</a> operation.
+     *         </p>
+     */
+    public String getCustomKeyStoreId() {
+        return customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * Generates the random byte string in the AWS CloudHSM cluster that is
+     * associated with the specified <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>. To find the ID of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            Generates the random byte string in the AWS CloudHSM cluster
+     *            that is associated with the specified <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     *            >custom key store</a>. To find the ID of a custom key store,
+     *            use the <a>DescribeCustomKeyStores</a> operation.
+     *            </p>
+     */
+    public void setCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * Generates the random byte string in the AWS CloudHSM cluster that is
+     * associated with the specified <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>. To find the ID of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            Generates the random byte string in the AWS CloudHSM cluster
+     *            that is associated with the specified <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     *            >custom key store</a>. To find the ID of a custom key store,
+     *            use the <a>DescribeCustomKeyStores</a> operation.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GenerateRandomRequest withCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+        return this;
+    }
+
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -106,7 +204,9 @@ public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
         if (getNumberOfBytes() != null)
-            sb.append("NumberOfBytes: " + getNumberOfBytes());
+            sb.append("NumberOfBytes: " + getNumberOfBytes() + ",");
+        if (getCustomKeyStoreId() != null)
+            sb.append("CustomKeyStoreId: " + getCustomKeyStoreId());
         sb.append("}");
         return sb.toString();
     }
@@ -118,6 +218,8 @@ public int hashCode() {
 
         hashCode = prime * hashCode
                 + ((getNumberOfBytes() == null) ? 0 : getNumberOfBytes().hashCode());
+        hashCode = prime * hashCode
+                + ((getCustomKeyStoreId() == null) ? 0 : getCustomKeyStoreId().hashCode());
         return hashCode;
     }
 
@@ -137,6 +239,11 @@ public boolean equals(Object obj) {
         if (other.getNumberOfBytes() != null
                 && other.getNumberOfBytes().equals(this.getNumberOfBytes()) == false)
             return false;
+        if (other.getCustomKeyStoreId() == null ^ this.getCustomKeyStoreId() == null)
+            return false;
+        if (other.getCustomKeyStoreId() != null
+                && other.getCustomKeyStoreId().equals(this.getCustomKeyStoreId()) == false)
+            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateRandomResult.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateRandomResult.java
index 222444ad4b..6e7f106156 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateRandomResult.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GenerateRandomResult.java
@@ -21,7 +21,7 @@
     /**
      * <p>
      * The random byte string. When you use the HTTP API or the AWS CLI, the
-     * value is Base64-encoded. Otherwise, it is not encoded.
+     * value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -32,7 +32,7 @@
     /**
      * <p>
      * The random byte string. When you use the HTTP API or the AWS CLI, the
-     * value is Base64-encoded. Otherwise, it is not encoded.
+     * value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -40,7 +40,7 @@
      *
      * @return <p>
      *         The random byte string. When you use the HTTP API or the AWS CLI,
-     *         the value is Base64-encoded. Otherwise, it is not encoded.
+     *         the value is Base64-encdoded. Otherwise, it is not encoded.
      *         </p>
      */
     public java.nio.ByteBuffer getPlaintext() {
@@ -50,7 +50,7 @@
     /**
      * <p>
      * The random byte string. When you use the HTTP API or the AWS CLI, the
-     * value is Base64-encoded. Otherwise, it is not encoded.
+     * value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -58,7 +58,7 @@
      *
      * @param plaintext <p>
      *            The random byte string. When you use the HTTP API or the AWS
-     *            CLI, the value is Base64-encoded. Otherwise, it is not
+     *            CLI, the value is Base64-encdoded. Otherwise, it is not
      *            encoded.
      *            </p>
      */
@@ -69,7 +69,7 @@ public void setPlaintext(java.nio.ByteBuffer plaintext) {
     /**
      * <p>
      * The random byte string. When you use the HTTP API or the AWS CLI, the
-     * value is Base64-encoded. Otherwise, it is not encoded.
+     * value is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -80,7 +80,7 @@ public void setPlaintext(java.nio.ByteBuffer plaintext) {
      *
      * @param plaintext <p>
      *            The random byte string. When you use the HTTP API or the AWS
-     *            CLI, the value is Base64-encoded. Otherwise, it is not
+     *            CLI, the value is Base64-encdoded. Otherwise, it is not
      *            encoded.
      *            </p>
      * @return A reference to this updated object so that method calls can be
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GetParametersForImportRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GetParametersForImportRequest.java
index f20b6298ce..3cf6846469 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GetParametersForImportRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GetParametersForImportRequest.java
@@ -89,8 +89,8 @@
 
     /**
      * <p>
-     * The algorithm you use to encrypt the key material before importing it
-     * with <a>ImportKeyMaterial</a>. For more information, see <a href=
+     * The algorithm you will use to encrypt the key material before importing
+     * it with <a>ImportKeyMaterial</a>. For more information, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-encrypt-key-material.html"
      * >Encrypt the Key Material</a> in the <i>AWS Key Management Service
      * Developer Guide</i>.
@@ -318,8 +318,8 @@ public GetParametersForImportRequest withKeyId(String keyId) {
 
     /**
      * <p>
-     * The algorithm you use to encrypt the key material before importing it
-     * with <a>ImportKeyMaterial</a>. For more information, see <a href=
+     * The algorithm you will use to encrypt the key material before importing
+     * it with <a>ImportKeyMaterial</a>. For more information, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-encrypt-key-material.html"
      * >Encrypt the Key Material</a> in the <i>AWS Key Management Service
      * Developer Guide</i>.
@@ -330,7 +330,7 @@ public GetParametersForImportRequest withKeyId(String keyId) {
      * RSAES_OAEP_SHA_256
      *
      * @return <p>
-     *         The algorithm you use to encrypt the key material before
+     *         The algorithm you will use to encrypt the key material before
      *         importing it with <a>ImportKeyMaterial</a>. For more information,
      *         see <a href=
      *         "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-encrypt-key-material.html"
@@ -345,8 +345,8 @@ public String getWrappingAlgorithm() {
 
     /**
      * <p>
-     * The algorithm you use to encrypt the key material before importing it
-     * with <a>ImportKeyMaterial</a>. For more information, see <a href=
+     * The algorithm you will use to encrypt the key material before importing
+     * it with <a>ImportKeyMaterial</a>. For more information, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-encrypt-key-material.html"
      * >Encrypt the Key Material</a> in the <i>AWS Key Management Service
      * Developer Guide</i>.
@@ -357,7 +357,7 @@ public String getWrappingAlgorithm() {
      * RSAES_OAEP_SHA_256
      *
      * @param wrappingAlgorithm <p>
-     *            The algorithm you use to encrypt the key material before
+     *            The algorithm you will use to encrypt the key material before
      *            importing it with <a>ImportKeyMaterial</a>. For more
      *            information, see <a href=
      *            "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-encrypt-key-material.html"
@@ -372,8 +372,8 @@ public void setWrappingAlgorithm(String wrappingAlgorithm) {
 
     /**
      * <p>
-     * The algorithm you use to encrypt the key material before importing it
-     * with <a>ImportKeyMaterial</a>. For more information, see <a href=
+     * The algorithm you will use to encrypt the key material before importing
+     * it with <a>ImportKeyMaterial</a>. For more information, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-encrypt-key-material.html"
      * >Encrypt the Key Material</a> in the <i>AWS Key Management Service
      * Developer Guide</i>.
@@ -387,7 +387,7 @@ public void setWrappingAlgorithm(String wrappingAlgorithm) {
      * RSAES_OAEP_SHA_256
      *
      * @param wrappingAlgorithm <p>
-     *            The algorithm you use to encrypt the key material before
+     *            The algorithm you will use to encrypt the key material before
      *            importing it with <a>ImportKeyMaterial</a>. For more
      *            information, see <a href=
      *            "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-encrypt-key-material.html"
@@ -405,8 +405,8 @@ public GetParametersForImportRequest withWrappingAlgorithm(String wrappingAlgori
 
     /**
      * <p>
-     * The algorithm you use to encrypt the key material before importing it
-     * with <a>ImportKeyMaterial</a>. For more information, see <a href=
+     * The algorithm you will use to encrypt the key material before importing
+     * it with <a>ImportKeyMaterial</a>. For more information, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-encrypt-key-material.html"
      * >Encrypt the Key Material</a> in the <i>AWS Key Management Service
      * Developer Guide</i>.
@@ -417,7 +417,7 @@ public GetParametersForImportRequest withWrappingAlgorithm(String wrappingAlgori
      * RSAES_OAEP_SHA_256
      *
      * @param wrappingAlgorithm <p>
-     *            The algorithm you use to encrypt the key material before
+     *            The algorithm you will use to encrypt the key material before
      *            importing it with <a>ImportKeyMaterial</a>. For more
      *            information, see <a href=
      *            "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-encrypt-key-material.html"
@@ -432,8 +432,8 @@ public void setWrappingAlgorithm(AlgorithmSpec wrappingAlgorithm) {
 
     /**
      * <p>
-     * The algorithm you use to encrypt the key material before importing it
-     * with <a>ImportKeyMaterial</a>. For more information, see <a href=
+     * The algorithm you will use to encrypt the key material before importing
+     * it with <a>ImportKeyMaterial</a>. For more information, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-encrypt-key-material.html"
      * >Encrypt the Key Material</a> in the <i>AWS Key Management Service
      * Developer Guide</i>.
@@ -447,7 +447,7 @@ public void setWrappingAlgorithm(AlgorithmSpec wrappingAlgorithm) {
      * RSAES_OAEP_SHA_256
      *
      * @param wrappingAlgorithm <p>
-     *            The algorithm you use to encrypt the key material before
+     *            The algorithm you will use to encrypt the key material before
      *            importing it with <a>ImportKeyMaterial</a>. For more
      *            information, see <a href=
      *            "http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-encrypt-key-material.html"
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GrantConstraints.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GrantConstraints.java
index d7c1619f51..957ae49823 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GrantConstraints.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GrantConstraints.java
@@ -20,7 +20,7 @@
 /**
  * <p>
  * A structure that you can use to allow certain operations in the grant only
- * when the preferred encryption context is present. For more information about
+ * when the desired encryption context is present. For more information about
  * encryption context, see <a href=
  * "http://docs.aws.amazon.com/kms/latest/developerguide/encryption-context.html"
  * >Encryption Context</a> in the <i>AWS Key Management Service Developer
@@ -31,10 +31,10 @@
  * input. For example, the <code> <a>DescribeKey</a> </code> operation does not
  * accept encryption context as input. A grant that allows the
  * <code>DescribeKey</code> operation does so regardless of the grant
- * constraints. In contrast, the <code> <a>Encrypt</a> </code> operation accepts
- * encryption context as input. A grant that allows the <code>Encrypt</code>
- * operation does so only when the encryption context of the
- * <code>Encrypt</code> operation satisfies the grant constraints.
+ * constraints. In constrast, the <code> <a>Encrypt</a> </code> operation
+ * accepts encryption context as input. A grant that allows the
+ * <code>Encrypt</code> operation does so only when the encryption context of
+ * the <code>Encrypt</code> operation satisfies the grant constraints.
  * </p>
  */
 public class GrantConstraints implements Serializable {
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GrantListEntry.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GrantListEntry.java
index 234db44ed2..e6fdbf2248 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GrantListEntry.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/GrantListEntry.java
@@ -71,6 +71,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      */
     private String granteePrincipal;
 
@@ -81,6 +82,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      */
     private String retiringPrincipal;
 
@@ -91,6 +93,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      */
     private String issuingAccount;
 
@@ -344,6 +347,7 @@ public GrantListEntry withCreationDate(java.util.Date creationDate) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @return <p>
      *         The principal that receives the grant's permissions.
@@ -360,6 +364,7 @@ public String getGranteePrincipal() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @param granteePrincipal <p>
      *            The principal that receives the grant's permissions.
@@ -379,6 +384,7 @@ public void setGranteePrincipal(String granteePrincipal) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @param granteePrincipal <p>
      *            The principal that receives the grant's permissions.
@@ -398,6 +404,7 @@ public GrantListEntry withGranteePrincipal(String granteePrincipal) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @return <p>
      *         The principal that can retire the grant.
@@ -414,6 +421,7 @@ public String getRetiringPrincipal() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @param retiringPrincipal <p>
      *            The principal that can retire the grant.
@@ -433,6 +441,7 @@ public void setRetiringPrincipal(String retiringPrincipal) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @param retiringPrincipal <p>
      *            The principal that can retire the grant.
@@ -452,6 +461,7 @@ public GrantListEntry withRetiringPrincipal(String retiringPrincipal) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @return <p>
      *         The AWS account under which the grant was issued.
@@ -468,6 +478,7 @@ public String getIssuingAccount() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @param issuingAccount <p>
      *            The AWS account under which the grant was issued.
@@ -487,6 +498,7 @@ public void setIssuingAccount(String issuingAccount) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @param issuingAccount <p>
      *            The AWS account under which the grant was issued.
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ImportKeyMaterialRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ImportKeyMaterialRequest.java
index b2c70e26c3..8e497da2bb 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ImportKeyMaterialRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ImportKeyMaterialRequest.java
@@ -74,7 +74,7 @@
  * </li>
  * </ul>
  * <p>
- * When this operation is successful, the CMK's key state changes from
+ * When this operation is successful, the key state of the CMK changes from
  * <code>PendingImport</code> to <code>Enabled</code>, and you can use the CMK.
  * After you successfully import key material into a CMK, you can reimport the
  * same key material into that CMK, but you cannot import different key
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/IncorrectTrustAnchorException.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/IncorrectTrustAnchorException.java
new file mode 100644
index 0000000000..ccb24fc80c
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/IncorrectTrustAnchorException.java
@@ -0,0 +1,44 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import com.amazonaws.AmazonServiceException;
+
+/**
+ * <p>
+ * The request was rejected because the trust anchor certificate in the request
+ * is not the trust anchor certificate for the specified AWS CloudHSM cluster.
+ * </p>
+ * <p>
+ * When you <a href=
+ * "http://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html#sign-csr"
+ * >initialize the cluster</a>, you create the trust anchor certificate and save
+ * it in the <code>customerCA.crt</code> file.
+ * </p>
+ */
+public class IncorrectTrustAnchorException extends AmazonServiceException {
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * Constructs a new IncorrectTrustAnchorException with the specified error
+     * message.
+     *
+     * @param message Describes the error encountered.
+     */
+    public IncorrectTrustAnchorException(String message) {
+        super(message);
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/KeyMetadata.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/KeyMetadata.java
index 751a870e2d..74cb5abd80 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/KeyMetadata.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/KeyMetadata.java
@@ -107,15 +107,15 @@
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>Enabled, Disabled, PendingDeletion, PendingImport
+     * <b>Allowed Values: </b>Enabled, Disabled, PendingDeletion, PendingImport,
+     * Unavailable
      */
     private String keyState;
 
     /**
      * <p>
      * The date and time after which AWS KMS deletes the CMK. This value is
-     * present only when <code>KeyState</code> is <code>PendingDeletion</code>,
-     * otherwise this value is omitted.
+     * present only when <code>KeyState</code> is <code>PendingDeletion</code>.
      * </p>
      */
     private java.util.Date deletionDate;
@@ -137,13 +137,43 @@
      * <code>AWS_KMS</code>, AWS KMS created the key material. When this value
      * is <code>EXTERNAL</code>, the key material was imported from your
      * existing key management infrastructure or the CMK lacks key material.
+     * When this value is <code>AWS_CLOUDHSM</code>, the key material was
+     * created in the AWS CloudHSM cluster associated with a custom key store.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL
+     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL, AWS_CLOUDHSM
      */
     private String origin;
 
+    /**
+     * <p>
+     * A unique identifier for the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> that contains the CMK. This value is present only
+     * when the CMK is created in a custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     */
+    private String customKeyStoreId;
+
+    /**
+     * <p>
+     * The cluster ID of the AWS CloudHSM cluster that contains the key material
+     * for the CMK. When you create a CMK in a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>, AWS KMS creates the key material for the CMK in
+     * the associated AWS CloudHSM cluster. This value is present only when the
+     * CMK is created in a custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>19 - 24<br/>
+     */
+    private String cloudHsmClusterId;
+
     /**
      * <p>
      * Specifies whether the CMK's key material expires. This value is present
@@ -158,7 +188,7 @@
 
     /**
      * <p>
-     * The CMK's manager. CMKs are either customer managed or AWS managed. For
+     * The CMK's manager. CMKs are either customer-managed or AWS-managed. For
      * more information about the difference, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys"
      * >Customer Master Keys</a> in the <i>AWS Key Management Service Developer
@@ -650,7 +680,8 @@ public KeyMetadata withKeyUsage(KeyUsageType keyUsage) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>Enabled, Disabled, PendingDeletion, PendingImport
+     * <b>Allowed Values: </b>Enabled, Disabled, PendingDeletion, PendingImport,
+     * Unavailable
      *
      * @return <p>
      *         The state of the CMK.
@@ -681,7 +712,8 @@ public String getKeyState() {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>Enabled, Disabled, PendingDeletion, PendingImport
+     * <b>Allowed Values: </b>Enabled, Disabled, PendingDeletion, PendingImport,
+     * Unavailable
      *
      * @param keyState <p>
      *            The state of the CMK.
@@ -715,7 +747,8 @@ public void setKeyState(String keyState) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>Enabled, Disabled, PendingDeletion, PendingImport
+     * <b>Allowed Values: </b>Enabled, Disabled, PendingDeletion, PendingImport,
+     * Unavailable
      *
      * @param keyState <p>
      *            The state of the CMK.
@@ -749,7 +782,8 @@ public KeyMetadata withKeyState(String keyState) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>Enabled, Disabled, PendingDeletion, PendingImport
+     * <b>Allowed Values: </b>Enabled, Disabled, PendingDeletion, PendingImport,
+     * Unavailable
      *
      * @param keyState <p>
      *            The state of the CMK.
@@ -783,7 +817,8 @@ public void setKeyState(KeyState keyState) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>Enabled, Disabled, PendingDeletion, PendingImport
+     * <b>Allowed Values: </b>Enabled, Disabled, PendingDeletion, PendingImport,
+     * Unavailable
      *
      * @param keyState <p>
      *            The state of the CMK.
@@ -807,14 +842,13 @@ public KeyMetadata withKeyState(KeyState keyState) {
     /**
      * <p>
      * The date and time after which AWS KMS deletes the CMK. This value is
-     * present only when <code>KeyState</code> is <code>PendingDeletion</code>,
-     * otherwise this value is omitted.
+     * present only when <code>KeyState</code> is <code>PendingDeletion</code>.
      * </p>
      *
      * @return <p>
      *         The date and time after which AWS KMS deletes the CMK. This value
      *         is present only when <code>KeyState</code> is
-     *         <code>PendingDeletion</code>, otherwise this value is omitted.
+     *         <code>PendingDeletion</code>.
      *         </p>
      */
     public java.util.Date getDeletionDate() {
@@ -824,14 +858,13 @@ public KeyMetadata withKeyState(KeyState keyState) {
     /**
      * <p>
      * The date and time after which AWS KMS deletes the CMK. This value is
-     * present only when <code>KeyState</code> is <code>PendingDeletion</code>,
-     * otherwise this value is omitted.
+     * present only when <code>KeyState</code> is <code>PendingDeletion</code>.
      * </p>
      *
      * @param deletionDate <p>
      *            The date and time after which AWS KMS deletes the CMK. This
      *            value is present only when <code>KeyState</code> is
-     *            <code>PendingDeletion</code>, otherwise this value is omitted.
+     *            <code>PendingDeletion</code>.
      *            </p>
      */
     public void setDeletionDate(java.util.Date deletionDate) {
@@ -841,8 +874,7 @@ public void setDeletionDate(java.util.Date deletionDate) {
     /**
      * <p>
      * The date and time after which AWS KMS deletes the CMK. This value is
-     * present only when <code>KeyState</code> is <code>PendingDeletion</code>,
-     * otherwise this value is omitted.
+     * present only when <code>KeyState</code> is <code>PendingDeletion</code>.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -851,7 +883,7 @@ public void setDeletionDate(java.util.Date deletionDate) {
      * @param deletionDate <p>
      *            The date and time after which AWS KMS deletes the CMK. This
      *            value is present only when <code>KeyState</code> is
-     *            <code>PendingDeletion</code>, otherwise this value is omitted.
+     *            <code>PendingDeletion</code>.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -941,17 +973,21 @@ public KeyMetadata withValidTo(java.util.Date validTo) {
      * <code>AWS_KMS</code>, AWS KMS created the key material. When this value
      * is <code>EXTERNAL</code>, the key material was imported from your
      * existing key management infrastructure or the CMK lacks key material.
+     * When this value is <code>AWS_CLOUDHSM</code>, the key material was
+     * created in the AWS CloudHSM cluster associated with a custom key store.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL
+     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL, AWS_CLOUDHSM
      *
      * @return <p>
      *         The source of the CMK's key material. When this value is
      *         <code>AWS_KMS</code>, AWS KMS created the key material. When this
      *         value is <code>EXTERNAL</code>, the key material was imported
      *         from your existing key management infrastructure or the CMK lacks
-     *         key material.
+     *         key material. When this value is <code>AWS_CLOUDHSM</code>, the
+     *         key material was created in the AWS CloudHSM cluster associated
+     *         with a custom key store.
      *         </p>
      * @see OriginType
      */
@@ -965,17 +1001,21 @@ public String getOrigin() {
      * <code>AWS_KMS</code>, AWS KMS created the key material. When this value
      * is <code>EXTERNAL</code>, the key material was imported from your
      * existing key management infrastructure or the CMK lacks key material.
+     * When this value is <code>AWS_CLOUDHSM</code>, the key material was
+     * created in the AWS CloudHSM cluster associated with a custom key store.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL
+     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL, AWS_CLOUDHSM
      *
      * @param origin <p>
      *            The source of the CMK's key material. When this value is
      *            <code>AWS_KMS</code>, AWS KMS created the key material. When
      *            this value is <code>EXTERNAL</code>, the key material was
      *            imported from your existing key management infrastructure or
-     *            the CMK lacks key material.
+     *            the CMK lacks key material. When this value is
+     *            <code>AWS_CLOUDHSM</code>, the key material was created in the
+     *            AWS CloudHSM cluster associated with a custom key store.
      *            </p>
      * @see OriginType
      */
@@ -989,20 +1029,24 @@ public void setOrigin(String origin) {
      * <code>AWS_KMS</code>, AWS KMS created the key material. When this value
      * is <code>EXTERNAL</code>, the key material was imported from your
      * existing key management infrastructure or the CMK lacks key material.
+     * When this value is <code>AWS_CLOUDHSM</code>, the key material was
+     * created in the AWS CloudHSM cluster associated with a custom key store.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL
+     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL, AWS_CLOUDHSM
      *
      * @param origin <p>
      *            The source of the CMK's key material. When this value is
      *            <code>AWS_KMS</code>, AWS KMS created the key material. When
      *            this value is <code>EXTERNAL</code>, the key material was
      *            imported from your existing key management infrastructure or
-     *            the CMK lacks key material.
+     *            the CMK lacks key material. When this value is
+     *            <code>AWS_CLOUDHSM</code>, the key material was created in the
+     *            AWS CloudHSM cluster associated with a custom key store.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -1019,17 +1063,21 @@ public KeyMetadata withOrigin(String origin) {
      * <code>AWS_KMS</code>, AWS KMS created the key material. When this value
      * is <code>EXTERNAL</code>, the key material was imported from your
      * existing key management infrastructure or the CMK lacks key material.
+     * When this value is <code>AWS_CLOUDHSM</code>, the key material was
+     * created in the AWS CloudHSM cluster associated with a custom key store.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL
+     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL, AWS_CLOUDHSM
      *
      * @param origin <p>
      *            The source of the CMK's key material. When this value is
      *            <code>AWS_KMS</code>, AWS KMS created the key material. When
      *            this value is <code>EXTERNAL</code>, the key material was
      *            imported from your existing key management infrastructure or
-     *            the CMK lacks key material.
+     *            the CMK lacks key material. When this value is
+     *            <code>AWS_CLOUDHSM</code>, the key material was created in the
+     *            AWS CloudHSM cluster associated with a custom key store.
      *            </p>
      * @see OriginType
      */
@@ -1043,20 +1091,24 @@ public void setOrigin(OriginType origin) {
      * <code>AWS_KMS</code>, AWS KMS created the key material. When this value
      * is <code>EXTERNAL</code>, the key material was imported from your
      * existing key management infrastructure or the CMK lacks key material.
+     * When this value is <code>AWS_CLOUDHSM</code>, the key material was
+     * created in the AWS CloudHSM cluster associated with a custom key store.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL
+     * <b>Allowed Values: </b>AWS_KMS, EXTERNAL, AWS_CLOUDHSM
      *
      * @param origin <p>
      *            The source of the CMK's key material. When this value is
      *            <code>AWS_KMS</code>, AWS KMS created the key material. When
      *            this value is <code>EXTERNAL</code>, the key material was
      *            imported from your existing key management infrastructure or
-     *            the CMK lacks key material.
+     *            the CMK lacks key material. When this value is
+     *            <code>AWS_CLOUDHSM</code>, the key material was created in the
+     *            AWS CloudHSM cluster associated with a custom key store.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -1067,6 +1119,162 @@ public KeyMetadata withOrigin(OriginType origin) {
         return this;
     }
 
+    /**
+     * <p>
+     * A unique identifier for the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> that contains the CMK. This value is present only
+     * when the CMK is created in a custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @return <p>
+     *         A unique identifier for the <a href=
+     *         "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     *         >custom key store</a> that contains the CMK. This value is
+     *         present only when the CMK is created in a custom key store.
+     *         </p>
+     */
+    public String getCustomKeyStoreId() {
+        return customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> that contains the CMK. This value is present only
+     * when the CMK is created in a custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            A unique identifier for the <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     *            >custom key store</a> that contains the CMK. This value is
+     *            present only when the CMK is created in a custom key store.
+     *            </p>
+     */
+    public void setCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a> that contains the CMK. This value is present only
+     * when the CMK is created in a custom key store.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            A unique identifier for the <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     *            >custom key store</a> that contains the CMK. This value is
+     *            present only when the CMK is created in a custom key store.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public KeyMetadata withCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The cluster ID of the AWS CloudHSM cluster that contains the key material
+     * for the CMK. When you create a CMK in a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>, AWS KMS creates the key material for the CMK in
+     * the associated AWS CloudHSM cluster. This value is present only when the
+     * CMK is created in a custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>19 - 24<br/>
+     *
+     * @return <p>
+     *         The cluster ID of the AWS CloudHSM cluster that contains the key
+     *         material for the CMK. When you create a CMK in a <a href=
+     *         "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     *         >custom key store</a>, AWS KMS creates the key material for the
+     *         CMK in the associated AWS CloudHSM cluster. This value is present
+     *         only when the CMK is created in a custom key store.
+     *         </p>
+     */
+    public String getCloudHsmClusterId() {
+        return cloudHsmClusterId;
+    }
+
+    /**
+     * <p>
+     * The cluster ID of the AWS CloudHSM cluster that contains the key material
+     * for the CMK. When you create a CMK in a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>, AWS KMS creates the key material for the CMK in
+     * the associated AWS CloudHSM cluster. This value is present only when the
+     * CMK is created in a custom key store.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>19 - 24<br/>
+     *
+     * @param cloudHsmClusterId <p>
+     *            The cluster ID of the AWS CloudHSM cluster that contains the
+     *            key material for the CMK. When you create a CMK in a <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     *            >custom key store</a>, AWS KMS creates the key material for
+     *            the CMK in the associated AWS CloudHSM cluster. This value is
+     *            present only when the CMK is created in a custom key store.
+     *            </p>
+     */
+    public void setCloudHsmClusterId(String cloudHsmClusterId) {
+        this.cloudHsmClusterId = cloudHsmClusterId;
+    }
+
+    /**
+     * <p>
+     * The cluster ID of the AWS CloudHSM cluster that contains the key material
+     * for the CMK. When you create a CMK in a <a href=
+     * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     * >custom key store</a>, AWS KMS creates the key material for the CMK in
+     * the associated AWS CloudHSM cluster. This value is present only when the
+     * CMK is created in a custom key store.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>19 - 24<br/>
+     *
+     * @param cloudHsmClusterId <p>
+     *            The cluster ID of the AWS CloudHSM cluster that contains the
+     *            key material for the CMK. When you create a CMK in a <a href=
+     *            "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+     *            >custom key store</a>, AWS KMS creates the key material for
+     *            the CMK in the associated AWS CloudHSM cluster. This value is
+     *            present only when the CMK is created in a custom key store.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public KeyMetadata withCloudHsmClusterId(String cloudHsmClusterId) {
+        this.cloudHsmClusterId = cloudHsmClusterId;
+        return this;
+    }
+
     /**
      * <p>
      * Specifies whether the CMK's key material expires. This value is present
@@ -1186,7 +1394,7 @@ public KeyMetadata withExpirationModel(ExpirationModelType expirationModel) {
 
     /**
      * <p>
-     * The CMK's manager. CMKs are either customer managed or AWS managed. For
+     * The CMK's manager. CMKs are either customer-managed or AWS-managed. For
      * more information about the difference, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys"
      * >Customer Master Keys</a> in the <i>AWS Key Management Service Developer
@@ -1197,8 +1405,9 @@ public KeyMetadata withExpirationModel(ExpirationModelType expirationModel) {
      * <b>Allowed Values: </b>AWS, CUSTOMER
      *
      * @return <p>
-     *         The CMK's manager. CMKs are either customer managed or AWS
-     *         managed. For more information about the difference, see <a href=
+     *         The CMK's manager. CMKs are either customer-managed or
+     *         AWS-managed. For more information about the difference, see <a
+     *         href=
      *         "http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys"
      *         >Customer Master Keys</a> in the <i>AWS Key Management Service
      *         Developer Guide</i>.
@@ -1211,7 +1420,7 @@ public String getKeyManager() {
 
     /**
      * <p>
-     * The CMK's manager. CMKs are either customer managed or AWS managed. For
+     * The CMK's manager. CMKs are either customer-managed or AWS-managed. For
      * more information about the difference, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys"
      * >Customer Master Keys</a> in the <i>AWS Key Management Service Developer
@@ -1222,8 +1431,8 @@ public String getKeyManager() {
      * <b>Allowed Values: </b>AWS, CUSTOMER
      *
      * @param keyManager <p>
-     *            The CMK's manager. CMKs are either customer managed or AWS
-     *            managed. For more information about the difference, see <a
+     *            The CMK's manager. CMKs are either customer-managed or
+     *            AWS-managed. For more information about the difference, see <a
      *            href=
      *            "http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys"
      *            >Customer Master Keys</a> in the <i>AWS Key Management Service
@@ -1237,7 +1446,7 @@ public void setKeyManager(String keyManager) {
 
     /**
      * <p>
-     * The CMK's manager. CMKs are either customer managed or AWS managed. For
+     * The CMK's manager. CMKs are either customer-managed or AWS-managed. For
      * more information about the difference, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys"
      * >Customer Master Keys</a> in the <i>AWS Key Management Service Developer
@@ -1251,8 +1460,8 @@ public void setKeyManager(String keyManager) {
      * <b>Allowed Values: </b>AWS, CUSTOMER
      *
      * @param keyManager <p>
-     *            The CMK's manager. CMKs are either customer managed or AWS
-     *            managed. For more information about the difference, see <a
+     *            The CMK's manager. CMKs are either customer-managed or
+     *            AWS-managed. For more information about the difference, see <a
      *            href=
      *            "http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys"
      *            >Customer Master Keys</a> in the <i>AWS Key Management Service
@@ -1269,7 +1478,7 @@ public KeyMetadata withKeyManager(String keyManager) {
 
     /**
      * <p>
-     * The CMK's manager. CMKs are either customer managed or AWS managed. For
+     * The CMK's manager. CMKs are either customer-managed or AWS-managed. For
      * more information about the difference, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys"
      * >Customer Master Keys</a> in the <i>AWS Key Management Service Developer
@@ -1280,8 +1489,8 @@ public KeyMetadata withKeyManager(String keyManager) {
      * <b>Allowed Values: </b>AWS, CUSTOMER
      *
      * @param keyManager <p>
-     *            The CMK's manager. CMKs are either customer managed or AWS
-     *            managed. For more information about the difference, see <a
+     *            The CMK's manager. CMKs are either customer-managed or
+     *            AWS-managed. For more information about the difference, see <a
      *            href=
      *            "http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys"
      *            >Customer Master Keys</a> in the <i>AWS Key Management Service
@@ -1295,7 +1504,7 @@ public void setKeyManager(KeyManagerType keyManager) {
 
     /**
      * <p>
-     * The CMK's manager. CMKs are either customer managed or AWS managed. For
+     * The CMK's manager. CMKs are either customer-managed or AWS-managed. For
      * more information about the difference, see <a href=
      * "http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys"
      * >Customer Master Keys</a> in the <i>AWS Key Management Service Developer
@@ -1309,8 +1518,8 @@ public void setKeyManager(KeyManagerType keyManager) {
      * <b>Allowed Values: </b>AWS, CUSTOMER
      *
      * @param keyManager <p>
-     *            The CMK's manager. CMKs are either customer managed or AWS
-     *            managed. For more information about the difference, see <a
+     *            The CMK's manager. CMKs are either customer-managed or
+     *            AWS-managed. For more information about the difference, see <a
      *            href=
      *            "http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys"
      *            >Customer Master Keys</a> in the <i>AWS Key Management Service
@@ -1358,6 +1567,10 @@ public String toString() {
             sb.append("ValidTo: " + getValidTo() + ",");
         if (getOrigin() != null)
             sb.append("Origin: " + getOrigin() + ",");
+        if (getCustomKeyStoreId() != null)
+            sb.append("CustomKeyStoreId: " + getCustomKeyStoreId() + ",");
+        if (getCloudHsmClusterId() != null)
+            sb.append("CloudHsmClusterId: " + getCloudHsmClusterId() + ",");
         if (getExpirationModel() != null)
             sb.append("ExpirationModel: " + getExpirationModel() + ",");
         if (getKeyManager() != null)
@@ -1386,6 +1599,10 @@ public int hashCode() {
                 + ((getDeletionDate() == null) ? 0 : getDeletionDate().hashCode());
         hashCode = prime * hashCode + ((getValidTo() == null) ? 0 : getValidTo().hashCode());
         hashCode = prime * hashCode + ((getOrigin() == null) ? 0 : getOrigin().hashCode());
+        hashCode = prime * hashCode
+                + ((getCustomKeyStoreId() == null) ? 0 : getCustomKeyStoreId().hashCode());
+        hashCode = prime * hashCode
+                + ((getCloudHsmClusterId() == null) ? 0 : getCloudHsmClusterId().hashCode());
         hashCode = prime * hashCode
                 + ((getExpirationModel() == null) ? 0 : getExpirationModel().hashCode());
         hashCode = prime * hashCode + ((getKeyManager() == null) ? 0 : getKeyManager().hashCode());
@@ -1451,6 +1668,16 @@ public boolean equals(Object obj) {
             return false;
         if (other.getOrigin() != null && other.getOrigin().equals(this.getOrigin()) == false)
             return false;
+        if (other.getCustomKeyStoreId() == null ^ this.getCustomKeyStoreId() == null)
+            return false;
+        if (other.getCustomKeyStoreId() != null
+                && other.getCustomKeyStoreId().equals(this.getCustomKeyStoreId()) == false)
+            return false;
+        if (other.getCloudHsmClusterId() == null ^ this.getCloudHsmClusterId() == null)
+            return false;
+        if (other.getCloudHsmClusterId() != null
+                && other.getCloudHsmClusterId().equals(this.getCloudHsmClusterId()) == false)
+            return false;
         if (other.getExpirationModel() == null ^ this.getExpirationModel() == null)
             return false;
         if (other.getExpirationModel() != null
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/KeyState.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/KeyState.java
index e8cb908010..baad2f4fd4 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/KeyState.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/KeyState.java
@@ -26,7 +26,8 @@
     Enabled("Enabled"),
     Disabled("Disabled"),
     PendingDeletion("PendingDeletion"),
-    PendingImport("PendingImport");
+    PendingImport("PendingImport"),
+    Unavailable("Unavailable");
 
     private String value;
 
@@ -46,6 +47,7 @@ public String toString() {
         enumMap.put("Disabled", Disabled);
         enumMap.put("PendingDeletion", PendingDeletion);
         enumMap.put("PendingImport", PendingImport);
+        enumMap.put("Unavailable", Unavailable);
     }
 
     /**
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ListAliasesRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ListAliasesRequest.java
index 192481ed51..269da06aaf 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ListAliasesRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ListAliasesRequest.java
@@ -21,27 +21,21 @@
 
 /**
  * <p>
- * Gets a list of aliases in the caller's AWS account and region. You cannot
+ * Gets a list of all aliases in the caller's AWS account and region. You cannot
  * list aliases in other accounts. For more information about aliases, see
  * <a>CreateAlias</a>.
  * </p>
  * <p>
- * By default, the ListAliases command returns all aliases in the account and
- * region. To get only the aliases that point to a particular customer master
- * key (CMK), use the <code>KeyId</code> parameter.
+ * By default, the <code>ListAliases</code> command returns all aliases in the
+ * account and region. To get only the aliases that point to a particular
+ * customer master key (CMK), use the <code>KeyId</code> parameter.
  * </p>
  * <p>
- * The <code>ListAliases</code> response can include aliases that you created
- * and associated with your customer managed CMKs, and aliases that AWS created
- * and associated with AWS managed CMKs in your account. You can recognize AWS
- * aliases because their names have the format
- * <code>aws/&lt;service-name&gt;</code>, such as <code>aws/dynamodb</code>.
- * </p>
- * <p>
- * The response might also include aliases that have no <code>TargetKeyId</code>
- * field. These are predefined aliases that AWS has created but has not yet
- * associated with a CMK. Aliases that AWS creates in your account, including
- * predefined aliases, do not count against your <a href=
+ * The <code>ListAliases</code> response might include several aliases have no
+ * <code>TargetKeyId</code> field. These are predefined aliases that AWS has
+ * created but has not yet associated with a CMK. Aliases that AWS creates in
+ * your account, including predefined aliases, do not count against your <a
+ * href=
  * "http://docs.aws.amazon.com/kms/latest/developerguide/limits.html#aliases-limit"
  * >AWS KMS aliases limit</a>.
  * </p>
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ListRetirableGrantsRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ListRetirableGrantsRequest.java
index b0d90436d5..d0ef6a1521 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ListRetirableGrantsRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ListRetirableGrantsRequest.java
@@ -77,6 +77,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      */
     private String retiringPrincipal;
 
@@ -265,6 +266,7 @@ public ListRetirableGrantsRequest withMarker(String marker) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @return <p>
      *         The retiring principal for which to list grants.
@@ -303,6 +305,7 @@ public String getRetiringPrincipal() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @param retiringPrincipal <p>
      *            The retiring principal for which to list grants.
@@ -345,6 +348,7 @@ public void setRetiringPrincipal(String retiringPrincipal) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^[\w+=,.@:/-]+$<br/>
      *
      * @param retiringPrincipal <p>
      *            The retiring principal for which to list grants.
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/OriginType.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/OriginType.java
index 5acff67d2f..601df845e6 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/OriginType.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/OriginType.java
@@ -24,7 +24,8 @@
 public enum OriginType {
 
     AWS_KMS("AWS_KMS"),
-    EXTERNAL("EXTERNAL");
+    EXTERNAL("EXTERNAL"),
+    AWS_CLOUDHSM("AWS_CLOUDHSM");
 
     private String value;
 
@@ -42,6 +43,7 @@ public String toString() {
         enumMap = new HashMap<String, OriginType>();
         enumMap.put("AWS_KMS", AWS_KMS);
         enumMap.put("EXTERNAL", EXTERNAL);
+        enumMap.put("AWS_CLOUDHSM", AWS_CLOUDHSM);
     }
 
     /**
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/PutKeyPolicyRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/PutKeyPolicyRequest.java
index e8a08593c3..35bc66f7d6 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/PutKeyPolicyRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/PutKeyPolicyRequest.java
@@ -102,8 +102,8 @@
      * principals in the key policy must exist and be visible to AWS KMS. When
      * you create a new AWS principal (for example, an IAM user or role), you
      * might need to enforce a delay before including the new principal in a key
-     * policy. The reason for this is that the new principal might not be
-     * immediately visible to AWS KMS. For more information, see <a href=
+     * policy because the new principal might not be immediately visible to AWS
+     * KMS. For more information, see <a href=
      * "http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency"
      * >Changes that I make are not always immediately visible</a> in the <i>AWS
      * Identity and Access Management User Guide</i>.
@@ -428,8 +428,8 @@ public PutKeyPolicyRequest withPolicyName(String policyName) {
      * principals in the key policy must exist and be visible to AWS KMS. When
      * you create a new AWS principal (for example, an IAM user or role), you
      * might need to enforce a delay before including the new principal in a key
-     * policy. The reason for this is that the new principal might not be
-     * immediately visible to AWS KMS. For more information, see <a href=
+     * policy because the new principal might not be immediately visible to AWS
+     * KMS. For more information, see <a href=
      * "http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency"
      * >Changes that I make are not always immediately visible</a> in the <i>AWS
      * Identity and Access Management User Guide</i>.
@@ -470,9 +470,9 @@ public PutKeyPolicyRequest withPolicyName(String policyName) {
      *         principals. The principals in the key policy must exist and be
      *         visible to AWS KMS. When you create a new AWS principal (for
      *         example, an IAM user or role), you might need to enforce a delay
-     *         before including the new principal in a key policy. The reason
-     *         for this is that the new principal might not be immediately
-     *         visible to AWS KMS. For more information, see <a href=
+     *         before including the new principal in a key policy because the
+     *         new principal might not be immediately visible to AWS KMS. For
+     *         more information, see <a href=
      *         "http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency"
      *         >Changes that I make are not always immediately visible</a> in
      *         the <i>AWS Identity and Access Management User Guide</i>.
@@ -514,8 +514,8 @@ public String getPolicy() {
      * principals in the key policy must exist and be visible to AWS KMS. When
      * you create a new AWS principal (for example, an IAM user or role), you
      * might need to enforce a delay before including the new principal in a key
-     * policy. The reason for this is that the new principal might not be
-     * immediately visible to AWS KMS. For more information, see <a href=
+     * policy because the new principal might not be immediately visible to AWS
+     * KMS. For more information, see <a href=
      * "http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency"
      * >Changes that I make are not always immediately visible</a> in the <i>AWS
      * Identity and Access Management User Guide</i>.
@@ -556,10 +556,9 @@ public String getPolicy() {
      *            principals. The principals in the key policy must exist and be
      *            visible to AWS KMS. When you create a new AWS principal (for
      *            example, an IAM user or role), you might need to enforce a
-     *            delay before including the new principal in a key policy. The
-     *            reason for this is that the new principal might not be
-     *            immediately visible to AWS KMS. For more information, see <a
-     *            href=
+     *            delay before including the new principal in a key policy
+     *            because the new principal might not be immediately visible to
+     *            AWS KMS. For more information, see <a href=
      *            "http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency"
      *            >Changes that I make are not always immediately visible</a> in
      *            the <i>AWS Identity and Access Management User Guide</i>.
@@ -601,8 +600,8 @@ public void setPolicy(String policy) {
      * principals in the key policy must exist and be visible to AWS KMS. When
      * you create a new AWS principal (for example, an IAM user or role), you
      * might need to enforce a delay before including the new principal in a key
-     * policy. The reason for this is that the new principal might not be
-     * immediately visible to AWS KMS. For more information, see <a href=
+     * policy because the new principal might not be immediately visible to AWS
+     * KMS. For more information, see <a href=
      * "http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency"
      * >Changes that I make are not always immediately visible</a> in the <i>AWS
      * Identity and Access Management User Guide</i>.
@@ -646,10 +645,9 @@ public void setPolicy(String policy) {
      *            principals. The principals in the key policy must exist and be
      *            visible to AWS KMS. When you create a new AWS principal (for
      *            example, an IAM user or role), you might need to enforce a
-     *            delay before including the new principal in a key policy. The
-     *            reason for this is that the new principal might not be
-     *            immediately visible to AWS KMS. For more information, see <a
-     *            href=
+     *            delay before including the new principal in a key policy
+     *            because the new principal might not be immediately visible to
+     *            AWS KMS. For more information, see <a href=
      *            "http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency"
      *            >Changes that I make are not always immediately visible</a> in
      *            the <i>AWS Identity and Access Management User Guide</i>.
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ReEncryptRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ReEncryptRequest.java
index 04a96df06d..fe7d0ac5e8 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ReEncryptRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ReEncryptRequest.java
@@ -37,7 +37,7 @@
  * "http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">key
  * policies</a> to permit reencryption from or to the CMK. This permission is
  * automatically included in the key policy when you create a CMK through the
- * console. But you must include it manually when you create a CMK
+ * console, but you must include it manually when you create a CMK
  * programmatically or when you set a key policy with the <a>PutKeyPolicy</a>
  * operation.
  * </p>
@@ -74,9 +74,9 @@
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -286,9 +286,9 @@ public ReEncryptRequest clearSourceEncryptionContextEntries() {
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -333,8 +333,8 @@ public ReEncryptRequest clearSourceEncryptionContextEntries() {
      *         <p>
      *         To specify a CMK, use its key ID, Amazon Resource Name (ARN),
      *         alias name, or alias ARN. When using an alias name, prefix it
-     *         with <code>"alias/"</code>. To specify a CMK in a different AWS
-     *         account, you must use the key ARN or alias ARN.
+     *         with "alias/". To specify a CMK in a different AWS account, you
+     *         must use the key ARN or alias ARN.
      *         </p>
      *         <p>
      *         For example:
@@ -379,9 +379,9 @@ public String getDestinationKeyId() {
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -426,8 +426,8 @@ public String getDestinationKeyId() {
      *            <p>
      *            To specify a CMK, use its key ID, Amazon Resource Name (ARN),
      *            alias name, or alias ARN. When using an alias name, prefix it
-     *            with <code>"alias/"</code>. To specify a CMK in a different
-     *            AWS account, you must use the key ARN or alias ARN.
+     *            with "alias/". To specify a CMK in a different AWS account,
+     *            you must use the key ARN or alias ARN.
      *            </p>
      *            <p>
      *            For example:
@@ -472,9 +472,9 @@ public void setDestinationKeyId(String destinationKeyId) {
      * </p>
      * <p>
      * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name,
-     * or alias ARN. When using an alias name, prefix it with
-     * <code>"alias/"</code>. To specify a CMK in a different AWS account, you
-     * must use the key ARN or alias ARN.
+     * or alias ARN. When using an alias name, prefix it with "alias/". To
+     * specify a CMK in a different AWS account, you must use the key ARN or
+     * alias ARN.
      * </p>
      * <p>
      * For example:
@@ -522,8 +522,8 @@ public void setDestinationKeyId(String destinationKeyId) {
      *            <p>
      *            To specify a CMK, use its key ID, Amazon Resource Name (ARN),
      *            alias name, or alias ARN. When using an alias name, prefix it
-     *            with <code>"alias/"</code>. To specify a CMK in a different
-     *            AWS account, you must use the key ARN or alias ARN.
+     *            with "alias/". To specify a CMK in a different AWS account,
+     *            you must use the key ARN or alias ARN.
      *            </p>
      *            <p>
      *            For example:
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ReEncryptResult.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ReEncryptResult.java
index 0b55605732..c8aed153e3 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ReEncryptResult.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ReEncryptResult.java
@@ -21,7 +21,7 @@
     /**
      * <p>
      * The reencrypted data. When you use the HTTP API or the AWS CLI, the value
-     * is Base64-encoded. Otherwise, it is not encoded.
+     * is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -52,7 +52,7 @@
     /**
      * <p>
      * The reencrypted data. When you use the HTTP API or the AWS CLI, the value
-     * is Base64-encoded. Otherwise, it is not encoded.
+     * is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -60,7 +60,7 @@
      *
      * @return <p>
      *         The reencrypted data. When you use the HTTP API or the AWS CLI,
-     *         the value is Base64-encoded. Otherwise, it is not encoded.
+     *         the value is Base64-encdoded. Otherwise, it is not encoded.
      *         </p>
      */
     public java.nio.ByteBuffer getCiphertextBlob() {
@@ -70,7 +70,7 @@
     /**
      * <p>
      * The reencrypted data. When you use the HTTP API or the AWS CLI, the value
-     * is Base64-encoded. Otherwise, it is not encoded.
+     * is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -78,7 +78,7 @@
      *
      * @param ciphertextBlob <p>
      *            The reencrypted data. When you use the HTTP API or the AWS
-     *            CLI, the value is Base64-encoded. Otherwise, it is not
+     *            CLI, the value is Base64-encdoded. Otherwise, it is not
      *            encoded.
      *            </p>
      */
@@ -89,7 +89,7 @@ public void setCiphertextBlob(java.nio.ByteBuffer ciphertextBlob) {
     /**
      * <p>
      * The reencrypted data. When you use the HTTP API or the AWS CLI, the value
-     * is Base64-encoded. Otherwise, it is not encoded.
+     * is Base64-encdoded. Otherwise, it is not encoded.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -100,7 +100,7 @@ public void setCiphertextBlob(java.nio.ByteBuffer ciphertextBlob) {
      *
      * @param ciphertextBlob <p>
      *            The reencrypted data. When you use the HTTP API or the AWS
-     *            CLI, the value is Base64-encoded. Otherwise, it is not
+     *            CLI, the value is Base64-encdoded. Otherwise, it is not
      *            encoded.
      *            </p>
      * @return A reference to this updated object so that method calls can be
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ScheduleKeyDeletionRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ScheduleKeyDeletionRequest.java
index baa0f803d1..51f7a34ccc 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ScheduleKeyDeletionRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/ScheduleKeyDeletionRequest.java
@@ -24,24 +24,33 @@
  * Schedules the deletion of a customer master key (CMK). You may provide a
  * waiting period, specified in days, before deletion occurs. If you do not
  * provide a waiting period, the default period of 30 days is used. When this
- * operation is successful, the state of the CMK changes to
+ * operation is successful, the key state of the CMK changes to
  * <code>PendingDeletion</code>. Before the waiting period ends, you can use
  * <a>CancelKeyDeletion</a> to cancel the deletion of the CMK. After the waiting
  * period ends, AWS KMS deletes the CMK and all AWS KMS data associated with it,
  * including all aliases that refer to it.
  * </p>
- * <p>
- * You cannot perform this operation on a CMK in a different AWS account.
- * </p>
  * <important>
  * <p>
  * Deleting a CMK is a destructive and potentially dangerous operation. When a
- * CMK is deleted, all data that was encrypted under the CMK is rendered
- * unrecoverable. To restrict the use of a CMK without deleting it, use
- * <a>DisableKey</a>.
+ * CMK is deleted, all data that was encrypted under the CMK is unrecoverable.
+ * To prevent the use of a CMK without deleting it, use <a>DisableKey</a>.
  * </p>
  * </important>
  * <p>
+ * If you schedule deletion of a CMK from a <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-overview.html"
+ * >custom key store</a>, when the waiting period expires,
+ * <code>ScheduleKeyDeletion</code> deletes the CMK from AWS KMS. Then AWS KMS
+ * makes a best effort to delete the key material from the associated AWS
+ * CloudHSM cluster. However, you might need to manually <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-orphaned-key"
+ * >delete the orphaned key material</a> from the cluster and its backups.
+ * </p>
+ * <p>
+ * You cannot perform this operation on a CMK in a different AWS account.
+ * </p>
+ * <p>
  * For more information about scheduling a CMK for deletion, see <a href=
  * "http://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html"
  * >Deleting Customer Master Keys</a> in the <i>AWS Key Management Service
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/UpdateCustomKeyStoreRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/UpdateCustomKeyStoreRequest.java
new file mode 100644
index 0000000000..725be8b1de
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/UpdateCustomKeyStoreRequest.java
@@ -0,0 +1,594 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Changes the properties of a custom key store. Use the
+ * <code>CustomKeyStoreId</code> parameter to identify the custom key store you
+ * want to edit. Use the remaining parameters to change the properties of the
+ * custom key store.
+ * </p>
+ * <p>
+ * You can only update a custom key store that is disconnected. To disconnect
+ * the custom key store, use <a>DisconnectCustomKeyStore</a>. To reconnect the
+ * custom key store after the update completes, use
+ * <a>ConnectCustomKeyStore</a>. To find the connection state of a custom key
+ * store, use the <a>DescribeCustomKeyStores</a> operation.
+ * </p>
+ * <p>
+ * Use the <code>NewCustomKeyStoreName</code> parameter to change the friendly
+ * name of the custom key store to the value that you specify.
+ * </p>
+ * <p>
+ * Use the <code>KeyStorePassword</code> parameter tell AWS KMS the current
+ * password of the <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"
+ * > <code>kmsuser</code> crypto user (CU)</a> in the associated AWS CloudHSM
+ * cluster. You can use this parameter to fix connection failures that occur
+ * when AWS KMS cannot log into the associated cluster because the
+ * <code>kmsuser</code> password has changed. This value does not change the
+ * password in the AWS CloudHSM cluster.
+ * </p>
+ * <p>
+ * Use the <code>CloudHsmClusterId</code> parameter to associate the custom key
+ * store with a related AWS CloudHSM cluster, that is, a cluster that shares a
+ * backup history with the original cluster. You can use this parameter to
+ * repair a custom key store if its AWS CloudHSM cluster becomes corrupted or is
+ * deleted, or when you need to create or restore a cluster from a backup.
+ * </p>
+ * <p>
+ * The cluster ID must identify a AWS CloudHSM cluster with the following
+ * requirements.
+ * </p>
+ * <ul>
+ * <li>
+ * <p>
+ * The cluster must be active and be in the same AWS account and Region as the
+ * custom key store.
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * The cluster must have the same cluster certificate as the original cluster.
+ * You cannot use this parameter to associate the custom key store with an
+ * unrelated cluster. To view the cluster certificate, use the AWS CloudHSM <a
+ * href=
+ * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+ * >DescribeClusters</a> operation. Clusters that share a backup history have
+ * the same cluster certificate.
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * The cluster must be configured with subnets in at least two different
+ * Availability Zones in the Region. Because AWS CloudHSM is not supported in
+ * all Availability Zones, we recommend that the cluster have subnets in all
+ * Availability Zones in the Region.
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * The cluster must contain at least two active HSMs, each in a different
+ * Availability Zone.
+ * </p>
+ * </li>
+ * </ul>
+ * <p>
+ * If the operation succeeds, it returns a JSON object with no properties.
+ * </p>
+ * <p>
+ * This operation is part of the <a href=
+ * "http://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html"
+ * >Custom Key Store feature</a> feature in AWS KMS, which combines the
+ * convenience and extensive integration of AWS KMS with the isolation and
+ * control of a single-tenant key store.
+ * </p>
+ */
+public class UpdateCustomKeyStoreRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * Identifies the custom key store that you want to update. Enter the ID of
+     * the custom key store. To find the ID of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     */
+    private String customKeyStoreId;
+
+    /**
+     * <p>
+     * Changes the friendly name of the custom key store to the value that you
+     * specify. The custom key store name must be unique in the AWS account.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     */
+    private String newCustomKeyStoreName;
+
+    /**
+     * <p>
+     * Enter the current password of the <code>kmsuser</code> crypto user (CU)
+     * in the AWS CloudHSM cluster that is associated with the custom key store.
+     * </p>
+     * <p>
+     * This parameter tells AWS KMS the current password of the
+     * <code>kmsuser</code> crypto user (CU). It does not set or change the
+     * password of any users in the AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     */
+    private String keyStorePassword;
+
+    /**
+     * <p>
+     * Associates the custom key store with a related AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * Enter the cluster ID of the cluster that you used to create the custom
+     * key store or a cluster that shares a backup history with the original
+     * cluster. You cannot use this parameter to associate a custom key store
+     * with a different cluster.
+     * </p>
+     * <p>
+     * Clusters that share a backup history have the same cluster certificate.
+     * To view the cluster certificate of a cluster, use the <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     * >DescribeClusters</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>19 - 24<br/>
+     */
+    private String cloudHsmClusterId;
+
+    /**
+     * <p>
+     * Identifies the custom key store that you want to update. Enter the ID of
+     * the custom key store. To find the ID of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @return <p>
+     *         Identifies the custom key store that you want to update. Enter
+     *         the ID of the custom key store. To find the ID of a custom key
+     *         store, use the <a>DescribeCustomKeyStores</a> operation.
+     *         </p>
+     */
+    public String getCustomKeyStoreId() {
+        return customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * Identifies the custom key store that you want to update. Enter the ID of
+     * the custom key store. To find the ID of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            Identifies the custom key store that you want to update. Enter
+     *            the ID of the custom key store. To find the ID of a custom key
+     *            store, use the <a>DescribeCustomKeyStores</a> operation.
+     *            </p>
+     */
+    public void setCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+    }
+
+    /**
+     * <p>
+     * Identifies the custom key store that you want to update. Enter the ID of
+     * the custom key store. To find the ID of a custom key store, use the
+     * <a>DescribeCustomKeyStores</a> operation.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     *
+     * @param customKeyStoreId <p>
+     *            Identifies the custom key store that you want to update. Enter
+     *            the ID of the custom key store. To find the ID of a custom key
+     *            store, use the <a>DescribeCustomKeyStores</a> operation.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateCustomKeyStoreRequest withCustomKeyStoreId(String customKeyStoreId) {
+        this.customKeyStoreId = customKeyStoreId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Changes the friendly name of the custom key store to the value that you
+     * specify. The custom key store name must be unique in the AWS account.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     *
+     * @return <p>
+     *         Changes the friendly name of the custom key store to the value
+     *         that you specify. The custom key store name must be unique in the
+     *         AWS account.
+     *         </p>
+     */
+    public String getNewCustomKeyStoreName() {
+        return newCustomKeyStoreName;
+    }
+
+    /**
+     * <p>
+     * Changes the friendly name of the custom key store to the value that you
+     * specify. The custom key store name must be unique in the AWS account.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     *
+     * @param newCustomKeyStoreName <p>
+     *            Changes the friendly name of the custom key store to the value
+     *            that you specify. The custom key store name must be unique in
+     *            the AWS account.
+     *            </p>
+     */
+    public void setNewCustomKeyStoreName(String newCustomKeyStoreName) {
+        this.newCustomKeyStoreName = newCustomKeyStoreName;
+    }
+
+    /**
+     * <p>
+     * Changes the friendly name of the custom key store to the value that you
+     * specify. The custom key store name must be unique in the AWS account.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     *
+     * @param newCustomKeyStoreName <p>
+     *            Changes the friendly name of the custom key store to the value
+     *            that you specify. The custom key store name must be unique in
+     *            the AWS account.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateCustomKeyStoreRequest withNewCustomKeyStoreName(String newCustomKeyStoreName) {
+        this.newCustomKeyStoreName = newCustomKeyStoreName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Enter the current password of the <code>kmsuser</code> crypto user (CU)
+     * in the AWS CloudHSM cluster that is associated with the custom key store.
+     * </p>
+     * <p>
+     * This parameter tells AWS KMS the current password of the
+     * <code>kmsuser</code> crypto user (CU). It does not set or change the
+     * password of any users in the AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     *
+     * @return <p>
+     *         Enter the current password of the <code>kmsuser</code> crypto
+     *         user (CU) in the AWS CloudHSM cluster that is associated with the
+     *         custom key store.
+     *         </p>
+     *         <p>
+     *         This parameter tells AWS KMS the current password of the
+     *         <code>kmsuser</code> crypto user (CU). It does not set or change
+     *         the password of any users in the AWS CloudHSM cluster.
+     *         </p>
+     */
+    public String getKeyStorePassword() {
+        return keyStorePassword;
+    }
+
+    /**
+     * <p>
+     * Enter the current password of the <code>kmsuser</code> crypto user (CU)
+     * in the AWS CloudHSM cluster that is associated with the custom key store.
+     * </p>
+     * <p>
+     * This parameter tells AWS KMS the current password of the
+     * <code>kmsuser</code> crypto user (CU). It does not set or change the
+     * password of any users in the AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     *
+     * @param keyStorePassword <p>
+     *            Enter the current password of the <code>kmsuser</code> crypto
+     *            user (CU) in the AWS CloudHSM cluster that is associated with
+     *            the custom key store.
+     *            </p>
+     *            <p>
+     *            This parameter tells AWS KMS the current password of the
+     *            <code>kmsuser</code> crypto user (CU). It does not set or
+     *            change the password of any users in the AWS CloudHSM cluster.
+     *            </p>
+     */
+    public void setKeyStorePassword(String keyStorePassword) {
+        this.keyStorePassword = keyStorePassword;
+    }
+
+    /**
+     * <p>
+     * Enter the current password of the <code>kmsuser</code> crypto user (CU)
+     * in the AWS CloudHSM cluster that is associated with the custom key store.
+     * </p>
+     * <p>
+     * This parameter tells AWS KMS the current password of the
+     * <code>kmsuser</code> crypto user (CU). It does not set or change the
+     * password of any users in the AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     *
+     * @param keyStorePassword <p>
+     *            Enter the current password of the <code>kmsuser</code> crypto
+     *            user (CU) in the AWS CloudHSM cluster that is associated with
+     *            the custom key store.
+     *            </p>
+     *            <p>
+     *            This parameter tells AWS KMS the current password of the
+     *            <code>kmsuser</code> crypto user (CU). It does not set or
+     *            change the password of any users in the AWS CloudHSM cluster.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateCustomKeyStoreRequest withKeyStorePassword(String keyStorePassword) {
+        this.keyStorePassword = keyStorePassword;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Associates the custom key store with a related AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * Enter the cluster ID of the cluster that you used to create the custom
+     * key store or a cluster that shares a backup history with the original
+     * cluster. You cannot use this parameter to associate a custom key store
+     * with a different cluster.
+     * </p>
+     * <p>
+     * Clusters that share a backup history have the same cluster certificate.
+     * To view the cluster certificate of a cluster, use the <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     * >DescribeClusters</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>19 - 24<br/>
+     *
+     * @return <p>
+     *         Associates the custom key store with a related AWS CloudHSM
+     *         cluster.
+     *         </p>
+     *         <p>
+     *         Enter the cluster ID of the cluster that you used to create the
+     *         custom key store or a cluster that shares a backup history with
+     *         the original cluster. You cannot use this parameter to associate
+     *         a custom key store with a different cluster.
+     *         </p>
+     *         <p>
+     *         Clusters that share a backup history have the same cluster
+     *         certificate. To view the cluster certificate of a cluster, use
+     *         the <a href=
+     *         "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     *         >DescribeClusters</a> operation.
+     *         </p>
+     */
+    public String getCloudHsmClusterId() {
+        return cloudHsmClusterId;
+    }
+
+    /**
+     * <p>
+     * Associates the custom key store with a related AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * Enter the cluster ID of the cluster that you used to create the custom
+     * key store or a cluster that shares a backup history with the original
+     * cluster. You cannot use this parameter to associate a custom key store
+     * with a different cluster.
+     * </p>
+     * <p>
+     * Clusters that share a backup history have the same cluster certificate.
+     * To view the cluster certificate of a cluster, use the <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     * >DescribeClusters</a> operation.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>19 - 24<br/>
+     *
+     * @param cloudHsmClusterId <p>
+     *            Associates the custom key store with a related AWS CloudHSM
+     *            cluster.
+     *            </p>
+     *            <p>
+     *            Enter the cluster ID of the cluster that you used to create
+     *            the custom key store or a cluster that shares a backup history
+     *            with the original cluster. You cannot use this parameter to
+     *            associate a custom key store with a different cluster.
+     *            </p>
+     *            <p>
+     *            Clusters that share a backup history have the same cluster
+     *            certificate. To view the cluster certificate of a cluster, use
+     *            the <a href=
+     *            "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     *            >DescribeClusters</a> operation.
+     *            </p>
+     */
+    public void setCloudHsmClusterId(String cloudHsmClusterId) {
+        this.cloudHsmClusterId = cloudHsmClusterId;
+    }
+
+    /**
+     * <p>
+     * Associates the custom key store with a related AWS CloudHSM cluster.
+     * </p>
+     * <p>
+     * Enter the cluster ID of the cluster that you used to create the custom
+     * key store or a cluster that shares a backup history with the original
+     * cluster. You cannot use this parameter to associate a custom key store
+     * with a different cluster.
+     * </p>
+     * <p>
+     * Clusters that share a backup history have the same cluster certificate.
+     * To view the cluster certificate of a cluster, use the <a href=
+     * "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     * >DescribeClusters</a> operation.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>19 - 24<br/>
+     *
+     * @param cloudHsmClusterId <p>
+     *            Associates the custom key store with a related AWS CloudHSM
+     *            cluster.
+     *            </p>
+     *            <p>
+     *            Enter the cluster ID of the cluster that you used to create
+     *            the custom key store or a cluster that shares a backup history
+     *            with the original cluster. You cannot use this parameter to
+     *            associate a custom key store with a different cluster.
+     *            </p>
+     *            <p>
+     *            Clusters that share a backup history have the same cluster
+     *            certificate. To view the cluster certificate of a cluster, use
+     *            the <a href=
+     *            "http://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html"
+     *            >DescribeClusters</a> operation.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateCustomKeyStoreRequest withCloudHsmClusterId(String cloudHsmClusterId) {
+        this.cloudHsmClusterId = cloudHsmClusterId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getCustomKeyStoreId() != null)
+            sb.append("CustomKeyStoreId: " + getCustomKeyStoreId() + ",");
+        if (getNewCustomKeyStoreName() != null)
+            sb.append("NewCustomKeyStoreName: " + getNewCustomKeyStoreName() + ",");
+        if (getKeyStorePassword() != null)
+            sb.append("KeyStorePassword: " + getKeyStorePassword() + ",");
+        if (getCloudHsmClusterId() != null)
+            sb.append("CloudHsmClusterId: " + getCloudHsmClusterId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getCustomKeyStoreId() == null) ? 0 : getCustomKeyStoreId().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getNewCustomKeyStoreName() == null) ? 0 : getNewCustomKeyStoreName().hashCode());
+        hashCode = prime * hashCode
+                + ((getKeyStorePassword() == null) ? 0 : getKeyStorePassword().hashCode());
+        hashCode = prime * hashCode
+                + ((getCloudHsmClusterId() == null) ? 0 : getCloudHsmClusterId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateCustomKeyStoreRequest == false)
+            return false;
+        UpdateCustomKeyStoreRequest other = (UpdateCustomKeyStoreRequest) obj;
+
+        if (other.getCustomKeyStoreId() == null ^ this.getCustomKeyStoreId() == null)
+            return false;
+        if (other.getCustomKeyStoreId() != null
+                && other.getCustomKeyStoreId().equals(this.getCustomKeyStoreId()) == false)
+            return false;
+        if (other.getNewCustomKeyStoreName() == null ^ this.getNewCustomKeyStoreName() == null)
+            return false;
+        if (other.getNewCustomKeyStoreName() != null
+                && other.getNewCustomKeyStoreName().equals(this.getNewCustomKeyStoreName()) == false)
+            return false;
+        if (other.getKeyStorePassword() == null ^ this.getKeyStorePassword() == null)
+            return false;
+        if (other.getKeyStorePassword() != null
+                && other.getKeyStorePassword().equals(this.getKeyStorePassword()) == false)
+            return false;
+        if (other.getCloudHsmClusterId() == null ^ this.getCloudHsmClusterId() == null)
+            return false;
+        if (other.getCloudHsmClusterId() != null
+                && other.getCloudHsmClusterId().equals(this.getCloudHsmClusterId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/UpdateCustomKeyStoreResult.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/UpdateCustomKeyStoreResult.java
new file mode 100644
index 0000000000..60ff053404
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/UpdateCustomKeyStoreResult.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model;
+
+import java.io.Serializable;
+
+public class UpdateCustomKeyStoreResult implements Serializable {
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateCustomKeyStoreResult == false)
+            return false;
+        UpdateCustomKeyStoreResult other = (UpdateCustomKeyStoreResult) obj;
+
+        return true;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/UpdateKeyDescriptionRequest.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/UpdateKeyDescriptionRequest.java
index de98efb337..3fd0839d4c 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/UpdateKeyDescriptionRequest.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/UpdateKeyDescriptionRequest.java
@@ -21,8 +21,8 @@
 
 /**
  * <p>
- * Updates the description of a customer master key (CMK). To see the
- * description of a CMK, use <a>DescribeKey</a>.
+ * Updates the description of a customer master key (CMK). To see the decription
+ * of a CMK, use <a>DescribeKey</a>.
  * </p>
  * <p>
  * You cannot perform this operation on a CMK in a different AWS account.
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/AliasListEntryJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/AliasListEntryJsonUnmarshaller.java
index 6a2acaeb7a..7533a2459b 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/AliasListEntryJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/AliasListEntryJsonUnmarshaller.java
@@ -40,11 +40,11 @@ public AliasListEntry unmarshall(JsonUnmarshallerContext context) throws Excepti
                 aliasListEntry.setAliasName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("AliasArn")) {
-                aliasListEntry
-                        .setAliasArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aliasListEntry.setAliasArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TargetKeyId")) {
-                aliasListEntry.setTargetKeyId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aliasListEntry.setTargetKeyId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/AlreadyExistsExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/AlreadyExistsExceptionUnmarshaller.java
index 067a333766..93fbce6900 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/AlreadyExistsExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/AlreadyExistsExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.AlreadyExistsException;
 
 public class AlreadyExistsExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public AlreadyExistsException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        AlreadyExistsException alreadyExistsException = new AlreadyExistsException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                alreadyExistsException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return alreadyExistsException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CancelKeyDeletionResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CancelKeyDeletionResultJsonUnmarshaller.java
index 82e34a6c7b..0a65b63118 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CancelKeyDeletionResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CancelKeyDeletionResultJsonUnmarshaller.java
@@ -34,8 +34,8 @@ public CancelKeyDeletionResult unmarshall(JsonUnmarshallerContext context) throw
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("KeyId")) {
-                cancelKeyDeletionResult.setKeyId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                cancelKeyDeletionResult.setKeyId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CloudHsmClusterInUseExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CloudHsmClusterInUseExceptionUnmarshaller.java
new file mode 100644
index 0000000000..25d7386ad8
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CloudHsmClusterInUseExceptionUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.AmazonServiceException;
+import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
+import com.amazonaws.transform.JsonErrorUnmarshaller;
+import com.amazonaws.services.kms.model.CloudHsmClusterInUseException;
+
+public class CloudHsmClusterInUseExceptionUnmarshaller extends JsonErrorUnmarshaller {
+
+    public CloudHsmClusterInUseExceptionUnmarshaller() {
+        super(CloudHsmClusterInUseException.class);
+    }
+
+    @Override
+    public boolean match(JsonErrorResponse error) throws Exception {
+        return error.getErrorCode().equals("CloudHsmClusterInUseException");
+    }
+
+    @Override
+    public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
+
+        CloudHsmClusterInUseException e = (CloudHsmClusterInUseException) super.unmarshall(error);
+        e.setErrorCode("CloudHsmClusterInUseException");
+
+        return e;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CloudHsmClusterInvalidConfigurationExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CloudHsmClusterInvalidConfigurationExceptionUnmarshaller.java
new file mode 100644
index 0000000000..8ae4b23451
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CloudHsmClusterInvalidConfigurationExceptionUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.AmazonServiceException;
+import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
+import com.amazonaws.transform.JsonErrorUnmarshaller;
+import com.amazonaws.services.kms.model.CloudHsmClusterInvalidConfigurationException;
+
+public class CloudHsmClusterInvalidConfigurationExceptionUnmarshaller extends JsonErrorUnmarshaller {
+
+    public CloudHsmClusterInvalidConfigurationExceptionUnmarshaller() {
+        super(CloudHsmClusterInvalidConfigurationException.class);
+    }
+
+    @Override
+    public boolean match(JsonErrorResponse error) throws Exception {
+        return error.getErrorCode().equals("CloudHsmClusterInvalidConfigurationException");
+    }
+
+    @Override
+    public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
+
+        CloudHsmClusterInvalidConfigurationException e = (CloudHsmClusterInvalidConfigurationException) super
+                .unmarshall(error);
+        e.setErrorCode("CloudHsmClusterInvalidConfigurationException");
+
+        return e;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CloudHsmClusterNotActiveExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CloudHsmClusterNotActiveExceptionUnmarshaller.java
new file mode 100644
index 0000000000..c8029e64d7
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CloudHsmClusterNotActiveExceptionUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.AmazonServiceException;
+import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
+import com.amazonaws.transform.JsonErrorUnmarshaller;
+import com.amazonaws.services.kms.model.CloudHsmClusterNotActiveException;
+
+public class CloudHsmClusterNotActiveExceptionUnmarshaller extends JsonErrorUnmarshaller {
+
+    public CloudHsmClusterNotActiveExceptionUnmarshaller() {
+        super(CloudHsmClusterNotActiveException.class);
+    }
+
+    @Override
+    public boolean match(JsonErrorResponse error) throws Exception {
+        return error.getErrorCode().equals("CloudHsmClusterNotActiveException");
+    }
+
+    @Override
+    public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
+
+        CloudHsmClusterNotActiveException e = (CloudHsmClusterNotActiveException) super
+                .unmarshall(error);
+        e.setErrorCode("CloudHsmClusterNotActiveException");
+
+        return e;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CloudHsmClusterNotFoundExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CloudHsmClusterNotFoundExceptionUnmarshaller.java
new file mode 100644
index 0000000000..6f0ebf0994
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CloudHsmClusterNotFoundExceptionUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.AmazonServiceException;
+import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
+import com.amazonaws.transform.JsonErrorUnmarshaller;
+import com.amazonaws.services.kms.model.CloudHsmClusterNotFoundException;
+
+public class CloudHsmClusterNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
+
+    public CloudHsmClusterNotFoundExceptionUnmarshaller() {
+        super(CloudHsmClusterNotFoundException.class);
+    }
+
+    @Override
+    public boolean match(JsonErrorResponse error) throws Exception {
+        return error.getErrorCode().equals("CloudHsmClusterNotFoundException");
+    }
+
+    @Override
+    public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
+
+        CloudHsmClusterNotFoundException e = (CloudHsmClusterNotFoundException) super
+                .unmarshall(error);
+        e.setErrorCode("CloudHsmClusterNotFoundException");
+
+        return e;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CloudHsmClusterNotRelatedExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CloudHsmClusterNotRelatedExceptionUnmarshaller.java
new file mode 100644
index 0000000000..3b8517c2d5
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CloudHsmClusterNotRelatedExceptionUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.AmazonServiceException;
+import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
+import com.amazonaws.transform.JsonErrorUnmarshaller;
+import com.amazonaws.services.kms.model.CloudHsmClusterNotRelatedException;
+
+public class CloudHsmClusterNotRelatedExceptionUnmarshaller extends JsonErrorUnmarshaller {
+
+    public CloudHsmClusterNotRelatedExceptionUnmarshaller() {
+        super(CloudHsmClusterNotRelatedException.class);
+    }
+
+    @Override
+    public boolean match(JsonErrorResponse error) throws Exception {
+        return error.getErrorCode().equals("CloudHsmClusterNotRelatedException");
+    }
+
+    @Override
+    public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
+
+        CloudHsmClusterNotRelatedException e = (CloudHsmClusterNotRelatedException) super
+                .unmarshall(error);
+        e.setErrorCode("CloudHsmClusterNotRelatedException");
+
+        return e;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ConnectCustomKeyStoreRequestMarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ConnectCustomKeyStoreRequestMarshaller.java
new file mode 100644
index 0000000000..e9c33c6651
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ConnectCustomKeyStoreRequestMarshaller.java
@@ -0,0 +1,85 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.kms.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for ConnectCustomKeyStoreRequest
+ */
+public class ConnectCustomKeyStoreRequestMarshaller implements
+        Marshaller<Request<ConnectCustomKeyStoreRequest>, ConnectCustomKeyStoreRequest> {
+
+    public Request<ConnectCustomKeyStoreRequest> marshall(
+            ConnectCustomKeyStoreRequest connectCustomKeyStoreRequest) {
+        if (connectCustomKeyStoreRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(ConnectCustomKeyStoreRequest)");
+        }
+
+        Request<ConnectCustomKeyStoreRequest> request = new DefaultRequest<ConnectCustomKeyStoreRequest>(
+                connectCustomKeyStoreRequest, "AWSKMS");
+        String target = "TrentService.ConnectCustomKeyStore";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (connectCustomKeyStoreRequest.getCustomKeyStoreId() != null) {
+                String customKeyStoreId = connectCustomKeyStoreRequest.getCustomKeyStoreId();
+                jsonWriter.name("CustomKeyStoreId");
+                jsonWriter.value(customKeyStoreId);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ConnectCustomKeyStoreResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ConnectCustomKeyStoreResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..1e9d63e935
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ConnectCustomKeyStoreResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.services.kms.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response ConnectCustomKeyStoreResult
+ */
+public class ConnectCustomKeyStoreResultJsonUnmarshaller implements
+        Unmarshaller<ConnectCustomKeyStoreResult, JsonUnmarshallerContext> {
+
+    public ConnectCustomKeyStoreResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        ConnectCustomKeyStoreResult connectCustomKeyStoreResult = new ConnectCustomKeyStoreResult();
+
+        return connectCustomKeyStoreResult;
+    }
+
+    private static ConnectCustomKeyStoreResultJsonUnmarshaller instance;
+
+    public static ConnectCustomKeyStoreResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new ConnectCustomKeyStoreResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CreateCustomKeyStoreRequestMarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CreateCustomKeyStoreRequestMarshaller.java
new file mode 100644
index 0000000000..6909f29633
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CreateCustomKeyStoreRequestMarshaller.java
@@ -0,0 +1,101 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.kms.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for CreateCustomKeyStoreRequest
+ */
+public class CreateCustomKeyStoreRequestMarshaller implements
+        Marshaller<Request<CreateCustomKeyStoreRequest>, CreateCustomKeyStoreRequest> {
+
+    public Request<CreateCustomKeyStoreRequest> marshall(
+            CreateCustomKeyStoreRequest createCustomKeyStoreRequest) {
+        if (createCustomKeyStoreRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(CreateCustomKeyStoreRequest)");
+        }
+
+        Request<CreateCustomKeyStoreRequest> request = new DefaultRequest<CreateCustomKeyStoreRequest>(
+                createCustomKeyStoreRequest, "AWSKMS");
+        String target = "TrentService.CreateCustomKeyStore";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (createCustomKeyStoreRequest.getCustomKeyStoreName() != null) {
+                String customKeyStoreName = createCustomKeyStoreRequest.getCustomKeyStoreName();
+                jsonWriter.name("CustomKeyStoreName");
+                jsonWriter.value(customKeyStoreName);
+            }
+            if (createCustomKeyStoreRequest.getCloudHsmClusterId() != null) {
+                String cloudHsmClusterId = createCustomKeyStoreRequest.getCloudHsmClusterId();
+                jsonWriter.name("CloudHsmClusterId");
+                jsonWriter.value(cloudHsmClusterId);
+            }
+            if (createCustomKeyStoreRequest.getTrustAnchorCertificate() != null) {
+                String trustAnchorCertificate = createCustomKeyStoreRequest
+                        .getTrustAnchorCertificate();
+                jsonWriter.name("TrustAnchorCertificate");
+                jsonWriter.value(trustAnchorCertificate);
+            }
+            if (createCustomKeyStoreRequest.getKeyStorePassword() != null) {
+                String keyStorePassword = createCustomKeyStoreRequest.getKeyStorePassword();
+                jsonWriter.name("KeyStorePassword");
+                jsonWriter.value(keyStorePassword);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CreateCustomKeyStoreResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CreateCustomKeyStoreResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..51f548a2ec
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CreateCustomKeyStoreResultJsonUnmarshaller.java
@@ -0,0 +1,55 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.services.kms.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response CreateCustomKeyStoreResult
+ */
+public class CreateCustomKeyStoreResultJsonUnmarshaller implements
+        Unmarshaller<CreateCustomKeyStoreResult, JsonUnmarshallerContext> {
+
+    public CreateCustomKeyStoreResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        CreateCustomKeyStoreResult createCustomKeyStoreResult = new CreateCustomKeyStoreResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("CustomKeyStoreId")) {
+                createCustomKeyStoreResult.setCustomKeyStoreId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return createCustomKeyStoreResult;
+    }
+
+    private static CreateCustomKeyStoreResultJsonUnmarshaller instance;
+
+    public static CreateCustomKeyStoreResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new CreateCustomKeyStoreResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CreateGrantResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CreateGrantResultJsonUnmarshaller.java
index e9b51d798e..ba194a4563 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CreateGrantResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CreateGrantResultJsonUnmarshaller.java
@@ -34,11 +34,11 @@ public CreateGrantResult unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("GrantToken")) {
-                createGrantResult.setGrantToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                createGrantResult.setGrantToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("GrantId")) {
-                createGrantResult.setGrantId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                createGrantResult.setGrantId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CreateKeyRequestMarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CreateKeyRequestMarshaller.java
index c9478d47bb..1b4a59f008 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CreateKeyRequestMarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CreateKeyRequestMarshaller.java
@@ -78,6 +78,11 @@
                 jsonWriter.name("Origin");
                 jsonWriter.value(origin);
             }
+            if (createKeyRequest.getCustomKeyStoreId() != null) {
+                String customKeyStoreId = createKeyRequest.getCustomKeyStoreId();
+                jsonWriter.name("CustomKeyStoreId");
+                jsonWriter.value(customKeyStoreId);
+            }
             if (createKeyRequest.getBypassPolicyLockoutSafetyCheck() != null) {
                 Boolean bypassPolicyLockoutSafetyCheck = createKeyRequest
                         .getBypassPolicyLockoutSafetyCheck();
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoreHasCMKsExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoreHasCMKsExceptionUnmarshaller.java
new file mode 100644
index 0000000000..c7ff47a443
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoreHasCMKsExceptionUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.AmazonServiceException;
+import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
+import com.amazonaws.transform.JsonErrorUnmarshaller;
+import com.amazonaws.services.kms.model.CustomKeyStoreHasCMKsException;
+
+public class CustomKeyStoreHasCMKsExceptionUnmarshaller extends JsonErrorUnmarshaller {
+
+    public CustomKeyStoreHasCMKsExceptionUnmarshaller() {
+        super(CustomKeyStoreHasCMKsException.class);
+    }
+
+    @Override
+    public boolean match(JsonErrorResponse error) throws Exception {
+        return error.getErrorCode().equals("CustomKeyStoreHasCMKsException");
+    }
+
+    @Override
+    public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
+
+        CustomKeyStoreHasCMKsException e = (CustomKeyStoreHasCMKsException) super.unmarshall(error);
+        e.setErrorCode("CustomKeyStoreHasCMKsException");
+
+        return e;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoreInvalidStateExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoreInvalidStateExceptionUnmarshaller.java
new file mode 100644
index 0000000000..9730f9c5fc
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoreInvalidStateExceptionUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.AmazonServiceException;
+import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
+import com.amazonaws.transform.JsonErrorUnmarshaller;
+import com.amazonaws.services.kms.model.CustomKeyStoreInvalidStateException;
+
+public class CustomKeyStoreInvalidStateExceptionUnmarshaller extends JsonErrorUnmarshaller {
+
+    public CustomKeyStoreInvalidStateExceptionUnmarshaller() {
+        super(CustomKeyStoreInvalidStateException.class);
+    }
+
+    @Override
+    public boolean match(JsonErrorResponse error) throws Exception {
+        return error.getErrorCode().equals("CustomKeyStoreInvalidStateException");
+    }
+
+    @Override
+    public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
+
+        CustomKeyStoreInvalidStateException e = (CustomKeyStoreInvalidStateException) super
+                .unmarshall(error);
+        e.setErrorCode("CustomKeyStoreInvalidStateException");
+
+        return e;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoreNameInUseExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoreNameInUseExceptionUnmarshaller.java
new file mode 100644
index 0000000000..6ac6b10a6b
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoreNameInUseExceptionUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.AmazonServiceException;
+import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
+import com.amazonaws.transform.JsonErrorUnmarshaller;
+import com.amazonaws.services.kms.model.CustomKeyStoreNameInUseException;
+
+public class CustomKeyStoreNameInUseExceptionUnmarshaller extends JsonErrorUnmarshaller {
+
+    public CustomKeyStoreNameInUseExceptionUnmarshaller() {
+        super(CustomKeyStoreNameInUseException.class);
+    }
+
+    @Override
+    public boolean match(JsonErrorResponse error) throws Exception {
+        return error.getErrorCode().equals("CustomKeyStoreNameInUseException");
+    }
+
+    @Override
+    public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
+
+        CustomKeyStoreNameInUseException e = (CustomKeyStoreNameInUseException) super
+                .unmarshall(error);
+        e.setErrorCode("CustomKeyStoreNameInUseException");
+
+        return e;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoreNotFoundExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoreNotFoundExceptionUnmarshaller.java
new file mode 100644
index 0000000000..b83bdc49d4
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoreNotFoundExceptionUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.AmazonServiceException;
+import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
+import com.amazonaws.transform.JsonErrorUnmarshaller;
+import com.amazonaws.services.kms.model.CustomKeyStoreNotFoundException;
+
+public class CustomKeyStoreNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
+
+    public CustomKeyStoreNotFoundExceptionUnmarshaller() {
+        super(CustomKeyStoreNotFoundException.class);
+    }
+
+    @Override
+    public boolean match(JsonErrorResponse error) throws Exception {
+        return error.getErrorCode().equals("CustomKeyStoreNotFoundException");
+    }
+
+    @Override
+    public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
+
+        CustomKeyStoreNotFoundException e = (CustomKeyStoreNotFoundException) super
+                .unmarshall(error);
+        e.setErrorCode("CustomKeyStoreNotFoundException");
+
+        return e;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoresListEntryJsonMarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoresListEntryJsonMarshaller.java
new file mode 100644
index 0000000000..162d3e56ed
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoresListEntryJsonMarshaller.java
@@ -0,0 +1,74 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.services.kms.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO CustomKeyStoresListEntry
+ */
+class CustomKeyStoresListEntryJsonMarshaller {
+
+    public void marshall(CustomKeyStoresListEntry customKeyStoresListEntry, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (customKeyStoresListEntry.getCustomKeyStoreId() != null) {
+            String customKeyStoreId = customKeyStoresListEntry.getCustomKeyStoreId();
+            jsonWriter.name("CustomKeyStoreId");
+            jsonWriter.value(customKeyStoreId);
+        }
+        if (customKeyStoresListEntry.getCustomKeyStoreName() != null) {
+            String customKeyStoreName = customKeyStoresListEntry.getCustomKeyStoreName();
+            jsonWriter.name("CustomKeyStoreName");
+            jsonWriter.value(customKeyStoreName);
+        }
+        if (customKeyStoresListEntry.getCloudHsmClusterId() != null) {
+            String cloudHsmClusterId = customKeyStoresListEntry.getCloudHsmClusterId();
+            jsonWriter.name("CloudHsmClusterId");
+            jsonWriter.value(cloudHsmClusterId);
+        }
+        if (customKeyStoresListEntry.getTrustAnchorCertificate() != null) {
+            String trustAnchorCertificate = customKeyStoresListEntry.getTrustAnchorCertificate();
+            jsonWriter.name("TrustAnchorCertificate");
+            jsonWriter.value(trustAnchorCertificate);
+        }
+        if (customKeyStoresListEntry.getConnectionState() != null) {
+            String connectionState = customKeyStoresListEntry.getConnectionState();
+            jsonWriter.name("ConnectionState");
+            jsonWriter.value(connectionState);
+        }
+        if (customKeyStoresListEntry.getConnectionErrorCode() != null) {
+            String connectionErrorCode = customKeyStoresListEntry.getConnectionErrorCode();
+            jsonWriter.name("ConnectionErrorCode");
+            jsonWriter.value(connectionErrorCode);
+        }
+        if (customKeyStoresListEntry.getCreationDate() != null) {
+            java.util.Date creationDate = customKeyStoresListEntry.getCreationDate();
+            jsonWriter.name("CreationDate");
+            jsonWriter.value(creationDate);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static CustomKeyStoresListEntryJsonMarshaller instance;
+
+    public static CustomKeyStoresListEntryJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new CustomKeyStoresListEntryJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoresListEntryJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoresListEntryJsonUnmarshaller.java
new file mode 100644
index 0000000000..f2dea78faf
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/CustomKeyStoresListEntryJsonUnmarshaller.java
@@ -0,0 +1,77 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.services.kms.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO CustomKeyStoresListEntry
+ */
+class CustomKeyStoresListEntryJsonUnmarshaller implements
+        Unmarshaller<CustomKeyStoresListEntry, JsonUnmarshallerContext> {
+
+    public CustomKeyStoresListEntry unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        CustomKeyStoresListEntry customKeyStoresListEntry = new CustomKeyStoresListEntry();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("CustomKeyStoreId")) {
+                customKeyStoresListEntry.setCustomKeyStoreId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("CustomKeyStoreName")) {
+                customKeyStoresListEntry.setCustomKeyStoreName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("CloudHsmClusterId")) {
+                customKeyStoresListEntry.setCloudHsmClusterId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("TrustAnchorCertificate")) {
+                customKeyStoresListEntry.setTrustAnchorCertificate(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ConnectionState")) {
+                customKeyStoresListEntry.setConnectionState(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ConnectionErrorCode")) {
+                customKeyStoresListEntry.setConnectionErrorCode(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("CreationDate")) {
+                customKeyStoresListEntry.setCreationDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return customKeyStoresListEntry;
+    }
+
+    private static CustomKeyStoresListEntryJsonUnmarshaller instance;
+
+    public static CustomKeyStoresListEntryJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new CustomKeyStoresListEntryJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DecryptResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DecryptResultJsonUnmarshaller.java
index 2a17f0d429..a10faee7ba 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DecryptResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DecryptResultJsonUnmarshaller.java
@@ -34,10 +34,11 @@ public DecryptResult unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("KeyId")) {
-                decryptResult.setKeyId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                decryptResult.setKeyId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Plaintext")) {
-                decryptResult.setPlaintext(ByteBufferJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                decryptResult.setPlaintext(ByteBufferJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DeleteCustomKeyStoreRequestMarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DeleteCustomKeyStoreRequestMarshaller.java
new file mode 100644
index 0000000000..c5b4d4fd99
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DeleteCustomKeyStoreRequestMarshaller.java
@@ -0,0 +1,85 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.kms.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DeleteCustomKeyStoreRequest
+ */
+public class DeleteCustomKeyStoreRequestMarshaller implements
+        Marshaller<Request<DeleteCustomKeyStoreRequest>, DeleteCustomKeyStoreRequest> {
+
+    public Request<DeleteCustomKeyStoreRequest> marshall(
+            DeleteCustomKeyStoreRequest deleteCustomKeyStoreRequest) {
+        if (deleteCustomKeyStoreRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DeleteCustomKeyStoreRequest)");
+        }
+
+        Request<DeleteCustomKeyStoreRequest> request = new DefaultRequest<DeleteCustomKeyStoreRequest>(
+                deleteCustomKeyStoreRequest, "AWSKMS");
+        String target = "TrentService.DeleteCustomKeyStore";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (deleteCustomKeyStoreRequest.getCustomKeyStoreId() != null) {
+                String customKeyStoreId = deleteCustomKeyStoreRequest.getCustomKeyStoreId();
+                jsonWriter.name("CustomKeyStoreId");
+                jsonWriter.value(customKeyStoreId);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DeleteCustomKeyStoreResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DeleteCustomKeyStoreResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..c2fc24572a
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DeleteCustomKeyStoreResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.services.kms.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DeleteCustomKeyStoreResult
+ */
+public class DeleteCustomKeyStoreResultJsonUnmarshaller implements
+        Unmarshaller<DeleteCustomKeyStoreResult, JsonUnmarshallerContext> {
+
+    public DeleteCustomKeyStoreResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        DeleteCustomKeyStoreResult deleteCustomKeyStoreResult = new DeleteCustomKeyStoreResult();
+
+        return deleteCustomKeyStoreResult;
+    }
+
+    private static DeleteCustomKeyStoreResultJsonUnmarshaller instance;
+
+    public static DeleteCustomKeyStoreResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DeleteCustomKeyStoreResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DependencyTimeoutExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DependencyTimeoutExceptionUnmarshaller.java
index 637ca54864..d4d00df98f 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DependencyTimeoutExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DependencyTimeoutExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.DependencyTimeoutException;
 
 public class DependencyTimeoutExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public DependencyTimeoutException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        DependencyTimeoutException dependencyTimeoutException = new DependencyTimeoutException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                dependencyTimeoutException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return dependencyTimeoutException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DescribeCustomKeyStoresRequestMarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DescribeCustomKeyStoresRequestMarshaller.java
new file mode 100644
index 0000000000..bac5da4ee6
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DescribeCustomKeyStoresRequestMarshaller.java
@@ -0,0 +1,100 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.kms.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DescribeCustomKeyStoresRequest
+ */
+public class DescribeCustomKeyStoresRequestMarshaller implements
+        Marshaller<Request<DescribeCustomKeyStoresRequest>, DescribeCustomKeyStoresRequest> {
+
+    public Request<DescribeCustomKeyStoresRequest> marshall(
+            DescribeCustomKeyStoresRequest describeCustomKeyStoresRequest) {
+        if (describeCustomKeyStoresRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DescribeCustomKeyStoresRequest)");
+        }
+
+        Request<DescribeCustomKeyStoresRequest> request = new DefaultRequest<DescribeCustomKeyStoresRequest>(
+                describeCustomKeyStoresRequest, "AWSKMS");
+        String target = "TrentService.DescribeCustomKeyStores";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (describeCustomKeyStoresRequest.getCustomKeyStoreId() != null) {
+                String customKeyStoreId = describeCustomKeyStoresRequest.getCustomKeyStoreId();
+                jsonWriter.name("CustomKeyStoreId");
+                jsonWriter.value(customKeyStoreId);
+            }
+            if (describeCustomKeyStoresRequest.getCustomKeyStoreName() != null) {
+                String customKeyStoreName = describeCustomKeyStoresRequest.getCustomKeyStoreName();
+                jsonWriter.name("CustomKeyStoreName");
+                jsonWriter.value(customKeyStoreName);
+            }
+            if (describeCustomKeyStoresRequest.getLimit() != null) {
+                Integer limit = describeCustomKeyStoresRequest.getLimit();
+                jsonWriter.name("Limit");
+                jsonWriter.value(limit);
+            }
+            if (describeCustomKeyStoresRequest.getMarker() != null) {
+                String marker = describeCustomKeyStoresRequest.getMarker();
+                jsonWriter.name("Marker");
+                jsonWriter.value(marker);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DescribeCustomKeyStoresResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DescribeCustomKeyStoresResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..b543070827
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DescribeCustomKeyStoresResultJsonUnmarshaller.java
@@ -0,0 +1,65 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.services.kms.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DescribeCustomKeyStoresResult
+ */
+public class DescribeCustomKeyStoresResultJsonUnmarshaller implements
+        Unmarshaller<DescribeCustomKeyStoresResult, JsonUnmarshallerContext> {
+
+    public DescribeCustomKeyStoresResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        DescribeCustomKeyStoresResult describeCustomKeyStoresResult = new DescribeCustomKeyStoresResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("CustomKeyStores")) {
+                describeCustomKeyStoresResult
+                        .setCustomKeyStores(new ListUnmarshaller<CustomKeyStoresListEntry>(
+                                CustomKeyStoresListEntryJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("NextMarker")) {
+                describeCustomKeyStoresResult.setNextMarker(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Truncated")) {
+                describeCustomKeyStoresResult.setTruncated(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return describeCustomKeyStoresResult;
+    }
+
+    private static DescribeCustomKeyStoresResultJsonUnmarshaller instance;
+
+    public static DescribeCustomKeyStoresResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DescribeCustomKeyStoresResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DisabledExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DisabledExceptionUnmarshaller.java
index 55c22a4188..c7db7be1a2 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DisabledExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DisabledExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.DisabledException;
 
 public class DisabledExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public DisabledException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        DisabledException disabledException = new DisabledException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                disabledException.setErrorMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return disabledException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DisconnectCustomKeyStoreRequestMarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DisconnectCustomKeyStoreRequestMarshaller.java
new file mode 100644
index 0000000000..ccd9119f8d
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DisconnectCustomKeyStoreRequestMarshaller.java
@@ -0,0 +1,85 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.kms.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DisconnectCustomKeyStoreRequest
+ */
+public class DisconnectCustomKeyStoreRequestMarshaller implements
+        Marshaller<Request<DisconnectCustomKeyStoreRequest>, DisconnectCustomKeyStoreRequest> {
+
+    public Request<DisconnectCustomKeyStoreRequest> marshall(
+            DisconnectCustomKeyStoreRequest disconnectCustomKeyStoreRequest) {
+        if (disconnectCustomKeyStoreRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DisconnectCustomKeyStoreRequest)");
+        }
+
+        Request<DisconnectCustomKeyStoreRequest> request = new DefaultRequest<DisconnectCustomKeyStoreRequest>(
+                disconnectCustomKeyStoreRequest, "AWSKMS");
+        String target = "TrentService.DisconnectCustomKeyStore";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (disconnectCustomKeyStoreRequest.getCustomKeyStoreId() != null) {
+                String customKeyStoreId = disconnectCustomKeyStoreRequest.getCustomKeyStoreId();
+                jsonWriter.name("CustomKeyStoreId");
+                jsonWriter.value(customKeyStoreId);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DisconnectCustomKeyStoreResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DisconnectCustomKeyStoreResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..2039d3c2f3
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/DisconnectCustomKeyStoreResultJsonUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.services.kms.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DisconnectCustomKeyStoreResult
+ */
+public class DisconnectCustomKeyStoreResultJsonUnmarshaller implements
+        Unmarshaller<DisconnectCustomKeyStoreResult, JsonUnmarshallerContext> {
+
+    public DisconnectCustomKeyStoreResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        DisconnectCustomKeyStoreResult disconnectCustomKeyStoreResult = new DisconnectCustomKeyStoreResult();
+
+        return disconnectCustomKeyStoreResult;
+    }
+
+    private static DisconnectCustomKeyStoreResultJsonUnmarshaller instance;
+
+    public static DisconnectCustomKeyStoreResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DisconnectCustomKeyStoreResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/EncryptResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/EncryptResultJsonUnmarshaller.java
index 70f4d4f3b7..9bea72758f 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/EncryptResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/EncryptResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public EncryptResult unmarshall(JsonUnmarshallerContext context) throws Exceptio
                 encryptResult.setCiphertextBlob(ByteBufferJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("KeyId")) {
-                encryptResult.setKeyId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                encryptResult.setKeyId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ExpiredImportTokenExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ExpiredImportTokenExceptionUnmarshaller.java
index 9e5eec26d7..889b6461b4 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ExpiredImportTokenExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ExpiredImportTokenExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.ExpiredImportTokenException;
 
 public class ExpiredImportTokenExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ExpiredImportTokenException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ExpiredImportTokenException expiredImportTokenException = new ExpiredImportTokenException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                expiredImportTokenException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return expiredImportTokenException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GenerateDataKeyResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GenerateDataKeyResultJsonUnmarshaller.java
index 470d14b89e..d622bd9ec7 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GenerateDataKeyResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GenerateDataKeyResultJsonUnmarshaller.java
@@ -40,8 +40,8 @@ public GenerateDataKeyResult unmarshall(JsonUnmarshallerContext context) throws
                 generateDataKeyResult.setPlaintext(ByteBufferJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("KeyId")) {
-                generateDataKeyResult.setKeyId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                generateDataKeyResult.setKeyId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GenerateDataKeyWithoutPlaintextResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GenerateDataKeyWithoutPlaintextResultJsonUnmarshaller.java
index 6c05e13d1f..98a6bd308d 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GenerateDataKeyWithoutPlaintextResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GenerateDataKeyWithoutPlaintextResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public GenerateDataKeyWithoutPlaintextResult unmarshall(JsonUnmarshallerContext
             String name = reader.nextName();
             if (name.equals("CiphertextBlob")) {
                 generateDataKeyWithoutPlaintextResult.setCiphertextBlob(ByteBufferJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("KeyId")) {
                 generateDataKeyWithoutPlaintextResult.setKeyId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GenerateRandomRequestMarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GenerateRandomRequestMarshaller.java
index 4314bfd998..94a1c21c02 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GenerateRandomRequestMarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GenerateRandomRequestMarshaller.java
@@ -64,6 +64,11 @@
                 jsonWriter.name("NumberOfBytes");
                 jsonWriter.value(numberOfBytes);
             }
+            if (generateRandomRequest.getCustomKeyStoreId() != null) {
+                String customKeyStoreId = generateRandomRequest.getCustomKeyStoreId();
+                jsonWriter.name("CustomKeyStoreId");
+                jsonWriter.value(customKeyStoreId);
+            }
 
             jsonWriter.endObject();
             jsonWriter.close();
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GetKeyPolicyResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GetKeyPolicyResultJsonUnmarshaller.java
index f1e5bb191f..a733a1a7c8 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GetKeyPolicyResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GetKeyPolicyResultJsonUnmarshaller.java
@@ -34,8 +34,8 @@ public GetKeyPolicyResult unmarshall(JsonUnmarshallerContext context) throws Exc
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Policy")) {
-                getKeyPolicyResult.setPolicy(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getKeyPolicyResult.setPolicy(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GetKeyRotationStatusResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GetKeyRotationStatusResultJsonUnmarshaller.java
index 30cf78b7bd..797f58fe59 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GetKeyRotationStatusResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GetKeyRotationStatusResultJsonUnmarshaller.java
@@ -35,7 +35,8 @@ public GetKeyRotationStatusResult unmarshall(JsonUnmarshallerContext context) th
             String name = reader.nextName();
             if (name.equals("KeyRotationEnabled")) {
                 getKeyRotationStatusResult.setKeyRotationEnabled(BooleanJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GetParametersForImportResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GetParametersForImportResultJsonUnmarshaller.java
index c9658fa2a5..70aab0c1ea 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GetParametersForImportResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GetParametersForImportResultJsonUnmarshaller.java
@@ -39,13 +39,15 @@ public GetParametersForImportResult unmarshall(JsonUnmarshallerContext context)
                         .unmarshall(context));
             } else if (name.equals("ImportToken")) {
                 getParametersForImportResult.setImportToken(ByteBufferJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("PublicKey")) {
                 getParametersForImportResult.setPublicKey(ByteBufferJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ParametersValidTo")) {
                 getParametersForImportResult.setParametersValidTo(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GrantConstraintsJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GrantConstraintsJsonUnmarshaller.java
index 98f1775e9b..7f7d0c4c46 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GrantConstraintsJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GrantConstraintsJsonUnmarshaller.java
@@ -38,10 +38,14 @@ public GrantConstraints unmarshall(JsonUnmarshallerContext context) throws Excep
             String name = reader.nextName();
             if (name.equals("EncryptionContextSubset")) {
                 grantConstraints.setEncryptionContextSubset(new MapUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("EncryptionContextEquals")) {
                 grantConstraints.setEncryptionContextEquals(new MapUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GrantListEntryJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GrantListEntryJsonUnmarshaller.java
index a517a719de..25a9f7dfd6 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GrantListEntryJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/GrantListEntryJsonUnmarshaller.java
@@ -37,26 +37,31 @@ public GrantListEntry unmarshall(JsonUnmarshallerContext context) throws Excepti
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("KeyId")) {
-                grantListEntry.setKeyId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                grantListEntry.setKeyId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("GrantId")) {
-                grantListEntry.setGrantId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                grantListEntry.setGrantId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Name")) {
-                grantListEntry.setName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                grantListEntry.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CreationDate")) {
-                grantListEntry.setCreationDate(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                grantListEntry.setCreationDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("GranteePrincipal")) {
-                grantListEntry.setGranteePrincipal(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                grantListEntry.setGranteePrincipal(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RetiringPrincipal")) {
                 grantListEntry.setRetiringPrincipal(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("IssuingAccount")) {
-                grantListEntry.setIssuingAccount(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                grantListEntry.setIssuingAccount(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Operations")) {
                 grantListEntry.setOperations(new ListUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Constraints")) {
                 grantListEntry.setConstraints(GrantConstraintsJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/IncorrectKeyMaterialExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/IncorrectKeyMaterialExceptionUnmarshaller.java
index a8137d7b74..81c2931d31 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/IncorrectKeyMaterialExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/IncorrectKeyMaterialExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.IncorrectKeyMaterialException;
 
 public class IncorrectKeyMaterialExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public IncorrectKeyMaterialException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        IncorrectKeyMaterialException incorrectKeyMaterialException = new IncorrectKeyMaterialException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                incorrectKeyMaterialException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return incorrectKeyMaterialException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/IncorrectTrustAnchorExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/IncorrectTrustAnchorExceptionUnmarshaller.java
new file mode 100644
index 0000000000..6945a80af8
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/IncorrectTrustAnchorExceptionUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.AmazonServiceException;
+import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
+import com.amazonaws.transform.JsonErrorUnmarshaller;
+import com.amazonaws.services.kms.model.IncorrectTrustAnchorException;
+
+public class IncorrectTrustAnchorExceptionUnmarshaller extends JsonErrorUnmarshaller {
+
+    public IncorrectTrustAnchorExceptionUnmarshaller() {
+        super(IncorrectTrustAnchorException.class);
+    }
+
+    @Override
+    public boolean match(JsonErrorResponse error) throws Exception {
+        return error.getErrorCode().equals("IncorrectTrustAnchorException");
+    }
+
+    @Override
+    public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
+
+        IncorrectTrustAnchorException e = (IncorrectTrustAnchorException) super.unmarshall(error);
+        e.setErrorCode("IncorrectTrustAnchorException");
+
+        return e;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidAliasNameExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidAliasNameExceptionUnmarshaller.java
index 8a0655fb23..8a2f2da1ac 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidAliasNameExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidAliasNameExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.InvalidAliasNameException;
 
 public class InvalidAliasNameExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidAliasNameException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidAliasNameException invalidAliasNameException = new InvalidAliasNameException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidAliasNameException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidAliasNameException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidArnExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidArnExceptionUnmarshaller.java
index 7526eea192..3a13ea3870 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidArnExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidArnExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.InvalidArnException;
 
 public class InvalidArnExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidArnException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidArnException invalidArnException = new InvalidArnException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidArnException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidArnException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidCiphertextExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidCiphertextExceptionUnmarshaller.java
index dd6212c9b2..1046432378 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidCiphertextExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidCiphertextExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.InvalidCiphertextException;
 
 public class InvalidCiphertextExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidCiphertextException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidCiphertextException invalidCiphertextException = new InvalidCiphertextException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidCiphertextException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidCiphertextException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidGrantIdExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidGrantIdExceptionUnmarshaller.java
index 07753700e4..74ebdbbda6 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidGrantIdExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidGrantIdExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.InvalidGrantIdException;
 
 public class InvalidGrantIdExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidGrantIdException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidGrantIdException invalidGrantIdException = new InvalidGrantIdException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidGrantIdException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidGrantIdException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidGrantTokenExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidGrantTokenExceptionUnmarshaller.java
index 7baefa9c3b..fcdf27a172 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidGrantTokenExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidGrantTokenExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.InvalidGrantTokenException;
 
 public class InvalidGrantTokenExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidGrantTokenException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidGrantTokenException invalidGrantTokenException = new InvalidGrantTokenException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidGrantTokenException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidGrantTokenException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidImportTokenExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidImportTokenExceptionUnmarshaller.java
index 69c88b942a..5c309d5570 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidImportTokenExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidImportTokenExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.InvalidImportTokenException;
 
 public class InvalidImportTokenExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidImportTokenException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidImportTokenException invalidImportTokenException = new InvalidImportTokenException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidImportTokenException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidImportTokenException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidKeyUsageExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidKeyUsageExceptionUnmarshaller.java
index 5a035e6ea9..9ea1711db0 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidKeyUsageExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidKeyUsageExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.InvalidKeyUsageException;
 
 public class InvalidKeyUsageExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidKeyUsageException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidKeyUsageException invalidKeyUsageException = new InvalidKeyUsageException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidKeyUsageException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidKeyUsageException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidMarkerExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidMarkerExceptionUnmarshaller.java
index 794b5212b7..582c05751a 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidMarkerExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/InvalidMarkerExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.InvalidMarkerException;
 
 public class InvalidMarkerExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidMarkerException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidMarkerException invalidMarkerException = new InvalidMarkerException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidMarkerException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidMarkerException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KMSInternalExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KMSInternalExceptionUnmarshaller.java
index c0c24e1742..4c686b5eae 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KMSInternalExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KMSInternalExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.KMSInternalException;
 
 public class KMSInternalExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public KMSInternalException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        KMSInternalException kMSInternalException = new KMSInternalException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                kMSInternalException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return kMSInternalException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KMSInvalidStateExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KMSInvalidStateExceptionUnmarshaller.java
index 47ecc5e19e..e8fca862d6 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KMSInvalidStateExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KMSInvalidStateExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.KMSInvalidStateException;
 
 public class KMSInvalidStateExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public KMSInvalidStateException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        KMSInvalidStateException kMSInvalidStateException = new KMSInvalidStateException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                kMSInvalidStateException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return kMSInvalidStateException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KeyListEntryJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KeyListEntryJsonUnmarshaller.java
index 735fc03c44..655c220297 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KeyListEntryJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KeyListEntryJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public KeyListEntry unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("KeyId")) {
-                keyListEntry.setKeyId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                keyListEntry.setKeyId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("KeyArn")) {
-                keyListEntry.setKeyArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                keyListEntry.setKeyArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KeyMetadataJsonMarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KeyMetadataJsonMarshaller.java
index efd983cad3..5dca380259 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KeyMetadataJsonMarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KeyMetadataJsonMarshaller.java
@@ -80,6 +80,16 @@ public void marshall(KeyMetadata keyMetadata, AwsJsonWriter jsonWriter) throws E
             jsonWriter.name("Origin");
             jsonWriter.value(origin);
         }
+        if (keyMetadata.getCustomKeyStoreId() != null) {
+            String customKeyStoreId = keyMetadata.getCustomKeyStoreId();
+            jsonWriter.name("CustomKeyStoreId");
+            jsonWriter.value(customKeyStoreId);
+        }
+        if (keyMetadata.getCloudHsmClusterId() != null) {
+            String cloudHsmClusterId = keyMetadata.getCloudHsmClusterId();
+            jsonWriter.name("CloudHsmClusterId");
+            jsonWriter.value(cloudHsmClusterId);
+        }
         if (keyMetadata.getExpirationModel() != null) {
             String expirationModel = keyMetadata.getExpirationModel();
             jsonWriter.name("ExpirationModel");
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KeyMetadataJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KeyMetadataJsonUnmarshaller.java
index 0b6f362afc..ce041e38b0 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KeyMetadataJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KeyMetadataJsonUnmarshaller.java
@@ -39,31 +39,47 @@ public KeyMetadata unmarshall(JsonUnmarshallerContext context) throws Exception
                 keyMetadata.setAWSAccountId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("KeyId")) {
-                keyMetadata.setKeyId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                keyMetadata.setKeyId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Arn")) {
-                keyMetadata.setArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                keyMetadata.setArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CreationDate")) {
-                keyMetadata.setCreationDate(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                keyMetadata.setCreationDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Enabled")) {
-                keyMetadata.setEnabled(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                keyMetadata.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Description")) {
-                keyMetadata
-                        .setDescription(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                keyMetadata.setDescription(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("KeyUsage")) {
-                keyMetadata.setKeyUsage(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                keyMetadata.setKeyUsage(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("KeyState")) {
-                keyMetadata.setKeyState(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                keyMetadata.setKeyState(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("DeletionDate")) {
-                keyMetadata.setDeletionDate(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                keyMetadata.setDeletionDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ValidTo")) {
-                keyMetadata.setValidTo(DateJsonUnmarshaller.getInstance().unmarshall(context));
+                keyMetadata.setValidTo(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Origin")) {
-                keyMetadata.setOrigin(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                keyMetadata.setOrigin(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("CustomKeyStoreId")) {
+                keyMetadata.setCustomKeyStoreId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("CloudHsmClusterId")) {
+                keyMetadata.setCloudHsmClusterId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ExpirationModel")) {
-                keyMetadata.setExpirationModel(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                keyMetadata.setExpirationModel(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("KeyManager")) {
-                keyMetadata.setKeyManager(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                keyMetadata.setKeyManager(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KeyUnavailableExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KeyUnavailableExceptionUnmarshaller.java
index 47b6fcdee3..c15045a425 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KeyUnavailableExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/KeyUnavailableExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.KeyUnavailableException;
 
 public class KeyUnavailableExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public KeyUnavailableException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        KeyUnavailableException keyUnavailableException = new KeyUnavailableException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                keyUnavailableException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return keyUnavailableException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/LimitExceededExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/LimitExceededExceptionUnmarshaller.java
index d82e891301..8af96cb626 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/LimitExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/LimitExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.LimitExceededException;
 
 public class LimitExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public LimitExceededException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        LimitExceededException limitExceededException = new LimitExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                limitExceededException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return limitExceededException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListAliasesResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListAliasesResultJsonUnmarshaller.java
index cdc9e694c4..722d29f123 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListAliasesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListAliasesResultJsonUnmarshaller.java
@@ -35,13 +35,15 @@ public ListAliasesResult unmarshall(JsonUnmarshallerContext context) throws Exce
             String name = reader.nextName();
             if (name.equals("Aliases")) {
                 listAliasesResult.setAliases(new ListUnmarshaller<AliasListEntry>(
-                        AliasListEntryJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AliasListEntryJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextMarker")) {
-                listAliasesResult.setNextMarker(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listAliasesResult.setNextMarker(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Truncated")) {
-                listAliasesResult.setTruncated(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listAliasesResult.setTruncated(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListGrantsResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListGrantsResultJsonUnmarshaller.java
index d002fa5195..f9416ebce4 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListGrantsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListGrantsResultJsonUnmarshaller.java
@@ -35,13 +35,15 @@ public ListGrantsResult unmarshall(JsonUnmarshallerContext context) throws Excep
             String name = reader.nextName();
             if (name.equals("Grants")) {
                 listGrantsResult.setGrants(new ListUnmarshaller<GrantListEntry>(
-                        GrantListEntryJsonUnmarshaller.getInstance()).unmarshall(context));
+                        GrantListEntryJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextMarker")) {
-                listGrantsResult.setNextMarker(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listGrantsResult.setNextMarker(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Truncated")) {
-                listGrantsResult.setTruncated(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listGrantsResult.setTruncated(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListKeyPoliciesResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListKeyPoliciesResultJsonUnmarshaller.java
index d5ace148fb..dcb182bf52 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListKeyPoliciesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListKeyPoliciesResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListKeyPoliciesResult unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("PolicyNames")) {
                 listKeyPoliciesResult.setPolicyNames(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextMarker")) {
                 listKeyPoliciesResult.setNextMarker(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListKeysResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListKeysResultJsonUnmarshaller.java
index 7f778b1515..68bef1fe69 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListKeysResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListKeysResultJsonUnmarshaller.java
@@ -35,13 +35,15 @@ public ListKeysResult unmarshall(JsonUnmarshallerContext context) throws Excepti
             String name = reader.nextName();
             if (name.equals("Keys")) {
                 listKeysResult.setKeys(new ListUnmarshaller<KeyListEntry>(
-                        KeyListEntryJsonUnmarshaller.getInstance()).unmarshall(context));
+                        KeyListEntryJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextMarker")) {
-                listKeysResult.setNextMarker(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listKeysResult.setNextMarker(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Truncated")) {
-                listKeysResult.setTruncated(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listKeysResult.setTruncated(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListResourceTagsResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListResourceTagsResultJsonUnmarshaller.java
index 4fbdfabaad..e67d3192d1 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListResourceTagsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListResourceTagsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListResourceTagsResult unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("Tags")) {
                 listResourceTagsResult.setTags(new ListUnmarshaller<Tag>(TagJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextMarker")) {
                 listResourceTagsResult.setNextMarker(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListRetirableGrantsResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListRetirableGrantsResultJsonUnmarshaller.java
index 0362e51779..64b53eba3a 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListRetirableGrantsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ListRetirableGrantsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListRetirableGrantsResult unmarshall(JsonUnmarshallerContext context) thr
             String name = reader.nextName();
             if (name.equals("Grants")) {
                 listRetirableGrantsResult.setGrants(new ListUnmarshaller<GrantListEntry>(
-                        GrantListEntryJsonUnmarshaller.getInstance()).unmarshall(context));
+                        GrantListEntryJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextMarker")) {
                 listRetirableGrantsResult.setNextMarker(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/MalformedPolicyDocumentExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/MalformedPolicyDocumentExceptionUnmarshaller.java
index c92b58d06f..efae3480e3 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/MalformedPolicyDocumentExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/MalformedPolicyDocumentExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.MalformedPolicyDocumentException;
 
 public class MalformedPolicyDocumentExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public MalformedPolicyDocumentException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        MalformedPolicyDocumentException malformedPolicyDocumentException = new MalformedPolicyDocumentException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                malformedPolicyDocumentException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return malformedPolicyDocumentException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/NotFoundExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/NotFoundExceptionUnmarshaller.java
index 355f4eba8f..38a79a3700 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/NotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/NotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.NotFoundException;
 
 public class NotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public NotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        NotFoundException notFoundException = new NotFoundException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                notFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return notFoundException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ReEncryptResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ReEncryptResultJsonUnmarshaller.java
index 427b82840c..6a37f8d0ba 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ReEncryptResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ReEncryptResultJsonUnmarshaller.java
@@ -37,10 +37,11 @@ public ReEncryptResult unmarshall(JsonUnmarshallerContext context) throws Except
                 reEncryptResult.setCiphertextBlob(ByteBufferJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("SourceKeyId")) {
-                reEncryptResult.setSourceKeyId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                reEncryptResult.setSourceKeyId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("KeyId")) {
-                reEncryptResult.setKeyId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                reEncryptResult.setKeyId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ScheduleKeyDeletionResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ScheduleKeyDeletionResultJsonUnmarshaller.java
index b954530b59..ee52eb43b9 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ScheduleKeyDeletionResultJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/ScheduleKeyDeletionResultJsonUnmarshaller.java
@@ -34,8 +34,8 @@ public ScheduleKeyDeletionResult unmarshall(JsonUnmarshallerContext context) thr
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("KeyId")) {
-                scheduleKeyDeletionResult.setKeyId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                scheduleKeyDeletionResult.setKeyId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("DeletionDate")) {
                 scheduleKeyDeletionResult.setDeletionDate(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/TagExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/TagExceptionUnmarshaller.java
index 12dd7ba1d5..fbaf7b9fba 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/TagExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/TagExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.TagException;
 
 public class TagExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public TagException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        TagException tagException = new TagException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                tagException.setErrorMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return tagException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/TagJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/TagJsonUnmarshaller.java
index f953470e64..e0344d7b00 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/TagJsonUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/TagJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Tag unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("TagKey")) {
-                tag.setTagKey(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                tag.setTagKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TagValue")) {
-                tag.setTagValue(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                tag.setTagValue(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/UnsupportedOperationExceptionUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/UnsupportedOperationExceptionUnmarshaller.java
index cc5aa05c93..b3ae22e50f 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/UnsupportedOperationExceptionUnmarshaller.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/UnsupportedOperationExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.kms.model.UnsupportedOperationException;
 
 public class UnsupportedOperationExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public UnsupportedOperationException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        UnsupportedOperationException unsupportedOperationException = new UnsupportedOperationException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                unsupportedOperationException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return unsupportedOperationException;
-    }
 }
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/UpdateCustomKeyStoreRequestMarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/UpdateCustomKeyStoreRequestMarshaller.java
new file mode 100644
index 0000000000..b306a7d715
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/UpdateCustomKeyStoreRequestMarshaller.java
@@ -0,0 +1,101 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.kms.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for UpdateCustomKeyStoreRequest
+ */
+public class UpdateCustomKeyStoreRequestMarshaller implements
+        Marshaller<Request<UpdateCustomKeyStoreRequest>, UpdateCustomKeyStoreRequest> {
+
+    public Request<UpdateCustomKeyStoreRequest> marshall(
+            UpdateCustomKeyStoreRequest updateCustomKeyStoreRequest) {
+        if (updateCustomKeyStoreRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(UpdateCustomKeyStoreRequest)");
+        }
+
+        Request<UpdateCustomKeyStoreRequest> request = new DefaultRequest<UpdateCustomKeyStoreRequest>(
+                updateCustomKeyStoreRequest, "AWSKMS");
+        String target = "TrentService.UpdateCustomKeyStore";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (updateCustomKeyStoreRequest.getCustomKeyStoreId() != null) {
+                String customKeyStoreId = updateCustomKeyStoreRequest.getCustomKeyStoreId();
+                jsonWriter.name("CustomKeyStoreId");
+                jsonWriter.value(customKeyStoreId);
+            }
+            if (updateCustomKeyStoreRequest.getNewCustomKeyStoreName() != null) {
+                String newCustomKeyStoreName = updateCustomKeyStoreRequest
+                        .getNewCustomKeyStoreName();
+                jsonWriter.name("NewCustomKeyStoreName");
+                jsonWriter.value(newCustomKeyStoreName);
+            }
+            if (updateCustomKeyStoreRequest.getKeyStorePassword() != null) {
+                String keyStorePassword = updateCustomKeyStoreRequest.getKeyStorePassword();
+                jsonWriter.name("KeyStorePassword");
+                jsonWriter.value(keyStorePassword);
+            }
+            if (updateCustomKeyStoreRequest.getCloudHsmClusterId() != null) {
+                String cloudHsmClusterId = updateCustomKeyStoreRequest.getCloudHsmClusterId();
+                jsonWriter.name("CloudHsmClusterId");
+                jsonWriter.value(cloudHsmClusterId);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/UpdateCustomKeyStoreResultJsonUnmarshaller.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/UpdateCustomKeyStoreResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..3286053607
--- /dev/null
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/model/transform/UpdateCustomKeyStoreResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.kms.model.transform;
+
+import com.amazonaws.services.kms.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response UpdateCustomKeyStoreResult
+ */
+public class UpdateCustomKeyStoreResultJsonUnmarshaller implements
+        Unmarshaller<UpdateCustomKeyStoreResult, JsonUnmarshallerContext> {
+
+    public UpdateCustomKeyStoreResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        UpdateCustomKeyStoreResult updateCustomKeyStoreResult = new UpdateCustomKeyStoreResult();
+
+        return updateCustomKeyStoreResult;
+    }
+
+    private static UpdateCustomKeyStoreResultJsonUnmarshaller instance;
+
+    public static UpdateCustomKeyStoreResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new UpdateCustomKeyStoreResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/package-info.java b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/package-info.java
index f93a5f7787..e582a56b5c 100644
--- a/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/package-info.java
+++ b/aws-android-sdk-kms/src/main/java/com/amazonaws/services/kms/package-info.java
@@ -1,5 +1,5 @@
 /**
- * <fullname>AWS Key Management Service</fullname> <p>AWS Key Management Service (AWS KMS) is an encryption and key management web service. This guide describes the AWS KMS operations that you can call programmatically. For general information about AWS KMS, see the <a href="http://docs.aws.amazon.com/kms/latest/developerguide/">AWS Key Management Service Developer Guide</a>.</p> <note> <p>AWS provides SDKs that consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .Net, macOS, Android, etc.). The SDKs provide a convenient way to create programmatic access to AWS KMS and other AWS services. For example, the SDKs take care of tasks such as signing requests (see below), managing errors, and retrying requests automatically. For more information about the AWS SDKs, including how to download and install them, see <a href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a>.</p> </note> <p>We recommend that you use the AWS SDKs to make programmatic API calls to AWS KMS.</p> <p>Clients must support TLS (Transport Layer Security) 1.0. We recommend TLS 1.2. Clients must also support cipher suites with Perfect Forward Secrecy (PFS) such as Ephemeral Diffie-Hellman (DHE) or Elliptic Curve Ephemeral Diffie-Hellman (ECDHE). Most modern systems such as Java 7 and later support these modes.</p> <p> <b>Signing Requests</b> </p> <p>Requests must be signed by using an access key ID and a secret access key. We strongly recommend that you <i>do not</i> use your AWS account (root) access key ID and secret key for everyday work with AWS KMS. Instead, use the access key ID and secret access key for an IAM user. You can also use the AWS Security Token Service to generate temporary security credentials that you can use to sign requests.</p> <p>All AWS KMS operations require <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4</a>.</p> <p> <b>Logging API Requests</b> </p> <p>AWS KMS supports AWS CloudTrail, a service that logs AWS API calls and related events for your AWS account and delivers them to an Amazon S3 bucket that you specify. By using the information collected by CloudTrail, you can determine what requests were made to AWS KMS, who made the request, when it was made, and so on. To learn more about CloudTrail, including how to turn it on and find your log files, see the <a href="http://docs.aws.amazon.com/awscloudtrail/latest/userguide/">AWS CloudTrail User Guide</a>.</p> <p> <b>Additional Resources</b> </p> <p>For more information about credentials and request signing, see the following:</p> <ul> <li> <p> <a href="http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html">AWS Security Credentials</a> - This topic provides general information about the types of credentials used for accessing AWS.</p> </li> <li> <p> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html">Temporary Security Credentials</a> - This section of the <i>IAM User Guide</i> describes how to create and use temporary security credentials.</p> </li> <li> <p> <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing Process</a> - This set of topics walks you through the process of signing a request using an access key ID and a secret access key.</p> </li> </ul> <p> <b>Commonly Used API Operations</b> </p> <p>Of the API operations discussed in this guide, the following will prove the most useful for most applications. You will likely perform operations other than these, such as creating keys and assigning policies, by using the console.</p> <ul> <li> <p> <a>Encrypt</a> </p> </li> <li> <p> <a>Decrypt</a> </p> </li> <li> <p> <a>GenerateDataKey</a> </p> </li> <li> <p> <a>GenerateDataKeyWithoutPlaintext</a> </p> </li> </ul>
+ * <fullname>AWS Key Management Service</fullname> <p>AWS Key Management Service (AWS KMS) is an encryption and key management web service. This guide describes the AWS KMS operations that you can call programmatically. For general information about AWS KMS, see the <a href="http://docs.aws.amazon.com/kms/latest/developerguide/"> <i>AWS Key Management Service Developer Guide</i> </a>.</p> <note> <p>AWS provides SDKs that consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .Net, macOS, Android, etc.). The SDKs provide a convenient way to create programmatic access to AWS KMS and other AWS services. For example, the SDKs take care of tasks such as signing requests (see below), managing errors, and retrying requests automatically. For more information about the AWS SDKs, including how to download and install them, see <a href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a>.</p> </note> <p>We recommend that you use the AWS SDKs to make programmatic API calls to AWS KMS.</p> <p>Clients must support TLS (Transport Layer Security) 1.0. We recommend TLS 1.2. Clients must also support cipher suites with Perfect Forward Secrecy (PFS) such as Ephemeral Diffie-Hellman (DHE) or Elliptic Curve Ephemeral Diffie-Hellman (ECDHE). Most modern systems such as Java 7 and later support these modes.</p> <p> <b>Signing Requests</b> </p> <p>Requests must be signed by using an access key ID and a secret access key. We strongly recommend that you <i>do not</i> use your AWS account (root) access key ID and secret key for everyday work with AWS KMS. Instead, use the access key ID and secret access key for an IAM user, or you can use the AWS Security Token Service to generate temporary security credentials that you can use to sign requests.</p> <p>All AWS KMS operations require <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4</a>.</p> <p> <b>Logging API Requests</b> </p> <p>AWS KMS supports AWS CloudTrail, a service that logs AWS API calls and related events for your AWS account and delivers them to an Amazon S3 bucket that you specify. By using the information collected by CloudTrail, you can determine what requests were made to AWS KMS, who made the request, when it was made, and so on. To learn more about CloudTrail, including how to turn it on and find your log files, see the <a href="http://docs.aws.amazon.com/awscloudtrail/latest/userguide/">AWS CloudTrail User Guide</a>.</p> <p> <b>Additional Resources</b> </p> <p>For more information about credentials and request signing, see the following:</p> <ul> <li> <p> <a href="http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html">AWS Security Credentials</a> - This topic provides general information about the of credentials used for accessing AWS.</p> </li> <li> <p> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html">Temporary Security Credentials</a> - This section of the <i>IAM User Guide</i> describes how to create and use temporary security credentials.</p> </li> <li> <p> <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing Process</a> - This set of topics walks you through the process of signing a request using an access key ID and a secret access key.</p> </li> </ul> <p> <b>Commonly Used APIs</b> </p> <p>Of the APIs discussed in this guide, the following will prove the most useful for most applications. You will likely perform actions other than these, such as creating keys and assigning policies, by using the console.</p> <ul> <li> <p> <a>Encrypt</a> </p> </li> <li> <p> <a>Decrypt</a> </p> </li> <li> <p> <a>GenerateDataKey</a> </p> </li> <li> <p> <a>GenerateDataKeyWithoutPlaintext</a> </p> </li> </ul>
  */
 
 package com.amazonaws.services.kms;
diff --git a/aws-android-sdk-lambda/pom.xml b/aws-android-sdk-lambda/pom.xml
index 601c170d4c..8dcef003b1 100644
--- a/aws-android-sdk-lambda/pom.xml
+++ b/aws-android-sdk-lambda/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/InvokeRequest.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/InvokeRequest.java
index 5431da2060..be236ce5f2 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/InvokeRequest.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/InvokeRequest.java
@@ -62,7 +62,7 @@
 public class InvokeRequest extends AmazonWebServiceRequest implements Serializable {
     /**
      * <p>
-     * The name of the lambda function.
+     * The name of the Lambda function.
      * </p>
      * <p class="title">
      * <b>Name formats</b>
@@ -188,7 +188,7 @@
 
     /**
      * <p>
-     * The name of the lambda function.
+     * The name of the Lambda function.
      * </p>
      * <p class="title">
      * <b>Name formats</b>
@@ -224,7 +224,7 @@
      * :)?(function:)?([a-zA-Z0-9-_\.]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?<br/>
      *
      * @return <p>
-     *         The name of the lambda function.
+     *         The name of the Lambda function.
      *         </p>
      *         <p class="title">
      *         <b>Name formats</b>
@@ -261,7 +261,7 @@ public String getFunctionName() {
 
     /**
      * <p>
-     * The name of the lambda function.
+     * The name of the Lambda function.
      * </p>
      * <p class="title">
      * <b>Name formats</b>
@@ -297,7 +297,7 @@ public String getFunctionName() {
      * :)?(function:)?([a-zA-Z0-9-_\.]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?<br/>
      *
      * @param functionName <p>
-     *            The name of the lambda function.
+     *            The name of the Lambda function.
      *            </p>
      *            <p class="title">
      *            <b>Name formats</b>
@@ -334,7 +334,7 @@ public void setFunctionName(String functionName) {
 
     /**
      * <p>
-     * The name of the lambda function.
+     * The name of the Lambda function.
      * </p>
      * <p class="title">
      * <b>Name formats</b>
@@ -373,7 +373,7 @@ public void setFunctionName(String functionName) {
      * :)?(function:)?([a-zA-Z0-9-_\.]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?<br/>
      *
      * @param functionName <p>
-     *            The name of the lambda function.
+     *            The name of the Lambda function.
      *            </p>
      *            <p class="title">
      *            <b>Name formats</b>
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/EC2AccessDeniedExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/EC2AccessDeniedExceptionUnmarshaller.java
index ca72406704..cdbb507031 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/EC2AccessDeniedExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/EC2AccessDeniedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.EC2AccessDeniedException;
 
 public class EC2AccessDeniedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,34 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public EC2AccessDeniedException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        EC2AccessDeniedException eC2AccessDeniedException = new EC2AccessDeniedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                eC2AccessDeniedException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("Type")) {
-                eC2AccessDeniedException.setType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return eC2AccessDeniedException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/EC2ThrottledExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/EC2ThrottledExceptionUnmarshaller.java
index 044d9ab875..b9c51801a1 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/EC2ThrottledExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/EC2ThrottledExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.EC2ThrottledException;
 
 public class EC2ThrottledExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,34 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public EC2ThrottledException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        EC2ThrottledException eC2ThrottledException = new EC2ThrottledException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                eC2ThrottledException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("Type")) {
-                eC2ThrottledException.setType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return eC2ThrottledException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/EC2UnexpectedExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/EC2UnexpectedExceptionUnmarshaller.java
index 5b2928584e..940fb84f56 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/EC2UnexpectedExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/EC2UnexpectedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.EC2UnexpectedException;
 
 public class EC2UnexpectedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -45,37 +42,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public EC2UnexpectedException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        EC2UnexpectedException eC2UnexpectedException = new EC2UnexpectedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                eC2UnexpectedException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("Type")) {
-                eC2UnexpectedException.setType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else if (name.equals("EC2ErrorCode")) {
-                eC2UnexpectedException.setEC2ErrorCode(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return eC2UnexpectedException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/ENILimitReachedExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/ENILimitReachedExceptionUnmarshaller.java
index 27b29397f7..b77b16e24b 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/ENILimitReachedExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/ENILimitReachedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.ENILimitReachedException;
 
 public class ENILimitReachedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,34 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ENILimitReachedException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ENILimitReachedException eNILimitReachedException = new ENILimitReachedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                eNILimitReachedException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("Type")) {
-                eNILimitReachedException.setType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return eNILimitReachedException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidParameterValueExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidParameterValueExceptionUnmarshaller.java
index eed102473d..b1378d18c9 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidParameterValueExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidParameterValueExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.InvalidParameterValueException;
 
 public class InvalidParameterValueExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,35 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidParameterValueException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidParameterValueException invalidParameterValueException = new InvalidParameterValueException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidParameterValueException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("Type")) {
-                invalidParameterValueException.setType(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidParameterValueException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidRequestContentExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidRequestContentExceptionUnmarshaller.java
index d39aa60b03..5d5fb04a30 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidRequestContentExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidRequestContentExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.InvalidRequestContentException;
 
 public class InvalidRequestContentExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,35 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidRequestContentException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidRequestContentException invalidRequestContentException = new InvalidRequestContentException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidRequestContentException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("Type")) {
-                invalidRequestContentException.setType(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidRequestContentException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidRuntimeExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidRuntimeExceptionUnmarshaller.java
index 88a0fc67d2..85bfa6fc5a 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidRuntimeExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidRuntimeExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.InvalidRuntimeException;
 
 public class InvalidRuntimeExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,34 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidRuntimeException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidRuntimeException invalidRuntimeException = new InvalidRuntimeException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidRuntimeException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("Type")) {
-                invalidRuntimeException.setType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidRuntimeException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidSecurityGroupIDExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidSecurityGroupIDExceptionUnmarshaller.java
index b986ce132e..2e4ca747f5 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidSecurityGroupIDExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidSecurityGroupIDExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.InvalidSecurityGroupIDException;
 
 public class InvalidSecurityGroupIDExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -44,35 +41,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidSecurityGroupIDException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidSecurityGroupIDException invalidSecurityGroupIDException = new InvalidSecurityGroupIDException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidSecurityGroupIDException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else if (name.equals("Type")) {
-                invalidSecurityGroupIDException.setType(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidSecurityGroupIDException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidSubnetIDExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidSubnetIDExceptionUnmarshaller.java
index f97d7cf5c0..4b5a845355 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidSubnetIDExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidSubnetIDExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.InvalidSubnetIDException;
 
 public class InvalidSubnetIDExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,34 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidSubnetIDException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidSubnetIDException invalidSubnetIDException = new InvalidSubnetIDException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidSubnetIDException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("Type")) {
-                invalidSubnetIDException.setType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidSubnetIDException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidZipFileExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidZipFileExceptionUnmarshaller.java
index d8e7b69974..c90b2b93f5 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidZipFileExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/InvalidZipFileExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.InvalidZipFileException;
 
 public class InvalidZipFileExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,34 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidZipFileException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidZipFileException invalidZipFileException = new InvalidZipFileException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidZipFileException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("Type")) {
-                invalidZipFileException.setType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidZipFileException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/KMSAccessDeniedExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/KMSAccessDeniedExceptionUnmarshaller.java
index 2b01bef8a1..f00f2157b0 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/KMSAccessDeniedExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/KMSAccessDeniedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.KMSAccessDeniedException;
 
 public class KMSAccessDeniedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,34 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public KMSAccessDeniedException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        KMSAccessDeniedException kMSAccessDeniedException = new KMSAccessDeniedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                kMSAccessDeniedException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("Type")) {
-                kMSAccessDeniedException.setType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return kMSAccessDeniedException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/KMSDisabledExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/KMSDisabledExceptionUnmarshaller.java
index bd2335a1b6..5a54cb980f 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/KMSDisabledExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/KMSDisabledExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.KMSDisabledException;
 
 public class KMSDisabledExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,33 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public KMSDisabledException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        KMSDisabledException kMSDisabledException = new KMSDisabledException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                kMSDisabledException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("Type")) {
-                kMSDisabledException.setType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return kMSDisabledException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/KMSInvalidStateExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/KMSInvalidStateExceptionUnmarshaller.java
index 395c70d717..aaa0db3332 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/KMSInvalidStateExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/KMSInvalidStateExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.KMSInvalidStateException;
 
 public class KMSInvalidStateExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,34 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public KMSInvalidStateException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        KMSInvalidStateException kMSInvalidStateException = new KMSInvalidStateException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                kMSInvalidStateException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("Type")) {
-                kMSInvalidStateException.setType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return kMSInvalidStateException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/KMSNotFoundExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/KMSNotFoundExceptionUnmarshaller.java
index 6198e4ce61..4da78d2384 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/KMSNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/KMSNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.KMSNotFoundException;
 
 public class KMSNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,33 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public KMSNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        KMSNotFoundException kMSNotFoundException = new KMSNotFoundException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                kMSNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("Type")) {
-                kMSNotFoundException.setType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return kMSNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/RequestTooLargeExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/RequestTooLargeExceptionUnmarshaller.java
index 75ad14678a..77941354b8 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/RequestTooLargeExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/RequestTooLargeExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.RequestTooLargeException;
 
 public class RequestTooLargeExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,34 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public RequestTooLargeException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        RequestTooLargeException requestTooLargeException = new RequestTooLargeException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                requestTooLargeException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("Type")) {
-                requestTooLargeException.setType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return requestTooLargeException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/ResourceNotFoundExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/ResourceNotFoundExceptionUnmarshaller.java
index df4c55ab0c..1bcc203f28 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/ResourceNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/ResourceNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.ResourceNotFoundException;
 
 public class ResourceNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,34 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceNotFoundException resourceNotFoundException = new ResourceNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("Type")) {
-                resourceNotFoundException.setType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/ServiceExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/ServiceExceptionUnmarshaller.java
index 8ae1c9e024..903cbdde2c 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/ServiceExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/ServiceExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.ServiceException;
 
 public class ServiceExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ServiceException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ServiceException serviceException = new ServiceException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                serviceException.setErrorMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else if (name.equals("Type")) {
-                serviceException.setType(StringJsonUnmarshaller.getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return serviceException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/SubnetIPAddressLimitReachedExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/SubnetIPAddressLimitReachedExceptionUnmarshaller.java
index 65877ff74f..59071f6b90 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/SubnetIPAddressLimitReachedExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/SubnetIPAddressLimitReachedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.SubnetIPAddressLimitReachedException;
 
 public class SubnetIPAddressLimitReachedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -44,35 +41,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public SubnetIPAddressLimitReachedException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        SubnetIPAddressLimitReachedException subnetIPAddressLimitReachedException = new SubnetIPAddressLimitReachedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                subnetIPAddressLimitReachedException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else if (name.equals("Type")) {
-                subnetIPAddressLimitReachedException.setType(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return subnetIPAddressLimitReachedException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/TooManyRequestsExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/TooManyRequestsExceptionUnmarshaller.java
index 666a4d1b8c..b84cc43f32 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/TooManyRequestsExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/TooManyRequestsExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.TooManyRequestsException;
 
 public class TooManyRequestsExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -47,40 +44,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public TooManyRequestsException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        TooManyRequestsException tooManyRequestsException = new TooManyRequestsException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                tooManyRequestsException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("retryAfterSeconds")) {
-                tooManyRequestsException.setRetryAfterSeconds(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("Type")) {
-                tooManyRequestsException.setType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else if (name.equals("Reason")) {
-                tooManyRequestsException.setReason(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return tooManyRequestsException;
-    }
 }
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/UnsupportedMediaTypeExceptionUnmarshaller.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/UnsupportedMediaTypeExceptionUnmarshaller.java
index 7f785b5823..ee0ca011f3 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/UnsupportedMediaTypeExceptionUnmarshaller.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/transform/UnsupportedMediaTypeExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.lambda.model.UnsupportedMediaTypeException;
 
 public class UnsupportedMediaTypeExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,35 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public UnsupportedMediaTypeException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        UnsupportedMediaTypeException unsupportedMediaTypeException = new UnsupportedMediaTypeException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                unsupportedMediaTypeException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("Type")) {
-                unsupportedMediaTypeException.setType(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return unsupportedMediaTypeException;
-    }
 }
diff --git a/aws-android-sdk-lex/pom.xml b/aws-android-sdk-lex/pom.xml
index 11a2ef9b62..a2b7006445 100644
--- a/aws-android-sdk-lex/pom.xml
+++ b/aws-android-sdk-lex/pom.xml
@@ -12,7 +12,7 @@
     <parent>
         <groupId>com.amazonaws</groupId>
         <artifactId>aws-android-sdk-pom</artifactId>
-        <version>2.8.5</version>
+        <version>2.9.0</version>
     </parent>
 
    <!-- Component includes software under each of these licenses; this is not a choice of license -->
@@ -33,7 +33,7 @@
             <groupId>com.amazonaws</groupId>
             <artifactId>aws-android-sdk-core</artifactId>
             <optional>false</optional>
-            <version>2.8.5</version>
+            <version>2.9.0</version>
         </dependency>
         <dependency>
             <groupId>com.google.android</groupId>
@@ -69,8 +69,7 @@
                 <extensions>true</extensions>
                 <configuration>
                     <sdk>
-                        <platform>${env.ANDROID_PLATFORM}</platform>
-                        <buildTools>${env.ANDROID_BUILDTOOL_VERSION}</buildTools>
+                        <platform>11</platform>
                     </sdk>
                     <nativeLibrariesDirectory>${project.basedir}/src/main/jni</nativeLibrariesDirectory>
                 </configuration>
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/AmazonLexRuntime.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/AmazonLexRuntime.java
index e7849fdc72..c2fd78bda8 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/AmazonLexRuntime.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/AmazonLexRuntime.java
@@ -98,8 +98,14 @@
     /**
      * <p>
      * Sends user input (text or speech) to Amazon Lex. Clients use this API to
-     * send requests to Amazon Lex at runtime. Amazon Lex interprets the user
-     * input using the machine learning model that it built for the bot.
+     * send text and audio requests to Amazon Lex at runtime. Amazon Lex
+     * interprets the user input using the machine learning model that it built
+     * for the bot.
+     * </p>
+     * <p>
+     * The <code>PostContent</code> operation supports audio input at 8kHz and
+     * 16kHz. You can use 8kHz audio to achieve higher speech recognition
+     * accuracy in telephone audio applications.
      * </p>
      * <p>
      * In response, Amazon Lex returns the next message to convey to the user.
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/AmazonLexRuntimeClient.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/AmazonLexRuntimeClient.java
index e46aa23dc3..30609ec4b4 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/AmazonLexRuntimeClient.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/AmazonLexRuntimeClient.java
@@ -310,8 +310,14 @@ private static ClientConfiguration adjustClientConfiguration(ClientConfiguration
     /**
      * <p>
      * Sends user input (text or speech) to Amazon Lex. Clients use this API to
-     * send requests to Amazon Lex at runtime. Amazon Lex interprets the user
-     * input using the machine learning model that it built for the bot.
+     * send text and audio requests to Amazon Lex at runtime. Amazon Lex
+     * interprets the user input using the machine learning model that it built
+     * for the bot.
+     * </p>
+     * <p>
+     * The <code>PostContent</code> operation supports audio input at 8kHz and
+     * 16kHz. You can use 8kHz audio to achieve higher speech recognition
+     * accuracy in telephone audio applications.
      * </p>
      * <p>
      * In response, Amazon Lex returns the next message to convey to the user.
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/BadRequestException.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/BadRequestException.java
index a6d4c1f411..dbe9dc3295 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/BadRequestException.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/BadRequestException.java
@@ -20,7 +20,7 @@
 /**
  * <p>
  * Request validation failed, there is no usable message in the context, or the
- * bot build failed.
+ * bot build failed, is still in progress, or contains unbuilt changes.
  * </p>
  */
 public class BadRequestException extends AmazonServiceException {
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/DependencyFailedException.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/DependencyFailedException.java
index db6f000c7d..d2215a59fb 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/DependencyFailedException.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/DependencyFailedException.java
@@ -19,10 +19,27 @@
 
 /**
  * <p>
- * One of the downstream dependencies, such as AWS Lambda or Amazon Polly, threw
- * an exception. For example, if Amazon Lex does not have sufficient permissions
- * to call a Lambda function, it results in Lambda throwing an exception.
+ * One of the dependencies, such as AWS Lambda or Amazon Polly, threw an
+ * exception. For example,
  * </p>
+ * <ul>
+ * <li>
+ * <p>
+ * If Amazon Lex does not have sufficient permissions to call a Lambda function.
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * If a Lambda function takes longer than 30 seconds to execute.
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * If a fulfillment Lambda function returns a <code>Delegate</code> dialog
+ * action without removing any slot values.
+ * </p>
+ * </li>
+ * </ul>
  */
 public class DependencyFailedException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/LoopDetectedException.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/LoopDetectedException.java
index 097d6844d2..42074de83a 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/LoopDetectedException.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/LoopDetectedException.java
@@ -19,8 +19,7 @@
 
 /**
  * <p>
- * Lambda fulfilment function returned <code>DelegateDialogAction</code> to
- * Amazon Lex without changing any slot values.
+ * This exception is not used.
  * </p>
  */
 public class LoopDetectedException extends AmazonServiceException {
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/MessageFormatType.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/MessageFormatType.java
new file mode 100644
index 0000000000..6ce53f3a10
--- /dev/null
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/MessageFormatType.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.lexrts.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Message Format Type
+ */
+public enum MessageFormatType {
+
+    PlainText("PlainText"),
+    CustomPayload("CustomPayload"),
+    SSML("SSML"),
+    Composite("Composite");
+
+    private String value;
+
+    private MessageFormatType(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, MessageFormatType> enumMap;
+    static {
+        enumMap = new HashMap<String, MessageFormatType>();
+        enumMap.put("PlainText", PlainText);
+        enumMap.put("CustomPayload", CustomPayload);
+        enumMap.put("SSML", SSML);
+        enumMap.put("Composite", Composite);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return MessageFormatType corresponding to the value
+     */
+    public static MessageFormatType fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/PostTextRequest.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/PostTextRequest.java
index 7a50f795ae..b916ce4a02 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/PostTextRequest.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/PostTextRequest.java
@@ -132,117 +132,83 @@
 
     /**
      * <p>
-     * The ID of the client application user. The application developer decides
-     * the user IDs. At runtime, each request must include the user ID.
-     * Typically, each of your application users should have a unique ID. Note
-     * the following considerations:
+     * The ID of the client application user. Amazon Lex uses this to identify a
+     * user's conversation with your bot. At runtime, each request must contain
+     * the <code>userID</code> field.
      * </p>
-     * <ul>
-     * <li>
      * <p>
-     * If you want a user to start a conversation on one device and continue the
-     * conversation on another device, you might choose a user-specific
-     * identifier, such as a login or Amazon Cognito user ID (assuming your
-     * application is using Amazon Cognito).
+     * To decide the user ID to use for your application, consider the following
+     * factors.
      * </p>
-     * </li>
+     * <ul>
      * <li>
      * <p>
-     * If you want the same user to be able to have two independent
-     * conversations on two different devices, you might choose a
-     * device-specific identifier, such as device ID, or some globally unique
-     * identifier.
+     * The <code>userID</code> field must not contain any personally
+     * identifiable information of the user, for example, name, personal
+     * identification numbers, or other end user personal information.
      * </p>
      * </li>
-     * </ul>
-     * <p>
-     * <b>Constraints:</b><br/>
-     * <b>Length: </b>2 - 100<br/>
-     * <b>Pattern: </b>[0-9a-zA-Z._:-]+<br/>
-     */
-    private String userId;
-
-    /**
-     * <p>
-     * By using session attributes, a client application can pass contextual
-     * information in the request to Amazon Lex For example,
-     * </p>
-     * <ul>
      * <li>
      * <p>
-     * In Getting Started Exercise 1, the example bot uses the
-     * <code>price</code> session attribute to maintain the price of the flowers
-     * ordered (for example, "Price":25). The code hook (the Lambda function)
-     * sets this attribute based on the type of flowers ordered. For more
-     * information, see <a href=
-     * "http://docs.aws.amazon.com/lex/latest/dg/gs-bp-details-after-lambda.html"
-     * >Review the Details of Information Flow</a>.
+     * If you want a user to start a conversation on one device and continue on
+     * another device, use a user-specific identifier.
      * </p>
      * </li>
      * <li>
      * <p>
-     * In the BookTrip bot exercise, the bot uses the
-     * <code>currentReservation</code> session attribute to maintain slot data
-     * during the in-progress conversation to book a hotel or book a car. For
-     * more information, see <a href=
-     * "http://docs.aws.amazon.com/lex/latest/dg/book-trip-detail-flow.html"
-     * >Details of Information Flow</a>.
+     * If you want the same user to be able to have two independent
+     * conversations on two different devices, choose a device-specific
+     * identifier.
      * </p>
      * </li>
      * <li>
      * <p>
-     * You might use the session attributes (key, value pairs) to track the
-     * requestID of user requests.
+     * A user can't have two independent conversations with two different
+     * versions of the same bot. For example, a user can't have a conversation
+     * with the PROD and BETA versions of the same bot. If you anticipate that a
+     * user will need to have conversation with two different versions, for
+     * example, while testing, include the bot alias in the user ID to separate
+     * the two conversations.
      * </p>
      * </li>
      * </ul>
      * <p>
-     * Amazon Lex simply passes these session attributes to the Lambda functions
-     * configured for the intent.
-     * </p>
-     * <p>
-     * In your Lambda function, you can also use the session attributes for
-     * initialization and customization (prompts and response cards). Some
-     * examples are:
-     * </p>
-     * <ul>
-     * <li>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>2 - 100<br/>
+     * <b>Pattern: </b>[0-9a-zA-Z._:-]+<br/>
+     */
+    private String userId;
+
+    /**
      * <p>
-     * Initialization - In a pizza ordering bot, if you can pass the user
-     * location as a session attribute (for example,
-     * <code>"Location" : "111 Maple street"</code>), then your Lambda function
-     * might use this information to determine the closest pizzeria to place the
-     * order (perhaps to set the storeAddress slot value).
+     * Application-specific information passed between Amazon Lex and a client
+     * application.
      * </p>
-     * </li>
-     * <li>
      * <p>
-     * Personalize prompts - For example, you can configure prompts to refer to
-     * the user name. (For example,
-     * "Hey [FirstName], what toppings would you like?"). You can pass the user
-     * name as a session attribute (<code>"FirstName" : "Joe"</code>) so that
-     * Amazon Lex can substitute the placeholder to provide a personalize prompt
-     * to the user ("Hey Joe, what toppings would you like?").
+     * For more information, see <a href=
+     * "http://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-session-attribs"
+     * >Setting Session Attributes</a>.
      * </p>
-     * </li>
-     * </ul>
-     * <note>
+     */
+    private java.util.Map<String, String> sessionAttributes;
+
+    /**
      * <p>
-     * Amazon Lex does not persist session attributes.
+     * Request-specific information passed between Amazon Lex and a client
+     * application.
      * </p>
      * <p>
-     * If you configure a code hook for the intent, Amazon Lex passes the
-     * incoming session attributes to the Lambda function. If you want Amazon
-     * Lex to return these session attributes back to the client, the Lambda
-     * function must return them.
+     * The namespace <code>x-amz-lex:</code> is reserved for special attributes.
+     * Don't create any request attributes with the prefix
+     * <code>x-amz-lex:</code>.
      * </p>
      * <p>
-     * If there is no code hook configured for the intent, Amazon Lex simply
-     * returns the session attributes back to the client application.
+     * For more information, see <a href=
+     * "http://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-request-attribs"
+     * >Setting Request Attributes</a>.
      * </p>
-     * </note>
      */
-    private java.util.Map<String, String> sessionAttributes;
+    private java.util.Map<String, String> requestAttributes;
 
     /**
      * <p>
@@ -346,28 +312,45 @@ public PostTextRequest withBotAlias(String botAlias) {
 
     /**
      * <p>
-     * The ID of the client application user. The application developer decides
-     * the user IDs. At runtime, each request must include the user ID.
-     * Typically, each of your application users should have a unique ID. Note
-     * the following considerations:
+     * The ID of the client application user. Amazon Lex uses this to identify a
+     * user's conversation with your bot. At runtime, each request must contain
+     * the <code>userID</code> field.
+     * </p>
+     * <p>
+     * To decide the user ID to use for your application, consider the following
+     * factors.
      * </p>
      * <ul>
      * <li>
      * <p>
-     * If you want a user to start a conversation on one device and continue the
-     * conversation on another device, you might choose a user-specific
-     * identifier, such as a login or Amazon Cognito user ID (assuming your
-     * application is using Amazon Cognito).
+     * The <code>userID</code> field must not contain any personally
+     * identifiable information of the user, for example, name, personal
+     * identification numbers, or other end user personal information.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * If you want a user to start a conversation on one device and continue on
+     * another device, use a user-specific identifier.
      * </p>
      * </li>
      * <li>
      * <p>
      * If you want the same user to be able to have two independent
-     * conversations on two different devices, you might choose a
-     * device-specific identifier, such as device ID, or some globally unique
+     * conversations on two different devices, choose a device-specific
      * identifier.
      * </p>
      * </li>
+     * <li>
+     * <p>
+     * A user can't have two independent conversations with two different
+     * versions of the same bot. For example, a user can't have a conversation
+     * with the PROD and BETA versions of the same bot. If you anticipate that a
+     * user will need to have conversation with two different versions, for
+     * example, while testing, include the bot alias in the user ID to separate
+     * the two conversations.
+     * </p>
+     * </li>
      * </ul>
      * <p>
      * <b>Constraints:</b><br/>
@@ -375,26 +358,43 @@ public PostTextRequest withBotAlias(String botAlias) {
      * <b>Pattern: </b>[0-9a-zA-Z._:-]+<br/>
      *
      * @return <p>
-     *         The ID of the client application user. The application developer
-     *         decides the user IDs. At runtime, each request must include the
-     *         user ID. Typically, each of your application users should have a
-     *         unique ID. Note the following considerations:
+     *         The ID of the client application user. Amazon Lex uses this to
+     *         identify a user's conversation with your bot. At runtime, each
+     *         request must contain the <code>userID</code> field.
+     *         </p>
+     *         <p>
+     *         To decide the user ID to use for your application, consider the
+     *         following factors.
      *         </p>
      *         <ul>
      *         <li>
      *         <p>
+     *         The <code>userID</code> field must not contain any personally
+     *         identifiable information of the user, for example, name, personal
+     *         identification numbers, or other end user personal information.
+     *         </p>
+     *         </li>
+     *         <li>
+     *         <p>
      *         If you want a user to start a conversation on one device and
-     *         continue the conversation on another device, you might choose a
-     *         user-specific identifier, such as a login or Amazon Cognito user
-     *         ID (assuming your application is using Amazon Cognito).
+     *         continue on another device, use a user-specific identifier.
      *         </p>
      *         </li>
      *         <li>
      *         <p>
      *         If you want the same user to be able to have two independent
-     *         conversations on two different devices, you might choose a
-     *         device-specific identifier, such as device ID, or some globally
-     *         unique identifier.
+     *         conversations on two different devices, choose a device-specific
+     *         identifier.
+     *         </p>
+     *         </li>
+     *         <li>
+     *         <p>
+     *         A user can't have two independent conversations with two
+     *         different versions of the same bot. For example, a user can't
+     *         have a conversation with the PROD and BETA versions of the same
+     *         bot. If you anticipate that a user will need to have conversation
+     *         with two different versions, for example, while testing, include
+     *         the bot alias in the user ID to separate the two conversations.
      *         </p>
      *         </li>
      *         </ul>
@@ -405,28 +405,45 @@ public String getUserId() {
 
     /**
      * <p>
-     * The ID of the client application user. The application developer decides
-     * the user IDs. At runtime, each request must include the user ID.
-     * Typically, each of your application users should have a unique ID. Note
-     * the following considerations:
+     * The ID of the client application user. Amazon Lex uses this to identify a
+     * user's conversation with your bot. At runtime, each request must contain
+     * the <code>userID</code> field.
+     * </p>
+     * <p>
+     * To decide the user ID to use for your application, consider the following
+     * factors.
      * </p>
      * <ul>
      * <li>
      * <p>
-     * If you want a user to start a conversation on one device and continue the
-     * conversation on another device, you might choose a user-specific
-     * identifier, such as a login or Amazon Cognito user ID (assuming your
-     * application is using Amazon Cognito).
+     * The <code>userID</code> field must not contain any personally
+     * identifiable information of the user, for example, name, personal
+     * identification numbers, or other end user personal information.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * If you want a user to start a conversation on one device and continue on
+     * another device, use a user-specific identifier.
      * </p>
      * </li>
      * <li>
      * <p>
      * If you want the same user to be able to have two independent
-     * conversations on two different devices, you might choose a
-     * device-specific identifier, such as device ID, or some globally unique
+     * conversations on two different devices, choose a device-specific
      * identifier.
      * </p>
      * </li>
+     * <li>
+     * <p>
+     * A user can't have two independent conversations with two different
+     * versions of the same bot. For example, a user can't have a conversation
+     * with the PROD and BETA versions of the same bot. If you anticipate that a
+     * user will need to have conversation with two different versions, for
+     * example, while testing, include the bot alias in the user ID to separate
+     * the two conversations.
+     * </p>
+     * </li>
      * </ul>
      * <p>
      * <b>Constraints:</b><br/>
@@ -434,26 +451,45 @@ public String getUserId() {
      * <b>Pattern: </b>[0-9a-zA-Z._:-]+<br/>
      *
      * @param userId <p>
-     *            The ID of the client application user. The application
-     *            developer decides the user IDs. At runtime, each request must
-     *            include the user ID. Typically, each of your application users
-     *            should have a unique ID. Note the following considerations:
+     *            The ID of the client application user. Amazon Lex uses this to
+     *            identify a user's conversation with your bot. At runtime, each
+     *            request must contain the <code>userID</code> field.
+     *            </p>
+     *            <p>
+     *            To decide the user ID to use for your application, consider
+     *            the following factors.
      *            </p>
      *            <ul>
      *            <li>
      *            <p>
+     *            The <code>userID</code> field must not contain any personally
+     *            identifiable information of the user, for example, name,
+     *            personal identification numbers, or other end user personal
+     *            information.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
      *            If you want a user to start a conversation on one device and
-     *            continue the conversation on another device, you might choose
-     *            a user-specific identifier, such as a login or Amazon Cognito
-     *            user ID (assuming your application is using Amazon Cognito).
+     *            continue on another device, use a user-specific identifier.
      *            </p>
      *            </li>
      *            <li>
      *            <p>
      *            If you want the same user to be able to have two independent
-     *            conversations on two different devices, you might choose a
-     *            device-specific identifier, such as device ID, or some
-     *            globally unique identifier.
+     *            conversations on two different devices, choose a
+     *            device-specific identifier.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            A user can't have two independent conversations with two
+     *            different versions of the same bot. For example, a user can't
+     *            have a conversation with the PROD and BETA versions of the
+     *            same bot. If you anticipate that a user will need to have
+     *            conversation with two different versions, for example, while
+     *            testing, include the bot alias in the user ID to separate the
+     *            two conversations.
      *            </p>
      *            </li>
      *            </ul>
@@ -464,28 +500,45 @@ public void setUserId(String userId) {
 
     /**
      * <p>
-     * The ID of the client application user. The application developer decides
-     * the user IDs. At runtime, each request must include the user ID.
-     * Typically, each of your application users should have a unique ID. Note
-     * the following considerations:
+     * The ID of the client application user. Amazon Lex uses this to identify a
+     * user's conversation with your bot. At runtime, each request must contain
+     * the <code>userID</code> field.
+     * </p>
+     * <p>
+     * To decide the user ID to use for your application, consider the following
+     * factors.
      * </p>
      * <ul>
      * <li>
      * <p>
-     * If you want a user to start a conversation on one device and continue the
-     * conversation on another device, you might choose a user-specific
-     * identifier, such as a login or Amazon Cognito user ID (assuming your
-     * application is using Amazon Cognito).
+     * The <code>userID</code> field must not contain any personally
+     * identifiable information of the user, for example, name, personal
+     * identification numbers, or other end user personal information.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * If you want a user to start a conversation on one device and continue on
+     * another device, use a user-specific identifier.
      * </p>
      * </li>
      * <li>
      * <p>
      * If you want the same user to be able to have two independent
-     * conversations on two different devices, you might choose a
-     * device-specific identifier, such as device ID, or some globally unique
+     * conversations on two different devices, choose a device-specific
      * identifier.
      * </p>
      * </li>
+     * <li>
+     * <p>
+     * A user can't have two independent conversations with two different
+     * versions of the same bot. For example, a user can't have a conversation
+     * with the PROD and BETA versions of the same bot. If you anticipate that a
+     * user will need to have conversation with two different versions, for
+     * example, while testing, include the bot alias in the user ID to separate
+     * the two conversations.
+     * </p>
+     * </li>
      * </ul>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -496,26 +549,45 @@ public void setUserId(String userId) {
      * <b>Pattern: </b>[0-9a-zA-Z._:-]+<br/>
      *
      * @param userId <p>
-     *            The ID of the client application user. The application
-     *            developer decides the user IDs. At runtime, each request must
-     *            include the user ID. Typically, each of your application users
-     *            should have a unique ID. Note the following considerations:
+     *            The ID of the client application user. Amazon Lex uses this to
+     *            identify a user's conversation with your bot. At runtime, each
+     *            request must contain the <code>userID</code> field.
+     *            </p>
+     *            <p>
+     *            To decide the user ID to use for your application, consider
+     *            the following factors.
      *            </p>
      *            <ul>
      *            <li>
      *            <p>
+     *            The <code>userID</code> field must not contain any personally
+     *            identifiable information of the user, for example, name,
+     *            personal identification numbers, or other end user personal
+     *            information.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
      *            If you want a user to start a conversation on one device and
-     *            continue the conversation on another device, you might choose
-     *            a user-specific identifier, such as a login or Amazon Cognito
-     *            user ID (assuming your application is using Amazon Cognito).
+     *            continue on another device, use a user-specific identifier.
      *            </p>
      *            </li>
      *            <li>
      *            <p>
      *            If you want the same user to be able to have two independent
-     *            conversations on two different devices, you might choose a
-     *            device-specific identifier, such as device ID, or some
-     *            globally unique identifier.
+     *            conversations on two different devices, choose a
+     *            device-specific identifier.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            A user can't have two independent conversations with two
+     *            different versions of the same bot. For example, a user can't
+     *            have a conversation with the PROD and BETA versions of the
+     *            same bot. If you anticipate that a user will need to have
+     *            conversation with two different versions, for example, while
+     *            testing, include the bot alias in the user ID to separate the
+     *            two conversations.
      *            </p>
      *            </li>
      *            </ul>
@@ -529,165 +601,24 @@ public PostTextRequest withUserId(String userId) {
 
     /**
      * <p>
-     * By using session attributes, a client application can pass contextual
-     * information in the request to Amazon Lex For example,
+     * Application-specific information passed between Amazon Lex and a client
+     * application.
      * </p>
-     * <ul>
-     * <li>
      * <p>
-     * In Getting Started Exercise 1, the example bot uses the
-     * <code>price</code> session attribute to maintain the price of the flowers
-     * ordered (for example, "Price":25). The code hook (the Lambda function)
-     * sets this attribute based on the type of flowers ordered. For more
-     * information, see <a href=
-     * "http://docs.aws.amazon.com/lex/latest/dg/gs-bp-details-after-lambda.html"
-     * >Review the Details of Information Flow</a>.
+     * For more information, see <a href=
+     * "http://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-session-attribs"
+     * >Setting Session Attributes</a>.
      * </p>
-     * </li>
-     * <li>
-     * <p>
-     * In the BookTrip bot exercise, the bot uses the
-     * <code>currentReservation</code> session attribute to maintain slot data
-     * during the in-progress conversation to book a hotel or book a car. For
-     * more information, see <a href=
-     * "http://docs.aws.amazon.com/lex/latest/dg/book-trip-detail-flow.html"
-     * >Details of Information Flow</a>.
-     * </p>
-     * </li>
-     * <li>
-     * <p>
-     * You might use the session attributes (key, value pairs) to track the
-     * requestID of user requests.
-     * </p>
-     * </li>
-     * </ul>
-     * <p>
-     * Amazon Lex simply passes these session attributes to the Lambda functions
-     * configured for the intent.
-     * </p>
-     * <p>
-     * In your Lambda function, you can also use the session attributes for
-     * initialization and customization (prompts and response cards). Some
-     * examples are:
-     * </p>
-     * <ul>
-     * <li>
-     * <p>
-     * Initialization - In a pizza ordering bot, if you can pass the user
-     * location as a session attribute (for example,
-     * <code>"Location" : "111 Maple street"</code>), then your Lambda function
-     * might use this information to determine the closest pizzeria to place the
-     * order (perhaps to set the storeAddress slot value).
-     * </p>
-     * </li>
-     * <li>
-     * <p>
-     * Personalize prompts - For example, you can configure prompts to refer to
-     * the user name. (For example,
-     * "Hey [FirstName], what toppings would you like?"). You can pass the user
-     * name as a session attribute (<code>"FirstName" : "Joe"</code>) so that
-     * Amazon Lex can substitute the placeholder to provide a personalize prompt
-     * to the user ("Hey Joe, what toppings would you like?").
-     * </p>
-     * </li>
-     * </ul>
-     * <note>
-     * <p>
-     * Amazon Lex does not persist session attributes.
-     * </p>
-     * <p>
-     * If you configure a code hook for the intent, Amazon Lex passes the
-     * incoming session attributes to the Lambda function. If you want Amazon
-     * Lex to return these session attributes back to the client, the Lambda
-     * function must return them.
-     * </p>
-     * <p>
-     * If there is no code hook configured for the intent, Amazon Lex simply
-     * returns the session attributes back to the client application.
-     * </p>
-     * </note>
      *
      * @return <p>
-     *         By using session attributes, a client application can pass
-     *         contextual information in the request to Amazon Lex For example,
-     *         </p>
-     *         <ul>
-     *         <li>
-     *         <p>
-     *         In Getting Started Exercise 1, the example bot uses the
-     *         <code>price</code> session attribute to maintain the price of the
-     *         flowers ordered (for example, "Price":25). The code hook (the
-     *         Lambda function) sets this attribute based on the type of flowers
-     *         ordered. For more information, see <a href=
-     *         "http://docs.aws.amazon.com/lex/latest/dg/gs-bp-details-after-lambda.html"
-     *         >Review the Details of Information Flow</a>.
-     *         </p>
-     *         </li>
-     *         <li>
-     *         <p>
-     *         In the BookTrip bot exercise, the bot uses the
-     *         <code>currentReservation</code> session attribute to maintain
-     *         slot data during the in-progress conversation to book a hotel or
-     *         book a car. For more information, see <a href=
-     *         "http://docs.aws.amazon.com/lex/latest/dg/book-trip-detail-flow.html"
-     *         >Details of Information Flow</a>.
+     *         Application-specific information passed between Amazon Lex and a
+     *         client application.
      *         </p>
-     *         </li>
-     *         <li>
      *         <p>
-     *         You might use the session attributes (key, value pairs) to track
-     *         the requestID of user requests.
+     *         For more information, see <a href=
+     *         "http://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-session-attribs"
+     *         >Setting Session Attributes</a>.
      *         </p>
-     *         </li>
-     *         </ul>
-     *         <p>
-     *         Amazon Lex simply passes these session attributes to the Lambda
-     *         functions configured for the intent.
-     *         </p>
-     *         <p>
-     *         In your Lambda function, you can also use the session attributes
-     *         for initialization and customization (prompts and response
-     *         cards). Some examples are:
-     *         </p>
-     *         <ul>
-     *         <li>
-     *         <p>
-     *         Initialization - In a pizza ordering bot, if you can pass the
-     *         user location as a session attribute (for example,
-     *         <code>"Location" : "111 Maple street"</code>), then your Lambda
-     *         function might use this information to determine the closest
-     *         pizzeria to place the order (perhaps to set the storeAddress slot
-     *         value).
-     *         </p>
-     *         </li>
-     *         <li>
-     *         <p>
-     *         Personalize prompts - For example, you can configure prompts to
-     *         refer to the user name. (For example,
-     *         "Hey [FirstName], what toppings would you like?"). You can pass
-     *         the user name as a session attribute (
-     *         <code>"FirstName" : "Joe"</code>) so that Amazon Lex can
-     *         substitute the placeholder to provide a personalize prompt to the
-     *         user ("Hey Joe, what toppings would you like?").
-     *         </p>
-     *         </li>
-     *         </ul>
-     *         <note>
-     *         <p>
-     *         Amazon Lex does not persist session attributes.
-     *         </p>
-     *         <p>
-     *         If you configure a code hook for the intent, Amazon Lex passes
-     *         the incoming session attributes to the Lambda function. If you
-     *         want Amazon Lex to return these session attributes back to the
-     *         client, the Lambda function must return them.
-     *         </p>
-     *         <p>
-     *         If there is no code hook configured for the intent, Amazon Lex
-     *         simply returns the session attributes back to the client
-     *         application.
-     *         </p>
-     *         </note>
      */
     public java.util.Map<String, String> getSessionAttributes() {
         return sessionAttributes;
@@ -695,453 +626,259 @@ public PostTextRequest withUserId(String userId) {
 
     /**
      * <p>
-     * By using session attributes, a client application can pass contextual
-     * information in the request to Amazon Lex For example,
-     * </p>
-     * <ul>
-     * <li>
-     * <p>
-     * In Getting Started Exercise 1, the example bot uses the
-     * <code>price</code> session attribute to maintain the price of the flowers
-     * ordered (for example, "Price":25). The code hook (the Lambda function)
-     * sets this attribute based on the type of flowers ordered. For more
-     * information, see <a href=
-     * "http://docs.aws.amazon.com/lex/latest/dg/gs-bp-details-after-lambda.html"
-     * >Review the Details of Information Flow</a>.
-     * </p>
-     * </li>
-     * <li>
-     * <p>
-     * In the BookTrip bot exercise, the bot uses the
-     * <code>currentReservation</code> session attribute to maintain slot data
-     * during the in-progress conversation to book a hotel or book a car. For
-     * more information, see <a href=
-     * "http://docs.aws.amazon.com/lex/latest/dg/book-trip-detail-flow.html"
-     * >Details of Information Flow</a>.
-     * </p>
-     * </li>
-     * <li>
-     * <p>
-     * You might use the session attributes (key, value pairs) to track the
-     * requestID of user requests.
-     * </p>
-     * </li>
-     * </ul>
-     * <p>
-     * Amazon Lex simply passes these session attributes to the Lambda functions
-     * configured for the intent.
-     * </p>
-     * <p>
-     * In your Lambda function, you can also use the session attributes for
-     * initialization and customization (prompts and response cards). Some
-     * examples are:
-     * </p>
-     * <ul>
-     * <li>
-     * <p>
-     * Initialization - In a pizza ordering bot, if you can pass the user
-     * location as a session attribute (for example,
-     * <code>"Location" : "111 Maple street"</code>), then your Lambda function
-     * might use this information to determine the closest pizzeria to place the
-     * order (perhaps to set the storeAddress slot value).
+     * Application-specific information passed between Amazon Lex and a client
+     * application.
      * </p>
-     * </li>
-     * <li>
      * <p>
-     * Personalize prompts - For example, you can configure prompts to refer to
-     * the user name. (For example,
-     * "Hey [FirstName], what toppings would you like?"). You can pass the user
-     * name as a session attribute (<code>"FirstName" : "Joe"</code>) so that
-     * Amazon Lex can substitute the placeholder to provide a personalize prompt
-     * to the user ("Hey Joe, what toppings would you like?").
+     * For more information, see <a href=
+     * "http://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-session-attribs"
+     * >Setting Session Attributes</a>.
      * </p>
-     * </li>
-     * </ul>
-     * <note>
+     *
+     * @param sessionAttributes <p>
+     *            Application-specific information passed between Amazon Lex and
+     *            a client application.
+     *            </p>
+     *            <p>
+     *            For more information, see <a href=
+     *            "http://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-session-attribs"
+     *            >Setting Session Attributes</a>.
+     *            </p>
+     */
+    public void setSessionAttributes(java.util.Map<String, String> sessionAttributes) {
+        this.sessionAttributes = sessionAttributes;
+    }
+
+    /**
      * <p>
-     * Amazon Lex does not persist session attributes.
+     * Application-specific information passed between Amazon Lex and a client
+     * application.
      * </p>
      * <p>
-     * If you configure a code hook for the intent, Amazon Lex passes the
-     * incoming session attributes to the Lambda function. If you want Amazon
-     * Lex to return these session attributes back to the client, the Lambda
-     * function must return them.
+     * For more information, see <a href=
+     * "http://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-session-attribs"
+     * >Setting Session Attributes</a>.
      * </p>
      * <p>
-     * If there is no code hook configured for the intent, Amazon Lex simply
-     * returns the session attributes back to the client application.
-     * </p>
-     * </note>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
      *
      * @param sessionAttributes <p>
-     *            By using session attributes, a client application can pass
-     *            contextual information in the request to Amazon Lex For
-     *            example,
+     *            Application-specific information passed between Amazon Lex and
+     *            a client application.
      *            </p>
-     *            <ul>
-     *            <li>
-     *            <p>
-     *            In Getting Started Exercise 1, the example bot uses the
-     *            <code>price</code> session attribute to maintain the price of
-     *            the flowers ordered (for example, "Price":25). The code hook
-     *            (the Lambda function) sets this attribute based on the type of
-     *            flowers ordered. For more information, see <a href=
-     *            "http://docs.aws.amazon.com/lex/latest/dg/gs-bp-details-after-lambda.html"
-     *            >Review the Details of Information Flow</a>.
-     *            </p>
-     *            </li>
-     *            <li>
-     *            <p>
-     *            In the BookTrip bot exercise, the bot uses the
-     *            <code>currentReservation</code> session attribute to maintain
-     *            slot data during the in-progress conversation to book a hotel
-     *            or book a car. For more information, see <a href=
-     *            "http://docs.aws.amazon.com/lex/latest/dg/book-trip-detail-flow.html"
-     *            >Details of Information Flow</a>.
-     *            </p>
-     *            </li>
-     *            <li>
-     *            <p>
-     *            You might use the session attributes (key, value pairs) to
-     *            track the requestID of user requests.
-     *            </p>
-     *            </li>
-     *            </ul>
      *            <p>
-     *            Amazon Lex simply passes these session attributes to the
-     *            Lambda functions configured for the intent.
+     *            For more information, see <a href=
+     *            "http://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-session-attribs"
+     *            >Setting Session Attributes</a>.
      *            </p>
-     *            <p>
-     *            In your Lambda function, you can also use the session
-     *            attributes for initialization and customization (prompts and
-     *            response cards). Some examples are:
-     *            </p>
-     *            <ul>
-     *            <li>
-     *            <p>
-     *            Initialization - In a pizza ordering bot, if you can pass the
-     *            user location as a session attribute (for example,
-     *            <code>"Location" : "111 Maple street"</code>), then your
-     *            Lambda function might use this information to determine the
-     *            closest pizzeria to place the order (perhaps to set the
-     *            storeAddress slot value).
-     *            </p>
-     *            </li>
-     *            <li>
-     *            <p>
-     *            Personalize prompts - For example, you can configure prompts
-     *            to refer to the user name. (For example,
-     *            "Hey [FirstName], what toppings would you like?"). You can
-     *            pass the user name as a session attribute (
-     *            <code>"FirstName" : "Joe"</code>) so that Amazon Lex can
-     *            substitute the placeholder to provide a personalize prompt to
-     *            the user ("Hey Joe, what toppings would you like?").
-     *            </p>
-     *            </li>
-     *            </ul>
-     *            <note>
-     *            <p>
-     *            Amazon Lex does not persist session attributes.
-     *            </p>
-     *            <p>
-     *            If you configure a code hook for the intent, Amazon Lex passes
-     *            the incoming session attributes to the Lambda function. If you
-     *            want Amazon Lex to return these session attributes back to the
-     *            client, the Lambda function must return them.
-     *            </p>
-     *            <p>
-     *            If there is no code hook configured for the intent, Amazon Lex
-     *            simply returns the session attributes back to the client
-     *            application.
-     *            </p>
-     *            </note>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
      */
-    public void setSessionAttributes(java.util.Map<String, String> sessionAttributes) {
+    public PostTextRequest withSessionAttributes(java.util.Map<String, String> sessionAttributes) {
         this.sessionAttributes = sessionAttributes;
+        return this;
     }
 
     /**
      * <p>
-     * By using session attributes, a client application can pass contextual
-     * information in the request to Amazon Lex For example,
+     * Application-specific information passed between Amazon Lex and a client
+     * application.
      * </p>
-     * <ul>
-     * <li>
      * <p>
-     * In Getting Started Exercise 1, the example bot uses the
-     * <code>price</code> session attribute to maintain the price of the flowers
-     * ordered (for example, "Price":25). The code hook (the Lambda function)
-     * sets this attribute based on the type of flowers ordered. For more
-     * information, see <a href=
-     * "http://docs.aws.amazon.com/lex/latest/dg/gs-bp-details-after-lambda.html"
-     * >Review the Details of Information Flow</a>.
+     * For more information, see <a href=
+     * "http://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-session-attribs"
+     * >Setting Session Attributes</a>.
      * </p>
-     * </li>
-     * <li>
      * <p>
-     * In the BookTrip bot exercise, the bot uses the
-     * <code>currentReservation</code> session attribute to maintain slot data
-     * during the in-progress conversation to book a hotel or book a car. For
-     * more information, see <a href=
-     * "http://docs.aws.amazon.com/lex/latest/dg/book-trip-detail-flow.html"
-     * >Details of Information Flow</a>.
+     * The method adds a new key-value pair into sessionAttributes parameter,
+     * and returns a reference to this object so that method calls can be
+     * chained together.
+     *
+     * @param key The key of the entry to be added into sessionAttributes.
+     * @param value The corresponding value of the entry to be added into
+     *            sessionAttributes.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PostTextRequest addsessionAttributesEntry(String key, String value) {
+        if (null == this.sessionAttributes) {
+            this.sessionAttributes = new java.util.HashMap<String, String>();
+        }
+        if (this.sessionAttributes.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.sessionAttributes.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into sessionAttributes.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public PostTextRequest clearsessionAttributesEntries() {
+        this.sessionAttributes = null;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Request-specific information passed between Amazon Lex and a client
+     * application.
      * </p>
-     * </li>
-     * <li>
      * <p>
-     * You might use the session attributes (key, value pairs) to track the
-     * requestID of user requests.
+     * The namespace <code>x-amz-lex:</code> is reserved for special attributes.
+     * Don't create any request attributes with the prefix
+     * <code>x-amz-lex:</code>.
      * </p>
-     * </li>
-     * </ul>
      * <p>
-     * Amazon Lex simply passes these session attributes to the Lambda functions
-     * configured for the intent.
+     * For more information, see <a href=
+     * "http://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-request-attribs"
+     * >Setting Request Attributes</a>.
      * </p>
+     *
+     * @return <p>
+     *         Request-specific information passed between Amazon Lex and a
+     *         client application.
+     *         </p>
+     *         <p>
+     *         The namespace <code>x-amz-lex:</code> is reserved for special
+     *         attributes. Don't create any request attributes with the prefix
+     *         <code>x-amz-lex:</code>.
+     *         </p>
+     *         <p>
+     *         For more information, see <a href=
+     *         "http://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-request-attribs"
+     *         >Setting Request Attributes</a>.
+     *         </p>
+     */
+    public java.util.Map<String, String> getRequestAttributes() {
+        return requestAttributes;
+    }
+
+    /**
      * <p>
-     * In your Lambda function, you can also use the session attributes for
-     * initialization and customization (prompts and response cards). Some
-     * examples are:
+     * Request-specific information passed between Amazon Lex and a client
+     * application.
      * </p>
-     * <ul>
-     * <li>
      * <p>
-     * Initialization - In a pizza ordering bot, if you can pass the user
-     * location as a session attribute (for example,
-     * <code>"Location" : "111 Maple street"</code>), then your Lambda function
-     * might use this information to determine the closest pizzeria to place the
-     * order (perhaps to set the storeAddress slot value).
+     * The namespace <code>x-amz-lex:</code> is reserved for special attributes.
+     * Don't create any request attributes with the prefix
+     * <code>x-amz-lex:</code>.
      * </p>
-     * </li>
-     * <li>
      * <p>
-     * Personalize prompts - For example, you can configure prompts to refer to
-     * the user name. (For example,
-     * "Hey [FirstName], what toppings would you like?"). You can pass the user
-     * name as a session attribute (<code>"FirstName" : "Joe"</code>) so that
-     * Amazon Lex can substitute the placeholder to provide a personalize prompt
-     * to the user ("Hey Joe, what toppings would you like?").
+     * For more information, see <a href=
+     * "http://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-request-attribs"
+     * >Setting Request Attributes</a>.
      * </p>
-     * </li>
-     * </ul>
-     * <note>
+     *
+     * @param requestAttributes <p>
+     *            Request-specific information passed between Amazon Lex and a
+     *            client application.
+     *            </p>
+     *            <p>
+     *            The namespace <code>x-amz-lex:</code> is reserved for special
+     *            attributes. Don't create any request attributes with the
+     *            prefix <code>x-amz-lex:</code>.
+     *            </p>
+     *            <p>
+     *            For more information, see <a href=
+     *            "http://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-request-attribs"
+     *            >Setting Request Attributes</a>.
+     *            </p>
+     */
+    public void setRequestAttributes(java.util.Map<String, String> requestAttributes) {
+        this.requestAttributes = requestAttributes;
+    }
+
+    /**
      * <p>
-     * Amazon Lex does not persist session attributes.
+     * Request-specific information passed between Amazon Lex and a client
+     * application.
      * </p>
      * <p>
-     * If you configure a code hook for the intent, Amazon Lex passes the
-     * incoming session attributes to the Lambda function. If you want Amazon
-     * Lex to return these session attributes back to the client, the Lambda
-     * function must return them.
+     * The namespace <code>x-amz-lex:</code> is reserved for special attributes.
+     * Don't create any request attributes with the prefix
+     * <code>x-amz-lex:</code>.
      * </p>
      * <p>
-     * If there is no code hook configured for the intent, Amazon Lex simply
-     * returns the session attributes back to the client application.
+     * For more information, see <a href=
+     * "http://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-request-attribs"
+     * >Setting Request Attributes</a>.
      * </p>
-     * </note>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param sessionAttributes <p>
-     *            By using session attributes, a client application can pass
-     *            contextual information in the request to Amazon Lex For
-     *            example,
-     *            </p>
-     *            <ul>
-     *            <li>
-     *            <p>
-     *            In Getting Started Exercise 1, the example bot uses the
-     *            <code>price</code> session attribute to maintain the price of
-     *            the flowers ordered (for example, "Price":25). The code hook
-     *            (the Lambda function) sets this attribute based on the type of
-     *            flowers ordered. For more information, see <a href=
-     *            "http://docs.aws.amazon.com/lex/latest/dg/gs-bp-details-after-lambda.html"
-     *            >Review the Details of Information Flow</a>.
+     * @param requestAttributes <p>
+     *            Request-specific information passed between Amazon Lex and a
+     *            client application.
      *            </p>
-     *            </li>
-     *            <li>
-     *            <p>
-     *            In the BookTrip bot exercise, the bot uses the
-     *            <code>currentReservation</code> session attribute to maintain
-     *            slot data during the in-progress conversation to book a hotel
-     *            or book a car. For more information, see <a href=
-     *            "http://docs.aws.amazon.com/lex/latest/dg/book-trip-detail-flow.html"
-     *            >Details of Information Flow</a>.
-     *            </p>
-     *            </li>
-     *            <li>
-     *            <p>
-     *            You might use the session attributes (key, value pairs) to
-     *            track the requestID of user requests.
-     *            </p>
-     *            </li>
-     *            </ul>
-     *            <p>
-     *            Amazon Lex simply passes these session attributes to the
-     *            Lambda functions configured for the intent.
-     *            </p>
-     *            <p>
-     *            In your Lambda function, you can also use the session
-     *            attributes for initialization and customization (prompts and
-     *            response cards). Some examples are:
-     *            </p>
-     *            <ul>
-     *            <li>
-     *            <p>
-     *            Initialization - In a pizza ordering bot, if you can pass the
-     *            user location as a session attribute (for example,
-     *            <code>"Location" : "111 Maple street"</code>), then your
-     *            Lambda function might use this information to determine the
-     *            closest pizzeria to place the order (perhaps to set the
-     *            storeAddress slot value).
-     *            </p>
-     *            </li>
-     *            <li>
-     *            <p>
-     *            Personalize prompts - For example, you can configure prompts
-     *            to refer to the user name. (For example,
-     *            "Hey [FirstName], what toppings would you like?"). You can
-     *            pass the user name as a session attribute (
-     *            <code>"FirstName" : "Joe"</code>) so that Amazon Lex can
-     *            substitute the placeholder to provide a personalize prompt to
-     *            the user ("Hey Joe, what toppings would you like?").
-     *            </p>
-     *            </li>
-     *            </ul>
-     *            <note>
      *            <p>
-     *            Amazon Lex does not persist session attributes.
+     *            The namespace <code>x-amz-lex:</code> is reserved for special
+     *            attributes. Don't create any request attributes with the
+     *            prefix <code>x-amz-lex:</code>.
      *            </p>
      *            <p>
-     *            If you configure a code hook for the intent, Amazon Lex passes
-     *            the incoming session attributes to the Lambda function. If you
-     *            want Amazon Lex to return these session attributes back to the
-     *            client, the Lambda function must return them.
+     *            For more information, see <a href=
+     *            "http://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-request-attribs"
+     *            >Setting Request Attributes</a>.
      *            </p>
-     *            <p>
-     *            If there is no code hook configured for the intent, Amazon Lex
-     *            simply returns the session attributes back to the client
-     *            application.
-     *            </p>
-     *            </note>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
-    public PostTextRequest withSessionAttributes(java.util.Map<String, String> sessionAttributes) {
-        this.sessionAttributes = sessionAttributes;
+    public PostTextRequest withRequestAttributes(java.util.Map<String, String> requestAttributes) {
+        this.requestAttributes = requestAttributes;
         return this;
     }
 
     /**
      * <p>
-     * By using session attributes, a client application can pass contextual
-     * information in the request to Amazon Lex For example,
-     * </p>
-     * <ul>
-     * <li>
-     * <p>
-     * In Getting Started Exercise 1, the example bot uses the
-     * <code>price</code> session attribute to maintain the price of the flowers
-     * ordered (for example, "Price":25). The code hook (the Lambda function)
-     * sets this attribute based on the type of flowers ordered. For more
-     * information, see <a href=
-     * "http://docs.aws.amazon.com/lex/latest/dg/gs-bp-details-after-lambda.html"
-     * >Review the Details of Information Flow</a>.
-     * </p>
-     * </li>
-     * <li>
-     * <p>
-     * In the BookTrip bot exercise, the bot uses the
-     * <code>currentReservation</code> session attribute to maintain slot data
-     * during the in-progress conversation to book a hotel or book a car. For
-     * more information, see <a href=
-     * "http://docs.aws.amazon.com/lex/latest/dg/book-trip-detail-flow.html"
-     * >Details of Information Flow</a>.
-     * </p>
-     * </li>
-     * <li>
-     * <p>
-     * You might use the session attributes (key, value pairs) to track the
-     * requestID of user requests.
-     * </p>
-     * </li>
-     * </ul>
-     * <p>
-     * Amazon Lex simply passes these session attributes to the Lambda functions
-     * configured for the intent.
-     * </p>
-     * <p>
-     * In your Lambda function, you can also use the session attributes for
-     * initialization and customization (prompts and response cards). Some
-     * examples are:
-     * </p>
-     * <ul>
-     * <li>
-     * <p>
-     * Initialization - In a pizza ordering bot, if you can pass the user
-     * location as a session attribute (for example,
-     * <code>"Location" : "111 Maple street"</code>), then your Lambda function
-     * might use this information to determine the closest pizzeria to place the
-     * order (perhaps to set the storeAddress slot value).
-     * </p>
-     * </li>
-     * <li>
-     * <p>
-     * Personalize prompts - For example, you can configure prompts to refer to
-     * the user name. (For example,
-     * "Hey [FirstName], what toppings would you like?"). You can pass the user
-     * name as a session attribute (<code>"FirstName" : "Joe"</code>) so that
-     * Amazon Lex can substitute the placeholder to provide a personalize prompt
-     * to the user ("Hey Joe, what toppings would you like?").
-     * </p>
-     * </li>
-     * </ul>
-     * <note>
-     * <p>
-     * Amazon Lex does not persist session attributes.
+     * Request-specific information passed between Amazon Lex and a client
+     * application.
      * </p>
      * <p>
-     * If you configure a code hook for the intent, Amazon Lex passes the
-     * incoming session attributes to the Lambda function. If you want Amazon
-     * Lex to return these session attributes back to the client, the Lambda
-     * function must return them.
+     * The namespace <code>x-amz-lex:</code> is reserved for special attributes.
+     * Don't create any request attributes with the prefix
+     * <code>x-amz-lex:</code>.
      * </p>
      * <p>
-     * If there is no code hook configured for the intent, Amazon Lex simply
-     * returns the session attributes back to the client application.
+     * For more information, see <a href=
+     * "http://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-request-attribs"
+     * >Setting Request Attributes</a>.
      * </p>
-     * </note>
      * <p>
-     * The method adds a new key-value pair into sessionAttributes parameter,
+     * The method adds a new key-value pair into requestAttributes parameter,
      * and returns a reference to this object so that method calls can be
      * chained together.
      *
-     * @param key The key of the entry to be added into sessionAttributes.
+     * @param key The key of the entry to be added into requestAttributes.
      * @param value The corresponding value of the entry to be added into
-     *            sessionAttributes.
+     *            requestAttributes.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
-    public PostTextRequest addsessionAttributesEntry(String key, String value) {
-        if (null == this.sessionAttributes) {
-            this.sessionAttributes = new java.util.HashMap<String, String>();
+    public PostTextRequest addrequestAttributesEntry(String key, String value) {
+        if (null == this.requestAttributes) {
+            this.requestAttributes = new java.util.HashMap<String, String>();
         }
-        if (this.sessionAttributes.containsKey(key))
+        if (this.requestAttributes.containsKey(key))
             throw new IllegalArgumentException("Duplicated keys (" + key.toString()
                     + ") are provided.");
-        this.sessionAttributes.put(key, value);
+        this.requestAttributes.put(key, value);
         return this;
     }
 
     /**
-     * Removes all the entries added into sessionAttributes.
+     * Removes all the entries added into requestAttributes.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      */
-    public PostTextRequest clearsessionAttributesEntries() {
-        this.sessionAttributes = null;
+    public PostTextRequest clearrequestAttributesEntries() {
+        this.requestAttributes = null;
         return this;
     }
 
@@ -1220,6 +957,8 @@ public String toString() {
             sb.append("userId: " + getUserId() + ",");
         if (getSessionAttributes() != null)
             sb.append("sessionAttributes: " + getSessionAttributes() + ",");
+        if (getRequestAttributes() != null)
+            sb.append("requestAttributes: " + getRequestAttributes() + ",");
         if (getInputText() != null)
             sb.append("inputText: " + getInputText());
         sb.append("}");
@@ -1236,6 +975,8 @@ public int hashCode() {
         hashCode = prime * hashCode + ((getUserId() == null) ? 0 : getUserId().hashCode());
         hashCode = prime * hashCode
                 + ((getSessionAttributes() == null) ? 0 : getSessionAttributes().hashCode());
+        hashCode = prime * hashCode
+                + ((getRequestAttributes() == null) ? 0 : getRequestAttributes().hashCode());
         hashCode = prime * hashCode + ((getInputText() == null) ? 0 : getInputText().hashCode());
         return hashCode;
     }
@@ -1268,6 +1009,11 @@ public boolean equals(Object obj) {
         if (other.getSessionAttributes() != null
                 && other.getSessionAttributes().equals(this.getSessionAttributes()) == false)
             return false;
+        if (other.getRequestAttributes() == null ^ this.getRequestAttributes() == null)
+            return false;
+        if (other.getRequestAttributes() != null
+                && other.getRequestAttributes().equals(this.getRequestAttributes()) == false)
+            return false;
         if (other.getInputText() == null ^ this.getInputText() == null)
             return false;
         if (other.getInputText() != null
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/PostTextResult.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/PostTextResult.java
index e708d5f391..065e0d7ff5 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/PostTextResult.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/PostTextResult.java
@@ -27,8 +27,21 @@
 
     /**
      * <p>
-     * The intent slots (name/value pairs) that Amazon Lex detected so far from
-     * the user input in the conversation.
+     * The intent slots that Amazon Lex detected from the user input in the
+     * conversation.
+     * </p>
+     * <p>
+     * Amazon Lex creates a resolution list containing likely values for a slot.
+     * The value that it returns is determined by the
+     * <code>valueSelectionStrategy</code> selected when the slot type was
+     * created or updated. If <code>valueSelectionStrategy</code> is set to
+     * <code>ORIGINAL_VALUE</code>, the value provided by the user is returned,
+     * if the user value is similar to the slot values. If
+     * <code>valueSelectionStrategy</code> is set to <code>TOP_RESOLUTION</code>
+     * Amazon Lex returns the first value in the resolution list or, if there is
+     * no resolution list, null. If you don't specify a
+     * <code>valueSelectionStrategy</code>, the default is
+     * <code>ORIGINAL_VALUE</code>.
      * </p>
      */
     private java.util.Map<String, String> slots;
@@ -43,19 +56,28 @@
 
     /**
      * <p>
-     * A message to convey to the user. It can come from the bot's configuration
-     * or a code hook (Lambda function). If the current intent is not configured
-     * with a code hook or the code hook returned <code>Delegate</code> as the
-     * <code>dialogAction.type</code> in its response, then Amazon Lex decides
-     * the next course of action and selects an appropriate message from the bot
-     * configuration based on the current user interaction context. For example,
-     * if Amazon Lex is not able to understand the user input, it uses a
-     * clarification prompt message (for more information, see the Error
-     * Handling section in the Amazon Lex console). Another example: if the
-     * intent requires confirmation before fulfillment, then Amazon Lex uses the
-     * confirmation prompt message in the intent configuration. If the code hook
-     * returns a message, Amazon Lex passes it as-is in its response to the
-     * client.
+     * The message to convey to the user. The message can come from the bot's
+     * configuration or from a Lambda function.
+     * </p>
+     * <p>
+     * If the intent is not configured with a Lambda function, or if the Lambda
+     * function returned <code>Delegate</code> as the
+     * <code>dialogAction.type</code> its response, Amazon Lex decides on the
+     * next course of action and selects an appropriate message from the bot's
+     * configuration based on the current interaction context. For example, if
+     * Amazon Lex isn't able to understand user input, it uses a clarification
+     * prompt message.
+     * </p>
+     * <p>
+     * When you create an intent you can assign messages to groups. When
+     * messages are assigned to groups Amazon Lex returns one message from each
+     * group in the response. The message field is an escaped JSON string
+     * containing the messages. For more information about the structure of the
+     * JSON string returned, see <a>msg-prompts-formats</a>.
+     * </p>
+     * <p>
+     * If the Lambda function returns a message, Amazon Lex passes it to the
+     * client in its response.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -63,6 +85,41 @@
      */
     private String message;
 
+    /**
+     * <p>
+     * The format of the response message. One of the following values:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>PlainText</code> - The message contains plain UTF-8 text.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>CustomPayload</code> - The message is a custom format defined by
+     * the Lambda function.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>SSML</code> - The message contains text formatted for voice output.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>Composite</code> - The message contains an escaped JSON object
+     * containing one or more messages from the groups that messages were
+     * assigned to when the intent was created.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>PlainText, CustomPayload, SSML, Composite
+     */
+    private String messageFormat;
+
     /**
      * <p>
      * Identifies the current state of the user interaction. Amazon Lex returns
@@ -72,7 +129,7 @@
      * <ul>
      * <li>
      * <p>
-     * <code>ElicitIntent</code> – Amazon Lex wants to elicit user intent.
+     * <code>ElicitIntent</code> - Amazon Lex wants to elicit user intent.
      * </p>
      * <p>
      * For example, a user might utter an intent ("I want to order a pizza"). If
@@ -82,7 +139,7 @@
      * </li>
      * <li>
      * <p>
-     * <code>ConfirmIntent</code> – Amazon Lex is expecting a "yes" or "no"
+     * <code>ConfirmIntent</code> - Amazon Lex is expecting a "yes" or "no"
      * response.
      * </p>
      * <p>
@@ -99,7 +156,7 @@
      * </li>
      * <li>
      * <p>
-     * <code>ElicitSlot</code> – Amazon Lex is expecting a slot value for the
+     * <code>ElicitSlot</code> - Amazon Lex is expecting a slot value for the
      * current intent.
      * </p>
      * <p>
@@ -112,19 +169,19 @@
      * </li>
      * <li>
      * <p>
-     * <code>Fulfilled</code> – Conveys that the Lambda function configured for
+     * <code>Fulfilled</code> - Conveys that the Lambda function configured for
      * the intent has successfully fulfilled the intent.
      * </p>
      * </li>
      * <li>
      * <p>
-     * <code>ReadyForFulfillment</code> – Conveys that the client has to fulfill
+     * <code>ReadyForFulfillment</code> - Conveys that the client has to fulfill
      * the intent.
      * </p>
      * </li>
      * <li>
      * <p>
-     * <code>Failed</code> – Conveys that the conversation with the user failed.
+     * <code>Failed</code> - Conveys that the conversation with the user failed.
      * </p>
      * <p>
      * This can happen for various reasons including that the user did not
@@ -206,13 +263,39 @@ public PostTextResult withIntentName(String intentName) {
 
     /**
      * <p>
-     * The intent slots (name/value pairs) that Amazon Lex detected so far from
-     * the user input in the conversation.
+     * The intent slots that Amazon Lex detected from the user input in the
+     * conversation.
+     * </p>
+     * <p>
+     * Amazon Lex creates a resolution list containing likely values for a slot.
+     * The value that it returns is determined by the
+     * <code>valueSelectionStrategy</code> selected when the slot type was
+     * created or updated. If <code>valueSelectionStrategy</code> is set to
+     * <code>ORIGINAL_VALUE</code>, the value provided by the user is returned,
+     * if the user value is similar to the slot values. If
+     * <code>valueSelectionStrategy</code> is set to <code>TOP_RESOLUTION</code>
+     * Amazon Lex returns the first value in the resolution list or, if there is
+     * no resolution list, null. If you don't specify a
+     * <code>valueSelectionStrategy</code>, the default is
+     * <code>ORIGINAL_VALUE</code>.
      * </p>
      *
      * @return <p>
-     *         The intent slots (name/value pairs) that Amazon Lex detected so
-     *         far from the user input in the conversation.
+     *         The intent slots that Amazon Lex detected from the user input in
+     *         the conversation.
+     *         </p>
+     *         <p>
+     *         Amazon Lex creates a resolution list containing likely values for
+     *         a slot. The value that it returns is determined by the
+     *         <code>valueSelectionStrategy</code> selected when the slot type
+     *         was created or updated. If <code>valueSelectionStrategy</code> is
+     *         set to <code>ORIGINAL_VALUE</code>, the value provided by the
+     *         user is returned, if the user value is similar to the slot
+     *         values. If <code>valueSelectionStrategy</code> is set to
+     *         <code>TOP_RESOLUTION</code> Amazon Lex returns the first value in
+     *         the resolution list or, if there is no resolution list, null. If
+     *         you don't specify a <code>valueSelectionStrategy</code>, the
+     *         default is <code>ORIGINAL_VALUE</code>.
      *         </p>
      */
     public java.util.Map<String, String> getSlots() {
@@ -221,13 +304,41 @@ public PostTextResult withIntentName(String intentName) {
 
     /**
      * <p>
-     * The intent slots (name/value pairs) that Amazon Lex detected so far from
-     * the user input in the conversation.
+     * The intent slots that Amazon Lex detected from the user input in the
+     * conversation.
+     * </p>
+     * <p>
+     * Amazon Lex creates a resolution list containing likely values for a slot.
+     * The value that it returns is determined by the
+     * <code>valueSelectionStrategy</code> selected when the slot type was
+     * created or updated. If <code>valueSelectionStrategy</code> is set to
+     * <code>ORIGINAL_VALUE</code>, the value provided by the user is returned,
+     * if the user value is similar to the slot values. If
+     * <code>valueSelectionStrategy</code> is set to <code>TOP_RESOLUTION</code>
+     * Amazon Lex returns the first value in the resolution list or, if there is
+     * no resolution list, null. If you don't specify a
+     * <code>valueSelectionStrategy</code>, the default is
+     * <code>ORIGINAL_VALUE</code>.
      * </p>
      *
      * @param slots <p>
-     *            The intent slots (name/value pairs) that Amazon Lex detected
-     *            so far from the user input in the conversation.
+     *            The intent slots that Amazon Lex detected from the user input
+     *            in the conversation.
+     *            </p>
+     *            <p>
+     *            Amazon Lex creates a resolution list containing likely values
+     *            for a slot. The value that it returns is determined by the
+     *            <code>valueSelectionStrategy</code> selected when the slot
+     *            type was created or updated. If
+     *            <code>valueSelectionStrategy</code> is set to
+     *            <code>ORIGINAL_VALUE</code>, the value provided by the user is
+     *            returned, if the user value is similar to the slot values. If
+     *            <code>valueSelectionStrategy</code> is set to
+     *            <code>TOP_RESOLUTION</code> Amazon Lex returns the first value
+     *            in the resolution list or, if there is no resolution list,
+     *            null. If you don't specify a
+     *            <code>valueSelectionStrategy</code>, the default is
+     *            <code>ORIGINAL_VALUE</code>.
      *            </p>
      */
     public void setSlots(java.util.Map<String, String> slots) {
@@ -236,16 +347,44 @@ public void setSlots(java.util.Map<String, String> slots) {
 
     /**
      * <p>
-     * The intent slots (name/value pairs) that Amazon Lex detected so far from
-     * the user input in the conversation.
+     * The intent slots that Amazon Lex detected from the user input in the
+     * conversation.
+     * </p>
+     * <p>
+     * Amazon Lex creates a resolution list containing likely values for a slot.
+     * The value that it returns is determined by the
+     * <code>valueSelectionStrategy</code> selected when the slot type was
+     * created or updated. If <code>valueSelectionStrategy</code> is set to
+     * <code>ORIGINAL_VALUE</code>, the value provided by the user is returned,
+     * if the user value is similar to the slot values. If
+     * <code>valueSelectionStrategy</code> is set to <code>TOP_RESOLUTION</code>
+     * Amazon Lex returns the first value in the resolution list or, if there is
+     * no resolution list, null. If you don't specify a
+     * <code>valueSelectionStrategy</code>, the default is
+     * <code>ORIGINAL_VALUE</code>.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param slots <p>
-     *            The intent slots (name/value pairs) that Amazon Lex detected
-     *            so far from the user input in the conversation.
+     *            The intent slots that Amazon Lex detected from the user input
+     *            in the conversation.
+     *            </p>
+     *            <p>
+     *            Amazon Lex creates a resolution list containing likely values
+     *            for a slot. The value that it returns is determined by the
+     *            <code>valueSelectionStrategy</code> selected when the slot
+     *            type was created or updated. If
+     *            <code>valueSelectionStrategy</code> is set to
+     *            <code>ORIGINAL_VALUE</code>, the value provided by the user is
+     *            returned, if the user value is similar to the slot values. If
+     *            <code>valueSelectionStrategy</code> is set to
+     *            <code>TOP_RESOLUTION</code> Amazon Lex returns the first value
+     *            in the resolution list or, if there is no resolution list,
+     *            null. If you don't specify a
+     *            <code>valueSelectionStrategy</code>, the default is
+     *            <code>ORIGINAL_VALUE</code>.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -257,8 +396,21 @@ public PostTextResult withSlots(java.util.Map<String, String> slots) {
 
     /**
      * <p>
-     * The intent slots (name/value pairs) that Amazon Lex detected so far from
-     * the user input in the conversation.
+     * The intent slots that Amazon Lex detected from the user input in the
+     * conversation.
+     * </p>
+     * <p>
+     * Amazon Lex creates a resolution list containing likely values for a slot.
+     * The value that it returns is determined by the
+     * <code>valueSelectionStrategy</code> selected when the slot type was
+     * created or updated. If <code>valueSelectionStrategy</code> is set to
+     * <code>ORIGINAL_VALUE</code>, the value provided by the user is returned,
+     * if the user value is similar to the slot values. If
+     * <code>valueSelectionStrategy</code> is set to <code>TOP_RESOLUTION</code>
+     * Amazon Lex returns the first value in the resolution list or, if there is
+     * no resolution list, null. If you don't specify a
+     * <code>valueSelectionStrategy</code>, the default is
+     * <code>ORIGINAL_VALUE</code>.
      * </p>
      * <p>
      * The method adds a new key-value pair into slots parameter, and returns a
@@ -382,40 +534,57 @@ public PostTextResult clearsessionAttributesEntries() {
 
     /**
      * <p>
-     * A message to convey to the user. It can come from the bot's configuration
-     * or a code hook (Lambda function). If the current intent is not configured
-     * with a code hook or the code hook returned <code>Delegate</code> as the
-     * <code>dialogAction.type</code> in its response, then Amazon Lex decides
-     * the next course of action and selects an appropriate message from the bot
-     * configuration based on the current user interaction context. For example,
-     * if Amazon Lex is not able to understand the user input, it uses a
-     * clarification prompt message (for more information, see the Error
-     * Handling section in the Amazon Lex console). Another example: if the
-     * intent requires confirmation before fulfillment, then Amazon Lex uses the
-     * confirmation prompt message in the intent configuration. If the code hook
-     * returns a message, Amazon Lex passes it as-is in its response to the
-     * client.
+     * The message to convey to the user. The message can come from the bot's
+     * configuration or from a Lambda function.
+     * </p>
+     * <p>
+     * If the intent is not configured with a Lambda function, or if the Lambda
+     * function returned <code>Delegate</code> as the
+     * <code>dialogAction.type</code> its response, Amazon Lex decides on the
+     * next course of action and selects an appropriate message from the bot's
+     * configuration based on the current interaction context. For example, if
+     * Amazon Lex isn't able to understand user input, it uses a clarification
+     * prompt message.
+     * </p>
+     * <p>
+     * When you create an intent you can assign messages to groups. When
+     * messages are assigned to groups Amazon Lex returns one message from each
+     * group in the response. The message field is an escaped JSON string
+     * containing the messages. For more information about the structure of the
+     * JSON string returned, see <a>msg-prompts-formats</a>.
+     * </p>
+     * <p>
+     * If the Lambda function returns a message, Amazon Lex passes it to the
+     * client in its response.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 1024<br/>
      *
      * @return <p>
-     *         A message to convey to the user. It can come from the bot's
-     *         configuration or a code hook (Lambda function). If the current
-     *         intent is not configured with a code hook or the code hook
-     *         returned <code>Delegate</code> as the
-     *         <code>dialogAction.type</code> in its response, then Amazon Lex
-     *         decides the next course of action and selects an appropriate
-     *         message from the bot configuration based on the current user
-     *         interaction context. For example, if Amazon Lex is not able to
-     *         understand the user input, it uses a clarification prompt message
-     *         (for more information, see the Error Handling section in the
-     *         Amazon Lex console). Another example: if the intent requires
-     *         confirmation before fulfillment, then Amazon Lex uses the
-     *         confirmation prompt message in the intent configuration. If the
-     *         code hook returns a message, Amazon Lex passes it as-is in its
-     *         response to the client.
+     *         The message to convey to the user. The message can come from the
+     *         bot's configuration or from a Lambda function.
+     *         </p>
+     *         <p>
+     *         If the intent is not configured with a Lambda function, or if the
+     *         Lambda function returned <code>Delegate</code> as the
+     *         <code>dialogAction.type</code> its response, Amazon Lex decides
+     *         on the next course of action and selects an appropriate message
+     *         from the bot's configuration based on the current interaction
+     *         context. For example, if Amazon Lex isn't able to understand user
+     *         input, it uses a clarification prompt message.
+     *         </p>
+     *         <p>
+     *         When you create an intent you can assign messages to groups. When
+     *         messages are assigned to groups Amazon Lex returns one message
+     *         from each group in the response. The message field is an escaped
+     *         JSON string containing the messages. For more information about
+     *         the structure of the JSON string returned, see
+     *         <a>msg-prompts-formats</a>.
+     *         </p>
+     *         <p>
+     *         If the Lambda function returns a message, Amazon Lex passes it to
+     *         the client in its response.
      *         </p>
      */
     public String getMessage() {
@@ -424,41 +593,58 @@ public String getMessage() {
 
     /**
      * <p>
-     * A message to convey to the user. It can come from the bot's configuration
-     * or a code hook (Lambda function). If the current intent is not configured
-     * with a code hook or the code hook returned <code>Delegate</code> as the
-     * <code>dialogAction.type</code> in its response, then Amazon Lex decides
-     * the next course of action and selects an appropriate message from the bot
-     * configuration based on the current user interaction context. For example,
-     * if Amazon Lex is not able to understand the user input, it uses a
-     * clarification prompt message (for more information, see the Error
-     * Handling section in the Amazon Lex console). Another example: if the
-     * intent requires confirmation before fulfillment, then Amazon Lex uses the
-     * confirmation prompt message in the intent configuration. If the code hook
-     * returns a message, Amazon Lex passes it as-is in its response to the
-     * client.
+     * The message to convey to the user. The message can come from the bot's
+     * configuration or from a Lambda function.
+     * </p>
+     * <p>
+     * If the intent is not configured with a Lambda function, or if the Lambda
+     * function returned <code>Delegate</code> as the
+     * <code>dialogAction.type</code> its response, Amazon Lex decides on the
+     * next course of action and selects an appropriate message from the bot's
+     * configuration based on the current interaction context. For example, if
+     * Amazon Lex isn't able to understand user input, it uses a clarification
+     * prompt message.
+     * </p>
+     * <p>
+     * When you create an intent you can assign messages to groups. When
+     * messages are assigned to groups Amazon Lex returns one message from each
+     * group in the response. The message field is an escaped JSON string
+     * containing the messages. For more information about the structure of the
+     * JSON string returned, see <a>msg-prompts-formats</a>.
+     * </p>
+     * <p>
+     * If the Lambda function returns a message, Amazon Lex passes it to the
+     * client in its response.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 1024<br/>
      *
      * @param message <p>
-     *            A message to convey to the user. It can come from the bot's
-     *            configuration or a code hook (Lambda function). If the current
-     *            intent is not configured with a code hook or the code hook
-     *            returned <code>Delegate</code> as the
-     *            <code>dialogAction.type</code> in its response, then Amazon
-     *            Lex decides the next course of action and selects an
-     *            appropriate message from the bot configuration based on the
-     *            current user interaction context. For example, if Amazon Lex
-     *            is not able to understand the user input, it uses a
-     *            clarification prompt message (for more information, see the
-     *            Error Handling section in the Amazon Lex console). Another
-     *            example: if the intent requires confirmation before
-     *            fulfillment, then Amazon Lex uses the confirmation prompt
-     *            message in the intent configuration. If the code hook returns
-     *            a message, Amazon Lex passes it as-is in its response to the
-     *            client.
+     *            The message to convey to the user. The message can come from
+     *            the bot's configuration or from a Lambda function.
+     *            </p>
+     *            <p>
+     *            If the intent is not configured with a Lambda function, or if
+     *            the Lambda function returned <code>Delegate</code> as the
+     *            <code>dialogAction.type</code> its response, Amazon Lex
+     *            decides on the next course of action and selects an
+     *            appropriate message from the bot's configuration based on the
+     *            current interaction context. For example, if Amazon Lex isn't
+     *            able to understand user input, it uses a clarification prompt
+     *            message.
+     *            </p>
+     *            <p>
+     *            When you create an intent you can assign messages to groups.
+     *            When messages are assigned to groups Amazon Lex returns one
+     *            message from each group in the response. The message field is
+     *            an escaped JSON string containing the messages. For more
+     *            information about the structure of the JSON string returned,
+     *            see <a>msg-prompts-formats</a>.
+     *            </p>
+     *            <p>
+     *            If the Lambda function returns a message, Amazon Lex passes it
+     *            to the client in its response.
      *            </p>
      */
     public void setMessage(String message) {
@@ -467,19 +653,28 @@ public void setMessage(String message) {
 
     /**
      * <p>
-     * A message to convey to the user. It can come from the bot's configuration
-     * or a code hook (Lambda function). If the current intent is not configured
-     * with a code hook or the code hook returned <code>Delegate</code> as the
-     * <code>dialogAction.type</code> in its response, then Amazon Lex decides
-     * the next course of action and selects an appropriate message from the bot
-     * configuration based on the current user interaction context. For example,
-     * if Amazon Lex is not able to understand the user input, it uses a
-     * clarification prompt message (for more information, see the Error
-     * Handling section in the Amazon Lex console). Another example: if the
-     * intent requires confirmation before fulfillment, then Amazon Lex uses the
-     * confirmation prompt message in the intent configuration. If the code hook
-     * returns a message, Amazon Lex passes it as-is in its response to the
-     * client.
+     * The message to convey to the user. The message can come from the bot's
+     * configuration or from a Lambda function.
+     * </p>
+     * <p>
+     * If the intent is not configured with a Lambda function, or if the Lambda
+     * function returned <code>Delegate</code> as the
+     * <code>dialogAction.type</code> its response, Amazon Lex decides on the
+     * next course of action and selects an appropriate message from the bot's
+     * configuration based on the current interaction context. For example, if
+     * Amazon Lex isn't able to understand user input, it uses a clarification
+     * prompt message.
+     * </p>
+     * <p>
+     * When you create an intent you can assign messages to groups. When
+     * messages are assigned to groups Amazon Lex returns one message from each
+     * group in the response. The message field is an escaped JSON string
+     * containing the messages. For more information about the structure of the
+     * JSON string returned, see <a>msg-prompts-formats</a>.
+     * </p>
+     * <p>
+     * If the Lambda function returns a message, Amazon Lex passes it to the
+     * client in its response.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -489,22 +684,30 @@ public void setMessage(String message) {
      * <b>Length: </b>1 - 1024<br/>
      *
      * @param message <p>
-     *            A message to convey to the user. It can come from the bot's
-     *            configuration or a code hook (Lambda function). If the current
-     *            intent is not configured with a code hook or the code hook
-     *            returned <code>Delegate</code> as the
-     *            <code>dialogAction.type</code> in its response, then Amazon
-     *            Lex decides the next course of action and selects an
-     *            appropriate message from the bot configuration based on the
-     *            current user interaction context. For example, if Amazon Lex
-     *            is not able to understand the user input, it uses a
-     *            clarification prompt message (for more information, see the
-     *            Error Handling section in the Amazon Lex console). Another
-     *            example: if the intent requires confirmation before
-     *            fulfillment, then Amazon Lex uses the confirmation prompt
-     *            message in the intent configuration. If the code hook returns
-     *            a message, Amazon Lex passes it as-is in its response to the
-     *            client.
+     *            The message to convey to the user. The message can come from
+     *            the bot's configuration or from a Lambda function.
+     *            </p>
+     *            <p>
+     *            If the intent is not configured with a Lambda function, or if
+     *            the Lambda function returned <code>Delegate</code> as the
+     *            <code>dialogAction.type</code> its response, Amazon Lex
+     *            decides on the next course of action and selects an
+     *            appropriate message from the bot's configuration based on the
+     *            current interaction context. For example, if Amazon Lex isn't
+     *            able to understand user input, it uses a clarification prompt
+     *            message.
+     *            </p>
+     *            <p>
+     *            When you create an intent you can assign messages to groups.
+     *            When messages are assigned to groups Amazon Lex returns one
+     *            message from each group in the response. The message field is
+     *            an escaped JSON string containing the messages. For more
+     *            information about the structure of the JSON string returned,
+     *            see <a>msg-prompts-formats</a>.
+     *            </p>
+     *            <p>
+     *            If the Lambda function returns a message, Amazon Lex passes it
+     *            to the client in its response.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -514,6 +717,366 @@ public PostTextResult withMessage(String message) {
         return this;
     }
 
+    /**
+     * <p>
+     * The format of the response message. One of the following values:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>PlainText</code> - The message contains plain UTF-8 text.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>CustomPayload</code> - The message is a custom format defined by
+     * the Lambda function.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>SSML</code> - The message contains text formatted for voice output.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>Composite</code> - The message contains an escaped JSON object
+     * containing one or more messages from the groups that messages were
+     * assigned to when the intent was created.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>PlainText, CustomPayload, SSML, Composite
+     *
+     * @return <p>
+     *         The format of the response message. One of the following values:
+     *         </p>
+     *         <ul>
+     *         <li>
+     *         <p>
+     *         <code>PlainText</code> - The message contains plain UTF-8 text.
+     *         </p>
+     *         </li>
+     *         <li>
+     *         <p>
+     *         <code>CustomPayload</code> - The message is a custom format
+     *         defined by the Lambda function.
+     *         </p>
+     *         </li>
+     *         <li>
+     *         <p>
+     *         <code>SSML</code> - The message contains text formatted for voice
+     *         output.
+     *         </p>
+     *         </li>
+     *         <li>
+     *         <p>
+     *         <code>Composite</code> - The message contains an escaped JSON
+     *         object containing one or more messages from the groups that
+     *         messages were assigned to when the intent was created.
+     *         </p>
+     *         </li>
+     *         </ul>
+     * @see MessageFormatType
+     */
+    public String getMessageFormat() {
+        return messageFormat;
+    }
+
+    /**
+     * <p>
+     * The format of the response message. One of the following values:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>PlainText</code> - The message contains plain UTF-8 text.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>CustomPayload</code> - The message is a custom format defined by
+     * the Lambda function.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>SSML</code> - The message contains text formatted for voice output.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>Composite</code> - The message contains an escaped JSON object
+     * containing one or more messages from the groups that messages were
+     * assigned to when the intent was created.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>PlainText, CustomPayload, SSML, Composite
+     *
+     * @param messageFormat <p>
+     *            The format of the response message. One of the following
+     *            values:
+     *            </p>
+     *            <ul>
+     *            <li>
+     *            <p>
+     *            <code>PlainText</code> - The message contains plain UTF-8
+     *            text.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>CustomPayload</code> - The message is a custom format
+     *            defined by the Lambda function.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>SSML</code> - The message contains text formatted for
+     *            voice output.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>Composite</code> - The message contains an escaped JSON
+     *            object containing one or more messages from the groups that
+     *            messages were assigned to when the intent was created.
+     *            </p>
+     *            </li>
+     *            </ul>
+     * @see MessageFormatType
+     */
+    public void setMessageFormat(String messageFormat) {
+        this.messageFormat = messageFormat;
+    }
+
+    /**
+     * <p>
+     * The format of the response message. One of the following values:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>PlainText</code> - The message contains plain UTF-8 text.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>CustomPayload</code> - The message is a custom format defined by
+     * the Lambda function.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>SSML</code> - The message contains text formatted for voice output.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>Composite</code> - The message contains an escaped JSON object
+     * containing one or more messages from the groups that messages were
+     * assigned to when the intent was created.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>PlainText, CustomPayload, SSML, Composite
+     *
+     * @param messageFormat <p>
+     *            The format of the response message. One of the following
+     *            values:
+     *            </p>
+     *            <ul>
+     *            <li>
+     *            <p>
+     *            <code>PlainText</code> - The message contains plain UTF-8
+     *            text.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>CustomPayload</code> - The message is a custom format
+     *            defined by the Lambda function.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>SSML</code> - The message contains text formatted for
+     *            voice output.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>Composite</code> - The message contains an escaped JSON
+     *            object containing one or more messages from the groups that
+     *            messages were assigned to when the intent was created.
+     *            </p>
+     *            </li>
+     *            </ul>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see MessageFormatType
+     */
+    public PostTextResult withMessageFormat(String messageFormat) {
+        this.messageFormat = messageFormat;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The format of the response message. One of the following values:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>PlainText</code> - The message contains plain UTF-8 text.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>CustomPayload</code> - The message is a custom format defined by
+     * the Lambda function.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>SSML</code> - The message contains text formatted for voice output.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>Composite</code> - The message contains an escaped JSON object
+     * containing one or more messages from the groups that messages were
+     * assigned to when the intent was created.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>PlainText, CustomPayload, SSML, Composite
+     *
+     * @param messageFormat <p>
+     *            The format of the response message. One of the following
+     *            values:
+     *            </p>
+     *            <ul>
+     *            <li>
+     *            <p>
+     *            <code>PlainText</code> - The message contains plain UTF-8
+     *            text.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>CustomPayload</code> - The message is a custom format
+     *            defined by the Lambda function.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>SSML</code> - The message contains text formatted for
+     *            voice output.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>Composite</code> - The message contains an escaped JSON
+     *            object containing one or more messages from the groups that
+     *            messages were assigned to when the intent was created.
+     *            </p>
+     *            </li>
+     *            </ul>
+     * @see MessageFormatType
+     */
+    public void setMessageFormat(MessageFormatType messageFormat) {
+        this.messageFormat = messageFormat.toString();
+    }
+
+    /**
+     * <p>
+     * The format of the response message. One of the following values:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>PlainText</code> - The message contains plain UTF-8 text.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>CustomPayload</code> - The message is a custom format defined by
+     * the Lambda function.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>SSML</code> - The message contains text formatted for voice output.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>Composite</code> - The message contains an escaped JSON object
+     * containing one or more messages from the groups that messages were
+     * assigned to when the intent was created.
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>PlainText, CustomPayload, SSML, Composite
+     *
+     * @param messageFormat <p>
+     *            The format of the response message. One of the following
+     *            values:
+     *            </p>
+     *            <ul>
+     *            <li>
+     *            <p>
+     *            <code>PlainText</code> - The message contains plain UTF-8
+     *            text.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>CustomPayload</code> - The message is a custom format
+     *            defined by the Lambda function.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>SSML</code> - The message contains text formatted for
+     *            voice output.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>Composite</code> - The message contains an escaped JSON
+     *            object containing one or more messages from the groups that
+     *            messages were assigned to when the intent was created.
+     *            </p>
+     *            </li>
+     *            </ul>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see MessageFormatType
+     */
+    public PostTextResult withMessageFormat(MessageFormatType messageFormat) {
+        this.messageFormat = messageFormat.toString();
+        return this;
+    }
+
     /**
      * <p>
      * Identifies the current state of the user interaction. Amazon Lex returns
@@ -523,7 +1086,7 @@ public PostTextResult withMessage(String message) {
      * <ul>
      * <li>
      * <p>
-     * <code>ElicitIntent</code> – Amazon Lex wants to elicit user intent.
+     * <code>ElicitIntent</code> - Amazon Lex wants to elicit user intent.
      * </p>
      * <p>
      * For example, a user might utter an intent ("I want to order a pizza"). If
@@ -533,7 +1096,7 @@ public PostTextResult withMessage(String message) {
      * </li>
      * <li>
      * <p>
-     * <code>ConfirmIntent</code> – Amazon Lex is expecting a "yes" or "no"
+     * <code>ConfirmIntent</code> - Amazon Lex is expecting a "yes" or "no"
      * response.
      * </p>
      * <p>
@@ -550,7 +1113,7 @@ public PostTextResult withMessage(String message) {
      * </li>
      * <li>
      * <p>
-     * <code>ElicitSlot</code> – Amazon Lex is expecting a slot value for the
+     * <code>ElicitSlot</code> - Amazon Lex is expecting a slot value for the
      * current intent.
      * </p>
      * <p>
@@ -563,19 +1126,19 @@ public PostTextResult withMessage(String message) {
      * </li>
      * <li>
      * <p>
-     * <code>Fulfilled</code> – Conveys that the Lambda function configured for
+     * <code>Fulfilled</code> - Conveys that the Lambda function configured for
      * the intent has successfully fulfilled the intent.
      * </p>
      * </li>
      * <li>
      * <p>
-     * <code>ReadyForFulfillment</code> – Conveys that the client has to fulfill
+     * <code>ReadyForFulfillment</code> - Conveys that the client has to fulfill
      * the intent.
      * </p>
      * </li>
      * <li>
      * <p>
-     * <code>Failed</code> – Conveys that the conversation with the user failed.
+     * <code>Failed</code> - Conveys that the conversation with the user failed.
      * </p>
      * <p>
      * This can happen for various reasons including that the user did not
@@ -599,7 +1162,7 @@ public PostTextResult withMessage(String message) {
      *         <ul>
      *         <li>
      *         <p>
-     *         <code>ElicitIntent</code> – Amazon Lex wants to elicit user
+     *         <code>ElicitIntent</code> - Amazon Lex wants to elicit user
      *         intent.
      *         </p>
      *         <p>
@@ -610,7 +1173,7 @@ public PostTextResult withMessage(String message) {
      *         </li>
      *         <li>
      *         <p>
-     *         <code>ConfirmIntent</code> – Amazon Lex is expecting a "yes" or
+     *         <code>ConfirmIntent</code> - Amazon Lex is expecting a "yes" or
      *         "no" response.
      *         </p>
      *         <p>
@@ -628,7 +1191,7 @@ public PostTextResult withMessage(String message) {
      *         </li>
      *         <li>
      *         <p>
-     *         <code>ElicitSlot</code> – Amazon Lex is expecting a slot value
+     *         <code>ElicitSlot</code> - Amazon Lex is expecting a slot value
      *         for the current intent.
      *         </p>
      *         <p>
@@ -642,19 +1205,19 @@ public PostTextResult withMessage(String message) {
      *         </li>
      *         <li>
      *         <p>
-     *         <code>Fulfilled</code> – Conveys that the Lambda function
+     *         <code>Fulfilled</code> - Conveys that the Lambda function
      *         configured for the intent has successfully fulfilled the intent.
      *         </p>
      *         </li>
      *         <li>
      *         <p>
-     *         <code>ReadyForFulfillment</code> – Conveys that the client has to
+     *         <code>ReadyForFulfillment</code> - Conveys that the client has to
      *         fulfill the intent.
      *         </p>
      *         </li>
      *         <li>
      *         <p>
-     *         <code>Failed</code> – Conveys that the conversation with the user
+     *         <code>Failed</code> - Conveys that the conversation with the user
      *         failed.
      *         </p>
      *         <p>
@@ -681,7 +1244,7 @@ public String getDialogState() {
      * <ul>
      * <li>
      * <p>
-     * <code>ElicitIntent</code> – Amazon Lex wants to elicit user intent.
+     * <code>ElicitIntent</code> - Amazon Lex wants to elicit user intent.
      * </p>
      * <p>
      * For example, a user might utter an intent ("I want to order a pizza"). If
@@ -691,7 +1254,7 @@ public String getDialogState() {
      * </li>
      * <li>
      * <p>
-     * <code>ConfirmIntent</code> – Amazon Lex is expecting a "yes" or "no"
+     * <code>ConfirmIntent</code> - Amazon Lex is expecting a "yes" or "no"
      * response.
      * </p>
      * <p>
@@ -708,7 +1271,7 @@ public String getDialogState() {
      * </li>
      * <li>
      * <p>
-     * <code>ElicitSlot</code> – Amazon Lex is expecting a slot value for the
+     * <code>ElicitSlot</code> - Amazon Lex is expecting a slot value for the
      * current intent.
      * </p>
      * <p>
@@ -721,19 +1284,19 @@ public String getDialogState() {
      * </li>
      * <li>
      * <p>
-     * <code>Fulfilled</code> – Conveys that the Lambda function configured for
+     * <code>Fulfilled</code> - Conveys that the Lambda function configured for
      * the intent has successfully fulfilled the intent.
      * </p>
      * </li>
      * <li>
      * <p>
-     * <code>ReadyForFulfillment</code> – Conveys that the client has to fulfill
+     * <code>ReadyForFulfillment</code> - Conveys that the client has to fulfill
      * the intent.
      * </p>
      * </li>
      * <li>
      * <p>
-     * <code>Failed</code> – Conveys that the conversation with the user failed.
+     * <code>Failed</code> - Conveys that the conversation with the user failed.
      * </p>
      * <p>
      * This can happen for various reasons including that the user did not
@@ -757,7 +1320,7 @@ public String getDialogState() {
      *            <ul>
      *            <li>
      *            <p>
-     *            <code>ElicitIntent</code> – Amazon Lex wants to elicit user
+     *            <code>ElicitIntent</code> - Amazon Lex wants to elicit user
      *            intent.
      *            </p>
      *            <p>
@@ -769,7 +1332,7 @@ public String getDialogState() {
      *            </li>
      *            <li>
      *            <p>
-     *            <code>ConfirmIntent</code> – Amazon Lex is expecting a "yes"
+     *            <code>ConfirmIntent</code> - Amazon Lex is expecting a "yes"
      *            or "no" response.
      *            </p>
      *            <p>
@@ -788,7 +1351,7 @@ public String getDialogState() {
      *            </li>
      *            <li>
      *            <p>
-     *            <code>ElicitSlot</code> – Amazon Lex is expecting a slot value
+     *            <code>ElicitSlot</code> - Amazon Lex is expecting a slot value
      *            for the current intent.
      *            </p>
      *            <p>
@@ -802,20 +1365,20 @@ public String getDialogState() {
      *            </li>
      *            <li>
      *            <p>
-     *            <code>Fulfilled</code> – Conveys that the Lambda function
+     *            <code>Fulfilled</code> - Conveys that the Lambda function
      *            configured for the intent has successfully fulfilled the
      *            intent.
      *            </p>
      *            </li>
      *            <li>
      *            <p>
-     *            <code>ReadyForFulfillment</code> – Conveys that the client has
+     *            <code>ReadyForFulfillment</code> - Conveys that the client has
      *            to fulfill the intent.
      *            </p>
      *            </li>
      *            <li>
      *            <p>
-     *            <code>Failed</code> – Conveys that the conversation with the
+     *            <code>Failed</code> - Conveys that the conversation with the
      *            user failed.
      *            </p>
      *            <p>
@@ -842,7 +1405,7 @@ public void setDialogState(String dialogState) {
      * <ul>
      * <li>
      * <p>
-     * <code>ElicitIntent</code> – Amazon Lex wants to elicit user intent.
+     * <code>ElicitIntent</code> - Amazon Lex wants to elicit user intent.
      * </p>
      * <p>
      * For example, a user might utter an intent ("I want to order a pizza"). If
@@ -852,7 +1415,7 @@ public void setDialogState(String dialogState) {
      * </li>
      * <li>
      * <p>
-     * <code>ConfirmIntent</code> – Amazon Lex is expecting a "yes" or "no"
+     * <code>ConfirmIntent</code> - Amazon Lex is expecting a "yes" or "no"
      * response.
      * </p>
      * <p>
@@ -869,7 +1432,7 @@ public void setDialogState(String dialogState) {
      * </li>
      * <li>
      * <p>
-     * <code>ElicitSlot</code> – Amazon Lex is expecting a slot value for the
+     * <code>ElicitSlot</code> - Amazon Lex is expecting a slot value for the
      * current intent.
      * </p>
      * <p>
@@ -882,19 +1445,19 @@ public void setDialogState(String dialogState) {
      * </li>
      * <li>
      * <p>
-     * <code>Fulfilled</code> – Conveys that the Lambda function configured for
+     * <code>Fulfilled</code> - Conveys that the Lambda function configured for
      * the intent has successfully fulfilled the intent.
      * </p>
      * </li>
      * <li>
      * <p>
-     * <code>ReadyForFulfillment</code> – Conveys that the client has to fulfill
+     * <code>ReadyForFulfillment</code> - Conveys that the client has to fulfill
      * the intent.
      * </p>
      * </li>
      * <li>
      * <p>
-     * <code>Failed</code> – Conveys that the conversation with the user failed.
+     * <code>Failed</code> - Conveys that the conversation with the user failed.
      * </p>
      * <p>
      * This can happen for various reasons including that the user did not
@@ -921,7 +1484,7 @@ public void setDialogState(String dialogState) {
      *            <ul>
      *            <li>
      *            <p>
-     *            <code>ElicitIntent</code> – Amazon Lex wants to elicit user
+     *            <code>ElicitIntent</code> - Amazon Lex wants to elicit user
      *            intent.
      *            </p>
      *            <p>
@@ -933,7 +1496,7 @@ public void setDialogState(String dialogState) {
      *            </li>
      *            <li>
      *            <p>
-     *            <code>ConfirmIntent</code> – Amazon Lex is expecting a "yes"
+     *            <code>ConfirmIntent</code> - Amazon Lex is expecting a "yes"
      *            or "no" response.
      *            </p>
      *            <p>
@@ -952,7 +1515,7 @@ public void setDialogState(String dialogState) {
      *            </li>
      *            <li>
      *            <p>
-     *            <code>ElicitSlot</code> – Amazon Lex is expecting a slot value
+     *            <code>ElicitSlot</code> - Amazon Lex is expecting a slot value
      *            for the current intent.
      *            </p>
      *            <p>
@@ -966,20 +1529,20 @@ public void setDialogState(String dialogState) {
      *            </li>
      *            <li>
      *            <p>
-     *            <code>Fulfilled</code> – Conveys that the Lambda function
+     *            <code>Fulfilled</code> - Conveys that the Lambda function
      *            configured for the intent has successfully fulfilled the
      *            intent.
      *            </p>
      *            </li>
      *            <li>
      *            <p>
-     *            <code>ReadyForFulfillment</code> – Conveys that the client has
+     *            <code>ReadyForFulfillment</code> - Conveys that the client has
      *            to fulfill the intent.
      *            </p>
      *            </li>
      *            <li>
      *            <p>
-     *            <code>Failed</code> – Conveys that the conversation with the
+     *            <code>Failed</code> - Conveys that the conversation with the
      *            user failed.
      *            </p>
      *            <p>
@@ -1009,7 +1572,7 @@ public PostTextResult withDialogState(String dialogState) {
      * <ul>
      * <li>
      * <p>
-     * <code>ElicitIntent</code> – Amazon Lex wants to elicit user intent.
+     * <code>ElicitIntent</code> - Amazon Lex wants to elicit user intent.
      * </p>
      * <p>
      * For example, a user might utter an intent ("I want to order a pizza"). If
@@ -1019,7 +1582,7 @@ public PostTextResult withDialogState(String dialogState) {
      * </li>
      * <li>
      * <p>
-     * <code>ConfirmIntent</code> – Amazon Lex is expecting a "yes" or "no"
+     * <code>ConfirmIntent</code> - Amazon Lex is expecting a "yes" or "no"
      * response.
      * </p>
      * <p>
@@ -1036,7 +1599,7 @@ public PostTextResult withDialogState(String dialogState) {
      * </li>
      * <li>
      * <p>
-     * <code>ElicitSlot</code> – Amazon Lex is expecting a slot value for the
+     * <code>ElicitSlot</code> - Amazon Lex is expecting a slot value for the
      * current intent.
      * </p>
      * <p>
@@ -1049,19 +1612,19 @@ public PostTextResult withDialogState(String dialogState) {
      * </li>
      * <li>
      * <p>
-     * <code>Fulfilled</code> – Conveys that the Lambda function configured for
+     * <code>Fulfilled</code> - Conveys that the Lambda function configured for
      * the intent has successfully fulfilled the intent.
      * </p>
      * </li>
      * <li>
      * <p>
-     * <code>ReadyForFulfillment</code> – Conveys that the client has to fulfill
+     * <code>ReadyForFulfillment</code> - Conveys that the client has to fulfill
      * the intent.
      * </p>
      * </li>
      * <li>
      * <p>
-     * <code>Failed</code> – Conveys that the conversation with the user failed.
+     * <code>Failed</code> - Conveys that the conversation with the user failed.
      * </p>
      * <p>
      * This can happen for various reasons including that the user did not
@@ -1085,7 +1648,7 @@ public PostTextResult withDialogState(String dialogState) {
      *            <ul>
      *            <li>
      *            <p>
-     *            <code>ElicitIntent</code> – Amazon Lex wants to elicit user
+     *            <code>ElicitIntent</code> - Amazon Lex wants to elicit user
      *            intent.
      *            </p>
      *            <p>
@@ -1097,7 +1660,7 @@ public PostTextResult withDialogState(String dialogState) {
      *            </li>
      *            <li>
      *            <p>
-     *            <code>ConfirmIntent</code> – Amazon Lex is expecting a "yes"
+     *            <code>ConfirmIntent</code> - Amazon Lex is expecting a "yes"
      *            or "no" response.
      *            </p>
      *            <p>
@@ -1116,7 +1679,7 @@ public PostTextResult withDialogState(String dialogState) {
      *            </li>
      *            <li>
      *            <p>
-     *            <code>ElicitSlot</code> – Amazon Lex is expecting a slot value
+     *            <code>ElicitSlot</code> - Amazon Lex is expecting a slot value
      *            for the current intent.
      *            </p>
      *            <p>
@@ -1130,20 +1693,20 @@ public PostTextResult withDialogState(String dialogState) {
      *            </li>
      *            <li>
      *            <p>
-     *            <code>Fulfilled</code> – Conveys that the Lambda function
+     *            <code>Fulfilled</code> - Conveys that the Lambda function
      *            configured for the intent has successfully fulfilled the
      *            intent.
      *            </p>
      *            </li>
      *            <li>
      *            <p>
-     *            <code>ReadyForFulfillment</code> – Conveys that the client has
+     *            <code>ReadyForFulfillment</code> - Conveys that the client has
      *            to fulfill the intent.
      *            </p>
      *            </li>
      *            <li>
      *            <p>
-     *            <code>Failed</code> – Conveys that the conversation with the
+     *            <code>Failed</code> - Conveys that the conversation with the
      *            user failed.
      *            </p>
      *            <p>
@@ -1170,7 +1733,7 @@ public void setDialogState(DialogState dialogState) {
      * <ul>
      * <li>
      * <p>
-     * <code>ElicitIntent</code> – Amazon Lex wants to elicit user intent.
+     * <code>ElicitIntent</code> - Amazon Lex wants to elicit user intent.
      * </p>
      * <p>
      * For example, a user might utter an intent ("I want to order a pizza"). If
@@ -1180,7 +1743,7 @@ public void setDialogState(DialogState dialogState) {
      * </li>
      * <li>
      * <p>
-     * <code>ConfirmIntent</code> – Amazon Lex is expecting a "yes" or "no"
+     * <code>ConfirmIntent</code> - Amazon Lex is expecting a "yes" or "no"
      * response.
      * </p>
      * <p>
@@ -1197,7 +1760,7 @@ public void setDialogState(DialogState dialogState) {
      * </li>
      * <li>
      * <p>
-     * <code>ElicitSlot</code> – Amazon Lex is expecting a slot value for the
+     * <code>ElicitSlot</code> - Amazon Lex is expecting a slot value for the
      * current intent.
      * </p>
      * <p>
@@ -1210,19 +1773,19 @@ public void setDialogState(DialogState dialogState) {
      * </li>
      * <li>
      * <p>
-     * <code>Fulfilled</code> – Conveys that the Lambda function configured for
+     * <code>Fulfilled</code> - Conveys that the Lambda function configured for
      * the intent has successfully fulfilled the intent.
      * </p>
      * </li>
      * <li>
      * <p>
-     * <code>ReadyForFulfillment</code> – Conveys that the client has to fulfill
+     * <code>ReadyForFulfillment</code> - Conveys that the client has to fulfill
      * the intent.
      * </p>
      * </li>
      * <li>
      * <p>
-     * <code>Failed</code> – Conveys that the conversation with the user failed.
+     * <code>Failed</code> - Conveys that the conversation with the user failed.
      * </p>
      * <p>
      * This can happen for various reasons including that the user did not
@@ -1249,7 +1812,7 @@ public void setDialogState(DialogState dialogState) {
      *            <ul>
      *            <li>
      *            <p>
-     *            <code>ElicitIntent</code> – Amazon Lex wants to elicit user
+     *            <code>ElicitIntent</code> - Amazon Lex wants to elicit user
      *            intent.
      *            </p>
      *            <p>
@@ -1261,7 +1824,7 @@ public void setDialogState(DialogState dialogState) {
      *            </li>
      *            <li>
      *            <p>
-     *            <code>ConfirmIntent</code> – Amazon Lex is expecting a "yes"
+     *            <code>ConfirmIntent</code> - Amazon Lex is expecting a "yes"
      *            or "no" response.
      *            </p>
      *            <p>
@@ -1280,7 +1843,7 @@ public void setDialogState(DialogState dialogState) {
      *            </li>
      *            <li>
      *            <p>
-     *            <code>ElicitSlot</code> – Amazon Lex is expecting a slot value
+     *            <code>ElicitSlot</code> - Amazon Lex is expecting a slot value
      *            for the current intent.
      *            </p>
      *            <p>
@@ -1294,20 +1857,20 @@ public void setDialogState(DialogState dialogState) {
      *            </li>
      *            <li>
      *            <p>
-     *            <code>Fulfilled</code> – Conveys that the Lambda function
+     *            <code>Fulfilled</code> - Conveys that the Lambda function
      *            configured for the intent has successfully fulfilled the
      *            intent.
      *            </p>
      *            </li>
      *            <li>
      *            <p>
-     *            <code>ReadyForFulfillment</code> – Conveys that the client has
+     *            <code>ReadyForFulfillment</code> - Conveys that the client has
      *            to fulfill the intent.
      *            </p>
      *            </li>
      *            <li>
      *            <p>
-     *            <code>Failed</code> – Conveys that the conversation with the
+     *            <code>Failed</code> - Conveys that the conversation with the
      *            user failed.
      *            </p>
      *            <p>
@@ -1464,6 +2027,8 @@ public String toString() {
             sb.append("sessionAttributes: " + getSessionAttributes() + ",");
         if (getMessage() != null)
             sb.append("message: " + getMessage() + ",");
+        if (getMessageFormat() != null)
+            sb.append("messageFormat: " + getMessageFormat() + ",");
         if (getDialogState() != null)
             sb.append("dialogState: " + getDialogState() + ",");
         if (getSlotToElicit() != null)
@@ -1484,6 +2049,8 @@ public int hashCode() {
         hashCode = prime * hashCode
                 + ((getSessionAttributes() == null) ? 0 : getSessionAttributes().hashCode());
         hashCode = prime * hashCode + ((getMessage() == null) ? 0 : getMessage().hashCode());
+        hashCode = prime * hashCode
+                + ((getMessageFormat() == null) ? 0 : getMessageFormat().hashCode());
         hashCode = prime * hashCode
                 + ((getDialogState() == null) ? 0 : getDialogState().hashCode());
         hashCode = prime * hashCode
@@ -1522,6 +2089,11 @@ public boolean equals(Object obj) {
             return false;
         if (other.getMessage() != null && other.getMessage().equals(this.getMessage()) == false)
             return false;
+        if (other.getMessageFormat() == null ^ this.getMessageFormat() == null)
+            return false;
+        if (other.getMessageFormat() != null
+                && other.getMessageFormat().equals(this.getMessageFormat()) == false)
+            return false;
         if (other.getDialogState() == null ^ this.getDialogState() == null)
             return false;
         if (other.getDialogState() != null
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/PostTextRequestMarshaller.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/PostTextRequestMarshaller.java
index 34ac28a027..f8c6d6e5b7 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/PostTextRequestMarshaller.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/PostTextRequestMarshaller.java
@@ -83,6 +83,21 @@
                 }
                 jsonWriter.endObject();
             }
+            if (postTextRequest.getRequestAttributes() != null) {
+                java.util.Map<String, String> requestAttributes = postTextRequest
+                        .getRequestAttributes();
+                jsonWriter.name("requestAttributes");
+                jsonWriter.beginObject();
+                for (java.util.Map.Entry<String, String> requestAttributesEntry : requestAttributes
+                        .entrySet()) {
+                    String requestAttributesValue = requestAttributesEntry.getValue();
+                    if (requestAttributesValue != null) {
+                        jsonWriter.name(requestAttributesEntry.getKey());
+                        jsonWriter.value(requestAttributesValue);
+                    }
+                }
+                jsonWriter.endObject();
+            }
             if (postTextRequest.getInputText() != null) {
                 String inputText = postTextRequest.getInputText();
                 jsonWriter.name("inputText");
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/PostTextResultJsonUnmarshaller.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/PostTextResultJsonUnmarshaller.java
index 1c596c71e6..eb2bc734d8 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/PostTextResultJsonUnmarshaller.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/PostTextResultJsonUnmarshaller.java
@@ -49,6 +49,9 @@ public PostTextResult unmarshall(JsonUnmarshallerContext context) throws Excepti
             } else if (name.equals("message")) {
                 postTextResult.setMessage(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("messageFormat")) {
+                postTextResult.setMessageFormat(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("dialogState")) {
                 postTextResult.setDialogState(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-logs/pom.xml b/aws-android-sdk-logs/pom.xml
index 949dd6c3d2..d0070d7c85 100644
--- a/aws-android-sdk-logs/pom.xml
+++ b/aws-android-sdk-logs/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/CreateExportTaskResultJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/CreateExportTaskResultJsonUnmarshaller.java
index d302bd3ad8..abbff84059 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/CreateExportTaskResultJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/CreateExportTaskResultJsonUnmarshaller.java
@@ -34,8 +34,8 @@ public CreateExportTaskResult unmarshall(JsonUnmarshallerContext context) throws
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("taskId")) {
-                createExportTaskResult.setTaskId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                createExportTaskResult.setTaskId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DataAlreadyAcceptedExceptionUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DataAlreadyAcceptedExceptionUnmarshaller.java
index da295916d9..b2ab805a52 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DataAlreadyAcceptedExceptionUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DataAlreadyAcceptedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.logs.model.DataAlreadyAcceptedException;
 
 public class DataAlreadyAcceptedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,35 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public DataAlreadyAcceptedException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        DataAlreadyAcceptedException dataAlreadyAcceptedException = new DataAlreadyAcceptedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                dataAlreadyAcceptedException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("expectedSequenceToken")) {
-                dataAlreadyAcceptedException.setExpectedSequenceToken(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return dataAlreadyAcceptedException;
-    }
 }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeDestinationsResultJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeDestinationsResultJsonUnmarshaller.java
index 9c8345cb96..b6090a9217 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeDestinationsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeDestinationsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public DescribeDestinationsResult unmarshall(JsonUnmarshallerContext context) th
             String name = reader.nextName();
             if (name.equals("destinations")) {
                 describeDestinationsResult.setDestinations(new ListUnmarshaller<Destination>(
-                        DestinationJsonUnmarshaller.getInstance()).unmarshall(context));
+                        DestinationJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 describeDestinationsResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeExportTasksResultJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeExportTasksResultJsonUnmarshaller.java
index 0aa3d816be..17e806e342 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeExportTasksResultJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeExportTasksResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public DescribeExportTasksResult unmarshall(JsonUnmarshallerContext context) thr
             String name = reader.nextName();
             if (name.equals("exportTasks")) {
                 describeExportTasksResult.setExportTasks(new ListUnmarshaller<ExportTask>(
-                        ExportTaskJsonUnmarshaller.getInstance()).unmarshall(context));
+                        ExportTaskJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 describeExportTasksResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeLogGroupsResultJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeLogGroupsResultJsonUnmarshaller.java
index 2306ce7baf..9f9da16101 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeLogGroupsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeLogGroupsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public DescribeLogGroupsResult unmarshall(JsonUnmarshallerContext context) throw
             String name = reader.nextName();
             if (name.equals("logGroups")) {
                 describeLogGroupsResult.setLogGroups(new ListUnmarshaller<LogGroup>(
-                        LogGroupJsonUnmarshaller.getInstance()).unmarshall(context));
+                        LogGroupJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 describeLogGroupsResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeLogStreamsResultJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeLogStreamsResultJsonUnmarshaller.java
index 6d7e87b638..6d33f34d0e 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeLogStreamsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeLogStreamsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public DescribeLogStreamsResult unmarshall(JsonUnmarshallerContext context) thro
             String name = reader.nextName();
             if (name.equals("logStreams")) {
                 describeLogStreamsResult.setLogStreams(new ListUnmarshaller<LogStream>(
-                        LogStreamJsonUnmarshaller.getInstance()).unmarshall(context));
+                        LogStreamJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 describeLogStreamsResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeMetricFiltersResultJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeMetricFiltersResultJsonUnmarshaller.java
index 49c951487f..b46bb02d83 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeMetricFiltersResultJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeMetricFiltersResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public DescribeMetricFiltersResult unmarshall(JsonUnmarshallerContext context) t
             String name = reader.nextName();
             if (name.equals("metricFilters")) {
                 describeMetricFiltersResult.setMetricFilters(new ListUnmarshaller<MetricFilter>(
-                        MetricFilterJsonUnmarshaller.getInstance()).unmarshall(context));
+                        MetricFilterJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 describeMetricFiltersResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeResourcePoliciesResultJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeResourcePoliciesResultJsonUnmarshaller.java
index ab4d9d412d..a475df636d 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeResourcePoliciesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeResourcePoliciesResultJsonUnmarshaller.java
@@ -37,7 +37,9 @@ public DescribeResourcePoliciesResult unmarshall(JsonUnmarshallerContext context
             if (name.equals("resourcePolicies")) {
                 describeResourcePoliciesResult
                         .setResourcePolicies(new ListUnmarshaller<ResourcePolicy>(
-                                ResourcePolicyJsonUnmarshaller.getInstance()).unmarshall(context));
+                                ResourcePolicyJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 describeResourcePoliciesResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeSubscriptionFiltersResultJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeSubscriptionFiltersResultJsonUnmarshaller.java
index 657220a2d7..0c7339aec2 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeSubscriptionFiltersResultJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DescribeSubscriptionFiltersResultJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public DescribeSubscriptionFiltersResult unmarshall(JsonUnmarshallerContext cont
             if (name.equals("subscriptionFilters")) {
                 describeSubscriptionFiltersResult
                         .setSubscriptionFilters(new ListUnmarshaller<SubscriptionFilter>(
-                                SubscriptionFilterJsonUnmarshaller.getInstance())
+                                SubscriptionFilterJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("nextToken")) {
                 describeSubscriptionFiltersResult.setNextToken(StringJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DestinationJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DestinationJsonUnmarshaller.java
index 8f1459b4c8..8dc4708cce 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DestinationJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/DestinationJsonUnmarshaller.java
@@ -36,19 +36,23 @@ public Destination unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("destinationName")) {
-                destination.setDestinationName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                destination.setDestinationName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("targetArn")) {
-                destination.setTargetArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                destination.setTargetArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("roleArn")) {
-                destination.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                destination.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("accessPolicy")) {
                 destination.setAccessPolicy(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("arn")) {
-                destination.setArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                destination.setArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("creationTime")) {
-                destination.setCreationTime(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                destination.setCreationTime(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ExportTaskJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ExportTaskJsonUnmarshaller.java
index d22285447f..e0edefacbf 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ExportTaskJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ExportTaskJsonUnmarshaller.java
@@ -36,24 +36,29 @@ public ExportTask unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("taskId")) {
-                exportTask.setTaskId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                exportTask.setTaskId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("taskName")) {
-                exportTask.setTaskName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                exportTask.setTaskName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("logGroupName")) {
-                exportTask
-                        .setLogGroupName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                exportTask.setLogGroupName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("from")) {
-                exportTask.setFrom(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                exportTask.setFrom(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("to")) {
-                exportTask.setTo(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                exportTask.setTo(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("destination")) {
-                exportTask.setDestination(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                exportTask.setDestination(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("destinationPrefix")) {
-                exportTask.setDestinationPrefix(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                exportTask.setDestinationPrefix(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("status")) {
-                exportTask.setStatus(ExportTaskStatusJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                exportTask.setStatus(ExportTaskStatusJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("executionInfo")) {
                 exportTask.setExecutionInfo(ExportTaskExecutionInfoJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ExportTaskStatusJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ExportTaskStatusJsonUnmarshaller.java
index fb3327e3fe..af378a11e5 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ExportTaskStatusJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ExportTaskStatusJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public ExportTaskStatus unmarshall(JsonUnmarshallerContext context) throws Excep
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("code")) {
-                exportTaskStatus.setCode(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                exportTaskStatus.setCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("message")) {
                 exportTaskStatus.setMessage(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/FilterLogEventsResultJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/FilterLogEventsResultJsonUnmarshaller.java
index 375c0f32b6..a120608d35 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/FilterLogEventsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/FilterLogEventsResultJsonUnmarshaller.java
@@ -35,15 +35,18 @@ public FilterLogEventsResult unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("events")) {
                 filterLogEventsResult.setEvents(new ListUnmarshaller<FilteredLogEvent>(
-                        FilteredLogEventJsonUnmarshaller.getInstance()).unmarshall(context));
+                        FilteredLogEventJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("searchedLogStreams")) {
                 filterLogEventsResult
                         .setSearchedLogStreams(new ListUnmarshaller<SearchedLogStream>(
-                                SearchedLogStreamJsonUnmarshaller.getInstance())
+                                SearchedLogStreamJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("nextToken")) {
-                filterLogEventsResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                filterLogEventsResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/FilteredLogEventJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/FilteredLogEventJsonUnmarshaller.java
index dec33d38af..43ae1abb4a 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/FilteredLogEventJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/FilteredLogEventJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public FilteredLogEvent unmarshall(JsonUnmarshallerContext context) throws Excep
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("logStreamName")) {
-                filteredLogEvent.setLogStreamName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                filteredLogEvent.setLogStreamName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("timestamp")) {
                 filteredLogEvent.setTimestamp(LongJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -46,8 +46,8 @@ public FilteredLogEvent unmarshall(JsonUnmarshallerContext context) throws Excep
                 filteredLogEvent.setMessage(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ingestionTime")) {
-                filteredLogEvent.setIngestionTime(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                filteredLogEvent.setIngestionTime(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("eventId")) {
                 filteredLogEvent.setEventId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/GetLogEventsResultJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/GetLogEventsResultJsonUnmarshaller.java
index d144321cac..0c6a7b368f 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/GetLogEventsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/GetLogEventsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public GetLogEventsResult unmarshall(JsonUnmarshallerContext context) throws Exc
             String name = reader.nextName();
             if (name.equals("events")) {
                 getLogEventsResult.setEvents(new ListUnmarshaller<OutputLogEvent>(
-                        OutputLogEventJsonUnmarshaller.getInstance()).unmarshall(context));
+                        OutputLogEventJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("nextForwardToken")) {
                 getLogEventsResult.setNextForwardToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/InputLogEventJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/InputLogEventJsonUnmarshaller.java
index 5c6156c188..546dd717ea 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/InputLogEventJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/InputLogEventJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public InputLogEvent unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("timestamp")) {
-                inputLogEvent.setTimestamp(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                inputLogEvent.setTimestamp(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("message")) {
-                inputLogEvent.setMessage(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                inputLogEvent.setMessage(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/InvalidOperationExceptionUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/InvalidOperationExceptionUnmarshaller.java
index ed4fb2c075..20c3392117 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/InvalidOperationExceptionUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/InvalidOperationExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.logs.model.InvalidOperationException;
 
 public class InvalidOperationExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidOperationException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidOperationException invalidOperationException = new InvalidOperationException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidOperationException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidOperationException;
-    }
 }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/InvalidParameterExceptionUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/InvalidParameterExceptionUnmarshaller.java
index b50cbe9a81..d5dfb52757 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/InvalidParameterExceptionUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/InvalidParameterExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.logs.model.InvalidParameterException;
 
 public class InvalidParameterExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidParameterException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidParameterException invalidParameterException = new InvalidParameterException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidParameterException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidParameterException;
-    }
 }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/InvalidSequenceTokenExceptionUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/InvalidSequenceTokenExceptionUnmarshaller.java
index 3e51490a6f..e6be7014bb 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/InvalidSequenceTokenExceptionUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/InvalidSequenceTokenExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.logs.model.InvalidSequenceTokenException;
 
 public class InvalidSequenceTokenExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,35 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidSequenceTokenException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidSequenceTokenException invalidSequenceTokenException = new InvalidSequenceTokenException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidSequenceTokenException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("expectedSequenceToken")) {
-                invalidSequenceTokenException.setExpectedSequenceToken(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidSequenceTokenException;
-    }
 }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/LimitExceededExceptionUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/LimitExceededExceptionUnmarshaller.java
index d3280f0d76..24f43b4fdd 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/LimitExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/LimitExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.logs.model.LimitExceededException;
 
 public class LimitExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public LimitExceededException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        LimitExceededException limitExceededException = new LimitExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                limitExceededException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return limitExceededException;
-    }
 }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ListTagsLogGroupResultJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ListTagsLogGroupResultJsonUnmarshaller.java
index f7dffb36b7..a079a618fc 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ListTagsLogGroupResultJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ListTagsLogGroupResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public ListTagsLogGroupResult unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("tags")) {
                 listTagsLogGroupResult.setTags(new MapUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/LogGroupJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/LogGroupJsonUnmarshaller.java
index e4208c0142..c2aa280487 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/LogGroupJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/LogGroupJsonUnmarshaller.java
@@ -36,21 +36,26 @@ public LogGroup unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("logGroupName")) {
-                logGroup.setLogGroupName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                logGroup.setLogGroupName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("creationTime")) {
-                logGroup.setCreationTime(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                logGroup.setCreationTime(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("retentionInDays")) {
-                logGroup.setRetentionInDays(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                logGroup.setRetentionInDays(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("metricFilterCount")) {
-                logGroup.setMetricFilterCount(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                logGroup.setMetricFilterCount(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("arn")) {
-                logGroup.setArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                logGroup.setArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("storedBytes")) {
-                logGroup.setStoredBytes(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                logGroup.setStoredBytes(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("kmsKeyId")) {
-                logGroup.setKmsKeyId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                logGroup.setKmsKeyId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/LogStreamJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/LogStreamJsonUnmarshaller.java
index 5fd6116767..1781420427 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/LogStreamJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/LogStreamJsonUnmarshaller.java
@@ -36,26 +36,29 @@ public LogStream unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("logStreamName")) {
-                logStream
-                        .setLogStreamName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                logStream.setLogStreamName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("creationTime")) {
-                logStream.setCreationTime(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                logStream.setCreationTime(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("firstEventTimestamp")) {
-                logStream.setFirstEventTimestamp(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                logStream.setFirstEventTimestamp(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("lastEventTimestamp")) {
-                logStream.setLastEventTimestamp(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                logStream.setLastEventTimestamp(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("lastIngestionTime")) {
-                logStream.setLastIngestionTime(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                logStream.setLastIngestionTime(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("uploadSequenceToken")) {
-                logStream.setUploadSequenceToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                logStream.setUploadSequenceToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("arn")) {
-                logStream.setArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                logStream.setArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("storedBytes")) {
-                logStream.setStoredBytes(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                logStream.setStoredBytes(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/MetricFilterJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/MetricFilterJsonUnmarshaller.java
index e223c3b4fc..2a2dac47cd 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/MetricFilterJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/MetricFilterJsonUnmarshaller.java
@@ -36,20 +36,22 @@ public MetricFilter unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("filterName")) {
-                metricFilter
-                        .setFilterName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                metricFilter.setFilterName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("filterPattern")) {
-                metricFilter.setFilterPattern(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                metricFilter.setFilterPattern(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("metricTransformations")) {
                 metricFilter.setMetricTransformations(new ListUnmarshaller<MetricTransformation>(
-                        MetricTransformationJsonUnmarshaller.getInstance()).unmarshall(context));
+                        MetricTransformationJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("creationTime")) {
-                metricFilter
-                        .setCreationTime(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                metricFilter.setCreationTime(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("logGroupName")) {
-                metricFilter.setLogGroupName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                metricFilter.setLogGroupName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/MetricFilterMatchRecordJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/MetricFilterMatchRecordJsonUnmarshaller.java
index 41767458a4..feece84c43 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/MetricFilterMatchRecordJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/MetricFilterMatchRecordJsonUnmarshaller.java
@@ -44,7 +44,9 @@ public MetricFilterMatchRecord unmarshall(JsonUnmarshallerContext context) throw
                         .unmarshall(context));
             } else if (name.equals("extractedValues")) {
                 metricFilterMatchRecord.setExtractedValues(new MapUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/MetricTransformationJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/MetricTransformationJsonUnmarshaller.java
index cc1654748f..a3ab5c09d5 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/MetricTransformationJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/MetricTransformationJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public MetricTransformation unmarshall(JsonUnmarshallerContext context) throws E
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("metricName")) {
-                metricTransformation.setMetricName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                metricTransformation.setMetricName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("metricNamespace")) {
                 metricTransformation.setMetricNamespace(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/OperationAbortedExceptionUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/OperationAbortedExceptionUnmarshaller.java
index 97d7186448..c6e3c85e03 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/OperationAbortedExceptionUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/OperationAbortedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.logs.model.OperationAbortedException;
 
 public class OperationAbortedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public OperationAbortedException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        OperationAbortedException operationAbortedException = new OperationAbortedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                operationAbortedException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return operationAbortedException;
-    }
 }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/OutputLogEventJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/OutputLogEventJsonUnmarshaller.java
index 3342c03253..05792df166 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/OutputLogEventJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/OutputLogEventJsonUnmarshaller.java
@@ -37,12 +37,14 @@ public OutputLogEvent unmarshall(JsonUnmarshallerContext context) throws Excepti
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("timestamp")) {
-                outputLogEvent.setTimestamp(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                outputLogEvent.setTimestamp(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("message")) {
-                outputLogEvent.setMessage(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                outputLogEvent.setMessage(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ingestionTime")) {
-                outputLogEvent.setIngestionTime(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                outputLogEvent.setIngestionTime(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/PutLogEventsResultJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/PutLogEventsResultJsonUnmarshaller.java
index b3fc262af7..b88184f9e3 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/PutLogEventsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/PutLogEventsResultJsonUnmarshaller.java
@@ -38,7 +38,8 @@ public PutLogEventsResult unmarshall(JsonUnmarshallerContext context) throws Exc
                         .unmarshall(context));
             } else if (name.equals("rejectedLogEventsInfo")) {
                 putLogEventsResult.setRejectedLogEventsInfo(RejectedLogEventsInfoJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/PutResourcePolicyResultJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/PutResourcePolicyResultJsonUnmarshaller.java
index 085445bb3a..ca9856c29f 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/PutResourcePolicyResultJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/PutResourcePolicyResultJsonUnmarshaller.java
@@ -35,7 +35,8 @@ public PutResourcePolicyResult unmarshall(JsonUnmarshallerContext context) throw
             String name = reader.nextName();
             if (name.equals("resourcePolicy")) {
                 putResourcePolicyResult.setResourcePolicy(ResourcePolicyJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/RejectedLogEventsInfoJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/RejectedLogEventsInfoJsonUnmarshaller.java
index af77f409d8..0f66d7bc01 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/RejectedLogEventsInfoJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/RejectedLogEventsInfoJsonUnmarshaller.java
@@ -38,13 +38,16 @@ public RejectedLogEventsInfo unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("tooNewLogEventStartIndex")) {
                 rejectedLogEventsInfo.setTooNewLogEventStartIndex(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("tooOldLogEventEndIndex")) {
                 rejectedLogEventsInfo.setTooOldLogEventEndIndex(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("expiredLogEventEndIndex")) {
                 rejectedLogEventsInfo.setExpiredLogEventEndIndex(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ResourceAlreadyExistsExceptionUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ResourceAlreadyExistsExceptionUnmarshaller.java
index 7cb85ca740..0dec931897 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ResourceAlreadyExistsExceptionUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ResourceAlreadyExistsExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.logs.model.ResourceAlreadyExistsException;
 
 public class ResourceAlreadyExistsExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceAlreadyExistsException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceAlreadyExistsException resourceAlreadyExistsException = new ResourceAlreadyExistsException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceAlreadyExistsException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceAlreadyExistsException;
-    }
 }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ResourceNotFoundExceptionUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ResourceNotFoundExceptionUnmarshaller.java
index e57b545a18..cdc69845fb 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ResourceNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ResourceNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.logs.model.ResourceNotFoundException;
 
 public class ResourceNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceNotFoundException resourceNotFoundException = new ResourceNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ResourcePolicyJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ResourcePolicyJsonUnmarshaller.java
index 90a20cb191..d6570c0412 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ResourcePolicyJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ResourcePolicyJsonUnmarshaller.java
@@ -37,14 +37,14 @@ public ResourcePolicy unmarshall(JsonUnmarshallerContext context) throws Excepti
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("policyName")) {
-                resourcePolicy.setPolicyName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                resourcePolicy.setPolicyName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("policyDocument")) {
-                resourcePolicy.setPolicyDocument(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                resourcePolicy.setPolicyDocument(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("lastUpdatedTime")) {
-                resourcePolicy.setLastUpdatedTime(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                resourcePolicy.setLastUpdatedTime(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/SearchedLogStreamJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/SearchedLogStreamJsonUnmarshaller.java
index 510ad94d23..8e2f1920a2 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/SearchedLogStreamJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/SearchedLogStreamJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public SearchedLogStream unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("logStreamName")) {
-                searchedLogStream.setLogStreamName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                searchedLogStream.setLogStreamName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("searchedCompletely")) {
                 searchedLogStream.setSearchedCompletely(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ServiceUnavailableExceptionUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ServiceUnavailableExceptionUnmarshaller.java
index f3018dc433..94fc838ef7 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ServiceUnavailableExceptionUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/ServiceUnavailableExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.logs.model.ServiceUnavailableException;
 
 public class ServiceUnavailableExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ServiceUnavailableException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ServiceUnavailableException serviceUnavailableException = new ServiceUnavailableException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                serviceUnavailableException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return serviceUnavailableException;
-    }
 }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/SubscriptionFilterJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/SubscriptionFilterJsonUnmarshaller.java
index 33ccb11a06..4acaa8e45e 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/SubscriptionFilterJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/SubscriptionFilterJsonUnmarshaller.java
@@ -37,11 +37,11 @@ public SubscriptionFilter unmarshall(JsonUnmarshallerContext context) throws Exc
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("filterName")) {
-                subscriptionFilter.setFilterName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                subscriptionFilter.setFilterName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("logGroupName")) {
-                subscriptionFilter.setLogGroupName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                subscriptionFilter.setLogGroupName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("filterPattern")) {
                 subscriptionFilter.setFilterPattern(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -49,14 +49,14 @@ public SubscriptionFilter unmarshall(JsonUnmarshallerContext context) throws Exc
                 subscriptionFilter.setDestinationArn(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("roleArn")) {
-                subscriptionFilter.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                subscriptionFilter.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("distribution")) {
-                subscriptionFilter.setDistribution(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                subscriptionFilter.setDistribution(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("creationTime")) {
-                subscriptionFilter.setCreationTime(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                subscriptionFilter.setCreationTime(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/TestMetricFilterResultJsonUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/TestMetricFilterResultJsonUnmarshaller.java
index 76449a324c..d72d08b80f 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/TestMetricFilterResultJsonUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/TestMetricFilterResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public TestMetricFilterResult unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("matches")) {
                 testMetricFilterResult.setMatches(new ListUnmarshaller<MetricFilterMatchRecord>(
-                        MetricFilterMatchRecordJsonUnmarshaller.getInstance()).unmarshall(context));
+                        MetricFilterMatchRecordJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/UnrecognizedClientExceptionUnmarshaller.java b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/UnrecognizedClientExceptionUnmarshaller.java
index 088f10912e..ece1acbb66 100644
--- a/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/UnrecognizedClientExceptionUnmarshaller.java
+++ b/aws-android-sdk-logs/src/main/java/com/amazonaws/services/logs/model/transform/UnrecognizedClientExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.logs.model.UnrecognizedClientException;
 
 public class UnrecognizedClientExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public UnrecognizedClientException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        UnrecognizedClientException unrecognizedClientException = new UnrecognizedClientException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                unrecognizedClientException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return unrecognizedClientException;
-    }
 }
diff --git a/aws-android-sdk-machinelearning/pom.xml b/aws-android-sdk-machinelearning/pom.xml
index 038104ae89..81d4eff818 100644
--- a/aws-android-sdk-machinelearning/pom.xml
+++ b/aws-android-sdk-machinelearning/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/GetMLModelResultJsonUnmarshaller.java b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/GetMLModelResultJsonUnmarshaller.java
index 596c9a2472..e8515ca462 100644
--- a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/GetMLModelResultJsonUnmarshaller.java
+++ b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/GetMLModelResultJsonUnmarshaller.java
@@ -34,8 +34,8 @@ public GetMLModelResult unmarshall(JsonUnmarshallerContext context) throws Excep
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("MLModelId")) {
-                getMLModelResult.setMLModelId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getMLModelResult.setMLModelId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TrainingDataSourceId")) {
                 getMLModelResult.setTrainingDataSourceId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -46,55 +46,58 @@ public GetMLModelResult unmarshall(JsonUnmarshallerContext context) throws Excep
                 getMLModelResult.setCreatedAt(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("LastUpdatedAt")) {
-                getMLModelResult.setLastUpdatedAt(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getMLModelResult.setLastUpdatedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Name")) {
-                getMLModelResult.setName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                getMLModelResult.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Status")) {
-                getMLModelResult
-                        .setStatus(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                getMLModelResult.setStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SizeInBytes")) {
-                getMLModelResult.setSizeInBytes(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getMLModelResult.setSizeInBytes(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EndpointInfo")) {
                 getMLModelResult.setEndpointInfo(RealtimeEndpointInfoJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("TrainingParameters")) {
                 getMLModelResult.setTrainingParameters(new MapUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("InputDataLocationS3")) {
                 getMLModelResult.setInputDataLocationS3(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("MLModelType")) {
-                getMLModelResult.setMLModelType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getMLModelResult.setMLModelType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ScoreThreshold")) {
-                getMLModelResult.setScoreThreshold(FloatJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getMLModelResult.setScoreThreshold(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ScoreThresholdLastUpdatedAt")) {
                 getMLModelResult.setScoreThresholdLastUpdatedAt(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("LogUri")) {
-                getMLModelResult
-                        .setLogUri(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                getMLModelResult.setLogUri(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Message")) {
                 getMLModelResult.setMessage(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ComputeTime")) {
-                getMLModelResult.setComputeTime(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getMLModelResult.setComputeTime(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("FinishedAt")) {
-                getMLModelResult.setFinishedAt(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getMLModelResult.setFinishedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("StartedAt")) {
                 getMLModelResult.setStartedAt(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Recipe")) {
-                getMLModelResult
-                        .setRecipe(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                getMLModelResult.setRecipe(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Schema")) {
-                getMLModelResult
-                        .setSchema(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                getMLModelResult.setSchema(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/InternalServerExceptionUnmarshaller.java b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/InternalServerExceptionUnmarshaller.java
index 76e20620ab..894914d5dc 100644
--- a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/InternalServerExceptionUnmarshaller.java
+++ b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/InternalServerExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.machinelearning.model.InternalServerException;
 
 public class InternalServerExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,34 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InternalServerException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InternalServerException internalServerException = new InternalServerException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                internalServerException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("code")) {
-                internalServerException.setCode(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return internalServerException;
-    }
 }
diff --git a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/InvalidInputExceptionUnmarshaller.java b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/InvalidInputExceptionUnmarshaller.java
index aea969849e..638fdafec4 100644
--- a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/InvalidInputExceptionUnmarshaller.java
+++ b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/InvalidInputExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.machinelearning.model.InvalidInputException;
 
 public class InvalidInputExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,34 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidInputException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidInputException invalidInputException = new InvalidInputException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidInputException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("code")) {
-                invalidInputException.setCode(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidInputException;
-    }
 }
diff --git a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/LimitExceededExceptionUnmarshaller.java b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/LimitExceededExceptionUnmarshaller.java
index dc07985d69..ddbb9ed015 100644
--- a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/LimitExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/LimitExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.machinelearning.model.LimitExceededException;
 
 public class LimitExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,34 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public LimitExceededException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        LimitExceededException limitExceededException = new LimitExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                limitExceededException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("code")) {
-                limitExceededException.setCode(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return limitExceededException;
-    }
 }
diff --git a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/PredictResultJsonUnmarshaller.java b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/PredictResultJsonUnmarshaller.java
index 9a1d4c94af..a921d08532 100644
--- a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/PredictResultJsonUnmarshaller.java
+++ b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/PredictResultJsonUnmarshaller.java
@@ -34,8 +34,8 @@ public PredictResult unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Prediction")) {
-                predictResult.setPrediction(PredictionJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                predictResult.setPrediction(PredictionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/PredictionJsonUnmarshaller.java b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/PredictionJsonUnmarshaller.java
index 42f0560824..412790a4bf 100644
--- a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/PredictionJsonUnmarshaller.java
+++ b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/PredictionJsonUnmarshaller.java
@@ -36,17 +36,21 @@ public Prediction unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("predictedLabel")) {
-                prediction.setPredictedLabel(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                prediction.setPredictedLabel(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("predictedValue")) {
                 prediction.setPredictedValue(FloatJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("predictedScores")) {
                 prediction.setPredictedScores(new MapUnmarshaller<Float>(FloatJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("details")) {
                 prediction.setDetails(new MapUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/PredictorNotMountedExceptionUnmarshaller.java b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/PredictorNotMountedExceptionUnmarshaller.java
index 60e86f8bef..03bde28dc4 100644
--- a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/PredictorNotMountedExceptionUnmarshaller.java
+++ b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/PredictorNotMountedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.machinelearning.model.PredictorNotMountedException;
 
 public class PredictorNotMountedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public PredictorNotMountedException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        PredictorNotMountedException predictorNotMountedException = new PredictorNotMountedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                predictorNotMountedException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return predictorNotMountedException;
-    }
 }
diff --git a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/RealtimeEndpointInfoJsonUnmarshaller.java b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/RealtimeEndpointInfoJsonUnmarshaller.java
index 214c4cb6c6..77bbf3d169 100644
--- a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/RealtimeEndpointInfoJsonUnmarshaller.java
+++ b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/RealtimeEndpointInfoJsonUnmarshaller.java
@@ -40,8 +40,8 @@ public RealtimeEndpointInfo unmarshall(JsonUnmarshallerContext context) throws E
                 realtimeEndpointInfo.setPeakRequestsPerSecond(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("CreatedAt")) {
-                realtimeEndpointInfo.setCreatedAt(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                realtimeEndpointInfo.setCreatedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EndpointUrl")) {
                 realtimeEndpointInfo.setEndpointUrl(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/ResourceNotFoundExceptionUnmarshaller.java b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/ResourceNotFoundExceptionUnmarshaller.java
index ba0634eccd..54050d1234 100644
--- a/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/ResourceNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-machinelearning/src/main/java/com/amazonaws/services/machinelearning/model/transform/ResourceNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.machinelearning.model.ResourceNotFoundException;
 
 public class ResourceNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,34 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceNotFoundException resourceNotFoundException = new ResourceNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("code")) {
-                resourceNotFoundException.setCode(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-mobile-client/pom.xml b/aws-android-sdk-mobile-client/pom.xml
index ae8c9d0289..4a9d2bc260 100644
--- a/aws-android-sdk-mobile-client/pom.xml
+++ b/aws-android-sdk-mobile-client/pom.xml
@@ -28,7 +28,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -36,7 +36,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
       <type>aar</type>
     </dependency>
 
@@ -44,14 +44,14 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-cognitoidentityprovider</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
 
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-ui</artifactId>
       <optional>true</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
       <type>aar</type>
     </dependency>
 
@@ -67,7 +67,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-google</artifactId>
       <optional>true</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
       <type>aar</type>
     </dependency>
 
@@ -75,7 +75,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-facebook</artifactId>
       <optional>true</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
       <type>aar</type>
     </dependency>
 
@@ -83,7 +83,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-userpools</artifactId>
       <optional>true</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
       <type>aar</type>
     </dependency>
 
@@ -112,8 +112,7 @@
         <extensions>true</extensions>
         <configuration>
           <sdk>
-            <platform>${env.ANDROID_PLATFORM}</platform>
-            <buildTools>${env.ANDROID_BUILDTOOL_VERSION}</buildTools>
+            <platform>25</platform>
           </sdk>
         </configuration>
       </plugin>
diff --git a/aws-android-sdk-mobileanalytics/build.gradle b/aws-android-sdk-mobileanalytics/build.gradle
index 4e6c8dee52..d9f0a313ac 100644
--- a/aws-android-sdk-mobileanalytics/build.gradle
+++ b/aws-android-sdk-mobileanalytics/build.gradle
@@ -14,8 +14,3 @@ dependencies {
 
 sourceCompatibility = "1.7"
 targetCompatibility = "1.7"
-
-task javadocs(type: Javadoc) {
-    exclude "**/amazonmobileanalytics/**"
-    exclude "**/mobileanalytics/**"
-}
\ No newline at end of file
diff --git a/aws-android-sdk-mobileanalytics/pom.xml b/aws-android-sdk-mobileanalytics/pom.xml
index fb759c1a52..9696663de4 100644
--- a/aws-android-sdk-mobileanalytics/pom.xml
+++ b/aws-android-sdk-mobileanalytics/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/AnalyticsCallback.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/AnalyticsCallback.java
index 46859b2770..720d7bf987 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/AnalyticsCallback.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/AnalyticsCallback.java
@@ -19,7 +19,9 @@
  * The {@link AnalyticsCallback} is an abstract class which allows you create
  * subclasses that will handle the completion of certain tasks. On success, the
  * handler's return object is passed into the onComplete method as an argument.
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public abstract class AnalyticsCallback<T> {
     protected AnalyticsCallback() {
     }
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/AnalyticsConfig.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/AnalyticsConfig.java
index c7124c0d80..dbd91aaee5 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/AnalyticsConfig.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/AnalyticsConfig.java
@@ -25,7 +25,9 @@
  * be sent over WIFI, but can be set to allow events to be sent over the mobile
  * network. Finally developers can set any networking behavior that a low-level
  * AWS client can change through a ClientConfiguration object.
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0 Please use AWS Pinpoint SDK for Android along with AWS Pinpoint service instead.
  */
+@Deprecated
 public class AnalyticsConfig {
 
     private boolean allowEventCollection = true;
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/AnalyticsEvent.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/AnalyticsEvent.java
index 481a66f6f4..bb1785be99 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/AnalyticsEvent.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/AnalyticsEvent.java
@@ -37,7 +37,9 @@
  *     eventClient.recordEvent(level1UserBoughtUpgradeEvent);
  * }
  * </pre>
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public interface AnalyticsEvent {
     /**
      * Adds an attribute to this {@link AnalyticsEvent} with the specified key.
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/EventClient.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/EventClient.java
index e480ba916d..ca3635b6fd 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/EventClient.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/EventClient.java
@@ -53,7 +53,9 @@
  * events will be dropped. When events successfully submitted, they are removed
  * from the local filestore
  * </p>
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public interface EventClient {
 
     /**
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/InitializationException.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/InitializationException.java
index 46ceb2fc02..971b9523be 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/InitializationException.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/InitializationException.java
@@ -20,7 +20,9 @@
 /**
  * An error which represents that MobileAnalyticsManager could not be
  * initialized for any reason.
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public class InitializationException extends AmazonClientException {
     private static final long serialVersionUID = 2413377589460950524L;
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/MobileAnalyticsManager.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/MobileAnalyticsManager.java
index 17ec7901b4..8bae897ae9 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/MobileAnalyticsManager.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/MobileAnalyticsManager.java
@@ -47,7 +47,9 @@
  * MobileAnalyticsManager will use to store files about events that you record.
  * If you are developing a library, you should create a app ID for your library
  * so it does not collide with the app ID of app developer using your library.
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public class MobileAnalyticsManager {
     private static final String SDK_VERSION = VersionInfoUtils.getVersion();
     private static final String SDK_NAME = "AmazonMobileAnalyticsSDK";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/SessionClient.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/SessionClient.java
index f437742308..23411f9d84 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/SessionClient.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/SessionClient.java
@@ -68,7 +68,9 @@
  *     this.mobileAnalyticsManager.getSessionClient().resumeSession();
  * }
  * </pre>
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public interface SessionClient {
 
     /**
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/AnalyticsContext.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/AnalyticsContext.java
index 1ce983a840..e5d389cbee 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/AnalyticsContext.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/AnalyticsContext.java
@@ -21,6 +21,10 @@
 import com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.delivery.DeliveryClient;
 import com.amazonaws.services.mobileanalytics.AmazonMobileAnalyticsClient;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface AnalyticsContext {
     public Configuration getConfiguration();
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/DefaultAnalyticsContext.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/DefaultAnalyticsContext.java
index 06b5d40008..fef597bf41 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/DefaultAnalyticsContext.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/DefaultAnalyticsContext.java
@@ -34,6 +34,10 @@
 import com.amazonaws.regions.Regions;
 import com.amazonaws.services.mobileanalytics.AmazonMobileAnalyticsClient;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class DefaultAnalyticsContext implements AnalyticsContext {
     private final Configuration configuration;
     private Id uniqueId;
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/configuration/Configuration.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/configuration/Configuration.java
index a5d4696fab..a781310b87 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/configuration/Configuration.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/configuration/Configuration.java
@@ -15,6 +15,10 @@
 
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.configuration;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface Configuration {
     public Long getLong(String propertyName);
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/configuration/PreferencesConfiguration.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/configuration/PreferencesConfiguration.java
index 1710bebfaf..c1bef9f87a 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/configuration/PreferencesConfiguration.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/configuration/PreferencesConfiguration.java
@@ -30,6 +30,10 @@
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class PreferencesConfiguration implements Configuration {
 
     private static final String TAG = "PreferencesConfiguration";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/http/RequestTimingHandler.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/http/RequestTimingHandler.java
index 979b4cd126..141dc96588 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/http/RequestTimingHandler.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/http/RequestTimingHandler.java
@@ -32,6 +32,10 @@
 import java.util.Date;
 import java.util.Map;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class RequestTimingHandler extends RequestHandler2 {
     private static final String TAG = "RequestTimingHandler";
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/http/SDKInfoHandler.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/http/SDKInfoHandler.java
index 1e09f92ce0..165e0f95a1 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/http/SDKInfoHandler.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/http/SDKInfoHandler.java
@@ -20,6 +20,10 @@
 import com.amazonaws.handlers.RequestHandler2;
 import com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.util.SDKInfo;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public final class SDKInfoHandler extends RequestHandler2 {
     static final String CLIENT_SDK_VERSION_HEADER_NAME = "x-amzn-ClientSDKVersion";
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/idresolver/Id.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/idresolver/Id.java
index ef18e37db8..e1053c95f1 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/idresolver/Id.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/idresolver/Id.java
@@ -15,6 +15,10 @@
 
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.idresolver;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class Id {
     private static final Id EMPTY_ID = new Id("");
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/idresolver/SharedPrefsUniqueIdService.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/idresolver/SharedPrefsUniqueIdService.java
index 7c1ebf0772..931fd97eed 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/idresolver/SharedPrefsUniqueIdService.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/idresolver/SharedPrefsUniqueIdService.java
@@ -24,6 +24,10 @@
 
 import java.util.UUID;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class SharedPrefsUniqueIdService implements UniqueIdService {
 
     private static final String TAG = "SharedPrefsUniqueIdService";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/idresolver/UniqueIdService.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/idresolver/UniqueIdService.java
index 350beb948b..94879c9c21 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/idresolver/UniqueIdService.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/idresolver/UniqueIdService.java
@@ -17,6 +17,10 @@
 
 import com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.AnalyticsContext;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface UniqueIdService {
     /**
      * Get the Id based on the passed in context
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidAppDetails.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidAppDetails.java
index 4abc1629e3..5866ec72c9 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidAppDetails.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidAppDetails.java
@@ -22,6 +22,10 @@
 import android.content.pm.PackageManager.NameNotFoundException;
 import android.util.Log;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class AndroidAppDetails implements AppDetails {
     private static final String TAG = "AndroidAppDetails";
     private Context applicationContext;
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidConnectivity.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidConnectivity.java
index 63793e6a5f..35651f26c8 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidConnectivity.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidConnectivity.java
@@ -22,6 +22,10 @@
 import android.util.Log;
 import android.os.Build;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class AndroidConnectivity implements Connectivity {
     private static final String TAG = "AndroidConnectivity";
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidDeviceDetails.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidDeviceDetails.java
index 191cdc1f13..78f58455f4 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidDeviceDetails.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidDeviceDetails.java
@@ -19,6 +19,10 @@
 
 import java.util.Locale;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class AndroidDeviceDetails implements DeviceDetails {
 
     private final String carrier;
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidPreferences.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidPreferences.java
index fa24c5a075..6bb9775d6f 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidPreferences.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidPreferences.java
@@ -18,6 +18,10 @@
 import android.content.Context;
 import android.content.SharedPreferences;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class AndroidPreferences implements Preferences {
 
     private final SharedPreferences preferences;
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidSystem.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidSystem.java
index b5921881ff..972748d5e2 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidSystem.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AndroidSystem.java
@@ -18,6 +18,10 @@
 import android.content.Context;
 import android.telephony.TelephonyManager;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class AndroidSystem implements System {
     private final Preferences preferences;
     private final FileManager fileManager;
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AppDetails.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AppDetails.java
index 8efb0f945e..2c0de121a1 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AppDetails.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/AppDetails.java
@@ -15,6 +15,10 @@
 
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.system;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface AppDetails {
     public String getAppTitle();
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/Connectivity.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/Connectivity.java
index f2d230354b..e38e23b0f0 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/Connectivity.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/Connectivity.java
@@ -15,6 +15,10 @@
 
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.system;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface Connectivity {
     public boolean isConnected();
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/DefaultFileManager.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/DefaultFileManager.java
index f4b727e22a..787efeabdb 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/DefaultFileManager.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/DefaultFileManager.java
@@ -26,6 +26,10 @@
 import java.util.HashSet;
 import java.util.Set;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class DefaultFileManager implements FileManager {
     private final File directory;
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/DeviceDetails.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/DeviceDetails.java
index f97cd35adf..5a25df9e47 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/DeviceDetails.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/DeviceDetails.java
@@ -17,6 +17,10 @@
 
 import java.util.Locale;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface DeviceDetails {
     public String platformVersion();
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/FileManager.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/FileManager.java
index 322bdd9117..4d69454208 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/FileManager.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/FileManager.java
@@ -22,6 +22,10 @@
 import java.io.OutputStream;
 import java.util.Set;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface FileManager {
     public File createDirectory(final String directoryPath);
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/Preferences.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/Preferences.java
index cb18f2854e..c6ff2f269e 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/Preferences.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/Preferences.java
@@ -15,6 +15,10 @@
 
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.system;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface Preferences {
     public boolean getBoolean(final String key, final boolean optValue);
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/System.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/System.java
index 0fd949c8ba..28b7bd4350 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/System.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/system/System.java
@@ -15,6 +15,10 @@
 
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.system;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface System {
     public FileManager getFileManager();
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/DateUtil.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/DateUtil.java
index 0049b6343d..95419b2cc9 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/DateUtil.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/DateUtil.java
@@ -23,6 +23,10 @@
 import java.util.Locale;
 import java.util.TimeZone;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class DateUtil {
 
     private static final DateFormat ISO_DATE_FORMATTER_UTC;
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/JSONBuilder.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/JSONBuilder.java
index 5f2f0069bc..49b09d0d54 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/JSONBuilder.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/JSONBuilder.java
@@ -18,6 +18,10 @@
 import org.json.JSONException;
 import org.json.JSONObject;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class JSONBuilder implements JSONSerializable {
     private JSONObject json = new JSONObject();
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/JSONSerializable.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/JSONSerializable.java
index 86ddd5d057..071660888c 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/JSONSerializable.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/JSONSerializable.java
@@ -17,6 +17,10 @@
 
 import org.json.JSONObject;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface JSONSerializable {
     public JSONObject toJSONObject();
 }
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/Nullable.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/Nullable.java
index 3d52733c6c..bdc4b61e24 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/Nullable.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/Nullable.java
@@ -15,6 +15,10 @@
 
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.util;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public @interface Nullable {
 
 }
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/Preconditions.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/Preconditions.java
index fa92b5408d..38602da9da 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/Preconditions.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/Preconditions.java
@@ -58,7 +58,9 @@
  *
  * @author Kevin Bourrillion
  * @since 2.0 (imported from Google Collections Library)
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public final class Preconditions {
     private Preconditions() {
     }
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/SDKInfo.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/SDKInfo.java
index c8bccddb9d..4901f83d6c 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/SDKInfo.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/SDKInfo.java
@@ -15,6 +15,10 @@
 
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.util;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class SDKInfo {
     private final String name;
     private final String version;
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/StringUtil.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/StringUtil.java
index e848ca7235..3cd686f123 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/StringUtil.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/core/util/StringUtil.java
@@ -24,7 +24,9 @@
 
 /**
  * String utility methods.
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public final class StringUtil {
     public static final String UTF_8 = "UTF-8";
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/DefaultDeliveryClient.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/DefaultDeliveryClient.java
index f21711f3d4..9283bdbb60 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/DefaultDeliveryClient.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/DefaultDeliveryClient.java
@@ -44,7 +44,10 @@
 import java.util.concurrent.ThreadPoolExecutor;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicLong;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class DefaultDeliveryClient implements DeliveryClient {
 
     public static final String EVENTS_DIRECTORY = "events";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/DeliveryClient.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/DeliveryClient.java
index 98eec62560..e1868d4785 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/DeliveryClient.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/DeliveryClient.java
@@ -17,7 +17,10 @@
 
 import com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.event.EventObserver;
 import com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.event.InternalEvent;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface DeliveryClient extends EventObserver {
     public void enqueueEventForDelivery(InternalEvent event);
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/ERSRequestBuilder.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/ERSRequestBuilder.java
index e1cf987532..0f4a312ff9 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/ERSRequestBuilder.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/ERSRequestBuilder.java
@@ -34,7 +34,10 @@
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.List;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class ERSRequestBuilder {
 
     private static final String TAG = "ERSRequestBuilder";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/EventStore.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/EventStore.java
index 1e76dfa6db..800723b00b 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/EventStore.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/EventStore.java
@@ -16,7 +16,10 @@
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.delivery;
 
 import java.util.Iterator;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface EventStore {
     public boolean put(final String event) throws EventStoreException;
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/EventStoreException.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/EventStoreException.java
index 4f2b78b9ca..e05ef3cccf 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/EventStoreException.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/EventStoreException.java
@@ -14,7 +14,10 @@
  */
 
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.delivery;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class EventStoreException extends RuntimeException {
     private static final long serialVersionUID = 7508256672436016788L;
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/FileEventStore.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/FileEventStore.java
index e20d9e6c5e..f03f8c7c24 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/FileEventStore.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/FileEventStore.java
@@ -34,7 +34,10 @@
 import java.io.PrintWriter;
 import java.io.Writer;
 import java.util.concurrent.locks.ReentrantLock;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class FileEventStore implements EventStore {
     private static final String TAG = "FileEventStore";
     static final String EVENTS_DIRECTORY = "events";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/ConnectivityPolicy.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/ConnectivityPolicy.java
index 4d4ff53a10..2b8597d05a 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/ConnectivityPolicy.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/ConnectivityPolicy.java
@@ -18,6 +18,10 @@
 import com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.AnalyticsContext;
 import com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.system.Connectivity;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class ConnectivityPolicy implements DeliveryPolicy {
 
     private static final String ALLOW_WAN_KEY = "allowWANEventDelivery";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/DefaultDeliveryPolicyFactory.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/DefaultDeliveryPolicyFactory.java
index b35d5c9af9..9f2cdd04fb 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/DefaultDeliveryPolicyFactory.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/DefaultDeliveryPolicyFactory.java
@@ -17,6 +17,10 @@
 
 import com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.AnalyticsContext;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class DefaultDeliveryPolicyFactory implements DeliveryPolicyFactory {
     public static final String KEY_FORCE_SUBMISSION_WAIT = "forceSubmissionWaitTime";
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/DeliveryPolicy.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/DeliveryPolicy.java
index c4c46d77fe..450716a0f6 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/DeliveryPolicy.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/DeliveryPolicy.java
@@ -15,6 +15,10 @@
 
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.delivery.policy;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface DeliveryPolicy {
     public boolean isAllowed();
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/DeliveryPolicyFactory.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/DeliveryPolicyFactory.java
index 363157691b..566d7f10af 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/DeliveryPolicyFactory.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/DeliveryPolicyFactory.java
@@ -14,7 +14,10 @@
  */
 
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.delivery.policy;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface DeliveryPolicyFactory {
 
     public DeliveryPolicy newConnectivityPolicy();
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/SubmissionTimePolicy.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/SubmissionTimePolicy.java
index 948ffedbac..e475e58788 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/SubmissionTimePolicy.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/delivery/policy/SubmissionTimePolicy.java
@@ -16,7 +16,10 @@
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.delivery.policy;
 
 import com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.AnalyticsContext;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class SubmissionTimePolicy implements DeliveryPolicy {
 
     static final String SUBMITTED_TIME_KEY = "SubmissionTimePolicy.submissionTime";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/ClientContext.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/ClientContext.java
index 1df3f30f0e..49afdcc85f 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/ClientContext.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/ClientContext.java
@@ -24,7 +24,10 @@
 
 import java.util.HashMap;
 import java.util.Map;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class ClientContext {
     private static final String TAG = "ClientContext";
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/DefaultEvent.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/DefaultEvent.java
index 536322b6fe..c5ec99b35f 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/DefaultEvent.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/DefaultEvent.java
@@ -33,7 +33,10 @@
 import java.util.Map;
 import java.util.Map.Entry;
 import java.util.concurrent.ConcurrentHashMap;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public final class DefaultEvent implements InternalEvent {
 
     private static final String TAG = "DefaultEvent";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/DefaultEventClient.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/DefaultEventClient.java
index f5138d8c71..683450736a 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/DefaultEventClient.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/DefaultEventClient.java
@@ -36,7 +36,10 @@
 import java.util.Map.Entry;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.CopyOnWriteArrayList;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class DefaultEventClient implements InternalEventClient, JSONSerializable {
     private static String TAG = "DefaultEventClient";
     private static final String ANALYTICS_ENABLED = "isAnalyticsEnabled";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/EventConstraintDecorator.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/EventConstraintDecorator.java
index 9876029aaa..be3689c33e 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/EventConstraintDecorator.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/EventConstraintDecorator.java
@@ -25,7 +25,10 @@
 
 import java.util.Map;
 import java.util.concurrent.atomic.AtomicInteger;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class EventConstraintDecorator implements InternalEvent {
 
     private static class Pair<T, U> {
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/EventObserver.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/EventObserver.java
index 0ece4c5791..ea602ba1e8 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/EventObserver.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/EventObserver.java
@@ -14,7 +14,10 @@
  */
 
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.event;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface EventObserver {
     public void notify(InternalEvent event);
 }
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/InternalEvent.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/InternalEvent.java
index 23a749cd5e..b44e7c5452 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/InternalEvent.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/InternalEvent.java
@@ -18,7 +18,10 @@
 import com.amazonaws.mobileconnectors.amazonmobileanalytics.AnalyticsEvent;
 import com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.idresolver.Id;
 import com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.util.JSONSerializable;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface InternalEvent extends AnalyticsEvent, JSONSerializable {
     public Long getEventTimestamp();
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/InternalEventClient.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/InternalEventClient.java
index 9940eb5b7b..698cf9008f 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/InternalEventClient.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/InternalEventClient.java
@@ -17,7 +17,10 @@
 
 import com.amazonaws.mobileconnectors.amazonmobileanalytics.AnalyticsEvent;
 import com.amazonaws.mobileconnectors.amazonmobileanalytics.EventClient;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface InternalEventClient extends EventClient {
     public InternalEvent createInternalEvent(final String eventType, final long sessionStart,
             final Long sessionEnd, final Long duration);
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/adapter/EventAdapter.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/adapter/EventAdapter.java
index a1bdaf5e94..610ee450cc 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/adapter/EventAdapter.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/adapter/EventAdapter.java
@@ -18,7 +18,10 @@
 import com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.event.InternalEvent;
 
 import org.json.JSONException;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface EventAdapter<T> {
     public T translateFromEvent(InternalEvent source);
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/adapter/JSONEventAdapter.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/adapter/JSONEventAdapter.java
index 3169a308d4..672a6144a4 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/adapter/JSONEventAdapter.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/event/adapter/JSONEventAdapter.java
@@ -34,7 +34,10 @@
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.Map;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class JSONEventAdapter implements EventAdapter<JSONObject> {
     private static final String TAG = "JSONEventAdapter";
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/FileSessionStore.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/FileSessionStore.java
index a9a7b9a41a..d1b7c26756 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/FileSessionStore.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/FileSessionStore.java
@@ -32,7 +32,10 @@
 import java.util.concurrent.locks.ReentrantReadWriteLock;
 import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
 import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class FileSessionStore implements SessionStore {
     private static final String TAG = "FileSessionStore";
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/InternalSessionClient.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/InternalSessionClient.java
index 2789238d98..0ea24d8264 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/InternalSessionClient.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/InternalSessionClient.java
@@ -16,7 +16,10 @@
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.session;
 
 import com.amazonaws.mobileconnectors.amazonmobileanalytics.SessionClient;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface InternalSessionClient extends SessionClient {
     public void startSession();
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/Session.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/Session.java
index dbeb1c341b..e10f976f28 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/Session.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/Session.java
@@ -37,7 +37,9 @@
  * status of it's stop time. A session's stop time is only set when the session
  * has been paused, and is set to -1 if it is currently running. Can be
  * serialized and restored for persistence.
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public class Session implements JSONSerializable {
     // - Session ID configuration constants -------------------------=
     protected static final String SESSION_ID_DATE_FORMAT = "yyyyMMdd";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/SessionStore.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/SessionStore.java
index b940c05d10..a146a294fd 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/SessionStore.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/SessionStore.java
@@ -14,7 +14,10 @@
  */
 
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.session;
-
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface SessionStore {
     public void storeSession(final Session session);
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/SessionStoreException.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/SessionStoreException.java
index a26603f757..5f53c47848 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/SessionStoreException.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/SessionStoreException.java
@@ -15,6 +15,10 @@
 
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.session;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class SessionStoreException extends RuntimeException {
     private static final long serialVersionUID = 1L;
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/ActiveSessionState.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/ActiveSessionState.java
index e902451ad0..c16e0e1434 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/ActiveSessionState.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/ActiveSessionState.java
@@ -22,7 +22,9 @@
  * running and has not been paused
  *
  * @author Dirk Hortensius [hortensi@amazon.com]
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public final class ActiveSessionState extends SessionClientState {
 
     private static final String TAG = "ActiveSessoinState";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/DefaultSessionClient.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/DefaultSessionClient.java
index cb768d03d3..a2964369a2 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/DefaultSessionClient.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/DefaultSessionClient.java
@@ -39,7 +39,9 @@
  * methods start(), stop(), pause(), and resume() will be carried out by nested
  * classes, to accommodate for behavior changes of the client in response to
  * changes of the application session's state.
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public class DefaultSessionClient implements InternalSessionClient {
 
     // ~ Event Type Constants ---------------------------=
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/InactiveSessionState.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/InactiveSessionState.java
index cf78acbd52..7361a53963 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/InactiveSessionState.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/InactiveSessionState.java
@@ -22,7 +22,9 @@
 /**
  * Session Logic for when the Application Session is INACTIVE. ie: The session
  * has either been stopped or not started yet.
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public class InactiveSessionState extends SessionClientState {
 
     private static final String TAG = "InactiveSessionState";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/PausedSessionState.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/PausedSessionState.java
index c63211810c..f137afb0a1 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/PausedSessionState.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/PausedSessionState.java
@@ -19,7 +19,9 @@
 
 /**
  * Session Logic for when the Application Session is PAUSED.
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public class PausedSessionState extends SessionClientState {
 
     private static final String TAG = "PausedSessionState";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/SessionClientState.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/SessionClientState.java
index 9e1944586a..bc0d457e9a 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/SessionClientState.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/session/client/SessionClientState.java
@@ -26,7 +26,9 @@
  * client, based on The session state. If the Session is in state X, and there
  * is a call for method Y, the X.Y() will execute; This is the abstract base
  * class for the state objects.
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public abstract class SessionClientState {
 
     protected final DefaultSessionClient client;
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/validate/EncodingValidator.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/validate/EncodingValidator.java
index c1dc791fbe..f087bfbc8a 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/validate/EncodingValidator.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/validate/EncodingValidator.java
@@ -17,6 +17,10 @@
 
 import java.io.UnsupportedEncodingException;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class EncodingValidator {
 
     private final String encoding;
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/validate/Errors.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/validate/Errors.java
index 1dd4b85ff2..221cf77f5c 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/validate/Errors.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/validate/Errors.java
@@ -15,6 +15,10 @@
 
 package com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.validate;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface Errors {
     public void reject(String message);
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/validate/FileManagerValidator.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/validate/FileManagerValidator.java
index 397c7139fa..65c711c56f 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/validate/FileManagerValidator.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/validate/FileManagerValidator.java
@@ -21,6 +21,10 @@
 import java.io.File;
 import java.io.IOException;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class FileManagerValidator {
 
     public FileManagerValidator() {
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/validate/PermissionValidator.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/validate/PermissionValidator.java
index de556221f9..1af730ba04 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/validate/PermissionValidator.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/internal/validate/PermissionValidator.java
@@ -18,6 +18,10 @@
 import android.content.Context;
 import android.content.pm.PackageManager;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class PermissionValidator {
     private final String permission;
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/AmazonMonetizationEventBuilder.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/AmazonMonetizationEventBuilder.java
index 1f6ece3d9a..572186f7b0 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/AmazonMonetizationEventBuilder.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/AmazonMonetizationEventBuilder.java
@@ -42,7 +42,9 @@
  * // record the monetization event
  * eventClient.recordEvent(purchaseEvent);
  * </pre>
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public class AmazonMonetizationEventBuilder extends MonetizationEventBuilder {
 
     private static final String TAG = "AmazonMonetizationEventBuilder";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/CustomMonetizationEventBuilder.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/CustomMonetizationEventBuilder.java
index 45911c800e..9348ff8532 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/CustomMonetizationEventBuilder.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/CustomMonetizationEventBuilder.java
@@ -63,7 +63,9 @@
  * // record the monetization event
  * eventClient.recordEvent(purchaseEvent);
  * </pre>
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public class CustomMonetizationEventBuilder extends MonetizationEventBuilder {
 
     private static final String TAG = "CustomMonetizationEventBuilder";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/GooglePlayMonetizationEventBuilder.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/GooglePlayMonetizationEventBuilder.java
index 8151106ebf..4ffb5f0baa 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/GooglePlayMonetizationEventBuilder.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/GooglePlayMonetizationEventBuilder.java
@@ -55,7 +55,9 @@
  * // record the monetization event
  * eventClient.recordEvent(purchaseEvent);
  * </pre>
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public class GooglePlayMonetizationEventBuilder extends MonetizationEventBuilder {
 
     private static final String TAG = "GooglePlayMonetizationEventBuilder";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/MonetizationEventBuilder.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/MonetizationEventBuilder.java
index 8a826bd4c9..1fcab71d71 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/MonetizationEventBuilder.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/MonetizationEventBuilder.java
@@ -41,8 +41,9 @@
  * <li>Either the (Currency and ItemPrice) or the ForrmattedItemPrice must be
  * set</li>
  * </ul>
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
-
+@Deprecated
 public abstract class MonetizationEventBuilder {
 
     private static final String TAG = "MonetizationEventBuilder";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/VirtualMonetizationEventBuilder.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/VirtualMonetizationEventBuilder.java
index c78270dea5..96b82a80e3 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/VirtualMonetizationEventBuilder.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/mobileconnectors/amazonmobileanalytics/monetization/VirtualMonetizationEventBuilder.java
@@ -45,7 +45,9 @@
  * // record the monetization event
  * eventClient.recordEvent(purchaseEvent);
  * </pre>
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public class VirtualMonetizationEventBuilder extends MonetizationEventBuilder {
 
     private static final String TAG = "VirtualMonetizationEventBuilder";
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/AmazonMobileAnalytics.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/AmazonMobileAnalytics.java
index f81ae0dd79..e2d09232e3 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/AmazonMobileAnalytics.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/AmazonMobileAnalytics.java
@@ -25,7 +25,9 @@
  * Amazon Mobile Analytics is a service for collecting, visualizing, and
  * understanding app usage data at scale.
  * </p>
- **/
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public interface AmazonMobileAnalytics {
 
     /**
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/AmazonMobileAnalyticsClient.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/AmazonMobileAnalyticsClient.java
index 9e86e05f62..aa5c6da72f 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/AmazonMobileAnalyticsClient.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/AmazonMobileAnalyticsClient.java
@@ -39,7 +39,9 @@
  * Amazon Mobile Analytics is a service for collecting, visualizing, and
  * understanding app usage data at scale.
  * </p>
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public class AmazonMobileAnalyticsClient extends AmazonWebServiceClient implements
         AmazonMobileAnalytics {
     /** Provider for AWS credentials. */
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/BadRequestException.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/BadRequestException.java
index 6132390f7e..674d4b020a 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/BadRequestException.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/BadRequestException.java
@@ -21,7 +21,9 @@
  * <p>
  * An exception object returned when a request fails.
  * </p>
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public class BadRequestException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/Event.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/Event.java
index 3ed4b89ef6..310d20ab5a 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/Event.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/Event.java
@@ -21,7 +21,9 @@
  * <p>
  * A JSON object representing a batch of unique event occurrences in your app.
  * </p>
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public class Event implements Serializable {
     /**
      * <p>
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/PutEventsRequest.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/PutEventsRequest.java
index e58fb7d311..f0582f788f 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/PutEventsRequest.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/PutEventsRequest.java
@@ -25,7 +25,9 @@
  * unique custom events per app, any combination of up to 40 attributes and
  * metrics per custom event, and any number of attribute or metric values.
  * </p>
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public class PutEventsRequest extends AmazonWebServiceRequest implements Serializable {
     /**
      * <p>
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/Session.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/Session.java
index befd135713..6525a60a58 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/Session.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/Session.java
@@ -21,7 +21,9 @@
  * <p>
  * Describes the session. Session information is required on ALL events.
  * </p>
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public class Session implements Serializable {
     /**
      * <p>
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/BadRequestExceptionUnmarshaller.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/BadRequestExceptionUnmarshaller.java
index f0d4a8f778..28313ed785 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/BadRequestExceptionUnmarshaller.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/BadRequestExceptionUnmarshaller.java
@@ -20,6 +20,10 @@
 import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.mobileanalytics.model.BadRequestException;
 
+/**
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
+ */
+@Deprecated
 public class BadRequestExceptionUnmarshaller extends JsonErrorUnmarshaller {
 
     public BadRequestExceptionUnmarshaller() {
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/EventJsonMarshaller.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/EventJsonMarshaller.java
index a6794b8d43..96c341ede0 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/EventJsonMarshaller.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/EventJsonMarshaller.java
@@ -20,7 +20,9 @@
 
 /**
  * JSON marshaller for POJO Event
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 class EventJsonMarshaller {
 
     public void marshall(Event event, AwsJsonWriter jsonWriter) throws Exception {
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/EventJsonUnmarshaller.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/EventJsonUnmarshaller.java
index d7fc59f2a3..1e54b68210 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/EventJsonUnmarshaller.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/EventJsonUnmarshaller.java
@@ -22,7 +22,9 @@
 
 /**
  * JSON unmarshaller for POJO Event
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 class EventJsonUnmarshaller implements Unmarshaller<Event, JsonUnmarshallerContext> {
 
     public Event unmarshall(JsonUnmarshallerContext context) throws Exception {
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/PutEventsRequestMarshaller.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/PutEventsRequestMarshaller.java
index 1b9d9ab840..3be4d51866 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/PutEventsRequestMarshaller.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/PutEventsRequestMarshaller.java
@@ -37,7 +37,9 @@
 
 /**
  * JSON request marshaller for PutEventsRequest
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 public class PutEventsRequestMarshaller implements
         Marshaller<Request<PutEventsRequest>, PutEventsRequest> {
 
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/SessionJsonMarshaller.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/SessionJsonMarshaller.java
index 997c810ea0..d88d1d65be 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/SessionJsonMarshaller.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/SessionJsonMarshaller.java
@@ -20,7 +20,9 @@
 
 /**
  * JSON marshaller for POJO Session
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 class SessionJsonMarshaller {
 
     public void marshall(Session session, AwsJsonWriter jsonWriter) throws Exception {
diff --git a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/SessionJsonUnmarshaller.java b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/SessionJsonUnmarshaller.java
index 9a8c0f8983..a5f43d15b6 100644
--- a/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/SessionJsonUnmarshaller.java
+++ b/aws-android-sdk-mobileanalytics/src/main/java/com/amazonaws/services/mobileanalytics/model/transform/SessionJsonUnmarshaller.java
@@ -22,7 +22,9 @@
 
 /**
  * JSON unmarshaller for POJO Session
+ * @deprecated The Amazon Mobile Analytics SDK for Android is deprecated as of release 2.9.0. Please use the Amazon Pinpoint SDK for Android along with Amazon Pinpoint service instead.
  */
+@Deprecated
 class SessionJsonUnmarshaller implements Unmarshaller<Session, JsonUnmarshallerContext> {
 
     public Session unmarshall(JsonUnmarshallerContext context) throws Exception {
diff --git a/aws-android-sdk-pinpoint/pom.xml b/aws-android-sdk-pinpoint/pom.xml
index 03b4a953c5..e2b2372dec 100644
--- a/aws-android-sdk-pinpoint/pom.xml
+++ b/aws-android-sdk-pinpoint/pom.xml
@@ -12,7 +12,7 @@
     <parent>
         <groupId>com.amazonaws</groupId>
         <artifactId>aws-android-sdk-pom</artifactId>
-        <version>2.8.5</version>
+        <version>2.9.0</version>
     </parent>
 
     <dependencies>
@@ -20,7 +20,7 @@
             <groupId>com.amazonaws</groupId>
             <artifactId>aws-android-sdk-core</artifactId>
             <optional>false</optional>
-            <version>2.8.5</version>
+            <version>2.9.0</version>
         </dependency>
         <dependency>
             <groupId>junit</groupId>
@@ -69,7 +69,7 @@
             <artifactId>android</artifactId>
             <version>5.0</version>
             <scope>system</scope>
-            <systemPath>${env.ANDROID_HOME}/platforms/android-21/android.jar</systemPath>
+            <systemPath>${basedir}/../android-21-linux.jar</systemPath>
         </dependency>
     </dependencies>
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/PinpointManager.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/PinpointManager.java
index 02cb758127..f4fa85dcfd 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/PinpointManager.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/PinpointManager.java
@@ -48,8 +48,9 @@
  */
 public class PinpointManager {
     private static final String SDK_VERSION = VersionInfoUtils.getVersion();
-    private static final String SDK_NAME = "PinpointSDK";
-    private static final SDKInfo SDL_INFO = new SDKInfo(SDK_NAME, SDK_VERSION);
+    // This value is decided by the Amazon Pinpoint Service
+    private static final String SDK_NAME = "aws-sdk-android";
+    private static final SDKInfo SDK_INFO = new SDKInfo(SDK_NAME, SDK_VERSION);
     private static final Log log = LogFactory.getLog(PinpointManager.class);
     private static final PermissionValidator INTERNET_PERMISSION_VALIDATOR = new PermissionValidator("android.permission.INTERNET");
     private static final PermissionValidator ACCESS_NETWORK_STATE_PERMISSION_VALIDATOR = new PermissionValidator(
@@ -89,7 +90,7 @@ public PinpointManager(final PinpointConfiguration config) {
             ACCESS_NETWORK_STATE_PERMISSION_VALIDATOR.validate(appContext);
             ENCODING_VALIDATOR.validate();
 
-            this.pinpointContext = new PinpointContext(analyticsServiceClient, targetingServiceClient, appContext, appId, SDL_INFO, config);
+            this.pinpointContext = new PinpointContext(analyticsServiceClient, targetingServiceClient, appContext, appId, SDK_INFO, config);
             this.notificationClient = NotificationClient.createClient(this.pinpointContext, channelType);
             this.pinpointContext.setNotificationClient(this.notificationClient);
             PinpointNotificationReceiver.setNotificationClient(this.notificationClient);
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/analytics/AnalyticsEvent.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/analytics/AnalyticsEvent.java
index a130ea2f4f..99e33f3620 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/analytics/AnalyticsEvent.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/analytics/AnalyticsEvent.java
@@ -213,7 +213,7 @@ public static AnalyticsEvent translateToEvent(final JSONObject source) throws JS
                                                                    source.optString("app_version_name"),
                                                                    source.optString("app_title"),
                                                                    source.optString(ClientContext.APP_ID_KEY));
-        final SDKInfo sdkInfo = new SDKInfo(source.optString("sdk_version"), source.optString("sdk_name"));
+        final SDKInfo sdkInfo = new SDKInfo(source.optString("sdk_name"), source.optString("sdk_version"));
         final AndroidDeviceDetails deviceDetails = new AndroidDeviceDetails(source.optString("carrier"));
         final String eventId = source.getString("event_id");
         final String eventType = source.getString("event_type");
@@ -467,6 +467,15 @@ public AnalyticsEvent withMetric(String name, Double value) {
         return Collections.unmodifiableMap(metrics);
     }
 
+    /**
+     * Returns the App specific information
+     *
+     * @return the App specific information
+     */
+    public AndroidAppDetails getAppDetails() {
+        return appDetails;
+    }
+
     @Override
     public String toString() {
         final JSONObject json = toJSONObject();
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/internal/core/system/AndroidAppDetails.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/internal/core/system/AndroidAppDetails.java
index 4e3d164b0d..7ffd8e1771 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/internal/core/system/AndroidAppDetails.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/internal/core/system/AndroidAppDetails.java
@@ -44,13 +44,10 @@ public AndroidAppDetails(Context context, String appId) {
         try {
             PackageManager packageManager = this.applicationContext
                                                     .getPackageManager();
-            PackageInfo packageInfo = packageManager.getPackageInfo(
-                                                                           this.applicationContext
-                                                                                   .getPackageName(),
-                                                                           0);
+            PackageInfo packageInfo = packageManager
+                                                .getPackageInfo(this.applicationContext.getPackageName(), 0);
             ApplicationInfo appInfo = packageManager
-                                              .getApplicationInfo(packageInfo.packageName,
-                                                                         0);
+                                              .getApplicationInfo(packageInfo.packageName, 0);
 
             appTitle = (String) packageManager.getApplicationLabel(appInfo);
             packageName = packageInfo.packageName;
@@ -67,9 +64,11 @@ public AndroidAppDetails(Context context, String appId) {
         }
     }
 
-    public AndroidAppDetails(String packageName, String versionCode,
-                                    String versionName,
-                                    String appTitle, String appId) {
+    public AndroidAppDetails(String packageName, 
+                             String versionCode,
+                             String versionName,
+                             String appTitle,
+                             String appId) {
         this.packageName = packageName;
         this.versionCode = versionCode;
         this.versionName = versionName;
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/internal/event/EventRecorder.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/internal/event/EventRecorder.java
index e4c6a93e1e..ef6983cab2 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/internal/event/EventRecorder.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/internal/event/EventRecorder.java
@@ -15,6 +15,11 @@
 
 package com.amazonaws.mobileconnectors.pinpoint.internal.event;
 
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.database.Cursor;
+import android.net.Uri;
+
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.HashMap;
@@ -27,33 +32,37 @@
 import java.util.concurrent.LinkedBlockingQueue;
 import java.util.concurrent.ThreadPoolExecutor;
 import java.util.concurrent.TimeUnit;
+
+import com.amazonaws.AmazonServiceException;
 import com.amazonaws.logging.Log;
 import com.amazonaws.logging.LogFactory;
 
+import com.amazonaws.mobileconnectors.pinpoint.PinpointManager;
+import com.amazonaws.mobileconnectors.pinpoint.targeting.endpointProfile.EndpointProfile;
+import com.amazonaws.mobileconnectors.pinpoint.analytics.AnalyticsEvent;
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.PinpointContext;
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.AndroidAppDetails;
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.util.StringUtil;
+
 import com.amazonaws.services.pinpoint.model.EndpointDemographic;
+import com.amazonaws.services.pinpoint.model.EndpointItemResponse;
 import com.amazonaws.services.pinpoint.model.EndpointLocation;
-import com.amazonaws.services.pinpoint.model.EndpointRequest;
 import com.amazonaws.services.pinpoint.model.EndpointUser;
 import com.amazonaws.services.pinpoint.model.Event;
 import com.amazonaws.services.pinpoint.model.EventItemResponse;
 import com.amazonaws.services.pinpoint.model.EventsBatch;
+import com.amazonaws.services.pinpoint.model.EventsRequest;
+import com.amazonaws.services.pinpoint.model.PublicEndpoint;
 import com.amazonaws.services.pinpoint.model.PutEventsRequest;
 import com.amazonaws.services.pinpoint.model.PutEventsResult;
 import com.amazonaws.services.pinpoint.model.Session;
 
+import com.amazonaws.util.DateUtils;
+import com.amazonaws.util.VersionInfoUtils;
+
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
-import com.amazonaws.AmazonServiceException;
-import com.amazonaws.mobileconnectors.pinpoint.PinpointManager;
-import com.amazonaws.mobileconnectors.pinpoint.targeting.endpointProfile.EndpointProfile;
-import com.amazonaws.mobileconnectors.pinpoint.analytics.AnalyticsEvent;
-import com.amazonaws.mobileconnectors.pinpoint.internal.core.PinpointContext;
-import com.amazonaws.mobileconnectors.pinpoint.internal.core.util.StringUtil;
-import com.amazonaws.util.DateUtils;
-import com.amazonaws.util.VersionInfoUtils;
-import android.database.Cursor;
-import android.net.Uri;
 
 /**
  * Provides methods to record events and submit events to Pinpoint.
@@ -399,11 +408,16 @@ private void addAllEventIdsToSet(JSONArray eventArray, Set<String> failedEventId
     }
 
     private void processEndpointResponse(EndpointProfile endpoint, PutEventsResult resultResponse) {
-        if(resultResponse.getResults().get(endpoint.getEndpointId()).getEndpointItemResponse().getStatusCode() == 202) {
+        final EndpointItemResponse endpointItemResponse = resultResponse
+                .getEventsResponse()
+                .getResults()
+                .get(endpoint.getEndpointId())
+                .getEndpointItemResponse();
+        if(202 == endpointItemResponse.getStatusCode()) {
             log.info("EndpointProfile updated successfully.");
         } else {
             log.error("AmazonServiceException occurred during endpoint update: " +
-                    resultResponse.getResults().get(endpoint.getEndpointId()).getEndpointItemResponse().getMessage());
+                    endpointItemResponse.getMessage());
         }
     }
 
@@ -414,9 +428,12 @@ private void processEventsResponse(final JSONArray eventArray, EndpointProfile e
         for(int i = 0; i < eventArray.length(); i++) {
             try {
                 eventId = eventArray.getJSONObject(i).getString(EVENT_ID);
-                responseMessage = resultResponse.getResults()
+                responseMessage = resultResponse
+                        .getEventsResponse()
+                        .getResults()
                         .get(endpointProfile.getEndpointId())
-                        .getEventsItemResponse().get(eventId);
+                        .getEventsItemResponse()
+                        .get(eventId);
                 if (responseMessage.getMessage().equalsIgnoreCase("Accepted")) {
                     successfulEventIds.add(eventId);
                     log.info(String.format("Successful submit event with event id %s", eventId));
@@ -438,10 +455,9 @@ private void processEventsResponse(final JSONArray eventArray, EndpointProfile e
     }
 
     private boolean isRetryable(String responseCode) {
-        if (responseCode.equalsIgnoreCase("ValidationException")
-                || responseCode.equalsIgnoreCase("SerializationException")
-                || responseCode.equalsIgnoreCase("BadRequestException")
-                ) {
+        if (responseCode.equalsIgnoreCase("ValidationException") ||
+            responseCode.equalsIgnoreCase("SerializationException") ||
+            responseCode.equalsIgnoreCase("BadRequestException")) {
             return false;
         }
         return true;
@@ -450,18 +466,20 @@ private boolean isRetryable(String responseCode) {
     /**
      * @param events
      * @param endpointProfile
-     * @return
+     *
+     * @return the request to put event
      */
-    private PutEventsRequest createRecordEventsRequest(final JSONArray events, final EndpointProfile endpointProfile) {
+    private PutEventsRequest createRecordEventsRequest(final JSONArray events,
+                                                       final EndpointProfile endpointProfile) {
 
         final PutEventsRequest putRequest = new PutEventsRequest().withApplicationId(endpointProfile.getApplicationId());
         final String endpointId = endpointProfile.getEndpointId();
         final Map<String, EventsBatch> eventsBatchMap = new HashMap<String, EventsBatch>();
         final EventsBatch eventsBatch = new EventsBatch();
-        final EndpointRequest endpoint = new EndpointRequest();
+        final PublicEndpoint endpoint = new PublicEndpoint();
         final Map<String,Event> eventsMap = new HashMap<String, Event>();
 
-        //build endpoint payload
+        // build endpoint payload
         buildEndpointPayload(endpointProfile, endpoint);
 
         for (int i = 0; i < events.length(); i++) {
@@ -476,27 +494,36 @@ private PutEventsRequest createRecordEventsRequest(final JSONArray events, final
                 continue;
             }
 
-            //build event payload
+            // build event payload
             final Event event = new Event();
             buildEventPayload(internalEvent, event);
             eventsMap.put(internalEvent.getEventId(), event);
         }
 
-
-        //build request payload, could also build with only endpoint payload
+        // build request payload, could also build with only endpoint payload
         buildRequestPayload(putRequest, endpointId, eventsBatchMap, eventsBatch, endpoint, eventsMap);
 
         return putRequest;
     }
 
-    private void buildRequestPayload(PutEventsRequest putRequest, String endpointId, Map<String, EventsBatch> eventsBatchMap, EventsBatch eventsBatch, EndpointRequest endpoint, Map<String,Event> eventsMap) {
-        eventsBatch.withEndpoint(endpoint)
-                            .withEvents(eventsMap);
+    private void buildRequestPayload(PutEventsRequest putRequest, 
+                                     String endpointId, 
+                                     Map<String, EventsBatch> eventsBatchMap, 
+                                     EventsBatch eventsBatch, 
+                                     PublicEndpoint endpoint, 
+                                     Map<String,Event> eventsMap) {
+        eventsBatch
+            .withEndpoint(endpoint)
+            .withEvents(eventsMap);
         eventsBatchMap.put(endpointId, eventsBatch);
-        putRequest.withBatchItem(eventsBatchMap);
+        
+        final EventsRequest eventsRequest = new EventsRequest();
+        eventsRequest.withBatchItem(eventsBatchMap);
+        putRequest.withEventsRequest(eventsRequest);
     }
 
-    private void buildEndpointPayload(EndpointProfile endpointProfile, EndpointRequest endpoint) {
+    private void buildEndpointPayload(EndpointProfile endpointProfile, 
+                                      PublicEndpoint endpoint) {
         final EndpointDemographic demographic = new EndpointDemographic()
                 .withAppVersion(endpointProfile.getDemographic().getAppVersion())
                 .withLocale(endpointProfile.getDemographic().getLocale().toString())
@@ -534,24 +561,30 @@ private void buildEndpointPayload(EndpointProfile endpointProfile, EndpointReque
                 .withUser(user);
     }
 
-    private void buildEventPayload(AnalyticsEvent internalEvent, Event event) {
+    void buildEventPayload(AnalyticsEvent internalEvent,
+                           Event event) {
         final Session session = new Session();
 
         session.withId(internalEvent.getSession().getSessionId());
         session.withStartTimestamp(DateUtils.formatISO8601Date(new Date(internalEvent.getSession().getSessionStart())));
         if (internalEvent.getSession().getSessionStop() != null &&
-                internalEvent.getSession().getSessionStop() != 0L) {
+            internalEvent.getSession().getSessionStop() != 0L) {
             session.withStopTimestamp(DateUtils.formatISO8601Date(new Date(internalEvent.getSession().getSessionStop())));
         }
-        if (internalEvent.getSession().getSessionDuration() != null && internalEvent.getSession().getSessionDuration() != 0L) {
-            session.withDuration(internalEvent.getSession().getSessionDuration());
+        if (internalEvent.getSession().getSessionDuration() != null &&
+            internalEvent.getSession().getSessionDuration() != 0L) {
+            session.withDuration(internalEvent.getSession().getSessionDuration().intValue());
         }
 
-        event.withEventType(internalEvent.getEventType())
+        final AndroidAppDetails appDetails = internalEvent.getAppDetails();
+        event.withAppPackageName(appDetails.packageName())
+                .withAppTitle(appDetails.getAppTitle())
+                .withAppVersionCode(appDetails.versionCode())
                 .withClientSdkVersion(internalEvent.getSdkVersion())
-                .withTimestamp(DateUtils.formatISO8601Date(new Date(internalEvent.getEventTimestamp())))
-                .withAttributes(internalEvent.getAllAttributes())
+                .withEventType(internalEvent.getEventType())
                 .withMetrics(internalEvent.getAllMetrics())
-                .withSession(session);
+                .withSdkName(internalEvent.getSdkName())
+                .withSession(session)
+                .withTimestamp(DateUtils.formatISO8601Date(new Date(internalEvent.getEventTimestamp())));
     }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationClientBase.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationClientBase.java
index f75c0e2b0a..150d13eef1 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationClientBase.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationClientBase.java
@@ -298,9 +298,9 @@ private int getNotificationIconResourceId(
 
     private Notification createLegacyNotification(final int iconResId, final String title, final String contentText,
                                                   final PendingIntent contentIntent) {
-            final Notification notification = new Notification();
-            notification.icon = iconResId;
-            notification.setLatestEventInfo(this.pinpointContext.getApplicationContext(), title, contentText, contentIntent);
+        final Notification notification = new Notification();
+        notification.icon = iconResId;
+        notification.setLatestEventInfo(this.pinpointContext.getApplicationContext(), title, contentText, contentIntent);
         notification.contentIntent = contentIntent;
         return notification;
     }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/AmazonPinpoint.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/AmazonPinpoint.java
index bf794c44a6..756a294de2 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/AmazonPinpoint.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/AmazonPinpoint.java
@@ -550,6 +550,29 @@ DeleteUserEndpointsResult deleteUserEndpoints(
             DeleteUserEndpointsRequest deleteUserEndpointsRequest) throws AmazonClientException,
             AmazonServiceException;
 
+    /**
+     * Delete an Voice channel
+     * 
+     * @param deleteVoiceChannelRequest
+     * @return deleteVoiceChannelResult The response from the DeleteVoiceChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException 400 response
+     * @throws InternalServerErrorException 500 response
+     * @throws ForbiddenException 403 response
+     * @throws NotFoundException 404 response
+     * @throws MethodNotAllowedException 405 response
+     * @throws TooManyRequestsException 429 response
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    DeleteVoiceChannelResult deleteVoiceChannel(DeleteVoiceChannelRequest deleteVoiceChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * Get an ADM channel.
      * 
@@ -1278,6 +1301,29 @@ GetSmsChannelResult getSmsChannel(GetSmsChannelRequest getSmsChannelRequest)
     GetUserEndpointsResult getUserEndpoints(GetUserEndpointsRequest getUserEndpointsRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * Get a Voice Channel
+     * 
+     * @param getVoiceChannelRequest
+     * @return getVoiceChannelResult The response from the GetVoiceChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException 400 response
+     * @throws InternalServerErrorException 500 response
+     * @throws ForbiddenException 403 response
+     * @throws NotFoundException 404 response
+     * @throws MethodNotAllowedException 405 response
+     * @throws TooManyRequestsException 429 response
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetVoiceChannelResult getVoiceChannel(GetVoiceChannelRequest getVoiceChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * Returns information about the specified phone number.
      * 
@@ -1327,17 +1373,18 @@ PutEventStreamResult putEventStream(PutEventStreamRequest putEventStreamRequest)
             throws AmazonClientException, AmazonServiceException;
 
     /**
-     * Use to submit events to Pinpoint into multiple regions.
+     * Use to record events for endpoints. This method creates events and
+     * creates or updates the endpoints that those events are associated with.
      * 
      * @param putEventsRequest
      * @return putEventsResult The response from the PutEvents service method,
      *         as returned by AmazonPinpoint.
-     * @throws BadRequestException
-     * @throws InternalServerErrorException
-     * @throws ForbiddenException
-     * @throws NotFoundException
-     * @throws MethodNotAllowedException
-     * @throws TooManyRequestsException
+     * @throws BadRequestException 400 response
+     * @throws InternalServerErrorException 500 response
+     * @throws ForbiddenException 403 response
+     * @throws NotFoundException 404 response
+     * @throws MethodNotAllowedException 405 response
+     * @throws TooManyRequestsException 429 response
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1750,6 +1797,29 @@ UpdateSegmentResult updateSegment(UpdateSegmentRequest updateSegmentRequest)
     UpdateSmsChannelResult updateSmsChannel(UpdateSmsChannelRequest updateSmsChannelRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * Update an Voice channel
+     * 
+     * @param updateVoiceChannelRequest
+     * @return updateVoiceChannelResult The response from the UpdateVoiceChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException 400 response
+     * @throws InternalServerErrorException 500 response
+     * @throws ForbiddenException 403 response
+     * @throws NotFoundException 404 response
+     * @throws MethodNotAllowedException 405 response
+     * @throws TooManyRequestsException 429 response
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    UpdateVoiceChannelResult updateVoiceChannel(UpdateVoiceChannelRequest updateVoiceChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * Shuts down this client object, releasing any resources that might be held
      * open. This is an optional method, and callers are not expected to call
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/AmazonPinpointClient.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/AmazonPinpointClient.java
index 00c51e9ea7..716bcc17a4 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/AmazonPinpointClient.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/AmazonPinpointClient.java
@@ -1280,6 +1280,57 @@ public DeleteUserEndpointsResult deleteUserEndpoints(
         }
     }
 
+    /**
+     * Delete an Voice channel
+     * 
+     * @param deleteVoiceChannelRequest
+     * @return deleteVoiceChannelResult The response from the DeleteVoiceChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException 400 response
+     * @throws InternalServerErrorException 500 response
+     * @throws ForbiddenException 403 response
+     * @throws NotFoundException 404 response
+     * @throws MethodNotAllowedException 405 response
+     * @throws TooManyRequestsException 429 response
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public DeleteVoiceChannelResult deleteVoiceChannel(
+            DeleteVoiceChannelRequest deleteVoiceChannelRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(deleteVoiceChannelRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<DeleteVoiceChannelRequest> request = null;
+        Response<DeleteVoiceChannelResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new DeleteVoiceChannelRequestMarshaller()
+                        .marshall(deleteVoiceChannelRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<DeleteVoiceChannelResult, JsonUnmarshallerContext> unmarshaller = new DeleteVoiceChannelResultJsonUnmarshaller();
+            JsonResponseHandler<DeleteVoiceChannelResult> responseHandler = new JsonResponseHandler<DeleteVoiceChannelResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * Get an ADM channel.
      * 
@@ -2829,6 +2880,55 @@ public GetUserEndpointsResult getUserEndpoints(GetUserEndpointsRequest getUserEn
         }
     }
 
+    /**
+     * Get a Voice Channel
+     * 
+     * @param getVoiceChannelRequest
+     * @return getVoiceChannelResult The response from the GetVoiceChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException 400 response
+     * @throws InternalServerErrorException 500 response
+     * @throws ForbiddenException 403 response
+     * @throws NotFoundException 404 response
+     * @throws MethodNotAllowedException 405 response
+     * @throws TooManyRequestsException 429 response
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetVoiceChannelResult getVoiceChannel(GetVoiceChannelRequest getVoiceChannelRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getVoiceChannelRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetVoiceChannelRequest> request = null;
+        Response<GetVoiceChannelResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetVoiceChannelRequestMarshaller().marshall(getVoiceChannelRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetVoiceChannelResult, JsonUnmarshallerContext> unmarshaller = new GetVoiceChannelResultJsonUnmarshaller();
+            JsonResponseHandler<GetVoiceChannelResult> responseHandler = new JsonResponseHandler<GetVoiceChannelResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * Returns information about the specified phone number.
      * 
@@ -2931,17 +3031,18 @@ public PutEventStreamResult putEventStream(PutEventStreamRequest putEventStreamR
     }
 
     /**
-     * Use to submit events to Pinpoint into multiple regions.
+     * Use to record events for endpoints. This method creates events and
+     * creates or updates the endpoints that those events are associated with.
      * 
      * @param putEventsRequest
      * @return putEventsResult The response from the PutEvents service method,
      *         as returned by AmazonPinpoint.
-     * @throws BadRequestException
-     * @throws InternalServerErrorException
-     * @throws ForbiddenException
-     * @throws NotFoundException
-     * @throws MethodNotAllowedException
-     * @throws TooManyRequestsException
+     * @throws BadRequestException 400 response
+     * @throws InternalServerErrorException 500 response
+     * @throws ForbiddenException 403 response
+     * @throws NotFoundException 404 response
+     * @throws MethodNotAllowedException 405 response
+     * @throws TooManyRequestsException 429 response
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -3835,6 +3936,57 @@ public UpdateSmsChannelResult updateSmsChannel(UpdateSmsChannelRequest updateSms
         }
     }
 
+    /**
+     * Update an Voice channel
+     * 
+     * @param updateVoiceChannelRequest
+     * @return updateVoiceChannelResult The response from the UpdateVoiceChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException 400 response
+     * @throws InternalServerErrorException 500 response
+     * @throws ForbiddenException 403 response
+     * @throws NotFoundException 404 response
+     * @throws MethodNotAllowedException 405 response
+     * @throws TooManyRequestsException 429 response
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public UpdateVoiceChannelResult updateVoiceChannel(
+            UpdateVoiceChannelRequest updateVoiceChannelRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(updateVoiceChannelRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<UpdateVoiceChannelRequest> request = null;
+        Response<UpdateVoiceChannelResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new UpdateVoiceChannelRequestMarshaller()
+                        .marshall(updateVoiceChannelRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<UpdateVoiceChannelResult, JsonUnmarshallerContext> unmarshaller = new UpdateVoiceChannelResultJsonUnmarshaller();
+            JsonResponseHandler<UpdateVoiceChannelResult> responseHandler = new JsonResponseHandler<UpdateVoiceChannelResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * Returns additional metadata for a previously executed successful,
      * request, typically used for debugging issues where a service isn't acting
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSMessage.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSMessage.java
index a9da300243..bed0a206ac 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSMessage.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSMessage.java
@@ -71,7 +71,8 @@
     private java.util.Map<String, String> data;
 
     /**
-     * The URL that points to a video used in the push notification.
+     * A URL that refers to the location of an image or video that you want to
+     * display in the push notification.
      */
     private String mediaUrl;
 
@@ -562,32 +563,36 @@ public APNSMessage clearDataEntries() {
     }
 
     /**
-     * The URL that points to a video used in the push notification.
+     * A URL that refers to the location of an image or video that you want to
+     * display in the push notification.
      *
-     * @return The URL that points to a video used in the push notification.
+     * @return A URL that refers to the location of an image or video that you
+     *         want to display in the push notification.
      */
     public String getMediaUrl() {
         return mediaUrl;
     }
 
     /**
-     * The URL that points to a video used in the push notification.
+     * A URL that refers to the location of an image or video that you want to
+     * display in the push notification.
      *
-     * @param mediaUrl The URL that points to a video used in the push
-     *            notification.
+     * @param mediaUrl A URL that refers to the location of an image or video
+     *            that you want to display in the push notification.
      */
     public void setMediaUrl(String mediaUrl) {
         this.mediaUrl = mediaUrl;
     }
 
     /**
-     * The URL that points to a video used in the push notification.
+     * A URL that refers to the location of an image or video that you want to
+     * display in the push notification.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param mediaUrl The URL that points to a video used in the push
-     *            notification.
+     * @param mediaUrl A URL that refers to the location of an image or video
+     *            that you want to display in the push notification.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/AddressConfiguration.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/AddressConfiguration.java
index 7ee90ab83c..f045e50f18 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/AddressConfiguration.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/AddressConfiguration.java
@@ -32,7 +32,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      */
     private String channelType;
 
@@ -103,7 +103,7 @@ public AddressConfiguration withBodyOverride(String bodyOverride) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @return The channel type. Valid values: GCM | APNS | APNS_SANDBOX |
      *         APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS | EMAIL | BAIDU
@@ -119,7 +119,7 @@ public String getChannelType() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @param channelType The channel type. Valid values: GCM | APNS |
      *            APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS |
@@ -139,7 +139,7 @@ public void setChannelType(String channelType) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @param channelType The channel type. Valid values: GCM | APNS |
      *            APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS |
@@ -159,7 +159,7 @@ public AddressConfiguration withChannelType(String channelType) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @param channelType The channel type. Valid values: GCM | APNS |
      *            APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS |
@@ -179,7 +179,7 @@ public void setChannelType(ChannelType channelType) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @param channelType The channel type. Valid values: GCM | APNS |
      *            APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS |
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ApplicationSettingsResource.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ApplicationSettingsResource.java
index ee8dbe670f..b5ba1789a1 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ApplicationSettingsResource.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ApplicationSettingsResource.java
@@ -44,9 +44,21 @@
     private CampaignLimits limits;
 
     /**
-     * The default quiet time for the app. Each campaign for this app sends no
-     * messages during this time unless the campaign overrides the default with
-     * a quiet time of its own.
+     * The default quiet time for the app. Campaigns in the app don't send
+     * messages to endpoints during the quiet time. Note: Make sure that your
+     * endpoints include the Demographics.Timezone attribute if you plan to
+     * enable a quiet time for your app. If your endpoints don't include this
+     * attribute, they'll receive the messages that you send them, even if quiet
+     * time is enabled. When you set up an app to use quiet time, campaigns in
+     * that app don't send messages during the time range you specified, as long
+     * as all of the following are true: - The endpoint includes a valid
+     * Demographic.Timezone attribute. - The current time in the endpoint's time
+     * zone is later than or equal to the time specified in the QuietTime.Start
+     * attribute for the app (or campaign, if applicable). - The current time in
+     * the endpoint's time zone is earlier than or equal to the time specified
+     * in the QuietTime.End attribute for the app (or campaign, if applicable).
+     * Individual campaigns within the app can have their own quiet time
+     * settings, which override the quiet time settings at the app level.
      */
     private QuietTime quietTime;
 
@@ -197,42 +209,124 @@ public ApplicationSettingsResource withLimits(CampaignLimits limits) {
     }
 
     /**
-     * The default quiet time for the app. Each campaign for this app sends no
-     * messages during this time unless the campaign overrides the default with
-     * a quiet time of its own.
+     * The default quiet time for the app. Campaigns in the app don't send
+     * messages to endpoints during the quiet time. Note: Make sure that your
+     * endpoints include the Demographics.Timezone attribute if you plan to
+     * enable a quiet time for your app. If your endpoints don't include this
+     * attribute, they'll receive the messages that you send them, even if quiet
+     * time is enabled. When you set up an app to use quiet time, campaigns in
+     * that app don't send messages during the time range you specified, as long
+     * as all of the following are true: - The endpoint includes a valid
+     * Demographic.Timezone attribute. - The current time in the endpoint's time
+     * zone is later than or equal to the time specified in the QuietTime.Start
+     * attribute for the app (or campaign, if applicable). - The current time in
+     * the endpoint's time zone is earlier than or equal to the time specified
+     * in the QuietTime.End attribute for the app (or campaign, if applicable).
+     * Individual campaigns within the app can have their own quiet time
+     * settings, which override the quiet time settings at the app level.
      *
-     * @return The default quiet time for the app. Each campaign for this app
-     *         sends no messages during this time unless the campaign overrides
-     *         the default with a quiet time of its own.
+     * @return The default quiet time for the app. Campaigns in the app don't
+     *         send messages to endpoints during the quiet time. Note: Make sure
+     *         that your endpoints include the Demographics.Timezone attribute
+     *         if you plan to enable a quiet time for your app. If your
+     *         endpoints don't include this attribute, they'll receive the
+     *         messages that you send them, even if quiet time is enabled. When
+     *         you set up an app to use quiet time, campaigns in that app don't
+     *         send messages during the time range you specified, as long as all
+     *         of the following are true: - The endpoint includes a valid
+     *         Demographic.Timezone attribute. - The current time in the
+     *         endpoint's time zone is later than or equal to the time specified
+     *         in the QuietTime.Start attribute for the app (or campaign, if
+     *         applicable). - The current time in the endpoint's time zone is
+     *         earlier than or equal to the time specified in the QuietTime.End
+     *         attribute for the app (or campaign, if applicable). Individual
+     *         campaigns within the app can have their own quiet time settings,
+     *         which override the quiet time settings at the app level.
      */
     public QuietTime getQuietTime() {
         return quietTime;
     }
 
     /**
-     * The default quiet time for the app. Each campaign for this app sends no
-     * messages during this time unless the campaign overrides the default with
-     * a quiet time of its own.
+     * The default quiet time for the app. Campaigns in the app don't send
+     * messages to endpoints during the quiet time. Note: Make sure that your
+     * endpoints include the Demographics.Timezone attribute if you plan to
+     * enable a quiet time for your app. If your endpoints don't include this
+     * attribute, they'll receive the messages that you send them, even if quiet
+     * time is enabled. When you set up an app to use quiet time, campaigns in
+     * that app don't send messages during the time range you specified, as long
+     * as all of the following are true: - The endpoint includes a valid
+     * Demographic.Timezone attribute. - The current time in the endpoint's time
+     * zone is later than or equal to the time specified in the QuietTime.Start
+     * attribute for the app (or campaign, if applicable). - The current time in
+     * the endpoint's time zone is earlier than or equal to the time specified
+     * in the QuietTime.End attribute for the app (or campaign, if applicable).
+     * Individual campaigns within the app can have their own quiet time
+     * settings, which override the quiet time settings at the app level.
      *
-     * @param quietTime The default quiet time for the app. Each campaign for
-     *            this app sends no messages during this time unless the
-     *            campaign overrides the default with a quiet time of its own.
+     * @param quietTime The default quiet time for the app. Campaigns in the app
+     *            don't send messages to endpoints during the quiet time. Note:
+     *            Make sure that your endpoints include the
+     *            Demographics.Timezone attribute if you plan to enable a quiet
+     *            time for your app. If your endpoints don't include this
+     *            attribute, they'll receive the messages that you send them,
+     *            even if quiet time is enabled. When you set up an app to use
+     *            quiet time, campaigns in that app don't send messages during
+     *            the time range you specified, as long as all of the following
+     *            are true: - The endpoint includes a valid Demographic.Timezone
+     *            attribute. - The current time in the endpoint's time zone is
+     *            later than or equal to the time specified in the
+     *            QuietTime.Start attribute for the app (or campaign, if
+     *            applicable). - The current time in the endpoint's time zone is
+     *            earlier than or equal to the time specified in the
+     *            QuietTime.End attribute for the app (or campaign, if
+     *            applicable). Individual campaigns within the app can have
+     *            their own quiet time settings, which override the quiet time
+     *            settings at the app level.
      */
     public void setQuietTime(QuietTime quietTime) {
         this.quietTime = quietTime;
     }
 
     /**
-     * The default quiet time for the app. Each campaign for this app sends no
-     * messages during this time unless the campaign overrides the default with
-     * a quiet time of its own.
+     * The default quiet time for the app. Campaigns in the app don't send
+     * messages to endpoints during the quiet time. Note: Make sure that your
+     * endpoints include the Demographics.Timezone attribute if you plan to
+     * enable a quiet time for your app. If your endpoints don't include this
+     * attribute, they'll receive the messages that you send them, even if quiet
+     * time is enabled. When you set up an app to use quiet time, campaigns in
+     * that app don't send messages during the time range you specified, as long
+     * as all of the following are true: - The endpoint includes a valid
+     * Demographic.Timezone attribute. - The current time in the endpoint's time
+     * zone is later than or equal to the time specified in the QuietTime.Start
+     * attribute for the app (or campaign, if applicable). - The current time in
+     * the endpoint's time zone is earlier than or equal to the time specified
+     * in the QuietTime.End attribute for the app (or campaign, if applicable).
+     * Individual campaigns within the app can have their own quiet time
+     * settings, which override the quiet time settings at the app level.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param quietTime The default quiet time for the app. Each campaign for
-     *            this app sends no messages during this time unless the
-     *            campaign overrides the default with a quiet time of its own.
+     * @param quietTime The default quiet time for the app. Campaigns in the app
+     *            don't send messages to endpoints during the quiet time. Note:
+     *            Make sure that your endpoints include the
+     *            Demographics.Timezone attribute if you plan to enable a quiet
+     *            time for your app. If your endpoints don't include this
+     *            attribute, they'll receive the messages that you send them,
+     *            even if quiet time is enabled. When you set up an app to use
+     *            quiet time, campaigns in that app don't send messages during
+     *            the time range you specified, as long as all of the following
+     *            are true: - The endpoint includes a valid Demographic.Timezone
+     *            attribute. - The current time in the endpoint's time zone is
+     *            later than or equal to the time specified in the
+     *            QuietTime.Start attribute for the app (or campaign, if
+     *            applicable). - The current time in the endpoint's time zone is
+     *            earlier than or equal to the time specified in the
+     *            QuietTime.End attribute for the app (or campaign, if
+     *            applicable). Individual campaigns within the app can have
+     *            their own quiet time settings, which override the quiet time
+     *            settings at the app level.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignEventFilter.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignEventFilter.java
new file mode 100644
index 0000000000..342d5fd8ba
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignEventFilter.java
@@ -0,0 +1,239 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * An object that defines the events that cause the campaign to be sent.
+ */
+public class CampaignEventFilter implements Serializable {
+    /**
+     * An object that defines the dimensions for the event filter.
+     */
+    private EventDimensions dimensions;
+
+    /**
+     * The type of event that causes the campaign to be sent. Possible values:
+     * SYSTEM - Send the campaign when a system event occurs. See the System
+     * resource for more information. ENDPOINT - Send the campaign when an
+     * endpoint event occurs. See the Event resource for more information.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SYSTEM, ENDPOINT
+     */
+    private String filterType;
+
+    /**
+     * An object that defines the dimensions for the event filter.
+     *
+     * @return An object that defines the dimensions for the event filter.
+     */
+    public EventDimensions getDimensions() {
+        return dimensions;
+    }
+
+    /**
+     * An object that defines the dimensions for the event filter.
+     *
+     * @param dimensions An object that defines the dimensions for the event
+     *            filter.
+     */
+    public void setDimensions(EventDimensions dimensions) {
+        this.dimensions = dimensions;
+    }
+
+    /**
+     * An object that defines the dimensions for the event filter.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param dimensions An object that defines the dimensions for the event
+     *            filter.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CampaignEventFilter withDimensions(EventDimensions dimensions) {
+        this.dimensions = dimensions;
+        return this;
+    }
+
+    /**
+     * The type of event that causes the campaign to be sent. Possible values:
+     * SYSTEM - Send the campaign when a system event occurs. See the System
+     * resource for more information. ENDPOINT - Send the campaign when an
+     * endpoint event occurs. See the Event resource for more information.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SYSTEM, ENDPOINT
+     *
+     * @return The type of event that causes the campaign to be sent. Possible
+     *         values: SYSTEM - Send the campaign when a system event occurs.
+     *         See the System resource for more information. ENDPOINT - Send the
+     *         campaign when an endpoint event occurs. See the Event resource
+     *         for more information.
+     * @see FilterType
+     */
+    public String getFilterType() {
+        return filterType;
+    }
+
+    /**
+     * The type of event that causes the campaign to be sent. Possible values:
+     * SYSTEM - Send the campaign when a system event occurs. See the System
+     * resource for more information. ENDPOINT - Send the campaign when an
+     * endpoint event occurs. See the Event resource for more information.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SYSTEM, ENDPOINT
+     *
+     * @param filterType The type of event that causes the campaign to be sent.
+     *            Possible values: SYSTEM - Send the campaign when a system
+     *            event occurs. See the System resource for more information.
+     *            ENDPOINT - Send the campaign when an endpoint event occurs.
+     *            See the Event resource for more information.
+     * @see FilterType
+     */
+    public void setFilterType(String filterType) {
+        this.filterType = filterType;
+    }
+
+    /**
+     * The type of event that causes the campaign to be sent. Possible values:
+     * SYSTEM - Send the campaign when a system event occurs. See the System
+     * resource for more information. ENDPOINT - Send the campaign when an
+     * endpoint event occurs. See the Event resource for more information.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SYSTEM, ENDPOINT
+     *
+     * @param filterType The type of event that causes the campaign to be sent.
+     *            Possible values: SYSTEM - Send the campaign when a system
+     *            event occurs. See the System resource for more information.
+     *            ENDPOINT - Send the campaign when an endpoint event occurs.
+     *            See the Event resource for more information.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see FilterType
+     */
+    public CampaignEventFilter withFilterType(String filterType) {
+        this.filterType = filterType;
+        return this;
+    }
+
+    /**
+     * The type of event that causes the campaign to be sent. Possible values:
+     * SYSTEM - Send the campaign when a system event occurs. See the System
+     * resource for more information. ENDPOINT - Send the campaign when an
+     * endpoint event occurs. See the Event resource for more information.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SYSTEM, ENDPOINT
+     *
+     * @param filterType The type of event that causes the campaign to be sent.
+     *            Possible values: SYSTEM - Send the campaign when a system
+     *            event occurs. See the System resource for more information.
+     *            ENDPOINT - Send the campaign when an endpoint event occurs.
+     *            See the Event resource for more information.
+     * @see FilterType
+     */
+    public void setFilterType(FilterType filterType) {
+        this.filterType = filterType.toString();
+    }
+
+    /**
+     * The type of event that causes the campaign to be sent. Possible values:
+     * SYSTEM - Send the campaign when a system event occurs. See the System
+     * resource for more information. ENDPOINT - Send the campaign when an
+     * endpoint event occurs. See the Event resource for more information.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SYSTEM, ENDPOINT
+     *
+     * @param filterType The type of event that causes the campaign to be sent.
+     *            Possible values: SYSTEM - Send the campaign when a system
+     *            event occurs. See the System resource for more information.
+     *            ENDPOINT - Send the campaign when an endpoint event occurs.
+     *            See the Event resource for more information.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see FilterType
+     */
+    public CampaignEventFilter withFilterType(FilterType filterType) {
+        this.filterType = filterType.toString();
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getDimensions() != null)
+            sb.append("Dimensions: " + getDimensions() + ",");
+        if (getFilterType() != null)
+            sb.append("FilterType: " + getFilterType());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getDimensions() == null) ? 0 : getDimensions().hashCode());
+        hashCode = prime * hashCode + ((getFilterType() == null) ? 0 : getFilterType().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof CampaignEventFilter == false)
+            return false;
+        CampaignEventFilter other = (CampaignEventFilter) obj;
+
+        if (other.getDimensions() == null ^ this.getDimensions() == null)
+            return false;
+        if (other.getDimensions() != null
+                && other.getDimensions().equals(this.getDimensions()) == false)
+            return false;
+        if (other.getFilterType() == null ^ this.getFilterType() == null)
+            return false;
+        if (other.getFilterType() != null
+                && other.getFilterType().equals(this.getFilterType()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignLimits.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignLimits.java
index 3c0b2c338e..0e18bc8466 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignLimits.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignLimits.java
@@ -19,11 +19,12 @@
 
 /**
  * Campaign Limits are used to limit the number of messages that can be sent to
- * a user.
+ * a single endpoint.
  */
 public class CampaignLimits implements Serializable {
     /**
-     * The maximum number of messages that the campaign can send daily.
+     * The maximum number of messages that each campaign can send to a single
+     * endpoint in a 24-hour period.
      */
     private Integer daily;
 
@@ -41,37 +42,42 @@
     private Integer messagesPerSecond;
 
     /**
-     * The maximum total number of messages that the campaign can send.
+     * The maximum number of messages that an individual campaign can send to a
+     * single endpoint over the course of the campaign.
      */
     private Integer total;
 
     /**
-     * The maximum number of messages that the campaign can send daily.
+     * The maximum number of messages that each campaign can send to a single
+     * endpoint in a 24-hour period.
      *
-     * @return The maximum number of messages that the campaign can send daily.
+     * @return The maximum number of messages that each campaign can send to a
+     *         single endpoint in a 24-hour period.
      */
     public Integer getDaily() {
         return daily;
     }
 
     /**
-     * The maximum number of messages that the campaign can send daily.
+     * The maximum number of messages that each campaign can send to a single
+     * endpoint in a 24-hour period.
      *
-     * @param daily The maximum number of messages that the campaign can send
-     *            daily.
+     * @param daily The maximum number of messages that each campaign can send
+     *            to a single endpoint in a 24-hour period.
      */
     public void setDaily(Integer daily) {
         this.daily = daily;
     }
 
     /**
-     * The maximum number of messages that the campaign can send daily.
+     * The maximum number of messages that each campaign can send to a single
+     * endpoint in a 24-hour period.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param daily The maximum number of messages that the campaign can send
-     *            daily.
+     * @param daily The maximum number of messages that each campaign can send
+     *            to a single endpoint in a 24-hour period.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -169,32 +175,36 @@ public CampaignLimits withMessagesPerSecond(Integer messagesPerSecond) {
     }
 
     /**
-     * The maximum total number of messages that the campaign can send.
+     * The maximum number of messages that an individual campaign can send to a
+     * single endpoint over the course of the campaign.
      *
-     * @return The maximum total number of messages that the campaign can send.
+     * @return The maximum number of messages that an individual campaign can
+     *         send to a single endpoint over the course of the campaign.
      */
     public Integer getTotal() {
         return total;
     }
 
     /**
-     * The maximum total number of messages that the campaign can send.
+     * The maximum number of messages that an individual campaign can send to a
+     * single endpoint over the course of the campaign.
      *
-     * @param total The maximum total number of messages that the campaign can
-     *            send.
+     * @param total The maximum number of messages that an individual campaign
+     *            can send to a single endpoint over the course of the campaign.
      */
     public void setTotal(Integer total) {
         this.total = total;
     }
 
     /**
-     * The maximum total number of messages that the campaign can send.
+     * The maximum number of messages that an individual campaign can send to a
+     * single endpoint over the course of the campaign.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param total The maximum total number of messages that the campaign can
-     *            send.
+     * @param total The maximum number of messages that an individual campaign
+     *            can send to a single endpoint over the course of the campaign.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ChannelType.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ChannelType.java
index a3723c9684..d1ecfd0476 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ChannelType.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ChannelType.java
@@ -30,6 +30,7 @@
     APNS_VOIP_SANDBOX("APNS_VOIP_SANDBOX"),
     ADM("ADM"),
     SMS("SMS"),
+    VOICE("VOICE"),
     EMAIL("EMAIL"),
     BAIDU("BAIDU"),
     CUSTOM("CUSTOM");
@@ -55,6 +56,7 @@ public String toString() {
         enumMap.put("APNS_VOIP_SANDBOX", APNS_VOIP_SANDBOX);
         enumMap.put("ADM", ADM);
         enumMap.put("SMS", SMS);
+        enumMap.put("VOICE", VOICE);
         enumMap.put("EMAIL", EMAIL);
         enumMap.put("BAIDU", BAIDU);
         enumMap.put("CUSTOM", CUSTOM);
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DefaultPushNotificationMessage.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DefaultPushNotificationMessage.java
index 304f25743a..7a36cf90f6 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DefaultPushNotificationMessage.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DefaultPushNotificationMessage.java
@@ -48,8 +48,9 @@
     private java.util.Map<String, String> data;
 
     /**
-     * Indicates if the message should display on the users device. Silent
-     * pushes can be used for Remote Configuration and Phone Home use cases.
+     * Indicates if the message should display on the recipient's device. You
+     * can use silent pushes for remote configuration or to deliver messages to
+     * in-app notification centers.
      */
     private Boolean silentPush;
 
@@ -329,51 +330,57 @@ public DefaultPushNotificationMessage clearDataEntries() {
     }
 
     /**
-     * Indicates if the message should display on the users device. Silent
-     * pushes can be used for Remote Configuration and Phone Home use cases.
+     * Indicates if the message should display on the recipient's device. You
+     * can use silent pushes for remote configuration or to deliver messages to
+     * in-app notification centers.
      *
-     * @return Indicates if the message should display on the users device.
-     *         Silent pushes can be used for Remote Configuration and Phone Home
-     *         use cases.
+     * @return Indicates if the message should display on the recipient's
+     *         device. You can use silent pushes for remote configuration or to
+     *         deliver messages to in-app notification centers.
      */
     public Boolean isSilentPush() {
         return silentPush;
     }
 
     /**
-     * Indicates if the message should display on the users device. Silent
-     * pushes can be used for Remote Configuration and Phone Home use cases.
+     * Indicates if the message should display on the recipient's device. You
+     * can use silent pushes for remote configuration or to deliver messages to
+     * in-app notification centers.
      *
-     * @return Indicates if the message should display on the users device.
-     *         Silent pushes can be used for Remote Configuration and Phone Home
-     *         use cases.
+     * @return Indicates if the message should display on the recipient's
+     *         device. You can use silent pushes for remote configuration or to
+     *         deliver messages to in-app notification centers.
      */
     public Boolean getSilentPush() {
         return silentPush;
     }
 
     /**
-     * Indicates if the message should display on the users device. Silent
-     * pushes can be used for Remote Configuration and Phone Home use cases.
+     * Indicates if the message should display on the recipient's device. You
+     * can use silent pushes for remote configuration or to deliver messages to
+     * in-app notification centers.
      *
-     * @param silentPush Indicates if the message should display on the users
-     *            device. Silent pushes can be used for Remote Configuration and
-     *            Phone Home use cases.
+     * @param silentPush Indicates if the message should display on the
+     *            recipient's device. You can use silent pushes for remote
+     *            configuration or to deliver messages to in-app notification
+     *            centers.
      */
     public void setSilentPush(Boolean silentPush) {
         this.silentPush = silentPush;
     }
 
     /**
-     * Indicates if the message should display on the users device. Silent
-     * pushes can be used for Remote Configuration and Phone Home use cases.
+     * Indicates if the message should display on the recipient's device. You
+     * can use silent pushes for remote configuration or to deliver messages to
+     * in-app notification centers.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param silentPush Indicates if the message should display on the users
-     *            device. Silent pushes can be used for Remote Configuration and
-     *            Phone Home use cases.
+     * @param silentPush Indicates if the message should display on the
+     *            recipient's device. You can use silent pushes for remote
+     *            configuration or to deliver messages to in-app notification
+     *            centers.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteVoiceChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteVoiceChannelRequest.java
new file mode 100644
index 0000000000..02ccd60c26
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteVoiceChannelRequest.java
@@ -0,0 +1,109 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Delete an Voice channel
+ */
+public class DeleteVoiceChannelRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The unique ID of your Amazon Pinpoint application.
+     */
+    private String applicationId;
+
+    /**
+     * The unique ID of your Amazon Pinpoint application.
+     *
+     * @return The unique ID of your Amazon Pinpoint application.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * The unique ID of your Amazon Pinpoint application.
+     *
+     * @param applicationId The unique ID of your Amazon Pinpoint application.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * The unique ID of your Amazon Pinpoint application.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The unique ID of your Amazon Pinpoint application.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteVoiceChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteVoiceChannelRequest == false)
+            return false;
+        DeleteVoiceChannelRequest other = (DeleteVoiceChannelRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteVoiceChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteVoiceChannelResult.java
new file mode 100644
index 0000000000..cae7f5f363
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteVoiceChannelResult.java
@@ -0,0 +1,105 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class DeleteVoiceChannelResult implements Serializable {
+    /**
+     * Voice Channel Response.
+     */
+    private VoiceChannelResponse voiceChannelResponse;
+
+    /**
+     * Voice Channel Response.
+     *
+     * @return Voice Channel Response.
+     */
+    public VoiceChannelResponse getVoiceChannelResponse() {
+        return voiceChannelResponse;
+    }
+
+    /**
+     * Voice Channel Response.
+     *
+     * @param voiceChannelResponse Voice Channel Response.
+     */
+    public void setVoiceChannelResponse(VoiceChannelResponse voiceChannelResponse) {
+        this.voiceChannelResponse = voiceChannelResponse;
+    }
+
+    /**
+     * Voice Channel Response.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param voiceChannelResponse Voice Channel Response.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteVoiceChannelResult withVoiceChannelResponse(
+            VoiceChannelResponse voiceChannelResponse) {
+        this.voiceChannelResponse = voiceChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getVoiceChannelResponse() != null)
+            sb.append("VoiceChannelResponse: " + getVoiceChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getVoiceChannelResponse() == null) ? 0 : getVoiceChannelResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteVoiceChannelResult == false)
+            return false;
+        DeleteVoiceChannelResult other = (DeleteVoiceChannelResult) obj;
+
+        if (other.getVoiceChannelResponse() == null ^ this.getVoiceChannelResponse() == null)
+            return false;
+        if (other.getVoiceChannelResponse() != null
+                && other.getVoiceChannelResponse().equals(this.getVoiceChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DirectMessageConfiguration.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DirectMessageConfiguration.java
index f57b4c1fd5..0386c2c812 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DirectMessageConfiguration.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DirectMessageConfiguration.java
@@ -50,6 +50,11 @@
      */
     private DefaultPushNotificationMessage defaultPushNotificationMessage;
 
+    /**
+     * The message to Email channels. Overrides the default message.
+     */
+    private EmailMessage emailMessage;
+
     /**
      * The message to GCM channels. Overrides the default push notification
      * message.
@@ -61,6 +66,11 @@
      */
     private SMSMessage sMSMessage;
 
+    /**
+     * The message to Voice channels. Overrides the default message.
+     */
+    private VoiceMessage voiceMessage;
+
     /**
      * The message to ADM channels. Overrides the default push notification
      * message.
@@ -248,6 +258,41 @@ public DirectMessageConfiguration withDefaultPushNotificationMessage(
         return this;
     }
 
+    /**
+     * The message to Email channels. Overrides the default message.
+     *
+     * @return The message to Email channels. Overrides the default message.
+     */
+    public EmailMessage getEmailMessage() {
+        return emailMessage;
+    }
+
+    /**
+     * The message to Email channels. Overrides the default message.
+     *
+     * @param emailMessage The message to Email channels. Overrides the default
+     *            message.
+     */
+    public void setEmailMessage(EmailMessage emailMessage) {
+        this.emailMessage = emailMessage;
+    }
+
+    /**
+     * The message to Email channels. Overrides the default message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param emailMessage The message to Email channels. Overrides the default
+     *            message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DirectMessageConfiguration withEmailMessage(EmailMessage emailMessage) {
+        this.emailMessage = emailMessage;
+        return this;
+    }
+
     /**
      * The message to GCM channels. Overrides the default push notification
      * message.
@@ -322,6 +367,41 @@ public DirectMessageConfiguration withSMSMessage(SMSMessage sMSMessage) {
         return this;
     }
 
+    /**
+     * The message to Voice channels. Overrides the default message.
+     *
+     * @return The message to Voice channels. Overrides the default message.
+     */
+    public VoiceMessage getVoiceMessage() {
+        return voiceMessage;
+    }
+
+    /**
+     * The message to Voice channels. Overrides the default message.
+     *
+     * @param voiceMessage The message to Voice channels. Overrides the default
+     *            message.
+     */
+    public void setVoiceMessage(VoiceMessage voiceMessage) {
+        this.voiceMessage = voiceMessage;
+    }
+
+    /**
+     * The message to Voice channels. Overrides the default message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param voiceMessage The message to Voice channels. Overrides the default
+     *            message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DirectMessageConfiguration withVoiceMessage(VoiceMessage voiceMessage) {
+        this.voiceMessage = voiceMessage;
+        return this;
+    }
+
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -344,10 +424,14 @@ public String toString() {
         if (getDefaultPushNotificationMessage() != null)
             sb.append("DefaultPushNotificationMessage: " + getDefaultPushNotificationMessage()
                     + ",");
+        if (getEmailMessage() != null)
+            sb.append("EmailMessage: " + getEmailMessage() + ",");
         if (getGCMMessage() != null)
             sb.append("GCMMessage: " + getGCMMessage() + ",");
         if (getSMSMessage() != null)
-            sb.append("SMSMessage: " + getSMSMessage());
+            sb.append("SMSMessage: " + getSMSMessage() + ",");
+        if (getVoiceMessage() != null)
+            sb.append("VoiceMessage: " + getVoiceMessage());
         sb.append("}");
         return sb.toString();
     }
@@ -368,8 +452,12 @@ public int hashCode() {
                 * hashCode
                 + ((getDefaultPushNotificationMessage() == null) ? 0
                         : getDefaultPushNotificationMessage().hashCode());
+        hashCode = prime * hashCode
+                + ((getEmailMessage() == null) ? 0 : getEmailMessage().hashCode());
         hashCode = prime * hashCode + ((getGCMMessage() == null) ? 0 : getGCMMessage().hashCode());
         hashCode = prime * hashCode + ((getSMSMessage() == null) ? 0 : getSMSMessage().hashCode());
+        hashCode = prime * hashCode
+                + ((getVoiceMessage() == null) ? 0 : getVoiceMessage().hashCode());
         return hashCode;
     }
 
@@ -411,6 +499,11 @@ public boolean equals(Object obj) {
                 && other.getDefaultPushNotificationMessage().equals(
                         this.getDefaultPushNotificationMessage()) == false)
             return false;
+        if (other.getEmailMessage() == null ^ this.getEmailMessage() == null)
+            return false;
+        if (other.getEmailMessage() != null
+                && other.getEmailMessage().equals(this.getEmailMessage()) == false)
+            return false;
         if (other.getGCMMessage() == null ^ this.getGCMMessage() == null)
             return false;
         if (other.getGCMMessage() != null
@@ -421,6 +514,11 @@ public boolean equals(Object obj) {
         if (other.getSMSMessage() != null
                 && other.getSMSMessage().equals(this.getSMSMessage()) == false)
             return false;
+        if (other.getVoiceMessage() == null ^ this.getVoiceMessage() == null)
+            return false;
+        if (other.getVoiceMessage() != null
+                && other.getVoiceMessage().equals(this.getVoiceMessage()) == false)
+            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailChannelRequest.java
index baf0867944..9ca536cafe 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailChannelRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailChannelRequest.java
@@ -21,6 +21,12 @@
  * Email Channel Request
  */
 public class EmailChannelRequest implements Serializable {
+    /**
+     * The configuration set that you want to use when you send email using the
+     * Pinpoint Email API.
+     */
+    private String configurationSet;
+
     /**
      * If the channel is enabled for sending messages.
      */
@@ -42,6 +48,45 @@
      */
     private String roleArn;
 
+    /**
+     * The configuration set that you want to use when you send email using the
+     * Pinpoint Email API.
+     *
+     * @return The configuration set that you want to use when you send email
+     *         using the Pinpoint Email API.
+     */
+    public String getConfigurationSet() {
+        return configurationSet;
+    }
+
+    /**
+     * The configuration set that you want to use when you send email using the
+     * Pinpoint Email API.
+     *
+     * @param configurationSet The configuration set that you want to use when
+     *            you send email using the Pinpoint Email API.
+     */
+    public void setConfigurationSet(String configurationSet) {
+        this.configurationSet = configurationSet;
+    }
+
+    /**
+     * The configuration set that you want to use when you send email using the
+     * Pinpoint Email API.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param configurationSet The configuration set that you want to use when
+     *            you send email using the Pinpoint Email API.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelRequest withConfigurationSet(String configurationSet) {
+        this.configurationSet = configurationSet;
+        return this;
+    }
+
     /**
      * If the channel is enabled for sending messages.
      *
@@ -200,6 +245,8 @@ public EmailChannelRequest withRoleArn(String roleArn) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
+        if (getConfigurationSet() != null)
+            sb.append("ConfigurationSet: " + getConfigurationSet() + ",");
         if (getEnabled() != null)
             sb.append("Enabled: " + getEnabled() + ",");
         if (getFromAddress() != null)
@@ -217,6 +264,8 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
+        hashCode = prime * hashCode
+                + ((getConfigurationSet() == null) ? 0 : getConfigurationSet().hashCode());
         hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
         hashCode = prime * hashCode
                 + ((getFromAddress() == null) ? 0 : getFromAddress().hashCode());
@@ -236,6 +285,11 @@ public boolean equals(Object obj) {
             return false;
         EmailChannelRequest other = (EmailChannelRequest) obj;
 
+        if (other.getConfigurationSet() == null ^ this.getConfigurationSet() == null)
+            return false;
+        if (other.getConfigurationSet() != null
+                && other.getConfigurationSet().equals(this.getConfigurationSet()) == false)
+            return false;
         if (other.getEnabled() == null ^ this.getEnabled() == null)
             return false;
         if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailChannelResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailChannelResponse.java
index 49346c9e8f..edbd5eca36 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailChannelResponse.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailChannelResponse.java
@@ -26,6 +26,12 @@
      */
     private String applicationId;
 
+    /**
+     * The configuration set that you want to use when you send email using the
+     * Pinpoint Email API.
+     */
+    private String configurationSet;
+
     /**
      * The date that the settings were last updated in ISO 8601 format.
      */
@@ -128,6 +134,45 @@ public EmailChannelResponse withApplicationId(String applicationId) {
         return this;
     }
 
+    /**
+     * The configuration set that you want to use when you send email using the
+     * Pinpoint Email API.
+     *
+     * @return The configuration set that you want to use when you send email
+     *         using the Pinpoint Email API.
+     */
+    public String getConfigurationSet() {
+        return configurationSet;
+    }
+
+    /**
+     * The configuration set that you want to use when you send email using the
+     * Pinpoint Email API.
+     *
+     * @param configurationSet The configuration set that you want to use when
+     *            you send email using the Pinpoint Email API.
+     */
+    public void setConfigurationSet(String configurationSet) {
+        this.configurationSet = configurationSet;
+    }
+
+    /**
+     * The configuration set that you want to use when you send email using the
+     * Pinpoint Email API.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param configurationSet The configuration set that you want to use when
+     *            you send email using the Pinpoint Email API.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelResponse withConfigurationSet(String configurationSet) {
+        this.configurationSet = configurationSet;
+        return this;
+    }
+
     /**
      * The date that the settings were last updated in ISO 8601 format.
      *
@@ -605,6 +650,8 @@ public String toString() {
         sb.append("{");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getConfigurationSet() != null)
+            sb.append("ConfigurationSet: " + getConfigurationSet() + ",");
         if (getCreationDate() != null)
             sb.append("CreationDate: " + getCreationDate() + ",");
         if (getEnabled() != null)
@@ -642,6 +689,8 @@ public int hashCode() {
 
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime * hashCode
+                + ((getConfigurationSet() == null) ? 0 : getConfigurationSet().hashCode());
         hashCode = prime * hashCode
                 + ((getCreationDate() == null) ? 0 : getCreationDate().hashCode());
         hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
@@ -680,6 +729,11 @@ public boolean equals(Object obj) {
         if (other.getApplicationId() != null
                 && other.getApplicationId().equals(this.getApplicationId()) == false)
             return false;
+        if (other.getConfigurationSet() == null ^ this.getConfigurationSet() == null)
+            return false;
+        if (other.getConfigurationSet() != null
+                && other.getConfigurationSet().equals(this.getConfigurationSet()) == false)
+            return false;
         if (other.getCreationDate() == null ^ this.getCreationDate() == null)
             return false;
         if (other.getCreationDate() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailMessage.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailMessage.java
new file mode 100644
index 0000000000..64dc30d19f
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailMessage.java
@@ -0,0 +1,488 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Email Message.
+ */
+public class EmailMessage implements Serializable {
+    /**
+     * The body of the email message.
+     */
+    private String body;
+
+    /**
+     * The email address that bounces and complaints will be forwarded to when
+     * feedback forwarding is enabled.
+     */
+    private String feedbackForwardingAddress;
+
+    /**
+     * The email address used to send the email from. Defaults to use
+     * FromAddress specified in the Email Channel.
+     */
+    private String fromAddress;
+
+    /**
+     * An email represented as a raw MIME message.
+     */
+    private RawEmail rawEmail;
+
+    /**
+     * The reply-to email address(es) for the email. If the recipient replies to
+     * the email, each reply-to address will receive the reply.
+     */
+    private java.util.List<String> replyToAddresses;
+
+    /**
+     * An email composed of a subject, a text part and a html part.
+     */
+    private SimpleEmail simpleEmail;
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     */
+    private java.util.Map<String, java.util.List<String>> substitutions;
+
+    /**
+     * The body of the email message.
+     *
+     * @return The body of the email message.
+     */
+    public String getBody() {
+        return body;
+    }
+
+    /**
+     * The body of the email message.
+     *
+     * @param body The body of the email message.
+     */
+    public void setBody(String body) {
+        this.body = body;
+    }
+
+    /**
+     * The body of the email message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param body The body of the email message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailMessage withBody(String body) {
+        this.body = body;
+        return this;
+    }
+
+    /**
+     * The email address that bounces and complaints will be forwarded to when
+     * feedback forwarding is enabled.
+     *
+     * @return The email address that bounces and complaints will be forwarded
+     *         to when feedback forwarding is enabled.
+     */
+    public String getFeedbackForwardingAddress() {
+        return feedbackForwardingAddress;
+    }
+
+    /**
+     * The email address that bounces and complaints will be forwarded to when
+     * feedback forwarding is enabled.
+     *
+     * @param feedbackForwardingAddress The email address that bounces and
+     *            complaints will be forwarded to when feedback forwarding is
+     *            enabled.
+     */
+    public void setFeedbackForwardingAddress(String feedbackForwardingAddress) {
+        this.feedbackForwardingAddress = feedbackForwardingAddress;
+    }
+
+    /**
+     * The email address that bounces and complaints will be forwarded to when
+     * feedback forwarding is enabled.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param feedbackForwardingAddress The email address that bounces and
+     *            complaints will be forwarded to when feedback forwarding is
+     *            enabled.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailMessage withFeedbackForwardingAddress(String feedbackForwardingAddress) {
+        this.feedbackForwardingAddress = feedbackForwardingAddress;
+        return this;
+    }
+
+    /**
+     * The email address used to send the email from. Defaults to use
+     * FromAddress specified in the Email Channel.
+     *
+     * @return The email address used to send the email from. Defaults to use
+     *         FromAddress specified in the Email Channel.
+     */
+    public String getFromAddress() {
+        return fromAddress;
+    }
+
+    /**
+     * The email address used to send the email from. Defaults to use
+     * FromAddress specified in the Email Channel.
+     *
+     * @param fromAddress The email address used to send the email from.
+     *            Defaults to use FromAddress specified in the Email Channel.
+     */
+    public void setFromAddress(String fromAddress) {
+        this.fromAddress = fromAddress;
+    }
+
+    /**
+     * The email address used to send the email from. Defaults to use
+     * FromAddress specified in the Email Channel.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param fromAddress The email address used to send the email from.
+     *            Defaults to use FromAddress specified in the Email Channel.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailMessage withFromAddress(String fromAddress) {
+        this.fromAddress = fromAddress;
+        return this;
+    }
+
+    /**
+     * An email represented as a raw MIME message.
+     *
+     * @return An email represented as a raw MIME message.
+     */
+    public RawEmail getRawEmail() {
+        return rawEmail;
+    }
+
+    /**
+     * An email represented as a raw MIME message.
+     *
+     * @param rawEmail An email represented as a raw MIME message.
+     */
+    public void setRawEmail(RawEmail rawEmail) {
+        this.rawEmail = rawEmail;
+    }
+
+    /**
+     * An email represented as a raw MIME message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param rawEmail An email represented as a raw MIME message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailMessage withRawEmail(RawEmail rawEmail) {
+        this.rawEmail = rawEmail;
+        return this;
+    }
+
+    /**
+     * The reply-to email address(es) for the email. If the recipient replies to
+     * the email, each reply-to address will receive the reply.
+     *
+     * @return The reply-to email address(es) for the email. If the recipient
+     *         replies to the email, each reply-to address will receive the
+     *         reply.
+     */
+    public java.util.List<String> getReplyToAddresses() {
+        return replyToAddresses;
+    }
+
+    /**
+     * The reply-to email address(es) for the email. If the recipient replies to
+     * the email, each reply-to address will receive the reply.
+     *
+     * @param replyToAddresses The reply-to email address(es) for the email. If
+     *            the recipient replies to the email, each reply-to address will
+     *            receive the reply.
+     */
+    public void setReplyToAddresses(java.util.Collection<String> replyToAddresses) {
+        if (replyToAddresses == null) {
+            this.replyToAddresses = null;
+            return;
+        }
+
+        this.replyToAddresses = new java.util.ArrayList<String>(replyToAddresses);
+    }
+
+    /**
+     * The reply-to email address(es) for the email. If the recipient replies to
+     * the email, each reply-to address will receive the reply.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param replyToAddresses The reply-to email address(es) for the email. If
+     *            the recipient replies to the email, each reply-to address will
+     *            receive the reply.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailMessage withReplyToAddresses(String... replyToAddresses) {
+        if (getReplyToAddresses() == null) {
+            this.replyToAddresses = new java.util.ArrayList<String>(replyToAddresses.length);
+        }
+        for (String value : replyToAddresses) {
+            this.replyToAddresses.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * The reply-to email address(es) for the email. If the recipient replies to
+     * the email, each reply-to address will receive the reply.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param replyToAddresses The reply-to email address(es) for the email. If
+     *            the recipient replies to the email, each reply-to address will
+     *            receive the reply.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailMessage withReplyToAddresses(java.util.Collection<String> replyToAddresses) {
+        setReplyToAddresses(replyToAddresses);
+        return this;
+    }
+
+    /**
+     * An email composed of a subject, a text part and a html part.
+     *
+     * @return An email composed of a subject, a text part and a html part.
+     */
+    public SimpleEmail getSimpleEmail() {
+        return simpleEmail;
+    }
+
+    /**
+     * An email composed of a subject, a text part and a html part.
+     *
+     * @param simpleEmail An email composed of a subject, a text part and a html
+     *            part.
+     */
+    public void setSimpleEmail(SimpleEmail simpleEmail) {
+        this.simpleEmail = simpleEmail;
+    }
+
+    /**
+     * An email composed of a subject, a text part and a html part.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param simpleEmail An email composed of a subject, a text part and a html
+     *            part.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailMessage withSimpleEmail(SimpleEmail simpleEmail) {
+        this.simpleEmail = simpleEmail;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @return Default message substitutions. Can be overridden by individual
+     *         address substitutions.
+     */
+    public java.util.Map<String, java.util.List<String>> getSubstitutions() {
+        return substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     */
+    public void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailMessage withSubstitutions(
+            java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * The method adds a new key-value pair into Substitutions parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into Substitutions.
+     * @param value The corresponding value of the entry to be added into
+     *            Substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailMessage addSubstitutionsEntry(String key, java.util.List<String> value) {
+        if (null == this.substitutions) {
+            this.substitutions = new java.util.HashMap<String, java.util.List<String>>();
+        }
+        if (this.substitutions.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.substitutions.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public EmailMessage clearSubstitutionsEntries() {
+        this.substitutions = null;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getBody() != null)
+            sb.append("Body: " + getBody() + ",");
+        if (getFeedbackForwardingAddress() != null)
+            sb.append("FeedbackForwardingAddress: " + getFeedbackForwardingAddress() + ",");
+        if (getFromAddress() != null)
+            sb.append("FromAddress: " + getFromAddress() + ",");
+        if (getRawEmail() != null)
+            sb.append("RawEmail: " + getRawEmail() + ",");
+        if (getReplyToAddresses() != null)
+            sb.append("ReplyToAddresses: " + getReplyToAddresses() + ",");
+        if (getSimpleEmail() != null)
+            sb.append("SimpleEmail: " + getSimpleEmail() + ",");
+        if (getSubstitutions() != null)
+            sb.append("Substitutions: " + getSubstitutions());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getBody() == null) ? 0 : getBody().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getFeedbackForwardingAddress() == null) ? 0 : getFeedbackForwardingAddress()
+                        .hashCode());
+        hashCode = prime * hashCode
+                + ((getFromAddress() == null) ? 0 : getFromAddress().hashCode());
+        hashCode = prime * hashCode + ((getRawEmail() == null) ? 0 : getRawEmail().hashCode());
+        hashCode = prime * hashCode
+                + ((getReplyToAddresses() == null) ? 0 : getReplyToAddresses().hashCode());
+        hashCode = prime * hashCode
+                + ((getSimpleEmail() == null) ? 0 : getSimpleEmail().hashCode());
+        hashCode = prime * hashCode
+                + ((getSubstitutions() == null) ? 0 : getSubstitutions().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof EmailMessage == false)
+            return false;
+        EmailMessage other = (EmailMessage) obj;
+
+        if (other.getBody() == null ^ this.getBody() == null)
+            return false;
+        if (other.getBody() != null && other.getBody().equals(this.getBody()) == false)
+            return false;
+        if (other.getFeedbackForwardingAddress() == null
+                ^ this.getFeedbackForwardingAddress() == null)
+            return false;
+        if (other.getFeedbackForwardingAddress() != null
+                && other.getFeedbackForwardingAddress().equals(this.getFeedbackForwardingAddress()) == false)
+            return false;
+        if (other.getFromAddress() == null ^ this.getFromAddress() == null)
+            return false;
+        if (other.getFromAddress() != null
+                && other.getFromAddress().equals(this.getFromAddress()) == false)
+            return false;
+        if (other.getRawEmail() == null ^ this.getRawEmail() == null)
+            return false;
+        if (other.getRawEmail() != null && other.getRawEmail().equals(this.getRawEmail()) == false)
+            return false;
+        if (other.getReplyToAddresses() == null ^ this.getReplyToAddresses() == null)
+            return false;
+        if (other.getReplyToAddresses() != null
+                && other.getReplyToAddresses().equals(this.getReplyToAddresses()) == false)
+            return false;
+        if (other.getSimpleEmail() == null ^ this.getSimpleEmail() == null)
+            return false;
+        if (other.getSimpleEmail() != null
+                && other.getSimpleEmail().equals(this.getSimpleEmail()) == false)
+            return false;
+        if (other.getSubstitutions() == null ^ this.getSubstitutions() == null)
+            return false;
+        if (other.getSubstitutions() != null
+                && other.getSubstitutions().equals(this.getSubstitutions()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointBatchItem.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointBatchItem.java
index d2ecd72384..d6c6ddfb94 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointBatchItem.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointBatchItem.java
@@ -49,7 +49,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      */
     private String channelType;
 
@@ -293,7 +293,7 @@ public EndpointBatchItem clearAttributesEntries() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @return The channel type. Valid values: GCM | APNS | APNS_SANDBOX |
      *         APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS | EMAIL | BAIDU
@@ -309,7 +309,7 @@ public String getChannelType() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @param channelType The channel type. Valid values: GCM | APNS |
      *            APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS |
@@ -329,7 +329,7 @@ public void setChannelType(String channelType) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @param channelType The channel type. Valid values: GCM | APNS |
      *            APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS |
@@ -349,7 +349,7 @@ public EndpointBatchItem withChannelType(String channelType) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @param channelType The channel type. Valid values: GCM | APNS |
      *            APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS |
@@ -369,7 +369,7 @@ public void setChannelType(ChannelType channelType) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @param channelType The channel type. Valid values: GCM | APNS |
      *            APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS |
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointItemResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointItemResponse.java
index e88740428e..bdc5b6300c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointItemResponse.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointItemResponse.java
@@ -18,8 +18,8 @@
 import java.io.Serializable;
 
 /**
- * The responses that are returned after you create or update an endpoint and
- * record an event.
+ * A complex object that holds the status code and message as a result of
+ * processing an endpoint.
  */
 public class EndpointItemResponse implements Serializable {
     /**
@@ -29,8 +29,8 @@
     private String message;
 
     /**
-     * The status code to respond with for a particular endpoint id after
-     * endpoint registration
+     * The status code associated with the merging of an endpoint when issuing a
+     * response.
      */
     private Integer statusCode;
 
@@ -74,36 +74,36 @@ public EndpointItemResponse withMessage(String message) {
     }
 
     /**
-     * The status code to respond with for a particular endpoint id after
-     * endpoint registration
+     * The status code associated with the merging of an endpoint when issuing a
+     * response.
      *
-     * @return The status code to respond with for a particular endpoint id
-     *         after endpoint registration
+     * @return The status code associated with the merging of an endpoint when
+     *         issuing a response.
      */
     public Integer getStatusCode() {
         return statusCode;
     }
 
     /**
-     * The status code to respond with for a particular endpoint id after
-     * endpoint registration
+     * The status code associated with the merging of an endpoint when issuing a
+     * response.
      *
-     * @param statusCode The status code to respond with for a particular
-     *            endpoint id after endpoint registration
+     * @param statusCode The status code associated with the merging of an
+     *            endpoint when issuing a response.
      */
     public void setStatusCode(Integer statusCode) {
         this.statusCode = statusCode;
     }
 
     /**
-     * The status code to respond with for a particular endpoint id after
-     * endpoint registration
+     * The status code associated with the merging of an endpoint when issuing a
+     * response.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param statusCode The status code to respond with for a particular
-     *            endpoint id after endpoint registration
+     * @param statusCode The status code associated with the merging of an
+     *            endpoint when issuing a response.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointLocation.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointLocation.java
index bfadd8521c..39fab6bbe7 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointLocation.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointLocation.java
@@ -28,7 +28,7 @@
 
     /**
      * The two-letter code for the country or region of the endpoint. Specified
-     * as an ISO 3166-1 Alpha-2 code, such as "US" for the United States.
+     * as an ISO 3166-1 alpha-2 code, such as "US" for the United States.
      */
     private String country;
 
@@ -88,10 +88,10 @@ public EndpointLocation withCity(String city) {
 
     /**
      * The two-letter code for the country or region of the endpoint. Specified
-     * as an ISO 3166-1 Alpha-2 code, such as "US" for the United States.
+     * as an ISO 3166-1 alpha-2 code, such as "US" for the United States.
      *
      * @return The two-letter code for the country or region of the endpoint.
-     *         Specified as an ISO 3166-1 Alpha-2 code, such as "US" for the
+     *         Specified as an ISO 3166-1 alpha-2 code, such as "US" for the
      *         United States.
      */
     public String getCountry() {
@@ -100,10 +100,10 @@ public String getCountry() {
 
     /**
      * The two-letter code for the country or region of the endpoint. Specified
-     * as an ISO 3166-1 Alpha-2 code, such as "US" for the United States.
+     * as an ISO 3166-1 alpha-2 code, such as "US" for the United States.
      *
      * @param country The two-letter code for the country or region of the
-     *            endpoint. Specified as an ISO 3166-1 Alpha-2 code, such as
+     *            endpoint. Specified as an ISO 3166-1 alpha-2 code, such as
      *            "US" for the United States.
      */
     public void setCountry(String country) {
@@ -112,13 +112,13 @@ public void setCountry(String country) {
 
     /**
      * The two-letter code for the country or region of the endpoint. Specified
-     * as an ISO 3166-1 Alpha-2 code, such as "US" for the United States.
+     * as an ISO 3166-1 alpha-2 code, such as "US" for the United States.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param country The two-letter code for the country or region of the
-     *            endpoint. Specified as an ISO 3166-1 Alpha-2 code, such as
+     *            endpoint. Specified as an ISO 3166-1 alpha-2 code, such as
      *            "US" for the United States.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointMessageResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointMessageResult.java
index 648586343f..33d2ce22f5 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointMessageResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointMessageResult.java
@@ -34,14 +34,14 @@
      * delivering the message to the endpoint. Amazon Pinpoint won't attempt to
      * send the message again. TIMEOUT - The message couldn't be sent within the
      * timeout period. QUIET_TIME - The local time for the endpoint was within
-     * the Quiet Hours for the campaign. DAILY_CAP - The endpoint has received
-     * the maximum number of messages it can receive within a 24-hour period.
-     * HOLDOUT - The endpoint was in a hold out treatment for the campaign.
-     * THROTTLED - Amazon Pinpoint throttled sending to this endpoint. EXPIRED -
-     * The endpoint address is expired. CAMPAIGN_CAP - The endpoint received the
-     * maximum number of messages allowed by the campaign. SERVICE_FAILURE - A
-     * service-level failure prevented Amazon Pinpoint from delivering the
-     * message. UNKNOWN - An unknown error occurred.
+     * the QuietTime for the campaign or app. DAILY_CAP - The endpoint has
+     * received the maximum number of messages it can receive within a 24-hour
+     * period. HOLDOUT - The endpoint was in a hold out treatment for the
+     * campaign. THROTTLED - Amazon Pinpoint throttled sending to this endpoint.
+     * EXPIRED - The endpoint address is expired. CAMPAIGN_CAP - The endpoint
+     * received the maximum number of messages allowed by the campaign.
+     * SERVICE_FAILURE - A service-level failure prevented Amazon Pinpoint from
+     * delivering the message. UNKNOWN - An unknown error occurred.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
@@ -110,14 +110,14 @@ public EndpointMessageResult withAddress(String address) {
      * delivering the message to the endpoint. Amazon Pinpoint won't attempt to
      * send the message again. TIMEOUT - The message couldn't be sent within the
      * timeout period. QUIET_TIME - The local time for the endpoint was within
-     * the Quiet Hours for the campaign. DAILY_CAP - The endpoint has received
-     * the maximum number of messages it can receive within a 24-hour period.
-     * HOLDOUT - The endpoint was in a hold out treatment for the campaign.
-     * THROTTLED - Amazon Pinpoint throttled sending to this endpoint. EXPIRED -
-     * The endpoint address is expired. CAMPAIGN_CAP - The endpoint received the
-     * maximum number of messages allowed by the campaign. SERVICE_FAILURE - A
-     * service-level failure prevented Amazon Pinpoint from delivering the
-     * message. UNKNOWN - An unknown error occurred.
+     * the QuietTime for the campaign or app. DAILY_CAP - The endpoint has
+     * received the maximum number of messages it can receive within a 24-hour
+     * period. HOLDOUT - The endpoint was in a hold out treatment for the
+     * campaign. THROTTLED - Amazon Pinpoint throttled sending to this endpoint.
+     * EXPIRED - The endpoint address is expired. CAMPAIGN_CAP - The endpoint
+     * received the maximum number of messages allowed by the campaign.
+     * SERVICE_FAILURE - A service-level failure prevented Amazon Pinpoint from
+     * delivering the message. UNKNOWN - An unknown error occurred.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
@@ -131,15 +131,16 @@ public EndpointMessageResult withAddress(String address) {
      *         to the endpoint. Amazon Pinpoint won't attempt to send the
      *         message again. TIMEOUT - The message couldn't be sent within the
      *         timeout period. QUIET_TIME - The local time for the endpoint was
-     *         within the Quiet Hours for the campaign. DAILY_CAP - The endpoint
-     *         has received the maximum number of messages it can receive within
-     *         a 24-hour period. HOLDOUT - The endpoint was in a hold out
-     *         treatment for the campaign. THROTTLED - Amazon Pinpoint throttled
-     *         sending to this endpoint. EXPIRED - The endpoint address is
-     *         expired. CAMPAIGN_CAP - The endpoint received the maximum number
-     *         of messages allowed by the campaign. SERVICE_FAILURE - A
-     *         service-level failure prevented Amazon Pinpoint from delivering
-     *         the message. UNKNOWN - An unknown error occurred.
+     *         within the QuietTime for the campaign or app. DAILY_CAP - The
+     *         endpoint has received the maximum number of messages it can
+     *         receive within a 24-hour period. HOLDOUT - The endpoint was in a
+     *         hold out treatment for the campaign. THROTTLED - Amazon Pinpoint
+     *         throttled sending to this endpoint. EXPIRED - The endpoint
+     *         address is expired. CAMPAIGN_CAP - The endpoint received the
+     *         maximum number of messages allowed by the campaign.
+     *         SERVICE_FAILURE - A service-level failure prevented Amazon
+     *         Pinpoint from delivering the message. UNKNOWN - An unknown error
+     *         occurred.
      * @see DeliveryStatus
      */
     public String getDeliveryStatus() {
@@ -154,14 +155,14 @@ public String getDeliveryStatus() {
      * delivering the message to the endpoint. Amazon Pinpoint won't attempt to
      * send the message again. TIMEOUT - The message couldn't be sent within the
      * timeout period. QUIET_TIME - The local time for the endpoint was within
-     * the Quiet Hours for the campaign. DAILY_CAP - The endpoint has received
-     * the maximum number of messages it can receive within a 24-hour period.
-     * HOLDOUT - The endpoint was in a hold out treatment for the campaign.
-     * THROTTLED - Amazon Pinpoint throttled sending to this endpoint. EXPIRED -
-     * The endpoint address is expired. CAMPAIGN_CAP - The endpoint received the
-     * maximum number of messages allowed by the campaign. SERVICE_FAILURE - A
-     * service-level failure prevented Amazon Pinpoint from delivering the
-     * message. UNKNOWN - An unknown error occurred.
+     * the QuietTime for the campaign or app. DAILY_CAP - The endpoint has
+     * received the maximum number of messages it can receive within a 24-hour
+     * period. HOLDOUT - The endpoint was in a hold out treatment for the
+     * campaign. THROTTLED - Amazon Pinpoint throttled sending to this endpoint.
+     * EXPIRED - The endpoint address is expired. CAMPAIGN_CAP - The endpoint
+     * received the maximum number of messages allowed by the campaign.
+     * SERVICE_FAILURE - A service-level failure prevented Amazon Pinpoint from
+     * delivering the message. UNKNOWN - An unknown error occurred.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
@@ -175,7 +176,7 @@ public String getDeliveryStatus() {
      *            the message to the endpoint. Amazon Pinpoint won't attempt to
      *            send the message again. TIMEOUT - The message couldn't be sent
      *            within the timeout period. QUIET_TIME - The local time for the
-     *            endpoint was within the Quiet Hours for the campaign.
+     *            endpoint was within the QuietTime for the campaign or app.
      *            DAILY_CAP - The endpoint has received the maximum number of
      *            messages it can receive within a 24-hour period. HOLDOUT - The
      *            endpoint was in a hold out treatment for the campaign.
@@ -199,14 +200,14 @@ public void setDeliveryStatus(String deliveryStatus) {
      * delivering the message to the endpoint. Amazon Pinpoint won't attempt to
      * send the message again. TIMEOUT - The message couldn't be sent within the
      * timeout period. QUIET_TIME - The local time for the endpoint was within
-     * the Quiet Hours for the campaign. DAILY_CAP - The endpoint has received
-     * the maximum number of messages it can receive within a 24-hour period.
-     * HOLDOUT - The endpoint was in a hold out treatment for the campaign.
-     * THROTTLED - Amazon Pinpoint throttled sending to this endpoint. EXPIRED -
-     * The endpoint address is expired. CAMPAIGN_CAP - The endpoint received the
-     * maximum number of messages allowed by the campaign. SERVICE_FAILURE - A
-     * service-level failure prevented Amazon Pinpoint from delivering the
-     * message. UNKNOWN - An unknown error occurred.
+     * the QuietTime for the campaign or app. DAILY_CAP - The endpoint has
+     * received the maximum number of messages it can receive within a 24-hour
+     * period. HOLDOUT - The endpoint was in a hold out treatment for the
+     * campaign. THROTTLED - Amazon Pinpoint throttled sending to this endpoint.
+     * EXPIRED - The endpoint address is expired. CAMPAIGN_CAP - The endpoint
+     * received the maximum number of messages allowed by the campaign.
+     * SERVICE_FAILURE - A service-level failure prevented Amazon Pinpoint from
+     * delivering the message. UNKNOWN - An unknown error occurred.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
@@ -223,7 +224,7 @@ public void setDeliveryStatus(String deliveryStatus) {
      *            the message to the endpoint. Amazon Pinpoint won't attempt to
      *            send the message again. TIMEOUT - The message couldn't be sent
      *            within the timeout period. QUIET_TIME - The local time for the
-     *            endpoint was within the Quiet Hours for the campaign.
+     *            endpoint was within the QuietTime for the campaign or app.
      *            DAILY_CAP - The endpoint has received the maximum number of
      *            messages it can receive within a 24-hour period. HOLDOUT - The
      *            endpoint was in a hold out treatment for the campaign.
@@ -250,14 +251,14 @@ public EndpointMessageResult withDeliveryStatus(String deliveryStatus) {
      * delivering the message to the endpoint. Amazon Pinpoint won't attempt to
      * send the message again. TIMEOUT - The message couldn't be sent within the
      * timeout period. QUIET_TIME - The local time for the endpoint was within
-     * the Quiet Hours for the campaign. DAILY_CAP - The endpoint has received
-     * the maximum number of messages it can receive within a 24-hour period.
-     * HOLDOUT - The endpoint was in a hold out treatment for the campaign.
-     * THROTTLED - Amazon Pinpoint throttled sending to this endpoint. EXPIRED -
-     * The endpoint address is expired. CAMPAIGN_CAP - The endpoint received the
-     * maximum number of messages allowed by the campaign. SERVICE_FAILURE - A
-     * service-level failure prevented Amazon Pinpoint from delivering the
-     * message. UNKNOWN - An unknown error occurred.
+     * the QuietTime for the campaign or app. DAILY_CAP - The endpoint has
+     * received the maximum number of messages it can receive within a 24-hour
+     * period. HOLDOUT - The endpoint was in a hold out treatment for the
+     * campaign. THROTTLED - Amazon Pinpoint throttled sending to this endpoint.
+     * EXPIRED - The endpoint address is expired. CAMPAIGN_CAP - The endpoint
+     * received the maximum number of messages allowed by the campaign.
+     * SERVICE_FAILURE - A service-level failure prevented Amazon Pinpoint from
+     * delivering the message. UNKNOWN - An unknown error occurred.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
@@ -271,7 +272,7 @@ public EndpointMessageResult withDeliveryStatus(String deliveryStatus) {
      *            the message to the endpoint. Amazon Pinpoint won't attempt to
      *            send the message again. TIMEOUT - The message couldn't be sent
      *            within the timeout period. QUIET_TIME - The local time for the
-     *            endpoint was within the Quiet Hours for the campaign.
+     *            endpoint was within the QuietTime for the campaign or app.
      *            DAILY_CAP - The endpoint has received the maximum number of
      *            messages it can receive within a 24-hour period. HOLDOUT - The
      *            endpoint was in a hold out treatment for the campaign.
@@ -295,14 +296,14 @@ public void setDeliveryStatus(DeliveryStatus deliveryStatus) {
      * delivering the message to the endpoint. Amazon Pinpoint won't attempt to
      * send the message again. TIMEOUT - The message couldn't be sent within the
      * timeout period. QUIET_TIME - The local time for the endpoint was within
-     * the Quiet Hours for the campaign. DAILY_CAP - The endpoint has received
-     * the maximum number of messages it can receive within a 24-hour period.
-     * HOLDOUT - The endpoint was in a hold out treatment for the campaign.
-     * THROTTLED - Amazon Pinpoint throttled sending to this endpoint. EXPIRED -
-     * The endpoint address is expired. CAMPAIGN_CAP - The endpoint received the
-     * maximum number of messages allowed by the campaign. SERVICE_FAILURE - A
-     * service-level failure prevented Amazon Pinpoint from delivering the
-     * message. UNKNOWN - An unknown error occurred.
+     * the QuietTime for the campaign or app. DAILY_CAP - The endpoint has
+     * received the maximum number of messages it can receive within a 24-hour
+     * period. HOLDOUT - The endpoint was in a hold out treatment for the
+     * campaign. THROTTLED - Amazon Pinpoint throttled sending to this endpoint.
+     * EXPIRED - The endpoint address is expired. CAMPAIGN_CAP - The endpoint
+     * received the maximum number of messages allowed by the campaign.
+     * SERVICE_FAILURE - A service-level failure prevented Amazon Pinpoint from
+     * delivering the message. UNKNOWN - An unknown error occurred.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
@@ -319,7 +320,7 @@ public void setDeliveryStatus(DeliveryStatus deliveryStatus) {
      *            the message to the endpoint. Amazon Pinpoint won't attempt to
      *            send the message again. TIMEOUT - The message couldn't be sent
      *            within the timeout period. QUIET_TIME - The local time for the
-     *            endpoint was within the Quiet Hours for the campaign.
+     *            endpoint was within the QuietTime for the campaign or app.
      *            DAILY_CAP - The endpoint has received the maximum number of
      *            messages it can receive within a 24-hour period. HOLDOUT - The
      *            endpoint was in a hold out treatment for the campaign.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointRequest.java
index e6b0da53e7..a602f41de5 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointRequest.java
@@ -18,7 +18,7 @@
 import java.io.Serializable;
 
 /**
- * Endpoint update request
+ * An endpoint update request.
  */
 public class EndpointRequest implements Serializable {
     /**
@@ -49,7 +49,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      */
     private String channelType;
 
@@ -289,7 +289,7 @@ public EndpointRequest clearAttributesEntries() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @return The channel type. Valid values: GCM | APNS | APNS_SANDBOX |
      *         APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS | EMAIL | BAIDU
@@ -305,7 +305,7 @@ public String getChannelType() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @param channelType The channel type. Valid values: GCM | APNS |
      *            APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS |
@@ -325,7 +325,7 @@ public void setChannelType(String channelType) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @param channelType The channel type. Valid values: GCM | APNS |
      *            APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS |
@@ -345,7 +345,7 @@ public EndpointRequest withChannelType(String channelType) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @param channelType The channel type. Valid values: GCM | APNS |
      *            APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS |
@@ -365,7 +365,7 @@ public void setChannelType(ChannelType channelType) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @param channelType The channel type. Valid values: GCM | APNS |
      *            APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS |
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointResponse.java
index 3860fa6cdc..1f79d223fc 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointResponse.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointResponse.java
@@ -50,7 +50,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      */
     private String channelType;
 
@@ -320,7 +320,7 @@ public EndpointResponse clearAttributesEntries() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @return The channel type. Valid values: GCM | APNS | APNS_SANDBOX |
      *         APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS | EMAIL | BAIDU
@@ -336,7 +336,7 @@ public String getChannelType() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @param channelType The channel type. Valid values: GCM | APNS |
      *            APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS |
@@ -356,7 +356,7 @@ public void setChannelType(String channelType) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @param channelType The channel type. Valid values: GCM | APNS |
      *            APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS |
@@ -376,7 +376,7 @@ public EndpointResponse withChannelType(String channelType) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @param channelType The channel type. Valid values: GCM | APNS |
      *            APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS |
@@ -396,7 +396,7 @@ public void setChannelType(ChannelType channelType) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
-     * APNS_VOIP_SANDBOX, ADM, SMS, EMAIL, BAIDU, CUSTOM
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
      *
      * @param channelType The channel type. Valid values: GCM | APNS |
      *            APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS |
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Event.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Event.java
index a17bc44ad1..7c599b20e2 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Event.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Event.java
@@ -21,6 +21,21 @@
  * Model for creating or updating events.
  */
 public class Event implements Serializable {
+    /**
+     * The new value for the appPackageName property for this object.
+     */
+    private String appPackageName;
+
+    /**
+     * The new value for the appTitle property for this object.
+     */
+    private String appTitle;
+
+    /**
+     * The new value for the appVersionCode property for this object.
+     */
+    private String appVersionCode;
+
     /**
      * Custom attributes that are associated with the event you're adding or
      * updating.
@@ -38,12 +53,17 @@
     private String eventType;
 
     /**
-     * Event metrics
+     * Custom metrics related to the event.
      */
     private java.util.Map<String, Double> metrics;
 
     /**
-     * The session
+     * The new value for the sdkName property for this object.
+     */
+    private String sdkName;
+
+    /**
+     * Information about the session in which the event occurred.
      */
     private Session session;
 
@@ -52,6 +72,109 @@
      */
     private String timestamp;
 
+    /**
+     * Returns the value of the appPackageName property for this object.
+     *
+     * @return The value of the appPackageName property for this object.
+     */
+    public String getAppPackageName() {
+        return appPackageName;
+    }
+
+    /**
+     * Sets the value of appPackageName
+     *
+     * @param appPackageName The new value for the appPackageName property for
+     *            this object.
+     */
+    public void setAppPackageName(String appPackageName) {
+        this.appPackageName = appPackageName;
+    }
+
+    /**
+     * Sets the value of the appPackageName property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param appPackageName The new value for the appPackageName property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public Event withAppPackageName(String appPackageName) {
+        this.appPackageName = appPackageName;
+        return this;
+    }
+
+    /**
+     * Returns the value of the appTitle property for this object.
+     *
+     * @return The value of the appTitle property for this object.
+     */
+    public String getAppTitle() {
+        return appTitle;
+    }
+
+    /**
+     * Sets the value of appTitle
+     *
+     * @param appTitle The new value for the appTitle property for this object.
+     */
+    public void setAppTitle(String appTitle) {
+        this.appTitle = appTitle;
+    }
+
+    /**
+     * Sets the value of the appTitle property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param appTitle The new value for the appTitle property for this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public Event withAppTitle(String appTitle) {
+        this.appTitle = appTitle;
+        return this;
+    }
+
+    /**
+     * Returns the value of the appVersionCode property for this object.
+     *
+     * @return The value of the appVersionCode property for this object.
+     */
+    public String getAppVersionCode() {
+        return appVersionCode;
+    }
+
+    /**
+     * Sets the value of appVersionCode
+     *
+     * @param appVersionCode The new value for the appVersionCode property for
+     *            this object.
+     */
+    public void setAppVersionCode(String appVersionCode) {
+        this.appVersionCode = appVersionCode;
+    }
+
+    /**
+     * Sets the value of the appVersionCode property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param appVersionCode The new value for the appVersionCode property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public Event withAppVersionCode(String appVersionCode) {
+        this.appVersionCode = appVersionCode;
+        return this;
+    }
+
     /**
      * Custom attributes that are associated with the event you're adding or
      * updating.
@@ -196,30 +319,30 @@ public Event withEventType(String eventType) {
     }
 
     /**
-     * Event metrics
+     * Custom metrics related to the event.
      *
-     * @return Event metrics
+     * @return Custom metrics related to the event.
      */
     public java.util.Map<String, Double> getMetrics() {
         return metrics;
     }
 
     /**
-     * Event metrics
+     * Custom metrics related to the event.
      *
-     * @param metrics Event metrics
+     * @param metrics Custom metrics related to the event.
      */
     public void setMetrics(java.util.Map<String, Double> metrics) {
         this.metrics = metrics;
     }
 
     /**
-     * Event metrics
+     * Custom metrics related to the event.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param metrics Event metrics
+     * @param metrics Custom metrics related to the event.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -229,7 +352,7 @@ public Event withMetrics(java.util.Map<String, Double> metrics) {
     }
 
     /**
-     * Event metrics
+     * Custom metrics related to the event.
      * <p>
      * The method adds a new key-value pair into Metrics parameter, and returns
      * a reference to this object so that method calls can be chained together.
@@ -263,30 +386,63 @@ public Event clearMetricsEntries() {
     }
 
     /**
-     * The session
+     * Returns the value of the sdkName property for this object.
+     *
+     * @return The value of the sdkName property for this object.
+     */
+    public String getSdkName() {
+        return sdkName;
+    }
+
+    /**
+     * Sets the value of sdkName
      *
-     * @return The session
+     * @param sdkName The new value for the sdkName property for this object.
+     */
+    public void setSdkName(String sdkName) {
+        this.sdkName = sdkName;
+    }
+
+    /**
+     * Sets the value of the sdkName property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param sdkName The new value for the sdkName property for this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public Event withSdkName(String sdkName) {
+        this.sdkName = sdkName;
+        return this;
+    }
+
+    /**
+     * Information about the session in which the event occurred.
+     *
+     * @return Information about the session in which the event occurred.
      */
     public Session getSession() {
         return session;
     }
 
     /**
-     * The session
+     * Information about the session in which the event occurred.
      *
-     * @param session The session
+     * @param session Information about the session in which the event occurred.
      */
     public void setSession(Session session) {
         this.session = session;
     }
 
     /**
-     * The session
+     * Information about the session in which the event occurred.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param session The session
+     * @param session Information about the session in which the event occurred.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -341,6 +497,12 @@ public Event withTimestamp(String timestamp) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
+        if (getAppPackageName() != null)
+            sb.append("AppPackageName: " + getAppPackageName() + ",");
+        if (getAppTitle() != null)
+            sb.append("AppTitle: " + getAppTitle() + ",");
+        if (getAppVersionCode() != null)
+            sb.append("AppVersionCode: " + getAppVersionCode() + ",");
         if (getAttributes() != null)
             sb.append("Attributes: " + getAttributes() + ",");
         if (getClientSdkVersion() != null)
@@ -349,6 +511,8 @@ public String toString() {
             sb.append("EventType: " + getEventType() + ",");
         if (getMetrics() != null)
             sb.append("Metrics: " + getMetrics() + ",");
+        if (getSdkName() != null)
+            sb.append("SdkName: " + getSdkName() + ",");
         if (getSession() != null)
             sb.append("Session: " + getSession() + ",");
         if (getTimestamp() != null)
@@ -362,11 +526,17 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
+        hashCode = prime * hashCode
+                + ((getAppPackageName() == null) ? 0 : getAppPackageName().hashCode());
+        hashCode = prime * hashCode + ((getAppTitle() == null) ? 0 : getAppTitle().hashCode());
+        hashCode = prime * hashCode
+                + ((getAppVersionCode() == null) ? 0 : getAppVersionCode().hashCode());
         hashCode = prime * hashCode + ((getAttributes() == null) ? 0 : getAttributes().hashCode());
         hashCode = prime * hashCode
                 + ((getClientSdkVersion() == null) ? 0 : getClientSdkVersion().hashCode());
         hashCode = prime * hashCode + ((getEventType() == null) ? 0 : getEventType().hashCode());
         hashCode = prime * hashCode + ((getMetrics() == null) ? 0 : getMetrics().hashCode());
+        hashCode = prime * hashCode + ((getSdkName() == null) ? 0 : getSdkName().hashCode());
         hashCode = prime * hashCode + ((getSession() == null) ? 0 : getSession().hashCode());
         hashCode = prime * hashCode + ((getTimestamp() == null) ? 0 : getTimestamp().hashCode());
         return hashCode;
@@ -383,6 +553,20 @@ public boolean equals(Object obj) {
             return false;
         Event other = (Event) obj;
 
+        if (other.getAppPackageName() == null ^ this.getAppPackageName() == null)
+            return false;
+        if (other.getAppPackageName() != null
+                && other.getAppPackageName().equals(this.getAppPackageName()) == false)
+            return false;
+        if (other.getAppTitle() == null ^ this.getAppTitle() == null)
+            return false;
+        if (other.getAppTitle() != null && other.getAppTitle().equals(this.getAppTitle()) == false)
+            return false;
+        if (other.getAppVersionCode() == null ^ this.getAppVersionCode() == null)
+            return false;
+        if (other.getAppVersionCode() != null
+                && other.getAppVersionCode().equals(this.getAppVersionCode()) == false)
+            return false;
         if (other.getAttributes() == null ^ this.getAttributes() == null)
             return false;
         if (other.getAttributes() != null
@@ -402,6 +586,10 @@ public boolean equals(Object obj) {
             return false;
         if (other.getMetrics() != null && other.getMetrics().equals(this.getMetrics()) == false)
             return false;
+        if (other.getSdkName() == null ^ this.getSdkName() == null)
+            return false;
+        if (other.getSdkName() != null && other.getSdkName().equals(this.getSdkName()) == false)
+            return false;
         if (other.getSession() == null ^ this.getSession() == null)
             return false;
         if (other.getSession() != null && other.getSession().equals(this.getSession()) == false)
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventDimensions.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventDimensions.java
new file mode 100644
index 0000000000..a0da72b2ea
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventDimensions.java
@@ -0,0 +1,304 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Event dimensions.
+ */
+public class EventDimensions implements Serializable {
+    /**
+     * Custom attributes that your app reports to Amazon Pinpoint. You can use
+     * these attributes as selection criteria when you create an event filter.
+     */
+    private java.util.Map<String, AttributeDimension> attributes;
+
+    /**
+     * The name of the event that causes the campaign to be sent. This can be a
+     * standard event type that Amazon Pinpoint generates, such as
+     * _session.start, or a custom event that's specific to your app.
+     */
+    private SetDimension eventType;
+
+    /**
+     * Custom metrics that your app reports to Amazon Pinpoint. You can use
+     * these attributes as selection criteria when you create an event filter.
+     */
+    private java.util.Map<String, MetricDimension> metrics;
+
+    /**
+     * Custom attributes that your app reports to Amazon Pinpoint. You can use
+     * these attributes as selection criteria when you create an event filter.
+     *
+     * @return Custom attributes that your app reports to Amazon Pinpoint. You
+     *         can use these attributes as selection criteria when you create an
+     *         event filter.
+     */
+    public java.util.Map<String, AttributeDimension> getAttributes() {
+        return attributes;
+    }
+
+    /**
+     * Custom attributes that your app reports to Amazon Pinpoint. You can use
+     * these attributes as selection criteria when you create an event filter.
+     *
+     * @param attributes Custom attributes that your app reports to Amazon
+     *            Pinpoint. You can use these attributes as selection criteria
+     *            when you create an event filter.
+     */
+    public void setAttributes(java.util.Map<String, AttributeDimension> attributes) {
+        this.attributes = attributes;
+    }
+
+    /**
+     * Custom attributes that your app reports to Amazon Pinpoint. You can use
+     * these attributes as selection criteria when you create an event filter.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param attributes Custom attributes that your app reports to Amazon
+     *            Pinpoint. You can use these attributes as selection criteria
+     *            when you create an event filter.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EventDimensions withAttributes(java.util.Map<String, AttributeDimension> attributes) {
+        this.attributes = attributes;
+        return this;
+    }
+
+    /**
+     * Custom attributes that your app reports to Amazon Pinpoint. You can use
+     * these attributes as selection criteria when you create an event filter.
+     * <p>
+     * The method adds a new key-value pair into Attributes parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into Attributes.
+     * @param value The corresponding value of the entry to be added into
+     *            Attributes.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EventDimensions addAttributesEntry(String key, AttributeDimension value) {
+        if (null == this.attributes) {
+            this.attributes = new java.util.HashMap<String, AttributeDimension>();
+        }
+        if (this.attributes.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.attributes.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Attributes.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public EventDimensions clearAttributesEntries() {
+        this.attributes = null;
+        return this;
+    }
+
+    /**
+     * The name of the event that causes the campaign to be sent. This can be a
+     * standard event type that Amazon Pinpoint generates, such as
+     * _session.start, or a custom event that's specific to your app.
+     *
+     * @return The name of the event that causes the campaign to be sent. This
+     *         can be a standard event type that Amazon Pinpoint generates, such
+     *         as _session.start, or a custom event that's specific to your app.
+     */
+    public SetDimension getEventType() {
+        return eventType;
+    }
+
+    /**
+     * The name of the event that causes the campaign to be sent. This can be a
+     * standard event type that Amazon Pinpoint generates, such as
+     * _session.start, or a custom event that's specific to your app.
+     *
+     * @param eventType The name of the event that causes the campaign to be
+     *            sent. This can be a standard event type that Amazon Pinpoint
+     *            generates, such as _session.start, or a custom event that's
+     *            specific to your app.
+     */
+    public void setEventType(SetDimension eventType) {
+        this.eventType = eventType;
+    }
+
+    /**
+     * The name of the event that causes the campaign to be sent. This can be a
+     * standard event type that Amazon Pinpoint generates, such as
+     * _session.start, or a custom event that's specific to your app.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param eventType The name of the event that causes the campaign to be
+     *            sent. This can be a standard event type that Amazon Pinpoint
+     *            generates, such as _session.start, or a custom event that's
+     *            specific to your app.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EventDimensions withEventType(SetDimension eventType) {
+        this.eventType = eventType;
+        return this;
+    }
+
+    /**
+     * Custom metrics that your app reports to Amazon Pinpoint. You can use
+     * these attributes as selection criteria when you create an event filter.
+     *
+     * @return Custom metrics that your app reports to Amazon Pinpoint. You can
+     *         use these attributes as selection criteria when you create an
+     *         event filter.
+     */
+    public java.util.Map<String, MetricDimension> getMetrics() {
+        return metrics;
+    }
+
+    /**
+     * Custom metrics that your app reports to Amazon Pinpoint. You can use
+     * these attributes as selection criteria when you create an event filter.
+     *
+     * @param metrics Custom metrics that your app reports to Amazon Pinpoint.
+     *            You can use these attributes as selection criteria when you
+     *            create an event filter.
+     */
+    public void setMetrics(java.util.Map<String, MetricDimension> metrics) {
+        this.metrics = metrics;
+    }
+
+    /**
+     * Custom metrics that your app reports to Amazon Pinpoint. You can use
+     * these attributes as selection criteria when you create an event filter.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param metrics Custom metrics that your app reports to Amazon Pinpoint.
+     *            You can use these attributes as selection criteria when you
+     *            create an event filter.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EventDimensions withMetrics(java.util.Map<String, MetricDimension> metrics) {
+        this.metrics = metrics;
+        return this;
+    }
+
+    /**
+     * Custom metrics that your app reports to Amazon Pinpoint. You can use
+     * these attributes as selection criteria when you create an event filter.
+     * <p>
+     * The method adds a new key-value pair into Metrics parameter, and returns
+     * a reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Metrics.
+     * @param value The corresponding value of the entry to be added into
+     *            Metrics.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EventDimensions addMetricsEntry(String key, MetricDimension value) {
+        if (null == this.metrics) {
+            this.metrics = new java.util.HashMap<String, MetricDimension>();
+        }
+        if (this.metrics.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.metrics.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Metrics.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public EventDimensions clearMetricsEntries() {
+        this.metrics = null;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAttributes() != null)
+            sb.append("Attributes: " + getAttributes() + ",");
+        if (getEventType() != null)
+            sb.append("EventType: " + getEventType() + ",");
+        if (getMetrics() != null)
+            sb.append("Metrics: " + getMetrics());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getAttributes() == null) ? 0 : getAttributes().hashCode());
+        hashCode = prime * hashCode + ((getEventType() == null) ? 0 : getEventType().hashCode());
+        hashCode = prime * hashCode + ((getMetrics() == null) ? 0 : getMetrics().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof EventDimensions == false)
+            return false;
+        EventDimensions other = (EventDimensions) obj;
+
+        if (other.getAttributes() == null ^ this.getAttributes() == null)
+            return false;
+        if (other.getAttributes() != null
+                && other.getAttributes().equals(this.getAttributes()) == false)
+            return false;
+        if (other.getEventType() == null ^ this.getEventType() == null)
+            return false;
+        if (other.getEventType() != null
+                && other.getEventType().equals(this.getEventType()) == false)
+            return false;
+        if (other.getMetrics() == null ^ this.getMetrics() == null)
+            return false;
+        if (other.getMetrics() != null && other.getMetrics().equals(this.getMetrics()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventItemResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventItemResponse.java
index 60049b270b..95b76a234f 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventItemResponse.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventItemResponse.java
@@ -18,7 +18,8 @@
 import java.io.Serializable;
 
 /**
- * The responses that are returned after you record an event.
+ * A complex object that holds the status code and message as a result of
+ * processing an event.
  */
 public class EventItemResponse implements Serializable {
     /**
@@ -27,7 +28,9 @@
     private String message;
 
     /**
-     * The status code to respond with for a particular event id
+     * The status returned in the response as a result of processing the event.
+     * Possible values: 400 (for invalid events) and 202 (for events that were
+     * accepted).
      */
     private Integer statusCode;
 
@@ -68,32 +71,42 @@ public EventItemResponse withMessage(String message) {
     }
 
     /**
-     * The status code to respond with for a particular event id
+     * The status returned in the response as a result of processing the event.
+     * Possible values: 400 (for invalid events) and 202 (for events that were
+     * accepted).
      *
-     * @return The status code to respond with for a particular event id
+     * @return The status returned in the response as a result of processing the
+     *         event. Possible values: 400 (for invalid events) and 202 (for
+     *         events that were accepted).
      */
     public Integer getStatusCode() {
         return statusCode;
     }
 
     /**
-     * The status code to respond with for a particular event id
+     * The status returned in the response as a result of processing the event.
+     * Possible values: 400 (for invalid events) and 202 (for events that were
+     * accepted).
      *
-     * @param statusCode The status code to respond with for a particular event
-     *            id
+     * @param statusCode The status returned in the response as a result of
+     *            processing the event. Possible values: 400 (for invalid
+     *            events) and 202 (for events that were accepted).
      */
     public void setStatusCode(Integer statusCode) {
         this.statusCode = statusCode;
     }
 
     /**
-     * The status code to respond with for a particular event id
+     * The status returned in the response as a result of processing the event.
+     * Possible values: 400 (for invalid events) and 202 (for events that were
+     * accepted).
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param statusCode The status code to respond with for a particular event
-     *            id
+     * @param statusCode The status returned in the response as a result of
+     *            processing the event. Possible values: 400 (for invalid
+     *            events) and 202 (for events that were accepted).
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventsBatch.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventsBatch.java
index afb2ad6872..fd4342f93f 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventsBatch.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventsBatch.java
@@ -18,77 +18,82 @@
 import java.io.Serializable;
 
 /**
- * Events batch definition
+ * A batch of PublicEndpoints and Events to process.
  */
 public class EventsBatch implements Serializable {
     /**
-     * Endpoint information
+     * The PublicEndpoint attached to the EndpointId from the request.
      */
-    private EndpointRequest endpoint;
+    private PublicEndpoint endpoint;
 
     /**
-     * Events
+     * An object that contains a set of events associated with the endpoint.
      */
     private java.util.Map<String, Event> events;
 
     /**
-     * Endpoint information
+     * The PublicEndpoint attached to the EndpointId from the request.
      *
-     * @return Endpoint information
+     * @return The PublicEndpoint attached to the EndpointId from the request.
      */
-    public EndpointRequest getEndpoint() {
+    public PublicEndpoint getEndpoint() {
         return endpoint;
     }
 
     /**
-     * Endpoint information
+     * The PublicEndpoint attached to the EndpointId from the request.
      *
-     * @param endpoint Endpoint information
+     * @param endpoint The PublicEndpoint attached to the EndpointId from the
+     *            request.
      */
-    public void setEndpoint(EndpointRequest endpoint) {
+    public void setEndpoint(PublicEndpoint endpoint) {
         this.endpoint = endpoint;
     }
 
     /**
-     * Endpoint information
+     * The PublicEndpoint attached to the EndpointId from the request.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param endpoint Endpoint information
+     * @param endpoint The PublicEndpoint attached to the EndpointId from the
+     *            request.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
-    public EventsBatch withEndpoint(EndpointRequest endpoint) {
+    public EventsBatch withEndpoint(PublicEndpoint endpoint) {
         this.endpoint = endpoint;
         return this;
     }
 
     /**
-     * Events
+     * An object that contains a set of events associated with the endpoint.
      *
-     * @return Events
+     * @return An object that contains a set of events associated with the
+     *         endpoint.
      */
     public java.util.Map<String, Event> getEvents() {
         return events;
     }
 
     /**
-     * Events
+     * An object that contains a set of events associated with the endpoint.
      *
-     * @param events Events
+     * @param events An object that contains a set of events associated with the
+     *            endpoint.
      */
     public void setEvents(java.util.Map<String, Event> events) {
         this.events = events;
     }
 
     /**
-     * Events
+     * An object that contains a set of events associated with the endpoint.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param events Events
+     * @param events An object that contains a set of events associated with the
+     *            endpoint.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -98,7 +103,7 @@ public EventsBatch withEvents(java.util.Map<String, Event> events) {
     }
 
     /**
-     * Events
+     * An object that contains a set of events associated with the endpoint.
      * <p>
      * The method adds a new key-value pair into Events parameter, and returns a
      * reference to this object so that method calls can be chained together.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventsRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventsRequest.java
new file mode 100644
index 0000000000..bcc8d66dfc
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventsRequest.java
@@ -0,0 +1,151 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * A set of events to process.
+ */
+public class EventsRequest implements Serializable {
+    /**
+     * A batch of events to process. Each BatchItem consists of an endpoint ID
+     * as the key, and an EventsBatch object as the value.
+     */
+    private java.util.Map<String, EventsBatch> batchItem;
+
+    /**
+     * A batch of events to process. Each BatchItem consists of an endpoint ID
+     * as the key, and an EventsBatch object as the value.
+     *
+     * @return A batch of events to process. Each BatchItem consists of an
+     *         endpoint ID as the key, and an EventsBatch object as the value.
+     */
+    public java.util.Map<String, EventsBatch> getBatchItem() {
+        return batchItem;
+    }
+
+    /**
+     * A batch of events to process. Each BatchItem consists of an endpoint ID
+     * as the key, and an EventsBatch object as the value.
+     *
+     * @param batchItem A batch of events to process. Each BatchItem consists of
+     *            an endpoint ID as the key, and an EventsBatch object as the
+     *            value.
+     */
+    public void setBatchItem(java.util.Map<String, EventsBatch> batchItem) {
+        this.batchItem = batchItem;
+    }
+
+    /**
+     * A batch of events to process. Each BatchItem consists of an endpoint ID
+     * as the key, and an EventsBatch object as the value.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param batchItem A batch of events to process. Each BatchItem consists of
+     *            an endpoint ID as the key, and an EventsBatch object as the
+     *            value.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EventsRequest withBatchItem(java.util.Map<String, EventsBatch> batchItem) {
+        this.batchItem = batchItem;
+        return this;
+    }
+
+    /**
+     * A batch of events to process. Each BatchItem consists of an endpoint ID
+     * as the key, and an EventsBatch object as the value.
+     * <p>
+     * The method adds a new key-value pair into BatchItem parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into BatchItem.
+     * @param value The corresponding value of the entry to be added into
+     *            BatchItem.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EventsRequest addBatchItemEntry(String key, EventsBatch value) {
+        if (null == this.batchItem) {
+            this.batchItem = new java.util.HashMap<String, EventsBatch>();
+        }
+        if (this.batchItem.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.batchItem.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into BatchItem.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public EventsRequest clearBatchItemEntries() {
+        this.batchItem = null;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getBatchItem() != null)
+            sb.append("BatchItem: " + getBatchItem());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getBatchItem() == null) ? 0 : getBatchItem().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof EventsRequest == false)
+            return false;
+        EventsRequest other = (EventsRequest) obj;
+
+        if (other.getBatchItem() == null ^ this.getBatchItem() == null)
+            return false;
+        if (other.getBatchItem() != null
+                && other.getBatchItem().equals(this.getBatchItem()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventsResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventsResponse.java
new file mode 100644
index 0000000000..0728098048
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventsResponse.java
@@ -0,0 +1,174 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Custom messages associated with events.
+ */
+public class EventsResponse implements Serializable {
+    /**
+     * A map that contains a multipart response for each endpoint. Each item in
+     * this object uses the endpoint ID as the key, and the item response as the
+     * value. If no item response exists, the value can also be one of the
+     * following: 202 (if the request was processed successfully) or 400 (if the
+     * payload was invalid, or required fields were missing).
+     */
+    private java.util.Map<String, ItemResponse> results;
+
+    /**
+     * A map that contains a multipart response for each endpoint. Each item in
+     * this object uses the endpoint ID as the key, and the item response as the
+     * value. If no item response exists, the value can also be one of the
+     * following: 202 (if the request was processed successfully) or 400 (if the
+     * payload was invalid, or required fields were missing).
+     *
+     * @return A map that contains a multipart response for each endpoint. Each
+     *         item in this object uses the endpoint ID as the key, and the item
+     *         response as the value. If no item response exists, the value can
+     *         also be one of the following: 202 (if the request was processed
+     *         successfully) or 400 (if the payload was invalid, or required
+     *         fields were missing).
+     */
+    public java.util.Map<String, ItemResponse> getResults() {
+        return results;
+    }
+
+    /**
+     * A map that contains a multipart response for each endpoint. Each item in
+     * this object uses the endpoint ID as the key, and the item response as the
+     * value. If no item response exists, the value can also be one of the
+     * following: 202 (if the request was processed successfully) or 400 (if the
+     * payload was invalid, or required fields were missing).
+     *
+     * @param results A map that contains a multipart response for each
+     *            endpoint. Each item in this object uses the endpoint ID as the
+     *            key, and the item response as the value. If no item response
+     *            exists, the value can also be one of the following: 202 (if
+     *            the request was processed successfully) or 400 (if the payload
+     *            was invalid, or required fields were missing).
+     */
+    public void setResults(java.util.Map<String, ItemResponse> results) {
+        this.results = results;
+    }
+
+    /**
+     * A map that contains a multipart response for each endpoint. Each item in
+     * this object uses the endpoint ID as the key, and the item response as the
+     * value. If no item response exists, the value can also be one of the
+     * following: 202 (if the request was processed successfully) or 400 (if the
+     * payload was invalid, or required fields were missing).
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param results A map that contains a multipart response for each
+     *            endpoint. Each item in this object uses the endpoint ID as the
+     *            key, and the item response as the value. If no item response
+     *            exists, the value can also be one of the following: 202 (if
+     *            the request was processed successfully) or 400 (if the payload
+     *            was invalid, or required fields were missing).
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EventsResponse withResults(java.util.Map<String, ItemResponse> results) {
+        this.results = results;
+        return this;
+    }
+
+    /**
+     * A map that contains a multipart response for each endpoint. Each item in
+     * this object uses the endpoint ID as the key, and the item response as the
+     * value. If no item response exists, the value can also be one of the
+     * following: 202 (if the request was processed successfully) or 400 (if the
+     * payload was invalid, or required fields were missing).
+     * <p>
+     * The method adds a new key-value pair into Results parameter, and returns
+     * a reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Results.
+     * @param value The corresponding value of the entry to be added into
+     *            Results.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EventsResponse addResultsEntry(String key, ItemResponse value) {
+        if (null == this.results) {
+            this.results = new java.util.HashMap<String, ItemResponse>();
+        }
+        if (this.results.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.results.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Results.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public EventsResponse clearResultsEntries() {
+        this.results = null;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getResults() != null)
+            sb.append("Results: " + getResults());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getResults() == null) ? 0 : getResults().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof EventsResponse == false)
+            return false;
+        EventsResponse other = (EventsResponse) obj;
+
+        if (other.getResults() == null ^ this.getResults() == null)
+            return false;
+        if (other.getResults() != null && other.getResults().equals(this.getResults()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/FilterType.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/FilterType.java
new file mode 100644
index 0000000000..1434327309
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/FilterType.java
@@ -0,0 +1,62 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Filter Type
+ */
+public enum FilterType {
+
+    SYSTEM("SYSTEM"),
+    ENDPOINT("ENDPOINT");
+
+    private String value;
+
+    private FilterType(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, FilterType> enumMap;
+    static {
+        enumMap = new HashMap<String, FilterType>();
+        enumMap.put("SYSTEM", SYSTEM);
+        enumMap.put("ENDPOINT", ENDPOINT);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return FilterType corresponding to the value
+     */
+    public static FilterType fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Frequency.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Frequency.java
index 1d8795bd46..80470d3c40 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Frequency.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Frequency.java
@@ -27,7 +27,8 @@
     HOURLY("HOURLY"),
     DAILY("DAILY"),
     WEEKLY("WEEKLY"),
-    MONTHLY("MONTHLY");
+    MONTHLY("MONTHLY"),
+    EVENT("EVENT");
 
     private String value;
 
@@ -48,6 +49,7 @@ public String toString() {
         enumMap.put("DAILY", DAILY);
         enumMap.put("WEEKLY", WEEKLY);
         enumMap.put("MONTHLY", MONTHLY);
+        enumMap.put("EVENT", EVENT);
     }
 
     /**
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetVoiceChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetVoiceChannelRequest.java
new file mode 100644
index 0000000000..0a4cbc1d2c
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetVoiceChannelRequest.java
@@ -0,0 +1,109 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Get a Voice Channel
+ */
+public class GetVoiceChannelRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The unique ID of your Amazon Pinpoint application.
+     */
+    private String applicationId;
+
+    /**
+     * The unique ID of your Amazon Pinpoint application.
+     *
+     * @return The unique ID of your Amazon Pinpoint application.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * The unique ID of your Amazon Pinpoint application.
+     *
+     * @param applicationId The unique ID of your Amazon Pinpoint application.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * The unique ID of your Amazon Pinpoint application.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The unique ID of your Amazon Pinpoint application.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetVoiceChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetVoiceChannelRequest == false)
+            return false;
+        GetVoiceChannelRequest other = (GetVoiceChannelRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetVoiceChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetVoiceChannelResult.java
new file mode 100644
index 0000000000..0984d3017d
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetVoiceChannelResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class GetVoiceChannelResult implements Serializable {
+    /**
+     * Voice Channel Response.
+     */
+    private VoiceChannelResponse voiceChannelResponse;
+
+    /**
+     * Voice Channel Response.
+     *
+     * @return Voice Channel Response.
+     */
+    public VoiceChannelResponse getVoiceChannelResponse() {
+        return voiceChannelResponse;
+    }
+
+    /**
+     * Voice Channel Response.
+     *
+     * @param voiceChannelResponse Voice Channel Response.
+     */
+    public void setVoiceChannelResponse(VoiceChannelResponse voiceChannelResponse) {
+        this.voiceChannelResponse = voiceChannelResponse;
+    }
+
+    /**
+     * Voice Channel Response.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param voiceChannelResponse Voice Channel Response.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetVoiceChannelResult withVoiceChannelResponse(VoiceChannelResponse voiceChannelResponse) {
+        this.voiceChannelResponse = voiceChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getVoiceChannelResponse() != null)
+            sb.append("VoiceChannelResponse: " + getVoiceChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getVoiceChannelResponse() == null) ? 0 : getVoiceChannelResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetVoiceChannelResult == false)
+            return false;
+        GetVoiceChannelResult other = (GetVoiceChannelResult) obj;
+
+        if (other.getVoiceChannelResponse() == null ^ this.getVoiceChannelResponse() == null)
+            return false;
+        if (other.getVoiceChannelResponse() != null
+                && other.getVoiceChannelResponse().equals(this.getVoiceChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ItemResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ItemResponse.java
index 78dc30bf26..e18697aecc 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ItemResponse.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ItemResponse.java
@@ -18,47 +18,48 @@
 import java.io.Serializable;
 
 /**
- * The endpoint and events combined response definition
+ * The response that's provided after registering the endpoint.
  */
 public class ItemResponse implements Serializable {
     /**
-     * Endpoint item response after endpoint registration
+     * The response received after the endpoint was accepted.
      */
     private EndpointItemResponse endpointItemResponse;
 
     /**
-     * Events item response is a multipart response object per event Id, with
-     * eventId as the key and EventItemResponse object as the value
+     * A multipart response object that contains a key and value for each event
+     * ID in the request. In each object, the event ID is the key, and an
+     * EventItemResponse object is the value.
      */
     private java.util.Map<String, EventItemResponse> eventsItemResponse;
 
     /**
-     * Endpoint item response after endpoint registration
+     * The response received after the endpoint was accepted.
      *
-     * @return Endpoint item response after endpoint registration
+     * @return The response received after the endpoint was accepted.
      */
     public EndpointItemResponse getEndpointItemResponse() {
         return endpointItemResponse;
     }
 
     /**
-     * Endpoint item response after endpoint registration
+     * The response received after the endpoint was accepted.
      *
-     * @param endpointItemResponse Endpoint item response after endpoint
-     *            registration
+     * @param endpointItemResponse The response received after the endpoint was
+     *            accepted.
      */
     public void setEndpointItemResponse(EndpointItemResponse endpointItemResponse) {
         this.endpointItemResponse = endpointItemResponse;
     }
 
     /**
-     * Endpoint item response after endpoint registration
+     * The response received after the endpoint was accepted.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param endpointItemResponse Endpoint item response after endpoint
-     *            registration
+     * @param endpointItemResponse The response received after the endpoint was
+     *            accepted.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -68,38 +69,44 @@ public ItemResponse withEndpointItemResponse(EndpointItemResponse endpointItemRe
     }
 
     /**
-     * Events item response is a multipart response object per event Id, with
-     * eventId as the key and EventItemResponse object as the value
+     * A multipart response object that contains a key and value for each event
+     * ID in the request. In each object, the event ID is the key, and an
+     * EventItemResponse object is the value.
      *
-     * @return Events item response is a multipart response object per event Id,
-     *         with eventId as the key and EventItemResponse object as the value
+     * @return A multipart response object that contains a key and value for
+     *         each event ID in the request. In each object, the event ID is the
+     *         key, and an EventItemResponse object is the value.
      */
     public java.util.Map<String, EventItemResponse> getEventsItemResponse() {
         return eventsItemResponse;
     }
 
     /**
-     * Events item response is a multipart response object per event Id, with
-     * eventId as the key and EventItemResponse object as the value
+     * A multipart response object that contains a key and value for each event
+     * ID in the request. In each object, the event ID is the key, and an
+     * EventItemResponse object is the value.
      *
-     * @param eventsItemResponse Events item response is a multipart response
-     *            object per event Id, with eventId as the key and
-     *            EventItemResponse object as the value
+     * @param eventsItemResponse A multipart response object that contains a key
+     *            and value for each event ID in the request. In each object,
+     *            the event ID is the key, and an EventItemResponse object is
+     *            the value.
      */
     public void setEventsItemResponse(java.util.Map<String, EventItemResponse> eventsItemResponse) {
         this.eventsItemResponse = eventsItemResponse;
     }
 
     /**
-     * Events item response is a multipart response object per event Id, with
-     * eventId as the key and EventItemResponse object as the value
+     * A multipart response object that contains a key and value for each event
+     * ID in the request. In each object, the event ID is the key, and an
+     * EventItemResponse object is the value.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param eventsItemResponse Events item response is a multipart response
-     *            object per event Id, with eventId as the key and
-     *            EventItemResponse object as the value
+     * @param eventsItemResponse A multipart response object that contains a key
+     *            and value for each event ID in the request. In each object,
+     *            the event ID is the key, and an EventItemResponse object is
+     *            the value.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -110,8 +117,9 @@ public ItemResponse withEventsItemResponse(
     }
 
     /**
-     * Events item response is a multipart response object per event Id, with
-     * eventId as the key and EventItemResponse object as the value
+     * A multipart response object that contains a key and value for each event
+     * ID in the request. In each object, the event ID is the key, and an
+     * EventItemResponse object is the value.
      * <p>
      * The method adds a new key-value pair into EventsItemResponse parameter,
      * and returns a reference to this object so that method calls can be
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Message.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Message.java
index 8792c270d4..67819da277 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Message.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Message.java
@@ -63,8 +63,8 @@
     private String jsonBody;
 
     /**
-     * The URL that points to the media resource, for example a .mp4 or .gif
-     * file.
+     * A URL that refers to the location of an image or video that you want to
+     * display in the push notification.
      */
     private String mediaUrl;
 
@@ -423,36 +423,36 @@ public Message withJsonBody(String jsonBody) {
     }
 
     /**
-     * The URL that points to the media resource, for example a .mp4 or .gif
-     * file.
+     * A URL that refers to the location of an image or video that you want to
+     * display in the push notification.
      *
-     * @return The URL that points to the media resource, for example a .mp4 or
-     *         .gif file.
+     * @return A URL that refers to the location of an image or video that you
+     *         want to display in the push notification.
      */
     public String getMediaUrl() {
         return mediaUrl;
     }
 
     /**
-     * The URL that points to the media resource, for example a .mp4 or .gif
-     * file.
+     * A URL that refers to the location of an image or video that you want to
+     * display in the push notification.
      *
-     * @param mediaUrl The URL that points to the media resource, for example a
-     *            .mp4 or .gif file.
+     * @param mediaUrl A URL that refers to the location of an image or video
+     *            that you want to display in the push notification.
      */
     public void setMediaUrl(String mediaUrl) {
         this.mediaUrl = mediaUrl;
     }
 
     /**
-     * The URL that points to the media resource, for example a .mp4 or .gif
-     * file.
+     * A URL that refers to the location of an image or video that you want to
+     * display in the push notification.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param mediaUrl The URL that points to the media resource, for example a
-     *            .mp4 or .gif file.
+     * @param mediaUrl A URL that refers to the location of an image or video
+     *            that you want to display in the push notification.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageResult.java
index 31ccfc840f..9fa645a460 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageResult.java
@@ -29,14 +29,14 @@
      * delivering the message to the endpoint. Amazon Pinpoint won't attempt to
      * send the message again. TIMEOUT - The message couldn't be sent within the
      * timeout period. QUIET_TIME - The local time for the endpoint was within
-     * the Quiet Hours for the campaign. DAILY_CAP - The endpoint has received
-     * the maximum number of messages it can receive within a 24-hour period.
-     * HOLDOUT - The endpoint was in a hold out treatment for the campaign.
-     * THROTTLED - Amazon Pinpoint throttled sending to this endpoint. EXPIRED -
-     * The endpoint address is expired. CAMPAIGN_CAP - The endpoint received the
-     * maximum number of messages allowed by the campaign. SERVICE_FAILURE - A
-     * service-level failure prevented Amazon Pinpoint from delivering the
-     * message. UNKNOWN - An unknown error occurred.
+     * the QuietTime for the campaign or app. DAILY_CAP - The endpoint has
+     * received the maximum number of messages it can receive within a 24-hour
+     * period. HOLDOUT - The endpoint was in a hold out treatment for the
+     * campaign. THROTTLED - Amazon Pinpoint throttled sending to this endpoint.
+     * EXPIRED - The endpoint address is expired. CAMPAIGN_CAP - The endpoint
+     * received the maximum number of messages allowed by the campaign.
+     * SERVICE_FAILURE - A service-level failure prevented Amazon Pinpoint from
+     * delivering the message. UNKNOWN - An unknown error occurred.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
@@ -72,14 +72,14 @@
      * delivering the message to the endpoint. Amazon Pinpoint won't attempt to
      * send the message again. TIMEOUT - The message couldn't be sent within the
      * timeout period. QUIET_TIME - The local time for the endpoint was within
-     * the Quiet Hours for the campaign. DAILY_CAP - The endpoint has received
-     * the maximum number of messages it can receive within a 24-hour period.
-     * HOLDOUT - The endpoint was in a hold out treatment for the campaign.
-     * THROTTLED - Amazon Pinpoint throttled sending to this endpoint. EXPIRED -
-     * The endpoint address is expired. CAMPAIGN_CAP - The endpoint received the
-     * maximum number of messages allowed by the campaign. SERVICE_FAILURE - A
-     * service-level failure prevented Amazon Pinpoint from delivering the
-     * message. UNKNOWN - An unknown error occurred.
+     * the QuietTime for the campaign or app. DAILY_CAP - The endpoint has
+     * received the maximum number of messages it can receive within a 24-hour
+     * period. HOLDOUT - The endpoint was in a hold out treatment for the
+     * campaign. THROTTLED - Amazon Pinpoint throttled sending to this endpoint.
+     * EXPIRED - The endpoint address is expired. CAMPAIGN_CAP - The endpoint
+     * received the maximum number of messages allowed by the campaign.
+     * SERVICE_FAILURE - A service-level failure prevented Amazon Pinpoint from
+     * delivering the message. UNKNOWN - An unknown error occurred.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
@@ -93,15 +93,16 @@
      *         to the endpoint. Amazon Pinpoint won't attempt to send the
      *         message again. TIMEOUT - The message couldn't be sent within the
      *         timeout period. QUIET_TIME - The local time for the endpoint was
-     *         within the Quiet Hours for the campaign. DAILY_CAP - The endpoint
-     *         has received the maximum number of messages it can receive within
-     *         a 24-hour period. HOLDOUT - The endpoint was in a hold out
-     *         treatment for the campaign. THROTTLED - Amazon Pinpoint throttled
-     *         sending to this endpoint. EXPIRED - The endpoint address is
-     *         expired. CAMPAIGN_CAP - The endpoint received the maximum number
-     *         of messages allowed by the campaign. SERVICE_FAILURE - A
-     *         service-level failure prevented Amazon Pinpoint from delivering
-     *         the message. UNKNOWN - An unknown error occurred.
+     *         within the QuietTime for the campaign or app. DAILY_CAP - The
+     *         endpoint has received the maximum number of messages it can
+     *         receive within a 24-hour period. HOLDOUT - The endpoint was in a
+     *         hold out treatment for the campaign. THROTTLED - Amazon Pinpoint
+     *         throttled sending to this endpoint. EXPIRED - The endpoint
+     *         address is expired. CAMPAIGN_CAP - The endpoint received the
+     *         maximum number of messages allowed by the campaign.
+     *         SERVICE_FAILURE - A service-level failure prevented Amazon
+     *         Pinpoint from delivering the message. UNKNOWN - An unknown error
+     *         occurred.
      * @see DeliveryStatus
      */
     public String getDeliveryStatus() {
@@ -116,14 +117,14 @@ public String getDeliveryStatus() {
      * delivering the message to the endpoint. Amazon Pinpoint won't attempt to
      * send the message again. TIMEOUT - The message couldn't be sent within the
      * timeout period. QUIET_TIME - The local time for the endpoint was within
-     * the Quiet Hours for the campaign. DAILY_CAP - The endpoint has received
-     * the maximum number of messages it can receive within a 24-hour period.
-     * HOLDOUT - The endpoint was in a hold out treatment for the campaign.
-     * THROTTLED - Amazon Pinpoint throttled sending to this endpoint. EXPIRED -
-     * The endpoint address is expired. CAMPAIGN_CAP - The endpoint received the
-     * maximum number of messages allowed by the campaign. SERVICE_FAILURE - A
-     * service-level failure prevented Amazon Pinpoint from delivering the
-     * message. UNKNOWN - An unknown error occurred.
+     * the QuietTime for the campaign or app. DAILY_CAP - The endpoint has
+     * received the maximum number of messages it can receive within a 24-hour
+     * period. HOLDOUT - The endpoint was in a hold out treatment for the
+     * campaign. THROTTLED - Amazon Pinpoint throttled sending to this endpoint.
+     * EXPIRED - The endpoint address is expired. CAMPAIGN_CAP - The endpoint
+     * received the maximum number of messages allowed by the campaign.
+     * SERVICE_FAILURE - A service-level failure prevented Amazon Pinpoint from
+     * delivering the message. UNKNOWN - An unknown error occurred.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
@@ -137,7 +138,7 @@ public String getDeliveryStatus() {
      *            the message to the endpoint. Amazon Pinpoint won't attempt to
      *            send the message again. TIMEOUT - The message couldn't be sent
      *            within the timeout period. QUIET_TIME - The local time for the
-     *            endpoint was within the Quiet Hours for the campaign.
+     *            endpoint was within the QuietTime for the campaign or app.
      *            DAILY_CAP - The endpoint has received the maximum number of
      *            messages it can receive within a 24-hour period. HOLDOUT - The
      *            endpoint was in a hold out treatment for the campaign.
@@ -161,14 +162,14 @@ public void setDeliveryStatus(String deliveryStatus) {
      * delivering the message to the endpoint. Amazon Pinpoint won't attempt to
      * send the message again. TIMEOUT - The message couldn't be sent within the
      * timeout period. QUIET_TIME - The local time for the endpoint was within
-     * the Quiet Hours for the campaign. DAILY_CAP - The endpoint has received
-     * the maximum number of messages it can receive within a 24-hour period.
-     * HOLDOUT - The endpoint was in a hold out treatment for the campaign.
-     * THROTTLED - Amazon Pinpoint throttled sending to this endpoint. EXPIRED -
-     * The endpoint address is expired. CAMPAIGN_CAP - The endpoint received the
-     * maximum number of messages allowed by the campaign. SERVICE_FAILURE - A
-     * service-level failure prevented Amazon Pinpoint from delivering the
-     * message. UNKNOWN - An unknown error occurred.
+     * the QuietTime for the campaign or app. DAILY_CAP - The endpoint has
+     * received the maximum number of messages it can receive within a 24-hour
+     * period. HOLDOUT - The endpoint was in a hold out treatment for the
+     * campaign. THROTTLED - Amazon Pinpoint throttled sending to this endpoint.
+     * EXPIRED - The endpoint address is expired. CAMPAIGN_CAP - The endpoint
+     * received the maximum number of messages allowed by the campaign.
+     * SERVICE_FAILURE - A service-level failure prevented Amazon Pinpoint from
+     * delivering the message. UNKNOWN - An unknown error occurred.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
@@ -185,7 +186,7 @@ public void setDeliveryStatus(String deliveryStatus) {
      *            the message to the endpoint. Amazon Pinpoint won't attempt to
      *            send the message again. TIMEOUT - The message couldn't be sent
      *            within the timeout period. QUIET_TIME - The local time for the
-     *            endpoint was within the Quiet Hours for the campaign.
+     *            endpoint was within the QuietTime for the campaign or app.
      *            DAILY_CAP - The endpoint has received the maximum number of
      *            messages it can receive within a 24-hour period. HOLDOUT - The
      *            endpoint was in a hold out treatment for the campaign.
@@ -212,14 +213,14 @@ public MessageResult withDeliveryStatus(String deliveryStatus) {
      * delivering the message to the endpoint. Amazon Pinpoint won't attempt to
      * send the message again. TIMEOUT - The message couldn't be sent within the
      * timeout period. QUIET_TIME - The local time for the endpoint was within
-     * the Quiet Hours for the campaign. DAILY_CAP - The endpoint has received
-     * the maximum number of messages it can receive within a 24-hour period.
-     * HOLDOUT - The endpoint was in a hold out treatment for the campaign.
-     * THROTTLED - Amazon Pinpoint throttled sending to this endpoint. EXPIRED -
-     * The endpoint address is expired. CAMPAIGN_CAP - The endpoint received the
-     * maximum number of messages allowed by the campaign. SERVICE_FAILURE - A
-     * service-level failure prevented Amazon Pinpoint from delivering the
-     * message. UNKNOWN - An unknown error occurred.
+     * the QuietTime for the campaign or app. DAILY_CAP - The endpoint has
+     * received the maximum number of messages it can receive within a 24-hour
+     * period. HOLDOUT - The endpoint was in a hold out treatment for the
+     * campaign. THROTTLED - Amazon Pinpoint throttled sending to this endpoint.
+     * EXPIRED - The endpoint address is expired. CAMPAIGN_CAP - The endpoint
+     * received the maximum number of messages allowed by the campaign.
+     * SERVICE_FAILURE - A service-level failure prevented Amazon Pinpoint from
+     * delivering the message. UNKNOWN - An unknown error occurred.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
@@ -233,7 +234,7 @@ public MessageResult withDeliveryStatus(String deliveryStatus) {
      *            the message to the endpoint. Amazon Pinpoint won't attempt to
      *            send the message again. TIMEOUT - The message couldn't be sent
      *            within the timeout period. QUIET_TIME - The local time for the
-     *            endpoint was within the Quiet Hours for the campaign.
+     *            endpoint was within the QuietTime for the campaign or app.
      *            DAILY_CAP - The endpoint has received the maximum number of
      *            messages it can receive within a 24-hour period. HOLDOUT - The
      *            endpoint was in a hold out treatment for the campaign.
@@ -257,14 +258,14 @@ public void setDeliveryStatus(DeliveryStatus deliveryStatus) {
      * delivering the message to the endpoint. Amazon Pinpoint won't attempt to
      * send the message again. TIMEOUT - The message couldn't be sent within the
      * timeout period. QUIET_TIME - The local time for the endpoint was within
-     * the Quiet Hours for the campaign. DAILY_CAP - The endpoint has received
-     * the maximum number of messages it can receive within a 24-hour period.
-     * HOLDOUT - The endpoint was in a hold out treatment for the campaign.
-     * THROTTLED - Amazon Pinpoint throttled sending to this endpoint. EXPIRED -
-     * The endpoint address is expired. CAMPAIGN_CAP - The endpoint received the
-     * maximum number of messages allowed by the campaign. SERVICE_FAILURE - A
-     * service-level failure prevented Amazon Pinpoint from delivering the
-     * message. UNKNOWN - An unknown error occurred.
+     * the QuietTime for the campaign or app. DAILY_CAP - The endpoint has
+     * received the maximum number of messages it can receive within a 24-hour
+     * period. HOLDOUT - The endpoint was in a hold out treatment for the
+     * campaign. THROTTLED - Amazon Pinpoint throttled sending to this endpoint.
+     * EXPIRED - The endpoint address is expired. CAMPAIGN_CAP - The endpoint
+     * received the maximum number of messages allowed by the campaign.
+     * SERVICE_FAILURE - A service-level failure prevented Amazon Pinpoint from
+     * delivering the message. UNKNOWN - An unknown error occurred.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
@@ -281,7 +282,7 @@ public void setDeliveryStatus(DeliveryStatus deliveryStatus) {
      *            the message to the endpoint. Amazon Pinpoint won't attempt to
      *            send the message again. TIMEOUT - The message couldn't be sent
      *            within the timeout period. QUIET_TIME - The local time for the
-     *            endpoint was within the Quiet Hours for the campaign.
+     *            endpoint was within the QuietTime for the campaign or app.
      *            DAILY_CAP - The endpoint has received the maximum number of
      *            messages it can receive within a 24-hour period. HOLDOUT - The
      *            endpoint was in a hold out treatment for the campaign.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MetricDimension.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MetricDimension.java
index 1467dfb397..5a7cc23096 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MetricDimension.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MetricDimension.java
@@ -22,47 +22,54 @@
  */
 public class MetricDimension implements Serializable {
     /**
-     * GREATER_THAN | LESS_THAN | GREATER_THAN_OR_EQUAL | LESS_THAN_OR_EQUAL |
+     * The operator that you're using to compare metric values. Possible values:
+     * GREATER_THAN, LESS_THAN, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, or
      * EQUAL
      */
     private String comparisonOperator;
 
     /**
-     * Value to be compared.
+     * The value to be compared.
      */
     private Double value;
 
     /**
-     * GREATER_THAN | LESS_THAN | GREATER_THAN_OR_EQUAL | LESS_THAN_OR_EQUAL |
+     * The operator that you're using to compare metric values. Possible values:
+     * GREATER_THAN, LESS_THAN, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, or
      * EQUAL
      *
-     * @return GREATER_THAN | LESS_THAN | GREATER_THAN_OR_EQUAL |
-     *         LESS_THAN_OR_EQUAL | EQUAL
+     * @return The operator that you're using to compare metric values. Possible
+     *         values: GREATER_THAN, LESS_THAN, GREATER_THAN_OR_EQUAL,
+     *         LESS_THAN_OR_EQUAL, or EQUAL
      */
     public String getComparisonOperator() {
         return comparisonOperator;
     }
 
     /**
-     * GREATER_THAN | LESS_THAN | GREATER_THAN_OR_EQUAL | LESS_THAN_OR_EQUAL |
+     * The operator that you're using to compare metric values. Possible values:
+     * GREATER_THAN, LESS_THAN, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, or
      * EQUAL
      *
-     * @param comparisonOperator GREATER_THAN | LESS_THAN |
-     *            GREATER_THAN_OR_EQUAL | LESS_THAN_OR_EQUAL | EQUAL
+     * @param comparisonOperator The operator that you're using to compare
+     *            metric values. Possible values: GREATER_THAN, LESS_THAN,
+     *            GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, or EQUAL
      */
     public void setComparisonOperator(String comparisonOperator) {
         this.comparisonOperator = comparisonOperator;
     }
 
     /**
-     * GREATER_THAN | LESS_THAN | GREATER_THAN_OR_EQUAL | LESS_THAN_OR_EQUAL |
+     * The operator that you're using to compare metric values. Possible values:
+     * GREATER_THAN, LESS_THAN, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, or
      * EQUAL
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param comparisonOperator GREATER_THAN | LESS_THAN |
-     *            GREATER_THAN_OR_EQUAL | LESS_THAN_OR_EQUAL | EQUAL
+     * @param comparisonOperator The operator that you're using to compare
+     *            metric values. Possible values: GREATER_THAN, LESS_THAN,
+     *            GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, or EQUAL
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -72,30 +79,30 @@ public MetricDimension withComparisonOperator(String comparisonOperator) {
     }
 
     /**
-     * Value to be compared.
+     * The value to be compared.
      *
-     * @return Value to be compared.
+     * @return The value to be compared.
      */
     public Double getValue() {
         return value;
     }
 
     /**
-     * Value to be compared.
+     * The value to be compared.
      *
-     * @param value Value to be compared.
+     * @param value The value to be compared.
      */
     public void setValue(Double value) {
         this.value = value;
     }
 
     /**
-     * Value to be compared.
+     * The value to be compared.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param value Value to be compared.
+     * @param value The value to be compared.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/NumberValidateRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/NumberValidateRequest.java
index bb1f579476..118bda27e8 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/NumberValidateRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/NumberValidateRequest.java
@@ -18,7 +18,7 @@
 import java.io.Serializable;
 
 /**
- * Phone Number Information request.
+ * Phone Number Validate request.
  */
 public class NumberValidateRequest implements Serializable {
     /**
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/NumberValidateResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/NumberValidateResponse.java
index 535f14c9af..33f244d08e 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/NumberValidateResponse.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/NumberValidateResponse.java
@@ -18,7 +18,7 @@
 import java.io.Serializable;
 
 /**
- * Phone Number Information response.
+ * Phone Number Validate response.
  */
 public class NumberValidateResponse implements Serializable {
     /**
@@ -65,8 +65,8 @@
     private String county;
 
     /**
-     * The two-character ISO code for the country or region that you included in
-     * the request body.
+     * The two-character code (in ISO 3166-1 alpha-2 format) for the country or
+     * region in the request body.
      */
     private String originalCountryCodeIso2;
 
@@ -393,36 +393,36 @@ public NumberValidateResponse withCounty(String county) {
     }
 
     /**
-     * The two-character ISO code for the country or region that you included in
-     * the request body.
+     * The two-character code (in ISO 3166-1 alpha-2 format) for the country or
+     * region in the request body.
      *
-     * @return The two-character ISO code for the country or region that you
-     *         included in the request body.
+     * @return The two-character code (in ISO 3166-1 alpha-2 format) for the
+     *         country or region in the request body.
      */
     public String getOriginalCountryCodeIso2() {
         return originalCountryCodeIso2;
     }
 
     /**
-     * The two-character ISO code for the country or region that you included in
-     * the request body.
+     * The two-character code (in ISO 3166-1 alpha-2 format) for the country or
+     * region in the request body.
      *
-     * @param originalCountryCodeIso2 The two-character ISO code for the country
-     *            or region that you included in the request body.
+     * @param originalCountryCodeIso2 The two-character code (in ISO 3166-1
+     *            alpha-2 format) for the country or region in the request body.
      */
     public void setOriginalCountryCodeIso2(String originalCountryCodeIso2) {
         this.originalCountryCodeIso2 = originalCountryCodeIso2;
     }
 
     /**
-     * The two-character ISO code for the country or region that you included in
-     * the request body.
+     * The two-character code (in ISO 3166-1 alpha-2 format) for the country or
+     * region in the request body.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param originalCountryCodeIso2 The two-character ISO code for the country
-     *            or region that you included in the request body.
+     * @param originalCountryCodeIso2 The two-character code (in ISO 3166-1
+     *            alpha-2 format) for the country or region in the request body.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PhoneNumberValidateRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PhoneNumberValidateRequest.java
index 95a6686d26..b21606b166 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PhoneNumberValidateRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PhoneNumberValidateRequest.java
@@ -24,35 +24,35 @@
  */
 public class PhoneNumberValidateRequest extends AmazonWebServiceRequest implements Serializable {
     /**
-     * Phone Number Information request.
+     * Phone Number Validate request.
      */
     private NumberValidateRequest numberValidateRequest;
 
     /**
-     * Phone Number Information request.
+     * Phone Number Validate request.
      *
-     * @return Phone Number Information request.
+     * @return Phone Number Validate request.
      */
     public NumberValidateRequest getNumberValidateRequest() {
         return numberValidateRequest;
     }
 
     /**
-     * Phone Number Information request.
+     * Phone Number Validate request.
      *
-     * @param numberValidateRequest Phone Number Information request.
+     * @param numberValidateRequest Phone Number Validate request.
      */
     public void setNumberValidateRequest(NumberValidateRequest numberValidateRequest) {
         this.numberValidateRequest = numberValidateRequest;
     }
 
     /**
-     * Phone Number Information request.
+     * Phone Number Validate request.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param numberValidateRequest Phone Number Information request.
+     * @param numberValidateRequest Phone Number Validate request.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PhoneNumberValidateResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PhoneNumberValidateResult.java
index e4dcec1fd3..007330fec5 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PhoneNumberValidateResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PhoneNumberValidateResult.java
@@ -19,35 +19,35 @@
 
 public class PhoneNumberValidateResult implements Serializable {
     /**
-     * Phone Number Information response.
+     * Phone Number Validate response.
      */
     private NumberValidateResponse numberValidateResponse;
 
     /**
-     * Phone Number Information response.
+     * Phone Number Validate response.
      *
-     * @return Phone Number Information response.
+     * @return Phone Number Validate response.
      */
     public NumberValidateResponse getNumberValidateResponse() {
         return numberValidateResponse;
     }
 
     /**
-     * Phone Number Information response.
+     * Phone Number Validate response.
      *
-     * @param numberValidateResponse Phone Number Information response.
+     * @param numberValidateResponse Phone Number Validate response.
      */
     public void setNumberValidateResponse(NumberValidateResponse numberValidateResponse) {
         this.numberValidateResponse = numberValidateResponse;
     }
 
     /**
-     * Phone Number Information response.
+     * Phone Number Validate response.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param numberValidateResponse Phone Number Information response.
+     * @param numberValidateResponse Phone Number Validate response.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PublicEndpoint.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PublicEndpoint.java
new file mode 100644
index 0000000000..1a143c4c5f
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PublicEndpoint.java
@@ -0,0 +1,743 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Public endpoint attributes.
+ */
+public class PublicEndpoint implements Serializable {
+    /**
+     * The unique identifier for the recipient. For example, an address could be
+     * a device token, email address, or mobile phone number.
+     */
+    private String address;
+
+    /**
+     * Custom attributes that your app reports to Amazon Pinpoint. You can use
+     * these attributes as selection criteria when you create a segment.
+     */
+    private java.util.Map<String, java.util.List<String>> attributes;
+
+    /**
+     * The channel type. Valid values: APNS, GCM
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
+     */
+    private String channelType;
+
+    /**
+     * The endpoint demographic attributes.
+     */
+    private EndpointDemographic demographic;
+
+    /**
+     * The date and time when the endpoint was last updated, in ISO 8601 format.
+     */
+    private String effectiveDate;
+
+    /**
+     * The status of the endpoint. If the update fails, the value is INACTIVE.
+     * If the endpoint is updated successfully, the value is ACTIVE.
+     */
+    private String endpointStatus;
+
+    /**
+     * The endpoint location attributes.
+     */
+    private EndpointLocation location;
+
+    /**
+     * Custom metrics that your app reports to Amazon Pinpoint.
+     */
+    private java.util.Map<String, Double> metrics;
+
+    /**
+     * Indicates whether a user has opted out of receiving messages with one of
+     * the following values: ALL - User has opted out of all messages. NONE -
+     * Users has not opted out and receives all messages.
+     */
+    private String optOut;
+
+    /**
+     * A unique identifier that is generated each time the endpoint is updated.
+     */
+    private String requestId;
+
+    /**
+     * Custom user-specific attributes that your app reports to Amazon Pinpoint.
+     */
+    private EndpointUser user;
+
+    /**
+     * The unique identifier for the recipient. For example, an address could be
+     * a device token, email address, or mobile phone number.
+     *
+     * @return The unique identifier for the recipient. For example, an address
+     *         could be a device token, email address, or mobile phone number.
+     */
+    public String getAddress() {
+        return address;
+    }
+
+    /**
+     * The unique identifier for the recipient. For example, an address could be
+     * a device token, email address, or mobile phone number.
+     *
+     * @param address The unique identifier for the recipient. For example, an
+     *            address could be a device token, email address, or mobile
+     *            phone number.
+     */
+    public void setAddress(String address) {
+        this.address = address;
+    }
+
+    /**
+     * The unique identifier for the recipient. For example, an address could be
+     * a device token, email address, or mobile phone number.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param address The unique identifier for the recipient. For example, an
+     *            address could be a device token, email address, or mobile
+     *            phone number.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PublicEndpoint withAddress(String address) {
+        this.address = address;
+        return this;
+    }
+
+    /**
+     * Custom attributes that your app reports to Amazon Pinpoint. You can use
+     * these attributes as selection criteria when you create a segment.
+     *
+     * @return Custom attributes that your app reports to Amazon Pinpoint. You
+     *         can use these attributes as selection criteria when you create a
+     *         segment.
+     */
+    public java.util.Map<String, java.util.List<String>> getAttributes() {
+        return attributes;
+    }
+
+    /**
+     * Custom attributes that your app reports to Amazon Pinpoint. You can use
+     * these attributes as selection criteria when you create a segment.
+     *
+     * @param attributes Custom attributes that your app reports to Amazon
+     *            Pinpoint. You can use these attributes as selection criteria
+     *            when you create a segment.
+     */
+    public void setAttributes(java.util.Map<String, java.util.List<String>> attributes) {
+        this.attributes = attributes;
+    }
+
+    /**
+     * Custom attributes that your app reports to Amazon Pinpoint. You can use
+     * these attributes as selection criteria when you create a segment.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param attributes Custom attributes that your app reports to Amazon
+     *            Pinpoint. You can use these attributes as selection criteria
+     *            when you create a segment.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PublicEndpoint withAttributes(java.util.Map<String, java.util.List<String>> attributes) {
+        this.attributes = attributes;
+        return this;
+    }
+
+    /**
+     * Custom attributes that your app reports to Amazon Pinpoint. You can use
+     * these attributes as selection criteria when you create a segment.
+     * <p>
+     * The method adds a new key-value pair into Attributes parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into Attributes.
+     * @param value The corresponding value of the entry to be added into
+     *            Attributes.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PublicEndpoint addAttributesEntry(String key, java.util.List<String> value) {
+        if (null == this.attributes) {
+            this.attributes = new java.util.HashMap<String, java.util.List<String>>();
+        }
+        if (this.attributes.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.attributes.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Attributes.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public PublicEndpoint clearAttributesEntries() {
+        this.attributes = null;
+        return this;
+    }
+
+    /**
+     * The channel type. Valid values: APNS, GCM
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
+     *
+     * @return The channel type. Valid values: APNS, GCM
+     * @see ChannelType
+     */
+    public String getChannelType() {
+        return channelType;
+    }
+
+    /**
+     * The channel type. Valid values: APNS, GCM
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
+     *
+     * @param channelType The channel type. Valid values: APNS, GCM
+     * @see ChannelType
+     */
+    public void setChannelType(String channelType) {
+        this.channelType = channelType;
+    }
+
+    /**
+     * The channel type. Valid values: APNS, GCM
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
+     *
+     * @param channelType The channel type. Valid values: APNS, GCM
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see ChannelType
+     */
+    public PublicEndpoint withChannelType(String channelType) {
+        this.channelType = channelType;
+        return this;
+    }
+
+    /**
+     * The channel type. Valid values: APNS, GCM
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
+     *
+     * @param channelType The channel type. Valid values: APNS, GCM
+     * @see ChannelType
+     */
+    public void setChannelType(ChannelType channelType) {
+        this.channelType = channelType.toString();
+    }
+
+    /**
+     * The channel type. Valid values: APNS, GCM
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, APNS_VOIP,
+     * APNS_VOIP_SANDBOX, ADM, SMS, VOICE, EMAIL, BAIDU, CUSTOM
+     *
+     * @param channelType The channel type. Valid values: APNS, GCM
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see ChannelType
+     */
+    public PublicEndpoint withChannelType(ChannelType channelType) {
+        this.channelType = channelType.toString();
+        return this;
+    }
+
+    /**
+     * The endpoint demographic attributes.
+     *
+     * @return The endpoint demographic attributes.
+     */
+    public EndpointDemographic getDemographic() {
+        return demographic;
+    }
+
+    /**
+     * The endpoint demographic attributes.
+     *
+     * @param demographic The endpoint demographic attributes.
+     */
+    public void setDemographic(EndpointDemographic demographic) {
+        this.demographic = demographic;
+    }
+
+    /**
+     * The endpoint demographic attributes.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param demographic The endpoint demographic attributes.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PublicEndpoint withDemographic(EndpointDemographic demographic) {
+        this.demographic = demographic;
+        return this;
+    }
+
+    /**
+     * The date and time when the endpoint was last updated, in ISO 8601 format.
+     *
+     * @return The date and time when the endpoint was last updated, in ISO 8601
+     *         format.
+     */
+    public String getEffectiveDate() {
+        return effectiveDate;
+    }
+
+    /**
+     * The date and time when the endpoint was last updated, in ISO 8601 format.
+     *
+     * @param effectiveDate The date and time when the endpoint was last
+     *            updated, in ISO 8601 format.
+     */
+    public void setEffectiveDate(String effectiveDate) {
+        this.effectiveDate = effectiveDate;
+    }
+
+    /**
+     * The date and time when the endpoint was last updated, in ISO 8601 format.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param effectiveDate The date and time when the endpoint was last
+     *            updated, in ISO 8601 format.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PublicEndpoint withEffectiveDate(String effectiveDate) {
+        this.effectiveDate = effectiveDate;
+        return this;
+    }
+
+    /**
+     * The status of the endpoint. If the update fails, the value is INACTIVE.
+     * If the endpoint is updated successfully, the value is ACTIVE.
+     *
+     * @return The status of the endpoint. If the update fails, the value is
+     *         INACTIVE. If the endpoint is updated successfully, the value is
+     *         ACTIVE.
+     */
+    public String getEndpointStatus() {
+        return endpointStatus;
+    }
+
+    /**
+     * The status of the endpoint. If the update fails, the value is INACTIVE.
+     * If the endpoint is updated successfully, the value is ACTIVE.
+     *
+     * @param endpointStatus The status of the endpoint. If the update fails,
+     *            the value is INACTIVE. If the endpoint is updated
+     *            successfully, the value is ACTIVE.
+     */
+    public void setEndpointStatus(String endpointStatus) {
+        this.endpointStatus = endpointStatus;
+    }
+
+    /**
+     * The status of the endpoint. If the update fails, the value is INACTIVE.
+     * If the endpoint is updated successfully, the value is ACTIVE.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param endpointStatus The status of the endpoint. If the update fails,
+     *            the value is INACTIVE. If the endpoint is updated
+     *            successfully, the value is ACTIVE.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PublicEndpoint withEndpointStatus(String endpointStatus) {
+        this.endpointStatus = endpointStatus;
+        return this;
+    }
+
+    /**
+     * The endpoint location attributes.
+     *
+     * @return The endpoint location attributes.
+     */
+    public EndpointLocation getLocation() {
+        return location;
+    }
+
+    /**
+     * The endpoint location attributes.
+     *
+     * @param location The endpoint location attributes.
+     */
+    public void setLocation(EndpointLocation location) {
+        this.location = location;
+    }
+
+    /**
+     * The endpoint location attributes.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param location The endpoint location attributes.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PublicEndpoint withLocation(EndpointLocation location) {
+        this.location = location;
+        return this;
+    }
+
+    /**
+     * Custom metrics that your app reports to Amazon Pinpoint.
+     *
+     * @return Custom metrics that your app reports to Amazon Pinpoint.
+     */
+    public java.util.Map<String, Double> getMetrics() {
+        return metrics;
+    }
+
+    /**
+     * Custom metrics that your app reports to Amazon Pinpoint.
+     *
+     * @param metrics Custom metrics that your app reports to Amazon Pinpoint.
+     */
+    public void setMetrics(java.util.Map<String, Double> metrics) {
+        this.metrics = metrics;
+    }
+
+    /**
+     * Custom metrics that your app reports to Amazon Pinpoint.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param metrics Custom metrics that your app reports to Amazon Pinpoint.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PublicEndpoint withMetrics(java.util.Map<String, Double> metrics) {
+        this.metrics = metrics;
+        return this;
+    }
+
+    /**
+     * Custom metrics that your app reports to Amazon Pinpoint.
+     * <p>
+     * The method adds a new key-value pair into Metrics parameter, and returns
+     * a reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Metrics.
+     * @param value The corresponding value of the entry to be added into
+     *            Metrics.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PublicEndpoint addMetricsEntry(String key, Double value) {
+        if (null == this.metrics) {
+            this.metrics = new java.util.HashMap<String, Double>();
+        }
+        if (this.metrics.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.metrics.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Metrics.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public PublicEndpoint clearMetricsEntries() {
+        this.metrics = null;
+        return this;
+    }
+
+    /**
+     * Indicates whether a user has opted out of receiving messages with one of
+     * the following values: ALL - User has opted out of all messages. NONE -
+     * Users has not opted out and receives all messages.
+     *
+     * @return Indicates whether a user has opted out of receiving messages with
+     *         one of the following values: ALL - User has opted out of all
+     *         messages. NONE - Users has not opted out and receives all
+     *         messages.
+     */
+    public String getOptOut() {
+        return optOut;
+    }
+
+    /**
+     * Indicates whether a user has opted out of receiving messages with one of
+     * the following values: ALL - User has opted out of all messages. NONE -
+     * Users has not opted out and receives all messages.
+     *
+     * @param optOut Indicates whether a user has opted out of receiving
+     *            messages with one of the following values: ALL - User has
+     *            opted out of all messages. NONE - Users has not opted out and
+     *            receives all messages.
+     */
+    public void setOptOut(String optOut) {
+        this.optOut = optOut;
+    }
+
+    /**
+     * Indicates whether a user has opted out of receiving messages with one of
+     * the following values: ALL - User has opted out of all messages. NONE -
+     * Users has not opted out and receives all messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param optOut Indicates whether a user has opted out of receiving
+     *            messages with one of the following values: ALL - User has
+     *            opted out of all messages. NONE - Users has not opted out and
+     *            receives all messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PublicEndpoint withOptOut(String optOut) {
+        this.optOut = optOut;
+        return this;
+    }
+
+    /**
+     * A unique identifier that is generated each time the endpoint is updated.
+     *
+     * @return A unique identifier that is generated each time the endpoint is
+     *         updated.
+     */
+    public String getRequestId() {
+        return requestId;
+    }
+
+    /**
+     * A unique identifier that is generated each time the endpoint is updated.
+     *
+     * @param requestId A unique identifier that is generated each time the
+     *            endpoint is updated.
+     */
+    public void setRequestId(String requestId) {
+        this.requestId = requestId;
+    }
+
+    /**
+     * A unique identifier that is generated each time the endpoint is updated.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param requestId A unique identifier that is generated each time the
+     *            endpoint is updated.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PublicEndpoint withRequestId(String requestId) {
+        this.requestId = requestId;
+        return this;
+    }
+
+    /**
+     * Custom user-specific attributes that your app reports to Amazon Pinpoint.
+     *
+     * @return Custom user-specific attributes that your app reports to Amazon
+     *         Pinpoint.
+     */
+    public EndpointUser getUser() {
+        return user;
+    }
+
+    /**
+     * Custom user-specific attributes that your app reports to Amazon Pinpoint.
+     *
+     * @param user Custom user-specific attributes that your app reports to
+     *            Amazon Pinpoint.
+     */
+    public void setUser(EndpointUser user) {
+        this.user = user;
+    }
+
+    /**
+     * Custom user-specific attributes that your app reports to Amazon Pinpoint.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param user Custom user-specific attributes that your app reports to
+     *            Amazon Pinpoint.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PublicEndpoint withUser(EndpointUser user) {
+        this.user = user;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAddress() != null)
+            sb.append("Address: " + getAddress() + ",");
+        if (getAttributes() != null)
+            sb.append("Attributes: " + getAttributes() + ",");
+        if (getChannelType() != null)
+            sb.append("ChannelType: " + getChannelType() + ",");
+        if (getDemographic() != null)
+            sb.append("Demographic: " + getDemographic() + ",");
+        if (getEffectiveDate() != null)
+            sb.append("EffectiveDate: " + getEffectiveDate() + ",");
+        if (getEndpointStatus() != null)
+            sb.append("EndpointStatus: " + getEndpointStatus() + ",");
+        if (getLocation() != null)
+            sb.append("Location: " + getLocation() + ",");
+        if (getMetrics() != null)
+            sb.append("Metrics: " + getMetrics() + ",");
+        if (getOptOut() != null)
+            sb.append("OptOut: " + getOptOut() + ",");
+        if (getRequestId() != null)
+            sb.append("RequestId: " + getRequestId() + ",");
+        if (getUser() != null)
+            sb.append("User: " + getUser());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getAddress() == null) ? 0 : getAddress().hashCode());
+        hashCode = prime * hashCode + ((getAttributes() == null) ? 0 : getAttributes().hashCode());
+        hashCode = prime * hashCode
+                + ((getChannelType() == null) ? 0 : getChannelType().hashCode());
+        hashCode = prime * hashCode
+                + ((getDemographic() == null) ? 0 : getDemographic().hashCode());
+        hashCode = prime * hashCode
+                + ((getEffectiveDate() == null) ? 0 : getEffectiveDate().hashCode());
+        hashCode = prime * hashCode
+                + ((getEndpointStatus() == null) ? 0 : getEndpointStatus().hashCode());
+        hashCode = prime * hashCode + ((getLocation() == null) ? 0 : getLocation().hashCode());
+        hashCode = prime * hashCode + ((getMetrics() == null) ? 0 : getMetrics().hashCode());
+        hashCode = prime * hashCode + ((getOptOut() == null) ? 0 : getOptOut().hashCode());
+        hashCode = prime * hashCode + ((getRequestId() == null) ? 0 : getRequestId().hashCode());
+        hashCode = prime * hashCode + ((getUser() == null) ? 0 : getUser().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof PublicEndpoint == false)
+            return false;
+        PublicEndpoint other = (PublicEndpoint) obj;
+
+        if (other.getAddress() == null ^ this.getAddress() == null)
+            return false;
+        if (other.getAddress() != null && other.getAddress().equals(this.getAddress()) == false)
+            return false;
+        if (other.getAttributes() == null ^ this.getAttributes() == null)
+            return false;
+        if (other.getAttributes() != null
+                && other.getAttributes().equals(this.getAttributes()) == false)
+            return false;
+        if (other.getChannelType() == null ^ this.getChannelType() == null)
+            return false;
+        if (other.getChannelType() != null
+                && other.getChannelType().equals(this.getChannelType()) == false)
+            return false;
+        if (other.getDemographic() == null ^ this.getDemographic() == null)
+            return false;
+        if (other.getDemographic() != null
+                && other.getDemographic().equals(this.getDemographic()) == false)
+            return false;
+        if (other.getEffectiveDate() == null ^ this.getEffectiveDate() == null)
+            return false;
+        if (other.getEffectiveDate() != null
+                && other.getEffectiveDate().equals(this.getEffectiveDate()) == false)
+            return false;
+        if (other.getEndpointStatus() == null ^ this.getEndpointStatus() == null)
+            return false;
+        if (other.getEndpointStatus() != null
+                && other.getEndpointStatus().equals(this.getEndpointStatus()) == false)
+            return false;
+        if (other.getLocation() == null ^ this.getLocation() == null)
+            return false;
+        if (other.getLocation() != null && other.getLocation().equals(this.getLocation()) == false)
+            return false;
+        if (other.getMetrics() == null ^ this.getMetrics() == null)
+            return false;
+        if (other.getMetrics() != null && other.getMetrics().equals(this.getMetrics()) == false)
+            return false;
+        if (other.getOptOut() == null ^ this.getOptOut() == null)
+            return false;
+        if (other.getOptOut() != null && other.getOptOut().equals(this.getOptOut()) == false)
+            return false;
+        if (other.getRequestId() == null ^ this.getRequestId() == null)
+            return false;
+        if (other.getRequestId() != null
+                && other.getRequestId().equals(this.getRequestId()) == false)
+            return false;
+        if (other.getUser() == null ^ this.getUser() == null)
+            return false;
+        if (other.getUser() != null && other.getUser().equals(this.getUser()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PutEventsRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PutEventsRequest.java
index c8c03a23f4..db7e9f7616 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PutEventsRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PutEventsRequest.java
@@ -20,46 +20,45 @@
 import com.amazonaws.AmazonWebServiceRequest;
 
 /**
- * Use to submit events to Pinpoint into multiple regions.
+ * Use to record events for endpoints. This method creates events and creates or
+ * updates the endpoints that those events are associated with.
  */
 public class PutEventsRequest extends AmazonWebServiceRequest implements Serializable {
     /**
-     * The new value for the applicationId property for this object.
+     * The unique ID of your Amazon Pinpoint application.
      */
     private String applicationId;
 
     /**
-     * Batch events to submit
+     * A set of events to process.
      */
-    private java.util.Map<String, EventsBatch> batchItem;
+    private EventsRequest eventsRequest;
 
     /**
-     * Returns the value of the applicationId property for this object.
+     * The unique ID of your Amazon Pinpoint application.
      *
-     * @return The value of the applicationId property for this object.
+     * @return The unique ID of your Amazon Pinpoint application.
      */
     public String getApplicationId() {
         return applicationId;
     }
 
     /**
-     * Sets the value of applicationId
+     * The unique ID of your Amazon Pinpoint application.
      *
-     * @param applicationId The new value for the applicationId property for
-     *            this object.
+     * @param applicationId The unique ID of your Amazon Pinpoint application.
      */
     public void setApplicationId(String applicationId) {
         this.applicationId = applicationId;
     }
 
     /**
-     * Sets the value of the applicationId property for this object.
+     * The unique ID of your Amazon Pinpoint application.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param applicationId The new value for the applicationId property for
-     *            this object.
+     * @param applicationId The unique ID of your Amazon Pinpoint application.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -69,70 +68,35 @@ public PutEventsRequest withApplicationId(String applicationId) {
     }
 
     /**
-     * Batch events to submit
+     * A set of events to process.
      *
-     * @return Batch events to submit
+     * @return A set of events to process.
      */
-    public java.util.Map<String, EventsBatch> getBatchItem() {
-        return batchItem;
+    public EventsRequest getEventsRequest() {
+        return eventsRequest;
     }
 
     /**
-     * Batch events to submit
+     * A set of events to process.
      *
-     * @param batchItem Batch events to submit
+     * @param eventsRequest A set of events to process.
      */
-    public void setBatchItem(java.util.Map<String, EventsBatch> batchItem) {
-        this.batchItem = batchItem;
+    public void setEventsRequest(EventsRequest eventsRequest) {
+        this.eventsRequest = eventsRequest;
     }
 
     /**
-     * Batch events to submit
+     * A set of events to process.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param batchItem Batch events to submit
+     * @param eventsRequest A set of events to process.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
-    public PutEventsRequest withBatchItem(java.util.Map<String, EventsBatch> batchItem) {
-        this.batchItem = batchItem;
-        return this;
-    }
-
-    /**
-     * Batch events to submit
-     * <p>
-     * The method adds a new key-value pair into BatchItem parameter, and
-     * returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param key The key of the entry to be added into BatchItem.
-     * @param value The corresponding value of the entry to be added into
-     *            BatchItem.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public PutEventsRequest addBatchItemEntry(String key, EventsBatch value) {
-        if (null == this.batchItem) {
-            this.batchItem = new java.util.HashMap<String, EventsBatch>();
-        }
-        if (this.batchItem.containsKey(key))
-            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
-                    + ") are provided.");
-        this.batchItem.put(key, value);
-        return this;
-    }
-
-    /**
-     * Removes all the entries added into BatchItem.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     */
-    public PutEventsRequest clearBatchItemEntries() {
-        this.batchItem = null;
+    public PutEventsRequest withEventsRequest(EventsRequest eventsRequest) {
+        this.eventsRequest = eventsRequest;
         return this;
     }
 
@@ -149,8 +113,8 @@ public String toString() {
         sb.append("{");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
-        if (getBatchItem() != null)
-            sb.append("BatchItem: " + getBatchItem());
+        if (getEventsRequest() != null)
+            sb.append("EventsRequest: " + getEventsRequest());
         sb.append("}");
         return sb.toString();
     }
@@ -162,7 +126,8 @@ public int hashCode() {
 
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
-        hashCode = prime * hashCode + ((getBatchItem() == null) ? 0 : getBatchItem().hashCode());
+        hashCode = prime * hashCode
+                + ((getEventsRequest() == null) ? 0 : getEventsRequest().hashCode());
         return hashCode;
     }
 
@@ -182,10 +147,10 @@ public boolean equals(Object obj) {
         if (other.getApplicationId() != null
                 && other.getApplicationId().equals(this.getApplicationId()) == false)
             return false;
-        if (other.getBatchItem() == null ^ this.getBatchItem() == null)
+        if (other.getEventsRequest() == null ^ this.getEventsRequest() == null)
             return false;
-        if (other.getBatchItem() != null
-                && other.getBatchItem().equals(this.getBatchItem()) == false)
+        if (other.getEventsRequest() != null
+                && other.getEventsRequest().equals(this.getEventsRequest()) == false)
             return false;
         return true;
     }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PutEventsResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PutEventsResult.java
index 97cc4cb2cb..10388ffad6 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PutEventsResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PutEventsResult.java
@@ -19,74 +19,40 @@
 
 public class PutEventsResult implements Serializable {
     /**
-     * Events submission response.
+     * Custom messages associated with events.
      */
-    private java.util.Map<String, ItemResponse> results;
+    private EventsResponse eventsResponse;
 
     /**
-     * Events submission response.
+     * Custom messages associated with events.
      *
-     * @return Events submission response.
+     * @return Custom messages associated with events.
      */
-    public java.util.Map<String, ItemResponse> getResults() {
-        return results;
+    public EventsResponse getEventsResponse() {
+        return eventsResponse;
     }
 
     /**
-     * Events submission response.
+     * Custom messages associated with events.
      *
-     * @param results Events submission response.
+     * @param eventsResponse Custom messages associated with events.
      */
-    public void setResults(java.util.Map<String, ItemResponse> results) {
-        this.results = results;
+    public void setEventsResponse(EventsResponse eventsResponse) {
+        this.eventsResponse = eventsResponse;
     }
 
     /**
-     * Events submission response.
+     * Custom messages associated with events.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param results Events submission response.
+     * @param eventsResponse Custom messages associated with events.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
-    public PutEventsResult withResults(java.util.Map<String, ItemResponse> results) {
-        this.results = results;
-        return this;
-    }
-
-    /**
-     * Events submission response.
-     * <p>
-     * The method adds a new key-value pair into Results parameter, and returns
-     * a reference to this object so that method calls can be chained together.
-     *
-     * @param key The key of the entry to be added into Results.
-     * @param value The corresponding value of the entry to be added into
-     *            Results.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public PutEventsResult addResultsEntry(String key, ItemResponse value) {
-        if (null == this.results) {
-            this.results = new java.util.HashMap<String, ItemResponse>();
-        }
-        if (this.results.containsKey(key))
-            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
-                    + ") are provided.");
-        this.results.put(key, value);
-        return this;
-    }
-
-    /**
-     * Removes all the entries added into Results.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     */
-    public PutEventsResult clearResultsEntries() {
-        this.results = null;
+    public PutEventsResult withEventsResponse(EventsResponse eventsResponse) {
+        this.eventsResponse = eventsResponse;
         return this;
     }
 
@@ -101,8 +67,8 @@ public PutEventsResult clearResultsEntries() {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getResults() != null)
-            sb.append("Results: " + getResults());
+        if (getEventsResponse() != null)
+            sb.append("EventsResponse: " + getEventsResponse());
         sb.append("}");
         return sb.toString();
     }
@@ -112,7 +78,8 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getResults() == null) ? 0 : getResults().hashCode());
+        hashCode = prime * hashCode
+                + ((getEventsResponse() == null) ? 0 : getEventsResponse().hashCode());
         return hashCode;
     }
 
@@ -127,9 +94,10 @@ public boolean equals(Object obj) {
             return false;
         PutEventsResult other = (PutEventsResult) obj;
 
-        if (other.getResults() == null ^ this.getResults() == null)
+        if (other.getEventsResponse() == null ^ this.getEventsResponse() == null)
             return false;
-        if (other.getResults() != null && other.getResults().equals(this.getResults()) == false)
+        if (other.getEventsResponse() != null
+                && other.getEventsResponse().equals(this.getEventsResponse()) == false)
             return false;
         return true;
     }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/QuietTime.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/QuietTime.java
index 039945aef0..a52dd629de 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/QuietTime.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/QuietTime.java
@@ -22,40 +22,67 @@
  */
 public class QuietTime implements Serializable {
     /**
-     * The default end time for quiet time in ISO 8601 format.
+     * The time at which quiet time should end. The value that you specify has
+     * to be in HH:mm format, where HH is the hour in 24-hour format (with a
+     * leading zero, if applicable), and mm is the minutes. For example, use
+     * 02:30 to represent 2:30 AM, or 14:30 to represent 2:30 PM.
      */
     private String end;
 
     /**
-     * The default start time for quiet time in ISO 8601 format.
+     * The time at which quiet time should begin. The value that you specify has
+     * to be in HH:mm format, where HH is the hour in 24-hour format (with a
+     * leading zero, if applicable), and mm is the minutes. For example, use
+     * 02:30 to represent 2:30 AM, or 14:30 to represent 2:30 PM.
      */
     private String start;
 
     /**
-     * The default end time for quiet time in ISO 8601 format.
+     * The time at which quiet time should end. The value that you specify has
+     * to be in HH:mm format, where HH is the hour in 24-hour format (with a
+     * leading zero, if applicable), and mm is the minutes. For example, use
+     * 02:30 to represent 2:30 AM, or 14:30 to represent 2:30 PM.
      *
-     * @return The default end time for quiet time in ISO 8601 format.
+     * @return The time at which quiet time should end. The value that you
+     *         specify has to be in HH:mm format, where HH is the hour in
+     *         24-hour format (with a leading zero, if applicable), and mm is
+     *         the minutes. For example, use 02:30 to represent 2:30 AM, or
+     *         14:30 to represent 2:30 PM.
      */
     public String getEnd() {
         return end;
     }
 
     /**
-     * The default end time for quiet time in ISO 8601 format.
+     * The time at which quiet time should end. The value that you specify has
+     * to be in HH:mm format, where HH is the hour in 24-hour format (with a
+     * leading zero, if applicable), and mm is the minutes. For example, use
+     * 02:30 to represent 2:30 AM, or 14:30 to represent 2:30 PM.
      *
-     * @param end The default end time for quiet time in ISO 8601 format.
+     * @param end The time at which quiet time should end. The value that you
+     *            specify has to be in HH:mm format, where HH is the hour in
+     *            24-hour format (with a leading zero, if applicable), and mm is
+     *            the minutes. For example, use 02:30 to represent 2:30 AM, or
+     *            14:30 to represent 2:30 PM.
      */
     public void setEnd(String end) {
         this.end = end;
     }
 
     /**
-     * The default end time for quiet time in ISO 8601 format.
+     * The time at which quiet time should end. The value that you specify has
+     * to be in HH:mm format, where HH is the hour in 24-hour format (with a
+     * leading zero, if applicable), and mm is the minutes. For example, use
+     * 02:30 to represent 2:30 AM, or 14:30 to represent 2:30 PM.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param end The default end time for quiet time in ISO 8601 format.
+     * @param end The time at which quiet time should end. The value that you
+     *            specify has to be in HH:mm format, where HH is the hour in
+     *            24-hour format (with a leading zero, if applicable), and mm is
+     *            the minutes. For example, use 02:30 to represent 2:30 AM, or
+     *            14:30 to represent 2:30 PM.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -65,30 +92,51 @@ public QuietTime withEnd(String end) {
     }
 
     /**
-     * The default start time for quiet time in ISO 8601 format.
+     * The time at which quiet time should begin. The value that you specify has
+     * to be in HH:mm format, where HH is the hour in 24-hour format (with a
+     * leading zero, if applicable), and mm is the minutes. For example, use
+     * 02:30 to represent 2:30 AM, or 14:30 to represent 2:30 PM.
      *
-     * @return The default start time for quiet time in ISO 8601 format.
+     * @return The time at which quiet time should begin. The value that you
+     *         specify has to be in HH:mm format, where HH is the hour in
+     *         24-hour format (with a leading zero, if applicable), and mm is
+     *         the minutes. For example, use 02:30 to represent 2:30 AM, or
+     *         14:30 to represent 2:30 PM.
      */
     public String getStart() {
         return start;
     }
 
     /**
-     * The default start time for quiet time in ISO 8601 format.
+     * The time at which quiet time should begin. The value that you specify has
+     * to be in HH:mm format, where HH is the hour in 24-hour format (with a
+     * leading zero, if applicable), and mm is the minutes. For example, use
+     * 02:30 to represent 2:30 AM, or 14:30 to represent 2:30 PM.
      *
-     * @param start The default start time for quiet time in ISO 8601 format.
+     * @param start The time at which quiet time should begin. The value that
+     *            you specify has to be in HH:mm format, where HH is the hour in
+     *            24-hour format (with a leading zero, if applicable), and mm is
+     *            the minutes. For example, use 02:30 to represent 2:30 AM, or
+     *            14:30 to represent 2:30 PM.
      */
     public void setStart(String start) {
         this.start = start;
     }
 
     /**
-     * The default start time for quiet time in ISO 8601 format.
+     * The time at which quiet time should begin. The value that you specify has
+     * to be in HH:mm format, where HH is the hour in 24-hour format (with a
+     * leading zero, if applicable), and mm is the minutes. For example, use
+     * 02:30 to represent 2:30 AM, or 14:30 to represent 2:30 PM.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param start The default start time for quiet time in ISO 8601 format.
+     * @param start The time at which quiet time should begin. The value that
+     *            you specify has to be in HH:mm format, where HH is the hour in
+     *            24-hour format (with a leading zero, if applicable), and mm is
+     *            the minutes. For example, use 02:30 to represent 2:30 AM, or
+     *            14:30 to represent 2:30 PM.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/RawEmail.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/RawEmail.java
new file mode 100644
index 0000000000..7c4615e4df
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/RawEmail.java
@@ -0,0 +1,108 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * An email represented as a raw MIME message.
+ */
+public class RawEmail implements Serializable {
+    /**
+     * The raw email message itself. Then entire message must be base64-encoded.
+     */
+    private java.nio.ByteBuffer data;
+
+    /**
+     * The raw email message itself. Then entire message must be base64-encoded.
+     *
+     * @return The raw email message itself. Then entire message must be
+     *         base64-encoded.
+     */
+    public java.nio.ByteBuffer getData() {
+        return data;
+    }
+
+    /**
+     * The raw email message itself. Then entire message must be base64-encoded.
+     *
+     * @param data The raw email message itself. Then entire message must be
+     *            base64-encoded.
+     */
+    public void setData(java.nio.ByteBuffer data) {
+        this.data = data;
+    }
+
+    /**
+     * The raw email message itself. Then entire message must be base64-encoded.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param data The raw email message itself. Then entire message must be
+     *            base64-encoded.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public RawEmail withData(java.nio.ByteBuffer data) {
+        this.data = data;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getData() != null)
+            sb.append("Data: " + getData());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getData() == null) ? 0 : getData().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof RawEmail == false)
+            return false;
+        RawEmail other = (RawEmail) obj;
+
+        if (other.getData() == null ^ this.getData() == null)
+            return false;
+        if (other.getData() != null && other.getData().equals(this.getData()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Schedule.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Schedule.java
index bfc65559cb..dace7bc147 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Schedule.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Schedule.java
@@ -27,11 +27,17 @@
     private String endTime;
 
     /**
-     * How often the campaign delivers messages. Valid values: ONCE, HOURLY,
-     * DAILY, WEEKLY, MONTHLY
+     * Defines the type of events that can trigger the campaign. Used when the
+     * Frequency is set to EVENT.
+     */
+    private CampaignEventFilter eventFilter;
+
+    /**
+     * How often the campaign delivers messages. Valid values: ONCE HOURLY DAILY
+     * WEEKLY MONTHLY EVENT
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>ONCE, HOURLY, DAILY, WEEKLY, MONTHLY
+     * <b>Allowed Values: </b>ONCE, HOURLY, DAILY, WEEKLY, MONTHLY, EVENT
      */
     private String frequency;
 
@@ -42,7 +48,19 @@
     private Boolean isLocalTime;
 
     /**
-     * The time during which the campaign sends no messages.
+     * The default quiet time for the campaign. The campaign doesn't send
+     * messages to endpoints during the quiet time. Note: Make sure that your
+     * endpoints include the Demographics.Timezone attribute if you plan to
+     * enable a quiet time for your campaign. If your endpoints don't include
+     * this attribute, they'll receive the messages that you send them, even if
+     * quiet time is enabled. When you set up a campaign to use quiet time, the
+     * campaign doesn't send messages during the time range you specified, as
+     * long as all of the following are true: - The endpoint includes a valid
+     * Demographic.Timezone attribute. - The current time in the endpoint's time
+     * zone is later than or equal to the time specified in the QuietTime.Start
+     * attribute for the campaign. - The current time in the endpoint's time
+     * zone is earlier than or equal to the time specified in the QuietTime.End
+     * attribute for the campaign.
      */
     private QuietTime quietTime;
 
@@ -96,14 +114,53 @@ public Schedule withEndTime(String endTime) {
     }
 
     /**
-     * How often the campaign delivers messages. Valid values: ONCE, HOURLY,
-     * DAILY, WEEKLY, MONTHLY
+     * Defines the type of events that can trigger the campaign. Used when the
+     * Frequency is set to EVENT.
+     *
+     * @return Defines the type of events that can trigger the campaign. Used
+     *         when the Frequency is set to EVENT.
+     */
+    public CampaignEventFilter getEventFilter() {
+        return eventFilter;
+    }
+
+    /**
+     * Defines the type of events that can trigger the campaign. Used when the
+     * Frequency is set to EVENT.
+     *
+     * @param eventFilter Defines the type of events that can trigger the
+     *            campaign. Used when the Frequency is set to EVENT.
+     */
+    public void setEventFilter(CampaignEventFilter eventFilter) {
+        this.eventFilter = eventFilter;
+    }
+
+    /**
+     * Defines the type of events that can trigger the campaign. Used when the
+     * Frequency is set to EVENT.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param eventFilter Defines the type of events that can trigger the
+     *            campaign. Used when the Frequency is set to EVENT.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public Schedule withEventFilter(CampaignEventFilter eventFilter) {
+        this.eventFilter = eventFilter;
+        return this;
+    }
+
+    /**
+     * How often the campaign delivers messages. Valid values: ONCE HOURLY DAILY
+     * WEEKLY MONTHLY EVENT
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>ONCE, HOURLY, DAILY, WEEKLY, MONTHLY
+     * <b>Allowed Values: </b>ONCE, HOURLY, DAILY, WEEKLY, MONTHLY, EVENT
      *
-     * @return How often the campaign delivers messages. Valid values: ONCE,
-     *         HOURLY, DAILY, WEEKLY, MONTHLY
+     * @return How often the campaign delivers messages. Valid values: ONCE
+     *         HOURLY DAILY WEEKLY MONTHLY EVENT
      * @see Frequency
      */
     public String getFrequency() {
@@ -111,14 +168,14 @@ public String getFrequency() {
     }
 
     /**
-     * How often the campaign delivers messages. Valid values: ONCE, HOURLY,
-     * DAILY, WEEKLY, MONTHLY
+     * How often the campaign delivers messages. Valid values: ONCE HOURLY DAILY
+     * WEEKLY MONTHLY EVENT
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>ONCE, HOURLY, DAILY, WEEKLY, MONTHLY
+     * <b>Allowed Values: </b>ONCE, HOURLY, DAILY, WEEKLY, MONTHLY, EVENT
      *
      * @param frequency How often the campaign delivers messages. Valid values:
-     *            ONCE, HOURLY, DAILY, WEEKLY, MONTHLY
+     *            ONCE HOURLY DAILY WEEKLY MONTHLY EVENT
      * @see Frequency
      */
     public void setFrequency(String frequency) {
@@ -126,17 +183,17 @@ public void setFrequency(String frequency) {
     }
 
     /**
-     * How often the campaign delivers messages. Valid values: ONCE, HOURLY,
-     * DAILY, WEEKLY, MONTHLY
+     * How often the campaign delivers messages. Valid values: ONCE HOURLY DAILY
+     * WEEKLY MONTHLY EVENT
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>ONCE, HOURLY, DAILY, WEEKLY, MONTHLY
+     * <b>Allowed Values: </b>ONCE, HOURLY, DAILY, WEEKLY, MONTHLY, EVENT
      *
      * @param frequency How often the campaign delivers messages. Valid values:
-     *            ONCE, HOURLY, DAILY, WEEKLY, MONTHLY
+     *            ONCE HOURLY DAILY WEEKLY MONTHLY EVENT
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      * @see Frequency
@@ -147,14 +204,14 @@ public Schedule withFrequency(String frequency) {
     }
 
     /**
-     * How often the campaign delivers messages. Valid values: ONCE, HOURLY,
-     * DAILY, WEEKLY, MONTHLY
+     * How often the campaign delivers messages. Valid values: ONCE HOURLY DAILY
+     * WEEKLY MONTHLY EVENT
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>ONCE, HOURLY, DAILY, WEEKLY, MONTHLY
+     * <b>Allowed Values: </b>ONCE, HOURLY, DAILY, WEEKLY, MONTHLY, EVENT
      *
      * @param frequency How often the campaign delivers messages. Valid values:
-     *            ONCE, HOURLY, DAILY, WEEKLY, MONTHLY
+     *            ONCE HOURLY DAILY WEEKLY MONTHLY EVENT
      * @see Frequency
      */
     public void setFrequency(Frequency frequency) {
@@ -162,17 +219,17 @@ public void setFrequency(Frequency frequency) {
     }
 
     /**
-     * How often the campaign delivers messages. Valid values: ONCE, HOURLY,
-     * DAILY, WEEKLY, MONTHLY
+     * How often the campaign delivers messages. Valid values: ONCE HOURLY DAILY
+     * WEEKLY MONTHLY EVENT
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>ONCE, HOURLY, DAILY, WEEKLY, MONTHLY
+     * <b>Allowed Values: </b>ONCE, HOURLY, DAILY, WEEKLY, MONTHLY, EVENT
      *
      * @param frequency How often the campaign delivers messages. Valid values:
-     *            ONCE, HOURLY, DAILY, WEEKLY, MONTHLY
+     *            ONCE HOURLY DAILY WEEKLY MONTHLY EVENT
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      * @see Frequency
@@ -233,30 +290,109 @@ public Schedule withIsLocalTime(Boolean isLocalTime) {
     }
 
     /**
-     * The time during which the campaign sends no messages.
+     * The default quiet time for the campaign. The campaign doesn't send
+     * messages to endpoints during the quiet time. Note: Make sure that your
+     * endpoints include the Demographics.Timezone attribute if you plan to
+     * enable a quiet time for your campaign. If your endpoints don't include
+     * this attribute, they'll receive the messages that you send them, even if
+     * quiet time is enabled. When you set up a campaign to use quiet time, the
+     * campaign doesn't send messages during the time range you specified, as
+     * long as all of the following are true: - The endpoint includes a valid
+     * Demographic.Timezone attribute. - The current time in the endpoint's time
+     * zone is later than or equal to the time specified in the QuietTime.Start
+     * attribute for the campaign. - The current time in the endpoint's time
+     * zone is earlier than or equal to the time specified in the QuietTime.End
+     * attribute for the campaign.
      *
-     * @return The time during which the campaign sends no messages.
+     * @return The default quiet time for the campaign. The campaign doesn't
+     *         send messages to endpoints during the quiet time. Note: Make sure
+     *         that your endpoints include the Demographics.Timezone attribute
+     *         if you plan to enable a quiet time for your campaign. If your
+     *         endpoints don't include this attribute, they'll receive the
+     *         messages that you send them, even if quiet time is enabled. When
+     *         you set up a campaign to use quiet time, the campaign doesn't
+     *         send messages during the time range you specified, as long as all
+     *         of the following are true: - The endpoint includes a valid
+     *         Demographic.Timezone attribute. - The current time in the
+     *         endpoint's time zone is later than or equal to the time specified
+     *         in the QuietTime.Start attribute for the campaign. - The current
+     *         time in the endpoint's time zone is earlier than or equal to the
+     *         time specified in the QuietTime.End attribute for the campaign.
      */
     public QuietTime getQuietTime() {
         return quietTime;
     }
 
     /**
-     * The time during which the campaign sends no messages.
+     * The default quiet time for the campaign. The campaign doesn't send
+     * messages to endpoints during the quiet time. Note: Make sure that your
+     * endpoints include the Demographics.Timezone attribute if you plan to
+     * enable a quiet time for your campaign. If your endpoints don't include
+     * this attribute, they'll receive the messages that you send them, even if
+     * quiet time is enabled. When you set up a campaign to use quiet time, the
+     * campaign doesn't send messages during the time range you specified, as
+     * long as all of the following are true: - The endpoint includes a valid
+     * Demographic.Timezone attribute. - The current time in the endpoint's time
+     * zone is later than or equal to the time specified in the QuietTime.Start
+     * attribute for the campaign. - The current time in the endpoint's time
+     * zone is earlier than or equal to the time specified in the QuietTime.End
+     * attribute for the campaign.
      *
-     * @param quietTime The time during which the campaign sends no messages.
+     * @param quietTime The default quiet time for the campaign. The campaign
+     *            doesn't send messages to endpoints during the quiet time.
+     *            Note: Make sure that your endpoints include the
+     *            Demographics.Timezone attribute if you plan to enable a quiet
+     *            time for your campaign. If your endpoints don't include this
+     *            attribute, they'll receive the messages that you send them,
+     *            even if quiet time is enabled. When you set up a campaign to
+     *            use quiet time, the campaign doesn't send messages during the
+     *            time range you specified, as long as all of the following are
+     *            true: - The endpoint includes a valid Demographic.Timezone
+     *            attribute. - The current time in the endpoint's time zone is
+     *            later than or equal to the time specified in the
+     *            QuietTime.Start attribute for the campaign. - The current time
+     *            in the endpoint's time zone is earlier than or equal to the
+     *            time specified in the QuietTime.End attribute for the
+     *            campaign.
      */
     public void setQuietTime(QuietTime quietTime) {
         this.quietTime = quietTime;
     }
 
     /**
-     * The time during which the campaign sends no messages.
+     * The default quiet time for the campaign. The campaign doesn't send
+     * messages to endpoints during the quiet time. Note: Make sure that your
+     * endpoints include the Demographics.Timezone attribute if you plan to
+     * enable a quiet time for your campaign. If your endpoints don't include
+     * this attribute, they'll receive the messages that you send them, even if
+     * quiet time is enabled. When you set up a campaign to use quiet time, the
+     * campaign doesn't send messages during the time range you specified, as
+     * long as all of the following are true: - The endpoint includes a valid
+     * Demographic.Timezone attribute. - The current time in the endpoint's time
+     * zone is later than or equal to the time specified in the QuietTime.Start
+     * attribute for the campaign. - The current time in the endpoint's time
+     * zone is earlier than or equal to the time specified in the QuietTime.End
+     * attribute for the campaign.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param quietTime The time during which the campaign sends no messages.
+     * @param quietTime The default quiet time for the campaign. The campaign
+     *            doesn't send messages to endpoints during the quiet time.
+     *            Note: Make sure that your endpoints include the
+     *            Demographics.Timezone attribute if you plan to enable a quiet
+     *            time for your campaign. If your endpoints don't include this
+     *            attribute, they'll receive the messages that you send them,
+     *            even if quiet time is enabled. When you set up a campaign to
+     *            use quiet time, the campaign doesn't send messages during the
+     *            time range you specified, as long as all of the following are
+     *            true: - The endpoint includes a valid Demographic.Timezone
+     *            attribute. - The current time in the endpoint's time zone is
+     *            later than or equal to the time specified in the
+     *            QuietTime.Start attribute for the campaign. - The current time
+     *            in the endpoint's time zone is earlier than or equal to the
+     *            time specified in the QuietTime.End attribute for the
+     *            campaign.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -373,6 +509,8 @@ public String toString() {
         sb.append("{");
         if (getEndTime() != null)
             sb.append("EndTime: " + getEndTime() + ",");
+        if (getEventFilter() != null)
+            sb.append("EventFilter: " + getEventFilter() + ",");
         if (getFrequency() != null)
             sb.append("Frequency: " + getFrequency() + ",");
         if (getIsLocalTime() != null)
@@ -393,6 +531,8 @@ public int hashCode() {
         int hashCode = 1;
 
         hashCode = prime * hashCode + ((getEndTime() == null) ? 0 : getEndTime().hashCode());
+        hashCode = prime * hashCode
+                + ((getEventFilter() == null) ? 0 : getEventFilter().hashCode());
         hashCode = prime * hashCode + ((getFrequency() == null) ? 0 : getFrequency().hashCode());
         hashCode = prime * hashCode
                 + ((getIsLocalTime() == null) ? 0 : getIsLocalTime().hashCode());
@@ -417,6 +557,11 @@ public boolean equals(Object obj) {
             return false;
         if (other.getEndTime() != null && other.getEndTime().equals(this.getEndTime()) == false)
             return false;
+        if (other.getEventFilter() == null ^ this.getEventFilter() == null)
+            return false;
+        if (other.getEventFilter() != null
+                && other.getEventFilter().equals(this.getEventFilter()) == false)
+            return false;
         if (other.getFrequency() == null ^ this.getFrequency() == null)
             return false;
         if (other.getFrequency() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentGroup.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentGroup.java
index fd19446e8f..5dc26ea377 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentGroup.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentGroup.java
@@ -31,7 +31,10 @@
      * defines the starting "universe" of endpoints. When you add dimensions to
      * the segment, it filters the source segment based on the dimensions that
      * you specify. You can specify more than one dimensional segment. You can
-     * only specify one imported segment.
+     * only specify one imported segment. NOTE: If you specify an imported
+     * segment for this attribute, the segment size estimate that appears in the
+     * Amazon Pinpoint console shows the size of the imported segment, without
+     * any filters applied to it.
      */
     private java.util.List<SegmentReference> sourceSegments;
 
@@ -119,14 +122,20 @@ public SegmentGroup withDimensions(java.util.Collection<SegmentDimensions> dimen
      * defines the starting "universe" of endpoints. When you add dimensions to
      * the segment, it filters the source segment based on the dimensions that
      * you specify. You can specify more than one dimensional segment. You can
-     * only specify one imported segment.
+     * only specify one imported segment. NOTE: If you specify an imported
+     * segment for this attribute, the segment size estimate that appears in the
+     * Amazon Pinpoint console shows the size of the imported segment, without
+     * any filters applied to it.
      *
      * @return The base segment that you build your segment on. The source
      *         segment defines the starting "universe" of endpoints. When you
      *         add dimensions to the segment, it filters the source segment
      *         based on the dimensions that you specify. You can specify more
      *         than one dimensional segment. You can only specify one imported
-     *         segment.
+     *         segment. NOTE: If you specify an imported segment for this
+     *         attribute, the segment size estimate that appears in the Amazon
+     *         Pinpoint console shows the size of the imported segment, without
+     *         any filters applied to it.
      */
     public java.util.List<SegmentReference> getSourceSegments() {
         return sourceSegments;
@@ -137,14 +146,20 @@ public SegmentGroup withDimensions(java.util.Collection<SegmentDimensions> dimen
      * defines the starting "universe" of endpoints. When you add dimensions to
      * the segment, it filters the source segment based on the dimensions that
      * you specify. You can specify more than one dimensional segment. You can
-     * only specify one imported segment.
+     * only specify one imported segment. NOTE: If you specify an imported
+     * segment for this attribute, the segment size estimate that appears in the
+     * Amazon Pinpoint console shows the size of the imported segment, without
+     * any filters applied to it.
      *
      * @param sourceSegments The base segment that you build your segment on.
      *            The source segment defines the starting "universe" of
      *            endpoints. When you add dimensions to the segment, it filters
      *            the source segment based on the dimensions that you specify.
      *            You can specify more than one dimensional segment. You can
-     *            only specify one imported segment.
+     *            only specify one imported segment. NOTE: If you specify an
+     *            imported segment for this attribute, the segment size estimate
+     *            that appears in the Amazon Pinpoint console shows the size of
+     *            the imported segment, without any filters applied to it.
      */
     public void setSourceSegments(java.util.Collection<SegmentReference> sourceSegments) {
         if (sourceSegments == null) {
@@ -160,7 +175,10 @@ public void setSourceSegments(java.util.Collection<SegmentReference> sourceSegme
      * defines the starting "universe" of endpoints. When you add dimensions to
      * the segment, it filters the source segment based on the dimensions that
      * you specify. You can specify more than one dimensional segment. You can
-     * only specify one imported segment.
+     * only specify one imported segment. NOTE: If you specify an imported
+     * segment for this attribute, the segment size estimate that appears in the
+     * Amazon Pinpoint console shows the size of the imported segment, without
+     * any filters applied to it.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
@@ -170,7 +188,10 @@ public void setSourceSegments(java.util.Collection<SegmentReference> sourceSegme
      *            endpoints. When you add dimensions to the segment, it filters
      *            the source segment based on the dimensions that you specify.
      *            You can specify more than one dimensional segment. You can
-     *            only specify one imported segment.
+     *            only specify one imported segment. NOTE: If you specify an
+     *            imported segment for this attribute, the segment size estimate
+     *            that appears in the Amazon Pinpoint console shows the size of
+     *            the imported segment, without any filters applied to it.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -189,7 +210,10 @@ public SegmentGroup withSourceSegments(SegmentReference... sourceSegments) {
      * defines the starting "universe" of endpoints. When you add dimensions to
      * the segment, it filters the source segment based on the dimensions that
      * you specify. You can specify more than one dimensional segment. You can
-     * only specify one imported segment.
+     * only specify one imported segment. NOTE: If you specify an imported
+     * segment for this attribute, the segment size estimate that appears in the
+     * Amazon Pinpoint console shows the size of the imported segment, without
+     * any filters applied to it.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
@@ -199,7 +223,10 @@ public SegmentGroup withSourceSegments(SegmentReference... sourceSegments) {
      *            endpoints. When you add dimensions to the segment, it filters
      *            the source segment based on the dimensions that you specify.
      *            You can specify more than one dimensional segment. You can
-     *            only specify one imported segment.
+     *            only specify one imported segment. NOTE: If you specify an
+     *            imported segment for this attribute, the segment size estimate
+     *            that appears in the Amazon Pinpoint console shows the size of
+     *            the imported segment, without any filters applied to it.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentLocation.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentLocation.java
index 38337e7ae4..ff5933b71d 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentLocation.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentLocation.java
@@ -22,7 +22,7 @@
  */
 public class SegmentLocation implements Serializable {
     /**
-     * The country filter according to ISO 3166-1 Alpha-2 codes.
+     * The country or region, in ISO 3166-1 alpha-2 format.
      */
     private SetDimension country;
 
@@ -32,30 +32,30 @@
     private GPSPointDimension gPSPoint;
 
     /**
-     * The country filter according to ISO 3166-1 Alpha-2 codes.
+     * The country or region, in ISO 3166-1 alpha-2 format.
      *
-     * @return The country filter according to ISO 3166-1 Alpha-2 codes.
+     * @return The country or region, in ISO 3166-1 alpha-2 format.
      */
     public SetDimension getCountry() {
         return country;
     }
 
     /**
-     * The country filter according to ISO 3166-1 Alpha-2 codes.
+     * The country or region, in ISO 3166-1 alpha-2 format.
      *
-     * @param country The country filter according to ISO 3166-1 Alpha-2 codes.
+     * @param country The country or region, in ISO 3166-1 alpha-2 format.
      */
     public void setCountry(SetDimension country) {
         this.country = country;
     }
 
     /**
-     * The country filter according to ISO 3166-1 Alpha-2 codes.
+     * The country or region, in ISO 3166-1 alpha-2 format.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param country The country filter according to ISO 3166-1 Alpha-2 codes.
+     * @param country The country or region, in ISO 3166-1 alpha-2 format.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Session.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Session.java
index 6f2373427c..5bd6ebbc3f 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Session.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Session.java
@@ -22,9 +22,9 @@
  */
 public class Session implements Serializable {
     /**
-     * Session duration in millis
+     * The duration of the session, in milliseconds.
      */
-    private Long duration;
+    private Integer duration;
 
     /**
      * A unique identifier for the session.
@@ -42,34 +42,34 @@
     private String stopTimestamp;
 
     /**
-     * Session duration in millis
+     * The duration of the session, in milliseconds.
      *
-     * @return Session duration in millis
+     * @return The duration of the session, in milliseconds.
      */
-    public Long getDuration() {
+    public Integer getDuration() {
         return duration;
     }
 
     /**
-     * Session duration in millis
+     * The duration of the session, in milliseconds.
      *
-     * @param duration Session duration in millis
+     * @param duration The duration of the session, in milliseconds.
      */
-    public void setDuration(Long duration) {
+    public void setDuration(Integer duration) {
         this.duration = duration;
     }
 
     /**
-     * Session duration in millis
+     * The duration of the session, in milliseconds.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param duration Session duration in millis
+     * @param duration The duration of the session, in milliseconds.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
-    public Session withDuration(Long duration) {
+    public Session withDuration(Integer duration) {
         this.duration = duration;
         return this;
     }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SimpleEmail.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SimpleEmail.java
new file mode 100644
index 0000000000..6037056cd3
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SimpleEmail.java
@@ -0,0 +1,226 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * An email composed of a subject, a text part and a html part.
+ */
+public class SimpleEmail implements Serializable {
+    /**
+     * The content of the message, in HTML format. Use this for email clients
+     * that can process HTML. You can include clickable links, formatted text,
+     * and much more in an HTML message.
+     */
+    private SimpleEmailPart htmlPart;
+
+    /**
+     * The subject of the message: A short summary of the content, which will
+     * appear in the recipient's inbox.
+     */
+    private SimpleEmailPart subject;
+
+    /**
+     * The content of the message, in text format. Use this for text-based email
+     * clients, or clients on high-latency networks (such as mobile devices).
+     */
+    private SimpleEmailPart textPart;
+
+    /**
+     * The content of the message, in HTML format. Use this for email clients
+     * that can process HTML. You can include clickable links, formatted text,
+     * and much more in an HTML message.
+     *
+     * @return The content of the message, in HTML format. Use this for email
+     *         clients that can process HTML. You can include clickable links,
+     *         formatted text, and much more in an HTML message.
+     */
+    public SimpleEmailPart getHtmlPart() {
+        return htmlPart;
+    }
+
+    /**
+     * The content of the message, in HTML format. Use this for email clients
+     * that can process HTML. You can include clickable links, formatted text,
+     * and much more in an HTML message.
+     *
+     * @param htmlPart The content of the message, in HTML format. Use this for
+     *            email clients that can process HTML. You can include clickable
+     *            links, formatted text, and much more in an HTML message.
+     */
+    public void setHtmlPart(SimpleEmailPart htmlPart) {
+        this.htmlPart = htmlPart;
+    }
+
+    /**
+     * The content of the message, in HTML format. Use this for email clients
+     * that can process HTML. You can include clickable links, formatted text,
+     * and much more in an HTML message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param htmlPart The content of the message, in HTML format. Use this for
+     *            email clients that can process HTML. You can include clickable
+     *            links, formatted text, and much more in an HTML message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SimpleEmail withHtmlPart(SimpleEmailPart htmlPart) {
+        this.htmlPart = htmlPart;
+        return this;
+    }
+
+    /**
+     * The subject of the message: A short summary of the content, which will
+     * appear in the recipient's inbox.
+     *
+     * @return The subject of the message: A short summary of the content, which
+     *         will appear in the recipient's inbox.
+     */
+    public SimpleEmailPart getSubject() {
+        return subject;
+    }
+
+    /**
+     * The subject of the message: A short summary of the content, which will
+     * appear in the recipient's inbox.
+     *
+     * @param subject The subject of the message: A short summary of the
+     *            content, which will appear in the recipient's inbox.
+     */
+    public void setSubject(SimpleEmailPart subject) {
+        this.subject = subject;
+    }
+
+    /**
+     * The subject of the message: A short summary of the content, which will
+     * appear in the recipient's inbox.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param subject The subject of the message: A short summary of the
+     *            content, which will appear in the recipient's inbox.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SimpleEmail withSubject(SimpleEmailPart subject) {
+        this.subject = subject;
+        return this;
+    }
+
+    /**
+     * The content of the message, in text format. Use this for text-based email
+     * clients, or clients on high-latency networks (such as mobile devices).
+     *
+     * @return The content of the message, in text format. Use this for
+     *         text-based email clients, or clients on high-latency networks
+     *         (such as mobile devices).
+     */
+    public SimpleEmailPart getTextPart() {
+        return textPart;
+    }
+
+    /**
+     * The content of the message, in text format. Use this for text-based email
+     * clients, or clients on high-latency networks (such as mobile devices).
+     *
+     * @param textPart The content of the message, in text format. Use this for
+     *            text-based email clients, or clients on high-latency networks
+     *            (such as mobile devices).
+     */
+    public void setTextPart(SimpleEmailPart textPart) {
+        this.textPart = textPart;
+    }
+
+    /**
+     * The content of the message, in text format. Use this for text-based email
+     * clients, or clients on high-latency networks (such as mobile devices).
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param textPart The content of the message, in text format. Use this for
+     *            text-based email clients, or clients on high-latency networks
+     *            (such as mobile devices).
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SimpleEmail withTextPart(SimpleEmailPart textPart) {
+        this.textPart = textPart;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getHtmlPart() != null)
+            sb.append("HtmlPart: " + getHtmlPart() + ",");
+        if (getSubject() != null)
+            sb.append("Subject: " + getSubject() + ",");
+        if (getTextPart() != null)
+            sb.append("TextPart: " + getTextPart());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getHtmlPart() == null) ? 0 : getHtmlPart().hashCode());
+        hashCode = prime * hashCode + ((getSubject() == null) ? 0 : getSubject().hashCode());
+        hashCode = prime * hashCode + ((getTextPart() == null) ? 0 : getTextPart().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof SimpleEmail == false)
+            return false;
+        SimpleEmail other = (SimpleEmail) obj;
+
+        if (other.getHtmlPart() == null ^ this.getHtmlPart() == null)
+            return false;
+        if (other.getHtmlPart() != null && other.getHtmlPart().equals(this.getHtmlPart()) == false)
+            return false;
+        if (other.getSubject() == null ^ this.getSubject() == null)
+            return false;
+        if (other.getSubject() != null && other.getSubject().equals(this.getSubject()) == false)
+            return false;
+        if (other.getTextPart() == null ^ this.getTextPart() == null)
+            return false;
+        if (other.getTextPart() != null && other.getTextPart().equals(this.getTextPart()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SimpleEmailPart.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SimpleEmailPart.java
new file mode 100644
index 0000000000..6ad6b46681
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SimpleEmailPart.java
@@ -0,0 +1,150 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Textual email data, plus an optional character set specification.
+ */
+public class SimpleEmailPart implements Serializable {
+    /**
+     * The character set of the content.
+     */
+    private String charset;
+
+    /**
+     * The textual data of the content.
+     */
+    private String data;
+
+    /**
+     * The character set of the content.
+     *
+     * @return The character set of the content.
+     */
+    public String getCharset() {
+        return charset;
+    }
+
+    /**
+     * The character set of the content.
+     *
+     * @param charset The character set of the content.
+     */
+    public void setCharset(String charset) {
+        this.charset = charset;
+    }
+
+    /**
+     * The character set of the content.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param charset The character set of the content.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SimpleEmailPart withCharset(String charset) {
+        this.charset = charset;
+        return this;
+    }
+
+    /**
+     * The textual data of the content.
+     *
+     * @return The textual data of the content.
+     */
+    public String getData() {
+        return data;
+    }
+
+    /**
+     * The textual data of the content.
+     *
+     * @param data The textual data of the content.
+     */
+    public void setData(String data) {
+        this.data = data;
+    }
+
+    /**
+     * The textual data of the content.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param data The textual data of the content.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SimpleEmailPart withData(String data) {
+        this.data = data;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getCharset() != null)
+            sb.append("Charset: " + getCharset() + ",");
+        if (getData() != null)
+            sb.append("Data: " + getData());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getCharset() == null) ? 0 : getCharset().hashCode());
+        hashCode = prime * hashCode + ((getData() == null) ? 0 : getData().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof SimpleEmailPart == false)
+            return false;
+        SimpleEmailPart other = (SimpleEmailPart) obj;
+
+        if (other.getCharset() == null ^ this.getCharset() == null)
+            return false;
+        if (other.getCharset() != null && other.getCharset().equals(this.getCharset()) == false)
+            return false;
+        if (other.getData() == null ^ this.getData() == null)
+            return false;
+        if (other.getData() != null && other.getData().equals(this.getData()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointRequest.java
index 7184ce3178..d2b56e015a 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointRequest.java
@@ -34,7 +34,7 @@
     private String endpointId;
 
     /**
-     * Endpoint update request
+     * An endpoint update request.
      */
     private EndpointRequest endpointRequest;
 
@@ -105,30 +105,30 @@ public UpdateEndpointRequest withEndpointId(String endpointId) {
     }
 
     /**
-     * Endpoint update request
+     * An endpoint update request.
      *
-     * @return Endpoint update request
+     * @return An endpoint update request.
      */
     public EndpointRequest getEndpointRequest() {
         return endpointRequest;
     }
 
     /**
-     * Endpoint update request
+     * An endpoint update request.
      *
-     * @param endpointRequest Endpoint update request
+     * @param endpointRequest An endpoint update request.
      */
     public void setEndpointRequest(EndpointRequest endpointRequest) {
         this.endpointRequest = endpointRequest;
     }
 
     /**
-     * Endpoint update request
+     * An endpoint update request.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param endpointRequest Endpoint update request
+     * @param endpointRequest An endpoint update request.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateVoiceChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateVoiceChannelRequest.java
new file mode 100644
index 0000000000..6dfc4b0f14
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateVoiceChannelRequest.java
@@ -0,0 +1,156 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Update an Voice channel
+ */
+public class UpdateVoiceChannelRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The unique ID of your Amazon Pinpoint application.
+     */
+    private String applicationId;
+
+    /**
+     * Voice Channel Request
+     */
+    private VoiceChannelRequest voiceChannelRequest;
+
+    /**
+     * The unique ID of your Amazon Pinpoint application.
+     *
+     * @return The unique ID of your Amazon Pinpoint application.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * The unique ID of your Amazon Pinpoint application.
+     *
+     * @param applicationId The unique ID of your Amazon Pinpoint application.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * The unique ID of your Amazon Pinpoint application.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The unique ID of your Amazon Pinpoint application.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateVoiceChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Voice Channel Request
+     *
+     * @return Voice Channel Request
+     */
+    public VoiceChannelRequest getVoiceChannelRequest() {
+        return voiceChannelRequest;
+    }
+
+    /**
+     * Voice Channel Request
+     *
+     * @param voiceChannelRequest Voice Channel Request
+     */
+    public void setVoiceChannelRequest(VoiceChannelRequest voiceChannelRequest) {
+        this.voiceChannelRequest = voiceChannelRequest;
+    }
+
+    /**
+     * Voice Channel Request
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param voiceChannelRequest Voice Channel Request
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateVoiceChannelRequest withVoiceChannelRequest(VoiceChannelRequest voiceChannelRequest) {
+        this.voiceChannelRequest = voiceChannelRequest;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getVoiceChannelRequest() != null)
+            sb.append("VoiceChannelRequest: " + getVoiceChannelRequest());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime * hashCode
+                + ((getVoiceChannelRequest() == null) ? 0 : getVoiceChannelRequest().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateVoiceChannelRequest == false)
+            return false;
+        UpdateVoiceChannelRequest other = (UpdateVoiceChannelRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        if (other.getVoiceChannelRequest() == null ^ this.getVoiceChannelRequest() == null)
+            return false;
+        if (other.getVoiceChannelRequest() != null
+                && other.getVoiceChannelRequest().equals(this.getVoiceChannelRequest()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateVoiceChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateVoiceChannelResult.java
new file mode 100644
index 0000000000..e5a8f9934b
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateVoiceChannelResult.java
@@ -0,0 +1,105 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class UpdateVoiceChannelResult implements Serializable {
+    /**
+     * Voice Channel Response.
+     */
+    private VoiceChannelResponse voiceChannelResponse;
+
+    /**
+     * Voice Channel Response.
+     *
+     * @return Voice Channel Response.
+     */
+    public VoiceChannelResponse getVoiceChannelResponse() {
+        return voiceChannelResponse;
+    }
+
+    /**
+     * Voice Channel Response.
+     *
+     * @param voiceChannelResponse Voice Channel Response.
+     */
+    public void setVoiceChannelResponse(VoiceChannelResponse voiceChannelResponse) {
+        this.voiceChannelResponse = voiceChannelResponse;
+    }
+
+    /**
+     * Voice Channel Response.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param voiceChannelResponse Voice Channel Response.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateVoiceChannelResult withVoiceChannelResponse(
+            VoiceChannelResponse voiceChannelResponse) {
+        this.voiceChannelResponse = voiceChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getVoiceChannelResponse() != null)
+            sb.append("VoiceChannelResponse: " + getVoiceChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getVoiceChannelResponse() == null) ? 0 : getVoiceChannelResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateVoiceChannelResult == false)
+            return false;
+        UpdateVoiceChannelResult other = (UpdateVoiceChannelResult) obj;
+
+        if (other.getVoiceChannelResponse() == null ^ this.getVoiceChannelResponse() == null)
+            return false;
+        if (other.getVoiceChannelResponse() != null
+                && other.getVoiceChannelResponse().equals(this.getVoiceChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/VoiceChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/VoiceChannelRequest.java
new file mode 100644
index 0000000000..39add25e29
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/VoiceChannelRequest.java
@@ -0,0 +1,114 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Voice Channel Request
+ */
+public class VoiceChannelRequest implements Serializable {
+    /**
+     * If the channel is enabled for sending messages.
+     */
+    private Boolean enabled;
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean isEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean getEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     */
+    public void setEnabled(Boolean enabled) {
+        this.enabled = enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public VoiceChannelRequest withEnabled(Boolean enabled) {
+        this.enabled = enabled;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getEnabled() != null)
+            sb.append("Enabled: " + getEnabled());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof VoiceChannelRequest == false)
+            return false;
+        VoiceChannelRequest other = (VoiceChannelRequest) obj;
+
+        if (other.getEnabled() == null ^ this.getEnabled() == null)
+            return false;
+        if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/VoiceChannelResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/VoiceChannelResponse.java
new file mode 100644
index 0000000000..7e1841f99e
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/VoiceChannelResponse.java
@@ -0,0 +1,552 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Voice Channel Response.
+ */
+public class VoiceChannelResponse implements Serializable {
+    /**
+     * Application id
+     */
+    private String applicationId;
+
+    /**
+     * The date that the settings were last updated in ISO 8601 format.
+     */
+    private String creationDate;
+
+    /**
+     * If the channel is enabled for sending messages.
+     */
+    private Boolean enabled;
+
+    /**
+     * The new value for the hasCredential property for this object.
+     */
+    private Boolean hasCredential;
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     */
+    private String id;
+
+    /**
+     * Is this channel archived
+     */
+    private Boolean isArchived;
+
+    /**
+     * Who made the last change
+     */
+    private String lastModifiedBy;
+
+    /**
+     * Last date this was updated
+     */
+    private String lastModifiedDate;
+
+    /**
+     * Platform type. Will be "Voice"
+     */
+    private String platform;
+
+    /**
+     * Version of channel
+     */
+    private Integer version;
+
+    /**
+     * Application id
+     *
+     * @return Application id
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Application id
+     *
+     * @param applicationId Application id
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Application id
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId Application id
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public VoiceChannelResponse withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * The date that the settings were last updated in ISO 8601 format.
+     *
+     * @return The date that the settings were last updated in ISO 8601 format.
+     */
+    public String getCreationDate() {
+        return creationDate;
+    }
+
+    /**
+     * The date that the settings were last updated in ISO 8601 format.
+     *
+     * @param creationDate The date that the settings were last updated in ISO
+     *            8601 format.
+     */
+    public void setCreationDate(String creationDate) {
+        this.creationDate = creationDate;
+    }
+
+    /**
+     * The date that the settings were last updated in ISO 8601 format.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param creationDate The date that the settings were last updated in ISO
+     *            8601 format.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public VoiceChannelResponse withCreationDate(String creationDate) {
+        this.creationDate = creationDate;
+        return this;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean isEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean getEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     */
+    public void setEnabled(Boolean enabled) {
+        this.enabled = enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public VoiceChannelResponse withEnabled(Boolean enabled) {
+        this.enabled = enabled;
+        return this;
+    }
+
+    /**
+     * Returns the value of the hasCredential property for this object.
+     *
+     * @return The value of the hasCredential property for this object.
+     */
+    public Boolean isHasCredential() {
+        return hasCredential;
+    }
+
+    /**
+     * Returns the value of the hasCredential property for this object.
+     *
+     * @return The value of the hasCredential property for this object.
+     */
+    public Boolean getHasCredential() {
+        return hasCredential;
+    }
+
+    /**
+     * Sets the value of hasCredential
+     *
+     * @param hasCredential The new value for the hasCredential property for
+     *            this object.
+     */
+    public void setHasCredential(Boolean hasCredential) {
+        this.hasCredential = hasCredential;
+    }
+
+    /**
+     * Sets the value of the hasCredential property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param hasCredential The new value for the hasCredential property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public VoiceChannelResponse withHasCredential(Boolean hasCredential) {
+        this.hasCredential = hasCredential;
+        return this;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     *
+     * @return Channel ID. Not used, only for backwards compatibility.
+     */
+    public String getId() {
+        return id;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     *
+     * @param id Channel ID. Not used, only for backwards compatibility.
+     */
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param id Channel ID. Not used, only for backwards compatibility.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public VoiceChannelResponse withId(String id) {
+        this.id = id;
+        return this;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @return Is this channel archived
+     */
+    public Boolean isIsArchived() {
+        return isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @return Is this channel archived
+     */
+    public Boolean getIsArchived() {
+        return isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @param isArchived Is this channel archived
+     */
+    public void setIsArchived(Boolean isArchived) {
+        this.isArchived = isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param isArchived Is this channel archived
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public VoiceChannelResponse withIsArchived(Boolean isArchived) {
+        this.isArchived = isArchived;
+        return this;
+    }
+
+    /**
+     * Who made the last change
+     *
+     * @return Who made the last change
+     */
+    public String getLastModifiedBy() {
+        return lastModifiedBy;
+    }
+
+    /**
+     * Who made the last change
+     *
+     * @param lastModifiedBy Who made the last change
+     */
+    public void setLastModifiedBy(String lastModifiedBy) {
+        this.lastModifiedBy = lastModifiedBy;
+    }
+
+    /**
+     * Who made the last change
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastModifiedBy Who made the last change
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public VoiceChannelResponse withLastModifiedBy(String lastModifiedBy) {
+        this.lastModifiedBy = lastModifiedBy;
+        return this;
+    }
+
+    /**
+     * Last date this was updated
+     *
+     * @return Last date this was updated
+     */
+    public String getLastModifiedDate() {
+        return lastModifiedDate;
+    }
+
+    /**
+     * Last date this was updated
+     *
+     * @param lastModifiedDate Last date this was updated
+     */
+    public void setLastModifiedDate(String lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+    }
+
+    /**
+     * Last date this was updated
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastModifiedDate Last date this was updated
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public VoiceChannelResponse withLastModifiedDate(String lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+        return this;
+    }
+
+    /**
+     * Platform type. Will be "Voice"
+     *
+     * @return Platform type. Will be "Voice"
+     */
+    public String getPlatform() {
+        return platform;
+    }
+
+    /**
+     * Platform type. Will be "Voice"
+     *
+     * @param platform Platform type. Will be "Voice"
+     */
+    public void setPlatform(String platform) {
+        this.platform = platform;
+    }
+
+    /**
+     * Platform type. Will be "Voice"
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param platform Platform type. Will be "Voice"
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public VoiceChannelResponse withPlatform(String platform) {
+        this.platform = platform;
+        return this;
+    }
+
+    /**
+     * Version of channel
+     *
+     * @return Version of channel
+     */
+    public Integer getVersion() {
+        return version;
+    }
+
+    /**
+     * Version of channel
+     *
+     * @param version Version of channel
+     */
+    public void setVersion(Integer version) {
+        this.version = version;
+    }
+
+    /**
+     * Version of channel
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param version Version of channel
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public VoiceChannelResponse withVersion(Integer version) {
+        this.version = version;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getCreationDate() != null)
+            sb.append("CreationDate: " + getCreationDate() + ",");
+        if (getEnabled() != null)
+            sb.append("Enabled: " + getEnabled() + ",");
+        if (getHasCredential() != null)
+            sb.append("HasCredential: " + getHasCredential() + ",");
+        if (getId() != null)
+            sb.append("Id: " + getId() + ",");
+        if (getIsArchived() != null)
+            sb.append("IsArchived: " + getIsArchived() + ",");
+        if (getLastModifiedBy() != null)
+            sb.append("LastModifiedBy: " + getLastModifiedBy() + ",");
+        if (getLastModifiedDate() != null)
+            sb.append("LastModifiedDate: " + getLastModifiedDate() + ",");
+        if (getPlatform() != null)
+            sb.append("Platform: " + getPlatform() + ",");
+        if (getVersion() != null)
+            sb.append("Version: " + getVersion());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime * hashCode
+                + ((getCreationDate() == null) ? 0 : getCreationDate().hashCode());
+        hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
+        hashCode = prime * hashCode
+                + ((getHasCredential() == null) ? 0 : getHasCredential().hashCode());
+        hashCode = prime * hashCode + ((getId() == null) ? 0 : getId().hashCode());
+        hashCode = prime * hashCode + ((getIsArchived() == null) ? 0 : getIsArchived().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastModifiedBy() == null) ? 0 : getLastModifiedBy().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastModifiedDate() == null) ? 0 : getLastModifiedDate().hashCode());
+        hashCode = prime * hashCode + ((getPlatform() == null) ? 0 : getPlatform().hashCode());
+        hashCode = prime * hashCode + ((getVersion() == null) ? 0 : getVersion().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof VoiceChannelResponse == false)
+            return false;
+        VoiceChannelResponse other = (VoiceChannelResponse) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        if (other.getCreationDate() == null ^ this.getCreationDate() == null)
+            return false;
+        if (other.getCreationDate() != null
+                && other.getCreationDate().equals(this.getCreationDate()) == false)
+            return false;
+        if (other.getEnabled() == null ^ this.getEnabled() == null)
+            return false;
+        if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
+            return false;
+        if (other.getHasCredential() == null ^ this.getHasCredential() == null)
+            return false;
+        if (other.getHasCredential() != null
+                && other.getHasCredential().equals(this.getHasCredential()) == false)
+            return false;
+        if (other.getId() == null ^ this.getId() == null)
+            return false;
+        if (other.getId() != null && other.getId().equals(this.getId()) == false)
+            return false;
+        if (other.getIsArchived() == null ^ this.getIsArchived() == null)
+            return false;
+        if (other.getIsArchived() != null
+                && other.getIsArchived().equals(this.getIsArchived()) == false)
+            return false;
+        if (other.getLastModifiedBy() == null ^ this.getLastModifiedBy() == null)
+            return false;
+        if (other.getLastModifiedBy() != null
+                && other.getLastModifiedBy().equals(this.getLastModifiedBy()) == false)
+            return false;
+        if (other.getLastModifiedDate() == null ^ this.getLastModifiedDate() == null)
+            return false;
+        if (other.getLastModifiedDate() != null
+                && other.getLastModifiedDate().equals(this.getLastModifiedDate()) == false)
+            return false;
+        if (other.getPlatform() == null ^ this.getPlatform() == null)
+            return false;
+        if (other.getPlatform() != null && other.getPlatform().equals(this.getPlatform()) == false)
+            return false;
+        if (other.getVersion() == null ^ this.getVersion() == null)
+            return false;
+        if (other.getVersion() != null && other.getVersion().equals(this.getVersion()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/VoiceMessage.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/VoiceMessage.java
new file mode 100644
index 0000000000..3cf95bcfcf
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/VoiceMessage.java
@@ -0,0 +1,340 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Voice Message.
+ */
+public class VoiceMessage implements Serializable {
+    /**
+     * The message body of the notification, the email body or the text message.
+     */
+    private String body;
+
+    /**
+     * Language of sent message
+     */
+    private String languageCode;
+
+    /**
+     * Is the number from the pool or messaging service to send from.
+     */
+    private String originationNumber;
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     */
+    private java.util.Map<String, java.util.List<String>> substitutions;
+
+    /**
+     * Voice ID of sent message.
+     */
+    private String voiceId;
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @return The message body of the notification, the email body or the text
+     *         message.
+     */
+    public String getBody() {
+        return body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     */
+    public void setBody(String body) {
+        this.body = body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public VoiceMessage withBody(String body) {
+        this.body = body;
+        return this;
+    }
+
+    /**
+     * Language of sent message
+     *
+     * @return Language of sent message
+     */
+    public String getLanguageCode() {
+        return languageCode;
+    }
+
+    /**
+     * Language of sent message
+     *
+     * @param languageCode Language of sent message
+     */
+    public void setLanguageCode(String languageCode) {
+        this.languageCode = languageCode;
+    }
+
+    /**
+     * Language of sent message
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param languageCode Language of sent message
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public VoiceMessage withLanguageCode(String languageCode) {
+        this.languageCode = languageCode;
+        return this;
+    }
+
+    /**
+     * Is the number from the pool or messaging service to send from.
+     *
+     * @return Is the number from the pool or messaging service to send from.
+     */
+    public String getOriginationNumber() {
+        return originationNumber;
+    }
+
+    /**
+     * Is the number from the pool or messaging service to send from.
+     *
+     * @param originationNumber Is the number from the pool or messaging service
+     *            to send from.
+     */
+    public void setOriginationNumber(String originationNumber) {
+        this.originationNumber = originationNumber;
+    }
+
+    /**
+     * Is the number from the pool or messaging service to send from.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param originationNumber Is the number from the pool or messaging service
+     *            to send from.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public VoiceMessage withOriginationNumber(String originationNumber) {
+        this.originationNumber = originationNumber;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @return Default message substitutions. Can be overridden by individual
+     *         address substitutions.
+     */
+    public java.util.Map<String, java.util.List<String>> getSubstitutions() {
+        return substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     */
+    public void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public VoiceMessage withSubstitutions(
+            java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * The method adds a new key-value pair into Substitutions parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into Substitutions.
+     * @param value The corresponding value of the entry to be added into
+     *            Substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public VoiceMessage addSubstitutionsEntry(String key, java.util.List<String> value) {
+        if (null == this.substitutions) {
+            this.substitutions = new java.util.HashMap<String, java.util.List<String>>();
+        }
+        if (this.substitutions.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.substitutions.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public VoiceMessage clearSubstitutionsEntries() {
+        this.substitutions = null;
+        return this;
+    }
+
+    /**
+     * Voice ID of sent message.
+     *
+     * @return Voice ID of sent message.
+     */
+    public String getVoiceId() {
+        return voiceId;
+    }
+
+    /**
+     * Voice ID of sent message.
+     *
+     * @param voiceId Voice ID of sent message.
+     */
+    public void setVoiceId(String voiceId) {
+        this.voiceId = voiceId;
+    }
+
+    /**
+     * Voice ID of sent message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param voiceId Voice ID of sent message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public VoiceMessage withVoiceId(String voiceId) {
+        this.voiceId = voiceId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getBody() != null)
+            sb.append("Body: " + getBody() + ",");
+        if (getLanguageCode() != null)
+            sb.append("LanguageCode: " + getLanguageCode() + ",");
+        if (getOriginationNumber() != null)
+            sb.append("OriginationNumber: " + getOriginationNumber() + ",");
+        if (getSubstitutions() != null)
+            sb.append("Substitutions: " + getSubstitutions() + ",");
+        if (getVoiceId() != null)
+            sb.append("VoiceId: " + getVoiceId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getBody() == null) ? 0 : getBody().hashCode());
+        hashCode = prime * hashCode
+                + ((getLanguageCode() == null) ? 0 : getLanguageCode().hashCode());
+        hashCode = prime * hashCode
+                + ((getOriginationNumber() == null) ? 0 : getOriginationNumber().hashCode());
+        hashCode = prime * hashCode
+                + ((getSubstitutions() == null) ? 0 : getSubstitutions().hashCode());
+        hashCode = prime * hashCode + ((getVoiceId() == null) ? 0 : getVoiceId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof VoiceMessage == false)
+            return false;
+        VoiceMessage other = (VoiceMessage) obj;
+
+        if (other.getBody() == null ^ this.getBody() == null)
+            return false;
+        if (other.getBody() != null && other.getBody().equals(this.getBody()) == false)
+            return false;
+        if (other.getLanguageCode() == null ^ this.getLanguageCode() == null)
+            return false;
+        if (other.getLanguageCode() != null
+                && other.getLanguageCode().equals(this.getLanguageCode()) == false)
+            return false;
+        if (other.getOriginationNumber() == null ^ this.getOriginationNumber() == null)
+            return false;
+        if (other.getOriginationNumber() != null
+                && other.getOriginationNumber().equals(this.getOriginationNumber()) == false)
+            return false;
+        if (other.getSubstitutions() == null ^ this.getSubstitutions() == null)
+            return false;
+        if (other.getSubstitutions() != null
+                && other.getSubstitutions().equals(this.getSubstitutions()) == false)
+            return false;
+        if (other.getVoiceId() == null ^ this.getVoiceId() == null)
+            return false;
+        if (other.getVoiceId() != null && other.getVoiceId().equals(this.getVoiceId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteApplicationSettingsRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteApplicationSettingsRequest.java
index c1c7c70ae6..7d79270c83 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteApplicationSettingsRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteApplicationSettingsRequest.java
@@ -32,16 +32,28 @@
     private Boolean cloudWatchMetricsEnabled;
 
     /**
-     * The default campaign limits for the app. These limits apply to each
-     * campaign for the app, unless the campaign overrides the default with
-     * limits of its own.
+     * The limits that apply to each campaign in the project by default.
+     * Campaigns can also have their own limits, which override the settings at
+     * the project level.
      */
     private CampaignLimits limits;
 
     /**
-     * The default quiet time for the app. Each campaign for this app sends no
-     * messages during this time unless the campaign overrides the default with
-     * a quiet time of its own.
+     * The default quiet time for the app. Campaigns in the app don't send
+     * messages to endpoints during the quiet time. Note: Make sure that your
+     * endpoints include the Demographics.Timezone attribute if you plan to
+     * enable a quiet time for your app. If your endpoints don't include this
+     * attribute, they'll receive the messages that you send them, even if quiet
+     * time is enabled. When you set up an app to use quiet time, campaigns in
+     * that app don't send messages during the time range you specified, as long
+     * as all of the following are true: - The endpoint includes a valid
+     * Demographic.Timezone attribute. - The current time in the endpoint's time
+     * zone is later than or equal to the time specified in the QuietTime.Start
+     * attribute for the app (or campaign, if applicable). - The current time in
+     * the endpoint's time zone is earlier than or equal to the time specified
+     * in the QuietTime.End attribute for the app (or campaign, if applicable).
+     * Individual campaigns within the app can have their own quiet time
+     * settings, which override the quiet time settings at the app level.
      */
     private QuietTime quietTime;
 
@@ -124,42 +136,42 @@ public WriteApplicationSettingsRequest withCloudWatchMetricsEnabled(
     }
 
     /**
-     * The default campaign limits for the app. These limits apply to each
-     * campaign for the app, unless the campaign overrides the default with
-     * limits of its own.
+     * The limits that apply to each campaign in the project by default.
+     * Campaigns can also have their own limits, which override the settings at
+     * the project level.
      *
-     * @return The default campaign limits for the app. These limits apply to
-     *         each campaign for the app, unless the campaign overrides the
-     *         default with limits of its own.
+     * @return The limits that apply to each campaign in the project by default.
+     *         Campaigns can also have their own limits, which override the
+     *         settings at the project level.
      */
     public CampaignLimits getLimits() {
         return limits;
     }
 
     /**
-     * The default campaign limits for the app. These limits apply to each
-     * campaign for the app, unless the campaign overrides the default with
-     * limits of its own.
+     * The limits that apply to each campaign in the project by default.
+     * Campaigns can also have their own limits, which override the settings at
+     * the project level.
      *
-     * @param limits The default campaign limits for the app. These limits apply
-     *            to each campaign for the app, unless the campaign overrides
-     *            the default with limits of its own.
+     * @param limits The limits that apply to each campaign in the project by
+     *            default. Campaigns can also have their own limits, which
+     *            override the settings at the project level.
      */
     public void setLimits(CampaignLimits limits) {
         this.limits = limits;
     }
 
     /**
-     * The default campaign limits for the app. These limits apply to each
-     * campaign for the app, unless the campaign overrides the default with
-     * limits of its own.
+     * The limits that apply to each campaign in the project by default.
+     * Campaigns can also have their own limits, which override the settings at
+     * the project level.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param limits The default campaign limits for the app. These limits apply
-     *            to each campaign for the app, unless the campaign overrides
-     *            the default with limits of its own.
+     * @param limits The limits that apply to each campaign in the project by
+     *            default. Campaigns can also have their own limits, which
+     *            override the settings at the project level.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -169,42 +181,124 @@ public WriteApplicationSettingsRequest withLimits(CampaignLimits limits) {
     }
 
     /**
-     * The default quiet time for the app. Each campaign for this app sends no
-     * messages during this time unless the campaign overrides the default with
-     * a quiet time of its own.
+     * The default quiet time for the app. Campaigns in the app don't send
+     * messages to endpoints during the quiet time. Note: Make sure that your
+     * endpoints include the Demographics.Timezone attribute if you plan to
+     * enable a quiet time for your app. If your endpoints don't include this
+     * attribute, they'll receive the messages that you send them, even if quiet
+     * time is enabled. When you set up an app to use quiet time, campaigns in
+     * that app don't send messages during the time range you specified, as long
+     * as all of the following are true: - The endpoint includes a valid
+     * Demographic.Timezone attribute. - The current time in the endpoint's time
+     * zone is later than or equal to the time specified in the QuietTime.Start
+     * attribute for the app (or campaign, if applicable). - The current time in
+     * the endpoint's time zone is earlier than or equal to the time specified
+     * in the QuietTime.End attribute for the app (or campaign, if applicable).
+     * Individual campaigns within the app can have their own quiet time
+     * settings, which override the quiet time settings at the app level.
      *
-     * @return The default quiet time for the app. Each campaign for this app
-     *         sends no messages during this time unless the campaign overrides
-     *         the default with a quiet time of its own.
+     * @return The default quiet time for the app. Campaigns in the app don't
+     *         send messages to endpoints during the quiet time. Note: Make sure
+     *         that your endpoints include the Demographics.Timezone attribute
+     *         if you plan to enable a quiet time for your app. If your
+     *         endpoints don't include this attribute, they'll receive the
+     *         messages that you send them, even if quiet time is enabled. When
+     *         you set up an app to use quiet time, campaigns in that app don't
+     *         send messages during the time range you specified, as long as all
+     *         of the following are true: - The endpoint includes a valid
+     *         Demographic.Timezone attribute. - The current time in the
+     *         endpoint's time zone is later than or equal to the time specified
+     *         in the QuietTime.Start attribute for the app (or campaign, if
+     *         applicable). - The current time in the endpoint's time zone is
+     *         earlier than or equal to the time specified in the QuietTime.End
+     *         attribute for the app (or campaign, if applicable). Individual
+     *         campaigns within the app can have their own quiet time settings,
+     *         which override the quiet time settings at the app level.
      */
     public QuietTime getQuietTime() {
         return quietTime;
     }
 
     /**
-     * The default quiet time for the app. Each campaign for this app sends no
-     * messages during this time unless the campaign overrides the default with
-     * a quiet time of its own.
+     * The default quiet time for the app. Campaigns in the app don't send
+     * messages to endpoints during the quiet time. Note: Make sure that your
+     * endpoints include the Demographics.Timezone attribute if you plan to
+     * enable a quiet time for your app. If your endpoints don't include this
+     * attribute, they'll receive the messages that you send them, even if quiet
+     * time is enabled. When you set up an app to use quiet time, campaigns in
+     * that app don't send messages during the time range you specified, as long
+     * as all of the following are true: - The endpoint includes a valid
+     * Demographic.Timezone attribute. - The current time in the endpoint's time
+     * zone is later than or equal to the time specified in the QuietTime.Start
+     * attribute for the app (or campaign, if applicable). - The current time in
+     * the endpoint's time zone is earlier than or equal to the time specified
+     * in the QuietTime.End attribute for the app (or campaign, if applicable).
+     * Individual campaigns within the app can have their own quiet time
+     * settings, which override the quiet time settings at the app level.
      *
-     * @param quietTime The default quiet time for the app. Each campaign for
-     *            this app sends no messages during this time unless the
-     *            campaign overrides the default with a quiet time of its own.
+     * @param quietTime The default quiet time for the app. Campaigns in the app
+     *            don't send messages to endpoints during the quiet time. Note:
+     *            Make sure that your endpoints include the
+     *            Demographics.Timezone attribute if you plan to enable a quiet
+     *            time for your app. If your endpoints don't include this
+     *            attribute, they'll receive the messages that you send them,
+     *            even if quiet time is enabled. When you set up an app to use
+     *            quiet time, campaigns in that app don't send messages during
+     *            the time range you specified, as long as all of the following
+     *            are true: - The endpoint includes a valid Demographic.Timezone
+     *            attribute. - The current time in the endpoint's time zone is
+     *            later than or equal to the time specified in the
+     *            QuietTime.Start attribute for the app (or campaign, if
+     *            applicable). - The current time in the endpoint's time zone is
+     *            earlier than or equal to the time specified in the
+     *            QuietTime.End attribute for the app (or campaign, if
+     *            applicable). Individual campaigns within the app can have
+     *            their own quiet time settings, which override the quiet time
+     *            settings at the app level.
      */
     public void setQuietTime(QuietTime quietTime) {
         this.quietTime = quietTime;
     }
 
     /**
-     * The default quiet time for the app. Each campaign for this app sends no
-     * messages during this time unless the campaign overrides the default with
-     * a quiet time of its own.
+     * The default quiet time for the app. Campaigns in the app don't send
+     * messages to endpoints during the quiet time. Note: Make sure that your
+     * endpoints include the Demographics.Timezone attribute if you plan to
+     * enable a quiet time for your app. If your endpoints don't include this
+     * attribute, they'll receive the messages that you send them, even if quiet
+     * time is enabled. When you set up an app to use quiet time, campaigns in
+     * that app don't send messages during the time range you specified, as long
+     * as all of the following are true: - The endpoint includes a valid
+     * Demographic.Timezone attribute. - The current time in the endpoint's time
+     * zone is later than or equal to the time specified in the QuietTime.Start
+     * attribute for the app (or campaign, if applicable). - The current time in
+     * the endpoint's time zone is earlier than or equal to the time specified
+     * in the QuietTime.End attribute for the app (or campaign, if applicable).
+     * Individual campaigns within the app can have their own quiet time
+     * settings, which override the quiet time settings at the app level.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param quietTime The default quiet time for the app. Each campaign for
-     *            this app sends no messages during this time unless the
-     *            campaign overrides the default with a quiet time of its own.
+     * @param quietTime The default quiet time for the app. Campaigns in the app
+     *            don't send messages to endpoints during the quiet time. Note:
+     *            Make sure that your endpoints include the
+     *            Demographics.Timezone attribute if you plan to enable a quiet
+     *            time for your app. If your endpoints don't include this
+     *            attribute, they'll receive the messages that you send them,
+     *            even if quiet time is enabled. When you set up an app to use
+     *            quiet time, campaigns in that app don't send messages during
+     *            the time range you specified, as long as all of the following
+     *            are true: - The endpoint includes a valid Demographic.Timezone
+     *            attribute. - The current time in the endpoint's time zone is
+     *            later than or equal to the time specified in the
+     *            QuietTime.Start attribute for the app (or campaign, if
+     *            applicable). - The current time in the endpoint's time zone is
+     *            earlier than or equal to the time specified in the
+     *            QuietTime.End attribute for the app (or campaign, if
+     *            applicable). Individual campaigns within the app can have
+     *            their own quiet time settings, which override the quiet time
+     *            settings at the app level.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelRequestJsonUnmarshaller.java
index 91c2b936fe..7975d144ca 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelRequestJsonUnmarshaller.java
@@ -37,14 +37,14 @@ public ADMChannelRequest unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("ClientId")) {
-                aDMChannelRequest.setClientId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aDMChannelRequest.setClientId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ClientSecret")) {
-                aDMChannelRequest.setClientSecret(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aDMChannelRequest.setClientSecret(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Enabled")) {
-                aDMChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aDMChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelResponseJsonUnmarshaller.java
index 8a081e6750..d8048868f6 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelResponseJsonUnmarshaller.java
@@ -40,19 +40,20 @@ public ADMChannelResponse unmarshall(JsonUnmarshallerContext context) throws Exc
                 aDMChannelResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("CreationDate")) {
-                aDMChannelResponse.setCreationDate(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aDMChannelResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Enabled")) {
-                aDMChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aDMChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("HasCredential")) {
                 aDMChannelResponse.setHasCredential(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Id")) {
-                aDMChannelResponse.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aDMChannelResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("IsArchived")) {
-                aDMChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aDMChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastModifiedBy")) {
                 aDMChannelResponse.setLastModifiedBy(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -60,11 +61,11 @@ public ADMChannelResponse unmarshall(JsonUnmarshallerContext context) throws Exc
                 aDMChannelResponse.setLastModifiedDate(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Platform")) {
-                aDMChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aDMChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Version")) {
-                aDMChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aDMChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMMessageJsonUnmarshaller.java
index c4cb614ac9..522828a40c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMMessageJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMMessageJsonUnmarshaller.java
@@ -36,46 +36,57 @@ public ADMMessage unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Action")) {
-                aDMMessage.setAction(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aDMMessage.setAction(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Body")) {
-                aDMMessage.setBody(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aDMMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ConsolidationKey")) {
-                aDMMessage.setConsolidationKey(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aDMMessage.setConsolidationKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Data")) {
-                aDMMessage
-                        .setData(new MapUnmarshaller<String>(StringJsonUnmarshaller.getInstance())
+                aDMMessage.setData(new MapUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("ExpiresAfter")) {
-                aDMMessage
-                        .setExpiresAfter(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aDMMessage.setExpiresAfter(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("IconReference")) {
                 aDMMessage.setIconReference(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ImageIconUrl")) {
-                aDMMessage
-                        .setImageIconUrl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aDMMessage.setImageIconUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ImageUrl")) {
-                aDMMessage.setImageUrl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aDMMessage.setImageUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("MD5")) {
-                aDMMessage.setMD5(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aDMMessage.setMD5(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RawContent")) {
-                aDMMessage.setRawContent(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aDMMessage.setRawContent(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SilentPush")) {
-                aDMMessage.setSilentPush(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                aDMMessage.setSilentPush(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SmallImageIconUrl")) {
-                aDMMessage.setSmallImageIconUrl(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aDMMessage.setSmallImageIconUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Sound")) {
-                aDMMessage.setSound(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aDMMessage.setSound(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Substitutions")) {
                 aDMMessage.setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
-                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()))
-                        .unmarshall(context));
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Title")) {
-                aDMMessage.setTitle(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aDMMessage.setTitle(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Url")) {
-                aDMMessage.setUrl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aDMMessage.setUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelRequestJsonUnmarshaller.java
index ad6f8219a2..f4cfbee88c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelRequestJsonUnmarshaller.java
@@ -37,29 +37,30 @@ public APNSChannelRequest unmarshall(JsonUnmarshallerContext context) throws Exc
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("BundleId")) {
-                aPNSChannelRequest.setBundleId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aPNSChannelRequest.setBundleId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Certificate")) {
-                aPNSChannelRequest.setCertificate(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aPNSChannelRequest.setCertificate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("DefaultAuthenticationMethod")) {
                 aPNSChannelRequest.setDefaultAuthenticationMethod(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Enabled")) {
-                aPNSChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aPNSChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("PrivateKey")) {
-                aPNSChannelRequest.setPrivateKey(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aPNSChannelRequest.setPrivateKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TeamId")) {
-                aPNSChannelRequest.setTeamId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aPNSChannelRequest.setTeamId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TokenKey")) {
-                aPNSChannelRequest.setTokenKey(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aPNSChannelRequest.setTokenKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TokenKeyId")) {
-                aPNSChannelRequest.setTokenKeyId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aPNSChannelRequest.setTokenKeyId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelResponseJsonUnmarshaller.java
index a1c81a47d7..8e8f49a4eb 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelResponseJsonUnmarshaller.java
@@ -44,10 +44,11 @@ public APNSChannelResponse unmarshall(JsonUnmarshallerContext context) throws Ex
                         .unmarshall(context));
             } else if (name.equals("DefaultAuthenticationMethod")) {
                 aPNSChannelResponse.setDefaultAuthenticationMethod(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Enabled")) {
-                aPNSChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aPNSChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("HasCredential")) {
                 aPNSChannelResponse.setHasCredential(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -55,10 +56,11 @@ public APNSChannelResponse unmarshall(JsonUnmarshallerContext context) throws Ex
                 aPNSChannelResponse.setHasTokenKey(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Id")) {
-                aPNSChannelResponse.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aPNSChannelResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("IsArchived")) {
-                aPNSChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aPNSChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastModifiedBy")) {
                 aPNSChannelResponse.setLastModifiedBy(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -66,11 +68,11 @@ public APNSChannelResponse unmarshall(JsonUnmarshallerContext context) throws Ex
                 aPNSChannelResponse.setLastModifiedDate(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Platform")) {
-                aPNSChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aPNSChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Version")) {
-                aPNSChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aPNSChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSMessageJsonUnmarshaller.java
index 8c131eeaa9..b73470bb7f 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSMessageJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSMessageJsonUnmarshaller.java
@@ -36,45 +36,61 @@ public APNSMessage unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Action")) {
-                aPNSMessage.setAction(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aPNSMessage.setAction(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Badge")) {
-                aPNSMessage.setBadge(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                aPNSMessage.setBadge(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Body")) {
-                aPNSMessage.setBody(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aPNSMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Category")) {
-                aPNSMessage.setCategory(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aPNSMessage.setCategory(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CollapseId")) {
-                aPNSMessage.setCollapseId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aPNSMessage.setCollapseId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Data")) {
                 aPNSMessage.setData(new MapUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("MediaUrl")) {
-                aPNSMessage.setMediaUrl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aPNSMessage.setMediaUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("PreferredAuthenticationMethod")) {
                 aPNSMessage.setPreferredAuthenticationMethod(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Priority")) {
-                aPNSMessage.setPriority(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aPNSMessage.setPriority(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RawContent")) {
-                aPNSMessage.setRawContent(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aPNSMessage.setRawContent(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SilentPush")) {
-                aPNSMessage
-                        .setSilentPush(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                aPNSMessage.setSilentPush(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Sound")) {
-                aPNSMessage.setSound(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aPNSMessage.setSound(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Substitutions")) {
                 aPNSMessage.setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
-                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()))
-                        .unmarshall(context));
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ThreadId")) {
-                aPNSMessage.setThreadId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aPNSMessage.setThreadId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TimeToLive")) {
-                aPNSMessage
-                        .setTimeToLive(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                aPNSMessage.setTimeToLive(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Title")) {
-                aPNSMessage.setTitle(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aPNSMessage.setTitle(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Url")) {
-                aPNSMessage.setUrl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                aPNSMessage.setUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelRequestJsonUnmarshaller.java
index d1338acdac..ddcf13f623 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelRequestJsonUnmarshaller.java
@@ -44,7 +44,8 @@ public APNSSandboxChannelRequest unmarshall(JsonUnmarshallerContext context) thr
                         .unmarshall(context));
             } else if (name.equals("DefaultAuthenticationMethod")) {
                 aPNSSandboxChannelRequest.setDefaultAuthenticationMethod(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Enabled")) {
                 aPNSSandboxChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelResponseJsonUnmarshaller.java
index ed1f48295e..16ef206b7b 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelResponseJsonUnmarshaller.java
@@ -44,7 +44,8 @@ public APNSSandboxChannelResponse unmarshall(JsonUnmarshallerContext context) th
                         .unmarshall(context));
             } else if (name.equals("DefaultAuthenticationMethod")) {
                 aPNSSandboxChannelResponse.setDefaultAuthenticationMethod(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Enabled")) {
                 aPNSSandboxChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -55,8 +56,8 @@ public APNSSandboxChannelResponse unmarshall(JsonUnmarshallerContext context) th
                 aPNSSandboxChannelResponse.setHasTokenKey(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Id")) {
-                aPNSSandboxChannelResponse.setId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aPNSSandboxChannelResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("IsArchived")) {
                 aPNSSandboxChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSVoipChannelRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSVoipChannelRequestJsonUnmarshaller.java
index 27b24ba10e..6726910b77 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSVoipChannelRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSVoipChannelRequestJsonUnmarshaller.java
@@ -37,26 +37,27 @@ public APNSVoipChannelRequest unmarshall(JsonUnmarshallerContext context) throws
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("BundleId")) {
-                aPNSVoipChannelRequest.setBundleId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aPNSVoipChannelRequest.setBundleId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Certificate")) {
                 aPNSVoipChannelRequest.setCertificate(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("DefaultAuthenticationMethod")) {
                 aPNSVoipChannelRequest.setDefaultAuthenticationMethod(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Enabled")) {
-                aPNSVoipChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aPNSVoipChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("PrivateKey")) {
                 aPNSVoipChannelRequest.setPrivateKey(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("TeamId")) {
-                aPNSVoipChannelRequest.setTeamId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aPNSVoipChannelRequest.setTeamId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TokenKey")) {
-                aPNSVoipChannelRequest.setTokenKey(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aPNSVoipChannelRequest.setTokenKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TokenKeyId")) {
                 aPNSVoipChannelRequest.setTokenKeyId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSVoipChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSVoipChannelResponseJsonUnmarshaller.java
index e9d5abda2b..d9d2dc3648 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSVoipChannelResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSVoipChannelResponseJsonUnmarshaller.java
@@ -44,7 +44,8 @@ public APNSVoipChannelResponse unmarshall(JsonUnmarshallerContext context) throw
                         .unmarshall(context));
             } else if (name.equals("DefaultAuthenticationMethod")) {
                 aPNSVoipChannelResponse.setDefaultAuthenticationMethod(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Enabled")) {
                 aPNSVoipChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -55,8 +56,8 @@ public APNSVoipChannelResponse unmarshall(JsonUnmarshallerContext context) throw
                 aPNSVoipChannelResponse.setHasTokenKey(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Id")) {
-                aPNSVoipChannelResponse.setId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                aPNSVoipChannelResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("IsArchived")) {
                 aPNSVoipChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSVoipSandboxChannelRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSVoipSandboxChannelRequestJsonUnmarshaller.java
index 6129ff4f92..0b496d9aea 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSVoipSandboxChannelRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSVoipSandboxChannelRequestJsonUnmarshaller.java
@@ -45,7 +45,8 @@ public APNSVoipSandboxChannelRequest unmarshall(JsonUnmarshallerContext context)
                         .unmarshall(context));
             } else if (name.equals("DefaultAuthenticationMethod")) {
                 aPNSVoipSandboxChannelRequest.setDefaultAuthenticationMethod(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Enabled")) {
                 aPNSVoipSandboxChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSVoipSandboxChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSVoipSandboxChannelResponseJsonUnmarshaller.java
index 26d7a2cfa2..2be910d2a3 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSVoipSandboxChannelResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSVoipSandboxChannelResponseJsonUnmarshaller.java
@@ -39,7 +39,8 @@ public APNSVoipSandboxChannelResponse unmarshall(JsonUnmarshallerContext context
             String name = reader.nextName();
             if (name.equals("ApplicationId")) {
                 aPNSVoipSandboxChannelResponse.setApplicationId(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CreationDate")) {
                 aPNSVoipSandboxChannelResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -52,7 +53,8 @@ public APNSVoipSandboxChannelResponse unmarshall(JsonUnmarshallerContext context
                         .unmarshall(context));
             } else if (name.equals("HasCredential")) {
                 aPNSVoipSandboxChannelResponse.setHasCredential(BooleanJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("HasTokenKey")) {
                 aPNSVoipSandboxChannelResponse.setHasTokenKey(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -64,10 +66,12 @@ public APNSVoipSandboxChannelResponse unmarshall(JsonUnmarshallerContext context
                         .unmarshall(context));
             } else if (name.equals("LastModifiedBy")) {
                 aPNSVoipSandboxChannelResponse.setLastModifiedBy(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastModifiedDate")) {
                 aPNSVoipSandboxChannelResponse.setLastModifiedDate(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Platform")) {
                 aPNSVoipSandboxChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ActivitiesResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ActivitiesResponseJsonUnmarshaller.java
index 6cb83baf10..0dd7844d02 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ActivitiesResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ActivitiesResponseJsonUnmarshaller.java
@@ -38,10 +38,12 @@ public ActivitiesResponse unmarshall(JsonUnmarshallerContext context) throws Exc
             String name = reader.nextName();
             if (name.equals("Item")) {
                 activitiesResponse.setItem(new ListUnmarshaller<ActivityResponse>(
-                        ActivityResponseJsonUnmarshaller.getInstance()).unmarshall(context));
+                        ActivityResponseJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextToken")) {
-                activitiesResponse.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                activitiesResponse.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ActivityResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ActivityResponseJsonUnmarshaller.java
index cb2c713a09..e006305db0 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ActivityResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ActivityResponseJsonUnmarshaller.java
@@ -37,25 +37,29 @@ public ActivityResponse unmarshall(JsonUnmarshallerContext context) throws Excep
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("ApplicationId")) {
-                activityResponse.setApplicationId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                activityResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CampaignId")) {
-                activityResponse.setCampaignId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                activityResponse.setCampaignId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("End")) {
-                activityResponse.setEnd(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                activityResponse.setEnd(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Id")) {
-                activityResponse.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                activityResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Result")) {
-                activityResponse
-                        .setResult(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                activityResponse.setResult(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ScheduledStart")) {
-                activityResponse.setScheduledStart(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                activityResponse.setScheduledStart(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Start")) {
-                activityResponse.setStart(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                activityResponse.setStart(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("State")) {
-                activityResponse.setState(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                activityResponse.setState(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SuccessfulEndpointCount")) {
                 activityResponse.setSuccessfulEndpointCount(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -69,8 +73,8 @@ public ActivityResponse unmarshall(JsonUnmarshallerContext context) throws Excep
                 activityResponse.setTotalEndpointCount(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("TreatmentId")) {
-                activityResponse.setTreatmentId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                activityResponse.setTreatmentId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AddressConfigurationJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AddressConfigurationJsonUnmarshaller.java
index de873c86f4..4a39a5c950 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AddressConfigurationJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AddressConfigurationJsonUnmarshaller.java
@@ -44,14 +44,18 @@ public AddressConfiguration unmarshall(JsonUnmarshallerContext context) throws E
                         .unmarshall(context));
             } else if (name.equals("Context")) {
                 addressConfiguration.setContext(new MapUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("RawContent")) {
-                addressConfiguration.setRawContent(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                addressConfiguration.setRawContent(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Substitutions")) {
                 addressConfiguration.setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
-                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()))
-                        .unmarshall(context));
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
             } else if (name.equals("TitleOverride")) {
                 addressConfiguration.setTitleOverride(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationResponseJsonUnmarshaller.java
index 632ce0508e..6bb9844e9b 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationResponseJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public ApplicationResponse unmarshall(JsonUnmarshallerContext context) throws Ex
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Id")) {
-                applicationResponse.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                applicationResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Name")) {
                 applicationResponse.setName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationSettingsResourceJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationSettingsResourceJsonUnmarshaller.java
index c1707def85..b7d78ea3d0 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationSettingsResourceJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationSettingsResourceJsonUnmarshaller.java
@@ -41,10 +41,12 @@ public ApplicationSettingsResource unmarshall(JsonUnmarshallerContext context) t
                         .unmarshall(context));
             } else if (name.equals("CampaignHook")) {
                 applicationSettingsResource.setCampaignHook(CampaignHookJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastModifiedDate")) {
                 applicationSettingsResource.setLastModifiedDate(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Limits")) {
                 applicationSettingsResource.setLimits(CampaignLimitsJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationsResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationsResponseJsonUnmarshaller.java
index 532108cd7b..8acfa20ea7 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationsResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationsResponseJsonUnmarshaller.java
@@ -38,10 +38,12 @@ public ApplicationsResponse unmarshall(JsonUnmarshallerContext context) throws E
             String name = reader.nextName();
             if (name.equals("Item")) {
                 applicationsResponse.setItem(new ListUnmarshaller<ApplicationResponse>(
-                        ApplicationResponseJsonUnmarshaller.getInstance()).unmarshall(context));
+                        ApplicationResponseJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextToken")) {
-                applicationsResponse.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                applicationsResponse.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AttributeDimensionJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AttributeDimensionJsonUnmarshaller.java
index 5e9436c8b3..f7437f03a7 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AttributeDimensionJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AttributeDimensionJsonUnmarshaller.java
@@ -41,7 +41,9 @@ public AttributeDimension unmarshall(JsonUnmarshallerContext context) throws Exc
                         .unmarshall(context));
             } else if (name.equals("Values")) {
                 attributeDimension.setValues(new ListUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AttributesResourceJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AttributesResourceJsonUnmarshaller.java
index 892993200d..0fc34fed11 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AttributesResourceJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AttributesResourceJsonUnmarshaller.java
@@ -44,7 +44,9 @@ public AttributesResource unmarshall(JsonUnmarshallerContext context) throws Exc
                         .unmarshall(context));
             } else if (name.equals("Attributes")) {
                 attributesResource.setAttributes(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BadRequestExceptionUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BadRequestExceptionUnmarshaller.java
index eeec47a9a4..609afa743c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BadRequestExceptionUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BadRequestExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.pinpoint.model.BadRequestException;
 
 public class BadRequestExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,33 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public BadRequestException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        BadRequestException badRequestException = new BadRequestException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                badRequestException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("RequestID")) {
-                badRequestException.setRequestID(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return badRequestException;
-    }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelRequestJsonUnmarshaller.java
index 98c7b6fd35..deb57c5015 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelRequestJsonUnmarshaller.java
@@ -37,14 +37,14 @@ public BaiduChannelRequest unmarshall(JsonUnmarshallerContext context) throws Ex
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("ApiKey")) {
-                baiduChannelRequest.setApiKey(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                baiduChannelRequest.setApiKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Enabled")) {
-                baiduChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                baiduChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SecretKey")) {
-                baiduChannelRequest.setSecretKey(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                baiduChannelRequest.setSecretKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelResponseJsonUnmarshaller.java
index 9770bdf7b8..7640726daf 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelResponseJsonUnmarshaller.java
@@ -43,17 +43,17 @@ public BaiduChannelResponse unmarshall(JsonUnmarshallerContext context) throws E
                 baiduChannelResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Credential")) {
-                baiduChannelResponse.setCredential(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                baiduChannelResponse.setCredential(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Enabled")) {
-                baiduChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                baiduChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("HasCredential")) {
                 baiduChannelResponse.setHasCredential(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Id")) {
-                baiduChannelResponse
-                        .setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                baiduChannelResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("IsArchived")) {
                 baiduChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -64,11 +64,11 @@ public BaiduChannelResponse unmarshall(JsonUnmarshallerContext context) throws E
                 baiduChannelResponse.setLastModifiedDate(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Platform")) {
-                baiduChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                baiduChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Version")) {
-                baiduChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                baiduChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduMessageJsonUnmarshaller.java
index a41e8721df..d9a62f74ce 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduMessageJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduMessageJsonUnmarshaller.java
@@ -36,42 +36,52 @@ public BaiduMessage unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Action")) {
-                baiduMessage.setAction(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                baiduMessage.setAction(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Body")) {
-                baiduMessage.setBody(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                baiduMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Data")) {
                 baiduMessage.setData(new MapUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("IconReference")) {
-                baiduMessage.setIconReference(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                baiduMessage.setIconReference(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ImageIconUrl")) {
-                baiduMessage.setImageIconUrl(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                baiduMessage.setImageIconUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ImageUrl")) {
-                baiduMessage.setImageUrl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                baiduMessage.setImageUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RawContent")) {
-                baiduMessage
-                        .setRawContent(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                baiduMessage.setRawContent(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SilentPush")) {
                 baiduMessage.setSilentPush(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("SmallImageIconUrl")) {
-                baiduMessage.setSmallImageIconUrl(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                baiduMessage.setSmallImageIconUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Sound")) {
-                baiduMessage.setSound(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                baiduMessage.setSound(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Substitutions")) {
                 baiduMessage.setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
-                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()))
-                        .unmarshall(context));
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
             } else if (name.equals("TimeToLive")) {
                 baiduMessage.setTimeToLive(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Title")) {
-                baiduMessage.setTitle(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                baiduMessage.setTitle(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Url")) {
-                baiduMessage.setUrl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                baiduMessage.setUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignEmailMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignEmailMessageJsonUnmarshaller.java
index 0b6d06d259..52dc0b4cd4 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignEmailMessageJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignEmailMessageJsonUnmarshaller.java
@@ -37,17 +37,17 @@ public CampaignEmailMessage unmarshall(JsonUnmarshallerContext context) throws E
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Body")) {
-                campaignEmailMessage.setBody(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignEmailMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("FromAddress")) {
                 campaignEmailMessage.setFromAddress(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("HtmlBody")) {
-                campaignEmailMessage.setHtmlBody(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignEmailMessage.setHtmlBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Title")) {
-                campaignEmailMessage.setTitle(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignEmailMessage.setTitle(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignEventFilterJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignEventFilterJsonMarshaller.java
new file mode 100644
index 0000000000..49fe0f7117
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignEventFilterJsonMarshaller.java
@@ -0,0 +1,49 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO CampaignEventFilter
+ */
+class CampaignEventFilterJsonMarshaller {
+
+    public void marshall(CampaignEventFilter campaignEventFilter, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (campaignEventFilter.getDimensions() != null) {
+            EventDimensions dimensions = campaignEventFilter.getDimensions();
+            jsonWriter.name("Dimensions");
+            EventDimensionsJsonMarshaller.getInstance().marshall(dimensions, jsonWriter);
+        }
+        if (campaignEventFilter.getFilterType() != null) {
+            String filterType = campaignEventFilter.getFilterType();
+            jsonWriter.name("FilterType");
+            jsonWriter.value(filterType);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static CampaignEventFilterJsonMarshaller instance;
+
+    public static CampaignEventFilterJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new CampaignEventFilterJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignEventFilterJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignEventFilterJsonUnmarshaller.java
new file mode 100644
index 0000000000..3dd7d3cd55
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignEventFilterJsonUnmarshaller.java
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO CampaignEventFilter
+ */
+class CampaignEventFilterJsonUnmarshaller implements
+        Unmarshaller<CampaignEventFilter, JsonUnmarshallerContext> {
+
+    public CampaignEventFilter unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        CampaignEventFilter campaignEventFilter = new CampaignEventFilter();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Dimensions")) {
+                campaignEventFilter.setDimensions(EventDimensionsJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("FilterType")) {
+                campaignEventFilter.setFilterType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return campaignEventFilter;
+    }
+
+    private static CampaignEventFilterJsonUnmarshaller instance;
+
+    public static CampaignEventFilterJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new CampaignEventFilterJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignHookJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignHookJsonUnmarshaller.java
index 35b1354102..59ea519768 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignHookJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignHookJsonUnmarshaller.java
@@ -36,12 +36,14 @@ public CampaignHook unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("LambdaFunctionName")) {
-                campaignHook.setLambdaFunctionName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignHook.setLambdaFunctionName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Mode")) {
-                campaignHook.setMode(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                campaignHook.setMode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("WebUrl")) {
-                campaignHook.setWebUrl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                campaignHook.setWebUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignLimitsJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignLimitsJsonUnmarshaller.java
index 8c27f32470..89817dc6f5 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignLimitsJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignLimitsJsonUnmarshaller.java
@@ -37,15 +37,17 @@ public CampaignLimits unmarshall(JsonUnmarshallerContext context) throws Excepti
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Daily")) {
-                campaignLimits.setDaily(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                campaignLimits.setDaily(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("MaximumDuration")) {
-                campaignLimits.setMaximumDuration(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignLimits.setMaximumDuration(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("MessagesPerSecond")) {
                 campaignLimits.setMessagesPerSecond(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Total")) {
-                campaignLimits.setTotal(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                campaignLimits.setTotal(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignResponseJsonUnmarshaller.java
index 0ec808e332..1b53005668 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignResponseJsonUnmarshaller.java
@@ -38,62 +38,67 @@ public CampaignResponse unmarshall(JsonUnmarshallerContext context) throws Excep
             String name = reader.nextName();
             if (name.equals("AdditionalTreatments")) {
                 campaignResponse.setAdditionalTreatments(new ListUnmarshaller<TreatmentResource>(
-                        TreatmentResourceJsonUnmarshaller.getInstance()).unmarshall(context));
+                        TreatmentResourceJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ApplicationId")) {
-                campaignResponse.setApplicationId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CreationDate")) {
-                campaignResponse.setCreationDate(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("DefaultState")) {
                 campaignResponse.setDefaultState(CampaignStateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Description")) {
-                campaignResponse.setDescription(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignResponse.setDescription(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("HoldoutPercent")) {
                 campaignResponse.setHoldoutPercent(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Hook")) {
-                campaignResponse.setHook(CampaignHookJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignResponse.setHook(CampaignHookJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Id")) {
-                campaignResponse.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                campaignResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("IsPaused")) {
-                campaignResponse.setIsPaused(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignResponse.setIsPaused(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastModifiedDate")) {
                 campaignResponse.setLastModifiedDate(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Limits")) {
-                campaignResponse.setLimits(CampaignLimitsJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignResponse.setLimits(CampaignLimitsJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("MessageConfiguration")) {
                 campaignResponse.setMessageConfiguration(MessageConfigurationJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Name")) {
-                campaignResponse.setName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                campaignResponse.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Schedule")) {
-                campaignResponse.setSchedule(ScheduleJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignResponse.setSchedule(ScheduleJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SegmentId")) {
-                campaignResponse.setSegmentId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignResponse.setSegmentId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SegmentVersion")) {
                 campaignResponse.setSegmentVersion(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("State")) {
-                campaignResponse.setState(CampaignStateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignResponse.setState(CampaignStateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TreatmentDescription")) {
                 campaignResponse.setTreatmentDescription(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("TreatmentName")) {
-                campaignResponse.setTreatmentName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignResponse.setTreatmentName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Version")) {
-                campaignResponse.setVersion(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignResponse.setVersion(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignSmsMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignSmsMessageJsonUnmarshaller.java
index 29298ea7f3..738dc73b93 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignSmsMessageJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignSmsMessageJsonUnmarshaller.java
@@ -37,14 +37,14 @@ public CampaignSmsMessage unmarshall(JsonUnmarshallerContext context) throws Exc
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Body")) {
-                campaignSmsMessage
-                        .setBody(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                campaignSmsMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("MessageType")) {
-                campaignSmsMessage.setMessageType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignSmsMessage.setMessageType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SenderId")) {
-                campaignSmsMessage.setSenderId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignSmsMessage.setSenderId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignStateJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignStateJsonUnmarshaller.java
index 84e2784bbc..a3cf8a7dbf 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignStateJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignStateJsonUnmarshaller.java
@@ -36,8 +36,8 @@ public CampaignState unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("CampaignStatus")) {
-                campaignState.setCampaignStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignState.setCampaignStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignsResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignsResponseJsonUnmarshaller.java
index 1a4f09acf8..870876264e 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignsResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignsResponseJsonUnmarshaller.java
@@ -38,10 +38,12 @@ public CampaignsResponse unmarshall(JsonUnmarshallerContext context) throws Exce
             String name = reader.nextName();
             if (name.equals("Item")) {
                 campaignsResponse.setItem(new ListUnmarshaller<CampaignResponse>(
-                        CampaignResponseJsonUnmarshaller.getInstance()).unmarshall(context));
+                        CampaignResponseJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextToken")) {
-                campaignsResponse.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                campaignsResponse.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ChannelResponseJsonUnmarshaller.java
index 852da24cef..6a5a4f7273 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ChannelResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ChannelResponseJsonUnmarshaller.java
@@ -37,25 +37,26 @@ public ChannelResponse unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("ApplicationId")) {
-                channelResponse.setApplicationId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                channelResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CreationDate")) {
-                channelResponse.setCreationDate(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                channelResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Enabled")) {
                 channelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("HasCredential")) {
-                channelResponse.setHasCredential(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                channelResponse.setHasCredential(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Id")) {
-                channelResponse.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                channelResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("IsArchived")) {
-                channelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                channelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastModifiedBy")) {
-                channelResponse.setLastModifiedBy(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                channelResponse.setLastModifiedBy(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastModifiedDate")) {
                 channelResponse.setLastModifiedDate(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ChannelsResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ChannelsResponseJsonUnmarshaller.java
index bc60952724..7f0650ee33 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ChannelsResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ChannelsResponseJsonUnmarshaller.java
@@ -38,7 +38,9 @@ public ChannelsResponse unmarshall(JsonUnmarshallerContext context) throws Excep
             String name = reader.nextName();
             if (name.equals("Channels")) {
                 channelsResponse.setChannels(new MapUnmarshaller<ChannelResponse>(
-                        ChannelResponseJsonUnmarshaller.getInstance()).unmarshall(context));
+                        ChannelResponseJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateApplicationRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateApplicationRequestJsonUnmarshaller.java
index 13524ac6c1..851b030dc1 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateApplicationRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateApplicationRequestJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public CreateApplicationRequest unmarshall(JsonUnmarshallerContext context) thro
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Name")) {
-                createApplicationRequest.setName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                createApplicationRequest.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultMessageJsonUnmarshaller.java
index 5a8bdb9967..0b464e10a4 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultMessageJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultMessageJsonUnmarshaller.java
@@ -37,11 +37,14 @@ public DefaultMessage unmarshall(JsonUnmarshallerContext context) throws Excepti
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Body")) {
-                defaultMessage.setBody(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                defaultMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Substitutions")) {
                 defaultMessage.setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
-                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()))
-                        .unmarshall(context));
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultPushNotificationMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultPushNotificationMessageJsonUnmarshaller.java
index 14c0639718..9a98c798d5 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultPushNotificationMessageJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultPushNotificationMessageJsonUnmarshaller.java
@@ -45,14 +45,18 @@ public DefaultPushNotificationMessage unmarshall(JsonUnmarshallerContext context
                         .unmarshall(context));
             } else if (name.equals("Data")) {
                 defaultPushNotificationMessage.setData(new MapUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("SilentPush")) {
                 defaultPushNotificationMessage.setSilentPush(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Substitutions")) {
                 defaultPushNotificationMessage
                         .setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
-                                new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()))
+                                new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                                )
+                        )
                                 .unmarshall(context));
             } else if (name.equals("Title")) {
                 defaultPushNotificationMessage.setTitle(StringJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteVoiceChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteVoiceChannelRequestMarshaller.java
new file mode 100644
index 0000000000..7f0a1dcffd
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteVoiceChannelRequestMarshaller.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DeleteVoiceChannelRequest
+ */
+public class DeleteVoiceChannelRequestMarshaller implements
+        Marshaller<Request<DeleteVoiceChannelRequest>, DeleteVoiceChannelRequest> {
+
+    public Request<DeleteVoiceChannelRequest> marshall(
+            DeleteVoiceChannelRequest deleteVoiceChannelRequest) {
+        if (deleteVoiceChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DeleteVoiceChannelRequest)");
+        }
+
+        Request<DeleteVoiceChannelRequest> request = new DefaultRequest<DeleteVoiceChannelRequest>(
+                deleteVoiceChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.DELETE);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/voice";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (deleteVoiceChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(deleteVoiceChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteVoiceChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteVoiceChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..e3a233fa08
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteVoiceChannelResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DeleteVoiceChannelResult
+ */
+public class DeleteVoiceChannelResultJsonUnmarshaller implements
+        Unmarshaller<DeleteVoiceChannelResult, JsonUnmarshallerContext> {
+
+    public DeleteVoiceChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        DeleteVoiceChannelResult deleteVoiceChannelResult = new DeleteVoiceChannelResult();
+
+        return deleteVoiceChannelResult;
+    }
+
+    private static DeleteVoiceChannelResultJsonUnmarshaller instance;
+
+    public static DeleteVoiceChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DeleteVoiceChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DirectMessageConfigurationJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DirectMessageConfigurationJsonMarshaller.java
index dca889c958..282069b244 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DirectMessageConfigurationJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DirectMessageConfigurationJsonMarshaller.java
@@ -53,6 +53,11 @@ public void marshall(DirectMessageConfiguration directMessageConfiguration,
             DefaultPushNotificationMessageJsonMarshaller.getInstance().marshall(
                     defaultPushNotificationMessage, jsonWriter);
         }
+        if (directMessageConfiguration.getEmailMessage() != null) {
+            EmailMessage emailMessage = directMessageConfiguration.getEmailMessage();
+            jsonWriter.name("EmailMessage");
+            EmailMessageJsonMarshaller.getInstance().marshall(emailMessage, jsonWriter);
+        }
         if (directMessageConfiguration.getGCMMessage() != null) {
             GCMMessage gCMMessage = directMessageConfiguration.getGCMMessage();
             jsonWriter.name("GCMMessage");
@@ -63,6 +68,11 @@ public void marshall(DirectMessageConfiguration directMessageConfiguration,
             jsonWriter.name("SMSMessage");
             SMSMessageJsonMarshaller.getInstance().marshall(sMSMessage, jsonWriter);
         }
+        if (directMessageConfiguration.getVoiceMessage() != null) {
+            VoiceMessage voiceMessage = directMessageConfiguration.getVoiceMessage();
+            jsonWriter.name("VoiceMessage");
+            VoiceMessageJsonMarshaller.getInstance().marshall(voiceMessage, jsonWriter);
+        }
         jsonWriter.endObject();
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DirectMessageConfigurationJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DirectMessageConfigurationJsonUnmarshaller.java
index d257a918ea..71c2b7b731 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DirectMessageConfigurationJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DirectMessageConfigurationJsonUnmarshaller.java
@@ -44,20 +44,31 @@ public DirectMessageConfiguration unmarshall(JsonUnmarshallerContext context) th
                         .unmarshall(context));
             } else if (name.equals("BaiduMessage")) {
                 directMessageConfiguration.setBaiduMessage(BaiduMessageJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("DefaultMessage")) {
                 directMessageConfiguration.setDefaultMessage(DefaultMessageJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("DefaultPushNotificationMessage")) {
                 directMessageConfiguration
                         .setDefaultPushNotificationMessage(DefaultPushNotificationMessageJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
+            } else if (name.equals("EmailMessage")) {
+                directMessageConfiguration.setEmailMessage(EmailMessageJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("GCMMessage")) {
                 directMessageConfiguration.setGCMMessage(GCMMessageJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("SMSMessage")) {
                 directMessageConfiguration.setSMSMessage(SMSMessageJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("VoiceMessage")) {
+                directMessageConfiguration.setVoiceMessage(VoiceMessageJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelRequestJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelRequestJsonMarshaller.java
index 3f86539667..8810fcdf44 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelRequestJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelRequestJsonMarshaller.java
@@ -26,6 +26,11 @@
     public void marshall(EmailChannelRequest emailChannelRequest, AwsJsonWriter jsonWriter)
             throws Exception {
         jsonWriter.beginObject();
+        if (emailChannelRequest.getConfigurationSet() != null) {
+            String configurationSet = emailChannelRequest.getConfigurationSet();
+            jsonWriter.name("ConfigurationSet");
+            jsonWriter.value(configurationSet);
+        }
         if (emailChannelRequest.getEnabled() != null) {
             Boolean enabled = emailChannelRequest.getEnabled();
             jsonWriter.name("Enabled");
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelRequestJsonUnmarshaller.java
index 796993ae85..9bd62dcb7b 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelRequestJsonUnmarshaller.java
@@ -36,18 +36,21 @@ public EmailChannelRequest unmarshall(JsonUnmarshallerContext context) throws Ex
         reader.beginObject();
         while (reader.hasNext()) {
             String name = reader.nextName();
-            if (name.equals("Enabled")) {
-                emailChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+            if (name.equals("ConfigurationSet")) {
+                emailChannelRequest.setConfigurationSet(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Enabled")) {
+                emailChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("FromAddress")) {
-                emailChannelRequest.setFromAddress(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                emailChannelRequest.setFromAddress(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Identity")) {
-                emailChannelRequest.setIdentity(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                emailChannelRequest.setIdentity(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RoleArn")) {
-                emailChannelRequest.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                emailChannelRequest.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelResponseJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelResponseJsonMarshaller.java
index eba722a34a..3adb3b1c34 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelResponseJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelResponseJsonMarshaller.java
@@ -31,6 +31,11 @@ public void marshall(EmailChannelResponse emailChannelResponse, AwsJsonWriter js
             jsonWriter.name("ApplicationId");
             jsonWriter.value(applicationId);
         }
+        if (emailChannelResponse.getConfigurationSet() != null) {
+            String configurationSet = emailChannelResponse.getConfigurationSet();
+            jsonWriter.name("ConfigurationSet");
+            jsonWriter.value(configurationSet);
+        }
         if (emailChannelResponse.getCreationDate() != null) {
             String creationDate = emailChannelResponse.getCreationDate();
             jsonWriter.name("CreationDate");
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelResponseJsonUnmarshaller.java
index 451f1de206..6fc019ce81 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelResponseJsonUnmarshaller.java
@@ -39,12 +39,15 @@ public EmailChannelResponse unmarshall(JsonUnmarshallerContext context) throws E
             if (name.equals("ApplicationId")) {
                 emailChannelResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("ConfigurationSet")) {
+                emailChannelResponse.setConfigurationSet(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CreationDate")) {
                 emailChannelResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Enabled")) {
-                emailChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                emailChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("FromAddress")) {
                 emailChannelResponse.setFromAddress(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -52,11 +55,11 @@ public EmailChannelResponse unmarshall(JsonUnmarshallerContext context) throws E
                 emailChannelResponse.setHasCredential(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Id")) {
-                emailChannelResponse
-                        .setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                emailChannelResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Identity")) {
-                emailChannelResponse.setIdentity(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                emailChannelResponse.setIdentity(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("IsArchived")) {
                 emailChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -70,14 +73,14 @@ public EmailChannelResponse unmarshall(JsonUnmarshallerContext context) throws E
                 emailChannelResponse.setMessagesPerSecond(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Platform")) {
-                emailChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                emailChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RoleArn")) {
-                emailChannelResponse.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                emailChannelResponse.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Version")) {
-                emailChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                emailChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailMessageJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailMessageJsonMarshaller.java
new file mode 100644
index 0000000000..0927c6cb36
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailMessageJsonMarshaller.java
@@ -0,0 +1,95 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO EmailMessage
+ */
+class EmailMessageJsonMarshaller {
+
+    public void marshall(EmailMessage emailMessage, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (emailMessage.getBody() != null) {
+            String body = emailMessage.getBody();
+            jsonWriter.name("Body");
+            jsonWriter.value(body);
+        }
+        if (emailMessage.getFeedbackForwardingAddress() != null) {
+            String feedbackForwardingAddress = emailMessage.getFeedbackForwardingAddress();
+            jsonWriter.name("FeedbackForwardingAddress");
+            jsonWriter.value(feedbackForwardingAddress);
+        }
+        if (emailMessage.getFromAddress() != null) {
+            String fromAddress = emailMessage.getFromAddress();
+            jsonWriter.name("FromAddress");
+            jsonWriter.value(fromAddress);
+        }
+        if (emailMessage.getRawEmail() != null) {
+            RawEmail rawEmail = emailMessage.getRawEmail();
+            jsonWriter.name("RawEmail");
+            RawEmailJsonMarshaller.getInstance().marshall(rawEmail, jsonWriter);
+        }
+        if (emailMessage.getReplyToAddresses() != null) {
+            java.util.List<String> replyToAddresses = emailMessage.getReplyToAddresses();
+            jsonWriter.name("ReplyToAddresses");
+            jsonWriter.beginArray();
+            for (String replyToAddressesItem : replyToAddresses) {
+                if (replyToAddressesItem != null) {
+                    jsonWriter.value(replyToAddressesItem);
+                }
+            }
+            jsonWriter.endArray();
+        }
+        if (emailMessage.getSimpleEmail() != null) {
+            SimpleEmail simpleEmail = emailMessage.getSimpleEmail();
+            jsonWriter.name("SimpleEmail");
+            SimpleEmailJsonMarshaller.getInstance().marshall(simpleEmail, jsonWriter);
+        }
+        if (emailMessage.getSubstitutions() != null) {
+            java.util.Map<String, java.util.List<String>> substitutions = emailMessage
+                    .getSubstitutions();
+            jsonWriter.name("Substitutions");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, java.util.List<String>> substitutionsEntry : substitutions
+                    .entrySet()) {
+                java.util.List<String> substitutionsValue = substitutionsEntry.getValue();
+                if (substitutionsValue != null) {
+                    jsonWriter.name(substitutionsEntry.getKey());
+                    jsonWriter.beginArray();
+                    for (String substitutionsValueItem : substitutionsValue) {
+                        if (substitutionsValueItem != null) {
+                            jsonWriter.value(substitutionsValueItem);
+                        }
+                    }
+                    jsonWriter.endArray();
+                }
+            }
+            jsonWriter.endObject();
+        }
+        jsonWriter.endObject();
+    }
+
+    private static EmailMessageJsonMarshaller instance;
+
+    public static EmailMessageJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new EmailMessageJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailMessageJsonUnmarshaller.java
new file mode 100644
index 0000000000..fd081871cb
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailMessageJsonUnmarshaller.java
@@ -0,0 +1,79 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO EmailMessage
+ */
+class EmailMessageJsonUnmarshaller implements Unmarshaller<EmailMessage, JsonUnmarshallerContext> {
+
+    public EmailMessage unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        EmailMessage emailMessage = new EmailMessage();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Body")) {
+                emailMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("FeedbackForwardingAddress")) {
+                emailMessage.setFeedbackForwardingAddress(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("FromAddress")) {
+                emailMessage.setFromAddress(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("RawEmail")) {
+                emailMessage.setRawEmail(RawEmailJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ReplyToAddresses")) {
+                emailMessage.setReplyToAddresses(new ListUnmarshaller<String>(
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("SimpleEmail")) {
+                emailMessage.setSimpleEmail(SimpleEmailJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Substitutions")) {
+                emailMessage.setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return emailMessage;
+    }
+
+    private static EmailMessageJsonUnmarshaller instance;
+
+    public static EmailMessageJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new EmailMessageJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointBatchItemJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointBatchItemJsonUnmarshaller.java
index 08cf41b300..9c5573e233 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointBatchItemJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointBatchItemJsonUnmarshaller.java
@@ -37,41 +37,46 @@ public EndpointBatchItem unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Address")) {
-                endpointBatchItem.setAddress(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointBatchItem.setAddress(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Attributes")) {
                 endpointBatchItem.setAttributes(new MapUnmarshaller<java.util.List<String>>(
-                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()))
-                        .unmarshall(context));
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ChannelType")) {
-                endpointBatchItem.setChannelType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointBatchItem.setChannelType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Demographic")) {
                 endpointBatchItem.setDemographic(EndpointDemographicJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("EffectiveDate")) {
-                endpointBatchItem.setEffectiveDate(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointBatchItem.setEffectiveDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EndpointStatus")) {
                 endpointBatchItem.setEndpointStatus(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Id")) {
-                endpointBatchItem.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                endpointBatchItem.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Location")) {
                 endpointBatchItem.setLocation(EndpointLocationJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Metrics")) {
                 endpointBatchItem.setMetrics(new MapUnmarshaller<Double>(DoubleJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("OptOut")) {
                 endpointBatchItem.setOptOut(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("RequestId")) {
-                endpointBatchItem.setRequestId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointBatchItem.setRequestId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("User")) {
-                endpointBatchItem.setUser(EndpointUserJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointBatchItem.setUser(EndpointUserJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointBatchRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointBatchRequestJsonUnmarshaller.java
index 78bae5baf0..0691308cf3 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointBatchRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointBatchRequestJsonUnmarshaller.java
@@ -38,7 +38,9 @@ public EndpointBatchRequest unmarshall(JsonUnmarshallerContext context) throws E
             String name = reader.nextName();
             if (name.equals("Item")) {
                 endpointBatchRequest.setItem(new ListUnmarshaller<EndpointBatchItem>(
-                        EndpointBatchItemJsonUnmarshaller.getInstance()).unmarshall(context));
+                        EndpointBatchItemJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointDemographicJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointDemographicJsonUnmarshaller.java
index a79354654e..ff866f3506 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointDemographicJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointDemographicJsonUnmarshaller.java
@@ -37,29 +37,29 @@ public EndpointDemographic unmarshall(JsonUnmarshallerContext context) throws Ex
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("AppVersion")) {
-                endpointDemographic.setAppVersion(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointDemographic.setAppVersion(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Locale")) {
-                endpointDemographic.setLocale(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointDemographic.setLocale(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Make")) {
                 endpointDemographic.setMake(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Model")) {
-                endpointDemographic.setModel(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointDemographic.setModel(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ModelVersion")) {
                 endpointDemographic.setModelVersion(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Platform")) {
-                endpointDemographic.setPlatform(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointDemographic.setPlatform(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("PlatformVersion")) {
                 endpointDemographic.setPlatformVersion(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Timezone")) {
-                endpointDemographic.setTimezone(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointDemographic.setTimezone(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointItemResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointItemResponseJsonUnmarshaller.java
index 1ea6061e4b..ab45be8294 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointItemResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointItemResponseJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public EndpointItemResponse unmarshall(JsonUnmarshallerContext context) throws E
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Message")) {
-                endpointItemResponse.setMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointItemResponse.setMessage(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("StatusCode")) {
                 endpointItemResponse.setStatusCode(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointLocationJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointLocationJsonUnmarshaller.java
index 7f46778f1c..6ba7a4521a 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointLocationJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointLocationJsonUnmarshaller.java
@@ -37,22 +37,23 @@ public EndpointLocation unmarshall(JsonUnmarshallerContext context) throws Excep
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("City")) {
-                endpointLocation.setCity(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                endpointLocation.setCity(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Country")) {
                 endpointLocation.setCountry(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Latitude")) {
-                endpointLocation.setLatitude(DoubleJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointLocation.setLatitude(DoubleJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Longitude")) {
-                endpointLocation.setLongitude(DoubleJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointLocation.setLongitude(DoubleJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("PostalCode")) {
-                endpointLocation.setPostalCode(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointLocation.setPostalCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Region")) {
-                endpointLocation
-                        .setRegion(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                endpointLocation.setRegion(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointMessageResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointMessageResultJsonUnmarshaller.java
index 84f7cf2e30..b7015c9e49 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointMessageResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointMessageResultJsonUnmarshaller.java
@@ -37,14 +37,14 @@ public EndpointMessageResult unmarshall(JsonUnmarshallerContext context) throws
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Address")) {
-                endpointMessageResult.setAddress(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointMessageResult.setAddress(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("DeliveryStatus")) {
                 endpointMessageResult.setDeliveryStatus(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("MessageId")) {
-                endpointMessageResult.setMessageId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointMessageResult.setMessageId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("StatusCode")) {
                 endpointMessageResult.setStatusCode(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointRequestJsonUnmarshaller.java
index 82e78c47dc..293004e74a 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointRequestJsonUnmarshaller.java
@@ -37,38 +37,43 @@ public EndpointRequest unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Address")) {
-                endpointRequest
-                        .setAddress(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                endpointRequest.setAddress(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Attributes")) {
                 endpointRequest.setAttributes(new MapUnmarshaller<java.util.List<String>>(
-                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()))
-                        .unmarshall(context));
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ChannelType")) {
-                endpointRequest.setChannelType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointRequest.setChannelType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Demographic")) {
                 endpointRequest.setDemographic(EndpointDemographicJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("EffectiveDate")) {
-                endpointRequest.setEffectiveDate(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointRequest.setEffectiveDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EndpointStatus")) {
-                endpointRequest.setEndpointStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointRequest.setEndpointStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Location")) {
                 endpointRequest.setLocation(EndpointLocationJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Metrics")) {
                 endpointRequest.setMetrics(new MapUnmarshaller<Double>(DoubleJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("OptOut")) {
-                endpointRequest.setOptOut(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                endpointRequest.setOptOut(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RequestId")) {
-                endpointRequest.setRequestId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointRequest.setRequestId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("User")) {
-                endpointRequest.setUser(EndpointUserJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointRequest.setUser(EndpointUserJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointResponseJsonUnmarshaller.java
index d68a221540..c196c63073 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointResponseJsonUnmarshaller.java
@@ -40,47 +40,52 @@ public EndpointResponse unmarshall(JsonUnmarshallerContext context) throws Excep
                 endpointResponse.setAddress(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ApplicationId")) {
-                endpointResponse.setApplicationId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Attributes")) {
                 endpointResponse.setAttributes(new MapUnmarshaller<java.util.List<String>>(
-                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()))
-                        .unmarshall(context));
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ChannelType")) {
-                endpointResponse.setChannelType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointResponse.setChannelType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CohortId")) {
-                endpointResponse.setCohortId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointResponse.setCohortId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CreationDate")) {
-                endpointResponse.setCreationDate(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Demographic")) {
                 endpointResponse.setDemographic(EndpointDemographicJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("EffectiveDate")) {
-                endpointResponse.setEffectiveDate(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointResponse.setEffectiveDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EndpointStatus")) {
-                endpointResponse.setEndpointStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointResponse.setEndpointStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Id")) {
-                endpointResponse.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                endpointResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Location")) {
                 endpointResponse.setLocation(EndpointLocationJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Metrics")) {
                 endpointResponse.setMetrics(new MapUnmarshaller<Double>(DoubleJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("OptOut")) {
-                endpointResponse
-                        .setOptOut(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                endpointResponse.setOptOut(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RequestId")) {
-                endpointResponse.setRequestId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointResponse.setRequestId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("User")) {
-                endpointResponse.setUser(EndpointUserJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                endpointResponse.setUser(EndpointUserJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointSendConfigurationJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointSendConfigurationJsonUnmarshaller.java
index 3ec4d98ebf..7030b66854 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointSendConfigurationJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointSendConfigurationJsonUnmarshaller.java
@@ -41,14 +41,18 @@ public EndpointSendConfiguration unmarshall(JsonUnmarshallerContext context) thr
                         .unmarshall(context));
             } else if (name.equals("Context")) {
                 endpointSendConfiguration.setContext(new MapUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("RawContent")) {
                 endpointSendConfiguration.setRawContent(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Substitutions")) {
                 endpointSendConfiguration
                         .setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
-                                new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()))
+                                new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                                )
+                        )
                                 .unmarshall(context));
             } else if (name.equals("TitleOverride")) {
                 endpointSendConfiguration.setTitleOverride(StringJsonUnmarshaller.getInstance()
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointUserJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointUserJsonUnmarshaller.java
index 453a62f11e..bbd485cf69 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointUserJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointUserJsonUnmarshaller.java
@@ -37,10 +37,13 @@ public EndpointUser unmarshall(JsonUnmarshallerContext context) throws Exception
             String name = reader.nextName();
             if (name.equals("UserAttributes")) {
                 endpointUser.setUserAttributes(new MapUnmarshaller<java.util.List<String>>(
-                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()))
-                        .unmarshall(context));
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
             } else if (name.equals("UserId")) {
-                endpointUser.setUserId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                endpointUser.setUserId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointsResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointsResponseJsonUnmarshaller.java
index 51a69ff4e7..6e8a30def6 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointsResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointsResponseJsonUnmarshaller.java
@@ -38,7 +38,9 @@ public EndpointsResponse unmarshall(JsonUnmarshallerContext context) throws Exce
             String name = reader.nextName();
             if (name.equals("Item")) {
                 endpointsResponse.setItem(new ListUnmarshaller<EndpointResponse>(
-                        EndpointResponseJsonUnmarshaller.getInstance()).unmarshall(context));
+                        EndpointResponseJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventDimensionsJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventDimensionsJsonMarshaller.java
new file mode 100644
index 0000000000..3b37afe931
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventDimensionsJsonMarshaller.java
@@ -0,0 +1,72 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO EventDimensions
+ */
+class EventDimensionsJsonMarshaller {
+
+    public void marshall(EventDimensions eventDimensions, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (eventDimensions.getAttributes() != null) {
+            java.util.Map<String, AttributeDimension> attributes = eventDimensions.getAttributes();
+            jsonWriter.name("Attributes");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, AttributeDimension> attributesEntry : attributes
+                    .entrySet()) {
+                AttributeDimension attributesValue = attributesEntry.getValue();
+                if (attributesValue != null) {
+                    jsonWriter.name(attributesEntry.getKey());
+                    AttributeDimensionJsonMarshaller.getInstance().marshall(attributesValue,
+                            jsonWriter);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (eventDimensions.getEventType() != null) {
+            SetDimension eventType = eventDimensions.getEventType();
+            jsonWriter.name("EventType");
+            SetDimensionJsonMarshaller.getInstance().marshall(eventType, jsonWriter);
+        }
+        if (eventDimensions.getMetrics() != null) {
+            java.util.Map<String, MetricDimension> metrics = eventDimensions.getMetrics();
+            jsonWriter.name("Metrics");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, MetricDimension> metricsEntry : metrics.entrySet()) {
+                MetricDimension metricsValue = metricsEntry.getValue();
+                if (metricsValue != null) {
+                    jsonWriter.name(metricsEntry.getKey());
+                    MetricDimensionJsonMarshaller.getInstance().marshall(metricsValue, jsonWriter);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        jsonWriter.endObject();
+    }
+
+    private static EventDimensionsJsonMarshaller instance;
+
+    public static EventDimensionsJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new EventDimensionsJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventDimensionsJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventDimensionsJsonUnmarshaller.java
new file mode 100644
index 0000000000..12ac9767ce
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventDimensionsJsonUnmarshaller.java
@@ -0,0 +1,67 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO EventDimensions
+ */
+class EventDimensionsJsonUnmarshaller implements
+        Unmarshaller<EventDimensions, JsonUnmarshallerContext> {
+
+    public EventDimensions unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        EventDimensions eventDimensions = new EventDimensions();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Attributes")) {
+                eventDimensions.setAttributes(new MapUnmarshaller<AttributeDimension>(
+                        AttributeDimensionJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("EventType")) {
+                eventDimensions.setEventType(SetDimensionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Metrics")) {
+                eventDimensions.setMetrics(new MapUnmarshaller<MetricDimension>(
+                        MetricDimensionJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return eventDimensions;
+    }
+
+    private static EventDimensionsJsonUnmarshaller instance;
+
+    public static EventDimensionsJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new EventDimensionsJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventItemResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventItemResponseJsonUnmarshaller.java
index 8b9270e036..05af7fcecf 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventItemResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventItemResponseJsonUnmarshaller.java
@@ -37,11 +37,11 @@ public EventItemResponse unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Message")) {
-                eventItemResponse.setMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                eventItemResponse.setMessage(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("StatusCode")) {
-                eventItemResponse.setStatusCode(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                eventItemResponse.setStatusCode(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventJsonMarshaller.java
index c62f2280a2..ade02a55bb 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventJsonMarshaller.java
@@ -25,6 +25,21 @@
 
     public void marshall(Event event, AwsJsonWriter jsonWriter) throws Exception {
         jsonWriter.beginObject();
+        if (event.getAppPackageName() != null) {
+            String appPackageName = event.getAppPackageName();
+            jsonWriter.name("AppPackageName");
+            jsonWriter.value(appPackageName);
+        }
+        if (event.getAppTitle() != null) {
+            String appTitle = event.getAppTitle();
+            jsonWriter.name("AppTitle");
+            jsonWriter.value(appTitle);
+        }
+        if (event.getAppVersionCode() != null) {
+            String appVersionCode = event.getAppVersionCode();
+            jsonWriter.name("AppVersionCode");
+            jsonWriter.value(appVersionCode);
+        }
         if (event.getAttributes() != null) {
             java.util.Map<String, String> attributes = event.getAttributes();
             jsonWriter.name("Attributes");
@@ -61,6 +76,11 @@ public void marshall(Event event, AwsJsonWriter jsonWriter) throws Exception {
             }
             jsonWriter.endObject();
         }
+        if (event.getSdkName() != null) {
+            String sdkName = event.getSdkName();
+            jsonWriter.name("SdkName");
+            jsonWriter.value(sdkName);
+        }
         if (event.getSession() != null) {
             Session session = event.getSession();
             jsonWriter.name("Session");
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventJsonUnmarshaller.java
index ca08dd8624..631cc38afd 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventJsonUnmarshaller.java
@@ -35,20 +35,39 @@ public Event unmarshall(JsonUnmarshallerContext context) throws Exception {
         reader.beginObject();
         while (reader.hasNext()) {
             String name = reader.nextName();
-            if (name.equals("Attributes")) {
+            if (name.equals("AppPackageName")) {
+                event.setAppPackageName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("AppTitle")) {
+                event.setAppTitle(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("AppVersionCode")) {
+                event.setAppVersionCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Attributes")) {
                 event.setAttributes(new MapUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ClientSdkVersion")) {
-                event.setClientSdkVersion(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                event.setClientSdkVersion(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EventType")) {
-                event.setEventType(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                event.setEventType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Metrics")) {
-                event.setMetrics(new MapUnmarshaller<Double>(DoubleJsonUnmarshaller.getInstance())
+                event.setMetrics(new MapUnmarshaller<Double>(DoubleJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("SdkName")) {
+                event.setSdkName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Session")) {
-                event.setSession(SessionJsonUnmarshaller.getInstance().unmarshall(context));
+                event.setSession(SessionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Timestamp")) {
-                event.setTimestamp(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                event.setTimestamp(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventStreamJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventStreamJsonUnmarshaller.java
index 414b204755..eb7333987c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventStreamJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventStreamJsonUnmarshaller.java
@@ -36,21 +36,23 @@ public EventStream unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("ApplicationId")) {
-                eventStream.setApplicationId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                eventStream.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("DestinationStreamArn")) {
                 eventStream.setDestinationStreamArn(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ExternalId")) {
-                eventStream.setExternalId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                eventStream.setExternalId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastModifiedDate")) {
-                eventStream.setLastModifiedDate(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                eventStream.setLastModifiedDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastUpdatedBy")) {
-                eventStream.setLastUpdatedBy(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                eventStream.setLastUpdatedBy(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RoleArn")) {
-                eventStream.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                eventStream.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsBatchJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsBatchJsonMarshaller.java
index ee1dbba899..60a2856881 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsBatchJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsBatchJsonMarshaller.java
@@ -26,9 +26,9 @@
     public void marshall(EventsBatch eventsBatch, AwsJsonWriter jsonWriter) throws Exception {
         jsonWriter.beginObject();
         if (eventsBatch.getEndpoint() != null) {
-            EndpointRequest endpoint = eventsBatch.getEndpoint();
+            PublicEndpoint endpoint = eventsBatch.getEndpoint();
             jsonWriter.name("Endpoint");
-            EndpointRequestJsonMarshaller.getInstance().marshall(endpoint, jsonWriter);
+            PublicEndpointJsonMarshaller.getInstance().marshall(endpoint, jsonWriter);
         }
         if (eventsBatch.getEvents() != null) {
             java.util.Map<String, Event> events = eventsBatch.getEvents();
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsBatchJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsBatchJsonUnmarshaller.java
index d5d346ed5f..282476ce8c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsBatchJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsBatchJsonUnmarshaller.java
@@ -36,11 +36,13 @@ public EventsBatch unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Endpoint")) {
-                eventsBatch.setEndpoint(EndpointRequestJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                eventsBatch.setEndpoint(PublicEndpointJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Events")) {
                 eventsBatch.setEvents(new MapUnmarshaller<Event>(EventJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsRequestJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsRequestJsonMarshaller.java
new file mode 100644
index 0000000000..269a955f05
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsRequestJsonMarshaller.java
@@ -0,0 +1,51 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO EventsRequest
+ */
+class EventsRequestJsonMarshaller {
+
+    public void marshall(EventsRequest eventsRequest, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (eventsRequest.getBatchItem() != null) {
+            java.util.Map<String, EventsBatch> batchItem = eventsRequest.getBatchItem();
+            jsonWriter.name("BatchItem");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, EventsBatch> batchItemEntry : batchItem.entrySet()) {
+                EventsBatch batchItemValue = batchItemEntry.getValue();
+                if (batchItemValue != null) {
+                    jsonWriter.name(batchItemEntry.getKey());
+                    EventsBatchJsonMarshaller.getInstance().marshall(batchItemValue, jsonWriter);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        jsonWriter.endObject();
+    }
+
+    private static EventsRequestJsonMarshaller instance;
+
+    public static EventsRequestJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new EventsRequestJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsRequestJsonUnmarshaller.java
new file mode 100644
index 0000000000..8c09a7a5db
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsRequestJsonUnmarshaller.java
@@ -0,0 +1,58 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO EventsRequest
+ */
+class EventsRequestJsonUnmarshaller implements Unmarshaller<EventsRequest, JsonUnmarshallerContext> {
+
+    public EventsRequest unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        EventsRequest eventsRequest = new EventsRequest();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("BatchItem")) {
+                eventsRequest.setBatchItem(new MapUnmarshaller<EventsBatch>(
+                        EventsBatchJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return eventsRequest;
+    }
+
+    private static EventsRequestJsonUnmarshaller instance;
+
+    public static EventsRequestJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new EventsRequestJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsResponseJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsResponseJsonMarshaller.java
new file mode 100644
index 0000000000..fe55ecd3b8
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsResponseJsonMarshaller.java
@@ -0,0 +1,51 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO EventsResponse
+ */
+class EventsResponseJsonMarshaller {
+
+    public void marshall(EventsResponse eventsResponse, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (eventsResponse.getResults() != null) {
+            java.util.Map<String, ItemResponse> results = eventsResponse.getResults();
+            jsonWriter.name("Results");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, ItemResponse> resultsEntry : results.entrySet()) {
+                ItemResponse resultsValue = resultsEntry.getValue();
+                if (resultsValue != null) {
+                    jsonWriter.name(resultsEntry.getKey());
+                    ItemResponseJsonMarshaller.getInstance().marshall(resultsValue, jsonWriter);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        jsonWriter.endObject();
+    }
+
+    private static EventsResponseJsonMarshaller instance;
+
+    public static EventsResponseJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new EventsResponseJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsResponseJsonUnmarshaller.java
new file mode 100644
index 0000000000..8d2a865899
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventsResponseJsonUnmarshaller.java
@@ -0,0 +1,59 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO EventsResponse
+ */
+class EventsResponseJsonUnmarshaller implements
+        Unmarshaller<EventsResponse, JsonUnmarshallerContext> {
+
+    public EventsResponse unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        EventsResponse eventsResponse = new EventsResponse();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Results")) {
+                eventsResponse.setResults(new MapUnmarshaller<ItemResponse>(
+                        ItemResponseJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return eventsResponse;
+    }
+
+    private static EventsResponseJsonUnmarshaller instance;
+
+    public static EventsResponseJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new EventsResponseJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ExportJobRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ExportJobRequestJsonUnmarshaller.java
index 24d0ad8c87..dc1a1219cb 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ExportJobRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ExportJobRequestJsonUnmarshaller.java
@@ -40,11 +40,11 @@ public ExportJobRequest unmarshall(JsonUnmarshallerContext context) throws Excep
                 exportJobRequest.setRoleArn(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("S3UrlPrefix")) {
-                exportJobRequest.setS3UrlPrefix(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                exportJobRequest.setS3UrlPrefix(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SegmentId")) {
-                exportJobRequest.setSegmentId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                exportJobRequest.setSegmentId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SegmentVersion")) {
                 exportJobRequest.setSegmentVersion(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ExportJobResourceJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ExportJobResourceJsonUnmarshaller.java
index dcbf45f46d..d3ea7d9039 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ExportJobResourceJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ExportJobResourceJsonUnmarshaller.java
@@ -37,14 +37,14 @@ public ExportJobResource unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("RoleArn")) {
-                exportJobResource.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                exportJobResource.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("S3UrlPrefix")) {
-                exportJobResource.setS3UrlPrefix(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                exportJobResource.setS3UrlPrefix(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SegmentId")) {
-                exportJobResource.setSegmentId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                exportJobResource.setSegmentId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SegmentVersion")) {
                 exportJobResource.setSegmentVersion(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ExportJobResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ExportJobResponseJsonUnmarshaller.java
index 863edad97c..fe84c62340 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ExportJobResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ExportJobResponseJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public ExportJobResponse unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("ApplicationId")) {
-                exportJobResponse.setApplicationId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                exportJobResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CompletedPieces")) {
                 exportJobResponse.setCompletedPieces(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -46,33 +46,37 @@ public ExportJobResponse unmarshall(JsonUnmarshallerContext context) throws Exce
                 exportJobResponse.setCompletionDate(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("CreationDate")) {
-                exportJobResponse.setCreationDate(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                exportJobResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Definition")) {
                 exportJobResponse.setDefinition(ExportJobResourceJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("FailedPieces")) {
-                exportJobResponse.setFailedPieces(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                exportJobResponse.setFailedPieces(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Failures")) {
                 exportJobResponse.setFailures(new ListUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Id")) {
-                exportJobResponse.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                exportJobResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("JobStatus")) {
-                exportJobResponse.setJobStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                exportJobResponse.setJobStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TotalFailures")) {
                 exportJobResponse.setTotalFailures(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("TotalPieces")) {
-                exportJobResponse.setTotalPieces(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                exportJobResponse.setTotalPieces(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TotalProcessed")) {
                 exportJobResponse.setTotalProcessed(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Type")) {
-                exportJobResponse.setType(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                exportJobResponse.setType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ExportJobsResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ExportJobsResponseJsonUnmarshaller.java
index 4d96a7bd16..f1988b9554 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ExportJobsResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ExportJobsResponseJsonUnmarshaller.java
@@ -38,10 +38,12 @@ public ExportJobsResponse unmarshall(JsonUnmarshallerContext context) throws Exc
             String name = reader.nextName();
             if (name.equals("Item")) {
                 exportJobsResponse.setItem(new ListUnmarshaller<ExportJobResponse>(
-                        ExportJobResponseJsonUnmarshaller.getInstance()).unmarshall(context));
+                        ExportJobResponseJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextToken")) {
-                exportJobsResponse.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                exportJobsResponse.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ForbiddenExceptionUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ForbiddenExceptionUnmarshaller.java
index de2a23bc67..b4370a4a26 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ForbiddenExceptionUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ForbiddenExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.pinpoint.model.ForbiddenException;
 
 public class ForbiddenExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,33 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ForbiddenException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ForbiddenException forbiddenException = new ForbiddenException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                forbiddenException.setErrorMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else if (name.equals("RequestID")) {
-                forbiddenException.setRequestID(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return forbiddenException;
-    }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelRequestJsonUnmarshaller.java
index 328bb6d164..704571593f 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelRequestJsonUnmarshaller.java
@@ -40,8 +40,8 @@ public GCMChannelRequest unmarshall(JsonUnmarshallerContext context) throws Exce
                 gCMChannelRequest.setApiKey(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Enabled")) {
-                gCMChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                gCMChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelResponseJsonUnmarshaller.java
index a507abd4f0..8e3e2ac701 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelResponseJsonUnmarshaller.java
@@ -40,22 +40,23 @@ public GCMChannelResponse unmarshall(JsonUnmarshallerContext context) throws Exc
                 gCMChannelResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("CreationDate")) {
-                gCMChannelResponse.setCreationDate(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                gCMChannelResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Credential")) {
-                gCMChannelResponse.setCredential(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                gCMChannelResponse.setCredential(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Enabled")) {
-                gCMChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                gCMChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("HasCredential")) {
                 gCMChannelResponse.setHasCredential(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Id")) {
-                gCMChannelResponse.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                gCMChannelResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("IsArchived")) {
-                gCMChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                gCMChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastModifiedBy")) {
                 gCMChannelResponse.setLastModifiedBy(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -63,11 +64,11 @@ public GCMChannelResponse unmarshall(JsonUnmarshallerContext context) throws Exc
                 gCMChannelResponse.setLastModifiedDate(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Platform")) {
-                gCMChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                gCMChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Version")) {
-                gCMChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                gCMChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMMessageJsonUnmarshaller.java
index 996dcc3fe0..33a7ee3bd3 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMMessageJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMMessageJsonUnmarshaller.java
@@ -36,47 +36,60 @@ public GCMMessage unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Action")) {
-                gCMMessage.setAction(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                gCMMessage.setAction(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Body")) {
-                gCMMessage.setBody(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                gCMMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CollapseKey")) {
-                gCMMessage.setCollapseKey(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                gCMMessage.setCollapseKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Data")) {
-                gCMMessage
-                        .setData(new MapUnmarshaller<String>(StringJsonUnmarshaller.getInstance())
+                gCMMessage.setData(new MapUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("IconReference")) {
                 gCMMessage.setIconReference(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ImageIconUrl")) {
-                gCMMessage
-                        .setImageIconUrl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                gCMMessage.setImageIconUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ImageUrl")) {
-                gCMMessage.setImageUrl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                gCMMessage.setImageUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Priority")) {
-                gCMMessage.setPriority(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                gCMMessage.setPriority(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RawContent")) {
-                gCMMessage.setRawContent(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                gCMMessage.setRawContent(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RestrictedPackageName")) {
                 gCMMessage.setRestrictedPackageName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("SilentPush")) {
-                gCMMessage.setSilentPush(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                gCMMessage.setSilentPush(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SmallImageIconUrl")) {
-                gCMMessage.setSmallImageIconUrl(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                gCMMessage.setSmallImageIconUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Sound")) {
-                gCMMessage.setSound(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                gCMMessage.setSound(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Substitutions")) {
                 gCMMessage.setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
-                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()))
-                        .unmarshall(context));
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
             } else if (name.equals("TimeToLive")) {
-                gCMMessage.setTimeToLive(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                gCMMessage.setTimeToLive(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Title")) {
-                gCMMessage.setTitle(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                gCMMessage.setTitle(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Url")) {
-                gCMMessage.setUrl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                gCMMessage.setUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GPSCoordinatesJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GPSCoordinatesJsonUnmarshaller.java
index 9b7709fd47..43687afdfb 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GPSCoordinatesJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GPSCoordinatesJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public GPSCoordinates unmarshall(JsonUnmarshallerContext context) throws Excepti
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Latitude")) {
-                gPSCoordinates
-                        .setLatitude(DoubleJsonUnmarshaller.getInstance().unmarshall(context));
+                gPSCoordinates.setLatitude(DoubleJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Longitude")) {
                 gPSCoordinates.setLongitude(DoubleJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetVoiceChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetVoiceChannelRequestMarshaller.java
new file mode 100644
index 0000000000..2c2fcbbfda
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetVoiceChannelRequestMarshaller.java
@@ -0,0 +1,65 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetVoiceChannelRequest
+ */
+public class GetVoiceChannelRequestMarshaller implements
+        Marshaller<Request<GetVoiceChannelRequest>, GetVoiceChannelRequest> {
+
+    public Request<GetVoiceChannelRequest> marshall(GetVoiceChannelRequest getVoiceChannelRequest) {
+        if (getVoiceChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(GetVoiceChannelRequest)");
+        }
+
+        Request<GetVoiceChannelRequest> request = new DefaultRequest<GetVoiceChannelRequest>(
+                getVoiceChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/voice";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (getVoiceChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(getVoiceChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetVoiceChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetVoiceChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..ff7f60cd0a
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetVoiceChannelResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetVoiceChannelResult
+ */
+public class GetVoiceChannelResultJsonUnmarshaller implements
+        Unmarshaller<GetVoiceChannelResult, JsonUnmarshallerContext> {
+
+    public GetVoiceChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        GetVoiceChannelResult getVoiceChannelResult = new GetVoiceChannelResult();
+
+        return getVoiceChannelResult;
+    }
+
+    private static GetVoiceChannelResultJsonUnmarshaller instance;
+
+    public static GetVoiceChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetVoiceChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ImportJobRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ImportJobRequestJsonUnmarshaller.java
index efedf63d9e..c4f50cd97a 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ImportJobRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ImportJobRequestJsonUnmarshaller.java
@@ -37,14 +37,14 @@ public ImportJobRequest unmarshall(JsonUnmarshallerContext context) throws Excep
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("DefineSegment")) {
-                importJobRequest.setDefineSegment(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                importJobRequest.setDefineSegment(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ExternalId")) {
-                importJobRequest.setExternalId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                importJobRequest.setExternalId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Format")) {
-                importJobRequest
-                        .setFormat(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                importJobRequest.setFormat(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RegisterEndpoints")) {
                 importJobRequest.setRegisterEndpoints(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -52,13 +52,14 @@ public ImportJobRequest unmarshall(JsonUnmarshallerContext context) throws Excep
                 importJobRequest.setRoleArn(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("S3Url")) {
-                importJobRequest.setS3Url(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                importJobRequest.setS3Url(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SegmentId")) {
-                importJobRequest.setSegmentId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                importJobRequest.setSegmentId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SegmentName")) {
-                importJobRequest.setSegmentName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                importJobRequest.setSegmentName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ImportJobResourceJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ImportJobResourceJsonUnmarshaller.java
index 477d1ffdc5..071ff16edf 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ImportJobResourceJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ImportJobResourceJsonUnmarshaller.java
@@ -40,8 +40,8 @@ public ImportJobResource unmarshall(JsonUnmarshallerContext context) throws Exce
                 importJobResource.setDefineSegment(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("ExternalId")) {
-                importJobResource.setExternalId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                importJobResource.setExternalId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Format")) {
                 importJobResource.setFormat(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -49,17 +49,17 @@ public ImportJobResource unmarshall(JsonUnmarshallerContext context) throws Exce
                 importJobResource.setRegisterEndpoints(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("RoleArn")) {
-                importJobResource.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                importJobResource.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("S3Url")) {
-                importJobResource
-                        .setS3Url(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                importJobResource.setS3Url(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SegmentId")) {
-                importJobResource.setSegmentId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                importJobResource.setSegmentId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SegmentName")) {
-                importJobResource.setSegmentName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                importJobResource.setSegmentName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ImportJobResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ImportJobResponseJsonUnmarshaller.java
index d1f9930d71..a971c7b59e 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ImportJobResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ImportJobResponseJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public ImportJobResponse unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("ApplicationId")) {
-                importJobResponse.setApplicationId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                importJobResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CompletedPieces")) {
                 importJobResponse.setCompletedPieces(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -46,33 +46,37 @@ public ImportJobResponse unmarshall(JsonUnmarshallerContext context) throws Exce
                 importJobResponse.setCompletionDate(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("CreationDate")) {
-                importJobResponse.setCreationDate(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                importJobResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Definition")) {
                 importJobResponse.setDefinition(ImportJobResourceJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("FailedPieces")) {
-                importJobResponse.setFailedPieces(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                importJobResponse.setFailedPieces(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Failures")) {
                 importJobResponse.setFailures(new ListUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Id")) {
-                importJobResponse.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                importJobResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("JobStatus")) {
-                importJobResponse.setJobStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                importJobResponse.setJobStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TotalFailures")) {
                 importJobResponse.setTotalFailures(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("TotalPieces")) {
-                importJobResponse.setTotalPieces(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                importJobResponse.setTotalPieces(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TotalProcessed")) {
                 importJobResponse.setTotalProcessed(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Type")) {
-                importJobResponse.setType(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                importJobResponse.setType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ImportJobsResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ImportJobsResponseJsonUnmarshaller.java
index b7a2b71cfb..21b7fd2b30 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ImportJobsResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ImportJobsResponseJsonUnmarshaller.java
@@ -38,10 +38,12 @@ public ImportJobsResponse unmarshall(JsonUnmarshallerContext context) throws Exc
             String name = reader.nextName();
             if (name.equals("Item")) {
                 importJobsResponse.setItem(new ListUnmarshaller<ImportJobResponse>(
-                        ImportJobResponseJsonUnmarshaller.getInstance()).unmarshall(context));
+                        ImportJobResponseJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextToken")) {
-                importJobsResponse.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                importJobsResponse.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/InternalServerErrorExceptionUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/InternalServerErrorExceptionUnmarshaller.java
index 534b753fe6..f2dc71c3d1 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/InternalServerErrorExceptionUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/InternalServerErrorExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.pinpoint.model.InternalServerErrorException;
 
 public class InternalServerErrorExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,35 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InternalServerErrorException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InternalServerErrorException internalServerErrorException = new InternalServerErrorException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                internalServerErrorException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("RequestID")) {
-                internalServerErrorException.setRequestID(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return internalServerErrorException;
-    }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ItemResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ItemResponseJsonUnmarshaller.java
index fc47fb9758..efa97cdaec 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ItemResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ItemResponseJsonUnmarshaller.java
@@ -37,10 +37,13 @@ public ItemResponse unmarshall(JsonUnmarshallerContext context) throws Exception
             String name = reader.nextName();
             if (name.equals("EndpointItemResponse")) {
                 itemResponse.setEndpointItemResponse(EndpointItemResponseJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EventsItemResponse")) {
                 itemResponse.setEventsItemResponse(new MapUnmarshaller<EventItemResponse>(
-                        EventItemResponseJsonUnmarshaller.getInstance()).unmarshall(context));
+                        EventItemResponseJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageBodyJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageBodyJsonUnmarshaller.java
index 67d06feed9..510dc24ccb 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageBodyJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageBodyJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public MessageBody unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Message")) {
-                messageBody.setMessage(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                messageBody.setMessage(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RequestID")) {
-                messageBody.setRequestID(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                messageBody.setRequestID(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageConfigurationJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageConfigurationJsonUnmarshaller.java
index 652fa127f5..63112a7994 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageConfigurationJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageConfigurationJsonUnmarshaller.java
@@ -50,7 +50,8 @@ public MessageConfiguration unmarshall(JsonUnmarshallerContext context) throws E
                         .unmarshall(context));
             } else if (name.equals("EmailMessage")) {
                 messageConfiguration.setEmailMessage(CampaignEmailMessageJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("GCMMessage")) {
                 messageConfiguration.setGCMMessage(MessageJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageJsonUnmarshaller.java
index 2628e5c36e..6a63118381 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageJsonUnmarshaller.java
@@ -36,30 +36,41 @@ public Message unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Action")) {
-                message.setAction(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                message.setAction(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Body")) {
-                message.setBody(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                message.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ImageIconUrl")) {
-                message.setImageIconUrl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                message.setImageIconUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ImageSmallIconUrl")) {
-                message.setImageSmallIconUrl(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                message.setImageSmallIconUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ImageUrl")) {
-                message.setImageUrl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                message.setImageUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("JsonBody")) {
-                message.setJsonBody(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                message.setJsonBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("MediaUrl")) {
-                message.setMediaUrl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                message.setMediaUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RawContent")) {
-                message.setRawContent(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                message.setRawContent(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SilentPush")) {
-                message.setSilentPush(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                message.setSilentPush(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TimeToLive")) {
-                message.setTimeToLive(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                message.setTimeToLive(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Title")) {
-                message.setTitle(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                message.setTitle(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Url")) {
-                message.setUrl(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                message.setUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageRequestJsonUnmarshaller.java
index b4fe2a2218..cbd5118a8e 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageRequestJsonUnmarshaller.java
@@ -38,19 +38,26 @@ public MessageRequest unmarshall(JsonUnmarshallerContext context) throws Excepti
             String name = reader.nextName();
             if (name.equals("Addresses")) {
                 messageRequest.setAddresses(new MapUnmarshaller<AddressConfiguration>(
-                        AddressConfigurationJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AddressConfigurationJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Context")) {
                 messageRequest.setContext(new MapUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Endpoints")) {
                 messageRequest.setEndpoints(new MapUnmarshaller<EndpointSendConfiguration>(
-                        EndpointSendConfigurationJsonUnmarshaller.getInstance())
-                        .unmarshall(context));
+                        EndpointSendConfigurationJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("MessageConfiguration")) {
                 messageRequest.setMessageConfiguration(DirectMessageConfigurationJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TraceId")) {
-                messageRequest.setTraceId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                messageRequest.setTraceId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResponseJsonUnmarshaller.java
index 0a6cdd634d..b15fca24ea 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResponseJsonUnmarshaller.java
@@ -37,17 +37,21 @@ public MessageResponse unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("ApplicationId")) {
-                messageResponse.setApplicationId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                messageResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EndpointResult")) {
                 messageResponse.setEndpointResult(new MapUnmarshaller<EndpointMessageResult>(
-                        EndpointMessageResultJsonUnmarshaller.getInstance()).unmarshall(context));
+                        EndpointMessageResultJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("RequestId")) {
-                messageResponse.setRequestId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                messageResponse.setRequestId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Result")) {
                 messageResponse.setResult(new MapUnmarshaller<MessageResult>(
-                        MessageResultJsonUnmarshaller.getInstance()).unmarshall(context));
+                        MessageResultJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResultJsonUnmarshaller.java
index 4e4ed2a1ca..37ea3bdef3 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResultJsonUnmarshaller.java
@@ -36,20 +36,20 @@ public MessageResult unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("DeliveryStatus")) {
-                messageResult.setDeliveryStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                messageResult.setDeliveryStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("MessageId")) {
-                messageResult
-                        .setMessageId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                messageResult.setMessageId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("StatusCode")) {
-                messageResult.setStatusCode(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                messageResult.setStatusCode(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("StatusMessage")) {
-                messageResult.setStatusMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                messageResult.setStatusMessage(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("UpdatedToken")) {
-                messageResult.setUpdatedToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                messageResult.setUpdatedToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MethodNotAllowedExceptionUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MethodNotAllowedExceptionUnmarshaller.java
index 6c4b7b7fe2..38ff2c4c98 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MethodNotAllowedExceptionUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MethodNotAllowedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.pinpoint.model.MethodNotAllowedException;
 
 public class MethodNotAllowedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,34 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public MethodNotAllowedException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        MethodNotAllowedException methodNotAllowedException = new MethodNotAllowedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                methodNotAllowedException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("RequestID")) {
-                methodNotAllowedException.setRequestID(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return methodNotAllowedException;
-    }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MetricDimensionJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MetricDimensionJsonUnmarshaller.java
index f7ba346c4f..9e81a1e43f 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MetricDimensionJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MetricDimensionJsonUnmarshaller.java
@@ -40,7 +40,8 @@ public MetricDimension unmarshall(JsonUnmarshallerContext context) throws Except
                 metricDimension.setComparisonOperator(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Value")) {
-                metricDimension.setValue(DoubleJsonUnmarshaller.getInstance().unmarshall(context));
+                metricDimension.setValue(DoubleJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/NotFoundExceptionUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/NotFoundExceptionUnmarshaller.java
index 02525c13be..e7965749c2 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/NotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/NotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.pinpoint.model.NotFoundException;
 
 public class NotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,33 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public NotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        NotFoundException notFoundException = new NotFoundException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                notFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else if (name.equals("RequestID")) {
-                notFoundException.setRequestID(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return notFoundException;
-    }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/NumberValidateResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/NumberValidateResponseJsonUnmarshaller.java
index 60d417407a..796e83848c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/NumberValidateResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/NumberValidateResponseJsonUnmarshaller.java
@@ -37,20 +37,22 @@ public NumberValidateResponse unmarshall(JsonUnmarshallerContext context) throws
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Carrier")) {
-                numberValidateResponse.setCarrier(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                numberValidateResponse.setCarrier(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("City")) {
-                numberValidateResponse.setCity(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                numberValidateResponse.setCity(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CleansedPhoneNumberE164")) {
                 numberValidateResponse.setCleansedPhoneNumberE164(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CleansedPhoneNumberNational")) {
                 numberValidateResponse.setCleansedPhoneNumberNational(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Country")) {
-                numberValidateResponse.setCountry(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                numberValidateResponse.setCountry(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CountryCodeIso2")) {
                 numberValidateResponse.setCountryCodeIso2(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -58,11 +60,12 @@ public NumberValidateResponse unmarshall(JsonUnmarshallerContext context) throws
                 numberValidateResponse.setCountryCodeNumeric(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("County")) {
-                numberValidateResponse.setCounty(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                numberValidateResponse.setCounty(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("OriginalCountryCodeIso2")) {
                 numberValidateResponse.setOriginalCountryCodeIso2(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("OriginalPhoneNumber")) {
                 numberValidateResponse.setOriginalPhoneNumber(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -73,11 +76,11 @@ public NumberValidateResponse unmarshall(JsonUnmarshallerContext context) throws
                 numberValidateResponse.setPhoneTypeCode(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Timezone")) {
-                numberValidateResponse.setTimezone(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                numberValidateResponse.setTimezone(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ZipCode")) {
-                numberValidateResponse.setZipCode(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                numberValidateResponse.setZipCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PublicEndpointJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PublicEndpointJsonMarshaller.java
new file mode 100644
index 0000000000..53935e615f
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PublicEndpointJsonMarshaller.java
@@ -0,0 +1,117 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO PublicEndpoint
+ */
+class PublicEndpointJsonMarshaller {
+
+    public void marshall(PublicEndpoint publicEndpoint, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (publicEndpoint.getAddress() != null) {
+            String address = publicEndpoint.getAddress();
+            jsonWriter.name("Address");
+            jsonWriter.value(address);
+        }
+        if (publicEndpoint.getAttributes() != null) {
+            java.util.Map<String, java.util.List<String>> attributes = publicEndpoint
+                    .getAttributes();
+            jsonWriter.name("Attributes");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, java.util.List<String>> attributesEntry : attributes
+                    .entrySet()) {
+                java.util.List<String> attributesValue = attributesEntry.getValue();
+                if (attributesValue != null) {
+                    jsonWriter.name(attributesEntry.getKey());
+                    jsonWriter.beginArray();
+                    for (String attributesValueItem : attributesValue) {
+                        if (attributesValueItem != null) {
+                            jsonWriter.value(attributesValueItem);
+                        }
+                    }
+                    jsonWriter.endArray();
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (publicEndpoint.getChannelType() != null) {
+            String channelType = publicEndpoint.getChannelType();
+            jsonWriter.name("ChannelType");
+            jsonWriter.value(channelType);
+        }
+        if (publicEndpoint.getDemographic() != null) {
+            EndpointDemographic demographic = publicEndpoint.getDemographic();
+            jsonWriter.name("Demographic");
+            EndpointDemographicJsonMarshaller.getInstance().marshall(demographic, jsonWriter);
+        }
+        if (publicEndpoint.getEffectiveDate() != null) {
+            String effectiveDate = publicEndpoint.getEffectiveDate();
+            jsonWriter.name("EffectiveDate");
+            jsonWriter.value(effectiveDate);
+        }
+        if (publicEndpoint.getEndpointStatus() != null) {
+            String endpointStatus = publicEndpoint.getEndpointStatus();
+            jsonWriter.name("EndpointStatus");
+            jsonWriter.value(endpointStatus);
+        }
+        if (publicEndpoint.getLocation() != null) {
+            EndpointLocation location = publicEndpoint.getLocation();
+            jsonWriter.name("Location");
+            EndpointLocationJsonMarshaller.getInstance().marshall(location, jsonWriter);
+        }
+        if (publicEndpoint.getMetrics() != null) {
+            java.util.Map<String, Double> metrics = publicEndpoint.getMetrics();
+            jsonWriter.name("Metrics");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, Double> metricsEntry : metrics.entrySet()) {
+                Double metricsValue = metricsEntry.getValue();
+                if (metricsValue != null) {
+                    jsonWriter.name(metricsEntry.getKey());
+                    jsonWriter.value(metricsValue);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (publicEndpoint.getOptOut() != null) {
+            String optOut = publicEndpoint.getOptOut();
+            jsonWriter.name("OptOut");
+            jsonWriter.value(optOut);
+        }
+        if (publicEndpoint.getRequestId() != null) {
+            String requestId = publicEndpoint.getRequestId();
+            jsonWriter.name("RequestId");
+            jsonWriter.value(requestId);
+        }
+        if (publicEndpoint.getUser() != null) {
+            EndpointUser user = publicEndpoint.getUser();
+            jsonWriter.name("User");
+            EndpointUserJsonMarshaller.getInstance().marshall(user, jsonWriter);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static PublicEndpointJsonMarshaller instance;
+
+    public static PublicEndpointJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new PublicEndpointJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PublicEndpointJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PublicEndpointJsonUnmarshaller.java
new file mode 100644
index 0000000000..48acf0ea06
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PublicEndpointJsonUnmarshaller.java
@@ -0,0 +1,92 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO PublicEndpoint
+ */
+class PublicEndpointJsonUnmarshaller implements
+        Unmarshaller<PublicEndpoint, JsonUnmarshallerContext> {
+
+    public PublicEndpoint unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        PublicEndpoint publicEndpoint = new PublicEndpoint();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Address")) {
+                publicEndpoint.setAddress(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Attributes")) {
+                publicEndpoint.setAttributes(new MapUnmarshaller<java.util.List<String>>(
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("ChannelType")) {
+                publicEndpoint.setChannelType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Demographic")) {
+                publicEndpoint.setDemographic(EndpointDemographicJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("EffectiveDate")) {
+                publicEndpoint.setEffectiveDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("EndpointStatus")) {
+                publicEndpoint.setEndpointStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Location")) {
+                publicEndpoint.setLocation(EndpointLocationJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Metrics")) {
+                publicEndpoint.setMetrics(new MapUnmarshaller<Double>(DoubleJsonUnmarshaller
+                        .getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("OptOut")) {
+                publicEndpoint.setOptOut(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("RequestId")) {
+                publicEndpoint.setRequestId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("User")) {
+                publicEndpoint.setUser(EndpointUserJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return publicEndpoint;
+    }
+
+    private static PublicEndpointJsonUnmarshaller instance;
+
+    public static PublicEndpointJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new PublicEndpointJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PutEventsRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PutEventsRequestMarshaller.java
index 971dbb2999..caddd330c8 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PutEventsRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PutEventsRequestMarshaller.java
@@ -49,7 +49,7 @@
                 "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.POST);
 
-        String uriResourcePath = "/v1/apps/{application-id}/events/legacy";
+        String uriResourcePath = "/v1/apps/{application-id}/events";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
                 (putEventsRequest.getApplicationId() == null) ? "" : StringUtils
@@ -58,24 +58,10 @@
         try {
             StringWriter stringWriter = new StringWriter();
             AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
-            jsonWriter.beginObject();
-
-            if (putEventsRequest.getBatchItem() != null) {
-                java.util.Map<String, EventsBatch> batchItem = putEventsRequest.getBatchItem();
-                jsonWriter.name("BatchItem");
-                jsonWriter.beginObject();
-                for (java.util.Map.Entry<String, EventsBatch> batchItemEntry : batchItem.entrySet()) {
-                    EventsBatch batchItemValue = batchItemEntry.getValue();
-                    if (batchItemValue != null) {
-                        jsonWriter.name(batchItemEntry.getKey());
-                        EventsBatchJsonMarshaller.getInstance()
-                                .marshall(batchItemValue, jsonWriter);
-                    }
-                }
-                jsonWriter.endObject();
+            if (putEventsRequest.getEventsRequest() != null) {
+                EventsRequest eventsRequest = putEventsRequest.getEventsRequest();
+                EventsRequestJsonMarshaller.getInstance().marshall(eventsRequest, jsonWriter);
             }
-
-            jsonWriter.endObject();
             jsonWriter.close();
             String snippet = stringWriter.toString();
             byte[] content = snippet.getBytes(UTF8);
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PutEventsResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PutEventsResultJsonUnmarshaller.java
index d05ec801b0..d00453c8b3 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PutEventsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PutEventsResultJsonUnmarshaller.java
@@ -29,19 +29,6 @@
     public PutEventsResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         PutEventsResult putEventsResult = new PutEventsResult();
 
-        AwsJsonReader reader = context.getReader();
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if (name.equals("Results")) {
-                putEventsResult.setResults(new MapUnmarshaller<ItemResponse>(
-                        ItemResponseJsonUnmarshaller.getInstance()).unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-
         return putEventsResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/QuietTimeJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/QuietTimeJsonUnmarshaller.java
index c4161ae6c0..cfaffa48e0 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/QuietTimeJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/QuietTimeJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public QuietTime unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("End")) {
-                quietTime.setEnd(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                quietTime.setEnd(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Start")) {
-                quietTime.setStart(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                quietTime.setStart(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/RawEmailJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/RawEmailJsonMarshaller.java
new file mode 100644
index 0000000000..d44dc425e1
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/RawEmailJsonMarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO RawEmail
+ */
+class RawEmailJsonMarshaller {
+
+    public void marshall(RawEmail rawEmail, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (rawEmail.getData() != null) {
+            java.nio.ByteBuffer data = rawEmail.getData();
+            jsonWriter.name("Data");
+            jsonWriter.value(data);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static RawEmailJsonMarshaller instance;
+
+    public static RawEmailJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new RawEmailJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/RawEmailJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/RawEmailJsonUnmarshaller.java
new file mode 100644
index 0000000000..f8ff6869d6
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/RawEmailJsonUnmarshaller.java
@@ -0,0 +1,56 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO RawEmail
+ */
+class RawEmailJsonUnmarshaller implements Unmarshaller<RawEmail, JsonUnmarshallerContext> {
+
+    public RawEmail unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        RawEmail rawEmail = new RawEmail();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Data")) {
+                rawEmail.setData(ByteBufferJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return rawEmail;
+    }
+
+    private static RawEmailJsonUnmarshaller instance;
+
+    public static RawEmailJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new RawEmailJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/RecencyDimensionJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/RecencyDimensionJsonUnmarshaller.java
index 2839d888e0..495efadbad 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/RecencyDimensionJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/RecencyDimensionJsonUnmarshaller.java
@@ -37,11 +37,11 @@ public RecencyDimension unmarshall(JsonUnmarshallerContext context) throws Excep
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Duration")) {
-                recencyDimension.setDuration(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                recencyDimension.setDuration(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RecencyType")) {
-                recencyDimension.setRecencyType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                recencyDimension.setRecencyType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelRequestJsonUnmarshaller.java
index ba05c3cad8..9433b9aec3 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelRequestJsonUnmarshaller.java
@@ -37,14 +37,14 @@ public SMSChannelRequest unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Enabled")) {
-                sMSChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sMSChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SenderId")) {
-                sMSChannelRequest.setSenderId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sMSChannelRequest.setSenderId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ShortCode")) {
-                sMSChannelRequest.setShortCode(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sMSChannelRequest.setShortCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelResponseJsonUnmarshaller.java
index 1553b16106..3212a788be 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelResponseJsonUnmarshaller.java
@@ -40,19 +40,20 @@ public SMSChannelResponse unmarshall(JsonUnmarshallerContext context) throws Exc
                 sMSChannelResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("CreationDate")) {
-                sMSChannelResponse.setCreationDate(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sMSChannelResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Enabled")) {
-                sMSChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sMSChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("HasCredential")) {
                 sMSChannelResponse.setHasCredential(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Id")) {
-                sMSChannelResponse.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                sMSChannelResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("IsArchived")) {
-                sMSChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sMSChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastModifiedBy")) {
                 sMSChannelResponse.setLastModifiedBy(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -60,23 +61,25 @@ public SMSChannelResponse unmarshall(JsonUnmarshallerContext context) throws Exc
                 sMSChannelResponse.setLastModifiedDate(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Platform")) {
-                sMSChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sMSChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("PromotionalMessagesPerSecond")) {
                 sMSChannelResponse.setPromotionalMessagesPerSecond(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SenderId")) {
-                sMSChannelResponse.setSenderId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sMSChannelResponse.setSenderId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ShortCode")) {
-                sMSChannelResponse.setShortCode(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sMSChannelResponse.setShortCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TransactionalMessagesPerSecond")) {
                 sMSChannelResponse.setTransactionalMessagesPerSecond(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Version")) {
-                sMSChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sMSChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSMessageJsonUnmarshaller.java
index ea77c10b94..d3f3c66541 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSMessageJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSMessageJsonUnmarshaller.java
@@ -36,20 +36,26 @@ public SMSMessage unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Body")) {
-                sMSMessage.setBody(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                sMSMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Keyword")) {
-                sMSMessage.setKeyword(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                sMSMessage.setKeyword(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("MessageType")) {
-                sMSMessage.setMessageType(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                sMSMessage.setMessageType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("OriginationNumber")) {
-                sMSMessage.setOriginationNumber(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sMSMessage.setOriginationNumber(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SenderId")) {
-                sMSMessage.setSenderId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                sMSMessage.setSenderId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Substitutions")) {
                 sMSMessage.setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
-                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()))
-                        .unmarshall(context));
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ScheduleJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ScheduleJsonMarshaller.java
index 25b2741f77..e264d8d884 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ScheduleJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ScheduleJsonMarshaller.java
@@ -30,6 +30,11 @@ public void marshall(Schedule schedule, AwsJsonWriter jsonWriter) throws Excepti
             jsonWriter.name("EndTime");
             jsonWriter.value(endTime);
         }
+        if (schedule.getEventFilter() != null) {
+            CampaignEventFilter eventFilter = schedule.getEventFilter();
+            jsonWriter.name("EventFilter");
+            CampaignEventFilterJsonMarshaller.getInstance().marshall(eventFilter, jsonWriter);
+        }
         if (schedule.getFrequency() != null) {
             String frequency = schedule.getFrequency();
             jsonWriter.name("Frequency");
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ScheduleJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ScheduleJsonUnmarshaller.java
index 7574b26036..fe30711a27 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ScheduleJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ScheduleJsonUnmarshaller.java
@@ -36,17 +36,26 @@ public Schedule unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("EndTime")) {
-                schedule.setEndTime(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                schedule.setEndTime(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("EventFilter")) {
+                schedule.setEventFilter(CampaignEventFilterJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Frequency")) {
-                schedule.setFrequency(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                schedule.setFrequency(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("IsLocalTime")) {
-                schedule.setIsLocalTime(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                schedule.setIsLocalTime(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("QuietTime")) {
-                schedule.setQuietTime(QuietTimeJsonUnmarshaller.getInstance().unmarshall(context));
+                schedule.setQuietTime(QuietTimeJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("StartTime")) {
-                schedule.setStartTime(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                schedule.setStartTime(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Timezone")) {
-                schedule.setTimezone(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                schedule.setTimezone(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDemographicsJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDemographicsJsonUnmarshaller.java
index 833f8691ab..508d6f4290 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDemographicsJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDemographicsJsonUnmarshaller.java
@@ -46,11 +46,11 @@ public SegmentDemographics unmarshall(JsonUnmarshallerContext context) throws Ex
                 segmentDemographics.setDeviceType(SetDimensionJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Make")) {
-                segmentDemographics.setMake(SetDimensionJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                segmentDemographics.setMake(SetDimensionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Model")) {
-                segmentDemographics.setModel(SetDimensionJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                segmentDemographics.setModel(SetDimensionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Platform")) {
                 segmentDemographics.setPlatform(SetDimensionJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDimensionsJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDimensionsJsonUnmarshaller.java
index d5f3d21af4..19bb81061b 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDimensionsJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDimensionsJsonUnmarshaller.java
@@ -38,7 +38,9 @@ public SegmentDimensions unmarshall(JsonUnmarshallerContext context) throws Exce
             String name = reader.nextName();
             if (name.equals("Attributes")) {
                 segmentDimensions.setAttributes(new MapUnmarshaller<AttributeDimension>(
-                        AttributeDimensionJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AttributeDimensionJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Behavior")) {
                 segmentDimensions.setBehavior(SegmentBehaviorsJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -50,10 +52,14 @@ public SegmentDimensions unmarshall(JsonUnmarshallerContext context) throws Exce
                         .unmarshall(context));
             } else if (name.equals("Metrics")) {
                 segmentDimensions.setMetrics(new MapUnmarshaller<MetricDimension>(
-                        MetricDimensionJsonUnmarshaller.getInstance()).unmarshall(context));
+                        MetricDimensionJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("UserAttributes")) {
                 segmentDimensions.setUserAttributes(new MapUnmarshaller<AttributeDimension>(
-                        AttributeDimensionJsonUnmarshaller.getInstance()).unmarshall(context));
+                        AttributeDimensionJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentGroupJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentGroupJsonUnmarshaller.java
index 784d1b73cb..e811e36baa 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentGroupJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentGroupJsonUnmarshaller.java
@@ -37,15 +37,20 @@ public SegmentGroup unmarshall(JsonUnmarshallerContext context) throws Exception
             String name = reader.nextName();
             if (name.equals("Dimensions")) {
                 segmentGroup.setDimensions(new ListUnmarshaller<SegmentDimensions>(
-                        SegmentDimensionsJsonUnmarshaller.getInstance()).unmarshall(context));
+                        SegmentDimensionsJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("SourceSegments")) {
                 segmentGroup.setSourceSegments(new ListUnmarshaller<SegmentReference>(
-                        SegmentReferenceJsonUnmarshaller.getInstance()).unmarshall(context));
+                        SegmentReferenceJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("SourceType")) {
-                segmentGroup
-                        .setSourceType(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                segmentGroup.setSourceType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Type")) {
-                segmentGroup.setType(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                segmentGroup.setType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentGroupListJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentGroupListJsonUnmarshaller.java
index 0fdf179a1a..2d162e6085 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentGroupListJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentGroupListJsonUnmarshaller.java
@@ -38,7 +38,9 @@ public SegmentGroupList unmarshall(JsonUnmarshallerContext context) throws Excep
             String name = reader.nextName();
             if (name.equals("Groups")) {
                 segmentGroupList.setGroups(new ListUnmarshaller<SegmentGroup>(
-                        SegmentGroupJsonUnmarshaller.getInstance()).unmarshall(context));
+                        SegmentGroupJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Include")) {
                 segmentGroupList.setInclude(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentImportResourceJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentImportResourceJsonUnmarshaller.java
index 48da998d30..e11e3ad9b3 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentImportResourceJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentImportResourceJsonUnmarshaller.java
@@ -38,22 +38,24 @@ public SegmentImportResource unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("ChannelCounts")) {
                 segmentImportResource.setChannelCounts(new MapUnmarshaller<Integer>(
-                        IntegerJsonUnmarshaller.getInstance()).unmarshall(context));
+                        IntegerJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("ExternalId")) {
                 segmentImportResource.setExternalId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Format")) {
-                segmentImportResource.setFormat(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                segmentImportResource.setFormat(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RoleArn")) {
-                segmentImportResource.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                segmentImportResource.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("S3Url")) {
-                segmentImportResource.setS3Url(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                segmentImportResource.setS3Url(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Size")) {
-                segmentImportResource.setSize(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                segmentImportResource.setSize(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentLocationJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentLocationJsonUnmarshaller.java
index 427ca5d323..22135b11a0 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentLocationJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentLocationJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public SegmentLocation unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Country")) {
-                segmentLocation.setCountry(SetDimensionJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                segmentLocation.setCountry(SetDimensionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("GPSPoint")) {
                 segmentLocation.setGPSPoint(GPSPointDimensionJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentReferenceJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentReferenceJsonUnmarshaller.java
index 379e111cb2..3cd487ee29 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentReferenceJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentReferenceJsonUnmarshaller.java
@@ -37,10 +37,11 @@ public SegmentReference unmarshall(JsonUnmarshallerContext context) throws Excep
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Id")) {
-                segmentReference.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                segmentReference.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Version")) {
-                segmentReference.setVersion(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                segmentReference.setVersion(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentResponseJsonUnmarshaller.java
index bc6f207304..c016c17d23 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentResponseJsonUnmarshaller.java
@@ -37,30 +37,33 @@ public SegmentResponse unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("ApplicationId")) {
-                segmentResponse.setApplicationId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                segmentResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CreationDate")) {
-                segmentResponse.setCreationDate(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                segmentResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Dimensions")) {
                 segmentResponse.setDimensions(SegmentDimensionsJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Id")) {
-                segmentResponse.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                segmentResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ImportDefinition")) {
                 segmentResponse.setImportDefinition(SegmentImportResourceJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastModifiedDate")) {
                 segmentResponse.setLastModifiedDate(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Name")) {
-                segmentResponse.setName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                segmentResponse.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SegmentGroups")) {
                 segmentResponse.setSegmentGroups(SegmentGroupListJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("SegmentType")) {
-                segmentResponse.setSegmentType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                segmentResponse.setSegmentType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Version")) {
                 segmentResponse.setVersion(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentsResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentsResponseJsonUnmarshaller.java
index a2f13507de..760075b3e3 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentsResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentsResponseJsonUnmarshaller.java
@@ -38,10 +38,12 @@ public SegmentsResponse unmarshall(JsonUnmarshallerContext context) throws Excep
             String name = reader.nextName();
             if (name.equals("Item")) {
                 segmentsResponse.setItem(new ListUnmarshaller<SegmentResponse>(
-                        SegmentResponseJsonUnmarshaller.getInstance()).unmarshall(context));
+                        SegmentResponseJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextToken")) {
-                segmentsResponse.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                segmentsResponse.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageRequestJsonUnmarshaller.java
index b3c42ad5f6..7471a2a7c6 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageRequestJsonUnmarshaller.java
@@ -38,18 +38,22 @@ public SendUsersMessageRequest unmarshall(JsonUnmarshallerContext context) throw
             String name = reader.nextName();
             if (name.equals("Context")) {
                 sendUsersMessageRequest.setContext(new MapUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("MessageConfiguration")) {
                 sendUsersMessageRequest
                         .setMessageConfiguration(DirectMessageConfigurationJsonUnmarshaller
-                                .getInstance().unmarshall(context));
+                                .getInstance()
+                                .unmarshall(context));
             } else if (name.equals("TraceId")) {
-                sendUsersMessageRequest.setTraceId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                sendUsersMessageRequest.setTraceId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Users")) {
                 sendUsersMessageRequest.setUsers(new MapUnmarshaller<EndpointSendConfiguration>(
-                        EndpointSendConfigurationJsonUnmarshaller.getInstance())
-                        .unmarshall(context));
+                        EndpointSendConfigurationJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageResponseJsonUnmarshaller.java
index 15fdf161b9..9a37408097 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageResponseJsonUnmarshaller.java
@@ -46,7 +46,9 @@ public SendUsersMessageResponse unmarshall(JsonUnmarshallerContext context) thro
                 sendUsersMessageResponse
                         .setResult(new MapUnmarshaller<java.util.Map<String, EndpointMessageResult>>(
                                 new MapUnmarshaller<EndpointMessageResult>(
-                                        EndpointMessageResultJsonUnmarshaller.getInstance()))
+                                        EndpointMessageResultJsonUnmarshaller.getInstance()
+                                )
+                        )
                                 .unmarshall(context));
             } else {
                 reader.skipValue();
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SessionJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SessionJsonMarshaller.java
index 6525881133..2350ee7640 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SessionJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SessionJsonMarshaller.java
@@ -26,7 +26,7 @@
     public void marshall(Session session, AwsJsonWriter jsonWriter) throws Exception {
         jsonWriter.beginObject();
         if (session.getDuration() != null) {
-            Long duration = session.getDuration();
+            Integer duration = session.getDuration();
             jsonWriter.name("Duration");
             jsonWriter.value(duration);
         }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SessionJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SessionJsonUnmarshaller.java
index 9eb5ffa116..7094779c3a 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SessionJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SessionJsonUnmarshaller.java
@@ -36,13 +36,17 @@ public Session unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Duration")) {
-                session.setDuration(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                session.setDuration(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Id")) {
-                session.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                session.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("StartTimestamp")) {
-                session.setStartTimestamp(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                session.setStartTimestamp(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("StopTimestamp")) {
-                session.setStopTimestamp(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                session.setStopTimestamp(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SetDimensionJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SetDimensionJsonUnmarshaller.java
index 8e0aec313a..d4941a32e6 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SetDimensionJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SetDimensionJsonUnmarshaller.java
@@ -36,11 +36,13 @@ public SetDimension unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("DimensionType")) {
-                setDimension.setDimensionType(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                setDimension.setDimensionType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Values")) {
                 setDimension.setValues(new ListUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SimpleEmailJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SimpleEmailJsonMarshaller.java
new file mode 100644
index 0000000000..399b29dd3c
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SimpleEmailJsonMarshaller.java
@@ -0,0 +1,53 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO SimpleEmail
+ */
+class SimpleEmailJsonMarshaller {
+
+    public void marshall(SimpleEmail simpleEmail, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (simpleEmail.getHtmlPart() != null) {
+            SimpleEmailPart htmlPart = simpleEmail.getHtmlPart();
+            jsonWriter.name("HtmlPart");
+            SimpleEmailPartJsonMarshaller.getInstance().marshall(htmlPart, jsonWriter);
+        }
+        if (simpleEmail.getSubject() != null) {
+            SimpleEmailPart subject = simpleEmail.getSubject();
+            jsonWriter.name("Subject");
+            SimpleEmailPartJsonMarshaller.getInstance().marshall(subject, jsonWriter);
+        }
+        if (simpleEmail.getTextPart() != null) {
+            SimpleEmailPart textPart = simpleEmail.getTextPart();
+            jsonWriter.name("TextPart");
+            SimpleEmailPartJsonMarshaller.getInstance().marshall(textPart, jsonWriter);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static SimpleEmailJsonMarshaller instance;
+
+    public static SimpleEmailJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new SimpleEmailJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SimpleEmailJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SimpleEmailJsonUnmarshaller.java
new file mode 100644
index 0000000000..00ee058ff3
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SimpleEmailJsonUnmarshaller.java
@@ -0,0 +1,62 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO SimpleEmail
+ */
+class SimpleEmailJsonUnmarshaller implements Unmarshaller<SimpleEmail, JsonUnmarshallerContext> {
+
+    public SimpleEmail unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        SimpleEmail simpleEmail = new SimpleEmail();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("HtmlPart")) {
+                simpleEmail.setHtmlPart(SimpleEmailPartJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Subject")) {
+                simpleEmail.setSubject(SimpleEmailPartJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("TextPart")) {
+                simpleEmail.setTextPart(SimpleEmailPartJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return simpleEmail;
+    }
+
+    private static SimpleEmailJsonUnmarshaller instance;
+
+    public static SimpleEmailJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new SimpleEmailJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SimpleEmailPartJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SimpleEmailPartJsonMarshaller.java
new file mode 100644
index 0000000000..cf57b15602
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SimpleEmailPartJsonMarshaller.java
@@ -0,0 +1,49 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO SimpleEmailPart
+ */
+class SimpleEmailPartJsonMarshaller {
+
+    public void marshall(SimpleEmailPart simpleEmailPart, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (simpleEmailPart.getCharset() != null) {
+            String charset = simpleEmailPart.getCharset();
+            jsonWriter.name("Charset");
+            jsonWriter.value(charset);
+        }
+        if (simpleEmailPart.getData() != null) {
+            String data = simpleEmailPart.getData();
+            jsonWriter.name("Data");
+            jsonWriter.value(data);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static SimpleEmailPartJsonMarshaller instance;
+
+    public static SimpleEmailPartJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new SimpleEmailPartJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SimpleEmailPartJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SimpleEmailPartJsonUnmarshaller.java
new file mode 100644
index 0000000000..4638096375
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SimpleEmailPartJsonUnmarshaller.java
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO SimpleEmailPart
+ */
+class SimpleEmailPartJsonUnmarshaller implements
+        Unmarshaller<SimpleEmailPart, JsonUnmarshallerContext> {
+
+    public SimpleEmailPart unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        SimpleEmailPart simpleEmailPart = new SimpleEmailPart();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Charset")) {
+                simpleEmailPart.setCharset(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Data")) {
+                simpleEmailPart.setData(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return simpleEmailPart;
+    }
+
+    private static SimpleEmailPartJsonUnmarshaller instance;
+
+    public static SimpleEmailPartJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new SimpleEmailPartJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/TooManyRequestsExceptionUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/TooManyRequestsExceptionUnmarshaller.java
index 2b34b2529e..57174b672c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/TooManyRequestsExceptionUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/TooManyRequestsExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.pinpoint.model.TooManyRequestsException;
 
 public class TooManyRequestsExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,34 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public TooManyRequestsException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        TooManyRequestsException tooManyRequestsException = new TooManyRequestsException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                tooManyRequestsException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else if (name.equals("RequestID")) {
-                tooManyRequestsException.setRequestID(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return tooManyRequestsException;
-    }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/TreatmentResourceJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/TreatmentResourceJsonUnmarshaller.java
index 7b7890c083..2472ad21d8 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/TreatmentResourceJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/TreatmentResourceJsonUnmarshaller.java
@@ -37,25 +37,27 @@ public TreatmentResource unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Id")) {
-                treatmentResource.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                treatmentResource.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("MessageConfiguration")) {
                 treatmentResource.setMessageConfiguration(MessageConfigurationJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Schedule")) {
-                treatmentResource.setSchedule(ScheduleJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                treatmentResource.setSchedule(ScheduleJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SizePercent")) {
-                treatmentResource.setSizePercent(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                treatmentResource.setSizePercent(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("State")) {
-                treatmentResource.setState(CampaignStateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                treatmentResource.setState(CampaignStateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TreatmentDescription")) {
                 treatmentResource.setTreatmentDescription(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("TreatmentName")) {
-                treatmentResource.setTreatmentName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                treatmentResource.setTreatmentName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateAttributesRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateAttributesRequestJsonUnmarshaller.java
index 73e403c900..4f89c48ace 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateAttributesRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateAttributesRequestJsonUnmarshaller.java
@@ -38,7 +38,9 @@ public UpdateAttributesRequest unmarshall(JsonUnmarshallerContext context) throw
             String name = reader.nextName();
             if (name.equals("Blacklist")) {
                 updateAttributesRequest.setBlacklist(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateVoiceChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateVoiceChannelRequestMarshaller.java
new file mode 100644
index 0000000000..e19fe1432f
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateVoiceChannelRequestMarshaller.java
@@ -0,0 +1,84 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for UpdateVoiceChannelRequest
+ */
+public class UpdateVoiceChannelRequestMarshaller implements
+        Marshaller<Request<UpdateVoiceChannelRequest>, UpdateVoiceChannelRequest> {
+
+    public Request<UpdateVoiceChannelRequest> marshall(
+            UpdateVoiceChannelRequest updateVoiceChannelRequest) {
+        if (updateVoiceChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(UpdateVoiceChannelRequest)");
+        }
+
+        Request<UpdateVoiceChannelRequest> request = new DefaultRequest<UpdateVoiceChannelRequest>(
+                updateVoiceChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.PUT);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/voice";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (updateVoiceChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(updateVoiceChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            if (updateVoiceChannelRequest.getVoiceChannelRequest() != null) {
+                VoiceChannelRequest voiceChannelRequest = updateVoiceChannelRequest
+                        .getVoiceChannelRequest();
+                VoiceChannelRequestJsonMarshaller.getInstance().marshall(voiceChannelRequest,
+                        jsonWriter);
+            }
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateVoiceChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateVoiceChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..3f3958b26c
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateVoiceChannelResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response UpdateVoiceChannelResult
+ */
+public class UpdateVoiceChannelResultJsonUnmarshaller implements
+        Unmarshaller<UpdateVoiceChannelResult, JsonUnmarshallerContext> {
+
+    public UpdateVoiceChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        UpdateVoiceChannelResult updateVoiceChannelResult = new UpdateVoiceChannelResult();
+
+        return updateVoiceChannelResult;
+    }
+
+    private static UpdateVoiceChannelResultJsonUnmarshaller instance;
+
+    public static UpdateVoiceChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new UpdateVoiceChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceChannelRequestJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceChannelRequestJsonMarshaller.java
new file mode 100644
index 0000000000..fe4328ec23
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceChannelRequestJsonMarshaller.java
@@ -0,0 +1,44 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO VoiceChannelRequest
+ */
+class VoiceChannelRequestJsonMarshaller {
+
+    public void marshall(VoiceChannelRequest voiceChannelRequest, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (voiceChannelRequest.getEnabled() != null) {
+            Boolean enabled = voiceChannelRequest.getEnabled();
+            jsonWriter.name("Enabled");
+            jsonWriter.value(enabled);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static VoiceChannelRequestJsonMarshaller instance;
+
+    public static VoiceChannelRequestJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new VoiceChannelRequestJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceChannelRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceChannelRequestJsonUnmarshaller.java
new file mode 100644
index 0000000000..a1eb606542
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceChannelRequestJsonUnmarshaller.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO VoiceChannelRequest
+ */
+class VoiceChannelRequestJsonUnmarshaller implements
+        Unmarshaller<VoiceChannelRequest, JsonUnmarshallerContext> {
+
+    public VoiceChannelRequest unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        VoiceChannelRequest voiceChannelRequest = new VoiceChannelRequest();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Enabled")) {
+                voiceChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return voiceChannelRequest;
+    }
+
+    private static VoiceChannelRequestJsonUnmarshaller instance;
+
+    public static VoiceChannelRequestJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new VoiceChannelRequestJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceChannelResponseJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceChannelResponseJsonMarshaller.java
new file mode 100644
index 0000000000..3f58989952
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceChannelResponseJsonMarshaller.java
@@ -0,0 +1,89 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO VoiceChannelResponse
+ */
+class VoiceChannelResponseJsonMarshaller {
+
+    public void marshall(VoiceChannelResponse voiceChannelResponse, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (voiceChannelResponse.getApplicationId() != null) {
+            String applicationId = voiceChannelResponse.getApplicationId();
+            jsonWriter.name("ApplicationId");
+            jsonWriter.value(applicationId);
+        }
+        if (voiceChannelResponse.getCreationDate() != null) {
+            String creationDate = voiceChannelResponse.getCreationDate();
+            jsonWriter.name("CreationDate");
+            jsonWriter.value(creationDate);
+        }
+        if (voiceChannelResponse.getEnabled() != null) {
+            Boolean enabled = voiceChannelResponse.getEnabled();
+            jsonWriter.name("Enabled");
+            jsonWriter.value(enabled);
+        }
+        if (voiceChannelResponse.getHasCredential() != null) {
+            Boolean hasCredential = voiceChannelResponse.getHasCredential();
+            jsonWriter.name("HasCredential");
+            jsonWriter.value(hasCredential);
+        }
+        if (voiceChannelResponse.getId() != null) {
+            String id = voiceChannelResponse.getId();
+            jsonWriter.name("Id");
+            jsonWriter.value(id);
+        }
+        if (voiceChannelResponse.getIsArchived() != null) {
+            Boolean isArchived = voiceChannelResponse.getIsArchived();
+            jsonWriter.name("IsArchived");
+            jsonWriter.value(isArchived);
+        }
+        if (voiceChannelResponse.getLastModifiedBy() != null) {
+            String lastModifiedBy = voiceChannelResponse.getLastModifiedBy();
+            jsonWriter.name("LastModifiedBy");
+            jsonWriter.value(lastModifiedBy);
+        }
+        if (voiceChannelResponse.getLastModifiedDate() != null) {
+            String lastModifiedDate = voiceChannelResponse.getLastModifiedDate();
+            jsonWriter.name("LastModifiedDate");
+            jsonWriter.value(lastModifiedDate);
+        }
+        if (voiceChannelResponse.getPlatform() != null) {
+            String platform = voiceChannelResponse.getPlatform();
+            jsonWriter.name("Platform");
+            jsonWriter.value(platform);
+        }
+        if (voiceChannelResponse.getVersion() != null) {
+            Integer version = voiceChannelResponse.getVersion();
+            jsonWriter.name("Version");
+            jsonWriter.value(version);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static VoiceChannelResponseJsonMarshaller instance;
+
+    public static VoiceChannelResponseJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new VoiceChannelResponseJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceChannelResponseJsonUnmarshaller.java
new file mode 100644
index 0000000000..707819bc86
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceChannelResponseJsonUnmarshaller.java
@@ -0,0 +1,84 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO VoiceChannelResponse
+ */
+class VoiceChannelResponseJsonUnmarshaller implements
+        Unmarshaller<VoiceChannelResponse, JsonUnmarshallerContext> {
+
+    public VoiceChannelResponse unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        VoiceChannelResponse voiceChannelResponse = new VoiceChannelResponse();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("ApplicationId")) {
+                voiceChannelResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("CreationDate")) {
+                voiceChannelResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Enabled")) {
+                voiceChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("HasCredential")) {
+                voiceChannelResponse.setHasCredential(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Id")) {
+                voiceChannelResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("IsArchived")) {
+                voiceChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LastModifiedBy")) {
+                voiceChannelResponse.setLastModifiedBy(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LastModifiedDate")) {
+                voiceChannelResponse.setLastModifiedDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Platform")) {
+                voiceChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Version")) {
+                voiceChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return voiceChannelResponse;
+    }
+
+    private static VoiceChannelResponseJsonUnmarshaller instance;
+
+    public static VoiceChannelResponseJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new VoiceChannelResponseJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceMessageJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceMessageJsonMarshaller.java
new file mode 100644
index 0000000000..579ddc71a7
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceMessageJsonMarshaller.java
@@ -0,0 +1,79 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO VoiceMessage
+ */
+class VoiceMessageJsonMarshaller {
+
+    public void marshall(VoiceMessage voiceMessage, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (voiceMessage.getBody() != null) {
+            String body = voiceMessage.getBody();
+            jsonWriter.name("Body");
+            jsonWriter.value(body);
+        }
+        if (voiceMessage.getLanguageCode() != null) {
+            String languageCode = voiceMessage.getLanguageCode();
+            jsonWriter.name("LanguageCode");
+            jsonWriter.value(languageCode);
+        }
+        if (voiceMessage.getOriginationNumber() != null) {
+            String originationNumber = voiceMessage.getOriginationNumber();
+            jsonWriter.name("OriginationNumber");
+            jsonWriter.value(originationNumber);
+        }
+        if (voiceMessage.getSubstitutions() != null) {
+            java.util.Map<String, java.util.List<String>> substitutions = voiceMessage
+                    .getSubstitutions();
+            jsonWriter.name("Substitutions");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, java.util.List<String>> substitutionsEntry : substitutions
+                    .entrySet()) {
+                java.util.List<String> substitutionsValue = substitutionsEntry.getValue();
+                if (substitutionsValue != null) {
+                    jsonWriter.name(substitutionsEntry.getKey());
+                    jsonWriter.beginArray();
+                    for (String substitutionsValueItem : substitutionsValue) {
+                        if (substitutionsValueItem != null) {
+                            jsonWriter.value(substitutionsValueItem);
+                        }
+                    }
+                    jsonWriter.endArray();
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (voiceMessage.getVoiceId() != null) {
+            String voiceId = voiceMessage.getVoiceId();
+            jsonWriter.name("VoiceId");
+            jsonWriter.value(voiceId);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static VoiceMessageJsonMarshaller instance;
+
+    public static VoiceMessageJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new VoiceMessageJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceMessageJsonUnmarshaller.java
new file mode 100644
index 0000000000..41e9eabb78
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/VoiceMessageJsonUnmarshaller.java
@@ -0,0 +1,71 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO VoiceMessage
+ */
+class VoiceMessageJsonUnmarshaller implements Unmarshaller<VoiceMessage, JsonUnmarshallerContext> {
+
+    public VoiceMessage unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        VoiceMessage voiceMessage = new VoiceMessage();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Body")) {
+                voiceMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LanguageCode")) {
+                voiceMessage.setLanguageCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("OriginationNumber")) {
+                voiceMessage.setOriginationNumber(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Substitutions")) {
+                voiceMessage.setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("VoiceId")) {
+                voiceMessage.setVoiceId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return voiceMessage;
+    }
+
+    private static VoiceMessageJsonUnmarshaller instance;
+
+    public static VoiceMessageJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new VoiceMessageJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteApplicationSettingsRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteApplicationSettingsRequestJsonUnmarshaller.java
index 434fd4427e..3b794f142f 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteApplicationSettingsRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteApplicationSettingsRequestJsonUnmarshaller.java
@@ -39,16 +39,20 @@ public WriteApplicationSettingsRequest unmarshall(JsonUnmarshallerContext contex
             String name = reader.nextName();
             if (name.equals("CampaignHook")) {
                 writeApplicationSettingsRequest.setCampaignHook(CampaignHookJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CloudWatchMetricsEnabled")) {
                 writeApplicationSettingsRequest.setCloudWatchMetricsEnabled(BooleanJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Limits")) {
                 writeApplicationSettingsRequest.setLimits(CampaignLimitsJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("QuietTime")) {
                 writeApplicationSettingsRequest.setQuietTime(QuietTimeJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteCampaignRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteCampaignRequestJsonUnmarshaller.java
index 14baa90383..66a70fd99e 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteCampaignRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteCampaignRequestJsonUnmarshaller.java
@@ -39,7 +39,8 @@ public WriteCampaignRequest unmarshall(JsonUnmarshallerContext context) throws E
             if (name.equals("AdditionalTreatments")) {
                 writeCampaignRequest
                         .setAdditionalTreatments(new ListUnmarshaller<WriteTreatmentResource>(
-                                WriteTreatmentResourceJsonUnmarshaller.getInstance())
+                                WriteTreatmentResourceJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("Description")) {
                 writeCampaignRequest.setDescription(StringJsonUnmarshaller.getInstance()
@@ -48,26 +49,27 @@ public WriteCampaignRequest unmarshall(JsonUnmarshallerContext context) throws E
                 writeCampaignRequest.setHoldoutPercent(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Hook")) {
-                writeCampaignRequest.setHook(CampaignHookJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                writeCampaignRequest.setHook(CampaignHookJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("IsPaused")) {
-                writeCampaignRequest.setIsPaused(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                writeCampaignRequest.setIsPaused(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Limits")) {
                 writeCampaignRequest.setLimits(CampaignLimitsJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("MessageConfiguration")) {
                 writeCampaignRequest.setMessageConfiguration(MessageConfigurationJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Name")) {
-                writeCampaignRequest.setName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                writeCampaignRequest.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Schedule")) {
-                writeCampaignRequest.setSchedule(ScheduleJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                writeCampaignRequest.setSchedule(ScheduleJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SegmentId")) {
-                writeCampaignRequest.setSegmentId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                writeCampaignRequest.setSegmentId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SegmentVersion")) {
                 writeCampaignRequest.setSegmentVersion(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteTreatmentResourceJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteTreatmentResourceJsonUnmarshaller.java
index 6c99f1c563..94b4a027e6 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteTreatmentResourceJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteTreatmentResourceJsonUnmarshaller.java
@@ -38,7 +38,8 @@ public WriteTreatmentResource unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("MessageConfiguration")) {
                 writeTreatmentResource.setMessageConfiguration(MessageConfigurationJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Schedule")) {
                 writeTreatmentResource.setSchedule(ScheduleJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/internal/event/EventRecorderTest.java b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/internal/event/EventRecorderTest.java
index d95ae9e65b..fc3fe61f30 100644
--- a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/internal/event/EventRecorderTest.java
+++ b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/internal/event/EventRecorderTest.java
@@ -25,7 +25,9 @@
 import com.amazonaws.mobileconnectors.pinpoint.targeting.endpointProfile.EndpointProfile;
 import com.amazonaws.services.pinpoint.model.BadRequestException;
 import com.amazonaws.services.pinpoint.model.EndpointItemResponse;
+import com.amazonaws.services.pinpoint.model.Event;
 import com.amazonaws.services.pinpoint.model.EventItemResponse;
+import com.amazonaws.services.pinpoint.model.EventsResponse;
 import com.amazonaws.services.pinpoint.model.InternalServerErrorException;
 import com.amazonaws.services.pinpoint.model.ItemResponse;
 import com.amazonaws.services.pinpoint.model.PutEventsResult;
@@ -53,6 +55,7 @@
 import com.amazonaws.mobileconnectors.pinpoint.analytics.AnalyticsEvent;
 import com.amazonaws.mobileconnectors.pinpoint.analytics.utils.AnalyticsContextBuilder;
 import com.amazonaws.mobileconnectors.pinpoint.internal.core.PinpointContext;
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.MockAppDetails;
 import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.MockDeviceDetails;
 import com.amazonaws.services.pinpointanalytics.AmazonPinpointAnalyticsClient;
 import android.database.Cursor;
@@ -61,6 +64,7 @@
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotEquals;
 import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertNull;
 import static org.junit.Assert.assertTrue;
 import static org.mockito.Matchers.any;
 import static org.mockito.Mockito.when;
@@ -145,6 +149,23 @@ public void testRecordEvent() throws JSONException {
         c.close();
     }
 
+    @Test
+    public void testRecordEventPayload() throws JSONException {
+        final Event event = new Event();
+        eventRecorder.buildEventPayload(analyticsEvent, event);
+
+        final MockAppDetails mockAppDetails = new MockAppDetails();
+        assertEquals(mockAppDetails.packageName(), event.getAppPackageName());
+        assertEquals(mockAppDetails.getAppTitle(), event.getAppTitle());
+        assertEquals(mockAppDetails.versionCode(), event.getAppVersionCode());
+        assertEquals(EVENT_NAME, event.getEventType());
+        assertEquals(SDK_NAME, event.getSdkName());
+        assertEquals(SDK_VERSION, event.getClientSdkVersion());
+        assertNull(event.getAttributes());
+        assertNotNull(event.getMetrics());
+        assertNotNull(event.getSession());
+    }
+
     @Test (expected=IllegalStateException.class)
     public void testReadEventFromCursorThrowsException() throws Exception {
         final Log mockLog = Mockito.mock(Log.class);
@@ -209,7 +230,9 @@ public void testProcessEventWithEndpoint() {
                 .withEndpointItemResponse(new EndpointItemResponse().withStatusCode(202).withMessage("Accepted"));
         itemResponse.addEventsItemResponseEntry(analyticsEvent.getEventId(), eventItemResponse);
         putEventsResult = new PutEventsResult();
-        putEventsResult.addResultsEntry(endpointProfile.getEndpointId(), itemResponse);
+        putEventsResult.withEventsResponse(
+            new EventsResponse()
+                .addResultsEntry(endpointProfile.getEndpointId(), itemResponse));
 
         eventRecorder.recordEvent(analyticsEvent);
         final ArrayList<String> attrValues = new ArrayList<String>();
@@ -234,7 +257,9 @@ public void testProcessEventWithItemRetryableError() {
                 .withEndpointItemResponse(new EndpointItemResponse().withStatusCode(500).withMessage("InternalServerErrorException"));
         itemResponse.addEventsItemResponseEntry(analyticsEvent.getEventId(), eventItemResponse);
         putEventsResult = new PutEventsResult();
-        putEventsResult.addResultsEntry(endpointProfile.getEndpointId(), itemResponse);
+        putEventsResult.withEventsResponse(
+            new EventsResponse()
+                .addResultsEntry(endpointProfile.getEndpointId(), itemResponse));
 
         eventRecorder.recordEvent(analyticsEvent);
         final ArrayList<String> attrValues = new ArrayList<String>();
@@ -259,7 +284,9 @@ public void testProcessEventWithItemNotRetryableError() {
                 .withEndpointItemResponse(new EndpointItemResponse().withStatusCode(400).withMessage("BadRequestException"));
         itemResponse.addEventsItemResponseEntry(analyticsEvent.getEventId(), eventItemResponse);
         putEventsResult = new PutEventsResult();
-        putEventsResult.addResultsEntry(endpointProfile.getEndpointId(), itemResponse);
+        putEventsResult.withEventsResponse(
+            new EventsResponse()
+                .addResultsEntry(endpointProfile.getEndpointId(), itemResponse));
 
         eventRecorder.recordEvent(analyticsEvent);
         final ArrayList<String> attrValues = new ArrayList<String>();
diff --git a/aws-android-sdk-polly/pom.xml b/aws-android-sdk-polly/pom.xml
index d4487ee393..cd15157f5c 100644
--- a/aws-android-sdk-polly/pom.xml
+++ b/aws-android-sdk-polly/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/DescribeVoicesResultJsonUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/DescribeVoicesResultJsonUnmarshaller.java
index 44a01444e0..5b9502d64c 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/DescribeVoicesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/DescribeVoicesResultJsonUnmarshaller.java
@@ -35,10 +35,12 @@ public DescribeVoicesResult unmarshall(JsonUnmarshallerContext context) throws E
             String name = reader.nextName();
             if (name.equals("Voices")) {
                 describeVoicesResult.setVoices(new ListUnmarshaller<Voice>(VoiceJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextToken")) {
-                describeVoicesResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                describeVoicesResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/GetLexiconResultJsonUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/GetLexiconResultJsonUnmarshaller.java
index 6e473280fe..64281ca844 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/GetLexiconResultJsonUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/GetLexiconResultJsonUnmarshaller.java
@@ -34,11 +34,12 @@ public GetLexiconResult unmarshall(JsonUnmarshallerContext context) throws Excep
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Lexicon")) {
-                getLexiconResult.setLexicon(LexiconJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getLexiconResult.setLexicon(LexiconJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LexiconAttributes")) {
                 getLexiconResult.setLexiconAttributes(LexiconAttributesJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/GetSpeechSynthesisTaskResultJsonUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/GetSpeechSynthesisTaskResultJsonUnmarshaller.java
index cdde944025..31f7f252e6 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/GetSpeechSynthesisTaskResultJsonUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/GetSpeechSynthesisTaskResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public GetSpeechSynthesisTaskResult unmarshall(JsonUnmarshallerContext context)
             String name = reader.nextName();
             if (name.equals("SynthesisTask")) {
                 getSpeechSynthesisTaskResult.setSynthesisTask(SynthesisTaskJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidLexiconExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidLexiconExceptionUnmarshaller.java
index 25a3a9b0a9..eb1cfc550c 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidLexiconExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidLexiconExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.InvalidLexiconException;
 
 public class InvalidLexiconExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidLexiconException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidLexiconException invalidLexiconException = new InvalidLexiconException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidLexiconException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidLexiconException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidNextTokenExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidNextTokenExceptionUnmarshaller.java
index 40d45c00ad..70e6918a29 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidNextTokenExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidNextTokenExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.InvalidNextTokenException;
 
 public class InvalidNextTokenExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidNextTokenException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidNextTokenException invalidNextTokenException = new InvalidNextTokenException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidNextTokenException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidNextTokenException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidS3BucketExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidS3BucketExceptionUnmarshaller.java
index 5abc95f961..f42851ddfc 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidS3BucketExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidS3BucketExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.InvalidS3BucketException;
 
 public class InvalidS3BucketExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidS3BucketException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidS3BucketException invalidS3BucketException = new InvalidS3BucketException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidS3BucketException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidS3BucketException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidS3KeyExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidS3KeyExceptionUnmarshaller.java
index c1fe364425..19e3a203ec 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidS3KeyExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidS3KeyExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.InvalidS3KeyException;
 
 public class InvalidS3KeyExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidS3KeyException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidS3KeyException invalidS3KeyException = new InvalidS3KeyException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidS3KeyException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidS3KeyException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidSampleRateExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidSampleRateExceptionUnmarshaller.java
index 1a3e993638..75ef6a2537 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidSampleRateExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidSampleRateExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.InvalidSampleRateException;
 
 public class InvalidSampleRateExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidSampleRateException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidSampleRateException invalidSampleRateException = new InvalidSampleRateException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidSampleRateException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidSampleRateException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidSnsTopicArnExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidSnsTopicArnExceptionUnmarshaller.java
index 477f4af1a2..e5b5917359 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidSnsTopicArnExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidSnsTopicArnExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.InvalidSnsTopicArnException;
 
 public class InvalidSnsTopicArnExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidSnsTopicArnException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidSnsTopicArnException invalidSnsTopicArnException = new InvalidSnsTopicArnException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidSnsTopicArnException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidSnsTopicArnException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidSsmlExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidSsmlExceptionUnmarshaller.java
index 1e71291864..8bacac93de 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidSsmlExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidSsmlExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.InvalidSsmlException;
 
 public class InvalidSsmlExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidSsmlException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidSsmlException invalidSsmlException = new InvalidSsmlException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidSsmlException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidSsmlException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidTaskIdExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidTaskIdExceptionUnmarshaller.java
index 5dfc847e01..41af214f5c 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidTaskIdExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/InvalidTaskIdExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.InvalidTaskIdException;
 
 public class InvalidTaskIdExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidTaskIdException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidTaskIdException invalidTaskIdException = new InvalidTaskIdException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidTaskIdException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidTaskIdException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LanguageNotSupportedExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LanguageNotSupportedExceptionUnmarshaller.java
index eb636018d7..9fd442b962 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LanguageNotSupportedExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LanguageNotSupportedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.LanguageNotSupportedException;
 
 public class LanguageNotSupportedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public LanguageNotSupportedException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        LanguageNotSupportedException languageNotSupportedException = new LanguageNotSupportedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                languageNotSupportedException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return languageNotSupportedException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconAttributesJsonUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconAttributesJsonUnmarshaller.java
index 3f133d6ef9..34dcaa5961 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconAttributesJsonUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconAttributesJsonUnmarshaller.java
@@ -37,23 +37,23 @@ public LexiconAttributes unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Alphabet")) {
-                lexiconAttributes.setAlphabet(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                lexiconAttributes.setAlphabet(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LanguageCode")) {
-                lexiconAttributes.setLanguageCode(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                lexiconAttributes.setLanguageCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastModified")) {
-                lexiconAttributes.setLastModified(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                lexiconAttributes.setLastModified(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LexiconArn")) {
-                lexiconAttributes.setLexiconArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                lexiconAttributes.setLexiconArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LexemesCount")) {
-                lexiconAttributes.setLexemesCount(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                lexiconAttributes.setLexemesCount(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Size")) {
-                lexiconAttributes
-                        .setSize(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                lexiconAttributes.setSize(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconDescriptionJsonUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconDescriptionJsonUnmarshaller.java
index 27927a0a85..c8d6c4840c 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconDescriptionJsonUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconDescriptionJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public LexiconDescription unmarshall(JsonUnmarshallerContext context) throws Exc
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Name")) {
-                lexiconDescription
-                        .setName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                lexiconDescription.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Attributes")) {
                 lexiconDescription.setAttributes(LexiconAttributesJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconJsonUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconJsonUnmarshaller.java
index 0bafae4292..8d1f0189b9 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconJsonUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Lexicon unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Content")) {
-                lexicon.setContent(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                lexicon.setContent(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Name")) {
-                lexicon.setName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                lexicon.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconNotFoundExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconNotFoundExceptionUnmarshaller.java
index ee64a2024d..4b8fa0bb6e 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.LexiconNotFoundException;
 
 public class LexiconNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public LexiconNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        LexiconNotFoundException lexiconNotFoundException = new LexiconNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                lexiconNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return lexiconNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconSizeExceededExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconSizeExceededExceptionUnmarshaller.java
index bdf858acf0..37f3441bca 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconSizeExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/LexiconSizeExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.LexiconSizeExceededException;
 
 public class LexiconSizeExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public LexiconSizeExceededException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        LexiconSizeExceededException lexiconSizeExceededException = new LexiconSizeExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                lexiconSizeExceededException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return lexiconSizeExceededException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/ListLexiconsResultJsonUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/ListLexiconsResultJsonUnmarshaller.java
index 0221f1c7f9..d1ad9d0b76 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/ListLexiconsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/ListLexiconsResultJsonUnmarshaller.java
@@ -35,10 +35,12 @@ public ListLexiconsResult unmarshall(JsonUnmarshallerContext context) throws Exc
             String name = reader.nextName();
             if (name.equals("Lexicons")) {
                 listLexiconsResult.setLexicons(new ListUnmarshaller<LexiconDescription>(
-                        LexiconDescriptionJsonUnmarshaller.getInstance()).unmarshall(context));
+                        LexiconDescriptionJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextToken")) {
-                listLexiconsResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listLexiconsResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/ListSpeechSynthesisTasksResultJsonUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/ListSpeechSynthesisTasksResultJsonUnmarshaller.java
index 5308e70dc4..b65f06eb24 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/ListSpeechSynthesisTasksResultJsonUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/ListSpeechSynthesisTasksResultJsonUnmarshaller.java
@@ -40,7 +40,9 @@ public ListSpeechSynthesisTasksResult unmarshall(JsonUnmarshallerContext context
             } else if (name.equals("SynthesisTasks")) {
                 listSpeechSynthesisTasksResult
                         .setSynthesisTasks(new ListUnmarshaller<SynthesisTask>(
-                                SynthesisTaskJsonUnmarshaller.getInstance()).unmarshall(context));
+                                SynthesisTaskJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/MarksNotSupportedForFormatExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/MarksNotSupportedForFormatExceptionUnmarshaller.java
index 0ad8d50816..855c530a3e 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/MarksNotSupportedForFormatExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/MarksNotSupportedForFormatExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.MarksNotSupportedForFormatException;
 
 public class MarksNotSupportedForFormatExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public MarksNotSupportedForFormatException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        MarksNotSupportedForFormatException marksNotSupportedForFormatException = new MarksNotSupportedForFormatException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                marksNotSupportedForFormatException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return marksNotSupportedForFormatException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/MaxLexemeLengthExceededExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/MaxLexemeLengthExceededExceptionUnmarshaller.java
index 96ec9bc7d3..137d8753f5 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/MaxLexemeLengthExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/MaxLexemeLengthExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.MaxLexemeLengthExceededException;
 
 public class MaxLexemeLengthExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public MaxLexemeLengthExceededException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        MaxLexemeLengthExceededException maxLexemeLengthExceededException = new MaxLexemeLengthExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                maxLexemeLengthExceededException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return maxLexemeLengthExceededException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/MaxLexiconsNumberExceededExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/MaxLexiconsNumberExceededExceptionUnmarshaller.java
index 7cb3736372..78ef1e8fa2 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/MaxLexiconsNumberExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/MaxLexiconsNumberExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.MaxLexiconsNumberExceededException;
 
 public class MaxLexiconsNumberExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public MaxLexiconsNumberExceededException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        MaxLexiconsNumberExceededException maxLexiconsNumberExceededException = new MaxLexiconsNumberExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                maxLexiconsNumberExceededException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return maxLexiconsNumberExceededException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/ServiceFailureExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/ServiceFailureExceptionUnmarshaller.java
index f470778243..8a20a537b2 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/ServiceFailureExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/ServiceFailureExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.ServiceFailureException;
 
 public class ServiceFailureExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ServiceFailureException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ServiceFailureException serviceFailureException = new ServiceFailureException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                serviceFailureException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return serviceFailureException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/SsmlMarksNotSupportedForTextTypeExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/SsmlMarksNotSupportedForTextTypeExceptionUnmarshaller.java
index 613b1a5efb..5a61690039 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/SsmlMarksNotSupportedForTextTypeExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/SsmlMarksNotSupportedForTextTypeExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.SsmlMarksNotSupportedForTextTypeException;
 
 public class SsmlMarksNotSupportedForTextTypeExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public SsmlMarksNotSupportedForTextTypeException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        SsmlMarksNotSupportedForTextTypeException ssmlMarksNotSupportedForTextTypeException = new SsmlMarksNotSupportedForTextTypeException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                ssmlMarksNotSupportedForTextTypeException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return ssmlMarksNotSupportedForTextTypeException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/StartSpeechSynthesisTaskResultJsonUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/StartSpeechSynthesisTaskResultJsonUnmarshaller.java
index 9f633c00b4..5bc4ac1c7e 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/StartSpeechSynthesisTaskResultJsonUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/StartSpeechSynthesisTaskResultJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public StartSpeechSynthesisTaskResult unmarshall(JsonUnmarshallerContext context
             String name = reader.nextName();
             if (name.equals("SynthesisTask")) {
                 startSpeechSynthesisTaskResult.setSynthesisTask(SynthesisTaskJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/SynthesisTaskJsonUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/SynthesisTaskJsonUnmarshaller.java
index 4022b23ec6..7290292cda 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/SynthesisTaskJsonUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/SynthesisTaskJsonUnmarshaller.java
@@ -36,16 +36,17 @@ public SynthesisTask unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("TaskId")) {
-                synthesisTask.setTaskId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                synthesisTask.setTaskId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TaskStatus")) {
                 synthesisTask.setTaskStatus(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("TaskStatusReason")) {
-                synthesisTask.setTaskStatusReason(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                synthesisTask.setTaskStatusReason(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("OutputUri")) {
-                synthesisTask
-                        .setOutputUri(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                synthesisTask.setOutputUri(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CreationTime")) {
                 synthesisTask.setCreationTime(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -53,27 +54,33 @@ public SynthesisTask unmarshall(JsonUnmarshallerContext context) throws Exceptio
                 synthesisTask.setRequestCharacters(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("SnsTopicArn")) {
-                synthesisTask.setSnsTopicArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                synthesisTask.setSnsTopicArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LexiconNames")) {
                 synthesisTask.setLexiconNames(new ListUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("OutputFormat")) {
-                synthesisTask.setOutputFormat(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                synthesisTask.setOutputFormat(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SampleRate")) {
                 synthesisTask.setSampleRate(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("SpeechMarkTypes")) {
                 synthesisTask.setSpeechMarkTypes(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("TextType")) {
-                synthesisTask.setTextType(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                synthesisTask.setTextType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("VoiceId")) {
-                synthesisTask.setVoiceId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                synthesisTask.setVoiceId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LanguageCode")) {
-                synthesisTask.setLanguageCode(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                synthesisTask.setLanguageCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/SynthesisTaskNotFoundExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/SynthesisTaskNotFoundExceptionUnmarshaller.java
index 692dc0a1c6..8bdbb2d6fd 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/SynthesisTaskNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/SynthesisTaskNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.SynthesisTaskNotFoundException;
 
 public class SynthesisTaskNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public SynthesisTaskNotFoundException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        SynthesisTaskNotFoundException synthesisTaskNotFoundException = new SynthesisTaskNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                synthesisTaskNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return synthesisTaskNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/TextLengthExceededExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/TextLengthExceededExceptionUnmarshaller.java
index c9644577fd..6eaf640790 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/TextLengthExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/TextLengthExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.TextLengthExceededException;
 
 public class TextLengthExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public TextLengthExceededException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        TextLengthExceededException textLengthExceededException = new TextLengthExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                textLengthExceededException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return textLengthExceededException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/UnsupportedPlsAlphabetExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/UnsupportedPlsAlphabetExceptionUnmarshaller.java
index d6e3134963..9b4ad12b51 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/UnsupportedPlsAlphabetExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/UnsupportedPlsAlphabetExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.UnsupportedPlsAlphabetException;
 
 public class UnsupportedPlsAlphabetExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public UnsupportedPlsAlphabetException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        UnsupportedPlsAlphabetException unsupportedPlsAlphabetException = new UnsupportedPlsAlphabetException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                unsupportedPlsAlphabetException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return unsupportedPlsAlphabetException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/UnsupportedPlsLanguageExceptionUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/UnsupportedPlsLanguageExceptionUnmarshaller.java
index dd3f06d740..31bfe5e115 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/UnsupportedPlsLanguageExceptionUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/UnsupportedPlsLanguageExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.polly.model.UnsupportedPlsLanguageException;
 
 public class UnsupportedPlsLanguageExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public UnsupportedPlsLanguageException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        UnsupportedPlsLanguageException unsupportedPlsLanguageException = new UnsupportedPlsLanguageException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                unsupportedPlsLanguageException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return unsupportedPlsLanguageException;
-    }
 }
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/VoiceJsonUnmarshaller.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/VoiceJsonUnmarshaller.java
index c5173afe51..de82cc5992 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/VoiceJsonUnmarshaller.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/transform/VoiceJsonUnmarshaller.java
@@ -36,18 +36,25 @@ public Voice unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Gender")) {
-                voice.setGender(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                voice.setGender(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Id")) {
-                voice.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                voice.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LanguageCode")) {
-                voice.setLanguageCode(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                voice.setLanguageCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LanguageName")) {
-                voice.setLanguageName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                voice.setLanguageName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Name")) {
-                voice.setName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                voice.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("AdditionalLanguageCodes")) {
                 voice.setAdditionalLanguageCodes(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/pom.xml b/aws-android-sdk-rekognition/pom.xml
index 91d42846a8..53232035b1 100644
--- a/aws-android-sdk-rekognition/pom.xml
+++ b/aws-android-sdk-rekognition/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/AccessDeniedExceptionUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/AccessDeniedExceptionUnmarshaller.java
index ba4a0e6ca0..1922026eeb 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/AccessDeniedExceptionUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/AccessDeniedExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.rekognition.model.AccessDeniedException;
 
 public class AccessDeniedExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public AccessDeniedException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        AccessDeniedException accessDeniedException = new AccessDeniedException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                accessDeniedException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return accessDeniedException;
-    }
 }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/AgeRangeJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/AgeRangeJsonUnmarshaller.java
index dd67a5c278..df2a19cadc 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/AgeRangeJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/AgeRangeJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public AgeRange unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Low")) {
-                ageRange.setLow(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                ageRange.setLow(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("High")) {
-                ageRange.setHigh(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                ageRange.setHigh(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/BeardJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/BeardJsonUnmarshaller.java
index 958b6e9231..f0f6a42d5a 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/BeardJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/BeardJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Beard unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Value")) {
-                beard.setValue(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                beard.setValue(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Confidence")) {
-                beard.setConfidence(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                beard.setConfidence(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/BoundingBoxJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/BoundingBoxJsonUnmarshaller.java
index 6fadbbe97c..d770809fec 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/BoundingBoxJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/BoundingBoxJsonUnmarshaller.java
@@ -36,13 +36,17 @@ public BoundingBox unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Width")) {
-                boundingBox.setWidth(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                boundingBox.setWidth(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Height")) {
-                boundingBox.setHeight(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                boundingBox.setHeight(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Left")) {
-                boundingBox.setLeft(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                boundingBox.setLeft(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Top")) {
-                boundingBox.setTop(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                boundingBox.setTop(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CelebrityDetailJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CelebrityDetailJsonUnmarshaller.java
index 872deb80ac..6a9835aad1 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CelebrityDetailJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CelebrityDetailJsonUnmarshaller.java
@@ -38,14 +38,18 @@ public CelebrityDetail unmarshall(JsonUnmarshallerContext context) throws Except
             String name = reader.nextName();
             if (name.equals("Urls")) {
                 celebrityDetail.setUrls(new ListUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Name")) {
-                celebrityDetail.setName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                celebrityDetail.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Id")) {
-                celebrityDetail.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                celebrityDetail.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Confidence")) {
-                celebrityDetail.setConfidence(FloatJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                celebrityDetail.setConfidence(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("BoundingBox")) {
                 celebrityDetail.setBoundingBox(BoundingBoxJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CelebrityJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CelebrityJsonUnmarshaller.java
index de2a42d159..66ab4381f3 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CelebrityJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CelebrityJsonUnmarshaller.java
@@ -36,15 +36,18 @@ public Celebrity unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Urls")) {
-                celebrity
-                        .setUrls(new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance())
+                celebrity.setUrls(new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("Name")) {
-                celebrity.setName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                celebrity.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Id")) {
-                celebrity.setId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                celebrity.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Face")) {
-                celebrity.setFace(ComparedFaceJsonUnmarshaller.getInstance().unmarshall(context));
+                celebrity.setFace(ComparedFaceJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("MatchConfidence")) {
                 celebrity.setMatchConfidence(FloatJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CelebrityRecognitionJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CelebrityRecognitionJsonUnmarshaller.java
index 0a9cdc8cfc..20fb859c03 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CelebrityRecognitionJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CelebrityRecognitionJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public CelebrityRecognition unmarshall(JsonUnmarshallerContext context) throws E
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Timestamp")) {
-                celebrityRecognition.setTimestamp(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                celebrityRecognition.setTimestamp(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Celebrity")) {
                 celebrityRecognition.setCelebrity(CelebrityDetailJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CompareFacesMatchJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CompareFacesMatchJsonUnmarshaller.java
index b879059b31..74d45e3a36 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CompareFacesMatchJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CompareFacesMatchJsonUnmarshaller.java
@@ -37,11 +37,11 @@ public CompareFacesMatch unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Similarity")) {
-                compareFacesMatch.setSimilarity(FloatJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                compareFacesMatch.setSimilarity(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Face")) {
-                compareFacesMatch.setFace(ComparedFaceJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                compareFacesMatch.setFace(ComparedFaceJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CompareFacesResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CompareFacesResultJsonUnmarshaller.java
index 5d9bdd451d..ae52cf2332 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CompareFacesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CompareFacesResultJsonUnmarshaller.java
@@ -35,19 +35,26 @@ public CompareFacesResult unmarshall(JsonUnmarshallerContext context) throws Exc
             String name = reader.nextName();
             if (name.equals("SourceImageFace")) {
                 compareFacesResult.setSourceImageFace(ComparedSourceImageFaceJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("FaceMatches")) {
                 compareFacesResult.setFaceMatches(new ListUnmarshaller<CompareFacesMatch>(
-                        CompareFacesMatchJsonUnmarshaller.getInstance()).unmarshall(context));
+                        CompareFacesMatchJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("UnmatchedFaces")) {
                 compareFacesResult.setUnmatchedFaces(new ListUnmarshaller<ComparedFace>(
-                        ComparedFaceJsonUnmarshaller.getInstance()).unmarshall(context));
+                        ComparedFaceJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("SourceImageOrientationCorrection")) {
                 compareFacesResult.setSourceImageOrientationCorrection(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TargetImageOrientationCorrection")) {
                 compareFacesResult.setTargetImageOrientationCorrection(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ComparedFaceJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ComparedFaceJsonUnmarshaller.java
index f213e54746..8f1652fe27 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ComparedFaceJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ComparedFaceJsonUnmarshaller.java
@@ -36,18 +36,22 @@ public ComparedFace unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("BoundingBox")) {
-                comparedFace.setBoundingBox(BoundingBoxJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                comparedFace.setBoundingBox(BoundingBoxJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Confidence")) {
-                comparedFace.setConfidence(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                comparedFace.setConfidence(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Landmarks")) {
                 comparedFace.setLandmarks(new ListUnmarshaller<Landmark>(LandmarkJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Pose")) {
-                comparedFace.setPose(PoseJsonUnmarshaller.getInstance().unmarshall(context));
+                comparedFace.setPose(PoseJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Quality")) {
-                comparedFace.setQuality(ImageQualityJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                comparedFace.setQuality(ImageQualityJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ContentModerationDetectionJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ContentModerationDetectionJsonUnmarshaller.java
index e48582112a..23b2c83834 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ContentModerationDetectionJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ContentModerationDetectionJsonUnmarshaller.java
@@ -41,7 +41,8 @@ public ContentModerationDetection unmarshall(JsonUnmarshallerContext context) th
                         .unmarshall(context));
             } else if (name.equals("ModerationLabel")) {
                 contentModerationDetection.setModerationLabel(ModerationLabelJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CreateStreamProcessorResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CreateStreamProcessorResultJsonUnmarshaller.java
index 1e754c7ba1..7598138133 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CreateStreamProcessorResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/CreateStreamProcessorResultJsonUnmarshaller.java
@@ -35,7 +35,8 @@ public CreateStreamProcessorResult unmarshall(JsonUnmarshallerContext context) t
             String name = reader.nextName();
             if (name.equals("StreamProcessorArn")) {
                 createStreamProcessorResult.setStreamProcessorArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DeleteFacesResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DeleteFacesResultJsonUnmarshaller.java
index 393db9496a..f79a59ae1e 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DeleteFacesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DeleteFacesResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public DeleteFacesResult unmarshall(JsonUnmarshallerContext context) throws Exce
             String name = reader.nextName();
             if (name.equals("DeletedFaces")) {
                 deleteFacesResult.setDeletedFaces(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DescribeStreamProcessorResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DescribeStreamProcessorResultJsonUnmarshaller.java
index 8a93fef9fa..9dd20e84b0 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DescribeStreamProcessorResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DescribeStreamProcessorResultJsonUnmarshaller.java
@@ -39,7 +39,8 @@ public DescribeStreamProcessorResult unmarshall(JsonUnmarshallerContext context)
                         .unmarshall(context));
             } else if (name.equals("StreamProcessorArn")) {
                 describeStreamProcessorResult.setStreamProcessorArn(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Status")) {
                 describeStreamProcessorResult.setStatus(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -48,22 +49,27 @@ public DescribeStreamProcessorResult unmarshall(JsonUnmarshallerContext context)
                         .unmarshall(context));
             } else if (name.equals("CreationTimestamp")) {
                 describeStreamProcessorResult.setCreationTimestamp(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastUpdateTimestamp")) {
                 describeStreamProcessorResult.setLastUpdateTimestamp(DateJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Input")) {
                 describeStreamProcessorResult.setInput(StreamProcessorInputJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Output")) {
                 describeStreamProcessorResult.setOutput(StreamProcessorOutputJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RoleArn")) {
                 describeStreamProcessorResult.setRoleArn(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Settings")) {
                 describeStreamProcessorResult.setSettings(StreamProcessorSettingsJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DetectFacesResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DetectFacesResultJsonUnmarshaller.java
index 86aec9bceb..97e37b1831 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DetectFacesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DetectFacesResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public DetectFacesResult unmarshall(JsonUnmarshallerContext context) throws Exce
             String name = reader.nextName();
             if (name.equals("FaceDetails")) {
                 detectFacesResult.setFaceDetails(new ListUnmarshaller<FaceDetail>(
-                        FaceDetailJsonUnmarshaller.getInstance()).unmarshall(context));
+                        FaceDetailJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("OrientationCorrection")) {
                 detectFacesResult.setOrientationCorrection(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DetectLabelsResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DetectLabelsResultJsonUnmarshaller.java
index fb5a900c02..c05f055c7e 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DetectLabelsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DetectLabelsResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public DetectLabelsResult unmarshall(JsonUnmarshallerContext context) throws Exc
             String name = reader.nextName();
             if (name.equals("Labels")) {
                 detectLabelsResult.setLabels(new ListUnmarshaller<Label>(LabelJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("OrientationCorrection")) {
                 detectLabelsResult.setOrientationCorrection(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DetectModerationLabelsResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DetectModerationLabelsResultJsonUnmarshaller.java
index b5fe7aa702..2abfcd1e9e 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DetectModerationLabelsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DetectModerationLabelsResultJsonUnmarshaller.java
@@ -37,7 +37,9 @@ public DetectModerationLabelsResult unmarshall(JsonUnmarshallerContext context)
             if (name.equals("ModerationLabels")) {
                 detectModerationLabelsResult
                         .setModerationLabels(new ListUnmarshaller<ModerationLabel>(
-                                ModerationLabelJsonUnmarshaller.getInstance()).unmarshall(context));
+                                ModerationLabelJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DetectTextResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DetectTextResultJsonUnmarshaller.java
index c986760231..6329363cc4 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DetectTextResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/DetectTextResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public DetectTextResult unmarshall(JsonUnmarshallerContext context) throws Excep
             String name = reader.nextName();
             if (name.equals("TextDetections")) {
                 detectTextResult.setTextDetections(new ListUnmarshaller<TextDetection>(
-                        TextDetectionJsonUnmarshaller.getInstance()).unmarshall(context));
+                        TextDetectionJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/EmotionJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/EmotionJsonUnmarshaller.java
index ae5e7e8593..e0eb693eb0 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/EmotionJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/EmotionJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Emotion unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Type")) {
-                emotion.setType(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                emotion.setType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Confidence")) {
-                emotion.setConfidence(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                emotion.setConfidence(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/EyeOpenJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/EyeOpenJsonUnmarshaller.java
index d347917e0f..31de50dcc5 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/EyeOpenJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/EyeOpenJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public EyeOpen unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Value")) {
-                eyeOpen.setValue(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                eyeOpen.setValue(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Confidence")) {
-                eyeOpen.setConfidence(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                eyeOpen.setConfidence(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/EyeglassesJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/EyeglassesJsonUnmarshaller.java
index 098b8adf0d..1e6616edcb 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/EyeglassesJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/EyeglassesJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Eyeglasses unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Value")) {
-                eyeglasses.setValue(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                eyeglasses.setValue(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Confidence")) {
-                eyeglasses.setConfidence(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                eyeglasses.setConfidence(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceDetailJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceDetailJsonUnmarshaller.java
index 3080b306a1..cfb784ca1c 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceDetailJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceDetailJsonUnmarshaller.java
@@ -36,42 +36,54 @@ public FaceDetail unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("BoundingBox")) {
-                faceDetail.setBoundingBox(BoundingBoxJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                faceDetail.setBoundingBox(BoundingBoxJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("AgeRange")) {
-                faceDetail.setAgeRange(AgeRangeJsonUnmarshaller.getInstance().unmarshall(context));
+                faceDetail.setAgeRange(AgeRangeJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Smile")) {
-                faceDetail.setSmile(SmileJsonUnmarshaller.getInstance().unmarshall(context));
+                faceDetail.setSmile(SmileJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Eyeglasses")) {
-                faceDetail.setEyeglasses(EyeglassesJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                faceDetail.setEyeglasses(EyeglassesJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Sunglasses")) {
-                faceDetail.setSunglasses(SunglassesJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                faceDetail.setSunglasses(SunglassesJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Gender")) {
-                faceDetail.setGender(GenderJsonUnmarshaller.getInstance().unmarshall(context));
+                faceDetail.setGender(GenderJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Beard")) {
-                faceDetail.setBeard(BeardJsonUnmarshaller.getInstance().unmarshall(context));
+                faceDetail.setBeard(BeardJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Mustache")) {
-                faceDetail.setMustache(MustacheJsonUnmarshaller.getInstance().unmarshall(context));
+                faceDetail.setMustache(MustacheJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EyesOpen")) {
-                faceDetail.setEyesOpen(EyeOpenJsonUnmarshaller.getInstance().unmarshall(context));
+                faceDetail.setEyesOpen(EyeOpenJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("MouthOpen")) {
-                faceDetail
-                        .setMouthOpen(MouthOpenJsonUnmarshaller.getInstance().unmarshall(context));
+                faceDetail.setMouthOpen(MouthOpenJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Emotions")) {
                 faceDetail.setEmotions(new ListUnmarshaller<Emotion>(EmotionJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Landmarks")) {
                 faceDetail.setLandmarks(new ListUnmarshaller<Landmark>(LandmarkJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Pose")) {
-                faceDetail.setPose(PoseJsonUnmarshaller.getInstance().unmarshall(context));
+                faceDetail.setPose(PoseJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Quality")) {
                 faceDetail.setQuality(ImageQualityJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Confidence")) {
-                faceDetail.setConfidence(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                faceDetail.setConfidence(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceDetectionJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceDetectionJsonUnmarshaller.java
index aa0b3b24bb..2adada649e 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceDetectionJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceDetectionJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public FaceDetection unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Timestamp")) {
-                faceDetection.setTimestamp(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                faceDetection.setTimestamp(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Face")) {
-                faceDetection.setFace(FaceDetailJsonUnmarshaller.getInstance().unmarshall(context));
+                faceDetection.setFace(FaceDetailJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceJsonUnmarshaller.java
index 499419e085..3144b8f05a 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceJsonUnmarshaller.java
@@ -36,17 +36,23 @@ public Face unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("FaceId")) {
-                face.setFaceId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                face.setFaceId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("BoundingBox")) {
-                face.setBoundingBox(BoundingBoxJsonUnmarshaller.getInstance().unmarshall(context));
+                face.setBoundingBox(BoundingBoxJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ImageId")) {
-                face.setImageId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                face.setImageId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ExternalImageId")) {
-                face.setExternalImageId(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                face.setExternalImageId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Confidence")) {
-                face.setConfidence(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                face.setConfidence(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("AssociationScore")) {
-                face.setAssociationScore(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                face.setAssociationScore(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceMatchJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceMatchJsonUnmarshaller.java
index 3b3b50cfff..76c002f1d8 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceMatchJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceMatchJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public FaceMatch unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Similarity")) {
-                faceMatch.setSimilarity(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                faceMatch.setSimilarity(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Face")) {
-                faceMatch.setFace(FaceJsonUnmarshaller.getInstance().unmarshall(context));
+                faceMatch.setFace(FaceJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceRecordJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceRecordJsonUnmarshaller.java
index 711d41b8f0..193c5f0ac4 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceRecordJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceRecordJsonUnmarshaller.java
@@ -36,10 +36,11 @@ public FaceRecord unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Face")) {
-                faceRecord.setFace(FaceJsonUnmarshaller.getInstance().unmarshall(context));
+                faceRecord.setFace(FaceJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("FaceDetail")) {
-                faceRecord.setFaceDetail(FaceDetailJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                faceRecord.setFaceDetail(FaceDetailJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceSearchSettingsJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceSearchSettingsJsonUnmarshaller.java
index ee3f9897c7..45c4a2b7d2 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceSearchSettingsJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/FaceSearchSettingsJsonUnmarshaller.java
@@ -37,8 +37,8 @@ public FaceSearchSettings unmarshall(JsonUnmarshallerContext context) throws Exc
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("CollectionId")) {
-                faceSearchSettings.setCollectionId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                faceSearchSettings.setCollectionId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("FaceMatchThreshold")) {
                 faceSearchSettings.setFaceMatchThreshold(FloatJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GenderJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GenderJsonUnmarshaller.java
index 024a124c69..611bee1164 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GenderJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GenderJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Gender unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Value")) {
-                gender.setValue(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                gender.setValue(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Confidence")) {
-                gender.setConfidence(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                gender.setConfidence(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GeometryJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GeometryJsonUnmarshaller.java
index 866a9b56fb..2e52becb1b 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GeometryJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GeometryJsonUnmarshaller.java
@@ -36,11 +36,12 @@ public Geometry unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("BoundingBox")) {
-                geometry.setBoundingBox(BoundingBoxJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else if (name.equals("Polygon")) {
-                geometry.setPolygon(new ListUnmarshaller<Point>(PointJsonUnmarshaller.getInstance())
+                geometry.setBoundingBox(BoundingBoxJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("Polygon")) {
+                geometry.setPolygon(new ListUnmarshaller<Point>(PointJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetCelebrityInfoResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetCelebrityInfoResultJsonUnmarshaller.java
index b344bf4982..1ffc0b3cad 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetCelebrityInfoResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetCelebrityInfoResultJsonUnmarshaller.java
@@ -35,10 +35,12 @@ public GetCelebrityInfoResult unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("Urls")) {
                 getCelebrityInfoResult.setUrls(new ListUnmarshaller<String>(StringJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("Name")) {
-                getCelebrityInfoResult.setName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getCelebrityInfoResult.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetCelebrityRecognitionResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetCelebrityRecognitionResultJsonUnmarshaller.java
index 0e65900c9f..16a2fb7c48 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetCelebrityRecognitionResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetCelebrityRecognitionResultJsonUnmarshaller.java
@@ -42,24 +42,29 @@ public GetCelebrityRecognitionResult unmarshall(JsonUnmarshallerContext context)
                         .unmarshall(context));
             } else if (name.equals("VideoMetadata")) {
                 getCelebrityRecognitionResult.setVideoMetadata(VideoMetadataJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("NextToken")) {
                 getCelebrityRecognitionResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Celebrities")) {
                 getCelebrityRecognitionResult
                         .setCelebrities(new ListUnmarshaller<CelebrityRecognition>(
-                                CelebrityRecognitionJsonUnmarshaller.getInstance())
+                                CelebrityRecognitionJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("BillableDurationSeconds")) {
                 getCelebrityRecognitionResult.setBillableDurationSeconds(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ErrorCode")) {
                 getCelebrityRecognitionResult.setErrorCode(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Warnings")) {
                 getCelebrityRecognitionResult.setWarnings(new ListUnmarshaller<Warning>(
-                        WarningJsonUnmarshaller.getInstance()).unmarshall(context));
+                        WarningJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetContentModerationResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetContentModerationResultJsonUnmarshaller.java
index 3673b50b72..1647e582dc 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetContentModerationResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetContentModerationResultJsonUnmarshaller.java
@@ -41,24 +41,29 @@ public GetContentModerationResult unmarshall(JsonUnmarshallerContext context) th
                         .unmarshall(context));
             } else if (name.equals("VideoMetadata")) {
                 getContentModerationResult.setVideoMetadata(VideoMetadataJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ModerationLabels")) {
                 getContentModerationResult
                         .setModerationLabels(new ListUnmarshaller<ContentModerationDetection>(
-                                ContentModerationDetectionJsonUnmarshaller.getInstance())
+                                ContentModerationDetectionJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else if (name.equals("NextToken")) {
                 getContentModerationResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("BillableDurationSeconds")) {
                 getContentModerationResult.setBillableDurationSeconds(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ErrorCode")) {
                 getContentModerationResult.setErrorCode(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Warnings")) {
                 getContentModerationResult.setWarnings(new ListUnmarshaller<Warning>(
-                        WarningJsonUnmarshaller.getInstance()).unmarshall(context));
+                        WarningJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetFaceDetectionResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetFaceDetectionResultJsonUnmarshaller.java
index cd36d687c9..713e587ac7 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetFaceDetectionResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetFaceDetectionResultJsonUnmarshaller.java
@@ -47,16 +47,21 @@ public GetFaceDetectionResult unmarshall(JsonUnmarshallerContext context) throws
                         .unmarshall(context));
             } else if (name.equals("Faces")) {
                 getFaceDetectionResult.setFaces(new ListUnmarshaller<FaceDetection>(
-                        FaceDetectionJsonUnmarshaller.getInstance()).unmarshall(context));
+                        FaceDetectionJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("BillableDurationSeconds")) {
                 getFaceDetectionResult.setBillableDurationSeconds(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ErrorCode")) {
                 getFaceDetectionResult.setErrorCode(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Warnings")) {
                 getFaceDetectionResult.setWarnings(new ListUnmarshaller<Warning>(
-                        WarningJsonUnmarshaller.getInstance()).unmarshall(context));
+                        WarningJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetFaceSearchResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetFaceSearchResultJsonUnmarshaller.java
index e6d7183d4c..c24a5f828f 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetFaceSearchResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetFaceSearchResultJsonUnmarshaller.java
@@ -34,29 +34,34 @@ public GetFaceSearchResult unmarshall(JsonUnmarshallerContext context) throws Ex
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("JobStatus")) {
-                getFaceSearchResult.setJobStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getFaceSearchResult.setJobStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("StatusMessage")) {
                 getFaceSearchResult.setStatusMessage(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("NextToken")) {
-                getFaceSearchResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getFaceSearchResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("VideoMetadata")) {
                 getFaceSearchResult.setVideoMetadata(VideoMetadataJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Persons")) {
                 getFaceSearchResult.setPersons(new ListUnmarshaller<PersonMatch>(
-                        PersonMatchJsonUnmarshaller.getInstance()).unmarshall(context));
+                        PersonMatchJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("BillableDurationSeconds")) {
                 getFaceSearchResult.setBillableDurationSeconds(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ErrorCode")) {
-                getFaceSearchResult.setErrorCode(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getFaceSearchResult.setErrorCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Warnings")) {
                 getFaceSearchResult.setWarnings(new ListUnmarshaller<Warning>(
-                        WarningJsonUnmarshaller.getInstance()).unmarshall(context));
+                        WarningJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetLabelDetectionResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetLabelDetectionResultJsonUnmarshaller.java
index adb42a3ee6..3cc97f2afb 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetLabelDetectionResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetLabelDetectionResultJsonUnmarshaller.java
@@ -41,22 +41,28 @@ public GetLabelDetectionResult unmarshall(JsonUnmarshallerContext context) throw
                         .unmarshall(context));
             } else if (name.equals("VideoMetadata")) {
                 getLabelDetectionResult.setVideoMetadata(VideoMetadataJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("NextToken")) {
                 getLabelDetectionResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Labels")) {
                 getLabelDetectionResult.setLabels(new ListUnmarshaller<LabelDetection>(
-                        LabelDetectionJsonUnmarshaller.getInstance()).unmarshall(context));
+                        LabelDetectionJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("BillableDurationSeconds")) {
                 getLabelDetectionResult.setBillableDurationSeconds(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ErrorCode")) {
                 getLabelDetectionResult.setErrorCode(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Warnings")) {
                 getLabelDetectionResult.setWarnings(new ListUnmarshaller<Warning>(
-                        WarningJsonUnmarshaller.getInstance()).unmarshall(context));
+                        WarningJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetPersonTrackingResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetPersonTrackingResultJsonUnmarshaller.java
index 344d08e59d..09b82360ea 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetPersonTrackingResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/GetPersonTrackingResultJsonUnmarshaller.java
@@ -41,22 +41,28 @@ public GetPersonTrackingResult unmarshall(JsonUnmarshallerContext context) throw
                         .unmarshall(context));
             } else if (name.equals("VideoMetadata")) {
                 getPersonTrackingResult.setVideoMetadata(VideoMetadataJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("NextToken")) {
                 getPersonTrackingResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Persons")) {
                 getPersonTrackingResult.setPersons(new ListUnmarshaller<PersonDetection>(
-                        PersonDetectionJsonUnmarshaller.getInstance()).unmarshall(context));
+                        PersonDetectionJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("BillableDurationSeconds")) {
                 getPersonTrackingResult.setBillableDurationSeconds(IntegerJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ErrorCode")) {
                 getPersonTrackingResult.setErrorCode(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Warnings")) {
                 getPersonTrackingResult.setWarnings(new ListUnmarshaller<Warning>(
-                        WarningJsonUnmarshaller.getInstance()).unmarshall(context));
+                        WarningJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/IdempotentParameterMismatchExceptionUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/IdempotentParameterMismatchExceptionUnmarshaller.java
index fa85f828dd..e2450fccff 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/IdempotentParameterMismatchExceptionUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/IdempotentParameterMismatchExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.rekognition.model.IdempotentParameterMismatchException;
 
 public class IdempotentParameterMismatchExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public IdempotentParameterMismatchException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        IdempotentParameterMismatchException idempotentParameterMismatchException = new IdempotentParameterMismatchException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                idempotentParameterMismatchException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return idempotentParameterMismatchException;
-    }
 }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ImageJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ImageJsonUnmarshaller.java
index fb3982aa7f..a2c9a91ab9 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ImageJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ImageJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Image unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Bytes")) {
-                image.setBytes(ByteBufferJsonUnmarshaller.getInstance().unmarshall(context));
+                image.setBytes(ByteBufferJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("S3Object")) {
-                image.setS3Object(S3ObjectJsonUnmarshaller.getInstance().unmarshall(context));
+                image.setS3Object(S3ObjectJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ImageQualityJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ImageQualityJsonUnmarshaller.java
index eb79714594..83e8eef327 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ImageQualityJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ImageQualityJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public ImageQuality unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Brightness")) {
-                imageQuality.setBrightness(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                imageQuality.setBrightness(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Sharpness")) {
-                imageQuality.setSharpness(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                imageQuality.setSharpness(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ImageTooLargeExceptionUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ImageTooLargeExceptionUnmarshaller.java
index eba22cbfb9..7bb12bce96 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ImageTooLargeExceptionUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ImageTooLargeExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.rekognition.model.ImageTooLargeException;
 
 public class ImageTooLargeExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ImageTooLargeException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ImageTooLargeException imageTooLargeException = new ImageTooLargeException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                imageTooLargeException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return imageTooLargeException;
-    }
 }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/IndexFacesResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/IndexFacesResultJsonUnmarshaller.java
index 131db933b6..57c84461e8 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/IndexFacesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/IndexFacesResultJsonUnmarshaller.java
@@ -35,7 +35,9 @@ public IndexFacesResult unmarshall(JsonUnmarshallerContext context) throws Excep
             String name = reader.nextName();
             if (name.equals("FaceRecords")) {
                 indexFacesResult.setFaceRecords(new ListUnmarshaller<FaceRecord>(
-                        FaceRecordJsonUnmarshaller.getInstance()).unmarshall(context));
+                        FaceRecordJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("OrientationCorrection")) {
                 indexFacesResult.setOrientationCorrection(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InternalServerErrorExceptionUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InternalServerErrorExceptionUnmarshaller.java
index 84e5f4650d..6d9a695f68 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InternalServerErrorExceptionUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InternalServerErrorExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.rekognition.model.InternalServerErrorException;
 
 public class InternalServerErrorExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InternalServerErrorException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InternalServerErrorException internalServerErrorException = new InternalServerErrorException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                internalServerErrorException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return internalServerErrorException;
-    }
 }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InvalidImageFormatExceptionUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InvalidImageFormatExceptionUnmarshaller.java
index 520a98e223..43eb60fc95 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InvalidImageFormatExceptionUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InvalidImageFormatExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.rekognition.model.InvalidImageFormatException;
 
 public class InvalidImageFormatExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidImageFormatException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidImageFormatException invalidImageFormatException = new InvalidImageFormatException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidImageFormatException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidImageFormatException;
-    }
 }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InvalidPaginationTokenExceptionUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InvalidPaginationTokenExceptionUnmarshaller.java
index 5fab61bce0..9847d4243a 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InvalidPaginationTokenExceptionUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InvalidPaginationTokenExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.rekognition.model.InvalidPaginationTokenException;
 
 public class InvalidPaginationTokenExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidPaginationTokenException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidPaginationTokenException invalidPaginationTokenException = new InvalidPaginationTokenException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidPaginationTokenException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidPaginationTokenException;
-    }
 }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InvalidParameterExceptionUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InvalidParameterExceptionUnmarshaller.java
index 061608b035..f5fa7cac2f 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InvalidParameterExceptionUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InvalidParameterExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.rekognition.model.InvalidParameterException;
 
 public class InvalidParameterExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidParameterException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidParameterException invalidParameterException = new InvalidParameterException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidParameterException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidParameterException;
-    }
 }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InvalidS3ObjectExceptionUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InvalidS3ObjectExceptionUnmarshaller.java
index da3d4b16c7..07540fedf6 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InvalidS3ObjectExceptionUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/InvalidS3ObjectExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.rekognition.model.InvalidS3ObjectException;
 
 public class InvalidS3ObjectExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidS3ObjectException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidS3ObjectException invalidS3ObjectException = new InvalidS3ObjectException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidS3ObjectException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidS3ObjectException;
-    }
 }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/KinesisDataStreamJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/KinesisDataStreamJsonUnmarshaller.java
index 1de0d37981..e5b9363eb7 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/KinesisDataStreamJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/KinesisDataStreamJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public KinesisDataStream unmarshall(JsonUnmarshallerContext context) throws Exce
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Arn")) {
-                kinesisDataStream.setArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                kinesisDataStream.setArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/KinesisVideoStreamJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/KinesisVideoStreamJsonUnmarshaller.java
index ab852b06fe..a1935bdb10 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/KinesisVideoStreamJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/KinesisVideoStreamJsonUnmarshaller.java
@@ -37,7 +37,8 @@ public KinesisVideoStream unmarshall(JsonUnmarshallerContext context) throws Exc
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Arn")) {
-                kinesisVideoStream.setArn(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                kinesisVideoStream.setArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/LabelDetectionJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/LabelDetectionJsonUnmarshaller.java
index 0203fc0034..f53d40e0b6 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/LabelDetectionJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/LabelDetectionJsonUnmarshaller.java
@@ -37,9 +37,11 @@ public LabelDetection unmarshall(JsonUnmarshallerContext context) throws Excepti
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Timestamp")) {
-                labelDetection.setTimestamp(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                labelDetection.setTimestamp(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Label")) {
-                labelDetection.setLabel(LabelJsonUnmarshaller.getInstance().unmarshall(context));
+                labelDetection.setLabel(LabelJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/LabelJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/LabelJsonUnmarshaller.java
index 995109b5de..0a14216986 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/LabelJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/LabelJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Label unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Name")) {
-                label.setName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                label.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Confidence")) {
-                label.setConfidence(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                label.setConfidence(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/LandmarkJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/LandmarkJsonUnmarshaller.java
index a6bbeaee8a..3697e563a1 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/LandmarkJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/LandmarkJsonUnmarshaller.java
@@ -36,11 +36,14 @@ public Landmark unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Type")) {
-                landmark.setType(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                landmark.setType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("X")) {
-                landmark.setX(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                landmark.setX(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Y")) {
-                landmark.setY(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                landmark.setY(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/LimitExceededExceptionUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/LimitExceededExceptionUnmarshaller.java
index fa45dd75c0..651f92a489 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/LimitExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/LimitExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.rekognition.model.LimitExceededException;
 
 public class LimitExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public LimitExceededException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        LimitExceededException limitExceededException = new LimitExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                limitExceededException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return limitExceededException;
-    }
 }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ListCollectionsResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ListCollectionsResultJsonUnmarshaller.java
index d739b708b5..d9a9273b85 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ListCollectionsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ListCollectionsResultJsonUnmarshaller.java
@@ -35,13 +35,17 @@ public ListCollectionsResult unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("CollectionIds")) {
                 listCollectionsResult.setCollectionIds(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextToken")) {
-                listCollectionsResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listCollectionsResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("FaceModelVersions")) {
                 listCollectionsResult.setFaceModelVersions(new ListUnmarshaller<String>(
-                        StringJsonUnmarshaller.getInstance()).unmarshall(context));
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ListFacesResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ListFacesResultJsonUnmarshaller.java
index 397c01b97b..58d0325180 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ListFacesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ListFacesResultJsonUnmarshaller.java
@@ -35,10 +35,12 @@ public ListFacesResult unmarshall(JsonUnmarshallerContext context) throws Except
             String name = reader.nextName();
             if (name.equals("Faces")) {
                 listFacesResult.setFaces(new ListUnmarshaller<Face>(FaceJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("NextToken")) {
-                listFacesResult.setNextToken(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listFacesResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("FaceModelVersion")) {
                 listFacesResult.setFaceModelVersion(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ListStreamProcessorsResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ListStreamProcessorsResultJsonUnmarshaller.java
index 0fba417319..458a73a324 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ListStreamProcessorsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ListStreamProcessorsResultJsonUnmarshaller.java
@@ -39,7 +39,9 @@ public ListStreamProcessorsResult unmarshall(JsonUnmarshallerContext context) th
             } else if (name.equals("StreamProcessors")) {
                 listStreamProcessorsResult
                         .setStreamProcessors(new ListUnmarshaller<StreamProcessor>(
-                                StreamProcessorJsonUnmarshaller.getInstance()).unmarshall(context));
+                                StreamProcessorJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ModerationLabelJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ModerationLabelJsonUnmarshaller.java
index 868e3679b7..6436d55950 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ModerationLabelJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ModerationLabelJsonUnmarshaller.java
@@ -37,13 +37,14 @@ public ModerationLabel unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Confidence")) {
-                moderationLabel.setConfidence(FloatJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                moderationLabel.setConfidence(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Name")) {
-                moderationLabel.setName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                moderationLabel.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ParentName")) {
-                moderationLabel.setParentName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                moderationLabel.setParentName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/MouthOpenJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/MouthOpenJsonUnmarshaller.java
index 54bdd99d45..0eac87152b 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/MouthOpenJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/MouthOpenJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public MouthOpen unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Value")) {
-                mouthOpen.setValue(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                mouthOpen.setValue(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Confidence")) {
-                mouthOpen.setConfidence(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                mouthOpen.setConfidence(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/MustacheJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/MustacheJsonUnmarshaller.java
index f04dc29098..4e69b9ccdb 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/MustacheJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/MustacheJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Mustache unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Value")) {
-                mustache.setValue(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                mustache.setValue(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Confidence")) {
-                mustache.setConfidence(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                mustache.setConfidence(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/NotificationChannelJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/NotificationChannelJsonUnmarshaller.java
index 29f4aeb9ea..0abde65104 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/NotificationChannelJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/NotificationChannelJsonUnmarshaller.java
@@ -37,11 +37,11 @@ public NotificationChannel unmarshall(JsonUnmarshallerContext context) throws Ex
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("SNSTopicArn")) {
-                notificationChannel.setSNSTopicArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                notificationChannel.setSNSTopicArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("RoleArn")) {
-                notificationChannel.setRoleArn(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                notificationChannel.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PersonDetailJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PersonDetailJsonUnmarshaller.java
index a3e95ff3b2..d460f38fbe 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PersonDetailJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PersonDetailJsonUnmarshaller.java
@@ -36,12 +36,14 @@ public PersonDetail unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Index")) {
-                personDetail.setIndex(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                personDetail.setIndex(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("BoundingBox")) {
-                personDetail.setBoundingBox(BoundingBoxJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                personDetail.setBoundingBox(BoundingBoxJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Face")) {
-                personDetail.setFace(FaceDetailJsonUnmarshaller.getInstance().unmarshall(context));
+                personDetail.setFace(FaceDetailJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PersonDetectionJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PersonDetectionJsonUnmarshaller.java
index 79139a4214..6c301416fe 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PersonDetectionJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PersonDetectionJsonUnmarshaller.java
@@ -37,11 +37,11 @@ public PersonDetection unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Timestamp")) {
-                personDetection
-                        .setTimestamp(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                personDetection.setTimestamp(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Person")) {
-                personDetection.setPerson(PersonDetailJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                personDetection.setPerson(PersonDetailJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PersonMatchJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PersonMatchJsonUnmarshaller.java
index 1dbc997e13..99fa829054 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PersonMatchJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PersonMatchJsonUnmarshaller.java
@@ -36,13 +36,16 @@ public PersonMatch unmarshall(JsonUnmarshallerContext context) throws Exception
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Timestamp")) {
-                personMatch.setTimestamp(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                personMatch.setTimestamp(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Person")) {
                 personMatch.setPerson(PersonDetailJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("FaceMatches")) {
                 personMatch.setFaceMatches(new ListUnmarshaller<FaceMatch>(
-                        FaceMatchJsonUnmarshaller.getInstance()).unmarshall(context));
+                        FaceMatchJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PointJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PointJsonUnmarshaller.java
index 3a864bca3e..439fc396da 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PointJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PointJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Point unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("X")) {
-                point.setX(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                point.setX(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Y")) {
-                point.setY(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                point.setY(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PoseJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PoseJsonUnmarshaller.java
index 9eccd30640..caba1a173b 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PoseJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/PoseJsonUnmarshaller.java
@@ -36,11 +36,14 @@ public Pose unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Roll")) {
-                pose.setRoll(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                pose.setRoll(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Yaw")) {
-                pose.setYaw(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                pose.setYaw(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Pitch")) {
-                pose.setPitch(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                pose.setPitch(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ProvisionedThroughputExceededExceptionUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ProvisionedThroughputExceededExceptionUnmarshaller.java
index dee2c4ef94..1f5650cec3 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ProvisionedThroughputExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ProvisionedThroughputExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.rekognition.model.ProvisionedThroughputExceededException;
 
 public class ProvisionedThroughputExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -43,32 +40,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ProvisionedThroughputExceededException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ProvisionedThroughputExceededException provisionedThroughputExceededException = new ProvisionedThroughputExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                provisionedThroughputExceededException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return provisionedThroughputExceededException;
-    }
 }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/RecognizeCelebritiesResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/RecognizeCelebritiesResultJsonUnmarshaller.java
index c62771d775..d8199c7449 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/RecognizeCelebritiesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/RecognizeCelebritiesResultJsonUnmarshaller.java
@@ -35,13 +35,18 @@ public RecognizeCelebritiesResult unmarshall(JsonUnmarshallerContext context) th
             String name = reader.nextName();
             if (name.equals("CelebrityFaces")) {
                 recognizeCelebritiesResult.setCelebrityFaces(new ListUnmarshaller<Celebrity>(
-                        CelebrityJsonUnmarshaller.getInstance()).unmarshall(context));
+                        CelebrityJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("UnrecognizedFaces")) {
                 recognizeCelebritiesResult.setUnrecognizedFaces(new ListUnmarshaller<ComparedFace>(
-                        ComparedFaceJsonUnmarshaller.getInstance()).unmarshall(context));
+                        ComparedFaceJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("OrientationCorrection")) {
                 recognizeCelebritiesResult.setOrientationCorrection(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ResourceAlreadyExistsExceptionUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ResourceAlreadyExistsExceptionUnmarshaller.java
index b14343081e..79bb841575 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ResourceAlreadyExistsExceptionUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ResourceAlreadyExistsExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.rekognition.model.ResourceAlreadyExistsException;
 
 public class ResourceAlreadyExistsExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceAlreadyExistsException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceAlreadyExistsException resourceAlreadyExistsException = new ResourceAlreadyExistsException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceAlreadyExistsException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceAlreadyExistsException;
-    }
 }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ResourceInUseExceptionUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ResourceInUseExceptionUnmarshaller.java
index af4282fec8..a8535ccbe1 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ResourceInUseExceptionUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ResourceInUseExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.rekognition.model.ResourceInUseException;
 
 public class ResourceInUseExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceInUseException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceInUseException resourceInUseException = new ResourceInUseException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceInUseException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceInUseException;
-    }
 }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ResourceNotFoundExceptionUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ResourceNotFoundExceptionUnmarshaller.java
index 39ebb7d67c..0701d6e80d 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ResourceNotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ResourceNotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.rekognition.model.ResourceNotFoundException;
 
 public class ResourceNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ResourceNotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ResourceNotFoundException resourceNotFoundException = new ResourceNotFoundException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                resourceNotFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return resourceNotFoundException;
-    }
 }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/S3ObjectJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/S3ObjectJsonUnmarshaller.java
index c64ab4d052..502094996d 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/S3ObjectJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/S3ObjectJsonUnmarshaller.java
@@ -36,11 +36,14 @@ public S3Object unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Bucket")) {
-                s3Object.setBucket(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                s3Object.setBucket(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Name")) {
-                s3Object.setName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                s3Object.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Version")) {
-                s3Object.setVersion(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                s3Object.setVersion(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SearchFacesByImageResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SearchFacesByImageResultJsonUnmarshaller.java
index 3c8d67593e..925ea567f0 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SearchFacesByImageResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SearchFacesByImageResultJsonUnmarshaller.java
@@ -35,13 +35,17 @@ public SearchFacesByImageResult unmarshall(JsonUnmarshallerContext context) thro
             String name = reader.nextName();
             if (name.equals("SearchedFaceBoundingBox")) {
                 searchFacesByImageResult.setSearchedFaceBoundingBox(BoundingBoxJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SearchedFaceConfidence")) {
                 searchFacesByImageResult.setSearchedFaceConfidence(FloatJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("FaceMatches")) {
                 searchFacesByImageResult.setFaceMatches(new ListUnmarshaller<FaceMatch>(
-                        FaceMatchJsonUnmarshaller.getInstance()).unmarshall(context));
+                        FaceMatchJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("FaceModelVersion")) {
                 searchFacesByImageResult.setFaceModelVersion(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SearchFacesResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SearchFacesResultJsonUnmarshaller.java
index 98fe510b0a..2e1ba580d3 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SearchFacesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SearchFacesResultJsonUnmarshaller.java
@@ -38,7 +38,9 @@ public SearchFacesResult unmarshall(JsonUnmarshallerContext context) throws Exce
                         .unmarshall(context));
             } else if (name.equals("FaceMatches")) {
                 searchFacesResult.setFaceMatches(new ListUnmarshaller<FaceMatch>(
-                        FaceMatchJsonUnmarshaller.getInstance()).unmarshall(context));
+                        FaceMatchJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else if (name.equals("FaceModelVersion")) {
                 searchFacesResult.setFaceModelVersion(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SectionJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SectionJsonUnmarshaller.java
index e5a8245236..bad6bb5a08 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SectionJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SectionJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Section unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("StartTimestamp")) {
-                section.setStartTimestamp(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                section.setStartTimestamp(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("EndTimestamp")) {
-                section.setEndTimestamp(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                section.setEndTimestamp(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SmileJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SmileJsonUnmarshaller.java
index c76ce8a852..2eac55108d 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SmileJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SmileJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Smile unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Value")) {
-                smile.setValue(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                smile.setValue(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Confidence")) {
-                smile.setConfidence(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                smile.setConfidence(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StartFaceDetectionResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StartFaceDetectionResultJsonUnmarshaller.java
index 9e6a8b923d..a64438d690 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StartFaceDetectionResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StartFaceDetectionResultJsonUnmarshaller.java
@@ -34,8 +34,8 @@ public StartFaceDetectionResult unmarshall(JsonUnmarshallerContext context) thro
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("JobId")) {
-                startFaceDetectionResult.setJobId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                startFaceDetectionResult.setJobId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StartFaceSearchResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StartFaceSearchResultJsonUnmarshaller.java
index f4a785ae35..751b9bc81f 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StartFaceSearchResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StartFaceSearchResultJsonUnmarshaller.java
@@ -34,8 +34,8 @@ public StartFaceSearchResult unmarshall(JsonUnmarshallerContext context) throws
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("JobId")) {
-                startFaceSearchResult.setJobId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                startFaceSearchResult.setJobId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StartLabelDetectionResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StartLabelDetectionResultJsonUnmarshaller.java
index 8842595617..c7502f1954 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StartLabelDetectionResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StartLabelDetectionResultJsonUnmarshaller.java
@@ -34,8 +34,8 @@ public StartLabelDetectionResult unmarshall(JsonUnmarshallerContext context) thr
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("JobId")) {
-                startLabelDetectionResult.setJobId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                startLabelDetectionResult.setJobId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StartPersonTrackingResultJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StartPersonTrackingResultJsonUnmarshaller.java
index e4d3bf2bef..528446c462 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StartPersonTrackingResultJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StartPersonTrackingResultJsonUnmarshaller.java
@@ -34,8 +34,8 @@ public StartPersonTrackingResult unmarshall(JsonUnmarshallerContext context) thr
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("JobId")) {
-                startPersonTrackingResult.setJobId(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                startPersonTrackingResult.setJobId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StreamProcessorInputJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StreamProcessorInputJsonUnmarshaller.java
index 457b50939b..9ba1168522 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StreamProcessorInputJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StreamProcessorInputJsonUnmarshaller.java
@@ -38,7 +38,8 @@ public StreamProcessorInput unmarshall(JsonUnmarshallerContext context) throws E
             String name = reader.nextName();
             if (name.equals("KinesisVideoStream")) {
                 streamProcessorInput.setKinesisVideoStream(KinesisVideoStreamJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StreamProcessorJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StreamProcessorJsonUnmarshaller.java
index 8362f1f7c3..100886dae5 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StreamProcessorJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StreamProcessorJsonUnmarshaller.java
@@ -37,9 +37,11 @@ public StreamProcessor unmarshall(JsonUnmarshallerContext context) throws Except
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Name")) {
-                streamProcessor.setName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                streamProcessor.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Status")) {
-                streamProcessor.setStatus(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                streamProcessor.setStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StreamProcessorOutputJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StreamProcessorOutputJsonUnmarshaller.java
index 0a6f6d82ae..27b4eb419b 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StreamProcessorOutputJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StreamProcessorOutputJsonUnmarshaller.java
@@ -38,7 +38,8 @@ public StreamProcessorOutput unmarshall(JsonUnmarshallerContext context) throws
             String name = reader.nextName();
             if (name.equals("KinesisDataStream")) {
                 streamProcessorOutput.setKinesisDataStream(KinesisDataStreamJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StreamProcessorSettingsJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StreamProcessorSettingsJsonUnmarshaller.java
index 0c8cf98409..281acb8312 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StreamProcessorSettingsJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/StreamProcessorSettingsJsonUnmarshaller.java
@@ -38,7 +38,8 @@ public StreamProcessorSettings unmarshall(JsonUnmarshallerContext context) throw
             String name = reader.nextName();
             if (name.equals("FaceSearch")) {
                 streamProcessorSettings.setFaceSearch(FaceSearchSettingsJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SunglassesJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SunglassesJsonUnmarshaller.java
index a5fedc6fe8..88fc4aaf9b 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SunglassesJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/SunglassesJsonUnmarshaller.java
@@ -36,9 +36,11 @@ public Sunglasses unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Value")) {
-                sunglasses.setValue(BooleanJsonUnmarshaller.getInstance().unmarshall(context));
+                sunglasses.setValue(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Confidence")) {
-                sunglasses.setConfidence(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                sunglasses.setConfidence(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/TextDetectionJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/TextDetectionJsonUnmarshaller.java
index e36562a335..623dc04af0 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/TextDetectionJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/TextDetectionJsonUnmarshaller.java
@@ -36,18 +36,20 @@ public TextDetection unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("DetectedText")) {
-                textDetection.setDetectedText(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                textDetection.setDetectedText(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Type")) {
-                textDetection.setType(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                textDetection.setType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Id")) {
-                textDetection.setId(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                textDetection.setId(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ParentId")) {
-                textDetection
-                        .setParentId(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                textDetection.setParentId(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Confidence")) {
-                textDetection
-                        .setConfidence(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                textDetection.setConfidence(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Geometry")) {
                 textDetection.setGeometry(GeometryJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ThrottlingExceptionUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ThrottlingExceptionUnmarshaller.java
index 39a3d3b01d..bdb509487d 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ThrottlingExceptionUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/ThrottlingExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.rekognition.model.ThrottlingException;
 
 public class ThrottlingExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ThrottlingException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ThrottlingException throttlingException = new ThrottlingException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                throttlingException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return throttlingException;
-    }
 }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/VideoJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/VideoJsonUnmarshaller.java
index c88911fedf..a7e7105555 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/VideoJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/VideoJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public Video unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("S3Object")) {
-                video.setS3Object(S3ObjectJsonUnmarshaller.getInstance().unmarshall(context));
+                video.setS3Object(S3ObjectJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/VideoMetadataJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/VideoMetadataJsonUnmarshaller.java
index a058415871..f8fea8bc2b 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/VideoMetadataJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/VideoMetadataJsonUnmarshaller.java
@@ -36,22 +36,26 @@ public VideoMetadata unmarshall(JsonUnmarshallerContext context) throws Exceptio
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Codec")) {
-                videoMetadata.setCodec(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                videoMetadata.setCodec(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("DurationMillis")) {
-                videoMetadata.setDurationMillis(LongJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                videoMetadata.setDurationMillis(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Format")) {
-                videoMetadata.setFormat(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                videoMetadata.setFormat(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("FrameRate")) {
-                videoMetadata.setFrameRate(FloatJsonUnmarshaller.getInstance().unmarshall(context));
+                videoMetadata.setFrameRate(FloatJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("FrameHeight")) {
-                videoMetadata
-                        .setFrameHeight(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                videoMetadata.setFrameHeight(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("FrameWidth")) {
-                videoMetadata.setFrameWidth(LongJsonUnmarshaller.getInstance().unmarshall(context));
+                videoMetadata.setFrameWidth(LongJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Rotation")) {
-                videoMetadata
-                        .setRotation(IntegerJsonUnmarshaller.getInstance().unmarshall(context));
+                videoMetadata.setRotation(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/VideoTooLargeExceptionUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/VideoTooLargeExceptionUnmarshaller.java
index 3ab98c4a5b..26924d3407 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/VideoTooLargeExceptionUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/VideoTooLargeExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.rekognition.model.VideoTooLargeException;
 
 public class VideoTooLargeExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public VideoTooLargeException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        VideoTooLargeException videoTooLargeException = new VideoTooLargeException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                videoTooLargeException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return videoTooLargeException;
-    }
 }
diff --git a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/WarningJsonUnmarshaller.java b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/WarningJsonUnmarshaller.java
index 315fda8444..d94de84906 100644
--- a/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/WarningJsonUnmarshaller.java
+++ b/aws-android-sdk-rekognition/src/main/java/com/amazonaws/services/rekognition/model/transform/WarningJsonUnmarshaller.java
@@ -36,12 +36,16 @@ public Warning unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("ErrorCode")) {
-                warning.setErrorCode(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                warning.setErrorCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Message")) {
-                warning.setMessage(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                warning.setMessage(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Sections")) {
                 warning.setSections(new ListUnmarshaller<Section>(SectionJsonUnmarshaller
-                        .getInstance()).unmarshall(context));
+                        .getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-s3/pom.xml b/aws-android-sdk-s3/pom.xml
index 3ded70dbf1..8ef78adead 100644
--- a/aws-android-sdk-s3/pom.xml
+++ b/aws-android-sdk-s3/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,13 +20,13 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-kms</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/model/Region.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/model/Region.java
index 30be1085bb..f8d1056a34 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/model/Region.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/model/Region.java
@@ -156,6 +156,19 @@
      */
     EU_Frankfurt("eu-central-1"),
 
+    /**
+     * The EU (Stockholm) Amazon S3 Region. This region uses Amazon S3 servers
+     * located in Stockholm.
+     * <p>
+     * Note that to access S3 buckets in Stockholm you must explicitly set the
+     * region on the AWS S3 Client you are working with. In Amazon S3, the EU
+     * (Stockholm) Region provides read-after-write consistency for PUTS of new
+     * objects in Amazon S3 buckets and eventual consistency for overwrite PUTS
+     * and DELETES.
+     * </p>
+     */
+    EU_Stockholm("eu-north-1"),
+
     /**
      * The Asia Pacific (Mumbai) Region. This region uses Amazon S3 servers
      * located in Singapore.
diff --git a/aws-android-sdk-sdb/pom.xml b/aws-android-sdk-sdb/pom.xml
index c8761f4505..361a8b8db8 100644
--- a/aws-android-sdk-sdb/pom.xml
+++ b/aws-android-sdk-sdb/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
         <dependency>
         <groupId>junit</groupId>
diff --git a/aws-android-sdk-ses/pom.xml b/aws-android-sdk-ses/pom.xml
index 2d7cacb2e4..c397bff152 100644
--- a/aws-android-sdk-ses/pom.xml
+++ b/aws-android-sdk-ses/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-sns/pom.xml b/aws-android-sdk-sns/pom.xml
index 626f27b85c..5ed719a50a 100644
--- a/aws-android-sdk-sns/pom.xml
+++ b/aws-android-sdk-sns/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,13 +20,13 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-sqs</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-sqs/pom.xml b/aws-android-sdk-sqs/pom.xml
index 01ff1bbb73..dc86d35927 100644
--- a/aws-android-sdk-sqs/pom.xml
+++ b/aws-android-sdk-sqs/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-transcribe/pom.xml b/aws-android-sdk-transcribe/pom.xml
index 1a16bad31f..fd18827441 100644
--- a/aws-android-sdk-transcribe/pom.xml
+++ b/aws-android-sdk-transcribe/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribe.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribe.java
index cf9565922b..420138db50 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribe.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribe.java
@@ -114,7 +114,7 @@ CreateVocabularyResult createVocabulary(CreateVocabularyRequest createVocabulary
 
     /**
      * <p>
-     * Deletes a previously submitted transcription job as well as any other
+     * Deletes a previously submitted transcription job along with any other
      * generated results such as the transcription, models, and so on.
      * </p>
      * 
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeAsync.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeAsync.java
index d3c0e2c9c9..9d0d963370 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeAsync.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeAsync.java
@@ -94,7 +94,7 @@
 
     /**
      * <p>
-     * Deletes a previously submitted transcription job as well as any other
+     * Deletes a previously submitted transcription job along with any other
      * generated results such as the transcription, models, and so on.
      * </p>
      * 
@@ -119,7 +119,7 @@
 
     /**
      * <p>
-     * Deletes a previously submitted transcription job as well as any other
+     * Deletes a previously submitted transcription job along with any other
      * generated results such as the transcription, models, and so on.
      * </p>
      * 
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeAsyncClient.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeAsyncClient.java
index 4d5269a05c..08ee2780e1 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeAsyncClient.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeAsyncClient.java
@@ -338,7 +338,7 @@ public CreateVocabularyResult call() throws Exception {
 
     /**
      * <p>
-     * Deletes a previously submitted transcription job as well as any other
+     * Deletes a previously submitted transcription job along with any other
      * generated results such as the transcription, models, and so on.
      * </p>
      * 
@@ -370,7 +370,7 @@ public Void call() throws Exception {
 
     /**
      * <p>
-     * Deletes a previously submitted transcription job as well as any other
+     * Deletes a previously submitted transcription job along with any other
      * generated results such as the transcription, models, and so on.
      * </p>
      * 
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeClient.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeClient.java
index 375d0ff906..ca8f42995d 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeClient.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeClient.java
@@ -337,7 +337,7 @@ public CreateVocabularyResult createVocabulary(CreateVocabularyRequest createVoc
 
     /**
      * <p>
-     * Deletes a previously submitted transcription job as well as any other
+     * Deletes a previously submitted transcription job along with any other
      * generated results such as the transcription, models, and so on.
      * </p>
      * 
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/BadRequestException.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/BadRequestException.java
index 0a3c4f8000..92ed83068f 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/BadRequestException.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/BadRequestException.java
@@ -20,7 +20,7 @@
 /**
  * <p>
  * Your request didn't pass one or more validation tests. For example, if the
- * transcription you're trying to delete doesn't exist of if it is in a
+ * transcription you're trying to delete doesn't exist or if it is in a
  * non-terminal state (for example, it's "in progress"). See the exception
  * <code>Message</code> field for more information.
  * </p>
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/CreateVocabularyRequest.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/CreateVocabularyRequest.java
index 8fb7bad740..0877d6f19b 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/CreateVocabularyRequest.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/CreateVocabularyRequest.java
@@ -47,7 +47,8 @@
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      */
     private String languageCode;
 
@@ -127,7 +128,8 @@ public CreateVocabularyRequest withVocabularyName(String vocabularyName) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @return <p>
      *         The language code of the vocabulary entries.
@@ -144,7 +146,8 @@ public String getLanguageCode() {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -164,7 +167,8 @@ public void setLanguageCode(String languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -184,7 +188,8 @@ public CreateVocabularyRequest withLanguageCode(String languageCode) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -204,7 +209,8 @@ public void setLanguageCode(LanguageCode languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/CreateVocabularyResult.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/CreateVocabularyResult.java
index a5b915beb8..1615cbcb06 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/CreateVocabularyResult.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/CreateVocabularyResult.java
@@ -35,7 +35,8 @@
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      */
     private String languageCode;
 
@@ -130,7 +131,8 @@ public CreateVocabularyResult withVocabularyName(String vocabularyName) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @return <p>
      *         The language code of the vocabulary entries.
@@ -147,7 +149,8 @@ public String getLanguageCode() {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -167,7 +170,8 @@ public void setLanguageCode(String languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -187,7 +191,8 @@ public CreateVocabularyResult withLanguageCode(String languageCode) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -207,7 +212,8 @@ public void setLanguageCode(LanguageCode languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/DeleteTranscriptionJobRequest.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/DeleteTranscriptionJobRequest.java
index bed7adfa88..23630c9f2d 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/DeleteTranscriptionJobRequest.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/DeleteTranscriptionJobRequest.java
@@ -21,7 +21,7 @@
 
 /**
  * <p>
- * Deletes a previously submitted transcription job as well as any other
+ * Deletes a previously submitted transcription job along with any other
  * generated results such as the transcription, models, and so on.
  * </p>
  */
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/GetVocabularyResult.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/GetVocabularyResult.java
index 07f3fb3be1..9823fcdb7f 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/GetVocabularyResult.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/GetVocabularyResult.java
@@ -35,7 +35,8 @@
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      */
     private String languageCode;
 
@@ -138,7 +139,8 @@ public GetVocabularyResult withVocabularyName(String vocabularyName) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @return <p>
      *         The language code of the vocabulary entries.
@@ -155,7 +157,8 @@ public String getLanguageCode() {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -175,7 +178,8 @@ public void setLanguageCode(String languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -195,7 +199,8 @@ public GetVocabularyResult withLanguageCode(String languageCode) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -215,7 +220,8 @@ public void setLanguageCode(LanguageCode languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/LanguageCode.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/LanguageCode.java
index c2d955572d..781e220831 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/LanguageCode.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/LanguageCode.java
@@ -27,7 +27,10 @@
     EsUS("es-US"),
     EnAU("en-AU"),
     FrCA("fr-CA"),
-    EnUK("en-UK");
+    EnGB("en-GB"),
+    DeDE("de-DE"),
+    PtBR("pt-BR"),
+    FrFR("fr-FR");
 
     private String value;
 
@@ -47,7 +50,10 @@ public String toString() {
         enumMap.put("es-US", EsUS);
         enumMap.put("en-AU", EnAU);
         enumMap.put("fr-CA", FrCA);
-        enumMap.put("en-UK", EnUK);
+        enumMap.put("en-GB", EnGB);
+        enumMap.put("de-DE", DeDE);
+        enumMap.put("pt-BR", PtBR);
+        enumMap.put("fr-FR", FrFR);
     }
 
     /**
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/StartTranscriptionJobRequest.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/StartTranscriptionJobRequest.java
index 2e58694b4f..416b52d351 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/StartTranscriptionJobRequest.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/StartTranscriptionJobRequest.java
@@ -29,8 +29,9 @@
 public class StartTranscriptionJobRequest extends AmazonWebServiceRequest implements Serializable {
     /**
      * <p>
-     * The name of the job. You can't use the strings "." or ".." in the job
-     * name. The name must be unique within an AWS account.
+     * The name of the job. Note that you can't use the strings "." or ".." by
+     * themselves as the job name. The name must also be unique within an AWS
+     * account.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -45,7 +46,8 @@
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      */
     private String languageCode;
 
@@ -113,8 +115,9 @@
 
     /**
      * <p>
-     * The name of the job. You can't use the strings "." or ".." in the job
-     * name. The name must be unique within an AWS account.
+     * The name of the job. Note that you can't use the strings "." or ".." by
+     * themselves as the job name. The name must also be unique within an AWS
+     * account.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -122,8 +125,9 @@
      * <b>Pattern: </b>^[0-9a-zA-Z._-]+<br/>
      *
      * @return <p>
-     *         The name of the job. You can't use the strings "." or ".." in the
-     *         job name. The name must be unique within an AWS account.
+     *         The name of the job. Note that you can't use the strings "." or
+     *         ".." by themselves as the job name. The name must also be unique
+     *         within an AWS account.
      *         </p>
      */
     public String getTranscriptionJobName() {
@@ -132,8 +136,9 @@ public String getTranscriptionJobName() {
 
     /**
      * <p>
-     * The name of the job. You can't use the strings "." or ".." in the job
-     * name. The name must be unique within an AWS account.
+     * The name of the job. Note that you can't use the strings "." or ".." by
+     * themselves as the job name. The name must also be unique within an AWS
+     * account.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -141,8 +146,9 @@ public String getTranscriptionJobName() {
      * <b>Pattern: </b>^[0-9a-zA-Z._-]+<br/>
      *
      * @param transcriptionJobName <p>
-     *            The name of the job. You can't use the strings "." or ".." in
-     *            the job name. The name must be unique within an AWS account.
+     *            The name of the job. Note that you can't use the strings "."
+     *            or ".." by themselves as the job name. The name must also be
+     *            unique within an AWS account.
      *            </p>
      */
     public void setTranscriptionJobName(String transcriptionJobName) {
@@ -151,8 +157,9 @@ public void setTranscriptionJobName(String transcriptionJobName) {
 
     /**
      * <p>
-     * The name of the job. You can't use the strings "." or ".." in the job
-     * name. The name must be unique within an AWS account.
+     * The name of the job. Note that you can't use the strings "." or ".." by
+     * themselves as the job name. The name must also be unique within an AWS
+     * account.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -163,8 +170,9 @@ public void setTranscriptionJobName(String transcriptionJobName) {
      * <b>Pattern: </b>^[0-9a-zA-Z._-]+<br/>
      *
      * @param transcriptionJobName <p>
-     *            The name of the job. You can't use the strings "." or ".." in
-     *            the job name. The name must be unique within an AWS account.
+     *            The name of the job. Note that you can't use the strings "."
+     *            or ".." by themselves as the job name. The name must also be
+     *            unique within an AWS account.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -180,7 +188,8 @@ public StartTranscriptionJobRequest withTranscriptionJobName(String transcriptio
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @return <p>
      *         The language code for the language used in the input media file.
@@ -197,7 +206,8 @@ public String getLanguageCode() {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code for the language used in the input media
@@ -218,7 +228,8 @@ public void setLanguageCode(String languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code for the language used in the input media
@@ -239,7 +250,8 @@ public StartTranscriptionJobRequest withLanguageCode(String languageCode) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code for the language used in the input media
@@ -260,7 +272,8 @@ public void setLanguageCode(LanguageCode languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code for the language used in the input media
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/TranscriptionJob.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/TranscriptionJob.java
index c52e330812..fd4756d38d 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/TranscriptionJob.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/TranscriptionJob.java
@@ -53,7 +53,8 @@
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      */
     private String languageCode;
 
@@ -283,7 +284,8 @@ public TranscriptionJob withTranscriptionJobStatus(TranscriptionJobStatus transc
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @return <p>
      *         The language code for the input speech.
@@ -300,7 +302,8 @@ public String getLanguageCode() {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code for the input speech.
@@ -320,7 +323,8 @@ public void setLanguageCode(String languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code for the input speech.
@@ -340,7 +344,8 @@ public TranscriptionJob withLanguageCode(String languageCode) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code for the input speech.
@@ -360,7 +365,8 @@ public void setLanguageCode(LanguageCode languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code for the input speech.
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/TranscriptionJobSummary.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/TranscriptionJobSummary.java
index 5fee5939b9..bdc137366d 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/TranscriptionJobSummary.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/TranscriptionJobSummary.java
@@ -56,7 +56,8 @@
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      */
     private String languageCode;
 
@@ -255,7 +256,8 @@ public TranscriptionJobSummary withCompletionTime(java.util.Date completionTime)
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @return <p>
      *         The language code for the input speech.
@@ -272,7 +274,8 @@ public String getLanguageCode() {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code for the input speech.
@@ -292,7 +295,8 @@ public void setLanguageCode(String languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code for the input speech.
@@ -312,7 +316,8 @@ public TranscriptionJobSummary withLanguageCode(String languageCode) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code for the input speech.
@@ -332,7 +337,8 @@ public void setLanguageCode(LanguageCode languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code for the input speech.
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/UpdateVocabularyRequest.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/UpdateVocabularyRequest.java
index 674a730d54..082d97f7f5 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/UpdateVocabularyRequest.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/UpdateVocabularyRequest.java
@@ -47,7 +47,8 @@
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      */
     private String languageCode;
 
@@ -123,7 +124,8 @@ public UpdateVocabularyRequest withVocabularyName(String vocabularyName) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @return <p>
      *         The language code of the vocabulary entries.
@@ -140,7 +142,8 @@ public String getLanguageCode() {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -160,7 +163,8 @@ public void setLanguageCode(String languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -180,7 +184,8 @@ public UpdateVocabularyRequest withLanguageCode(String languageCode) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -200,7 +205,8 @@ public void setLanguageCode(LanguageCode languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/UpdateVocabularyResult.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/UpdateVocabularyResult.java
index 66e4ff075b..8dd0ad9d96 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/UpdateVocabularyResult.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/UpdateVocabularyResult.java
@@ -35,7 +35,8 @@
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      */
     private String languageCode;
 
@@ -122,7 +123,8 @@ public UpdateVocabularyResult withVocabularyName(String vocabularyName) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @return <p>
      *         The language code of the vocabulary entries.
@@ -139,7 +141,8 @@ public String getLanguageCode() {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -159,7 +162,8 @@ public void setLanguageCode(String languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -179,7 +183,8 @@ public UpdateVocabularyResult withLanguageCode(String languageCode) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -199,7 +204,8 @@ public void setLanguageCode(LanguageCode languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/VocabularyInfo.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/VocabularyInfo.java
index 4035147495..e60a8c9fde 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/VocabularyInfo.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/VocabularyInfo.java
@@ -43,7 +43,8 @@
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      */
     private String languageCode;
 
@@ -129,7 +130,8 @@ public VocabularyInfo withVocabularyName(String vocabularyName) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @return <p>
      *         The language code of the vocabulary entries.
@@ -146,7 +148,8 @@ public String getLanguageCode() {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -166,7 +169,8 @@ public void setLanguageCode(String languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -186,7 +190,8 @@ public VocabularyInfo withLanguageCode(String languageCode) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -206,7 +211,8 @@ public void setLanguageCode(LanguageCode languageCode) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-UK
+     * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
+     * fr-FR
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/BadRequestExceptionUnmarshaller.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/BadRequestExceptionUnmarshaller.java
index 3426da896c..c85d504d1a 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/BadRequestExceptionUnmarshaller.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/BadRequestExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.transcribe.model.BadRequestException;
 
 public class BadRequestExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public BadRequestException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        BadRequestException badRequestException = new BadRequestException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                badRequestException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return badRequestException;
-    }
 }
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/ConflictExceptionUnmarshaller.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/ConflictExceptionUnmarshaller.java
index 43aee991c8..212b2a6466 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/ConflictExceptionUnmarshaller.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/ConflictExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.transcribe.model.ConflictException;
 
 public class ConflictExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ConflictException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ConflictException conflictException = new ConflictException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                conflictException.setErrorMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return conflictException;
-    }
 }
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/GetTranscriptionJobResultJsonUnmarshaller.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/GetTranscriptionJobResultJsonUnmarshaller.java
index a8905abdb9..f46a339969 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/GetTranscriptionJobResultJsonUnmarshaller.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/GetTranscriptionJobResultJsonUnmarshaller.java
@@ -35,7 +35,8 @@ public GetTranscriptionJobResult unmarshall(JsonUnmarshallerContext context) thr
             String name = reader.nextName();
             if (name.equals("TranscriptionJob")) {
                 getTranscriptionJobResult.setTranscriptionJob(TranscriptionJobJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/GetVocabularyResultJsonUnmarshaller.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/GetVocabularyResultJsonUnmarshaller.java
index f893959c36..ca761ea423 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/GetVocabularyResultJsonUnmarshaller.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/GetVocabularyResultJsonUnmarshaller.java
@@ -49,8 +49,8 @@ public GetVocabularyResult unmarshall(JsonUnmarshallerContext context) throws Ex
                 getVocabularyResult.setFailureReason(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("DownloadUri")) {
-                getVocabularyResult.setDownloadUri(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                getVocabularyResult.setDownloadUri(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/InternalFailureExceptionUnmarshaller.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/InternalFailureExceptionUnmarshaller.java
index e035dd3cf2..984acd8fa8 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/InternalFailureExceptionUnmarshaller.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/InternalFailureExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.transcribe.model.InternalFailureException;
 
 public class InternalFailureExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InternalFailureException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InternalFailureException internalFailureException = new InternalFailureException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                internalFailureException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return internalFailureException;
-    }
 }
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/LimitExceededExceptionUnmarshaller.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/LimitExceededExceptionUnmarshaller.java
index 7d373f8037..455fa408ca 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/LimitExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/LimitExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.transcribe.model.LimitExceededException;
 
 public class LimitExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public LimitExceededException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        LimitExceededException limitExceededException = new LimitExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                limitExceededException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return limitExceededException;
-    }
 }
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/ListTranscriptionJobsResultJsonUnmarshaller.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/ListTranscriptionJobsResultJsonUnmarshaller.java
index 5d7ce704ea..06a01fdeb8 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/ListTranscriptionJobsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/ListTranscriptionJobsResultJsonUnmarshaller.java
@@ -42,7 +42,8 @@ public ListTranscriptionJobsResult unmarshall(JsonUnmarshallerContext context) t
             } else if (name.equals("TranscriptionJobSummaries")) {
                 listTranscriptionJobsResult
                         .setTranscriptionJobSummaries(new ListUnmarshaller<TranscriptionJobSummary>(
-                                TranscriptionJobSummaryJsonUnmarshaller.getInstance())
+                                TranscriptionJobSummaryJsonUnmarshaller.getInstance()
+                        )
                                 .unmarshall(context));
             } else {
                 reader.skipValue();
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/ListVocabulariesResultJsonUnmarshaller.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/ListVocabulariesResultJsonUnmarshaller.java
index 385b91c4d3..7cc1257c64 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/ListVocabulariesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/ListVocabulariesResultJsonUnmarshaller.java
@@ -34,14 +34,16 @@ public ListVocabulariesResult unmarshall(JsonUnmarshallerContext context) throws
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("Status")) {
-                listVocabulariesResult.setStatus(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                listVocabulariesResult.setStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("NextToken")) {
                 listVocabulariesResult.setNextToken(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Vocabularies")) {
                 listVocabulariesResult.setVocabularies(new ListUnmarshaller<VocabularyInfo>(
-                        VocabularyInfoJsonUnmarshaller.getInstance()).unmarshall(context));
+                        VocabularyInfoJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/MediaJsonUnmarshaller.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/MediaJsonUnmarshaller.java
index 4cf4a98833..1eec6aa92c 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/MediaJsonUnmarshaller.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/MediaJsonUnmarshaller.java
@@ -36,7 +36,8 @@ public Media unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("MediaFileUri")) {
-                media.setMediaFileUri(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                media.setMediaFileUri(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/NotFoundExceptionUnmarshaller.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/NotFoundExceptionUnmarshaller.java
index 2421b4c9a1..66f46815cb 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/NotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/NotFoundExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.transcribe.model.NotFoundException;
 
 public class NotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,30 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public NotFoundException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        NotFoundException notFoundException = new NotFoundException("No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                notFoundException.setErrorMessage(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return notFoundException;
-    }
 }
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/SettingsJsonUnmarshaller.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/SettingsJsonUnmarshaller.java
index cb056f5e10..e7890f716e 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/SettingsJsonUnmarshaller.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/SettingsJsonUnmarshaller.java
@@ -36,16 +36,17 @@ public Settings unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("VocabularyName")) {
-                settings.setVocabularyName(StringJsonUnmarshaller.getInstance().unmarshall(context));
+                settings.setVocabularyName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ShowSpeakerLabels")) {
-                settings.setShowSpeakerLabels(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                settings.setShowSpeakerLabels(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("MaxSpeakerLabels")) {
-                settings.setMaxSpeakerLabels(IntegerJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                settings.setMaxSpeakerLabels(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ChannelIdentification")) {
-                settings.setChannelIdentification(BooleanJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                settings.setChannelIdentification(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/StartTranscriptionJobResultJsonUnmarshaller.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/StartTranscriptionJobResultJsonUnmarshaller.java
index 6dab877247..143c70a338 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/StartTranscriptionJobResultJsonUnmarshaller.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/StartTranscriptionJobResultJsonUnmarshaller.java
@@ -35,7 +35,8 @@ public StartTranscriptionJobResult unmarshall(JsonUnmarshallerContext context) t
             String name = reader.nextName();
             if (name.equals("TranscriptionJob")) {
                 startTranscriptionJobResult.setTranscriptionJob(TranscriptionJobJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/TranscriptJsonUnmarshaller.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/TranscriptJsonUnmarshaller.java
index a37c050cba..48c685ebcc 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/TranscriptJsonUnmarshaller.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/TranscriptJsonUnmarshaller.java
@@ -36,8 +36,8 @@ public Transcript unmarshall(JsonUnmarshallerContext context) throws Exception {
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("TranscriptFileUri")) {
-                transcript.setTranscriptFileUri(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                transcript.setTranscriptFileUri(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/TranscriptionJobJsonUnmarshaller.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/TranscriptionJobJsonUnmarshaller.java
index d3002ec813..80455f0d3e 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/TranscriptionJobJsonUnmarshaller.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/TranscriptionJobJsonUnmarshaller.java
@@ -43,31 +43,32 @@ public TranscriptionJob unmarshall(JsonUnmarshallerContext context) throws Excep
                 transcriptionJob.setTranscriptionJobStatus(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("LanguageCode")) {
-                transcriptionJob.setLanguageCode(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                transcriptionJob.setLanguageCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("MediaSampleRateHertz")) {
                 transcriptionJob.setMediaSampleRateHertz(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("MediaFormat")) {
-                transcriptionJob.setMediaFormat(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                transcriptionJob.setMediaFormat(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Media")) {
-                transcriptionJob.setMedia(MediaJsonUnmarshaller.getInstance().unmarshall(context));
+                transcriptionJob.setMedia(MediaJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Transcript")) {
-                transcriptionJob.setTranscript(TranscriptJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                transcriptionJob.setTranscript(TranscriptJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CreationTime")) {
-                transcriptionJob.setCreationTime(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                transcriptionJob.setCreationTime(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CompletionTime")) {
-                transcriptionJob.setCompletionTime(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                transcriptionJob.setCompletionTime(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("FailureReason")) {
-                transcriptionJob.setFailureReason(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                transcriptionJob.setFailureReason(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Settings")) {
-                transcriptionJob.setSettings(SettingsJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                transcriptionJob.setSettings(SettingsJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/TranscriptionJobSummaryJsonUnmarshaller.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/TranscriptionJobSummaryJsonUnmarshaller.java
index 69b07aeff7..c32270519f 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/TranscriptionJobSummaryJsonUnmarshaller.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/TranscriptionJobSummaryJsonUnmarshaller.java
@@ -38,7 +38,8 @@ public TranscriptionJobSummary unmarshall(JsonUnmarshallerContext context) throw
             String name = reader.nextName();
             if (name.equals("TranscriptionJobName")) {
                 transcriptionJobSummary.setTranscriptionJobName(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("CreationTime")) {
                 transcriptionJobSummary.setCreationTime(DateJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -50,7 +51,8 @@ public TranscriptionJobSummary unmarshall(JsonUnmarshallerContext context) throw
                         .unmarshall(context));
             } else if (name.equals("TranscriptionJobStatus")) {
                 transcriptionJobSummary.setTranscriptionJobStatus(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("FailureReason")) {
                 transcriptionJobSummary.setFailureReason(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/VocabularyInfoJsonUnmarshaller.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/VocabularyInfoJsonUnmarshaller.java
index 537212427e..5476080db4 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/VocabularyInfoJsonUnmarshaller.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/transform/VocabularyInfoJsonUnmarshaller.java
@@ -37,17 +37,17 @@ public VocabularyInfo unmarshall(JsonUnmarshallerContext context) throws Excepti
         while (reader.hasNext()) {
             String name = reader.nextName();
             if (name.equals("VocabularyName")) {
-                vocabularyInfo.setVocabularyName(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                vocabularyInfo.setVocabularyName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LanguageCode")) {
-                vocabularyInfo.setLanguageCode(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                vocabularyInfo.setLanguageCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("LastModifiedTime")) {
-                vocabularyInfo.setLastModifiedTime(DateJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                vocabularyInfo.setLastModifiedTime(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("VocabularyState")) {
-                vocabularyInfo.setVocabularyState(StringJsonUnmarshaller.getInstance().unmarshall(
-                        context));
+                vocabularyInfo.setVocabularyState(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-translate/pom.xml b/aws-android-sdk-translate/pom.xml
index bb8d281652..8d72ed5ef2 100644
--- a/aws-android-sdk-translate/pom.xml
+++ b/aws-android-sdk-translate/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.5</version>
+    <version>2.9.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.5</version>
+      <version>2.9.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/AmazonTranslate.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/AmazonTranslate.java
index 776470c444..0f187ccc7d 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/AmazonTranslate.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/AmazonTranslate.java
@@ -22,8 +22,8 @@
 /**
  * Interface for accessing Amazon Translate
  * <p>
- * Provides translation between English and one of six languages, or between one
- * of the six languages and English.
+ * Provides translation between one source language and another of the same set
+ * of languages.
  * </p>
  **/
 public interface AmazonTranslate {
@@ -88,9 +88,111 @@
 
     /**
      * <p>
-     * Translates input text from the source language to the target language.
-     * You can translate between English (en) and one of the following
-     * languages, or between one of the following languages and English.
+     * A synchronous action that deletes a custom terminology.
+     * </p>
+     * 
+     * @param deleteTerminologyRequest
+     * @throws ResourceNotFoundException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    void deleteTerminology(DeleteTerminologyRequest deleteTerminologyRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Retrieves a custom terminology.
+     * </p>
+     * 
+     * @param getTerminologyRequest
+     * @return getTerminologyResult The response from the GetTerminology service
+     *         method, as returned by Amazon Translate.
+     * @throws ResourceNotFoundException
+     * @throws InvalidParameterValueException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    GetTerminologyResult getTerminology(GetTerminologyRequest getTerminologyRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Creates or updates a custom terminology, depending on whether or not one
+     * already exists for the given terminology name. Importing a terminology
+     * with the same name as an existing one will merge the terminologies based
+     * on the chosen merge strategy. Currently, the only supported merge
+     * strategy is OVERWRITE, and so the imported terminology will overwrite an
+     * existing terminology of the same name.
+     * </p>
+     * <p>
+     * If you import a terminology that overwrites an existing one, the new
+     * terminology take up to 10 minutes to fully propagate and be available for
+     * use in a translation due to cache policies with the DataPlane service
+     * that performs the translations.
+     * </p>
+     * 
+     * @param importTerminologyRequest
+     * @return importTerminologyResult The response from the ImportTerminology
+     *         service method, as returned by Amazon Translate.
+     * @throws InvalidParameterValueException
+     * @throws LimitExceededException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    ImportTerminologyResult importTerminology(ImportTerminologyRequest importTerminologyRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Provides a list of custom terminologies associated with your account.
+     * </p>
+     * 
+     * @param listTerminologiesRequest
+     * @return listTerminologiesResult The response from the ListTerminologies
+     *         service method, as returned by Amazon Translate.
+     * @throws InvalidParameterValueException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    ListTerminologiesResult listTerminologies(ListTerminologiesRequest listTerminologiesRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Translates input text from the source language to the target language. It
+     * is not necessary to use English (en) as either the source or the target
+     * language but not all language combinations are supported by Amazon
+     * Translate. For more information, see <a
+     * href="http://docs.aws.amazon.com/translate/latest/dg/pairs.html"
+     * >Supported Language Pairs</a>.
      * </p>
      * <ul>
      * <li>
@@ -105,6 +207,36 @@
      * </li>
      * <li>
      * <p>
+     * Chinese (Traditional) (zh-TW)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Czech (cs)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Danish (da)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Dutch (nl)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * English (en)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Finnish (fi)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * French (fr)
      * </p>
      * </li>
@@ -115,14 +247,59 @@
      * </li>
      * <li>
      * <p>
+     * Hebrew (he)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Indonesian (id)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Italian (it)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Japanese (ja)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Korean (ko)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Polish (pl)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * Portuguese (pt)
      * </p>
      * </li>
      * <li>
      * <p>
+     * Russian (ru)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * Spanish (es)
      * </p>
      * </li>
+     * <li>
+     * <p>
+     * Swedish (sv)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Turkish (tr)
+     * </p>
+     * </li>
      * </ul>
      * <p>
      * To have Amazon Translate determine the source language of your text, you
@@ -139,6 +316,7 @@
      * @throws TooManyRequestsException
      * @throws UnsupportedLanguagePairException
      * @throws DetectedLanguageLowConfidenceException
+     * @throws ResourceNotFoundException
      * @throws InternalServerException
      * @throws ServiceUnavailableException
      * @throws AmazonClientException If any internal errors are encountered
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/AmazonTranslateAsync.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/AmazonTranslateAsync.java
index 54e8076959..f50f2a5ffe 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/AmazonTranslateAsync.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/AmazonTranslateAsync.java
@@ -25,16 +25,251 @@
 /**
  * Interface for accessing Amazon Translate asynchronously.
  * <p>
- * Provides translation between English and one of six languages, or between one
- * of the six languages and English.
+ * Provides translation between one source language and another of the same set
+ * of languages.
  * </p>
  **/
 public interface AmazonTranslateAsync extends AmazonTranslate {
     /**
      * <p>
-     * Translates input text from the source language to the target language.
-     * You can translate between English (en) and one of the following
-     * languages, or between one of the following languages and English.
+     * A synchronous action that deletes a custom terminology.
+     * </p>
+     * 
+     * @param deleteTerminologyRequest
+     * @return A Java Future object containing the response from the
+     *         DeleteTerminology service method, as returned by Amazon
+     *         Translate.
+     * @throws ResourceNotFoundException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    Future<Void> deleteTerminologyAsync(DeleteTerminologyRequest deleteTerminologyRequest)
+            throws AmazonServiceException, AmazonClientException;
+
+    /**
+     * <p>
+     * A synchronous action that deletes a custom terminology.
+     * </p>
+     * 
+     * @param deleteTerminologyRequest
+     * @param asyncHandler Asynchronous callback handler for events in the
+     *            life-cycle of the request. Users could provide the
+     *            implementation of the four callback methods in this interface
+     *            to process the operation result or handle the exception.
+     * @return A Java Future object containing the response from the
+     *         DeleteTerminology service method, as returned by Amazon
+     *         Translate.
+     * @throws ResourceNotFoundException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    Future<Void> deleteTerminologyAsync(DeleteTerminologyRequest deleteTerminologyRequest,
+            AsyncHandler<DeleteTerminologyRequest, Void> asyncHandler)
+            throws AmazonServiceException, AmazonClientException;
+
+    /**
+     * <p>
+     * Retrieves a custom terminology.
+     * </p>
+     * 
+     * @param getTerminologyRequest
+     * @return A Java Future object containing the response from the
+     *         GetTerminology service method, as returned by Amazon Translate.
+     * @throws ResourceNotFoundException
+     * @throws InvalidParameterValueException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    Future<GetTerminologyResult> getTerminologyAsync(GetTerminologyRequest getTerminologyRequest)
+            throws AmazonServiceException, AmazonClientException;
+
+    /**
+     * <p>
+     * Retrieves a custom terminology.
+     * </p>
+     * 
+     * @param getTerminologyRequest
+     * @param asyncHandler Asynchronous callback handler for events in the
+     *            life-cycle of the request. Users could provide the
+     *            implementation of the four callback methods in this interface
+     *            to process the operation result or handle the exception.
+     * @return A Java Future object containing the response from the
+     *         GetTerminology service method, as returned by Amazon Translate.
+     * @throws ResourceNotFoundException
+     * @throws InvalidParameterValueException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    Future<GetTerminologyResult> getTerminologyAsync(GetTerminologyRequest getTerminologyRequest,
+            AsyncHandler<GetTerminologyRequest, GetTerminologyResult> asyncHandler)
+            throws AmazonServiceException, AmazonClientException;
+
+    /**
+     * <p>
+     * Creates or updates a custom terminology, depending on whether or not one
+     * already exists for the given terminology name. Importing a terminology
+     * with the same name as an existing one will merge the terminologies based
+     * on the chosen merge strategy. Currently, the only supported merge
+     * strategy is OVERWRITE, and so the imported terminology will overwrite an
+     * existing terminology of the same name.
+     * </p>
+     * <p>
+     * If you import a terminology that overwrites an existing one, the new
+     * terminology take up to 10 minutes to fully propagate and be available for
+     * use in a translation due to cache policies with the DataPlane service
+     * that performs the translations.
+     * </p>
+     * 
+     * @param importTerminologyRequest
+     * @return A Java Future object containing the response from the
+     *         ImportTerminology service method, as returned by Amazon
+     *         Translate.
+     * @throws InvalidParameterValueException
+     * @throws LimitExceededException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    Future<ImportTerminologyResult> importTerminologyAsync(
+            ImportTerminologyRequest importTerminologyRequest) throws AmazonServiceException,
+            AmazonClientException;
+
+    /**
+     * <p>
+     * Creates or updates a custom terminology, depending on whether or not one
+     * already exists for the given terminology name. Importing a terminology
+     * with the same name as an existing one will merge the terminologies based
+     * on the chosen merge strategy. Currently, the only supported merge
+     * strategy is OVERWRITE, and so the imported terminology will overwrite an
+     * existing terminology of the same name.
+     * </p>
+     * <p>
+     * If you import a terminology that overwrites an existing one, the new
+     * terminology take up to 10 minutes to fully propagate and be available for
+     * use in a translation due to cache policies with the DataPlane service
+     * that performs the translations.
+     * </p>
+     * 
+     * @param importTerminologyRequest
+     * @param asyncHandler Asynchronous callback handler for events in the
+     *            life-cycle of the request. Users could provide the
+     *            implementation of the four callback methods in this interface
+     *            to process the operation result or handle the exception.
+     * @return A Java Future object containing the response from the
+     *         ImportTerminology service method, as returned by Amazon
+     *         Translate.
+     * @throws InvalidParameterValueException
+     * @throws LimitExceededException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    Future<ImportTerminologyResult> importTerminologyAsync(
+            ImportTerminologyRequest importTerminologyRequest,
+            AsyncHandler<ImportTerminologyRequest, ImportTerminologyResult> asyncHandler)
+            throws AmazonServiceException, AmazonClientException;
+
+    /**
+     * <p>
+     * Provides a list of custom terminologies associated with your account.
+     * </p>
+     * 
+     * @param listTerminologiesRequest
+     * @return A Java Future object containing the response from the
+     *         ListTerminologies service method, as returned by Amazon
+     *         Translate.
+     * @throws InvalidParameterValueException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    Future<ListTerminologiesResult> listTerminologiesAsync(
+            ListTerminologiesRequest listTerminologiesRequest) throws AmazonServiceException,
+            AmazonClientException;
+
+    /**
+     * <p>
+     * Provides a list of custom terminologies associated with your account.
+     * </p>
+     * 
+     * @param listTerminologiesRequest
+     * @param asyncHandler Asynchronous callback handler for events in the
+     *            life-cycle of the request. Users could provide the
+     *            implementation of the four callback methods in this interface
+     *            to process the operation result or handle the exception.
+     * @return A Java Future object containing the response from the
+     *         ListTerminologies service method, as returned by Amazon
+     *         Translate.
+     * @throws InvalidParameterValueException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    Future<ListTerminologiesResult> listTerminologiesAsync(
+            ListTerminologiesRequest listTerminologiesRequest,
+            AsyncHandler<ListTerminologiesRequest, ListTerminologiesResult> asyncHandler)
+            throws AmazonServiceException, AmazonClientException;
+
+    /**
+     * <p>
+     * Translates input text from the source language to the target language. It
+     * is not necessary to use English (en) as either the source or the target
+     * language but not all language combinations are supported by Amazon
+     * Translate. For more information, see <a
+     * href="http://docs.aws.amazon.com/translate/latest/dg/pairs.html"
+     * >Supported Language Pairs</a>.
      * </p>
      * <ul>
      * <li>
@@ -49,6 +284,36 @@
      * </li>
      * <li>
      * <p>
+     * Chinese (Traditional) (zh-TW)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Czech (cs)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Danish (da)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Dutch (nl)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * English (en)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Finnish (fi)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * French (fr)
      * </p>
      * </li>
@@ -59,14 +324,59 @@
      * </li>
      * <li>
      * <p>
+     * Hebrew (he)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Indonesian (id)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Italian (it)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Japanese (ja)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Korean (ko)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Polish (pl)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * Portuguese (pt)
      * </p>
      * </li>
      * <li>
      * <p>
+     * Russian (ru)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * Spanish (es)
      * </p>
      * </li>
+     * <li>
+     * <p>
+     * Swedish (sv)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Turkish (tr)
+     * </p>
+     * </li>
      * </ul>
      * <p>
      * To have Amazon Translate determine the source language of your text, you
@@ -83,6 +393,7 @@
      * @throws TooManyRequestsException
      * @throws UnsupportedLanguagePairException
      * @throws DetectedLanguageLowConfidenceException
+     * @throws ResourceNotFoundException
      * @throws InternalServerException
      * @throws ServiceUnavailableException
      * @throws AmazonClientException If any internal errors are encountered
@@ -98,9 +409,12 @@
 
     /**
      * <p>
-     * Translates input text from the source language to the target language.
-     * You can translate between English (en) and one of the following
-     * languages, or between one of the following languages and English.
+     * Translates input text from the source language to the target language. It
+     * is not necessary to use English (en) as either the source or the target
+     * language but not all language combinations are supported by Amazon
+     * Translate. For more information, see <a
+     * href="http://docs.aws.amazon.com/translate/latest/dg/pairs.html"
+     * >Supported Language Pairs</a>.
      * </p>
      * <ul>
      * <li>
@@ -115,6 +429,36 @@
      * </li>
      * <li>
      * <p>
+     * Chinese (Traditional) (zh-TW)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Czech (cs)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Danish (da)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Dutch (nl)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * English (en)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Finnish (fi)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * French (fr)
      * </p>
      * </li>
@@ -125,14 +469,59 @@
      * </li>
      * <li>
      * <p>
+     * Hebrew (he)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Indonesian (id)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Italian (it)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Japanese (ja)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Korean (ko)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Polish (pl)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * Portuguese (pt)
      * </p>
      * </li>
      * <li>
      * <p>
+     * Russian (ru)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * Spanish (es)
      * </p>
      * </li>
+     * <li>
+     * <p>
+     * Swedish (sv)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Turkish (tr)
+     * </p>
+     * </li>
      * </ul>
      * <p>
      * To have Amazon Translate determine the source language of your text, you
@@ -153,6 +542,7 @@
      * @throws TooManyRequestsException
      * @throws UnsupportedLanguagePairException
      * @throws DetectedLanguageLowConfidenceException
+     * @throws ResourceNotFoundException
      * @throws InternalServerException
      * @throws ServiceUnavailableException
      * @throws AmazonClientException If any internal errors are encountered
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/AmazonTranslateAsyncClient.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/AmazonTranslateAsyncClient.java
index a86537949d..97c39b3eb4 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/AmazonTranslateAsyncClient.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/AmazonTranslateAsyncClient.java
@@ -33,8 +33,8 @@
 /**
  * Interface for accessing Amazon Translate asynchronously.
  * <p>
- * Provides translation between English and one of six languages, or between one
- * of the six languages and English.
+ * Provides translation between one source language and another of the same set
+ * of languages.
  * </p>
  **/
 public class AmazonTranslateAsyncClient extends AmazonTranslateClient implements
@@ -259,9 +259,313 @@ public void shutdown() {
 
     /**
      * <p>
-     * Translates input text from the source language to the target language.
-     * You can translate between English (en) and one of the following
-     * languages, or between one of the following languages and English.
+     * A synchronous action that deletes a custom terminology.
+     * </p>
+     * 
+     * @param deleteTerminologyRequest
+     * @return A Java Future object containing the response from the
+     *         DeleteTerminology service method, as returned by Amazon
+     *         Translate.
+     * @throws ResourceNotFoundException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public Future<Void> deleteTerminologyAsync(
+            final DeleteTerminologyRequest deleteTerminologyRequest) throws AmazonServiceException,
+            AmazonClientException {
+        return executorService.submit(new Callable<Void>() {
+            public Void call() throws Exception {
+                deleteTerminology(deleteTerminologyRequest);
+                return null;
+            }
+        });
+    }
+
+    /**
+     * <p>
+     * A synchronous action that deletes a custom terminology.
+     * </p>
+     * 
+     * @param deleteTerminologyRequest
+     * @return A Java Future object containing the response from the
+     *         DeleteTerminology service method, as returned by Amazon
+     *         Translate.
+     * @throws ResourceNotFoundException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public Future<Void> deleteTerminologyAsync(
+            final DeleteTerminologyRequest deleteTerminologyRequest,
+            final AsyncHandler<DeleteTerminologyRequest, Void> asyncHandler)
+            throws AmazonServiceException, AmazonClientException {
+        return executorService.submit(new Callable<Void>() {
+            public Void call() throws Exception {
+                Void result = null;
+                try {
+                    deleteTerminology(deleteTerminologyRequest);
+                } catch (Exception ex) {
+                    asyncHandler.onError(ex);
+                    throw ex;
+                }
+                asyncHandler.onSuccess(deleteTerminologyRequest, result);
+                return result;
+            }
+        });
+    }
+
+    /**
+     * <p>
+     * Retrieves a custom terminology.
+     * </p>
+     * 
+     * @param getTerminologyRequest
+     * @return A Java Future object containing the response from the
+     *         GetTerminology service method, as returned by Amazon Translate.
+     * @throws ResourceNotFoundException
+     * @throws InvalidParameterValueException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public Future<GetTerminologyResult> getTerminologyAsync(
+            final GetTerminologyRequest getTerminologyRequest) throws AmazonServiceException,
+            AmazonClientException {
+        return executorService.submit(new Callable<GetTerminologyResult>() {
+            public GetTerminologyResult call() throws Exception {
+                return getTerminology(getTerminologyRequest);
+            }
+        });
+    }
+
+    /**
+     * <p>
+     * Retrieves a custom terminology.
+     * </p>
+     * 
+     * @param getTerminologyRequest
+     * @return A Java Future object containing the response from the
+     *         GetTerminology service method, as returned by Amazon Translate.
+     * @throws ResourceNotFoundException
+     * @throws InvalidParameterValueException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public Future<GetTerminologyResult> getTerminologyAsync(
+            final GetTerminologyRequest getTerminologyRequest,
+            final AsyncHandler<GetTerminologyRequest, GetTerminologyResult> asyncHandler)
+            throws AmazonServiceException, AmazonClientException {
+        return executorService.submit(new Callable<GetTerminologyResult>() {
+            public GetTerminologyResult call() throws Exception {
+                GetTerminologyResult result = null;
+                try {
+                    result = getTerminology(getTerminologyRequest);
+                } catch (Exception ex) {
+                    asyncHandler.onError(ex);
+                    throw ex;
+                }
+                asyncHandler.onSuccess(getTerminologyRequest, result);
+                return result;
+            }
+        });
+    }
+
+    /**
+     * <p>
+     * Creates or updates a custom terminology, depending on whether or not one
+     * already exists for the given terminology name. Importing a terminology
+     * with the same name as an existing one will merge the terminologies based
+     * on the chosen merge strategy. Currently, the only supported merge
+     * strategy is OVERWRITE, and so the imported terminology will overwrite an
+     * existing terminology of the same name.
+     * </p>
+     * <p>
+     * If you import a terminology that overwrites an existing one, the new
+     * terminology take up to 10 minutes to fully propagate and be available for
+     * use in a translation due to cache policies with the DataPlane service
+     * that performs the translations.
+     * </p>
+     * 
+     * @param importTerminologyRequest
+     * @return A Java Future object containing the response from the
+     *         ImportTerminology service method, as returned by Amazon
+     *         Translate.
+     * @throws InvalidParameterValueException
+     * @throws LimitExceededException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public Future<ImportTerminologyResult> importTerminologyAsync(
+            final ImportTerminologyRequest importTerminologyRequest) throws AmazonServiceException,
+            AmazonClientException {
+        return executorService.submit(new Callable<ImportTerminologyResult>() {
+            public ImportTerminologyResult call() throws Exception {
+                return importTerminology(importTerminologyRequest);
+            }
+        });
+    }
+
+    /**
+     * <p>
+     * Creates or updates a custom terminology, depending on whether or not one
+     * already exists for the given terminology name. Importing a terminology
+     * with the same name as an existing one will merge the terminologies based
+     * on the chosen merge strategy. Currently, the only supported merge
+     * strategy is OVERWRITE, and so the imported terminology will overwrite an
+     * existing terminology of the same name.
+     * </p>
+     * <p>
+     * If you import a terminology that overwrites an existing one, the new
+     * terminology take up to 10 minutes to fully propagate and be available for
+     * use in a translation due to cache policies with the DataPlane service
+     * that performs the translations.
+     * </p>
+     * 
+     * @param importTerminologyRequest
+     * @return A Java Future object containing the response from the
+     *         ImportTerminology service method, as returned by Amazon
+     *         Translate.
+     * @throws InvalidParameterValueException
+     * @throws LimitExceededException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public Future<ImportTerminologyResult> importTerminologyAsync(
+            final ImportTerminologyRequest importTerminologyRequest,
+            final AsyncHandler<ImportTerminologyRequest, ImportTerminologyResult> asyncHandler)
+            throws AmazonServiceException, AmazonClientException {
+        return executorService.submit(new Callable<ImportTerminologyResult>() {
+            public ImportTerminologyResult call() throws Exception {
+                ImportTerminologyResult result = null;
+                try {
+                    result = importTerminology(importTerminologyRequest);
+                } catch (Exception ex) {
+                    asyncHandler.onError(ex);
+                    throw ex;
+                }
+                asyncHandler.onSuccess(importTerminologyRequest, result);
+                return result;
+            }
+        });
+    }
+
+    /**
+     * <p>
+     * Provides a list of custom terminologies associated with your account.
+     * </p>
+     * 
+     * @param listTerminologiesRequest
+     * @return A Java Future object containing the response from the
+     *         ListTerminologies service method, as returned by Amazon
+     *         Translate.
+     * @throws InvalidParameterValueException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public Future<ListTerminologiesResult> listTerminologiesAsync(
+            final ListTerminologiesRequest listTerminologiesRequest) throws AmazonServiceException,
+            AmazonClientException {
+        return executorService.submit(new Callable<ListTerminologiesResult>() {
+            public ListTerminologiesResult call() throws Exception {
+                return listTerminologies(listTerminologiesRequest);
+            }
+        });
+    }
+
+    /**
+     * <p>
+     * Provides a list of custom terminologies associated with your account.
+     * </p>
+     * 
+     * @param listTerminologiesRequest
+     * @return A Java Future object containing the response from the
+     *         ListTerminologies service method, as returned by Amazon
+     *         Translate.
+     * @throws InvalidParameterValueException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public Future<ListTerminologiesResult> listTerminologiesAsync(
+            final ListTerminologiesRequest listTerminologiesRequest,
+            final AsyncHandler<ListTerminologiesRequest, ListTerminologiesResult> asyncHandler)
+            throws AmazonServiceException, AmazonClientException {
+        return executorService.submit(new Callable<ListTerminologiesResult>() {
+            public ListTerminologiesResult call() throws Exception {
+                ListTerminologiesResult result = null;
+                try {
+                    result = listTerminologies(listTerminologiesRequest);
+                } catch (Exception ex) {
+                    asyncHandler.onError(ex);
+                    throw ex;
+                }
+                asyncHandler.onSuccess(listTerminologiesRequest, result);
+                return result;
+            }
+        });
+    }
+
+    /**
+     * <p>
+     * Translates input text from the source language to the target language. It
+     * is not necessary to use English (en) as either the source or the target
+     * language but not all language combinations are supported by Amazon
+     * Translate. For more information, see <a
+     * href="http://docs.aws.amazon.com/translate/latest/dg/pairs.html"
+     * >Supported Language Pairs</a>.
      * </p>
      * <ul>
      * <li>
@@ -276,6 +580,36 @@ public void shutdown() {
      * </li>
      * <li>
      * <p>
+     * Chinese (Traditional) (zh-TW)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Czech (cs)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Danish (da)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Dutch (nl)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * English (en)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Finnish (fi)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * French (fr)
      * </p>
      * </li>
@@ -286,14 +620,59 @@ public void shutdown() {
      * </li>
      * <li>
      * <p>
+     * Hebrew (he)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Indonesian (id)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Italian (it)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Japanese (ja)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Korean (ko)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Polish (pl)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * Portuguese (pt)
      * </p>
      * </li>
      * <li>
      * <p>
+     * Russian (ru)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * Spanish (es)
      * </p>
      * </li>
+     * <li>
+     * <p>
+     * Swedish (sv)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Turkish (tr)
+     * </p>
+     * </li>
      * </ul>
      * <p>
      * To have Amazon Translate determine the source language of your text, you
@@ -310,6 +689,7 @@ public void shutdown() {
      * @throws TooManyRequestsException
      * @throws UnsupportedLanguagePairException
      * @throws DetectedLanguageLowConfidenceException
+     * @throws ResourceNotFoundException
      * @throws InternalServerException
      * @throws ServiceUnavailableException
      * @throws AmazonClientException If any internal errors are encountered
@@ -332,9 +712,12 @@ public TranslateTextResult call() throws Exception {
 
     /**
      * <p>
-     * Translates input text from the source language to the target language.
-     * You can translate between English (en) and one of the following
-     * languages, or between one of the following languages and English.
+     * Translates input text from the source language to the target language. It
+     * is not necessary to use English (en) as either the source or the target
+     * language but not all language combinations are supported by Amazon
+     * Translate. For more information, see <a
+     * href="http://docs.aws.amazon.com/translate/latest/dg/pairs.html"
+     * >Supported Language Pairs</a>.
      * </p>
      * <ul>
      * <li>
@@ -349,6 +732,36 @@ public TranslateTextResult call() throws Exception {
      * </li>
      * <li>
      * <p>
+     * Chinese (Traditional) (zh-TW)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Czech (cs)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Danish (da)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Dutch (nl)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * English (en)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Finnish (fi)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * French (fr)
      * </p>
      * </li>
@@ -359,14 +772,59 @@ public TranslateTextResult call() throws Exception {
      * </li>
      * <li>
      * <p>
+     * Hebrew (he)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Indonesian (id)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Italian (it)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Japanese (ja)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Korean (ko)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Polish (pl)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * Portuguese (pt)
      * </p>
      * </li>
      * <li>
      * <p>
+     * Russian (ru)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * Spanish (es)
      * </p>
      * </li>
+     * <li>
+     * <p>
+     * Swedish (sv)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Turkish (tr)
+     * </p>
+     * </li>
      * </ul>
      * <p>
      * To have Amazon Translate determine the source language of your text, you
@@ -383,6 +841,7 @@ public TranslateTextResult call() throws Exception {
      * @throws TooManyRequestsException
      * @throws UnsupportedLanguagePairException
      * @throws DetectedLanguageLowConfidenceException
+     * @throws ResourceNotFoundException
      * @throws InternalServerException
      * @throws ServiceUnavailableException
      * @throws AmazonClientException If any internal errors are encountered
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/AmazonTranslateClient.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/AmazonTranslateClient.java
index 9501fd039e..6ee20d0039 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/AmazonTranslateClient.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/AmazonTranslateClient.java
@@ -35,8 +35,8 @@
  * client are blocking, and will not return until the service call completes.
  * <p>
  * <p>
- * Provides translation between English and one of six languages, or between one
- * of the six languages and English.
+ * Provides translation between one source language and another of the same set
+ * of languages.
  * </p>
  */
 public class AmazonTranslateClient extends AmazonWebServiceClient implements AmazonTranslate {
@@ -261,7 +261,10 @@ private void init() {
         jsonErrorUnmarshallers = new ArrayList<JsonErrorUnmarshaller>();
         jsonErrorUnmarshallers.add(new DetectedLanguageLowConfidenceExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new InternalServerExceptionUnmarshaller());
+        jsonErrorUnmarshallers.add(new InvalidParameterValueExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new InvalidRequestExceptionUnmarshaller());
+        jsonErrorUnmarshallers.add(new LimitExceededExceptionUnmarshaller());
+        jsonErrorUnmarshallers.add(new ResourceNotFoundExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new ServiceUnavailableExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new TextSizeLimitExceededExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new TooManyRequestsExceptionUnmarshaller());
@@ -287,9 +290,215 @@ private static ClientConfiguration adjustClientConfiguration(ClientConfiguration
 
     /**
      * <p>
-     * Translates input text from the source language to the target language.
-     * You can translate between English (en) and one of the following
-     * languages, or between one of the following languages and English.
+     * A synchronous action that deletes a custom terminology.
+     * </p>
+     * 
+     * @param deleteTerminologyRequest
+     * @throws ResourceNotFoundException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public void deleteTerminology(DeleteTerminologyRequest deleteTerminologyRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(deleteTerminologyRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<DeleteTerminologyRequest> request = null;
+        Response<Void> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new DeleteTerminologyRequestMarshaller()
+                        .marshall(deleteTerminologyRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);
+            invoke(request, responseHandler, executionContext);
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Retrieves a custom terminology.
+     * </p>
+     * 
+     * @param getTerminologyRequest
+     * @return getTerminologyResult The response from the GetTerminology service
+     *         method, as returned by Amazon Translate.
+     * @throws ResourceNotFoundException
+     * @throws InvalidParameterValueException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public GetTerminologyResult getTerminology(GetTerminologyRequest getTerminologyRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getTerminologyRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetTerminologyRequest> request = null;
+        Response<GetTerminologyResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetTerminologyRequestMarshaller().marshall(getTerminologyRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetTerminologyResult, JsonUnmarshallerContext> unmarshaller = new GetTerminologyResultJsonUnmarshaller();
+            JsonResponseHandler<GetTerminologyResult> responseHandler = new JsonResponseHandler<GetTerminologyResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Creates or updates a custom terminology, depending on whether or not one
+     * already exists for the given terminology name. Importing a terminology
+     * with the same name as an existing one will merge the terminologies based
+     * on the chosen merge strategy. Currently, the only supported merge
+     * strategy is OVERWRITE, and so the imported terminology will overwrite an
+     * existing terminology of the same name.
+     * </p>
+     * <p>
+     * If you import a terminology that overwrites an existing one, the new
+     * terminology take up to 10 minutes to fully propagate and be available for
+     * use in a translation due to cache policies with the DataPlane service
+     * that performs the translations.
+     * </p>
+     * 
+     * @param importTerminologyRequest
+     * @return importTerminologyResult The response from the ImportTerminology
+     *         service method, as returned by Amazon Translate.
+     * @throws InvalidParameterValueException
+     * @throws LimitExceededException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public ImportTerminologyResult importTerminology(
+            ImportTerminologyRequest importTerminologyRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(importTerminologyRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<ImportTerminologyRequest> request = null;
+        Response<ImportTerminologyResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new ImportTerminologyRequestMarshaller()
+                        .marshall(importTerminologyRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<ImportTerminologyResult, JsonUnmarshallerContext> unmarshaller = new ImportTerminologyResultJsonUnmarshaller();
+            JsonResponseHandler<ImportTerminologyResult> responseHandler = new JsonResponseHandler<ImportTerminologyResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Provides a list of custom terminologies associated with your account.
+     * </p>
+     * 
+     * @param listTerminologiesRequest
+     * @return listTerminologiesResult The response from the ListTerminologies
+     *         service method, as returned by Amazon Translate.
+     * @throws InvalidParameterValueException
+     * @throws TooManyRequestsException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Translate indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public ListTerminologiesResult listTerminologies(
+            ListTerminologiesRequest listTerminologiesRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(listTerminologiesRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<ListTerminologiesRequest> request = null;
+        Response<ListTerminologiesResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new ListTerminologiesRequestMarshaller()
+                        .marshall(listTerminologiesRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<ListTerminologiesResult, JsonUnmarshallerContext> unmarshaller = new ListTerminologiesResultJsonUnmarshaller();
+            JsonResponseHandler<ListTerminologiesResult> responseHandler = new JsonResponseHandler<ListTerminologiesResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Translates input text from the source language to the target language. It
+     * is not necessary to use English (en) as either the source or the target
+     * language but not all language combinations are supported by Amazon
+     * Translate. For more information, see <a
+     * href="http://docs.aws.amazon.com/translate/latest/dg/pairs.html"
+     * >Supported Language Pairs</a>.
      * </p>
      * <ul>
      * <li>
@@ -304,6 +513,36 @@ private static ClientConfiguration adjustClientConfiguration(ClientConfiguration
      * </li>
      * <li>
      * <p>
+     * Chinese (Traditional) (zh-TW)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Czech (cs)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Danish (da)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Dutch (nl)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * English (en)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Finnish (fi)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * French (fr)
      * </p>
      * </li>
@@ -314,14 +553,59 @@ private static ClientConfiguration adjustClientConfiguration(ClientConfiguration
      * </li>
      * <li>
      * <p>
+     * Hebrew (he)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Indonesian (id)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Italian (it)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Japanese (ja)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Korean (ko)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Polish (pl)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * Portuguese (pt)
      * </p>
      * </li>
      * <li>
      * <p>
+     * Russian (ru)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
      * Spanish (es)
      * </p>
      * </li>
+     * <li>
+     * <p>
+     * Swedish (sv)
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Turkish (tr)
+     * </p>
+     * </li>
      * </ul>
      * <p>
      * To have Amazon Translate determine the source language of your text, you
@@ -338,6 +622,7 @@ private static ClientConfiguration adjustClientConfiguration(ClientConfiguration
      * @throws TooManyRequestsException
      * @throws UnsupportedLanguagePairException
      * @throws DetectedLanguageLowConfidenceException
+     * @throws ResourceNotFoundException
      * @throws InternalServerException
      * @throws ServiceUnavailableException
      * @throws AmazonClientException If any internal errors are encountered
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/AppliedTerminology.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/AppliedTerminology.java
new file mode 100644
index 0000000000..fed3fdd6a1
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/AppliedTerminology.java
@@ -0,0 +1,265 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * The custom terminology applied to the input text by Amazon Translate for the
+ * translated text response. This is optional in the response and will only be
+ * present if you specified terminology input in the request. Currently, only
+ * one terminology can be applied per TranslateText request.
+ * </p>
+ */
+public class AppliedTerminology implements Serializable {
+    /**
+     * <p>
+     * The name of the custom terminology applied to the input text by Amazon
+     * Translate for the translated text response.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     */
+    private String name;
+
+    /**
+     * <p>
+     * The specific terms of the custom terminology applied to the input text by
+     * Amazon Translate for the translated text response. A maximum of 250 terms
+     * will be returned, and the specific terms applied will be the first 250
+     * terms in the source text.
+     * </p>
+     */
+    private java.util.List<Term> terms;
+
+    /**
+     * <p>
+     * The name of the custom terminology applied to the input text by Amazon
+     * Translate for the translated text response.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     *
+     * @return <p>
+     *         The name of the custom terminology applied to the input text by
+     *         Amazon Translate for the translated text response.
+     *         </p>
+     */
+    public String getName() {
+        return name;
+    }
+
+    /**
+     * <p>
+     * The name of the custom terminology applied to the input text by Amazon
+     * Translate for the translated text response.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     *
+     * @param name <p>
+     *            The name of the custom terminology applied to the input text
+     *            by Amazon Translate for the translated text response.
+     *            </p>
+     */
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    /**
+     * <p>
+     * The name of the custom terminology applied to the input text by Amazon
+     * Translate for the translated text response.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     *
+     * @param name <p>
+     *            The name of the custom terminology applied to the input text
+     *            by Amazon Translate for the translated text response.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AppliedTerminology withName(String name) {
+        this.name = name;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The specific terms of the custom terminology applied to the input text by
+     * Amazon Translate for the translated text response. A maximum of 250 terms
+     * will be returned, and the specific terms applied will be the first 250
+     * terms in the source text.
+     * </p>
+     *
+     * @return <p>
+     *         The specific terms of the custom terminology applied to the input
+     *         text by Amazon Translate for the translated text response. A
+     *         maximum of 250 terms will be returned, and the specific terms
+     *         applied will be the first 250 terms in the source text.
+     *         </p>
+     */
+    public java.util.List<Term> getTerms() {
+        return terms;
+    }
+
+    /**
+     * <p>
+     * The specific terms of the custom terminology applied to the input text by
+     * Amazon Translate for the translated text response. A maximum of 250 terms
+     * will be returned, and the specific terms applied will be the first 250
+     * terms in the source text.
+     * </p>
+     *
+     * @param terms <p>
+     *            The specific terms of the custom terminology applied to the
+     *            input text by Amazon Translate for the translated text
+     *            response. A maximum of 250 terms will be returned, and the
+     *            specific terms applied will be the first 250 terms in the
+     *            source text.
+     *            </p>
+     */
+    public void setTerms(java.util.Collection<Term> terms) {
+        if (terms == null) {
+            this.terms = null;
+            return;
+        }
+
+        this.terms = new java.util.ArrayList<Term>(terms);
+    }
+
+    /**
+     * <p>
+     * The specific terms of the custom terminology applied to the input text by
+     * Amazon Translate for the translated text response. A maximum of 250 terms
+     * will be returned, and the specific terms applied will be the first 250
+     * terms in the source text.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param terms <p>
+     *            The specific terms of the custom terminology applied to the
+     *            input text by Amazon Translate for the translated text
+     *            response. A maximum of 250 terms will be returned, and the
+     *            specific terms applied will be the first 250 terms in the
+     *            source text.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AppliedTerminology withTerms(Term... terms) {
+        if (getTerms() == null) {
+            this.terms = new java.util.ArrayList<Term>(terms.length);
+        }
+        for (Term value : terms) {
+            this.terms.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * The specific terms of the custom terminology applied to the input text by
+     * Amazon Translate for the translated text response. A maximum of 250 terms
+     * will be returned, and the specific terms applied will be the first 250
+     * terms in the source text.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param terms <p>
+     *            The specific terms of the custom terminology applied to the
+     *            input text by Amazon Translate for the translated text
+     *            response. A maximum of 250 terms will be returned, and the
+     *            specific terms applied will be the first 250 terms in the
+     *            source text.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AppliedTerminology withTerms(java.util.Collection<Term> terms) {
+        setTerms(terms);
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getName() != null)
+            sb.append("Name: " + getName() + ",");
+        if (getTerms() != null)
+            sb.append("Terms: " + getTerms());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getName() == null) ? 0 : getName().hashCode());
+        hashCode = prime * hashCode + ((getTerms() == null) ? 0 : getTerms().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof AppliedTerminology == false)
+            return false;
+        AppliedTerminology other = (AppliedTerminology) obj;
+
+        if (other.getName() == null ^ this.getName() == null)
+            return false;
+        if (other.getName() != null && other.getName().equals(this.getName()) == false)
+            return false;
+        if (other.getTerms() == null ^ this.getTerms() == null)
+            return false;
+        if (other.getTerms() != null && other.getTerms().equals(this.getTerms()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/DeleteTerminologyRequest.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/DeleteTerminologyRequest.java
new file mode 100644
index 0000000000..97e2f53a77
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/DeleteTerminologyRequest.java
@@ -0,0 +1,139 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * A synchronous action that deletes a custom terminology.
+ * </p>
+ */
+public class DeleteTerminologyRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * The name of the custom terminology being deleted.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     */
+    private String name;
+
+    /**
+     * <p>
+     * The name of the custom terminology being deleted.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     *
+     * @return <p>
+     *         The name of the custom terminology being deleted.
+     *         </p>
+     */
+    public String getName() {
+        return name;
+    }
+
+    /**
+     * <p>
+     * The name of the custom terminology being deleted.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     *
+     * @param name <p>
+     *            The name of the custom terminology being deleted.
+     *            </p>
+     */
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    /**
+     * <p>
+     * The name of the custom terminology being deleted.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     *
+     * @param name <p>
+     *            The name of the custom terminology being deleted.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteTerminologyRequest withName(String name) {
+        this.name = name;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getName() != null)
+            sb.append("Name: " + getName());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getName() == null) ? 0 : getName().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteTerminologyRequest == false)
+            return false;
+        DeleteTerminologyRequest other = (DeleteTerminologyRequest) obj;
+
+        if (other.getName() == null ^ this.getName() == null)
+            return false;
+        if (other.getName() != null && other.getName().equals(this.getName()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/DetectedLanguageLowConfidenceException.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/DetectedLanguageLowConfidenceException.java
index 41e420a39d..08dbceb11e 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/DetectedLanguageLowConfidenceException.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/DetectedLanguageLowConfidenceException.java
@@ -33,7 +33,7 @@
 
     /**
      * <p>
-     * Auto detected language code from Comprehend.
+     * The language code of the auto-detected language from Amazon Comprehend.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -53,14 +53,15 @@ public DetectedLanguageLowConfidenceException(String message) {
 
     /**
      * <p>
-     * Auto detected language code from Comprehend.
+     * The language code of the auto-detected language from Amazon Comprehend.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>2 - 5<br/>
      *
      * @return <p>
-     *         Auto detected language code from Comprehend.
+     *         The language code of the auto-detected language from Amazon
+     *         Comprehend.
      *         </p>
      */
     public String getDetectedLanguageCode() {
@@ -69,14 +70,15 @@ public String getDetectedLanguageCode() {
 
     /**
      * <p>
-     * Auto detected language code from Comprehend.
+     * The language code of the auto-detected language from Amazon Comprehend.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>2 - 5<br/>
      *
      * @param detectedLanguageCode <p>
-     *            Auto detected language code from Comprehend.
+     *            The language code of the auto-detected language from Amazon
+     *            Comprehend.
      *            </p>
      */
     public void setDetectedLanguageCode(String detectedLanguageCode) {
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/EncryptionKey.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/EncryptionKey.java
new file mode 100644
index 0000000000..f31785d3bc
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/EncryptionKey.java
@@ -0,0 +1,278 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * The encryption key used to encrypt the custom terminologies used by Amazon
+ * Translate.
+ * </p>
+ */
+public class EncryptionKey implements Serializable {
+    /**
+     * <p>
+     * The type of encryption key used by Amazon Translate to encrypt custom
+     * terminologies.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>KMS
+     */
+    private String type;
+
+    /**
+     * <p>
+     * The Amazon Resource Name (ARN) of the encryption key being used to
+     * encrypt the custom terminology.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 400<br/>
+     * <b>Pattern:
+     * </b>(arn:aws((-us-gov)|(-cn))?:kms:)?([a-z]{2}-[a-z]+-\d:)?(\d
+     * {12}:)?(((key/)?[a-zA-Z0-9-_]+)|(alias/[a-zA-Z0-9:/_-]+))<br/>
+     */
+    private String id;
+
+    /**
+     * <p>
+     * The type of encryption key used by Amazon Translate to encrypt custom
+     * terminologies.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>KMS
+     *
+     * @return <p>
+     *         The type of encryption key used by Amazon Translate to encrypt
+     *         custom terminologies.
+     *         </p>
+     * @see EncryptionKeyType
+     */
+    public String getType() {
+        return type;
+    }
+
+    /**
+     * <p>
+     * The type of encryption key used by Amazon Translate to encrypt custom
+     * terminologies.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>KMS
+     *
+     * @param type <p>
+     *            The type of encryption key used by Amazon Translate to encrypt
+     *            custom terminologies.
+     *            </p>
+     * @see EncryptionKeyType
+     */
+    public void setType(String type) {
+        this.type = type;
+    }
+
+    /**
+     * <p>
+     * The type of encryption key used by Amazon Translate to encrypt custom
+     * terminologies.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>KMS
+     *
+     * @param type <p>
+     *            The type of encryption key used by Amazon Translate to encrypt
+     *            custom terminologies.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see EncryptionKeyType
+     */
+    public EncryptionKey withType(String type) {
+        this.type = type;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The type of encryption key used by Amazon Translate to encrypt custom
+     * terminologies.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>KMS
+     *
+     * @param type <p>
+     *            The type of encryption key used by Amazon Translate to encrypt
+     *            custom terminologies.
+     *            </p>
+     * @see EncryptionKeyType
+     */
+    public void setType(EncryptionKeyType type) {
+        this.type = type.toString();
+    }
+
+    /**
+     * <p>
+     * The type of encryption key used by Amazon Translate to encrypt custom
+     * terminologies.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>KMS
+     *
+     * @param type <p>
+     *            The type of encryption key used by Amazon Translate to encrypt
+     *            custom terminologies.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see EncryptionKeyType
+     */
+    public EncryptionKey withType(EncryptionKeyType type) {
+        this.type = type.toString();
+        return this;
+    }
+
+    /**
+     * <p>
+     * The Amazon Resource Name (ARN) of the encryption key being used to
+     * encrypt the custom terminology.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 400<br/>
+     * <b>Pattern:
+     * </b>(arn:aws((-us-gov)|(-cn))?:kms:)?([a-z]{2}-[a-z]+-\d:)?(\d
+     * {12}:)?(((key/)?[a-zA-Z0-9-_]+)|(alias/[a-zA-Z0-9:/_-]+))<br/>
+     *
+     * @return <p>
+     *         The Amazon Resource Name (ARN) of the encryption key being used
+     *         to encrypt the custom terminology.
+     *         </p>
+     */
+    public String getId() {
+        return id;
+    }
+
+    /**
+     * <p>
+     * The Amazon Resource Name (ARN) of the encryption key being used to
+     * encrypt the custom terminology.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 400<br/>
+     * <b>Pattern:
+     * </b>(arn:aws((-us-gov)|(-cn))?:kms:)?([a-z]{2}-[a-z]+-\d:)?(\d
+     * {12}:)?(((key/)?[a-zA-Z0-9-_]+)|(alias/[a-zA-Z0-9:/_-]+))<br/>
+     *
+     * @param id <p>
+     *            The Amazon Resource Name (ARN) of the encryption key being
+     *            used to encrypt the custom terminology.
+     *            </p>
+     */
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    /**
+     * <p>
+     * The Amazon Resource Name (ARN) of the encryption key being used to
+     * encrypt the custom terminology.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 400<br/>
+     * <b>Pattern:
+     * </b>(arn:aws((-us-gov)|(-cn))?:kms:)?([a-z]{2}-[a-z]+-\d:)?(\d
+     * {12}:)?(((key/)?[a-zA-Z0-9-_]+)|(alias/[a-zA-Z0-9:/_-]+))<br/>
+     *
+     * @param id <p>
+     *            The Amazon Resource Name (ARN) of the encryption key being
+     *            used to encrypt the custom terminology.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EncryptionKey withId(String id) {
+        this.id = id;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getType() != null)
+            sb.append("Type: " + getType() + ",");
+        if (getId() != null)
+            sb.append("Id: " + getId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getType() == null) ? 0 : getType().hashCode());
+        hashCode = prime * hashCode + ((getId() == null) ? 0 : getId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof EncryptionKey == false)
+            return false;
+        EncryptionKey other = (EncryptionKey) obj;
+
+        if (other.getType() == null ^ this.getType() == null)
+            return false;
+        if (other.getType() != null && other.getType().equals(this.getType()) == false)
+            return false;
+        if (other.getId() == null ^ this.getId() == null)
+            return false;
+        if (other.getId() != null && other.getId().equals(this.getId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/EncryptionKeyType.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/EncryptionKeyType.java
new file mode 100644
index 0000000000..94ef53bf4b
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/EncryptionKeyType.java
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Encryption Key Type
+ */
+public enum EncryptionKeyType {
+
+    KMS("KMS");
+
+    private String value;
+
+    private EncryptionKeyType(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, EncryptionKeyType> enumMap;
+    static {
+        enumMap = new HashMap<String, EncryptionKeyType>();
+        enumMap.put("KMS", KMS);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return EncryptionKeyType corresponding to the value
+     */
+    public static EncryptionKeyType fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/GetTerminologyRequest.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/GetTerminologyRequest.java
new file mode 100644
index 0000000000..6989352049
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/GetTerminologyRequest.java
@@ -0,0 +1,268 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Retrieves a custom terminology.
+ * </p>
+ */
+public class GetTerminologyRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * The name of the custom terminology being retrieved.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     */
+    private String name;
+
+    /**
+     * <p>
+     * The data format of the custom terminology being retrieved, either CSV or
+     * TMX.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CSV, TMX
+     */
+    private String terminologyDataFormat;
+
+    /**
+     * <p>
+     * The name of the custom terminology being retrieved.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     *
+     * @return <p>
+     *         The name of the custom terminology being retrieved.
+     *         </p>
+     */
+    public String getName() {
+        return name;
+    }
+
+    /**
+     * <p>
+     * The name of the custom terminology being retrieved.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     *
+     * @param name <p>
+     *            The name of the custom terminology being retrieved.
+     *            </p>
+     */
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    /**
+     * <p>
+     * The name of the custom terminology being retrieved.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     *
+     * @param name <p>
+     *            The name of the custom terminology being retrieved.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetTerminologyRequest withName(String name) {
+        this.name = name;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The data format of the custom terminology being retrieved, either CSV or
+     * TMX.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CSV, TMX
+     *
+     * @return <p>
+     *         The data format of the custom terminology being retrieved, either
+     *         CSV or TMX.
+     *         </p>
+     * @see TerminologyDataFormat
+     */
+    public String getTerminologyDataFormat() {
+        return terminologyDataFormat;
+    }
+
+    /**
+     * <p>
+     * The data format of the custom terminology being retrieved, either CSV or
+     * TMX.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CSV, TMX
+     *
+     * @param terminologyDataFormat <p>
+     *            The data format of the custom terminology being retrieved,
+     *            either CSV or TMX.
+     *            </p>
+     * @see TerminologyDataFormat
+     */
+    public void setTerminologyDataFormat(String terminologyDataFormat) {
+        this.terminologyDataFormat = terminologyDataFormat;
+    }
+
+    /**
+     * <p>
+     * The data format of the custom terminology being retrieved, either CSV or
+     * TMX.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CSV, TMX
+     *
+     * @param terminologyDataFormat <p>
+     *            The data format of the custom terminology being retrieved,
+     *            either CSV or TMX.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see TerminologyDataFormat
+     */
+    public GetTerminologyRequest withTerminologyDataFormat(String terminologyDataFormat) {
+        this.terminologyDataFormat = terminologyDataFormat;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The data format of the custom terminology being retrieved, either CSV or
+     * TMX.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CSV, TMX
+     *
+     * @param terminologyDataFormat <p>
+     *            The data format of the custom terminology being retrieved,
+     *            either CSV or TMX.
+     *            </p>
+     * @see TerminologyDataFormat
+     */
+    public void setTerminologyDataFormat(TerminologyDataFormat terminologyDataFormat) {
+        this.terminologyDataFormat = terminologyDataFormat.toString();
+    }
+
+    /**
+     * <p>
+     * The data format of the custom terminology being retrieved, either CSV or
+     * TMX.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CSV, TMX
+     *
+     * @param terminologyDataFormat <p>
+     *            The data format of the custom terminology being retrieved,
+     *            either CSV or TMX.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see TerminologyDataFormat
+     */
+    public GetTerminologyRequest withTerminologyDataFormat(
+            TerminologyDataFormat terminologyDataFormat) {
+        this.terminologyDataFormat = terminologyDataFormat.toString();
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getName() != null)
+            sb.append("Name: " + getName() + ",");
+        if (getTerminologyDataFormat() != null)
+            sb.append("TerminologyDataFormat: " + getTerminologyDataFormat());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getName() == null) ? 0 : getName().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getTerminologyDataFormat() == null) ? 0 : getTerminologyDataFormat().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetTerminologyRequest == false)
+            return false;
+        GetTerminologyRequest other = (GetTerminologyRequest) obj;
+
+        if (other.getName() == null ^ this.getName() == null)
+            return false;
+        if (other.getName() != null && other.getName().equals(this.getName()) == false)
+            return false;
+        if (other.getTerminologyDataFormat() == null ^ this.getTerminologyDataFormat() == null)
+            return false;
+        if (other.getTerminologyDataFormat() != null
+                && other.getTerminologyDataFormat().equals(this.getTerminologyDataFormat()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/GetTerminologyResult.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/GetTerminologyResult.java
new file mode 100644
index 0000000000..9856d5dfe7
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/GetTerminologyResult.java
@@ -0,0 +1,198 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import java.io.Serializable;
+
+public class GetTerminologyResult implements Serializable {
+    /**
+     * <p>
+     * The properties of the custom terminology being retrieved.
+     * </p>
+     */
+    private TerminologyProperties terminologyProperties;
+
+    /**
+     * <p>
+     * The data location of the custom terminology being retrieved. The custom
+     * terminology file is returned in a presigned url that has a 30 minute
+     * expiration.
+     * </p>
+     */
+    private TerminologyDataLocation terminologyDataLocation;
+
+    /**
+     * <p>
+     * The properties of the custom terminology being retrieved.
+     * </p>
+     *
+     * @return <p>
+     *         The properties of the custom terminology being retrieved.
+     *         </p>
+     */
+    public TerminologyProperties getTerminologyProperties() {
+        return terminologyProperties;
+    }
+
+    /**
+     * <p>
+     * The properties of the custom terminology being retrieved.
+     * </p>
+     *
+     * @param terminologyProperties <p>
+     *            The properties of the custom terminology being retrieved.
+     *            </p>
+     */
+    public void setTerminologyProperties(TerminologyProperties terminologyProperties) {
+        this.terminologyProperties = terminologyProperties;
+    }
+
+    /**
+     * <p>
+     * The properties of the custom terminology being retrieved.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param terminologyProperties <p>
+     *            The properties of the custom terminology being retrieved.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetTerminologyResult withTerminologyProperties(
+            TerminologyProperties terminologyProperties) {
+        this.terminologyProperties = terminologyProperties;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The data location of the custom terminology being retrieved. The custom
+     * terminology file is returned in a presigned url that has a 30 minute
+     * expiration.
+     * </p>
+     *
+     * @return <p>
+     *         The data location of the custom terminology being retrieved. The
+     *         custom terminology file is returned in a presigned url that has a
+     *         30 minute expiration.
+     *         </p>
+     */
+    public TerminologyDataLocation getTerminologyDataLocation() {
+        return terminologyDataLocation;
+    }
+
+    /**
+     * <p>
+     * The data location of the custom terminology being retrieved. The custom
+     * terminology file is returned in a presigned url that has a 30 minute
+     * expiration.
+     * </p>
+     *
+     * @param terminologyDataLocation <p>
+     *            The data location of the custom terminology being retrieved.
+     *            The custom terminology file is returned in a presigned url
+     *            that has a 30 minute expiration.
+     *            </p>
+     */
+    public void setTerminologyDataLocation(TerminologyDataLocation terminologyDataLocation) {
+        this.terminologyDataLocation = terminologyDataLocation;
+    }
+
+    /**
+     * <p>
+     * The data location of the custom terminology being retrieved. The custom
+     * terminology file is returned in a presigned url that has a 30 minute
+     * expiration.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param terminologyDataLocation <p>
+     *            The data location of the custom terminology being retrieved.
+     *            The custom terminology file is returned in a presigned url
+     *            that has a 30 minute expiration.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetTerminologyResult withTerminologyDataLocation(
+            TerminologyDataLocation terminologyDataLocation) {
+        this.terminologyDataLocation = terminologyDataLocation;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getTerminologyProperties() != null)
+            sb.append("TerminologyProperties: " + getTerminologyProperties() + ",");
+        if (getTerminologyDataLocation() != null)
+            sb.append("TerminologyDataLocation: " + getTerminologyDataLocation());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime
+                * hashCode
+                + ((getTerminologyProperties() == null) ? 0 : getTerminologyProperties().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getTerminologyDataLocation() == null) ? 0 : getTerminologyDataLocation()
+                        .hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetTerminologyResult == false)
+            return false;
+        GetTerminologyResult other = (GetTerminologyResult) obj;
+
+        if (other.getTerminologyProperties() == null ^ this.getTerminologyProperties() == null)
+            return false;
+        if (other.getTerminologyProperties() != null
+                && other.getTerminologyProperties().equals(this.getTerminologyProperties()) == false)
+            return false;
+        if (other.getTerminologyDataLocation() == null ^ this.getTerminologyDataLocation() == null)
+            return false;
+        if (other.getTerminologyDataLocation() != null
+                && other.getTerminologyDataLocation().equals(this.getTerminologyDataLocation()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ImportTerminologyRequest.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ImportTerminologyRequest.java
new file mode 100644
index 0000000000..fba3c657b6
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ImportTerminologyRequest.java
@@ -0,0 +1,500 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Creates or updates a custom terminology, depending on whether or not one
+ * already exists for the given terminology name. Importing a terminology with
+ * the same name as an existing one will merge the terminologies based on the
+ * chosen merge strategy. Currently, the only supported merge strategy is
+ * OVERWRITE, and so the imported terminology will overwrite an existing
+ * terminology of the same name.
+ * </p>
+ * <p>
+ * If you import a terminology that overwrites an existing one, the new
+ * terminology take up to 10 minutes to fully propagate and be available for use
+ * in a translation due to cache policies with the DataPlane service that
+ * performs the translations.
+ * </p>
+ */
+public class ImportTerminologyRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * The name of the custom terminology being imported.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     */
+    private String name;
+
+    /**
+     * <p>
+     * The merge strategy of the custom terminology being imported. Currently,
+     * only the OVERWRITE merge strategy is supported. In this case, the
+     * imported terminology will overwrite an existing terminology of the same
+     * name.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OVERWRITE
+     */
+    private String mergeStrategy;
+
+    /**
+     * <p>
+     * The description of the custom terminology being imported.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 256<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,256}<br/>
+     */
+    private String description;
+
+    /**
+     * <p>
+     * The terminology data for the custom terminology being imported.
+     * </p>
+     */
+    private TerminologyData terminologyData;
+
+    /**
+     * <p>
+     * The encryption key for the custom terminology being imported.
+     * </p>
+     */
+    private EncryptionKey encryptionKey;
+
+    /**
+     * <p>
+     * The name of the custom terminology being imported.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     *
+     * @return <p>
+     *         The name of the custom terminology being imported.
+     *         </p>
+     */
+    public String getName() {
+        return name;
+    }
+
+    /**
+     * <p>
+     * The name of the custom terminology being imported.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     *
+     * @param name <p>
+     *            The name of the custom terminology being imported.
+     *            </p>
+     */
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    /**
+     * <p>
+     * The name of the custom terminology being imported.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     *
+     * @param name <p>
+     *            The name of the custom terminology being imported.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ImportTerminologyRequest withName(String name) {
+        this.name = name;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The merge strategy of the custom terminology being imported. Currently,
+     * only the OVERWRITE merge strategy is supported. In this case, the
+     * imported terminology will overwrite an existing terminology of the same
+     * name.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OVERWRITE
+     *
+     * @return <p>
+     *         The merge strategy of the custom terminology being imported.
+     *         Currently, only the OVERWRITE merge strategy is supported. In
+     *         this case, the imported terminology will overwrite an existing
+     *         terminology of the same name.
+     *         </p>
+     * @see MergeStrategy
+     */
+    public String getMergeStrategy() {
+        return mergeStrategy;
+    }
+
+    /**
+     * <p>
+     * The merge strategy of the custom terminology being imported. Currently,
+     * only the OVERWRITE merge strategy is supported. In this case, the
+     * imported terminology will overwrite an existing terminology of the same
+     * name.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OVERWRITE
+     *
+     * @param mergeStrategy <p>
+     *            The merge strategy of the custom terminology being imported.
+     *            Currently, only the OVERWRITE merge strategy is supported. In
+     *            this case, the imported terminology will overwrite an existing
+     *            terminology of the same name.
+     *            </p>
+     * @see MergeStrategy
+     */
+    public void setMergeStrategy(String mergeStrategy) {
+        this.mergeStrategy = mergeStrategy;
+    }
+
+    /**
+     * <p>
+     * The merge strategy of the custom terminology being imported. Currently,
+     * only the OVERWRITE merge strategy is supported. In this case, the
+     * imported terminology will overwrite an existing terminology of the same
+     * name.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OVERWRITE
+     *
+     * @param mergeStrategy <p>
+     *            The merge strategy of the custom terminology being imported.
+     *            Currently, only the OVERWRITE merge strategy is supported. In
+     *            this case, the imported terminology will overwrite an existing
+     *            terminology of the same name.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see MergeStrategy
+     */
+    public ImportTerminologyRequest withMergeStrategy(String mergeStrategy) {
+        this.mergeStrategy = mergeStrategy;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The merge strategy of the custom terminology being imported. Currently,
+     * only the OVERWRITE merge strategy is supported. In this case, the
+     * imported terminology will overwrite an existing terminology of the same
+     * name.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OVERWRITE
+     *
+     * @param mergeStrategy <p>
+     *            The merge strategy of the custom terminology being imported.
+     *            Currently, only the OVERWRITE merge strategy is supported. In
+     *            this case, the imported terminology will overwrite an existing
+     *            terminology of the same name.
+     *            </p>
+     * @see MergeStrategy
+     */
+    public void setMergeStrategy(MergeStrategy mergeStrategy) {
+        this.mergeStrategy = mergeStrategy.toString();
+    }
+
+    /**
+     * <p>
+     * The merge strategy of the custom terminology being imported. Currently,
+     * only the OVERWRITE merge strategy is supported. In this case, the
+     * imported terminology will overwrite an existing terminology of the same
+     * name.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OVERWRITE
+     *
+     * @param mergeStrategy <p>
+     *            The merge strategy of the custom terminology being imported.
+     *            Currently, only the OVERWRITE merge strategy is supported. In
+     *            this case, the imported terminology will overwrite an existing
+     *            terminology of the same name.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see MergeStrategy
+     */
+    public ImportTerminologyRequest withMergeStrategy(MergeStrategy mergeStrategy) {
+        this.mergeStrategy = mergeStrategy.toString();
+        return this;
+    }
+
+    /**
+     * <p>
+     * The description of the custom terminology being imported.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 256<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,256}<br/>
+     *
+     * @return <p>
+     *         The description of the custom terminology being imported.
+     *         </p>
+     */
+    public String getDescription() {
+        return description;
+    }
+
+    /**
+     * <p>
+     * The description of the custom terminology being imported.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 256<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,256}<br/>
+     *
+     * @param description <p>
+     *            The description of the custom terminology being imported.
+     *            </p>
+     */
+    public void setDescription(String description) {
+        this.description = description;
+    }
+
+    /**
+     * <p>
+     * The description of the custom terminology being imported.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 256<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,256}<br/>
+     *
+     * @param description <p>
+     *            The description of the custom terminology being imported.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ImportTerminologyRequest withDescription(String description) {
+        this.description = description;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The terminology data for the custom terminology being imported.
+     * </p>
+     *
+     * @return <p>
+     *         The terminology data for the custom terminology being imported.
+     *         </p>
+     */
+    public TerminologyData getTerminologyData() {
+        return terminologyData;
+    }
+
+    /**
+     * <p>
+     * The terminology data for the custom terminology being imported.
+     * </p>
+     *
+     * @param terminologyData <p>
+     *            The terminology data for the custom terminology being
+     *            imported.
+     *            </p>
+     */
+    public void setTerminologyData(TerminologyData terminologyData) {
+        this.terminologyData = terminologyData;
+    }
+
+    /**
+     * <p>
+     * The terminology data for the custom terminology being imported.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param terminologyData <p>
+     *            The terminology data for the custom terminology being
+     *            imported.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ImportTerminologyRequest withTerminologyData(TerminologyData terminologyData) {
+        this.terminologyData = terminologyData;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The encryption key for the custom terminology being imported.
+     * </p>
+     *
+     * @return <p>
+     *         The encryption key for the custom terminology being imported.
+     *         </p>
+     */
+    public EncryptionKey getEncryptionKey() {
+        return encryptionKey;
+    }
+
+    /**
+     * <p>
+     * The encryption key for the custom terminology being imported.
+     * </p>
+     *
+     * @param encryptionKey <p>
+     *            The encryption key for the custom terminology being imported.
+     *            </p>
+     */
+    public void setEncryptionKey(EncryptionKey encryptionKey) {
+        this.encryptionKey = encryptionKey;
+    }
+
+    /**
+     * <p>
+     * The encryption key for the custom terminology being imported.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param encryptionKey <p>
+     *            The encryption key for the custom terminology being imported.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ImportTerminologyRequest withEncryptionKey(EncryptionKey encryptionKey) {
+        this.encryptionKey = encryptionKey;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getName() != null)
+            sb.append("Name: " + getName() + ",");
+        if (getMergeStrategy() != null)
+            sb.append("MergeStrategy: " + getMergeStrategy() + ",");
+        if (getDescription() != null)
+            sb.append("Description: " + getDescription() + ",");
+        if (getTerminologyData() != null)
+            sb.append("TerminologyData: " + getTerminologyData() + ",");
+        if (getEncryptionKey() != null)
+            sb.append("EncryptionKey: " + getEncryptionKey());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getName() == null) ? 0 : getName().hashCode());
+        hashCode = prime * hashCode
+                + ((getMergeStrategy() == null) ? 0 : getMergeStrategy().hashCode());
+        hashCode = prime * hashCode
+                + ((getDescription() == null) ? 0 : getDescription().hashCode());
+        hashCode = prime * hashCode
+                + ((getTerminologyData() == null) ? 0 : getTerminologyData().hashCode());
+        hashCode = prime * hashCode
+                + ((getEncryptionKey() == null) ? 0 : getEncryptionKey().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ImportTerminologyRequest == false)
+            return false;
+        ImportTerminologyRequest other = (ImportTerminologyRequest) obj;
+
+        if (other.getName() == null ^ this.getName() == null)
+            return false;
+        if (other.getName() != null && other.getName().equals(this.getName()) == false)
+            return false;
+        if (other.getMergeStrategy() == null ^ this.getMergeStrategy() == null)
+            return false;
+        if (other.getMergeStrategy() != null
+                && other.getMergeStrategy().equals(this.getMergeStrategy()) == false)
+            return false;
+        if (other.getDescription() == null ^ this.getDescription() == null)
+            return false;
+        if (other.getDescription() != null
+                && other.getDescription().equals(this.getDescription()) == false)
+            return false;
+        if (other.getTerminologyData() == null ^ this.getTerminologyData() == null)
+            return false;
+        if (other.getTerminologyData() != null
+                && other.getTerminologyData().equals(this.getTerminologyData()) == false)
+            return false;
+        if (other.getEncryptionKey() == null ^ this.getEncryptionKey() == null)
+            return false;
+        if (other.getEncryptionKey() != null
+                && other.getEncryptionKey().equals(this.getEncryptionKey()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ImportTerminologyResult.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ImportTerminologyResult.java
new file mode 100644
index 0000000000..0469b17338
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ImportTerminologyResult.java
@@ -0,0 +1,120 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import java.io.Serializable;
+
+public class ImportTerminologyResult implements Serializable {
+    /**
+     * <p>
+     * The properties of the custom terminology being imported.
+     * </p>
+     */
+    private TerminologyProperties terminologyProperties;
+
+    /**
+     * <p>
+     * The properties of the custom terminology being imported.
+     * </p>
+     *
+     * @return <p>
+     *         The properties of the custom terminology being imported.
+     *         </p>
+     */
+    public TerminologyProperties getTerminologyProperties() {
+        return terminologyProperties;
+    }
+
+    /**
+     * <p>
+     * The properties of the custom terminology being imported.
+     * </p>
+     *
+     * @param terminologyProperties <p>
+     *            The properties of the custom terminology being imported.
+     *            </p>
+     */
+    public void setTerminologyProperties(TerminologyProperties terminologyProperties) {
+        this.terminologyProperties = terminologyProperties;
+    }
+
+    /**
+     * <p>
+     * The properties of the custom terminology being imported.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param terminologyProperties <p>
+     *            The properties of the custom terminology being imported.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ImportTerminologyResult withTerminologyProperties(
+            TerminologyProperties terminologyProperties) {
+        this.terminologyProperties = terminologyProperties;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getTerminologyProperties() != null)
+            sb.append("TerminologyProperties: " + getTerminologyProperties());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime
+                * hashCode
+                + ((getTerminologyProperties() == null) ? 0 : getTerminologyProperties().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ImportTerminologyResult == false)
+            return false;
+        ImportTerminologyResult other = (ImportTerminologyResult) obj;
+
+        if (other.getTerminologyProperties() == null ^ this.getTerminologyProperties() == null)
+            return false;
+        if (other.getTerminologyProperties() != null
+                && other.getTerminologyProperties().equals(this.getTerminologyProperties()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/InvalidParameterValueException.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/InvalidParameterValueException.java
new file mode 100644
index 0000000000..b76130d14e
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/InvalidParameterValueException.java
@@ -0,0 +1,38 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import com.amazonaws.AmazonServiceException;
+
+/**
+ * <p>
+ * The value of the parameter is invalid. Review the value of the parameter you
+ * are using to correct it, and then retry your operation.
+ * </p>
+ */
+public class InvalidParameterValueException extends AmazonServiceException {
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * Constructs a new InvalidParameterValueException with the specified error
+     * message.
+     *
+     * @param message Describes the error encountered.
+     */
+    public InvalidParameterValueException(String message) {
+        super(message);
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/InvalidRequestException.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/InvalidRequestException.java
index 8288ed8494..75c755f644 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/InvalidRequestException.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/InvalidRequestException.java
@@ -19,7 +19,8 @@
 
 /**
  * <p>
- * The request is invalid.
+ * The request that you made is invalid. Check your request to determine why
+ * it's invalid and then retry the request.
  * </p>
  */
 public class InvalidRequestException extends AmazonServiceException {
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/LimitExceededException.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/LimitExceededException.java
new file mode 100644
index 0000000000..37fc35d66f
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/LimitExceededException.java
@@ -0,0 +1,37 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import com.amazonaws.AmazonServiceException;
+
+/**
+ * <p>
+ * The specified limit has been exceeded. Review your request and retry it with
+ * a quantity below the stated limit.
+ * </p>
+ */
+public class LimitExceededException extends AmazonServiceException {
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * Constructs a new LimitExceededException with the specified error message.
+     *
+     * @param message Describes the error encountered.
+     */
+    public LimitExceededException(String message) {
+        super(message);
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ListTerminologiesRequest.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ListTerminologiesRequest.java
new file mode 100644
index 0000000000..035b77c4af
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ListTerminologiesRequest.java
@@ -0,0 +1,225 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Provides a list of custom terminologies associated with your account.
+ * </p>
+ */
+public class ListTerminologiesRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * If the result of the request to ListTerminologies was truncated, include
+     * the NextToken to fetch the next group of custom terminologies.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 8192<br/>
+     * <b>Pattern: </b>\p{ASCII}{0,8192}<br/>
+     */
+    private String nextToken;
+
+    /**
+     * <p>
+     * The maximum number of custom terminologies returned per list request.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 500<br/>
+     */
+    private Integer maxResults;
+
+    /**
+     * <p>
+     * If the result of the request to ListTerminologies was truncated, include
+     * the NextToken to fetch the next group of custom terminologies.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 8192<br/>
+     * <b>Pattern: </b>\p{ASCII}{0,8192}<br/>
+     *
+     * @return <p>
+     *         If the result of the request to ListTerminologies was truncated,
+     *         include the NextToken to fetch the next group of custom
+     *         terminologies.
+     *         </p>
+     */
+    public String getNextToken() {
+        return nextToken;
+    }
+
+    /**
+     * <p>
+     * If the result of the request to ListTerminologies was truncated, include
+     * the NextToken to fetch the next group of custom terminologies.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 8192<br/>
+     * <b>Pattern: </b>\p{ASCII}{0,8192}<br/>
+     *
+     * @param nextToken <p>
+     *            If the result of the request to ListTerminologies was
+     *            truncated, include the NextToken to fetch the next group of
+     *            custom terminologies.
+     *            </p>
+     */
+    public void setNextToken(String nextToken) {
+        this.nextToken = nextToken;
+    }
+
+    /**
+     * <p>
+     * If the result of the request to ListTerminologies was truncated, include
+     * the NextToken to fetch the next group of custom terminologies.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 8192<br/>
+     * <b>Pattern: </b>\p{ASCII}{0,8192}<br/>
+     *
+     * @param nextToken <p>
+     *            If the result of the request to ListTerminologies was
+     *            truncated, include the NextToken to fetch the next group of
+     *            custom terminologies.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListTerminologiesRequest withNextToken(String nextToken) {
+        this.nextToken = nextToken;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The maximum number of custom terminologies returned per list request.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 500<br/>
+     *
+     * @return <p>
+     *         The maximum number of custom terminologies returned per list
+     *         request.
+     *         </p>
+     */
+    public Integer getMaxResults() {
+        return maxResults;
+    }
+
+    /**
+     * <p>
+     * The maximum number of custom terminologies returned per list request.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 500<br/>
+     *
+     * @param maxResults <p>
+     *            The maximum number of custom terminologies returned per list
+     *            request.
+     *            </p>
+     */
+    public void setMaxResults(Integer maxResults) {
+        this.maxResults = maxResults;
+    }
+
+    /**
+     * <p>
+     * The maximum number of custom terminologies returned per list request.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 500<br/>
+     *
+     * @param maxResults <p>
+     *            The maximum number of custom terminologies returned per list
+     *            request.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListTerminologiesRequest withMaxResults(Integer maxResults) {
+        this.maxResults = maxResults;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getNextToken() != null)
+            sb.append("NextToken: " + getNextToken() + ",");
+        if (getMaxResults() != null)
+            sb.append("MaxResults: " + getMaxResults());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getNextToken() == null) ? 0 : getNextToken().hashCode());
+        hashCode = prime * hashCode + ((getMaxResults() == null) ? 0 : getMaxResults().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ListTerminologiesRequest == false)
+            return false;
+        ListTerminologiesRequest other = (ListTerminologiesRequest) obj;
+
+        if (other.getNextToken() == null ^ this.getNextToken() == null)
+            return false;
+        if (other.getNextToken() != null
+                && other.getNextToken().equals(this.getNextToken()) == false)
+            return false;
+        if (other.getMaxResults() == null ^ this.getMaxResults() == null)
+            return false;
+        if (other.getMaxResults() != null
+                && other.getMaxResults().equals(this.getMaxResults()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ListTerminologiesResult.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ListTerminologiesResult.java
new file mode 100644
index 0000000000..b7b94daaa8
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ListTerminologiesResult.java
@@ -0,0 +1,247 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import java.io.Serializable;
+
+public class ListTerminologiesResult implements Serializable {
+    /**
+     * <p>
+     * The properties list of the custom terminologies returned on the list
+     * request.
+     * </p>
+     */
+    private java.util.List<TerminologyProperties> terminologyPropertiesList;
+
+    /**
+     * <p>
+     * If the response to the ListTerminologies was truncated, the NextToken
+     * fetches the next group of custom terminologies.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 8192<br/>
+     * <b>Pattern: </b>\p{ASCII}{0,8192}<br/>
+     */
+    private String nextToken;
+
+    /**
+     * <p>
+     * The properties list of the custom terminologies returned on the list
+     * request.
+     * </p>
+     *
+     * @return <p>
+     *         The properties list of the custom terminologies returned on the
+     *         list request.
+     *         </p>
+     */
+    public java.util.List<TerminologyProperties> getTerminologyPropertiesList() {
+        return terminologyPropertiesList;
+    }
+
+    /**
+     * <p>
+     * The properties list of the custom terminologies returned on the list
+     * request.
+     * </p>
+     *
+     * @param terminologyPropertiesList <p>
+     *            The properties list of the custom terminologies returned on
+     *            the list request.
+     *            </p>
+     */
+    public void setTerminologyPropertiesList(
+            java.util.Collection<TerminologyProperties> terminologyPropertiesList) {
+        if (terminologyPropertiesList == null) {
+            this.terminologyPropertiesList = null;
+            return;
+        }
+
+        this.terminologyPropertiesList = new java.util.ArrayList<TerminologyProperties>(
+                terminologyPropertiesList);
+    }
+
+    /**
+     * <p>
+     * The properties list of the custom terminologies returned on the list
+     * request.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param terminologyPropertiesList <p>
+     *            The properties list of the custom terminologies returned on
+     *            the list request.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListTerminologiesResult withTerminologyPropertiesList(
+            TerminologyProperties... terminologyPropertiesList) {
+        if (getTerminologyPropertiesList() == null) {
+            this.terminologyPropertiesList = new java.util.ArrayList<TerminologyProperties>(
+                    terminologyPropertiesList.length);
+        }
+        for (TerminologyProperties value : terminologyPropertiesList) {
+            this.terminologyPropertiesList.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * The properties list of the custom terminologies returned on the list
+     * request.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param terminologyPropertiesList <p>
+     *            The properties list of the custom terminologies returned on
+     *            the list request.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListTerminologiesResult withTerminologyPropertiesList(
+            java.util.Collection<TerminologyProperties> terminologyPropertiesList) {
+        setTerminologyPropertiesList(terminologyPropertiesList);
+        return this;
+    }
+
+    /**
+     * <p>
+     * If the response to the ListTerminologies was truncated, the NextToken
+     * fetches the next group of custom terminologies.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 8192<br/>
+     * <b>Pattern: </b>\p{ASCII}{0,8192}<br/>
+     *
+     * @return <p>
+     *         If the response to the ListTerminologies was truncated, the
+     *         NextToken fetches the next group of custom terminologies.
+     *         </p>
+     */
+    public String getNextToken() {
+        return nextToken;
+    }
+
+    /**
+     * <p>
+     * If the response to the ListTerminologies was truncated, the NextToken
+     * fetches the next group of custom terminologies.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 8192<br/>
+     * <b>Pattern: </b>\p{ASCII}{0,8192}<br/>
+     *
+     * @param nextToken <p>
+     *            If the response to the ListTerminologies was truncated, the
+     *            NextToken fetches the next group of custom terminologies.
+     *            </p>
+     */
+    public void setNextToken(String nextToken) {
+        this.nextToken = nextToken;
+    }
+
+    /**
+     * <p>
+     * If the response to the ListTerminologies was truncated, the NextToken
+     * fetches the next group of custom terminologies.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 8192<br/>
+     * <b>Pattern: </b>\p{ASCII}{0,8192}<br/>
+     *
+     * @param nextToken <p>
+     *            If the response to the ListTerminologies was truncated, the
+     *            NextToken fetches the next group of custom terminologies.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListTerminologiesResult withNextToken(String nextToken) {
+        this.nextToken = nextToken;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getTerminologyPropertiesList() != null)
+            sb.append("TerminologyPropertiesList: " + getTerminologyPropertiesList() + ",");
+        if (getNextToken() != null)
+            sb.append("NextToken: " + getNextToken());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime
+                * hashCode
+                + ((getTerminologyPropertiesList() == null) ? 0 : getTerminologyPropertiesList()
+                        .hashCode());
+        hashCode = prime * hashCode + ((getNextToken() == null) ? 0 : getNextToken().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ListTerminologiesResult == false)
+            return false;
+        ListTerminologiesResult other = (ListTerminologiesResult) obj;
+
+        if (other.getTerminologyPropertiesList() == null
+                ^ this.getTerminologyPropertiesList() == null)
+            return false;
+        if (other.getTerminologyPropertiesList() != null
+                && other.getTerminologyPropertiesList().equals(this.getTerminologyPropertiesList()) == false)
+            return false;
+        if (other.getNextToken() == null ^ this.getNextToken() == null)
+            return false;
+        if (other.getNextToken() != null
+                && other.getNextToken().equals(this.getNextToken()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/MergeStrategy.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/MergeStrategy.java
new file mode 100644
index 0000000000..4362f008ac
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/MergeStrategy.java
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Merge Strategy
+ */
+public enum MergeStrategy {
+
+    OVERWRITE("OVERWRITE");
+
+    private String value;
+
+    private MergeStrategy(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, MergeStrategy> enumMap;
+    static {
+        enumMap = new HashMap<String, MergeStrategy>();
+        enumMap.put("OVERWRITE", OVERWRITE);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return MergeStrategy corresponding to the value
+     */
+    public static MergeStrategy fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ResourceNotFoundException.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ResourceNotFoundException.java
new file mode 100644
index 0000000000..532c7a801d
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ResourceNotFoundException.java
@@ -0,0 +1,39 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import com.amazonaws.AmazonServiceException;
+
+/**
+ * <p>
+ * The resource you are looking for has not been found. Review the resource
+ * you're looking for and see if a different resource will accomplish your needs
+ * before retrying the revised request. .
+ * </p>
+ */
+public class ResourceNotFoundException extends AmazonServiceException {
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * Constructs a new ResourceNotFoundException with the specified error
+     * message.
+     *
+     * @param message Describes the error encountered.
+     */
+    public ResourceNotFoundException(String message) {
+        super(message);
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ServiceUnavailableException.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ServiceUnavailableException.java
index 9951e9fd6c..52be1fe9c3 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ServiceUnavailableException.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/ServiceUnavailableException.java
@@ -19,7 +19,8 @@
 
 /**
  * <p>
- * Amazon Translate is unavailable. Retry your request later.
+ * The Amazon Translate service is temporarily unavailable. Please wait a bit
+ * and then retry your request.
  * </p>
  */
 public class ServiceUnavailableException extends AmazonServiceException {
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/Term.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/Term.java
new file mode 100644
index 0000000000..a382242fda
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/Term.java
@@ -0,0 +1,220 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * The term being translated by the custom terminology.
+ * </p>
+ */
+public class Term implements Serializable {
+    /**
+     * <p>
+     * The source text of the term being translated by the custom terminology.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
+     */
+    private String sourceText;
+
+    /**
+     * <p>
+     * The target text of the term being translated by the custom terminology.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
+     */
+    private String targetText;
+
+    /**
+     * <p>
+     * The source text of the term being translated by the custom terminology.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
+     *
+     * @return <p>
+     *         The source text of the term being translated by the custom
+     *         terminology.
+     *         </p>
+     */
+    public String getSourceText() {
+        return sourceText;
+    }
+
+    /**
+     * <p>
+     * The source text of the term being translated by the custom terminology.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
+     *
+     * @param sourceText <p>
+     *            The source text of the term being translated by the custom
+     *            terminology.
+     *            </p>
+     */
+    public void setSourceText(String sourceText) {
+        this.sourceText = sourceText;
+    }
+
+    /**
+     * <p>
+     * The source text of the term being translated by the custom terminology.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
+     *
+     * @param sourceText <p>
+     *            The source text of the term being translated by the custom
+     *            terminology.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public Term withSourceText(String sourceText) {
+        this.sourceText = sourceText;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The target text of the term being translated by the custom terminology.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
+     *
+     * @return <p>
+     *         The target text of the term being translated by the custom
+     *         terminology.
+     *         </p>
+     */
+    public String getTargetText() {
+        return targetText;
+    }
+
+    /**
+     * <p>
+     * The target text of the term being translated by the custom terminology.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
+     *
+     * @param targetText <p>
+     *            The target text of the term being translated by the custom
+     *            terminology.
+     *            </p>
+     */
+    public void setTargetText(String targetText) {
+        this.targetText = targetText;
+    }
+
+    /**
+     * <p>
+     * The target text of the term being translated by the custom terminology.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
+     *
+     * @param targetText <p>
+     *            The target text of the term being translated by the custom
+     *            terminology.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public Term withTargetText(String targetText) {
+        this.targetText = targetText;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getSourceText() != null)
+            sb.append("SourceText: " + getSourceText() + ",");
+        if (getTargetText() != null)
+            sb.append("TargetText: " + getTargetText());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getSourceText() == null) ? 0 : getSourceText().hashCode());
+        hashCode = prime * hashCode + ((getTargetText() == null) ? 0 : getTargetText().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof Term == false)
+            return false;
+        Term other = (Term) obj;
+
+        if (other.getSourceText() == null ^ this.getSourceText() == null)
+            return false;
+        if (other.getSourceText() != null
+                && other.getSourceText().equals(this.getSourceText()) == false)
+            return false;
+        if (other.getTargetText() == null ^ this.getTargetText() == null)
+            return false;
+        if (other.getTargetText() != null
+                && other.getTargetText().equals(this.getTargetText()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TerminologyData.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TerminologyData.java
new file mode 100644
index 0000000000..1303a6030a
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TerminologyData.java
@@ -0,0 +1,247 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * The data associated with the custom terminology.
+ * </p>
+ */
+public class TerminologyData implements Serializable {
+    /**
+     * <p>
+     * The file containing the custom terminology data.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10485760<br/>
+     */
+    private java.nio.ByteBuffer file;
+
+    /**
+     * <p>
+     * The data format of the custom terminology. Either CSV or TMX.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CSV, TMX
+     */
+    private String format;
+
+    /**
+     * <p>
+     * The file containing the custom terminology data.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10485760<br/>
+     *
+     * @return <p>
+     *         The file containing the custom terminology data.
+     *         </p>
+     */
+    public java.nio.ByteBuffer getFile() {
+        return file;
+    }
+
+    /**
+     * <p>
+     * The file containing the custom terminology data.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10485760<br/>
+     *
+     * @param file <p>
+     *            The file containing the custom terminology data.
+     *            </p>
+     */
+    public void setFile(java.nio.ByteBuffer file) {
+        this.file = file;
+    }
+
+    /**
+     * <p>
+     * The file containing the custom terminology data.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10485760<br/>
+     *
+     * @param file <p>
+     *            The file containing the custom terminology data.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TerminologyData withFile(java.nio.ByteBuffer file) {
+        this.file = file;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The data format of the custom terminology. Either CSV or TMX.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CSV, TMX
+     *
+     * @return <p>
+     *         The data format of the custom terminology. Either CSV or TMX.
+     *         </p>
+     * @see TerminologyDataFormat
+     */
+    public String getFormat() {
+        return format;
+    }
+
+    /**
+     * <p>
+     * The data format of the custom terminology. Either CSV or TMX.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CSV, TMX
+     *
+     * @param format <p>
+     *            The data format of the custom terminology. Either CSV or TMX.
+     *            </p>
+     * @see TerminologyDataFormat
+     */
+    public void setFormat(String format) {
+        this.format = format;
+    }
+
+    /**
+     * <p>
+     * The data format of the custom terminology. Either CSV or TMX.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CSV, TMX
+     *
+     * @param format <p>
+     *            The data format of the custom terminology. Either CSV or TMX.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see TerminologyDataFormat
+     */
+    public TerminologyData withFormat(String format) {
+        this.format = format;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The data format of the custom terminology. Either CSV or TMX.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CSV, TMX
+     *
+     * @param format <p>
+     *            The data format of the custom terminology. Either CSV or TMX.
+     *            </p>
+     * @see TerminologyDataFormat
+     */
+    public void setFormat(TerminologyDataFormat format) {
+        this.format = format.toString();
+    }
+
+    /**
+     * <p>
+     * The data format of the custom terminology. Either CSV or TMX.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>CSV, TMX
+     *
+     * @param format <p>
+     *            The data format of the custom terminology. Either CSV or TMX.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see TerminologyDataFormat
+     */
+    public TerminologyData withFormat(TerminologyDataFormat format) {
+        this.format = format.toString();
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getFile() != null)
+            sb.append("File: " + getFile() + ",");
+        if (getFormat() != null)
+            sb.append("Format: " + getFormat());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getFile() == null) ? 0 : getFile().hashCode());
+        hashCode = prime * hashCode + ((getFormat() == null) ? 0 : getFormat().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof TerminologyData == false)
+            return false;
+        TerminologyData other = (TerminologyData) obj;
+
+        if (other.getFile() == null ^ this.getFile() == null)
+            return false;
+        if (other.getFile() != null && other.getFile().equals(this.getFile()) == false)
+            return false;
+        if (other.getFormat() == null ^ this.getFormat() == null)
+            return false;
+        if (other.getFormat() != null && other.getFormat().equals(this.getFormat()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TerminologyDataFormat.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TerminologyDataFormat.java
new file mode 100644
index 0000000000..3dfec47076
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TerminologyDataFormat.java
@@ -0,0 +1,62 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Terminology Data Format
+ */
+public enum TerminologyDataFormat {
+
+    CSV("CSV"),
+    TMX("TMX");
+
+    private String value;
+
+    private TerminologyDataFormat(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, TerminologyDataFormat> enumMap;
+    static {
+        enumMap = new HashMap<String, TerminologyDataFormat>();
+        enumMap.put("CSV", CSV);
+        enumMap.put("TMX", TMX);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return TerminologyDataFormat corresponding to the value
+     */
+    public static TerminologyDataFormat fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TerminologyDataLocation.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TerminologyDataLocation.java
new file mode 100644
index 0000000000..d9f6af7f82
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TerminologyDataLocation.java
@@ -0,0 +1,214 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * The location of the custom terminology data.
+ * </p>
+ */
+public class TerminologyDataLocation implements Serializable {
+    /**
+     * <p>
+     * The repository type for the custom terminology data.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
+     */
+    private String repositoryType;
+
+    /**
+     * <p>
+     * The location of the custom terminology data.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
+     */
+    private String location;
+
+    /**
+     * <p>
+     * The repository type for the custom terminology data.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
+     *
+     * @return <p>
+     *         The repository type for the custom terminology data.
+     *         </p>
+     */
+    public String getRepositoryType() {
+        return repositoryType;
+    }
+
+    /**
+     * <p>
+     * The repository type for the custom terminology data.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
+     *
+     * @param repositoryType <p>
+     *            The repository type for the custom terminology data.
+     *            </p>
+     */
+    public void setRepositoryType(String repositoryType) {
+        this.repositoryType = repositoryType;
+    }
+
+    /**
+     * <p>
+     * The repository type for the custom terminology data.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
+     *
+     * @param repositoryType <p>
+     *            The repository type for the custom terminology data.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TerminologyDataLocation withRepositoryType(String repositoryType) {
+        this.repositoryType = repositoryType;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The location of the custom terminology data.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
+     *
+     * @return <p>
+     *         The location of the custom terminology data.
+     *         </p>
+     */
+    public String getLocation() {
+        return location;
+    }
+
+    /**
+     * <p>
+     * The location of the custom terminology data.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
+     *
+     * @param location <p>
+     *            The location of the custom terminology data.
+     *            </p>
+     */
+    public void setLocation(String location) {
+        this.location = location;
+    }
+
+    /**
+     * <p>
+     * The location of the custom terminology data.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
+     *
+     * @param location <p>
+     *            The location of the custom terminology data.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TerminologyDataLocation withLocation(String location) {
+        this.location = location;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getRepositoryType() != null)
+            sb.append("RepositoryType: " + getRepositoryType() + ",");
+        if (getLocation() != null)
+            sb.append("Location: " + getLocation());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getRepositoryType() == null) ? 0 : getRepositoryType().hashCode());
+        hashCode = prime * hashCode + ((getLocation() == null) ? 0 : getLocation().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof TerminologyDataLocation == false)
+            return false;
+        TerminologyDataLocation other = (TerminologyDataLocation) obj;
+
+        if (other.getRepositoryType() == null ^ this.getRepositoryType() == null)
+            return false;
+        if (other.getRepositoryType() != null
+                && other.getRepositoryType().equals(this.getRepositoryType()) == false)
+            return false;
+        if (other.getLocation() == null ^ this.getLocation() == null)
+            return false;
+        if (other.getLocation() != null && other.getLocation().equals(this.getLocation()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TerminologyProperties.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TerminologyProperties.java
new file mode 100644
index 0000000000..75604b3ca8
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TerminologyProperties.java
@@ -0,0 +1,793 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * The properties of the custom terminology.
+ * </p>
+ */
+public class TerminologyProperties implements Serializable {
+    /**
+     * <p>
+     * The name of the custom terminology.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     */
+    private String name;
+
+    /**
+     * <p>
+     * The description of the custom terminology properties.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 256<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,256}<br/>
+     */
+    private String description;
+
+    /**
+     * <p>
+     * The Amazon Resource Name (ARN) of the custom terminology.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Pattern:
+     * </b>^arn:aws((-us-gov)|(-cn))?:translate:[a-zA-Z0-9-]+:[0-9]{12
+     * }:terminology/.+?/.+?$<br/>
+     */
+    private String arn;
+
+    /**
+     * <p>
+     * The language code for the source text of the translation request for
+     * which the custom terminology is being used.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>2 - 5<br/>
+     */
+    private String sourceLanguageCode;
+
+    /**
+     * <p>
+     * The language codes for the target languages available with the custom
+     * terminology file. All possible target languages are returned in array.
+     * </p>
+     */
+    private java.util.List<String> targetLanguageCodes;
+
+    /**
+     * <p>
+     * The encryption key for the custom terminology.
+     * </p>
+     */
+    private EncryptionKey encryptionKey;
+
+    /**
+     * <p>
+     * The size of the file used when importing a custom terminology.
+     * </p>
+     */
+    private Integer sizeBytes;
+
+    /**
+     * <p>
+     * The number of terms included in the custom terminology.
+     * </p>
+     */
+    private Integer termCount;
+
+    /**
+     * <p>
+     * The time at which the custom terminology was created, based on the
+     * timestamp.
+     * </p>
+     */
+    private java.util.Date createdAt;
+
+    /**
+     * <p>
+     * The time at which the custom terminology was last update, based on the
+     * timestamp.
+     * </p>
+     */
+    private java.util.Date lastUpdatedAt;
+
+    /**
+     * <p>
+     * The name of the custom terminology.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     *
+     * @return <p>
+     *         The name of the custom terminology.
+     *         </p>
+     */
+    public String getName() {
+        return name;
+    }
+
+    /**
+     * <p>
+     * The name of the custom terminology.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     *
+     * @param name <p>
+     *            The name of the custom terminology.
+     *            </p>
+     */
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    /**
+     * <p>
+     * The name of the custom terminology.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 256<br/>
+     * <b>Pattern: </b>^([A-Za-z0-9-]_?)+$<br/>
+     *
+     * @param name <p>
+     *            The name of the custom terminology.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TerminologyProperties withName(String name) {
+        this.name = name;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The description of the custom terminology properties.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 256<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,256}<br/>
+     *
+     * @return <p>
+     *         The description of the custom terminology properties.
+     *         </p>
+     */
+    public String getDescription() {
+        return description;
+    }
+
+    /**
+     * <p>
+     * The description of the custom terminology properties.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 256<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,256}<br/>
+     *
+     * @param description <p>
+     *            The description of the custom terminology properties.
+     *            </p>
+     */
+    public void setDescription(String description) {
+        this.description = description;
+    }
+
+    /**
+     * <p>
+     * The description of the custom terminology properties.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 256<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,256}<br/>
+     *
+     * @param description <p>
+     *            The description of the custom terminology properties.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TerminologyProperties withDescription(String description) {
+        this.description = description;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The Amazon Resource Name (ARN) of the custom terminology.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Pattern:
+     * </b>^arn:aws((-us-gov)|(-cn))?:translate:[a-zA-Z0-9-]+:[0-9]{12
+     * }:terminology/.+?/.+?$<br/>
+     *
+     * @return <p>
+     *         The Amazon Resource Name (ARN) of the custom terminology.
+     *         </p>
+     */
+    public String getArn() {
+        return arn;
+    }
+
+    /**
+     * <p>
+     * The Amazon Resource Name (ARN) of the custom terminology.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Pattern:
+     * </b>^arn:aws((-us-gov)|(-cn))?:translate:[a-zA-Z0-9-]+:[0-9]{12
+     * }:terminology/.+?/.+?$<br/>
+     *
+     * @param arn <p>
+     *            The Amazon Resource Name (ARN) of the custom terminology.
+     *            </p>
+     */
+    public void setArn(String arn) {
+        this.arn = arn;
+    }
+
+    /**
+     * <p>
+     * The Amazon Resource Name (ARN) of the custom terminology.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Pattern:
+     * </b>^arn:aws((-us-gov)|(-cn))?:translate:[a-zA-Z0-9-]+:[0-9]{12
+     * }:terminology/.+?/.+?$<br/>
+     *
+     * @param arn <p>
+     *            The Amazon Resource Name (ARN) of the custom terminology.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TerminologyProperties withArn(String arn) {
+        this.arn = arn;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The language code for the source text of the translation request for
+     * which the custom terminology is being used.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>2 - 5<br/>
+     *
+     * @return <p>
+     *         The language code for the source text of the translation request
+     *         for which the custom terminology is being used.
+     *         </p>
+     */
+    public String getSourceLanguageCode() {
+        return sourceLanguageCode;
+    }
+
+    /**
+     * <p>
+     * The language code for the source text of the translation request for
+     * which the custom terminology is being used.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>2 - 5<br/>
+     *
+     * @param sourceLanguageCode <p>
+     *            The language code for the source text of the translation
+     *            request for which the custom terminology is being used.
+     *            </p>
+     */
+    public void setSourceLanguageCode(String sourceLanguageCode) {
+        this.sourceLanguageCode = sourceLanguageCode;
+    }
+
+    /**
+     * <p>
+     * The language code for the source text of the translation request for
+     * which the custom terminology is being used.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>2 - 5<br/>
+     *
+     * @param sourceLanguageCode <p>
+     *            The language code for the source text of the translation
+     *            request for which the custom terminology is being used.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TerminologyProperties withSourceLanguageCode(String sourceLanguageCode) {
+        this.sourceLanguageCode = sourceLanguageCode;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The language codes for the target languages available with the custom
+     * terminology file. All possible target languages are returned in array.
+     * </p>
+     *
+     * @return <p>
+     *         The language codes for the target languages available with the
+     *         custom terminology file. All possible target languages are
+     *         returned in array.
+     *         </p>
+     */
+    public java.util.List<String> getTargetLanguageCodes() {
+        return targetLanguageCodes;
+    }
+
+    /**
+     * <p>
+     * The language codes for the target languages available with the custom
+     * terminology file. All possible target languages are returned in array.
+     * </p>
+     *
+     * @param targetLanguageCodes <p>
+     *            The language codes for the target languages available with the
+     *            custom terminology file. All possible target languages are
+     *            returned in array.
+     *            </p>
+     */
+    public void setTargetLanguageCodes(java.util.Collection<String> targetLanguageCodes) {
+        if (targetLanguageCodes == null) {
+            this.targetLanguageCodes = null;
+            return;
+        }
+
+        this.targetLanguageCodes = new java.util.ArrayList<String>(targetLanguageCodes);
+    }
+
+    /**
+     * <p>
+     * The language codes for the target languages available with the custom
+     * terminology file. All possible target languages are returned in array.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param targetLanguageCodes <p>
+     *            The language codes for the target languages available with the
+     *            custom terminology file. All possible target languages are
+     *            returned in array.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TerminologyProperties withTargetLanguageCodes(String... targetLanguageCodes) {
+        if (getTargetLanguageCodes() == null) {
+            this.targetLanguageCodes = new java.util.ArrayList<String>(targetLanguageCodes.length);
+        }
+        for (String value : targetLanguageCodes) {
+            this.targetLanguageCodes.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * The language codes for the target languages available with the custom
+     * terminology file. All possible target languages are returned in array.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param targetLanguageCodes <p>
+     *            The language codes for the target languages available with the
+     *            custom terminology file. All possible target languages are
+     *            returned in array.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TerminologyProperties withTargetLanguageCodes(
+            java.util.Collection<String> targetLanguageCodes) {
+        setTargetLanguageCodes(targetLanguageCodes);
+        return this;
+    }
+
+    /**
+     * <p>
+     * The encryption key for the custom terminology.
+     * </p>
+     *
+     * @return <p>
+     *         The encryption key for the custom terminology.
+     *         </p>
+     */
+    public EncryptionKey getEncryptionKey() {
+        return encryptionKey;
+    }
+
+    /**
+     * <p>
+     * The encryption key for the custom terminology.
+     * </p>
+     *
+     * @param encryptionKey <p>
+     *            The encryption key for the custom terminology.
+     *            </p>
+     */
+    public void setEncryptionKey(EncryptionKey encryptionKey) {
+        this.encryptionKey = encryptionKey;
+    }
+
+    /**
+     * <p>
+     * The encryption key for the custom terminology.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param encryptionKey <p>
+     *            The encryption key for the custom terminology.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TerminologyProperties withEncryptionKey(EncryptionKey encryptionKey) {
+        this.encryptionKey = encryptionKey;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The size of the file used when importing a custom terminology.
+     * </p>
+     *
+     * @return <p>
+     *         The size of the file used when importing a custom terminology.
+     *         </p>
+     */
+    public Integer getSizeBytes() {
+        return sizeBytes;
+    }
+
+    /**
+     * <p>
+     * The size of the file used when importing a custom terminology.
+     * </p>
+     *
+     * @param sizeBytes <p>
+     *            The size of the file used when importing a custom terminology.
+     *            </p>
+     */
+    public void setSizeBytes(Integer sizeBytes) {
+        this.sizeBytes = sizeBytes;
+    }
+
+    /**
+     * <p>
+     * The size of the file used when importing a custom terminology.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param sizeBytes <p>
+     *            The size of the file used when importing a custom terminology.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TerminologyProperties withSizeBytes(Integer sizeBytes) {
+        this.sizeBytes = sizeBytes;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The number of terms included in the custom terminology.
+     * </p>
+     *
+     * @return <p>
+     *         The number of terms included in the custom terminology.
+     *         </p>
+     */
+    public Integer getTermCount() {
+        return termCount;
+    }
+
+    /**
+     * <p>
+     * The number of terms included in the custom terminology.
+     * </p>
+     *
+     * @param termCount <p>
+     *            The number of terms included in the custom terminology.
+     *            </p>
+     */
+    public void setTermCount(Integer termCount) {
+        this.termCount = termCount;
+    }
+
+    /**
+     * <p>
+     * The number of terms included in the custom terminology.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param termCount <p>
+     *            The number of terms included in the custom terminology.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TerminologyProperties withTermCount(Integer termCount) {
+        this.termCount = termCount;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The time at which the custom terminology was created, based on the
+     * timestamp.
+     * </p>
+     *
+     * @return <p>
+     *         The time at which the custom terminology was created, based on
+     *         the timestamp.
+     *         </p>
+     */
+    public java.util.Date getCreatedAt() {
+        return createdAt;
+    }
+
+    /**
+     * <p>
+     * The time at which the custom terminology was created, based on the
+     * timestamp.
+     * </p>
+     *
+     * @param createdAt <p>
+     *            The time at which the custom terminology was created, based on
+     *            the timestamp.
+     *            </p>
+     */
+    public void setCreatedAt(java.util.Date createdAt) {
+        this.createdAt = createdAt;
+    }
+
+    /**
+     * <p>
+     * The time at which the custom terminology was created, based on the
+     * timestamp.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param createdAt <p>
+     *            The time at which the custom terminology was created, based on
+     *            the timestamp.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TerminologyProperties withCreatedAt(java.util.Date createdAt) {
+        this.createdAt = createdAt;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The time at which the custom terminology was last update, based on the
+     * timestamp.
+     * </p>
+     *
+     * @return <p>
+     *         The time at which the custom terminology was last update, based
+     *         on the timestamp.
+     *         </p>
+     */
+    public java.util.Date getLastUpdatedAt() {
+        return lastUpdatedAt;
+    }
+
+    /**
+     * <p>
+     * The time at which the custom terminology was last update, based on the
+     * timestamp.
+     * </p>
+     *
+     * @param lastUpdatedAt <p>
+     *            The time at which the custom terminology was last update,
+     *            based on the timestamp.
+     *            </p>
+     */
+    public void setLastUpdatedAt(java.util.Date lastUpdatedAt) {
+        this.lastUpdatedAt = lastUpdatedAt;
+    }
+
+    /**
+     * <p>
+     * The time at which the custom terminology was last update, based on the
+     * timestamp.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastUpdatedAt <p>
+     *            The time at which the custom terminology was last update,
+     *            based on the timestamp.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TerminologyProperties withLastUpdatedAt(java.util.Date lastUpdatedAt) {
+        this.lastUpdatedAt = lastUpdatedAt;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getName() != null)
+            sb.append("Name: " + getName() + ",");
+        if (getDescription() != null)
+            sb.append("Description: " + getDescription() + ",");
+        if (getArn() != null)
+            sb.append("Arn: " + getArn() + ",");
+        if (getSourceLanguageCode() != null)
+            sb.append("SourceLanguageCode: " + getSourceLanguageCode() + ",");
+        if (getTargetLanguageCodes() != null)
+            sb.append("TargetLanguageCodes: " + getTargetLanguageCodes() + ",");
+        if (getEncryptionKey() != null)
+            sb.append("EncryptionKey: " + getEncryptionKey() + ",");
+        if (getSizeBytes() != null)
+            sb.append("SizeBytes: " + getSizeBytes() + ",");
+        if (getTermCount() != null)
+            sb.append("TermCount: " + getTermCount() + ",");
+        if (getCreatedAt() != null)
+            sb.append("CreatedAt: " + getCreatedAt() + ",");
+        if (getLastUpdatedAt() != null)
+            sb.append("LastUpdatedAt: " + getLastUpdatedAt());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getName() == null) ? 0 : getName().hashCode());
+        hashCode = prime * hashCode
+                + ((getDescription() == null) ? 0 : getDescription().hashCode());
+        hashCode = prime * hashCode + ((getArn() == null) ? 0 : getArn().hashCode());
+        hashCode = prime * hashCode
+                + ((getSourceLanguageCode() == null) ? 0 : getSourceLanguageCode().hashCode());
+        hashCode = prime * hashCode
+                + ((getTargetLanguageCodes() == null) ? 0 : getTargetLanguageCodes().hashCode());
+        hashCode = prime * hashCode
+                + ((getEncryptionKey() == null) ? 0 : getEncryptionKey().hashCode());
+        hashCode = prime * hashCode + ((getSizeBytes() == null) ? 0 : getSizeBytes().hashCode());
+        hashCode = prime * hashCode + ((getTermCount() == null) ? 0 : getTermCount().hashCode());
+        hashCode = prime * hashCode + ((getCreatedAt() == null) ? 0 : getCreatedAt().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastUpdatedAt() == null) ? 0 : getLastUpdatedAt().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof TerminologyProperties == false)
+            return false;
+        TerminologyProperties other = (TerminologyProperties) obj;
+
+        if (other.getName() == null ^ this.getName() == null)
+            return false;
+        if (other.getName() != null && other.getName().equals(this.getName()) == false)
+            return false;
+        if (other.getDescription() == null ^ this.getDescription() == null)
+            return false;
+        if (other.getDescription() != null
+                && other.getDescription().equals(this.getDescription()) == false)
+            return false;
+        if (other.getArn() == null ^ this.getArn() == null)
+            return false;
+        if (other.getArn() != null && other.getArn().equals(this.getArn()) == false)
+            return false;
+        if (other.getSourceLanguageCode() == null ^ this.getSourceLanguageCode() == null)
+            return false;
+        if (other.getSourceLanguageCode() != null
+                && other.getSourceLanguageCode().equals(this.getSourceLanguageCode()) == false)
+            return false;
+        if (other.getTargetLanguageCodes() == null ^ this.getTargetLanguageCodes() == null)
+            return false;
+        if (other.getTargetLanguageCodes() != null
+                && other.getTargetLanguageCodes().equals(this.getTargetLanguageCodes()) == false)
+            return false;
+        if (other.getEncryptionKey() == null ^ this.getEncryptionKey() == null)
+            return false;
+        if (other.getEncryptionKey() != null
+                && other.getEncryptionKey().equals(this.getEncryptionKey()) == false)
+            return false;
+        if (other.getSizeBytes() == null ^ this.getSizeBytes() == null)
+            return false;
+        if (other.getSizeBytes() != null
+                && other.getSizeBytes().equals(this.getSizeBytes()) == false)
+            return false;
+        if (other.getTermCount() == null ^ this.getTermCount() == null)
+            return false;
+        if (other.getTermCount() != null
+                && other.getTermCount().equals(this.getTermCount()) == false)
+            return false;
+        if (other.getCreatedAt() == null ^ this.getCreatedAt() == null)
+            return false;
+        if (other.getCreatedAt() != null
+                && other.getCreatedAt().equals(this.getCreatedAt()) == false)
+            return false;
+        if (other.getLastUpdatedAt() == null ^ this.getLastUpdatedAt() == null)
+            return false;
+        if (other.getLastUpdatedAt() != null
+                && other.getLastUpdatedAt().equals(this.getLastUpdatedAt()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TextSizeLimitExceededException.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TextSizeLimitExceededException.java
index 537d82aec1..f3cd67c704 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TextSizeLimitExceededException.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TextSizeLimitExceededException.java
@@ -19,8 +19,8 @@
 
 /**
  * <p>
- * The size of the input text exceeds the length constraint for the
- * <code>Text</code> field. Try again with a shorter text.
+ * The size of the text you submitted exceeds the size limit. Reduce the size of
+ * the text or use a smaller document and then retry your request.
  * </p>
  */
 public class TextSizeLimitExceededException extends AmazonServiceException {
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TooManyRequestsException.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TooManyRequestsException.java
index 866b93dcce..1c536eb512 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TooManyRequestsException.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TooManyRequestsException.java
@@ -19,7 +19,8 @@
 
 /**
  * <p>
- * The number of requests exceeds the limit. Resubmit your request later.
+ * You have made too many requests within a short period of time. Wait for a
+ * short time and then try your request again.
  * </p>
  */
 public class TooManyRequestsException extends AmazonServiceException {
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TranslateTextRequest.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TranslateTextRequest.java
index e3696b23b2..e86d259b6b 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TranslateTextRequest.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TranslateTextRequest.java
@@ -21,9 +21,12 @@
 
 /**
  * <p>
- * Translates input text from the source language to the target language. You
- * can translate between English (en) and one of the following languages, or
- * between one of the following languages and English.
+ * Translates input text from the source language to the target language. It is
+ * not necessary to use English (en) as either the source or the target language
+ * but not all language combinations are supported by Amazon Translate. For more
+ * information, see <a
+ * href="http://docs.aws.amazon.com/translate/latest/dg/pairs.html">Supported
+ * Language Pairs</a>.
  * </p>
  * <ul>
  * <li>
@@ -38,6 +41,36 @@
  * </li>
  * <li>
  * <p>
+ * Chinese (Traditional) (zh-TW)
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * Czech (cs)
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * Danish (da)
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * Dutch (nl)
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * English (en)
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * Finnish (fi)
+ * </p>
+ * </li>
+ * <li>
+ * <p>
  * French (fr)
  * </p>
  * </li>
@@ -48,14 +81,59 @@
  * </li>
  * <li>
  * <p>
+ * Hebrew (he)
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * Indonesian (id)
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * Italian (it)
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * Japanese (ja)
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * Korean (ko)
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * Polish (pl)
+ * </p>
+ * </li>
+ * <li>
+ * <p>
  * Portuguese (pt)
  * </p>
  * </li>
  * <li>
  * <p>
+ * Russian (ru)
+ * </p>
+ * </li>
+ * <li>
+ * <p>
  * Spanish (es)
  * </p>
  * </li>
+ * <li>
+ * <p>
+ * Swedish (sv)
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * Turkish (tr)
+ * </p>
+ * </li>
  * </ul>
  * <p>
  * To have Amazon Translate determine the source language of your text, you can
@@ -67,19 +145,29 @@
 public class TranslateTextRequest extends AmazonWebServiceRequest implements Serializable {
     /**
      * <p>
-     * The text to translate.
+     * The text to translate. The text string can be a maximum of 5,000 bytes
+     * long. Depending on your character set, this may be fewer than 5,000
+     * characters.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 5000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{1,5000}<br/>
      */
     private String text;
 
     /**
      * <p>
-     * One of the supported language codes for the source text. If the
-     * <code>TargetLanguageCode</code> is not "en", the
-     * <code>SourceLanguageCode</code> must be "en".
+     * The TerminologyNames list that is taken as input to the TranslateText
+     * request. This has a minimum length of 0 and a maximum length of 1.
+     * </p>
+     */
+    private java.util.List<String> terminologyNames;
+
+    /**
+     * <p>
+     * The language code for the language of the source text. The language must
+     * be a language supported by Amazon Translate.
      * </p>
      * <p>
      * To have Amazon Translate determine the source language of your text, you
@@ -95,9 +183,8 @@
 
     /**
      * <p>
-     * One of the supported language codes for the target text. If the
-     * <code>SourceLanguageCode</code> is not "en", the
-     * <code>TargetLanguageCode</code> must be "en".
+     * The language code requested for the language of the target text. The
+     * language must be a language supported by Amazon Translate.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -107,14 +194,19 @@
 
     /**
      * <p>
-     * The text to translate.
+     * The text to translate. The text string can be a maximum of 5,000 bytes
+     * long. Depending on your character set, this may be fewer than 5,000
+     * characters.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 5000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{1,5000}<br/>
      *
      * @return <p>
-     *         The text to translate.
+     *         The text to translate. The text string can be a maximum of 5,000
+     *         bytes long. Depending on your character set, this may be fewer
+     *         than 5,000 characters.
      *         </p>
      */
     public String getText() {
@@ -123,14 +215,19 @@ public String getText() {
 
     /**
      * <p>
-     * The text to translate.
+     * The text to translate. The text string can be a maximum of 5,000 bytes
+     * long. Depending on your character set, this may be fewer than 5,000
+     * characters.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 5000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{1,5000}<br/>
      *
      * @param text <p>
-     *            The text to translate.
+     *            The text to translate. The text string can be a maximum of
+     *            5,000 bytes long. Depending on your character set, this may be
+     *            fewer than 5,000 characters.
      *            </p>
      */
     public void setText(String text) {
@@ -139,7 +236,9 @@ public void setText(String text) {
 
     /**
      * <p>
-     * The text to translate.
+     * The text to translate. The text string can be a maximum of 5,000 bytes
+     * long. Depending on your character set, this may be fewer than 5,000
+     * characters.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -147,9 +246,12 @@ public void setText(String text) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 5000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{1,5000}<br/>
      *
      * @param text <p>
-     *            The text to translate.
+     *            The text to translate. The text string can be a maximum of
+     *            5,000 bytes long. Depending on your character set, this may be
+     *            fewer than 5,000 characters.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -161,9 +263,94 @@ public TranslateTextRequest withText(String text) {
 
     /**
      * <p>
-     * One of the supported language codes for the source text. If the
-     * <code>TargetLanguageCode</code> is not "en", the
-     * <code>SourceLanguageCode</code> must be "en".
+     * The TerminologyNames list that is taken as input to the TranslateText
+     * request. This has a minimum length of 0 and a maximum length of 1.
+     * </p>
+     *
+     * @return <p>
+     *         The TerminologyNames list that is taken as input to the
+     *         TranslateText request. This has a minimum length of 0 and a
+     *         maximum length of 1.
+     *         </p>
+     */
+    public java.util.List<String> getTerminologyNames() {
+        return terminologyNames;
+    }
+
+    /**
+     * <p>
+     * The TerminologyNames list that is taken as input to the TranslateText
+     * request. This has a minimum length of 0 and a maximum length of 1.
+     * </p>
+     *
+     * @param terminologyNames <p>
+     *            The TerminologyNames list that is taken as input to the
+     *            TranslateText request. This has a minimum length of 0 and a
+     *            maximum length of 1.
+     *            </p>
+     */
+    public void setTerminologyNames(java.util.Collection<String> terminologyNames) {
+        if (terminologyNames == null) {
+            this.terminologyNames = null;
+            return;
+        }
+
+        this.terminologyNames = new java.util.ArrayList<String>(terminologyNames);
+    }
+
+    /**
+     * <p>
+     * The TerminologyNames list that is taken as input to the TranslateText
+     * request. This has a minimum length of 0 and a maximum length of 1.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param terminologyNames <p>
+     *            The TerminologyNames list that is taken as input to the
+     *            TranslateText request. This has a minimum length of 0 and a
+     *            maximum length of 1.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TranslateTextRequest withTerminologyNames(String... terminologyNames) {
+        if (getTerminologyNames() == null) {
+            this.terminologyNames = new java.util.ArrayList<String>(terminologyNames.length);
+        }
+        for (String value : terminologyNames) {
+            this.terminologyNames.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * The TerminologyNames list that is taken as input to the TranslateText
+     * request. This has a minimum length of 0 and a maximum length of 1.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param terminologyNames <p>
+     *            The TerminologyNames list that is taken as input to the
+     *            TranslateText request. This has a minimum length of 0 and a
+     *            maximum length of 1.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TranslateTextRequest withTerminologyNames(java.util.Collection<String> terminologyNames) {
+        setTerminologyNames(terminologyNames);
+        return this;
+    }
+
+    /**
+     * <p>
+     * The language code for the language of the source text. The language must
+     * be a language supported by Amazon Translate.
      * </p>
      * <p>
      * To have Amazon Translate determine the source language of your text, you
@@ -176,9 +363,8 @@ public TranslateTextRequest withText(String text) {
      * <b>Length: </b>2 - 5<br/>
      *
      * @return <p>
-     *         One of the supported language codes for the source text. If the
-     *         <code>TargetLanguageCode</code> is not "en", the
-     *         <code>SourceLanguageCode</code> must be "en".
+     *         The language code for the language of the source text. The
+     *         language must be a language supported by Amazon Translate.
      *         </p>
      *         <p>
      *         To have Amazon Translate determine the source language of your
@@ -194,9 +380,8 @@ public String getSourceLanguageCode() {
 
     /**
      * <p>
-     * One of the supported language codes for the source text. If the
-     * <code>TargetLanguageCode</code> is not "en", the
-     * <code>SourceLanguageCode</code> must be "en".
+     * The language code for the language of the source text. The language must
+     * be a language supported by Amazon Translate.
      * </p>
      * <p>
      * To have Amazon Translate determine the source language of your text, you
@@ -209,9 +394,8 @@ public String getSourceLanguageCode() {
      * <b>Length: </b>2 - 5<br/>
      *
      * @param sourceLanguageCode <p>
-     *            One of the supported language codes for the source text. If
-     *            the <code>TargetLanguageCode</code> is not "en", the
-     *            <code>SourceLanguageCode</code> must be "en".
+     *            The language code for the language of the source text. The
+     *            language must be a language supported by Amazon Translate.
      *            </p>
      *            <p>
      *            To have Amazon Translate determine the source language of your
@@ -227,9 +411,8 @@ public void setSourceLanguageCode(String sourceLanguageCode) {
 
     /**
      * <p>
-     * One of the supported language codes for the source text. If the
-     * <code>TargetLanguageCode</code> is not "en", the
-     * <code>SourceLanguageCode</code> must be "en".
+     * The language code for the language of the source text. The language must
+     * be a language supported by Amazon Translate.
      * </p>
      * <p>
      * To have Amazon Translate determine the source language of your text, you
@@ -245,9 +428,8 @@ public void setSourceLanguageCode(String sourceLanguageCode) {
      * <b>Length: </b>2 - 5<br/>
      *
      * @param sourceLanguageCode <p>
-     *            One of the supported language codes for the source text. If
-     *            the <code>TargetLanguageCode</code> is not "en", the
-     *            <code>SourceLanguageCode</code> must be "en".
+     *            The language code for the language of the source text. The
+     *            language must be a language supported by Amazon Translate.
      *            </p>
      *            <p>
      *            To have Amazon Translate determine the source language of your
@@ -266,18 +448,16 @@ public TranslateTextRequest withSourceLanguageCode(String sourceLanguageCode) {
 
     /**
      * <p>
-     * One of the supported language codes for the target text. If the
-     * <code>SourceLanguageCode</code> is not "en", the
-     * <code>TargetLanguageCode</code> must be "en".
+     * The language code requested for the language of the target text. The
+     * language must be a language supported by Amazon Translate.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>2 - 5<br/>
      *
      * @return <p>
-     *         One of the supported language codes for the target text. If the
-     *         <code>SourceLanguageCode</code> is not "en", the
-     *         <code>TargetLanguageCode</code> must be "en".
+     *         The language code requested for the language of the target text.
+     *         The language must be a language supported by Amazon Translate.
      *         </p>
      */
     public String getTargetLanguageCode() {
@@ -286,18 +466,17 @@ public String getTargetLanguageCode() {
 
     /**
      * <p>
-     * One of the supported language codes for the target text. If the
-     * <code>SourceLanguageCode</code> is not "en", the
-     * <code>TargetLanguageCode</code> must be "en".
+     * The language code requested for the language of the target text. The
+     * language must be a language supported by Amazon Translate.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>2 - 5<br/>
      *
      * @param targetLanguageCode <p>
-     *            One of the supported language codes for the target text. If
-     *            the <code>SourceLanguageCode</code> is not "en", the
-     *            <code>TargetLanguageCode</code> must be "en".
+     *            The language code requested for the language of the target
+     *            text. The language must be a language supported by Amazon
+     *            Translate.
      *            </p>
      */
     public void setTargetLanguageCode(String targetLanguageCode) {
@@ -306,9 +485,8 @@ public void setTargetLanguageCode(String targetLanguageCode) {
 
     /**
      * <p>
-     * One of the supported language codes for the target text. If the
-     * <code>SourceLanguageCode</code> is not "en", the
-     * <code>TargetLanguageCode</code> must be "en".
+     * The language code requested for the language of the target text. The
+     * language must be a language supported by Amazon Translate.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -318,9 +496,9 @@ public void setTargetLanguageCode(String targetLanguageCode) {
      * <b>Length: </b>2 - 5<br/>
      *
      * @param targetLanguageCode <p>
-     *            One of the supported language codes for the target text. If
-     *            the <code>SourceLanguageCode</code> is not "en", the
-     *            <code>TargetLanguageCode</code> must be "en".
+     *            The language code requested for the language of the target
+     *            text. The language must be a language supported by Amazon
+     *            Translate.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -343,6 +521,8 @@ public String toString() {
         sb.append("{");
         if (getText() != null)
             sb.append("Text: " + getText() + ",");
+        if (getTerminologyNames() != null)
+            sb.append("TerminologyNames: " + getTerminologyNames() + ",");
         if (getSourceLanguageCode() != null)
             sb.append("SourceLanguageCode: " + getSourceLanguageCode() + ",");
         if (getTargetLanguageCode() != null)
@@ -357,6 +537,8 @@ public int hashCode() {
         int hashCode = 1;
 
         hashCode = prime * hashCode + ((getText() == null) ? 0 : getText().hashCode());
+        hashCode = prime * hashCode
+                + ((getTerminologyNames() == null) ? 0 : getTerminologyNames().hashCode());
         hashCode = prime * hashCode
                 + ((getSourceLanguageCode() == null) ? 0 : getSourceLanguageCode().hashCode());
         hashCode = prime * hashCode
@@ -379,6 +561,11 @@ public boolean equals(Object obj) {
             return false;
         if (other.getText() != null && other.getText().equals(this.getText()) == false)
             return false;
+        if (other.getTerminologyNames() == null ^ this.getTerminologyNames() == null)
+            return false;
+        if (other.getTerminologyNames() != null
+                && other.getTerminologyNames().equals(this.getTerminologyNames()) == false)
+            return false;
         if (other.getSourceLanguageCode() == null ^ this.getSourceLanguageCode() == null)
             return false;
         if (other.getSourceLanguageCode() != null
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TranslateTextResult.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TranslateTextResult.java
index c11b0d0425..a552cf5520 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TranslateTextResult.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/TranslateTextResult.java
@@ -20,17 +20,18 @@
 public class TranslateTextResult implements Serializable {
     /**
      * <p>
-     * The text translated into the target language.
+     * The the translated text. The maximum length of this text is 5kb.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Length: </b>1 - <br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
      */
     private String translatedText;
 
     /**
      * <p>
-     * The language code for the language of the input text.
+     * The language code for the language of the source text.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -40,7 +41,7 @@
 
     /**
      * <p>
-     * The language code for the language of the translated text.
+     * The language code for the language of the target text.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -50,14 +51,23 @@
 
     /**
      * <p>
-     * The text translated into the target language.
+     * The names of the custom terminologies applied to the input text by Amazon
+     * Translate for the translated text response.
+     * </p>
+     */
+    private java.util.List<AppliedTerminology> appliedTerminologies;
+
+    /**
+     * <p>
+     * The the translated text. The maximum length of this text is 5kb.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Length: </b>1 - <br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
      *
      * @return <p>
-     *         The text translated into the target language.
+     *         The the translated text. The maximum length of this text is 5kb.
      *         </p>
      */
     public String getTranslatedText() {
@@ -66,14 +76,16 @@ public String getTranslatedText() {
 
     /**
      * <p>
-     * The text translated into the target language.
+     * The the translated text. The maximum length of this text is 5kb.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Length: </b>1 - <br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
      *
      * @param translatedText <p>
-     *            The text translated into the target language.
+     *            The the translated text. The maximum length of this text is
+     *            5kb.
      *            </p>
      */
     public void setTranslatedText(String translatedText) {
@@ -82,17 +94,19 @@ public void setTranslatedText(String translatedText) {
 
     /**
      * <p>
-     * The text translated into the target language.
+     * The the translated text. The maximum length of this text is 5kb.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Length: </b>1 - <br/>
+     * <b>Length: </b> - 10000<br/>
+     * <b>Pattern: </b>[\P{M}\p{M}]{0,10000}<br/>
      *
      * @param translatedText <p>
-     *            The text translated into the target language.
+     *            The the translated text. The maximum length of this text is
+     *            5kb.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -104,14 +118,14 @@ public TranslateTextResult withTranslatedText(String translatedText) {
 
     /**
      * <p>
-     * The language code for the language of the input text.
+     * The language code for the language of the source text.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>2 - 5<br/>
      *
      * @return <p>
-     *         The language code for the language of the input text.
+     *         The language code for the language of the source text.
      *         </p>
      */
     public String getSourceLanguageCode() {
@@ -120,14 +134,14 @@ public String getSourceLanguageCode() {
 
     /**
      * <p>
-     * The language code for the language of the input text.
+     * The language code for the language of the source text.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>2 - 5<br/>
      *
      * @param sourceLanguageCode <p>
-     *            The language code for the language of the input text.
+     *            The language code for the language of the source text.
      *            </p>
      */
     public void setSourceLanguageCode(String sourceLanguageCode) {
@@ -136,7 +150,7 @@ public void setSourceLanguageCode(String sourceLanguageCode) {
 
     /**
      * <p>
-     * The language code for the language of the input text.
+     * The language code for the language of the source text.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -146,7 +160,7 @@ public void setSourceLanguageCode(String sourceLanguageCode) {
      * <b>Length: </b>2 - 5<br/>
      *
      * @param sourceLanguageCode <p>
-     *            The language code for the language of the input text.
+     *            The language code for the language of the source text.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -158,14 +172,14 @@ public TranslateTextResult withSourceLanguageCode(String sourceLanguageCode) {
 
     /**
      * <p>
-     * The language code for the language of the translated text.
+     * The language code for the language of the target text.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>2 - 5<br/>
      *
      * @return <p>
-     *         The language code for the language of the translated text.
+     *         The language code for the language of the target text.
      *         </p>
      */
     public String getTargetLanguageCode() {
@@ -174,14 +188,14 @@ public String getTargetLanguageCode() {
 
     /**
      * <p>
-     * The language code for the language of the translated text.
+     * The language code for the language of the target text.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>2 - 5<br/>
      *
      * @param targetLanguageCode <p>
-     *            The language code for the language of the translated text.
+     *            The language code for the language of the target text.
      *            </p>
      */
     public void setTargetLanguageCode(String targetLanguageCode) {
@@ -190,7 +204,7 @@ public void setTargetLanguageCode(String targetLanguageCode) {
 
     /**
      * <p>
-     * The language code for the language of the translated text.
+     * The language code for the language of the target text.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -200,7 +214,7 @@ public void setTargetLanguageCode(String targetLanguageCode) {
      * <b>Length: </b>2 - 5<br/>
      *
      * @param targetLanguageCode <p>
-     *            The language code for the language of the translated text.
+     *            The language code for the language of the target text.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -210,6 +224,92 @@ public TranslateTextResult withTargetLanguageCode(String targetLanguageCode) {
         return this;
     }
 
+    /**
+     * <p>
+     * The names of the custom terminologies applied to the input text by Amazon
+     * Translate for the translated text response.
+     * </p>
+     *
+     * @return <p>
+     *         The names of the custom terminologies applied to the input text
+     *         by Amazon Translate for the translated text response.
+     *         </p>
+     */
+    public java.util.List<AppliedTerminology> getAppliedTerminologies() {
+        return appliedTerminologies;
+    }
+
+    /**
+     * <p>
+     * The names of the custom terminologies applied to the input text by Amazon
+     * Translate for the translated text response.
+     * </p>
+     *
+     * @param appliedTerminologies <p>
+     *            The names of the custom terminologies applied to the input
+     *            text by Amazon Translate for the translated text response.
+     *            </p>
+     */
+    public void setAppliedTerminologies(
+            java.util.Collection<AppliedTerminology> appliedTerminologies) {
+        if (appliedTerminologies == null) {
+            this.appliedTerminologies = null;
+            return;
+        }
+
+        this.appliedTerminologies = new java.util.ArrayList<AppliedTerminology>(
+                appliedTerminologies);
+    }
+
+    /**
+     * <p>
+     * The names of the custom terminologies applied to the input text by Amazon
+     * Translate for the translated text response.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param appliedTerminologies <p>
+     *            The names of the custom terminologies applied to the input
+     *            text by Amazon Translate for the translated text response.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TranslateTextResult withAppliedTerminologies(AppliedTerminology... appliedTerminologies) {
+        if (getAppliedTerminologies() == null) {
+            this.appliedTerminologies = new java.util.ArrayList<AppliedTerminology>(
+                    appliedTerminologies.length);
+        }
+        for (AppliedTerminology value : appliedTerminologies) {
+            this.appliedTerminologies.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * The names of the custom terminologies applied to the input text by Amazon
+     * Translate for the translated text response.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param appliedTerminologies <p>
+     *            The names of the custom terminologies applied to the input
+     *            text by Amazon Translate for the translated text response.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TranslateTextResult withAppliedTerminologies(
+            java.util.Collection<AppliedTerminology> appliedTerminologies) {
+        setAppliedTerminologies(appliedTerminologies);
+        return this;
+    }
+
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -226,7 +326,9 @@ public String toString() {
         if (getSourceLanguageCode() != null)
             sb.append("SourceLanguageCode: " + getSourceLanguageCode() + ",");
         if (getTargetLanguageCode() != null)
-            sb.append("TargetLanguageCode: " + getTargetLanguageCode());
+            sb.append("TargetLanguageCode: " + getTargetLanguageCode() + ",");
+        if (getAppliedTerminologies() != null)
+            sb.append("AppliedTerminologies: " + getAppliedTerminologies());
         sb.append("}");
         return sb.toString();
     }
@@ -242,6 +344,8 @@ public int hashCode() {
                 + ((getSourceLanguageCode() == null) ? 0 : getSourceLanguageCode().hashCode());
         hashCode = prime * hashCode
                 + ((getTargetLanguageCode() == null) ? 0 : getTargetLanguageCode().hashCode());
+        hashCode = prime * hashCode
+                + ((getAppliedTerminologies() == null) ? 0 : getAppliedTerminologies().hashCode());
         return hashCode;
     }
 
@@ -271,6 +375,11 @@ public boolean equals(Object obj) {
         if (other.getTargetLanguageCode() != null
                 && other.getTargetLanguageCode().equals(this.getTargetLanguageCode()) == false)
             return false;
+        if (other.getAppliedTerminologies() == null ^ this.getAppliedTerminologies() == null)
+            return false;
+        if (other.getAppliedTerminologies() != null
+                && other.getAppliedTerminologies().equals(this.getAppliedTerminologies()) == false)
+            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/UnsupportedLanguagePairException.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/UnsupportedLanguagePairException.java
index 74076eb06d..2d6eab352a 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/UnsupportedLanguagePairException.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/UnsupportedLanguagePairException.java
@@ -19,13 +19,34 @@
 
 /**
  * <p>
- * Amazon Translate cannot translate input text in the source language into this
- * target language. For more information, see <a>how-to-error-msg</a>.
+ * Amazon Translate does not support translation from the language of the source
+ * text into the requested target language. For more information, see
+ * <a>how-to-error-msg</a>.
  * </p>
  */
 public class UnsupportedLanguagePairException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
+    /**
+     * <p>
+     * The language code for the language of the input text.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>2 - 5<br/>
+     */
+    private String sourceLanguageCode;
+
+    /**
+     * <p>
+     * The language code for the language of the translated text.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>2 - 5<br/>
+     */
+    private String targetLanguageCode;
+
     /**
      * Constructs a new UnsupportedLanguagePairException with the specified
      * error message.
@@ -35,4 +56,68 @@
     public UnsupportedLanguagePairException(String message) {
         super(message);
     }
+
+    /**
+     * <p>
+     * The language code for the language of the input text.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>2 - 5<br/>
+     *
+     * @return <p>
+     *         The language code for the language of the input text.
+     *         </p>
+     */
+    public String getSourceLanguageCode() {
+        return sourceLanguageCode;
+    }
+
+    /**
+     * <p>
+     * The language code for the language of the input text.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>2 - 5<br/>
+     *
+     * @param sourceLanguageCode <p>
+     *            The language code for the language of the input text.
+     *            </p>
+     */
+    public void setSourceLanguageCode(String sourceLanguageCode) {
+        this.sourceLanguageCode = sourceLanguageCode;
+    }
+
+    /**
+     * <p>
+     * The language code for the language of the translated text.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>2 - 5<br/>
+     *
+     * @return <p>
+     *         The language code for the language of the translated text.
+     *         </p>
+     */
+    public String getTargetLanguageCode() {
+        return targetLanguageCode;
+    }
+
+    /**
+     * <p>
+     * The language code for the language of the translated text.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>2 - 5<br/>
+     *
+     * @param targetLanguageCode <p>
+     *            The language code for the language of the translated text.
+     *            </p>
+     */
+    public void setTargetLanguageCode(String targetLanguageCode) {
+        this.targetLanguageCode = targetLanguageCode;
+    }
 }
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/AppliedTerminologyJsonMarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/AppliedTerminologyJsonMarshaller.java
new file mode 100644
index 0000000000..22831f81ce
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/AppliedTerminologyJsonMarshaller.java
@@ -0,0 +1,55 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO AppliedTerminology
+ */
+class AppliedTerminologyJsonMarshaller {
+
+    public void marshall(AppliedTerminology appliedTerminology, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (appliedTerminology.getName() != null) {
+            String name = appliedTerminology.getName();
+            jsonWriter.name("Name");
+            jsonWriter.value(name);
+        }
+        if (appliedTerminology.getTerms() != null) {
+            java.util.List<Term> terms = appliedTerminology.getTerms();
+            jsonWriter.name("Terms");
+            jsonWriter.beginArray();
+            for (Term termsItem : terms) {
+                if (termsItem != null) {
+                    TermJsonMarshaller.getInstance().marshall(termsItem, jsonWriter);
+                }
+            }
+            jsonWriter.endArray();
+        }
+        jsonWriter.endObject();
+    }
+
+    private static AppliedTerminologyJsonMarshaller instance;
+
+    public static AppliedTerminologyJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new AppliedTerminologyJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/AppliedTerminologyJsonUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/AppliedTerminologyJsonUnmarshaller.java
new file mode 100644
index 0000000000..690836253c
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/AppliedTerminologyJsonUnmarshaller.java
@@ -0,0 +1,62 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO AppliedTerminology
+ */
+class AppliedTerminologyJsonUnmarshaller implements
+        Unmarshaller<AppliedTerminology, JsonUnmarshallerContext> {
+
+    public AppliedTerminology unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        AppliedTerminology appliedTerminology = new AppliedTerminology();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Name")) {
+                appliedTerminology.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Terms")) {
+                appliedTerminology.setTerms(new ListUnmarshaller<Term>(TermJsonUnmarshaller
+                        .getInstance()
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return appliedTerminology;
+    }
+
+    private static AppliedTerminologyJsonUnmarshaller instance;
+
+    public static AppliedTerminologyJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new AppliedTerminologyJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/DeleteTerminologyRequestMarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/DeleteTerminologyRequestMarshaller.java
new file mode 100644
index 0000000000..0ede2b915f
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/DeleteTerminologyRequestMarshaller.java
@@ -0,0 +1,85 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DeleteTerminologyRequest
+ */
+public class DeleteTerminologyRequestMarshaller implements
+        Marshaller<Request<DeleteTerminologyRequest>, DeleteTerminologyRequest> {
+
+    public Request<DeleteTerminologyRequest> marshall(
+            DeleteTerminologyRequest deleteTerminologyRequest) {
+        if (deleteTerminologyRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DeleteTerminologyRequest)");
+        }
+
+        Request<DeleteTerminologyRequest> request = new DefaultRequest<DeleteTerminologyRequest>(
+                deleteTerminologyRequest, "AmazonTranslate");
+        String target = "AWSShineFrontendService_20170701.DeleteTerminology";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (deleteTerminologyRequest.getName() != null) {
+                String name = deleteTerminologyRequest.getName();
+                jsonWriter.name("Name");
+                jsonWriter.value(name);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/DetectedLanguageLowConfidenceExceptionUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/DetectedLanguageLowConfidenceExceptionUnmarshaller.java
index dda881e126..0790d09f8a 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/DetectedLanguageLowConfidenceExceptionUnmarshaller.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/DetectedLanguageLowConfidenceExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.translate.model.DetectedLanguageLowConfidenceException;
 
 public class DetectedLanguageLowConfidenceExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -44,36 +41,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public DetectedLanguageLowConfidenceException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        DetectedLanguageLowConfidenceException detectedLanguageLowConfidenceException = new DetectedLanguageLowConfidenceException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                detectedLanguageLowConfidenceException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else if (name.equals("DetectedLanguageCode")) {
-                detectedLanguageLowConfidenceException
-                        .setDetectedLanguageCode(StringJsonUnmarshaller.getInstance().unmarshall(
-                                context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return detectedLanguageLowConfidenceException;
-    }
 }
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/EncryptionKeyJsonMarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/EncryptionKeyJsonMarshaller.java
new file mode 100644
index 0000000000..7bcca8f86b
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/EncryptionKeyJsonMarshaller.java
@@ -0,0 +1,48 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO EncryptionKey
+ */
+class EncryptionKeyJsonMarshaller {
+
+    public void marshall(EncryptionKey encryptionKey, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (encryptionKey.getType() != null) {
+            String type = encryptionKey.getType();
+            jsonWriter.name("Type");
+            jsonWriter.value(type);
+        }
+        if (encryptionKey.getId() != null) {
+            String id = encryptionKey.getId();
+            jsonWriter.name("Id");
+            jsonWriter.value(id);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static EncryptionKeyJsonMarshaller instance;
+
+    public static EncryptionKeyJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new EncryptionKeyJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/EncryptionKeyJsonUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/EncryptionKeyJsonUnmarshaller.java
new file mode 100644
index 0000000000..5b10ca27a2
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/EncryptionKeyJsonUnmarshaller.java
@@ -0,0 +1,59 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO EncryptionKey
+ */
+class EncryptionKeyJsonUnmarshaller implements Unmarshaller<EncryptionKey, JsonUnmarshallerContext> {
+
+    public EncryptionKey unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        EncryptionKey encryptionKey = new EncryptionKey();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Type")) {
+                encryptionKey.setType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Id")) {
+                encryptionKey.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return encryptionKey;
+    }
+
+    private static EncryptionKeyJsonUnmarshaller instance;
+
+    public static EncryptionKeyJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new EncryptionKeyJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/GetTerminologyRequestMarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/GetTerminologyRequestMarshaller.java
new file mode 100644
index 0000000000..433d6310f6
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/GetTerminologyRequestMarshaller.java
@@ -0,0 +1,89 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetTerminologyRequest
+ */
+public class GetTerminologyRequestMarshaller implements
+        Marshaller<Request<GetTerminologyRequest>, GetTerminologyRequest> {
+
+    public Request<GetTerminologyRequest> marshall(GetTerminologyRequest getTerminologyRequest) {
+        if (getTerminologyRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(GetTerminologyRequest)");
+        }
+
+        Request<GetTerminologyRequest> request = new DefaultRequest<GetTerminologyRequest>(
+                getTerminologyRequest, "AmazonTranslate");
+        String target = "AWSShineFrontendService_20170701.GetTerminology";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (getTerminologyRequest.getName() != null) {
+                String name = getTerminologyRequest.getName();
+                jsonWriter.name("Name");
+                jsonWriter.value(name);
+            }
+            if (getTerminologyRequest.getTerminologyDataFormat() != null) {
+                String terminologyDataFormat = getTerminologyRequest.getTerminologyDataFormat();
+                jsonWriter.name("TerminologyDataFormat");
+                jsonWriter.value(terminologyDataFormat);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/GetTerminologyResultJsonUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/GetTerminologyResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..72fa4773f6
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/GetTerminologyResultJsonUnmarshaller.java
@@ -0,0 +1,61 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetTerminologyResult
+ */
+public class GetTerminologyResultJsonUnmarshaller implements
+        Unmarshaller<GetTerminologyResult, JsonUnmarshallerContext> {
+
+    public GetTerminologyResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        GetTerminologyResult getTerminologyResult = new GetTerminologyResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("TerminologyProperties")) {
+                getTerminologyResult.setTerminologyProperties(TerminologyPropertiesJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("TerminologyDataLocation")) {
+                getTerminologyResult
+                        .setTerminologyDataLocation(TerminologyDataLocationJsonUnmarshaller
+                                .getInstance()
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return getTerminologyResult;
+    }
+
+    private static GetTerminologyResultJsonUnmarshaller instance;
+
+    public static GetTerminologyResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetTerminologyResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ImportTerminologyRequestMarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ImportTerminologyRequestMarshaller.java
new file mode 100644
index 0000000000..9469c7183e
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ImportTerminologyRequestMarshaller.java
@@ -0,0 +1,105 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for ImportTerminologyRequest
+ */
+public class ImportTerminologyRequestMarshaller implements
+        Marshaller<Request<ImportTerminologyRequest>, ImportTerminologyRequest> {
+
+    public Request<ImportTerminologyRequest> marshall(
+            ImportTerminologyRequest importTerminologyRequest) {
+        if (importTerminologyRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(ImportTerminologyRequest)");
+        }
+
+        Request<ImportTerminologyRequest> request = new DefaultRequest<ImportTerminologyRequest>(
+                importTerminologyRequest, "AmazonTranslate");
+        String target = "AWSShineFrontendService_20170701.ImportTerminology";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (importTerminologyRequest.getName() != null) {
+                String name = importTerminologyRequest.getName();
+                jsonWriter.name("Name");
+                jsonWriter.value(name);
+            }
+            if (importTerminologyRequest.getMergeStrategy() != null) {
+                String mergeStrategy = importTerminologyRequest.getMergeStrategy();
+                jsonWriter.name("MergeStrategy");
+                jsonWriter.value(mergeStrategy);
+            }
+            if (importTerminologyRequest.getDescription() != null) {
+                String description = importTerminologyRequest.getDescription();
+                jsonWriter.name("Description");
+                jsonWriter.value(description);
+            }
+            if (importTerminologyRequest.getTerminologyData() != null) {
+                TerminologyData terminologyData = importTerminologyRequest.getTerminologyData();
+                jsonWriter.name("TerminologyData");
+                TerminologyDataJsonMarshaller.getInstance().marshall(terminologyData, jsonWriter);
+            }
+            if (importTerminologyRequest.getEncryptionKey() != null) {
+                EncryptionKey encryptionKey = importTerminologyRequest.getEncryptionKey();
+                jsonWriter.name("EncryptionKey");
+                EncryptionKeyJsonMarshaller.getInstance().marshall(encryptionKey, jsonWriter);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ImportTerminologyResultJsonUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ImportTerminologyResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..8655ada2e8
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ImportTerminologyResultJsonUnmarshaller.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response ImportTerminologyResult
+ */
+public class ImportTerminologyResultJsonUnmarshaller implements
+        Unmarshaller<ImportTerminologyResult, JsonUnmarshallerContext> {
+
+    public ImportTerminologyResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        ImportTerminologyResult importTerminologyResult = new ImportTerminologyResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("TerminologyProperties")) {
+                importTerminologyResult
+                        .setTerminologyProperties(TerminologyPropertiesJsonUnmarshaller
+                                .getInstance()
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return importTerminologyResult;
+    }
+
+    private static ImportTerminologyResultJsonUnmarshaller instance;
+
+    public static ImportTerminologyResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new ImportTerminologyResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/InternalServerExceptionUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/InternalServerExceptionUnmarshaller.java
index ee2e284407..902e40b2cf 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/InternalServerExceptionUnmarshaller.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/InternalServerExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.translate.model.InternalServerException;
 
 public class InternalServerExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InternalServerException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InternalServerException internalServerException = new InternalServerException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                internalServerException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return internalServerException;
-    }
 }
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/InvalidParameterValueExceptionUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/InvalidParameterValueExceptionUnmarshaller.java
new file mode 100644
index 0000000000..ce22cd0dd6
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/InvalidParameterValueExceptionUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.AmazonServiceException;
+import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
+import com.amazonaws.transform.JsonErrorUnmarshaller;
+import com.amazonaws.services.translate.model.InvalidParameterValueException;
+
+public class InvalidParameterValueExceptionUnmarshaller extends JsonErrorUnmarshaller {
+
+    public InvalidParameterValueExceptionUnmarshaller() {
+        super(InvalidParameterValueException.class);
+    }
+
+    @Override
+    public boolean match(JsonErrorResponse error) throws Exception {
+        return error.getErrorCode().equals("InvalidParameterValueException");
+    }
+
+    @Override
+    public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
+
+        InvalidParameterValueException e = (InvalidParameterValueException) super.unmarshall(error);
+        e.setErrorCode("InvalidParameterValueException");
+
+        return e;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/InvalidRequestExceptionUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/InvalidRequestExceptionUnmarshaller.java
index ba08f49990..80a386a6da 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/InvalidRequestExceptionUnmarshaller.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/InvalidRequestExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.translate.model.InvalidRequestException;
 
 public class InvalidRequestExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public InvalidRequestException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        InvalidRequestException invalidRequestException = new InvalidRequestException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                invalidRequestException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return invalidRequestException;
-    }
 }
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/LimitExceededExceptionUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/LimitExceededExceptionUnmarshaller.java
new file mode 100644
index 0000000000..192056c7dc
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/LimitExceededExceptionUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.AmazonServiceException;
+import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
+import com.amazonaws.transform.JsonErrorUnmarshaller;
+import com.amazonaws.services.translate.model.LimitExceededException;
+
+public class LimitExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
+
+    public LimitExceededExceptionUnmarshaller() {
+        super(LimitExceededException.class);
+    }
+
+    @Override
+    public boolean match(JsonErrorResponse error) throws Exception {
+        return error.getErrorCode().equals("LimitExceededException");
+    }
+
+    @Override
+    public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
+
+        LimitExceededException e = (LimitExceededException) super.unmarshall(error);
+        e.setErrorCode("LimitExceededException");
+
+        return e;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ListTerminologiesRequestMarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ListTerminologiesRequestMarshaller.java
new file mode 100644
index 0000000000..068cce4199
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ListTerminologiesRequestMarshaller.java
@@ -0,0 +1,90 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for ListTerminologiesRequest
+ */
+public class ListTerminologiesRequestMarshaller implements
+        Marshaller<Request<ListTerminologiesRequest>, ListTerminologiesRequest> {
+
+    public Request<ListTerminologiesRequest> marshall(
+            ListTerminologiesRequest listTerminologiesRequest) {
+        if (listTerminologiesRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(ListTerminologiesRequest)");
+        }
+
+        Request<ListTerminologiesRequest> request = new DefaultRequest<ListTerminologiesRequest>(
+                listTerminologiesRequest, "AmazonTranslate");
+        String target = "AWSShineFrontendService_20170701.ListTerminologies";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (listTerminologiesRequest.getNextToken() != null) {
+                String nextToken = listTerminologiesRequest.getNextToken();
+                jsonWriter.name("NextToken");
+                jsonWriter.value(nextToken);
+            }
+            if (listTerminologiesRequest.getMaxResults() != null) {
+                Integer maxResults = listTerminologiesRequest.getMaxResults();
+                jsonWriter.name("MaxResults");
+                jsonWriter.value(maxResults);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ListTerminologiesResultJsonUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ListTerminologiesResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..93f06ce51e
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ListTerminologiesResultJsonUnmarshaller.java
@@ -0,0 +1,61 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response ListTerminologiesResult
+ */
+public class ListTerminologiesResultJsonUnmarshaller implements
+        Unmarshaller<ListTerminologiesResult, JsonUnmarshallerContext> {
+
+    public ListTerminologiesResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        ListTerminologiesResult listTerminologiesResult = new ListTerminologiesResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("TerminologyPropertiesList")) {
+                listTerminologiesResult
+                        .setTerminologyPropertiesList(new ListUnmarshaller<TerminologyProperties>(
+                                TerminologyPropertiesJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("NextToken")) {
+                listTerminologiesResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return listTerminologiesResult;
+    }
+
+    private static ListTerminologiesResultJsonUnmarshaller instance;
+
+    public static ListTerminologiesResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new ListTerminologiesResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ResourceNotFoundExceptionUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ResourceNotFoundExceptionUnmarshaller.java
new file mode 100644
index 0000000000..a52e1c7218
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ResourceNotFoundExceptionUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.AmazonServiceException;
+import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
+import com.amazonaws.transform.JsonErrorUnmarshaller;
+import com.amazonaws.services.translate.model.ResourceNotFoundException;
+
+public class ResourceNotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
+
+    public ResourceNotFoundExceptionUnmarshaller() {
+        super(ResourceNotFoundException.class);
+    }
+
+    @Override
+    public boolean match(JsonErrorResponse error) throws Exception {
+        return error.getErrorCode().equals("ResourceNotFoundException");
+    }
+
+    @Override
+    public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
+
+        ResourceNotFoundException e = (ResourceNotFoundException) super.unmarshall(error);
+        e.setErrorCode("ResourceNotFoundException");
+
+        return e;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ServiceUnavailableExceptionUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ServiceUnavailableExceptionUnmarshaller.java
index 335cdba1a1..0d20a3d8e1 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ServiceUnavailableExceptionUnmarshaller.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/ServiceUnavailableExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.translate.model.ServiceUnavailableException;
 
 public class ServiceUnavailableExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public ServiceUnavailableException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        ServiceUnavailableException serviceUnavailableException = new ServiceUnavailableException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                serviceUnavailableException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return serviceUnavailableException;
-    }
 }
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TermJsonMarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TermJsonMarshaller.java
new file mode 100644
index 0000000000..1f709ab9c9
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TermJsonMarshaller.java
@@ -0,0 +1,48 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO Term
+ */
+class TermJsonMarshaller {
+
+    public void marshall(Term term, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (term.getSourceText() != null) {
+            String sourceText = term.getSourceText();
+            jsonWriter.name("SourceText");
+            jsonWriter.value(sourceText);
+        }
+        if (term.getTargetText() != null) {
+            String targetText = term.getTargetText();
+            jsonWriter.name("TargetText");
+            jsonWriter.value(targetText);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static TermJsonMarshaller instance;
+
+    public static TermJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new TermJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TermJsonUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TermJsonUnmarshaller.java
new file mode 100644
index 0000000000..8fda371c75
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TermJsonUnmarshaller.java
@@ -0,0 +1,59 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO Term
+ */
+class TermJsonUnmarshaller implements Unmarshaller<Term, JsonUnmarshallerContext> {
+
+    public Term unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        Term term = new Term();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("SourceText")) {
+                term.setSourceText(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("TargetText")) {
+                term.setTargetText(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return term;
+    }
+
+    private static TermJsonUnmarshaller instance;
+
+    public static TermJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new TermJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyDataJsonMarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyDataJsonMarshaller.java
new file mode 100644
index 0000000000..3cd7c064d4
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyDataJsonMarshaller.java
@@ -0,0 +1,49 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO TerminologyData
+ */
+class TerminologyDataJsonMarshaller {
+
+    public void marshall(TerminologyData terminologyData, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (terminologyData.getFile() != null) {
+            java.nio.ByteBuffer file = terminologyData.getFile();
+            jsonWriter.name("File");
+            jsonWriter.value(file);
+        }
+        if (terminologyData.getFormat() != null) {
+            String format = terminologyData.getFormat();
+            jsonWriter.name("Format");
+            jsonWriter.value(format);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static TerminologyDataJsonMarshaller instance;
+
+    public static TerminologyDataJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new TerminologyDataJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyDataJsonUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyDataJsonUnmarshaller.java
new file mode 100644
index 0000000000..1f13276a33
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyDataJsonUnmarshaller.java
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO TerminologyData
+ */
+class TerminologyDataJsonUnmarshaller implements
+        Unmarshaller<TerminologyData, JsonUnmarshallerContext> {
+
+    public TerminologyData unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        TerminologyData terminologyData = new TerminologyData();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("File")) {
+                terminologyData.setFile(ByteBufferJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Format")) {
+                terminologyData.setFormat(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return terminologyData;
+    }
+
+    private static TerminologyDataJsonUnmarshaller instance;
+
+    public static TerminologyDataJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new TerminologyDataJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyDataLocationJsonMarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyDataLocationJsonMarshaller.java
new file mode 100644
index 0000000000..070404cdde
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyDataLocationJsonMarshaller.java
@@ -0,0 +1,49 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO TerminologyDataLocation
+ */
+class TerminologyDataLocationJsonMarshaller {
+
+    public void marshall(TerminologyDataLocation terminologyDataLocation, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (terminologyDataLocation.getRepositoryType() != null) {
+            String repositoryType = terminologyDataLocation.getRepositoryType();
+            jsonWriter.name("RepositoryType");
+            jsonWriter.value(repositoryType);
+        }
+        if (terminologyDataLocation.getLocation() != null) {
+            String location = terminologyDataLocation.getLocation();
+            jsonWriter.name("Location");
+            jsonWriter.value(location);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static TerminologyDataLocationJsonMarshaller instance;
+
+    public static TerminologyDataLocationJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new TerminologyDataLocationJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyDataLocationJsonUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyDataLocationJsonUnmarshaller.java
new file mode 100644
index 0000000000..6f0f1de28b
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyDataLocationJsonUnmarshaller.java
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO TerminologyDataLocation
+ */
+class TerminologyDataLocationJsonUnmarshaller implements
+        Unmarshaller<TerminologyDataLocation, JsonUnmarshallerContext> {
+
+    public TerminologyDataLocation unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        TerminologyDataLocation terminologyDataLocation = new TerminologyDataLocation();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("RepositoryType")) {
+                terminologyDataLocation.setRepositoryType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Location")) {
+                terminologyDataLocation.setLocation(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return terminologyDataLocation;
+    }
+
+    private static TerminologyDataLocationJsonUnmarshaller instance;
+
+    public static TerminologyDataLocationJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new TerminologyDataLocationJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyPropertiesJsonMarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyPropertiesJsonMarshaller.java
new file mode 100644
index 0000000000..2d32504c82
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyPropertiesJsonMarshaller.java
@@ -0,0 +1,96 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO TerminologyProperties
+ */
+class TerminologyPropertiesJsonMarshaller {
+
+    public void marshall(TerminologyProperties terminologyProperties, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (terminologyProperties.getName() != null) {
+            String name = terminologyProperties.getName();
+            jsonWriter.name("Name");
+            jsonWriter.value(name);
+        }
+        if (terminologyProperties.getDescription() != null) {
+            String description = terminologyProperties.getDescription();
+            jsonWriter.name("Description");
+            jsonWriter.value(description);
+        }
+        if (terminologyProperties.getArn() != null) {
+            String arn = terminologyProperties.getArn();
+            jsonWriter.name("Arn");
+            jsonWriter.value(arn);
+        }
+        if (terminologyProperties.getSourceLanguageCode() != null) {
+            String sourceLanguageCode = terminologyProperties.getSourceLanguageCode();
+            jsonWriter.name("SourceLanguageCode");
+            jsonWriter.value(sourceLanguageCode);
+        }
+        if (terminologyProperties.getTargetLanguageCodes() != null) {
+            java.util.List<String> targetLanguageCodes = terminologyProperties
+                    .getTargetLanguageCodes();
+            jsonWriter.name("TargetLanguageCodes");
+            jsonWriter.beginArray();
+            for (String targetLanguageCodesItem : targetLanguageCodes) {
+                if (targetLanguageCodesItem != null) {
+                    jsonWriter.value(targetLanguageCodesItem);
+                }
+            }
+            jsonWriter.endArray();
+        }
+        if (terminologyProperties.getEncryptionKey() != null) {
+            EncryptionKey encryptionKey = terminologyProperties.getEncryptionKey();
+            jsonWriter.name("EncryptionKey");
+            EncryptionKeyJsonMarshaller.getInstance().marshall(encryptionKey, jsonWriter);
+        }
+        if (terminologyProperties.getSizeBytes() != null) {
+            Integer sizeBytes = terminologyProperties.getSizeBytes();
+            jsonWriter.name("SizeBytes");
+            jsonWriter.value(sizeBytes);
+        }
+        if (terminologyProperties.getTermCount() != null) {
+            Integer termCount = terminologyProperties.getTermCount();
+            jsonWriter.name("TermCount");
+            jsonWriter.value(termCount);
+        }
+        if (terminologyProperties.getCreatedAt() != null) {
+            java.util.Date createdAt = terminologyProperties.getCreatedAt();
+            jsonWriter.name("CreatedAt");
+            jsonWriter.value(createdAt);
+        }
+        if (terminologyProperties.getLastUpdatedAt() != null) {
+            java.util.Date lastUpdatedAt = terminologyProperties.getLastUpdatedAt();
+            jsonWriter.name("LastUpdatedAt");
+            jsonWriter.value(lastUpdatedAt);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static TerminologyPropertiesJsonMarshaller instance;
+
+    public static TerminologyPropertiesJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new TerminologyPropertiesJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyPropertiesJsonUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyPropertiesJsonUnmarshaller.java
new file mode 100644
index 0000000000..0eb2cd50d4
--- /dev/null
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TerminologyPropertiesJsonUnmarshaller.java
@@ -0,0 +1,86 @@
+/*
+ * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.translate.model.transform;
+
+import com.amazonaws.services.translate.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO TerminologyProperties
+ */
+class TerminologyPropertiesJsonUnmarshaller implements
+        Unmarshaller<TerminologyProperties, JsonUnmarshallerContext> {
+
+    public TerminologyProperties unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        TerminologyProperties terminologyProperties = new TerminologyProperties();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Name")) {
+                terminologyProperties.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Description")) {
+                terminologyProperties.setDescription(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Arn")) {
+                terminologyProperties.setArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SourceLanguageCode")) {
+                terminologyProperties.setSourceLanguageCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("TargetLanguageCodes")) {
+                terminologyProperties.setTargetLanguageCodes(new ListUnmarshaller<String>(
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("EncryptionKey")) {
+                terminologyProperties.setEncryptionKey(EncryptionKeyJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SizeBytes")) {
+                terminologyProperties.setSizeBytes(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("TermCount")) {
+                terminologyProperties.setTermCount(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("CreatedAt")) {
+                terminologyProperties.setCreatedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LastUpdatedAt")) {
+                terminologyProperties.setLastUpdatedAt(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return terminologyProperties;
+    }
+
+    private static TerminologyPropertiesJsonUnmarshaller instance;
+
+    public static TerminologyPropertiesJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new TerminologyPropertiesJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TextSizeLimitExceededExceptionUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TextSizeLimitExceededExceptionUnmarshaller.java
index 4be43a88f7..89f5ed3545 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TextSizeLimitExceededExceptionUnmarshaller.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TextSizeLimitExceededExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.translate.model.TextSizeLimitExceededException;
 
 public class TextSizeLimitExceededExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,32 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public TextSizeLimitExceededException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        TextSizeLimitExceededException textSizeLimitExceededException = new TextSizeLimitExceededException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                textSizeLimitExceededException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return textSizeLimitExceededException;
-    }
 }
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TooManyRequestsExceptionUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TooManyRequestsExceptionUnmarshaller.java
index 74185c6514..e19e7ddcb8 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TooManyRequestsExceptionUnmarshaller.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TooManyRequestsExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.translate.model.TooManyRequestsException;
 
 public class TooManyRequestsExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -42,31 +39,4 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
 
         return e;
     }
-
-    public TooManyRequestsException unmarshall(JsonUnmarshallerContext context) throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        TooManyRequestsException tooManyRequestsException = new TooManyRequestsException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                tooManyRequestsException.setErrorMessage(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return tooManyRequestsException;
-    }
 }
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TranslateTextRequestMarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TranslateTextRequestMarshaller.java
index 6b89df3a49..a0005ae4b6 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TranslateTextRequestMarshaller.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TranslateTextRequestMarshaller.java
@@ -64,6 +64,18 @@
                 jsonWriter.name("Text");
                 jsonWriter.value(text);
             }
+            if (translateTextRequest.getTerminologyNames() != null) {
+                java.util.List<String> terminologyNames = translateTextRequest
+                        .getTerminologyNames();
+                jsonWriter.name("TerminologyNames");
+                jsonWriter.beginArray();
+                for (String terminologyNamesItem : terminologyNames) {
+                    if (terminologyNamesItem != null) {
+                        jsonWriter.value(terminologyNamesItem);
+                    }
+                }
+                jsonWriter.endArray();
+            }
             if (translateTextRequest.getSourceLanguageCode() != null) {
                 String sourceLanguageCode = translateTextRequest.getSourceLanguageCode();
                 jsonWriter.name("SourceLanguageCode");
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TranslateTextResultJsonUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TranslateTextResultJsonUnmarshaller.java
index da273e6379..acf8ca30a3 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TranslateTextResultJsonUnmarshaller.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/TranslateTextResultJsonUnmarshaller.java
@@ -42,6 +42,12 @@ public TranslateTextResult unmarshall(JsonUnmarshallerContext context) throws Ex
             } else if (name.equals("TargetLanguageCode")) {
                 translateTextResult.setTargetLanguageCode(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("AppliedTerminologies")) {
+                translateTextResult
+                        .setAppliedTerminologies(new ListUnmarshaller<AppliedTerminology>(
+                                AppliedTerminologyJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/UnsupportedLanguagePairExceptionUnmarshaller.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/UnsupportedLanguagePairExceptionUnmarshaller.java
index 59fe32af9c..800a0bf746 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/UnsupportedLanguagePairExceptionUnmarshaller.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/model/transform/UnsupportedLanguagePairExceptionUnmarshaller.java
@@ -17,10 +17,7 @@
 
 import com.amazonaws.AmazonServiceException;
 import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
-import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
-import com.amazonaws.transform.*;
-import com.amazonaws.util.json.AwsJsonReader;
-
+import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.translate.model.UnsupportedLanguagePairException;
 
 public class UnsupportedLanguagePairExceptionUnmarshaller extends JsonErrorUnmarshaller {
@@ -40,35 +37,10 @@ public AmazonServiceException unmarshall(JsonErrorResponse error) throws Excepti
         UnsupportedLanguagePairException e = (UnsupportedLanguagePairException) super
                 .unmarshall(error);
         e.setErrorCode("UnsupportedLanguagePairException");
+        e.setSourceLanguageCode(String.valueOf(error.get("SourceLanguageCode")));
 
-        return e;
-    }
+        e.setTargetLanguageCode(String.valueOf(error.get("TargetLanguageCode")));
 
-    public UnsupportedLanguagePairException unmarshall(JsonUnmarshallerContext context)
-            throws Exception {
-        AwsJsonReader reader = context.getReader();
-        if (!reader.isContainer()) {
-            reader.skipValue();
-            return null;
-        }
-
-        // The `getMessage` method of AWSServiceException derives its value from
-        // `errorMessage`. The incoming context
-        // has the value in `message`, so we'll have a special case to handle
-        // that.
-        UnsupportedLanguagePairException unsupportedLanguagePairException = new UnsupportedLanguagePairException(
-                "No message provided.");
-        reader.beginObject();
-        while (reader.hasNext()) {
-            String name = reader.nextName();
-            if ("message".equals(name)) {
-                unsupportedLanguagePairException.setErrorMessage(StringJsonUnmarshaller
-                        .getInstance().unmarshall(context));
-            } else {
-                reader.skipValue();
-            }
-        }
-        reader.endObject();
-        return unsupportedLanguagePairException;
+        return e;
     }
 }
diff --git a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/package-info.java b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/package-info.java
index 6e8fb6d349..32b09acfd7 100644
--- a/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/package-info.java
+++ b/aws-android-sdk-translate/src/main/java/com/amazonaws/services/translate/package-info.java
@@ -1,5 +1,5 @@
 /**
- * <p>Provides translation between English and one of six languages, or between one of the six languages and English.</p>
+ * <p>Provides translation between one source language and another of the same set of languages.</p>
  */
 
 package com.amazonaws.services.translate;
diff --git a/build.gradle b/build.gradle
index 64682b2ee2..8c003e8947 100644
--- a/build.gradle
+++ b/build.gradle
@@ -24,62 +24,6 @@ allprojects {
     }
 }
 
-
-task generateJavadocs(type: Javadoc, description: 'Generate javadocs from all child projects as if it was a single project', group: 'Documentation') {
-    destinationDir = file("$buildDir/docs/javadoc")
-    title = "AWS SDK for Android Reference - $VERSION_NAME"
-    options.author true
-    options.links 'http://docs.spring.io/spring/docs/4.3.x/javadoc-api/', 'http://docs.oracle.com/javase/8/docs/api/', 'http://docs.spring.io/spring-ws/docs/2.3.0.RELEASE/api/', 'http://docs.spring.io/spring-security/site/docs/4.0.4.RELEASE/apidocs/'
-    options.addStringOption 'Xdoclint:none', '-quiet'
-
-
-
-
-    subprojects.each { proj ->
-        proj.evaluate()
-        proj.tasks.withType(Javadoc).each { javadocTask ->
-            source += javadocTask.source
-            classpath += javadocTask.classpath
-            excludes += javadocTask.excludes
-            includes += javadocTask.includes
-            println proj.name
-            println javadocTask.source.isEmpty()
-        }
-    }
-    options.group("Amazon S3", ["com.amazonaws.services.s3*", "com.amazonaws.mobileconnectors.s3*"]).
-            group("Amazon DynamoDB", ["com.amazonaws.services.dynamodb*", "com.amazonaws.mobileconnectors.dynamodbv2*"]).
-            group("Amazon Kinesis", ["com.amazonaws.mobileconnectors.kinesis*", "com.amazonaws.services.kinesis*", "com.amazonaws.services.kinesisfirehose*"]).
-            group("Amazon Pinpoint", ["com.amazonaws.mobileconnectors.pinpoint*", "com.amazonaws.services.pinpoint*"]).
-            group("AWS IoT", ["com.amazonaws.services.iot*", "com.amazonaws.mobileconnectors.iot*"]).
-            group("Amazon Cognito Auth", ["com.amazonaws.mobileconnectors.cognitoauth*"]).
-            group("Amazon Cognito Identity Provider", ["com.amazonaws.mobileconnectors.cognitoidentityprovider*"]).
-            group("AWS Lambda", ["com.amazonaws.services.lambda*", "com.amazonaws.mobileconnectors.lambdainvoker*", "com.amazonaws.mobileconnectors.util*"]).
-            group("Amazon API Gateway", ["com.amazonaws.mobileconnectors.apigateway*"]).
-            group("Amazon Kinesis Video", ["com.amazonaws.services.kinesisvideo*", "com.amazonaws.mobileconnectors.kinesisvideo*", "com.amazonaws.kinesisvideo*"]).
-            group("Amazon Kinesis Video Archived Media", ["com.amazonaws.services.kinesisvideoarchivedmedia*"]).
-            group("Amazon Lex", ["com.amazonaws.services.lex*", "com.amazonaws.mobileconnectors.lex*"]).
-            group("Amazon Polly", ["com.amazonaws.services.polly*"]).
-            group("AWS Key Management Service", ["com.amazonaws.services.kms*"]).
-            group("Amazon AutoScaling", ["com.amazonaws.services.autoscaling*"]).
-            group("Amazon CloudWatch", ["com.amazonaws.services.cloudwatch*"]).
-            group("Amazon Comprehend", ["com.amazonaws.services.comprehend*"]).
-            group("Amazon EC2", ["com.amazonaws.services.ec2*"]).
-            group("Amazon Elastic Load Balancing", ["com.amazonaws.services.elasticloadbalancing*"]).
-            group("Amazon Elastic Machine Learning Service", ["com.amazonaws.services.machinelearning*"]).
-            group("Amazon Rekognition", ["com.amazonaws.services.rekognition*"]).
-            group("Amazon SNS", ["com.amazonaws.services.sns*"]).
-            group("Amazon SQS", ["com.amazonaws.services.sqs*"]).
-            group("Amazon Simple Email Service", ["com.amazonaws.services.simpleemail*"]).
-            group("Amazon Cloud Watch Logs", ["com.amazonaws.services.logs*"]).
-            group("Amazon SimpleDB", ["com.amazonaws.services.simpledb*"]).
-            group("Amazon Transcribe", ["com.amazonaws.services.transcribe*"]).
-            group("Amazon Translate", ["com.amazonaws.services.translate*"]).
-            group("Common Runtime", ["com.amazonaws*"])
-
-}
-
-
-
 task clean(type: Delete) {
     delete rootProject.buildDir
 }
diff --git a/gradle.properties.bak b/gradle.properties.bak
new file mode 100644
index 0000000000..f4bfd4ba41
--- /dev/null
+++ b/gradle.properties.bak
@@ -0,0 +1,29 @@
+# Project-wide Gradle settings.
+# IDE (e.g. Android Studio) users:
+# Gradle settings configured through the IDE *will override*
+# any settings specified in this file.
+# For more details on how to configure your build environment visit
+# http://www.gradle.org/docs/current/userguide/build_environment.html
+# Specifies the JVM arguments used for the daemon process.
+# The setting is particularly useful for tweaking memory settings.
+org.gradle.jvmargs=-Xmx1536m
+# When configured, Gradle will run in incubating parallel mode.
+# This option should only be used with decoupled projects. More details, visit
+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
+# org.gradle.parallel=true
+
+GROUP=com.amazonaws
+VERSION_NAME=2.9.4
+
+POM_URL=https://github.com/aws/aws-sdk-android
+POM_SCM_URL=https://github.com/aws/aws-sdk-android
+POM_SCM_CONNECTION=scm:git:git://github.com/aws/aws-sdk-android.git
+POM_SCM_DEV_CONNECTION=scm:git:ssh://git@github.com/aws/aws-sdk-android.git
+
+POM_LICENCE_NAME=Amazon Software License
+POM_LICENCE_URL=https://aws.amazon.com/asl/
+POM_LICENCE_DIST=repo
+
+POM_DEVELOPER_ID=amazonwebservices
+POM_DEVELOPER_ORGANIZATION=Amazon Web Services
+POM_DEVELOPER_ORGANIZATION_URL=http://aws.amazon.com
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 75b8c7c8c6..976d355269 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,6 @@
+#Mon May 07 13:58:09 PDT 2018
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-5.0-bin.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.4-all.zip
diff --git a/pom.xml b/pom.xml
index c1beabbce5..11ebf7817e 100644
--- a/pom.xml
+++ b/pom.xml
@@ -6,7 +6,7 @@
   <artifactId>aws-android-sdk-pom</artifactId>
   <packaging>pom</packaging>
   <name>AWS SDK for Android</name>
-  <version>2.8.5</version>
+  <version>2.9.0</version>
   <description>The Amazon Web Services SDK for Android provides Android APIs for building software on AWS’ cost-effective, scalable, and reliable infrastructure products. The AWS SDK for Android allows developers to code against APIs for all of Amazon's infrastructure web services (Amazon S3, Amazon EC2, Amazon SQS, Auto Scaling, etc).</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
@@ -107,13 +107,6 @@
             <forceJavacCompilerUse>true</forceJavacCompilerUse>
           </configuration>
         </plugin>
-        <plugin>
-            <groupId>org.apache.maven.plugins</groupId>
-            <artifactId>maven-surefire-plugin</artifactId>
-            <configuration>
-                <useSystemClassLoader>false</useSystemClassLoader>
-            </configuration>
-        </plugin>           
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-javadoc-plugin</artifactId>
@@ -158,13 +151,6 @@
                 </goals>
               </execution>
             </executions>
-            <configuration>
-              <!-- This is necessary for gpg to not try to use the pinentry programs -->
-              <gpgArguments>
-                  <arg>--pinentry-mode</arg>
-                  <arg>loopback</arg>
-              </gpgArguments>
-            </configuration>
           </plugin>
           <plugin>
             <groupId>org.sonatype.plugins</groupId>
