diff --git a/CHANGELOG.md b/CHANGELOG.md
index a0934f5966..4896c56335 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,151 +1,193 @@
 # Change Log - AWS SDK for Android
 
+## [Release 2.6.6](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.6.6)
+
+### Bug Fixes:
+
+- **Amazon Pinpoint**
+  - Fix locale issue for endpoint profile updates. See [issue #355](https://github.com/aws/aws-sdk-android/issues/355) and see [issue #354](https://github.com/aws/aws-sdk-android/issues/354)
+
+- **Amazon S3**
+  - Fixed a bug in the download progress reporting for large files where the last status update could be a jump of 75% or more. The default for notification used to be 8K bytes chunks, it has been changed to 1024K bytes.  The value can be changed using the `setNotificationThreshold` method of AmazonS3Client instead of being a constant.  See [issue #333](https://github.com/aws/aws-sdk-android/issues/333)
+
+- **AWS IoT**
+  - Fix validation for endpoint in China that ends with ".cn". See [issue #337](https://github.com/aws/aws-sdk-android/issues/337)
+
+## [Release 2.6.5](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.6.5)
+
+### Enhancements:
+
+- **Amazon Polly**
+  - Added support for new voices - `Matthew` and `Takumi`.
+  - Polly is now available in `ap-northeast-1` region.
+
+### Bug Fixes:
+
+- **Amazon Cognito Identity Provider**
+  - Fixed a bug in the deletion of CognitoUser where the callback function is not invoked when deletion is successful. See [issue #304](https://github.com/aws/aws-sdk-android/issues/304)
+
+## [Release 2.6.4](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.6.4)
+
+### Bug Fixes:
+
+- **Amazon Kinesis Firehose & Amazon Kinesis Streams**
+  - Fixed a bug that caused infinite loops while reading local cache of streams used for batching. See [issue #182](https://github.com/aws/aws-sdk-android/issues/182)
+
+## [Release 2.6.3](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.6.3)
+
+### New Features:
+
+- **Amazon Pinpoint**
+  - Add support for ADM and Baidu channels. Now Android developers will be able to target devices that leverage Amazon Device messaging and Baidu Cloud messaging. 
+- **Amazon Cognito Identity Provider**
+  - Support for Pinpoint Analytics integration in Cognito User Pools.
+
 ## [Release 2.6.2](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.6.2)
 
 ### Bug Fixes:
 
 - **AWS Auth SDK**
-	- Fixed a bug in the creation of SignInButton.
-	- Removed the manifest entries for Facebook Application ID and Google Play Services version.
+  - Fixed a bug in the creation of SignInButton.
+  - Removed the manifest entries for Facebook Application ID and Google Play Services version.
 
 ## [Release 2.6.1](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.6.1)
 
 ### Bug Fixes:
 
 - **AWS Auth SDK**
-	- Fixed border and shadow for Facebook and Google SignIn buttons.
-	- Fixed the Android Support Package dependencies of the different auth clients. The Android Support Packages support-v4 and appcompat-v7 of all the auth clients now have the same version 23.0.1 and are optional dependencies. Apps consuming the auth clients will now declare the appcompat-v7 and support-v4 dependencies in the gradle manually.
+  - Fixed border and shadow for Facebook and Google SignIn buttons.
+  - Fixed the Android Support Package dependencies of the different auth clients. The Android Support Packages support-v4 and appcompat-v7 of all the auth clients now have the same version 23.0.1 and are optional dependencies. Apps consuming the auth clients will now declare the appcompat-v7 and support-v4 dependencies in the gradle manually.
 
 - **Amazon Pinpoint**
-	- Notification icon handling has been improved. By default, when the Notification icon uses the app icon, the icon will now be shown in color on Apps targeting SDK version 21 or greater. This will be achieved by setting the large icon to the app icon and generating the small icon by converting the app icon image to gray scale. For Apps targeting SDK version below 21, the behavior remains the same and the color icon is shown.
+  - Notification icon handling has been improved. By default, when the Notification icon uses the app icon, the icon will now be shown in color on Apps targeting SDK version 21 or greater. This will be achieved by setting the large icon to the app icon and generating the small icon by converting the app icon image to gray scale. For Apps targeting SDK version below 21, the behavior remains the same and the color icon is shown.
 
 ## [Release 2.6.0](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.6.0)
 
 ### New Features:
 
 - **AWS Auth SDK**
-	- Added new SDK for configurable User SignIn Screen with Amazon Cognito UserPools, Facebook SignIn and Google SignIn.
+  - Added new SDK for configurable User SignIn Screen with Amazon Cognito UserPools, Facebook SignIn and Google SignIn.
 
 - **AWS Core Runtime**
-	- Added support for a configuration file `awsconfiguration.json` that can be used to construct:
-		- `CognitoCredentialsProvider`, `CognitoCachingCredentialsProvider`, `CognitoUserPool`, `TransferUtility`, `DynamoDBMapper`, `PinpointConfiguration`, `CognitoSyncManager`, and `LambdaInvokerFactory`.
+  - Added support for a configuration file `awsconfiguration.json` that can be used to construct:
+    - `CognitoCredentialsProvider`, `CognitoCachingCredentialsProvider`, `CognitoUserPool`, `TransferUtility`, `DynamoDBMapper`, `PinpointConfiguration`, `CognitoSyncManager`, and `LambdaInvokerFactory`.
 
 ### Improvements:
 
 - **AWS S3**
-	- Add builder pattern constructor to `TransferUtility`.
-	- Add default bucket property in `TransferUtility` builder. The default bucket will be used when no bucket is specified.
+  - Add builder pattern constructor to `TransferUtility`.
+  - Add default bucket property in `TransferUtility` builder. The default bucket will be used when no bucket is specified.
 
 - **AWS Lambda**
-	- Add builder pattern constructor to `LambdaInvokerFactory`.
+  - Add builder pattern constructor to `LambdaInvokerFactory`.
 
 - **Amazon DynamoDB**
-	- Add builder pattern constructor to `DynamoDBMapper`.
+  - Add builder pattern constructor to `DynamoDBMapper`.
 
 - **Amazon Pinpoint**
-	- Add configuration option to post notifications even if the app is in the foreground.
+  - Add configuration option to post notifications even if the app is in the foreground.
 
 ### Bug Fixes:
 
 - **Amazon Pinpoint**
-	- Fixed bug that caused Pinpoint endpoint profile to incorrectly calculate the number of profile attributes and metrics.
+  - Fixed bug that caused Pinpoint endpoint profile to incorrectly calculate the number of profile attributes and metrics.
 
 - **Amazon Lex**
-	- Fixed aar file and added new architecture support arm64-v8a, mips, mips64, x86, x86_64. See [issue #298](https://github.com/aws/aws-sdk-android/issues/298)
+  - Fixed aar file and added new architecture support arm64-v8a, mips, mips64, x86, x86_64. See [issue #298](https://github.com/aws/aws-sdk-android/issues/298)
 
 ## [Release 2.4.7](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.4.7)
 
 ### Improvements:
 
 - **Amazon Cognito Auth**
-	- Making Cognito App Integration and Federation feature generally available
+  - Making Cognito App Integration and Federation feature generally available
 
 - **AWS IoT**
-	- Add API to enable/disable auto-resubscribe feature.
+  - Add API to enable/disable auto-resubscribe feature.
 
 ### Bug Fixes:
 
 - **AWS IoT**
-	- Fixed bug that caused reconnecting to the session to throw an exception due to failure to obtain credentials.
+  - Fixed bug that caused reconnecting to the session to throw an exception due to failure to obtain credentials.
 
 ## [Release 2.4.6](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.4.6)
 
 ### Bug Fixes:
 
 - **Amazon Cognito Identity Provider**
-	- Fixed bug that caused `CognitoDeviceHelper.getDeviceKey` to return null on certain cases. See [issue #259](https://github.com/aws/aws-sdk-android/issues/259)
-	- Fixed bug where `onSuccess` callback was missing from `verifyAttribute` function. See [issue #266](https://github.com/aws/aws-sdk-android/issues/266)	
-	
+  - Fixed bug that caused `CognitoDeviceHelper.getDeviceKey` to return null on certain cases. See [issue #259](https://github.com/aws/aws-sdk-android/issues/259)
+  - Fixed bug where `onSuccess` callback was missing from `verifyAttribute` function. See [issue #266](https://github.com/aws/aws-sdk-android/issues/266)
+
 - **Amazon Pinpoint**
-	- Fix crash in Pinpoint SDK when getting locale's country code.
+  - Fix crash in Pinpoint SDK when getting locale's country code.
 
 ## [Release 2.4.5](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.4.5)
 
 ### Bug Fixes:
 
 - **Amazon S3**
-	- Fixed bug that caused keys to convert spaces to url encoded characters. See [issue #310](https://github.com/aws/aws-sdk-android/issues/310)
+  - Fixed bug that caused keys to convert spaces to url encoded characters. See [issue #310](https://github.com/aws/aws-sdk-android/issues/310)
 
 - **Amazon DynamoDB Document Model (Beta)**
-	- Fixed bug that caused item updates to fail due to equality check error.
+  - Fixed bug that caused item updates to fail due to equality check error.
 
 ## [Release 2.4.4](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.4.4)
 
 ### New Features:
 - **Amazon DynamoDB Document Model (Beta)**
-	- Added DynamoDB Document API: The Document API provides full JSON data support, use of Document Path to access part of a document, and new data types such as Map, Primitive, List, and Boolean. More information and sample code can be found in the [blog](https://aws.amazon.com/blogs/mobile/using-amazon-dynamodb-document-api-with-aws-mobile-sdk-for-android-part-1/).
+  - Added DynamoDB Document API: The Document API provides full JSON data support, use of Document Path to access part of a document, and new data types such as Map, Primitive, List, and Boolean. More information and sample code can be found in the [blog](https://aws.amazon.com/blogs/mobile/using-amazon-dynamodb-document-api-with-aws-mobile-sdk-for-android-part-1/).
 
 * **Amazon Cognito Auth (Beta)**
-	- A new SDK that enables sign-up and sign-in for Amazon Cognito Your User Pools via a lightweight hosted UI.
+  - A new SDK that enables sign-up and sign-in for Amazon Cognito Your User Pools via a lightweight hosted UI.
 
 ### Bug Fixes:
 - **Amazon Pinpoint**
-	- Change Pinpoint notification client to be a strong reference in Pinpoint notification receiver
-	- **Breaking API Change** Please use `PinpointNotificationReceiver.setNotificationClient()` API instead of `setWeakNotificationClient`.
+  - Change Pinpoint notification client to be a strong reference in Pinpoint notification receiver
+  - **Breaking API Change** Please use `PinpointNotificationReceiver.setNotificationClient()` API instead of `setWeakNotificationClient`.
 
 - **Amazon S3**
-	- Fixed bug in `TransferUtility` which caused the app to crash due to a race condition when loading Transfer Records from Transfer Database. See [issue #288](https://github.com/aws/aws-sdk-android/issues/288)
+  - Fixed bug in `TransferUtility` which caused the app to crash due to a race condition when loading Transfer Records from Transfer Database. See [issue #288](https://github.com/aws/aws-sdk-android/issues/288)
 
 ## [Release 2.4.3](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.4.3)
 
 ### Improvements:
 - **AWS IoT**
-	- Update API to latest spec.
-	
+  - Update API to latest spec.
+
 - **Amazon Polly**
-	- Added support for new voice id - `Vicki`.
-	
+  - Added support for new voice id - `Vicki`.
+
 - **Amazon Pinpoint**
-	- Update logging to be more restrictive.
-	- Added support for app-level opt-out.
+  - Update logging to be more restrictive.
+  - Added support for app-level opt-out.
 
 ### Bug Fixes:
 - **All Services**
-	- Fixed an issue where endpoint URLs were incorrectly set after using `setRegion.`. See [issue #290](https://github.com/aws/aws-sdk-android/issues/290)
+  - Fixed an issue where endpoint URLs were incorrectly set after using `setRegion.`. See [issue #290](https://github.com/aws/aws-sdk-android/issues/290)
 - **Amazon S3**
-	- Fixed bug which caused gradle build error on commons-io. See [issue #282](https://github.com/aws/aws-sdk-android/issues/282)
-	- Fixed NPE error while resuming transfers using `TransferUtility`. See [issue #299](https://github.com/aws/aws-sdk-android/issues/299)
-	- Fixed `TransferUtility` observer progress tracking bug. See [issue #257](https://github.com/aws/aws-sdk-android/issues/257)	
+  - Fixed bug which caused gradle build error on commons-io. See [issue #282](https://github.com/aws/aws-sdk-android/issues/282)
+  - Fixed NPE error while resuming transfers using `TransferUtility`. See [issue #299](https://github.com/aws/aws-sdk-android/issues/299)
+  - Fixed `TransferUtility` observer progress tracking bug. See [issue #257](https://github.com/aws/aws-sdk-android/issues/257)
 
 ## [Release 2.4.2](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.4.2)
 
 ### Improvements:
 - **Amazon Lex**
-	- Amazon Lex is now Generally Available.
-	- Added support for input transcripts.
+  - Amazon Lex is now Generally Available.
+  - Added support for input transcripts.
 
 - **Amazon Polly**
-	- Added support for multiple Lexicons in presigned request.
-	- Added support for speech marks.
+  - Added support for multiple Lexicons in presigned request.
+  - Added support for speech marks.
 
 - **Amazon Rekognition**
-	- Added support for content moderation and age range estimation. See [issue #281](https://github.com/aws/aws-sdk-android/issues/281)
+  - Added support for content moderation and age range estimation. See [issue #281](https://github.com/aws/aws-sdk-android/issues/281)
 
 ### Bug Fixes:
 - **Amazon DynamoDB**
-	- Fixed bug which did not use credentials provider when available in method `getClient(Region)`.
+  - Fixed bug which did not use credentials provider when available in method `getClient(Region)`.
 - **Amazon S3**
-	- Fixed bug which caused gradle build error on commons-io. See [issue #282](https://github.com/aws/aws-sdk-android/issues/282)
+  - Fixed bug which caused gradle build error on commons-io. See [issue #282](https://github.com/aws/aws-sdk-android/issues/282)
 
 ## [Release 2.4.1](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.4.1)
 
@@ -280,7 +322,7 @@
 ### Bug Fixes
 - **Amazon Cognito Identity Provider**: 
 - Authentication flow in Android SDK now uses Custom Authentication API.
-Two new exceptions added for getSession API. These exceptions have been added to accurately represent the user state when the username is invalid and when the user is not confirmed. You will have to update your application to handle these exceptions.
+- Two new exceptions added for getSession API. These exceptions have been added to accurately represent the user state when the username is invalid and when the user is not confirmed. You will have to update your application to handle these exceptions.
 - UserNotFoundException: Returned when the username user does not exist.
 - UserNotConfirmedException: Returned when the user has not been confirmed.
 
diff --git a/Proguard.html b/Proguard.html
index 06dd8bcec9..6d9e87548f 100644
--- a/Proguard.html
+++ b/Proguard.html
@@ -85,6 +85,7 @@ <h2>Modifying proguard-project.txt for the AWS SDK for Android</h2>
 <pre>
 # Class names are needed in reflection
 -keepnames class com.amazonaws.**
+-keepnames class com.amazon.**
 # Request handlers defined in request.handlers
 -keep class com.amazonaws.services.**.*Handler
 # The following are referenced but aren't required to run
diff --git a/README.md b/README.md
index 7485844d38..2503de8705 100644
--- a/README.md
+++ b/README.md
@@ -104,7 +104,7 @@ There are only a few fundamentals that are helpful to know when developing again
 
 ### Basic Service API Calls
 
-The SDK provides access to many AWS Services.  At the most basic level the SDK provides a request/response model for many of the various service methods.  At this level, for a given service, you will have a client that accepts request objects and will pass back a response object, or throw an error.  This basic model is shown in the above example.  Looking at the [Javadoc](http://docs.aws.amazon.com/AWSAndroidSDK/latest/javadoc/) you will notice that services typically have a com.amazonaws.services.*servicename* packageand com.amazonaws.services.*servicename*.model package .  This *servicename* package contains the client that you will pass request/response objects to in order to make service calls.  The *servicename*.model package contains classes that model the request and response parameters of calls to and from AWS services.
+The SDK provides access to many AWS Services.  At the most basic level the SDK provides a request/response model for many of the various service methods.  At this level, for a given service, you will have a client that accepts request objects and will pass back a response object, or throw an error.  This basic model is shown in the above example.  Looking at the [Javadoc](http://docs.aws.amazon.com/AWSAndroidSDK/latest/javadoc/) you will notice that services typically have a com.amazonaws.services.*servicename* package and com.amazonaws.services.*servicename*.model package .  This *servicename* package contains the client that you will pass request/response objects to in order to make service calls.  The *servicename*.model package contains classes that model the request and response parameters of calls to and from AWS services.
 
 
 ### Mobile Connectors  
@@ -278,4 +278,4 @@ If you are using a Mac, you may run into issues when trying to compile, because
 
 ## To learn more about Android Development
 
-For more information on Andorid development, see the Android developer site at: [developer.android.com](http://developer.android.com/index.html)
\ No newline at end of file
+For more information on Android development, see the Android developer site at: [developer.android.com](http://developer.android.com/index.html)
diff --git a/aws-android-sdk-apigateway-core/pom.xml b/aws-android-sdk-apigateway-core/pom.xml
index a8e975398e..8fe5bb8611 100644
--- a/aws-android-sdk-apigateway-core/pom.xml
+++ b/aws-android-sdk-apigateway-core/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-auth-core/pom.xml b/aws-android-sdk-auth-core/pom.xml
index fb1bf31eb8..0949a72dae 100644
--- a/aws-android-sdk-auth-core/pom.xml
+++ b/aws-android-sdk-auth-core/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -29,7 +29,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
 
     <dependency>
diff --git a/aws-android-sdk-auth-facebook/pom.xml b/aws-android-sdk-auth-facebook/pom.xml
index e4c1ea8d1d..66a0336f0a 100644
--- a/aws-android-sdk-auth-facebook/pom.xml
+++ b/aws-android-sdk-auth-facebook/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <repositories>
@@ -36,7 +36,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
       <type>aar</type>
     </dependency>
     <dependency>
diff --git a/aws-android-sdk-auth-google/pom.xml b/aws-android-sdk-auth-google/pom.xml
index ed09b5b37e..5311e1146d 100644
--- a/aws-android-sdk-auth-google/pom.xml
+++ b/aws-android-sdk-auth-google/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <repositories>
@@ -40,7 +40,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
       <type>aar</type>
     </dependency>
     
diff --git a/aws-android-sdk-auth-ui/pom.xml b/aws-android-sdk-auth-ui/pom.xml
index 30486511be..0a580f0d4b 100644
--- a/aws-android-sdk-auth-ui/pom.xml
+++ b/aws-android-sdk-auth-ui/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <repositories>
@@ -36,28 +36,28 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
       <type>aar</type>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-google</artifactId>
       <optional>true</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
       <type>aar</type>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-facebook</artifactId>
       <optional>true</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
       <type>aar</type>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-userpools</artifactId>
       <optional>true</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
       <type>aar</type>
     </dependency>
     <dependency>
diff --git a/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInView.java b/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInView.java
index 47eef3ab36..e064fe98f4 100644
--- a/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInView.java
+++ b/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInView.java
@@ -56,7 +56,7 @@
     private static final int IMAGE_LAYOUT_MARGINS = dp(10);
 
     /** String that represents the SDK Version. */
-    private static final String SDK_VERSION = "2.6.2";
+    private static final String SDK_VERSION = "2.6.6";
 
     /** Common Prefix of the namespaces of different SignIn providers. */
     private static final String NAMESPACE_COMMON_PREFIX = "com.amazonaws.mobile.auth";
diff --git a/aws-android-sdk-auth-userpools/pom.xml b/aws-android-sdk-auth-userpools/pom.xml
index 7bff3a3400..6940218e3d 100644
--- a/aws-android-sdk-auth-userpools/pom.xml
+++ b/aws-android-sdk-auth-userpools/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <repositories>
@@ -36,14 +36,14 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-cognitoidentityprovider</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
     
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
       <type>aar</type>
     </dependency>
 
diff --git a/aws-android-sdk-autoscaling/pom.xml b/aws-android-sdk-autoscaling/pom.xml
index 909aeb3efb..8b5d804490 100644
--- a/aws-android-sdk-autoscaling/pom.xml
+++ b/aws-android-sdk-autoscaling/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-cloudwatch/pom.xml b/aws-android-sdk-cloudwatch/pom.xml
index e45cd96297..5741bc4982 100644
--- a/aws-android-sdk-cloudwatch/pom.xml
+++ b/aws-android-sdk-cloudwatch/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-cognito/pom.xml b/aws-android-sdk-cognito/pom.xml
index df2d646e88..2e54e59fbb 100644
--- a/aws-android-sdk-cognito/pom.xml
+++ b/aws-android-sdk-cognito/pom.xml
@@ -6,14 +6,14 @@
   <artifactId>aws-android-sdk-cognito</artifactId>
   <packaging>jar</packaging>
   <name>AWS SDK for Android - Amazon Cognito Sync</name>
-  <version>2.6.2</version>
+  <version>2.6.6</version>
   <description>The AWS Android SDK for Amazon Cognito Sync module holds the client classes that are used for communicating with Amazon Cognito Sync Service</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <licenses>
@@ -29,7 +29,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
     <dependency>
       <groupId>com.google.android</groupId>
diff --git a/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties b/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties
index d748160bb5..ac008a9afb 100644
--- a/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties
+++ b/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties
@@ -1,3 +1,3 @@
 fabric-identifier=com.amazonaws.aws-android-sdk-cognito
-fabric-version=2.6.2
+fabric-version=2.6.6
 fabric-build-type=binary
diff --git a/aws-android-sdk-cognitoauth/pom.xml b/aws-android-sdk-cognitoauth/pom.xml
index aed5a974cf..94aa0d6e2e 100644
--- a/aws-android-sdk-cognitoauth/pom.xml
+++ b/aws-android-sdk-cognitoauth/pom.xml
@@ -6,14 +6,14 @@
   <artifactId>aws-android-sdk-cognitoauth</artifactId>
   <packaging>aar</packaging>
   <name>AWS SDK for Android - Amazon Cognito Auth</name>
-  <version>2.6.2</version>
+  <version>2.6.6</version>
   <description>The AWS Android SDK with app integration for Amazon Cognito Your User Pools Service</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <repositories>
diff --git a/aws-android-sdk-cognitoidentityprovider/pom.xml b/aws-android-sdk-cognitoidentityprovider/pom.xml
index 5314ca6de6..d28f885f3a 100644
--- a/aws-android-sdk-cognitoidentityprovider/pom.xml
+++ b/aws-android-sdk-cognitoidentityprovider/pom.xml
@@ -6,14 +6,14 @@
   <artifactId>aws-android-sdk-cognitoidentityprovider</artifactId>
   <packaging>jar</packaging>
   <name>AWS SDK for Android - Amazon Cognito Identity Provider</name>
-  <version>2.6.2</version>
+  <version>2.6.6</version>
   <description>The AWS Android SDK for Amazon Cognito Identity Provider module holds the client classes that are used for communicating with Amazon Cognito Identity Provider Service</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <licenses>
@@ -29,7 +29,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
     <dependency>
       <groupId>com.google.android</groupId>
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java
index 252856f8ae..cf1c0c2651 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java
@@ -45,6 +45,7 @@
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.util.CognitoServiceConstants;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.util.Hkdf;
 import com.amazonaws.services.cognitoidentityprovider.AmazonCognitoIdentityProvider;
+import com.amazonaws.services.cognitoidentityprovider.model.AnalyticsMetadataType;
 import com.amazonaws.services.cognitoidentityprovider.model.AttributeType;
 import com.amazonaws.services.cognitoidentityprovider.model.AuthenticationResultType;
 import com.amazonaws.services.cognitoidentityprovider.model.ChangePasswordRequest;
@@ -321,7 +322,12 @@ private void confirmSignUpInternal(String confirmationCode, boolean forcedAliasC
         confirmUserRegistrationRequest.setUsername(userId);
         confirmUserRegistrationRequest.setConfirmationCode(confirmationCode);
         confirmUserRegistrationRequest.setForceAliasCreation(forcedAliasCreation);
-
+        final String pinpointEndpointId = pool.getPinpointEndpointId();
+        if (pinpointEndpointId != null) {
+            final AnalyticsMetadataType amd = new AnalyticsMetadataType();
+            amd.setAnalyticsEndpointId(pinpointEndpointId);
+            confirmUserRegistrationRequest.setAnalyticsMetadata(amd);
+        }
         cognitoIdentityProviderClient.confirmSignUp(confirmUserRegistrationRequest);
     }
 
@@ -394,6 +400,12 @@ private ResendConfirmationCodeResult resendConfirmationCodeInternal() {
         resendConfirmationCodeRequest.setUsername(userId);
         resendConfirmationCodeRequest.setClientId(clientId);
         resendConfirmationCodeRequest.setSecretHash(secretHash);
+        final String pinpointEndpointId = pool.getPinpointEndpointId();
+        if (pinpointEndpointId != null) {
+            AnalyticsMetadataType amd = new AnalyticsMetadataType();
+            amd.setAnalyticsEndpointId(pinpointEndpointId);
+            resendConfirmationCodeRequest.setAnalyticsMetadata(amd);
+        }
 
         return cognitoIdentityProviderClient.resendConfirmationCode(resendConfirmationCodeRequest);
     }
@@ -499,6 +511,12 @@ private ForgotPasswordResult forgotPasswordInternal() {
         resetPasswordRequest.setClientId(clientId);
         resetPasswordRequest.setSecretHash(secretHash);
         resetPasswordRequest.setUsername(userId);
+        final String pinpointEndpointId = pool.getPinpointEndpointId();
+        if (pinpointEndpointId != null) {
+            AnalyticsMetadataType amd = new AnalyticsMetadataType();
+            amd.setAnalyticsEndpointId(pinpointEndpointId);
+            resetPasswordRequest.setAnalyticsMetadata(amd);
+        }
 
         return cognitoIdentityProviderClient.forgotPassword(resetPasswordRequest);
     }
@@ -594,6 +612,12 @@ private void confirmPasswordInternal(String verificationCode, String newPassword
         confirmResetPasswordRequest.setSecretHash(secretHash);
         confirmResetPasswordRequest.setConfirmationCode(verificationCode);
         confirmResetPasswordRequest.setPassword(newPassword);
+        final String pinpointEndpointId = pool.getPinpointEndpointId();
+        if (pinpointEndpointId != null) {
+            AnalyticsMetadataType amd = new AnalyticsMetadataType();
+            amd.setAnalyticsEndpointId(pinpointEndpointId);
+            confirmResetPasswordRequest.setAnalyticsMetadata(amd);
+        }
 
         cognitoIdentityProviderClient.confirmForgotPassword(confirmResetPasswordRequest);
     }
@@ -1562,6 +1586,7 @@ public void deleteUser(GenericHandler callback) {
 
         try {
             deleteUserInternal(this.getCachedSession());
+            callback.onSuccess();
         } catch (final Exception e) {
             callback.onFailure(e);
         }
@@ -2226,6 +2251,12 @@ private InitiateAuthRequest initiateUserSrpAuthRequest(
             }
             initiateAuthRequest.setClientMetadata(userValidationData);
         }
+        final String pinpointEndpointId = this.pool.getPinpointEndpointId();
+        if (pinpointEndpointId != null) {
+            AnalyticsMetadataType amd = new AnalyticsMetadataType();
+            amd.setAnalyticsEndpointId(pinpointEndpointId);
+            initiateAuthRequest.setAnalyticsMetadata(amd);
+        }
         return initiateAuthRequest;
     }
 
@@ -2309,6 +2340,12 @@ private InitiateAuthRequest initiateRefreshTokenAuthRequest(CognitoUserSession c
                 clientSecret);
         initiateAuthRequest.setClientId(clientId);
         initiateAuthRequest.setAuthFlow(CognitoServiceConstants.AUTH_TYPE_REFRESH_TOKEN);
+        final String pinpointEndpointId = pool.getPinpointEndpointId();
+        if (pinpointEndpointId != null) {
+            AnalyticsMetadataType amd = new AnalyticsMetadataType();
+            amd.setAnalyticsEndpointId(pinpointEndpointId);
+            initiateAuthRequest.setAnalyticsMetadata(amd);
+        }
         return initiateAuthRequest;
     }
 
@@ -2383,6 +2420,12 @@ private RespondToAuthChallengeRequest userSrpAuthRequest(InitiateAuthResult chal
         authChallengeRequest.setClientId(clientId);
         authChallengeRequest.setSession(challenge.getSession());
         authChallengeRequest.setChallengeResponses(srpAuthResponses);
+        final String pinpointEndpointId = pool.getPinpointEndpointId();
+        if (pinpointEndpointId != null) {
+            AnalyticsMetadataType amd = new AnalyticsMetadataType();
+            amd.setAnalyticsEndpointId(pinpointEndpointId);
+            authChallengeRequest.setAnalyticsMetadata(amd);
+        }
 
         return authChallengeRequest;
     }
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserPool.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserPool.java
index 98d913f4f1..4afe537ece 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserPool.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserPool.java
@@ -26,10 +26,12 @@
 import com.amazonaws.mobile.config.AWSConfiguration;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.SignUpHandler;
+import com.amazonaws.mobileconnectors.cognitoidentityprovider.util.CognitoPinpointSharedContext;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.util.CognitoSecretHash;
 import com.amazonaws.regions.Regions;
 import com.amazonaws.services.cognitoidentityprovider.AmazonCognitoIdentityProvider;
 import com.amazonaws.services.cognitoidentityprovider.AmazonCognitoIdentityProviderClient;
+import com.amazonaws.services.cognitoidentityprovider.model.AnalyticsMetadataType;
 import com.amazonaws.services.cognitoidentityprovider.model.AttributeType;
 import com.amazonaws.services.cognitoidentityprovider.model.SignUpRequest;
 import com.amazonaws.services.cognitoidentityprovider.model.SignUpResult;
@@ -94,6 +96,11 @@
      */
     private String secretHash;
 
+    /**
+     *
+     */
+    private String pinpointEndpointId;
+
     /**
      * @deprecated use {@link CognitoUserPool#CognitoUserPool(Context, String, String, String, ClientConfiguration, Regions)}
      * <p>
@@ -146,8 +153,9 @@ public CognitoUserPool(Context context, AWSConfiguration awsConfiguration) {
             this.context = context;
             this.userPoolId = userPoolConfiguration.getString("PoolId");
             this.clientId = userPoolConfiguration.getString("AppClientId");
-            this.clientSecret = userPoolConfiguration.getString("AppClientSecret");
-            
+            this.clientSecret = userPoolConfiguration.optString("AppClientSecret");
+            this.pinpointEndpointId = CognitoPinpointSharedContext.getPinpointEndpoint(context, userPoolConfiguration.optString("PinpointAppId"));
+
             final ClientConfiguration clientConfig = new ClientConfiguration();
             clientConfig.setUserAgent(awsConfiguration.getUserAgent());
             this.client = new AmazonCognitoIdentityProviderClient(new AnonymousAWSCredentials(), clientConfig);
@@ -173,6 +181,22 @@ public CognitoUserPool(Context context, AWSConfiguration awsConfiguration) {
     public CognitoUserPool(Context context, String userPoolId, String clientId, String clientSecret, Regions region) {
         this(context, userPoolId, clientId, clientSecret, new ClientConfiguration(), region);
     }
+    
+    /**
+     * Constructs a user-pool with default {@link ClientConfiguration}.
+     *
+     * @param context               REQUIRED: Android application context.
+     * @param userPoolId            REQUIRED: User-pool-Id of the user-pool.
+     * @param clientId              REQUIRED: Client-Id generated for this app and user-pool at the
+     *                              Cognito Identity Provider developer console.
+     * @param clientSecret          REQUIRED: Client Secret generated for this app and user-pool at
+     *                              the Cognito Identity Provider developer console.
+     * @param region                REQUIRED: AWS region {@link Regions}.
+     * @param pinpointAppId         REQUIRED: AWS Pinpoint App Id for analytics.
+     */
+    public CognitoUserPool(Context context, String userPoolId, String clientId, String clientSecret, Regions region, String pinpointAppId) {
+        this(context, userPoolId, clientId, clientSecret, new ClientConfiguration(), region, pinpointAppId);
+    }
 
     /**
      * Constructs a user-pool.
@@ -189,14 +213,35 @@ public CognitoUserPool(Context context, String userPoolId, String clientId, Stri
      * @param region                REQUIRED: AWS region {@link Regions}.
      */
     public CognitoUserPool(Context context, String userPoolId, String clientId, String clientSecret, ClientConfiguration clientConfiguration, Regions region) {
+        this(context, userPoolId, clientId, clientSecret, clientConfiguration, region, null);
+    }
+    
+    /**
+     * Constructs a user-pool with integrated Pinpoint analytics.
+     *
+     * @param context               REQUIRED: Android application context.
+     * @param userPoolId            REQUIRED: User-pool-Id of the user-pool.
+     * @param clientId              REQUIRED: Client-Id generated for this app and user-pool at the
+     *                              Cognito Identity Provider developer console.
+     * @param clientSecret          REQUIRED: Client Secret generated for this app and user-pool at
+     *                              the Cognito Identity Provider developer console.
+     * @param clientConfiguration   REQUIRED: The client configuration options controlling how this
+     *                              client connects to Cognito Identity Provider Service (e.g. proxy settings,
+     *                              retry counts, etc.).
+     * @param region                REQUIRED: AWS region {@link Regions}.
+     * @param pinpointAppId         REQUIRED: AWS Pinpoint App Id for analytics.
+     */
+    public CognitoUserPool(Context context, String userPoolId, String clientId, String clientSecret, ClientConfiguration clientConfiguration, Regions region, String pinpointAppId) {
         this.context = context;
         this.userPoolId = userPoolId;
         this.clientId = clientId;
         this.clientSecret = clientSecret;
         this.client = new AmazonCognitoIdentityProviderClient(new AnonymousAWSCredentials(), clientConfiguration);
         this.client.setRegion(com.amazonaws.regions.Region.getRegion(region));
+        this.pinpointEndpointId = CognitoPinpointSharedContext.getPinpointEndpoint(context, pinpointAppId);
     }
 
+
     /**
      * Constructs a user-pool with default {@link ClientConfiguration}.
      *
@@ -209,11 +254,28 @@ public CognitoUserPool(Context context, String userPoolId, String clientId, Stri
      * @param client                REQUIRED: AWS low-level Cognito Identity Provider Client.
      */
     public CognitoUserPool(Context context, String userPoolId, String clientId, String clientSecret, AmazonCognitoIdentityProvider client) {
+        this(context, userPoolId, clientId, clientSecret, client, null);
+    }
+    
+    /**
+     * Constructs a user-pool with default {@link ClientConfiguration} and integrated analytics.
+     *
+     * @param context               REQUIRED: Android application context.
+     * @param userPoolId            REQUIRED: User-pool-Id of the user-pool.
+     * @param clientId              REQUIRED: Client-Id generated for this app and user-pool at the
+     *                              Cognito Identity Provider developer console.
+     * @param clientSecret          REQUIRED: Client Secret generated for this app and user-pool at
+     *                              the Cognito Identity Provider developer console.
+     * @param client                REQUIRED: AWS low-level Cognito Identity Provider Client.
+     * @param pinpointAppId         REQUIRED: AWS Pinpoint App Id for analytics.
+     */
+    public CognitoUserPool(Context context, String userPoolId, String clientId, String clientSecret, AmazonCognitoIdentityProvider client, String pinpointAppId) {
         this.context = context;
         this.userPoolId = userPoolId;
         this.clientId = clientId;
         this.clientSecret = clientSecret;
         this.client = client;
+        this.pinpointEndpointId = CognitoPinpointSharedContext.getPinpointEndpoint(context, pinpointAppId);
     }
 
     /**
@@ -343,7 +405,12 @@ private SignUpResult signUpInternal(String userId, String password,
         signUpUserRequest.setSecretHash(secretHash);
         signUpUserRequest.setUserAttributes(userAttributes.getAttributesList());
         signUpUserRequest.setValidationData(validationDataList);
-
+        String ppEndpoint = getPinpointEndpointId();
+        if (ppEndpoint != null) {
+            AnalyticsMetadataType amd = new AnalyticsMetadataType();
+            amd.setAnalyticsEndpointId(ppEndpoint);
+            signUpUserRequest.setAnalyticsMetadata(amd);
+        }
         return client.signUp(signUpUserRequest);
     }
 
@@ -398,4 +465,12 @@ public CognitoUser getUser(String userId) {
                 CognitoSecretHash.getSecretHash(userId, clientId, clientSecret),
                 client, context);
     }
+
+    /**
+     * Returns the current Pinpoint endpoint id.
+     * @return current pinpoint endpoint id.
+     */
+    protected String getPinpointEndpointId() {
+        return pinpointEndpointId;
+    }
 }
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoPinpointSharedContext.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoPinpointSharedContext.java
new file mode 100644
index 0000000000..02cbb54376
--- /dev/null
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoPinpointSharedContext.java
@@ -0,0 +1,74 @@
+package com.amazonaws.mobileconnectors.cognitoidentityprovider.util;
+
+import android.content.Context;
+import android.content.SharedPreferences;
+
+import java.util.UUID;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+
+/**
+ * Handles shared user context with Amazon Pinpoint.
+ */
+public class CognitoPinpointSharedContext {
+    private static final Log LOGGER = LogFactory.getLog(CognitoPinpointSharedContext.class);
+
+    /**
+     * Key to access Pinpoint endpoint id in {@link android.content.SharedPreferences}.
+     */
+    private static final String UNIQUE_ID_KEY = "UniqueId";
+
+    /**
+     * Pinpoint SharedPreferences file.
+     */
+    private static final String PREFERENCES_AND_FILE_MANAGER_SUFFIX
+            = "515d6767-01b7-49e5-8273-c8d11b0f331d";
+
+    /**
+     * Returns the pinpoint endpoint id for the provided Pinpoint App Id.
+     * @param context Required, {@link Context}.
+     * @param pinpointAppId Required, the pinpoint appId.
+     * @return The pinpoint endpoint id as a string.
+     */
+    public static String getPinpointEndpoint(Context context,
+                                             String pinpointAppId) {
+        return getPinpointEndpoint(context, pinpointAppId, UNIQUE_ID_KEY);
+    }
+
+    /**
+     * Returns the pinpoint endpoint id for the provided Pinpoint App Id and user.
+     * <p>
+     *     Returns the pinpoint endpoint id for a the {@code pinpointAppId} and {@code pinpointEndpointIdentifier}.
+     *     Generates and stores a new pinpoint endpoint id if a pinpoint endpoint id is not available for this
+     *     combination.
+     * </p>
+     * @param context Required, {@link Context}.
+     * @param pinpointAppId Required, the pinpoint appId.
+     * @param pinpointEndpointIdentifier Required, the pinpoint user identifier.
+     * @return The pinpoint endpoint id as a string.
+     */
+    public static String getPinpointEndpoint(Context context,
+                                             String pinpointAppId,
+                                             String pinpointEndpointIdentifier) {
+        if (context == null || pinpointAppId == null || pinpointEndpointIdentifier == null) {
+            return null;
+        }
+
+        try {
+            final SharedPreferences pinpointPreferences =
+                    context.getSharedPreferences(pinpointAppId + PREFERENCES_AND_FILE_MANAGER_SUFFIX,
+                            Context.MODE_PRIVATE);
+            String pinpointEndpointId = pinpointPreferences.getString(pinpointEndpointIdentifier, null);
+            if (pinpointEndpointId == null) {
+                pinpointEndpointId = UUID.randomUUID().toString();
+                final SharedPreferences.Editor pinpointSharedPrefsEditor = pinpointPreferences.edit();
+                pinpointSharedPrefsEditor.putString(pinpointEndpointIdentifier, pinpointEndpointId).apply();
+            }
+            return pinpointEndpointId;
+        } catch (Exception e) {
+            LOGGER.error("Error while reading from SharedPreferences", e);
+            return null;
+        }
+    }
+}
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AnalyticsMetadataType.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AnalyticsMetadataType.java
new file mode 100644
index 0000000000..b633060ffb
--- /dev/null
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AnalyticsMetadataType.java
@@ -0,0 +1,118 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentityprovider.model;
+
+import java.io.Serializable;
+
+public class AnalyticsMetadataType implements Serializable {
+    /**
+     * <p>
+     * A
+     * </p>
+     */
+    private String analyticsEndpointId;
+
+    /**
+     * <p>
+     * A
+     * </p>
+     *
+     * @return <p>
+     *         A
+     *         </p>
+     */
+    public String getAnalyticsEndpointId() {
+        return analyticsEndpointId;
+    }
+
+    /**
+     * <p>
+     * A
+     * </p>
+     *
+     * @param analyticsEndpointId <p>
+     *            A
+     *            </p>
+     */
+    public void setAnalyticsEndpointId(String analyticsEndpointId) {
+        this.analyticsEndpointId = analyticsEndpointId;
+    }
+
+    /**
+     * <p>
+     * A
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param analyticsEndpointId <p>
+     *            A
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AnalyticsMetadataType withAnalyticsEndpointId(String analyticsEndpointId) {
+        this.analyticsEndpointId = analyticsEndpointId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAnalyticsEndpointId() != null)
+            sb.append("AnalyticsEndpointId: " + getAnalyticsEndpointId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getAnalyticsEndpointId() == null) ? 0 : getAnalyticsEndpointId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof AnalyticsMetadataType == false)
+            return false;
+        AnalyticsMetadataType other = (AnalyticsMetadataType) obj;
+
+        if (other.getAnalyticsEndpointId() == null ^ this.getAnalyticsEndpointId() == null)
+            return false;
+        if (other.getAnalyticsEndpointId() != null
+                && other.getAnalyticsEndpointId().equals(this.getAnalyticsEndpointId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmForgotPasswordRequest.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmForgotPasswordRequest.java
index 77ea0507b3..9afbe8d27b 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmForgotPasswordRequest.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmForgotPasswordRequest.java
@@ -86,6 +86,13 @@
      */
     private String password;
 
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     */
+    private AnalyticsMetadataType analyticsMetadata;
+
     /**
      * <p>
      * The ID of the client associated with the user pool.
@@ -401,6 +408,52 @@ public ConfirmForgotPasswordRequest withPassword(String password) {
         return this;
     }
 
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     *
+     * @return <p>
+     *         The pinpoint installation id.
+     *         </p>
+     */
+    public AnalyticsMetadataType getAnalyticsMetadata() {
+        return analyticsMetadata;
+    }
+
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     *
+     * @param analyticsMetadata <p>
+     *            The pinpoint installation id.
+     *            </p>
+     */
+    public void setAnalyticsMetadata(AnalyticsMetadataType analyticsMetadata) {
+        this.analyticsMetadata = analyticsMetadata;
+    }
+
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param analyticsMetadata <p>
+     *            The pinpoint installation id.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ConfirmForgotPasswordRequest withAnalyticsMetadata(
+            AnalyticsMetadataType analyticsMetadata) {
+        this.analyticsMetadata = analyticsMetadata;
+        return this;
+    }
+
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -421,7 +474,9 @@ public String toString() {
         if (getConfirmationCode() != null)
             sb.append("ConfirmationCode: " + getConfirmationCode() + ",");
         if (getPassword() != null)
-            sb.append("Password: " + getPassword());
+            sb.append("Password: " + getPassword() + ",");
+        if (getAnalyticsMetadata() != null)
+            sb.append("AnalyticsMetadata: " + getAnalyticsMetadata());
         sb.append("}");
         return sb.toString();
     }
@@ -437,6 +492,8 @@ public int hashCode() {
         hashCode = prime * hashCode
                 + ((getConfirmationCode() == null) ? 0 : getConfirmationCode().hashCode());
         hashCode = prime * hashCode + ((getPassword() == null) ? 0 : getPassword().hashCode());
+        hashCode = prime * hashCode
+                + ((getAnalyticsMetadata() == null) ? 0 : getAnalyticsMetadata().hashCode());
         return hashCode;
     }
 
@@ -473,6 +530,11 @@ public boolean equals(Object obj) {
             return false;
         if (other.getPassword() != null && other.getPassword().equals(this.getPassword()) == false)
             return false;
+        if (other.getAnalyticsMetadata() == null ^ this.getAnalyticsMetadata() == null)
+            return false;
+        if (other.getAnalyticsMetadata() != null
+                && other.getAnalyticsMetadata().equals(this.getAnalyticsMetadata()) == false)
+            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmSignUpRequest.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmSignUpRequest.java
index b27c43f7dc..03cdf0db4e 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmSignUpRequest.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmSignUpRequest.java
@@ -84,6 +84,13 @@
      */
     private Boolean forceAliasCreation;
 
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     */
+    private AnalyticsMetadataType analyticsMetadata;
+
     /**
      * <p>
      * The ID of the client associated with the user pool.
@@ -433,6 +440,51 @@ public ConfirmSignUpRequest withForceAliasCreation(Boolean forceAliasCreation) {
         return this;
     }
 
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     *
+     * @return <p>
+     *         The pinpoint installation id.
+     *         </p>
+     */
+    public AnalyticsMetadataType getAnalyticsMetadata() {
+        return analyticsMetadata;
+    }
+
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     *
+     * @param analyticsMetadata <p>
+     *            The pinpoint installation id.
+     *            </p>
+     */
+    public void setAnalyticsMetadata(AnalyticsMetadataType analyticsMetadata) {
+        this.analyticsMetadata = analyticsMetadata;
+    }
+
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param analyticsMetadata <p>
+     *            The pinpoint installation id.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ConfirmSignUpRequest withAnalyticsMetadata(AnalyticsMetadataType analyticsMetadata) {
+        this.analyticsMetadata = analyticsMetadata;
+        return this;
+    }
+
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -453,7 +505,9 @@ public String toString() {
         if (getConfirmationCode() != null)
             sb.append("ConfirmationCode: " + getConfirmationCode() + ",");
         if (getForceAliasCreation() != null)
-            sb.append("ForceAliasCreation: " + getForceAliasCreation());
+            sb.append("ForceAliasCreation: " + getForceAliasCreation() + ",");
+        if (getAnalyticsMetadata() != null)
+            sb.append("AnalyticsMetadata: " + getAnalyticsMetadata());
         sb.append("}");
         return sb.toString();
     }
@@ -470,6 +524,8 @@ public int hashCode() {
                 + ((getConfirmationCode() == null) ? 0 : getConfirmationCode().hashCode());
         hashCode = prime * hashCode
                 + ((getForceAliasCreation() == null) ? 0 : getForceAliasCreation().hashCode());
+        hashCode = prime * hashCode
+                + ((getAnalyticsMetadata() == null) ? 0 : getAnalyticsMetadata().hashCode());
         return hashCode;
     }
 
@@ -507,6 +563,11 @@ public boolean equals(Object obj) {
         if (other.getForceAliasCreation() != null
                 && other.getForceAliasCreation().equals(this.getForceAliasCreation()) == false)
             return false;
+        if (other.getAnalyticsMetadata() == null ^ this.getAnalyticsMetadata() == null)
+            return false;
+        if (other.getAnalyticsMetadata() != null
+                && other.getAnalyticsMetadata().equals(this.getAnalyticsMetadata()) == false)
+            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ForgotPasswordRequest.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ForgotPasswordRequest.java
index 71227bf117..740ea62817 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ForgotPasswordRequest.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ForgotPasswordRequest.java
@@ -61,6 +61,13 @@
      */
     private String username;
 
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     */
+    private AnalyticsMetadataType analyticsMetadata;
+
     /**
      * <p>
      * The ID of the client associated with the user pool.
@@ -250,6 +257,51 @@ public ForgotPasswordRequest withUsername(String username) {
         return this;
     }
 
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     *
+     * @return <p>
+     *         The pinpoint installation id.
+     *         </p>
+     */
+    public AnalyticsMetadataType getAnalyticsMetadata() {
+        return analyticsMetadata;
+    }
+
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     *
+     * @param analyticsMetadata <p>
+     *            The pinpoint installation id.
+     *            </p>
+     */
+    public void setAnalyticsMetadata(AnalyticsMetadataType analyticsMetadata) {
+        this.analyticsMetadata = analyticsMetadata;
+    }
+
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param analyticsMetadata <p>
+     *            The pinpoint installation id.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ForgotPasswordRequest withAnalyticsMetadata(AnalyticsMetadataType analyticsMetadata) {
+        this.analyticsMetadata = analyticsMetadata;
+        return this;
+    }
+
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -266,7 +318,9 @@ public String toString() {
         if (getSecretHash() != null)
             sb.append("SecretHash: " + getSecretHash() + ",");
         if (getUsername() != null)
-            sb.append("Username: " + getUsername());
+            sb.append("Username: " + getUsername() + ",");
+        if (getAnalyticsMetadata() != null)
+            sb.append("AnalyticsMetadata: " + getAnalyticsMetadata());
         sb.append("}");
         return sb.toString();
     }
@@ -279,6 +333,8 @@ public int hashCode() {
         hashCode = prime * hashCode + ((getClientId() == null) ? 0 : getClientId().hashCode());
         hashCode = prime * hashCode + ((getSecretHash() == null) ? 0 : getSecretHash().hashCode());
         hashCode = prime * hashCode + ((getUsername() == null) ? 0 : getUsername().hashCode());
+        hashCode = prime * hashCode
+                + ((getAnalyticsMetadata() == null) ? 0 : getAnalyticsMetadata().hashCode());
         return hashCode;
     }
 
@@ -306,6 +362,11 @@ public boolean equals(Object obj) {
             return false;
         if (other.getUsername() != null && other.getUsername().equals(this.getUsername()) == false)
             return false;
+        if (other.getAnalyticsMetadata() == null ^ this.getAnalyticsMetadata() == null)
+            return false;
+        if (other.getAnalyticsMetadata() != null
+                && other.getAnalyticsMetadata().equals(this.getAnalyticsMetadata()) == false)
+            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InitiateAuthRequest.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InitiateAuthRequest.java
index 755d1ff653..861e5c7367 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InitiateAuthRequest.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InitiateAuthRequest.java
@@ -61,6 +61,13 @@
      */
     private String clientId;
 
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     */
+    private AnalyticsMetadataType analyticsMetadata;
+
     /**
      * <p>
      * The authentication flow.
@@ -384,6 +391,51 @@ public InitiateAuthRequest withClientId(String clientId) {
         return this;
     }
 
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     *
+     * @return <p>
+     *         The pinpoint installation id.
+     *         </p>
+     */
+    public AnalyticsMetadataType getAnalyticsMetadata() {
+        return analyticsMetadata;
+    }
+
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     *
+     * @param analyticsMetadata <p>
+     *            The pinpoint installation id.
+     *            </p>
+     */
+    public void setAnalyticsMetadata(AnalyticsMetadataType analyticsMetadata) {
+        this.analyticsMetadata = analyticsMetadata;
+    }
+
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param analyticsMetadata <p>
+     *            The pinpoint installation id.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public InitiateAuthRequest withAnalyticsMetadata(AnalyticsMetadataType analyticsMetadata) {
+        this.analyticsMetadata = analyticsMetadata;
+        return this;
+    }
+
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -402,7 +454,9 @@ public String toString() {
         if (getClientMetadata() != null)
             sb.append("ClientMetadata: " + getClientMetadata() + ",");
         if (getClientId() != null)
-            sb.append("ClientId: " + getClientId());
+            sb.append("ClientId: " + getClientId() + ",");
+        if (getAnalyticsMetadata() != null)
+            sb.append("AnalyticsMetadata: " + getAnalyticsMetadata());
         sb.append("}");
         return sb.toString();
     }
@@ -418,6 +472,8 @@ public int hashCode() {
         hashCode = prime * hashCode
                 + ((getClientMetadata() == null) ? 0 : getClientMetadata().hashCode());
         hashCode = prime * hashCode + ((getClientId() == null) ? 0 : getClientId().hashCode());
+        hashCode = prime * hashCode
+                + ((getAnalyticsMetadata() == null) ? 0 : getAnalyticsMetadata().hashCode());
         return hashCode;
     }
 
@@ -450,6 +506,11 @@ public boolean equals(Object obj) {
             return false;
         if (other.getClientId() != null && other.getClientId().equals(this.getClientId()) == false)
             return false;
+        if (other.getAnalyticsMetadata() == null ^ this.getAnalyticsMetadata() == null)
+            return false;
+        if (other.getAnalyticsMetadata() != null
+                && other.getAnalyticsMetadata().equals(this.getAnalyticsMetadata()) == false)
+            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ResendConfirmationCodeRequest.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ResendConfirmationCodeRequest.java
index 3f7ca24a20..207cee7a23 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ResendConfirmationCodeRequest.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ResendConfirmationCodeRequest.java
@@ -61,6 +61,13 @@
      */
     private String username;
 
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     */
+    private AnalyticsMetadataType analyticsMetadata;
+
     /**
      * <p>
      * The ID of the client associated with the user pool.
@@ -247,6 +254,52 @@ public ResendConfirmationCodeRequest withUsername(String username) {
         return this;
     }
 
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     *
+     * @return <p>
+     *         The pinpoint installation id.
+     *         </p>
+     */
+    public AnalyticsMetadataType getAnalyticsMetadata() {
+        return analyticsMetadata;
+    }
+
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     *
+     * @param analyticsMetadata <p>
+     *            The pinpoint installation id.
+     *            </p>
+     */
+    public void setAnalyticsMetadata(AnalyticsMetadataType analyticsMetadata) {
+        this.analyticsMetadata = analyticsMetadata;
+    }
+
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param analyticsMetadata <p>
+     *            The pinpoint installation id.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ResendConfirmationCodeRequest withAnalyticsMetadata(
+            AnalyticsMetadataType analyticsMetadata) {
+        this.analyticsMetadata = analyticsMetadata;
+        return this;
+    }
+
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -263,7 +316,9 @@ public String toString() {
         if (getSecretHash() != null)
             sb.append("SecretHash: " + getSecretHash() + ",");
         if (getUsername() != null)
-            sb.append("Username: " + getUsername());
+            sb.append("Username: " + getUsername() + ",");
+        if (getAnalyticsMetadata() != null)
+            sb.append("AnalyticsMetadata: " + getAnalyticsMetadata());
         sb.append("}");
         return sb.toString();
     }
@@ -276,6 +331,8 @@ public int hashCode() {
         hashCode = prime * hashCode + ((getClientId() == null) ? 0 : getClientId().hashCode());
         hashCode = prime * hashCode + ((getSecretHash() == null) ? 0 : getSecretHash().hashCode());
         hashCode = prime * hashCode + ((getUsername() == null) ? 0 : getUsername().hashCode());
+        hashCode = prime * hashCode
+                + ((getAnalyticsMetadata() == null) ? 0 : getAnalyticsMetadata().hashCode());
         return hashCode;
     }
 
@@ -303,6 +360,11 @@ public boolean equals(Object obj) {
             return false;
         if (other.getUsername() != null && other.getUsername().equals(this.getUsername()) == false)
             return false;
+        if (other.getAnalyticsMetadata() == null ^ this.getAnalyticsMetadata() == null)
+            return false;
+        if (other.getAnalyticsMetadata() != null
+                && other.getAnalyticsMetadata().equals(this.getAnalyticsMetadata()) == false)
+            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/RespondToAuthChallengeRequest.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/RespondToAuthChallengeRequest.java
index 8d1b4cc644..84d55516eb 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/RespondToAuthChallengeRequest.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/RespondToAuthChallengeRequest.java
@@ -65,6 +65,13 @@
      */
     private java.util.Map<String, String> challengeResponses;
 
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     */
+    private AnalyticsMetadataType analyticsMetadata;
+
     /**
      * <p>
      * The client ID.
@@ -366,6 +373,52 @@ public RespondToAuthChallengeRequest clearChallengeResponsesEntries() {
         return this;
     }
 
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     *
+     * @return <p>
+     *         The pinpoint installation id.
+     *         </p>
+     */
+    public AnalyticsMetadataType getAnalyticsMetadata() {
+        return analyticsMetadata;
+    }
+
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     *
+     * @param analyticsMetadata <p>
+     *            The pinpoint installation id.
+     *            </p>
+     */
+    public void setAnalyticsMetadata(AnalyticsMetadataType analyticsMetadata) {
+        this.analyticsMetadata = analyticsMetadata;
+    }
+
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param analyticsMetadata <p>
+     *            The pinpoint installation id.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public RespondToAuthChallengeRequest withAnalyticsMetadata(
+            AnalyticsMetadataType analyticsMetadata) {
+        this.analyticsMetadata = analyticsMetadata;
+        return this;
+    }
+
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -384,7 +437,9 @@ public String toString() {
         if (getSession() != null)
             sb.append("Session: " + getSession() + ",");
         if (getChallengeResponses() != null)
-            sb.append("ChallengeResponses: " + getChallengeResponses());
+            sb.append("ChallengeResponses: " + getChallengeResponses() + ",");
+        if (getAnalyticsMetadata() != null)
+            sb.append("AnalyticsMetadata: " + getAnalyticsMetadata());
         sb.append("}");
         return sb.toString();
     }
@@ -400,6 +455,8 @@ public int hashCode() {
         hashCode = prime * hashCode + ((getSession() == null) ? 0 : getSession().hashCode());
         hashCode = prime * hashCode
                 + ((getChallengeResponses() == null) ? 0 : getChallengeResponses().hashCode());
+        hashCode = prime * hashCode
+                + ((getAnalyticsMetadata() == null) ? 0 : getAnalyticsMetadata().hashCode());
         return hashCode;
     }
 
@@ -432,6 +489,11 @@ public boolean equals(Object obj) {
         if (other.getChallengeResponses() != null
                 && other.getChallengeResponses().equals(this.getChallengeResponses()) == false)
             return false;
+        if (other.getAnalyticsMetadata() == null ^ this.getAnalyticsMetadata() == null)
+            return false;
+        if (other.getAnalyticsMetadata() != null
+                && other.getAnalyticsMetadata().equals(this.getAnalyticsMetadata()) == false)
+            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SignUpRequest.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SignUpRequest.java
index 6fcd301745..5f1e45b257 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SignUpRequest.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SignUpRequest.java
@@ -86,6 +86,13 @@
      */
     private java.util.List<AttributeType> validationData;
 
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     */
+    private AnalyticsMetadataType analyticsMetadata;
+
     /**
      * <p>
      * The ID of the client associated with the user pool.
@@ -474,6 +481,51 @@ public SignUpRequest withValidationData(java.util.Collection<AttributeType> vali
         return this;
     }
 
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     *
+     * @return <p>
+     *         The pinpoint installation id.
+     *         </p>
+     */
+    public AnalyticsMetadataType getAnalyticsMetadata() {
+        return analyticsMetadata;
+    }
+
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     *
+     * @param analyticsMetadata <p>
+     *            The pinpoint installation id.
+     *            </p>
+     */
+    public void setAnalyticsMetadata(AnalyticsMetadataType analyticsMetadata) {
+        this.analyticsMetadata = analyticsMetadata;
+    }
+
+    /**
+     * <p>
+     * The pinpoint installation id.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param analyticsMetadata <p>
+     *            The pinpoint installation id.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SignUpRequest withAnalyticsMetadata(AnalyticsMetadataType analyticsMetadata) {
+        this.analyticsMetadata = analyticsMetadata;
+        return this;
+    }
+
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -496,7 +548,9 @@ public String toString() {
         if (getUserAttributes() != null)
             sb.append("UserAttributes: " + getUserAttributes() + ",");
         if (getValidationData() != null)
-            sb.append("ValidationData: " + getValidationData());
+            sb.append("ValidationData: " + getValidationData() + ",");
+        if (getAnalyticsMetadata() != null)
+            sb.append("AnalyticsMetadata: " + getAnalyticsMetadata());
         sb.append("}");
         return sb.toString();
     }
@@ -514,6 +568,8 @@ public int hashCode() {
                 + ((getUserAttributes() == null) ? 0 : getUserAttributes().hashCode());
         hashCode = prime * hashCode
                 + ((getValidationData() == null) ? 0 : getValidationData().hashCode());
+        hashCode = prime * hashCode
+                + ((getAnalyticsMetadata() == null) ? 0 : getAnalyticsMetadata().hashCode());
         return hashCode;
     }
 
@@ -555,6 +611,11 @@ public boolean equals(Object obj) {
         if (other.getValidationData() != null
                 && other.getValidationData().equals(this.getValidationData()) == false)
             return false;
+        if (other.getAnalyticsMetadata() == null ^ this.getAnalyticsMetadata() == null)
+            return false;
+        if (other.getAnalyticsMetadata() != null
+                && other.getAnalyticsMetadata().equals(this.getAnalyticsMetadata()) == false)
+            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AnalyticsMetadataTypeJsonMarshaller.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AnalyticsMetadataTypeJsonMarshaller.java
new file mode 100644
index 0000000000..1c8056349d
--- /dev/null
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AnalyticsMetadataTypeJsonMarshaller.java
@@ -0,0 +1,44 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentityprovider.model.transform;
+
+import com.amazonaws.services.cognitoidentityprovider.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO AnalyticsMetadataType
+ */
+class AnalyticsMetadataTypeJsonMarshaller {
+
+    public void marshall(AnalyticsMetadataType analyticsMetadataType, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (analyticsMetadataType.getAnalyticsEndpointId() != null) {
+            String analyticsEndpointId = analyticsMetadataType.getAnalyticsEndpointId();
+            jsonWriter.name("AnalyticsEndpointId");
+            jsonWriter.value(analyticsEndpointId);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static AnalyticsMetadataTypeJsonMarshaller instance;
+
+    public static AnalyticsMetadataTypeJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new AnalyticsMetadataTypeJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AnalyticsMetadataTypeJsonUnmarshaller.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AnalyticsMetadataTypeJsonUnmarshaller.java
new file mode 100644
index 0000000000..46f012456f
--- /dev/null
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AnalyticsMetadataTypeJsonUnmarshaller.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentityprovider.model.transform;
+
+import com.amazonaws.services.cognitoidentityprovider.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO AnalyticsMetadataType
+ */
+class AnalyticsMetadataTypeJsonUnmarshaller implements
+        Unmarshaller<AnalyticsMetadataType, JsonUnmarshallerContext> {
+
+    public AnalyticsMetadataType unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        AnalyticsMetadataType analyticsMetadataType = new AnalyticsMetadataType();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("AnalyticsEndpointId")) {
+                analyticsMetadataType.setAnalyticsEndpointId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return analyticsMetadataType;
+    }
+
+    private static AnalyticsMetadataTypeJsonUnmarshaller instance;
+
+    public static AnalyticsMetadataTypeJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new AnalyticsMetadataTypeJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmForgotPasswordRequestMarshaller.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmForgotPasswordRequestMarshaller.java
index 20e34b4bce..baa226f299 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmForgotPasswordRequestMarshaller.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmForgotPasswordRequestMarshaller.java
@@ -85,6 +85,13 @@
                 jsonWriter.name("Password");
                 jsonWriter.value(password);
             }
+            if (confirmForgotPasswordRequest.getAnalyticsMetadata() != null) {
+                AnalyticsMetadataType analyticsMetadata = confirmForgotPasswordRequest
+                        .getAnalyticsMetadata();
+                jsonWriter.name("AnalyticsMetadata");
+                AnalyticsMetadataTypeJsonMarshaller.getInstance().marshall(analyticsMetadata,
+                        jsonWriter);
+            }
 
             jsonWriter.endObject();
             jsonWriter.close();
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmSignUpRequestMarshaller.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmSignUpRequestMarshaller.java
index 74070b9b65..9520793a15 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmSignUpRequestMarshaller.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmSignUpRequestMarshaller.java
@@ -84,6 +84,13 @@
                 jsonWriter.name("ForceAliasCreation");
                 jsonWriter.value(forceAliasCreation);
             }
+            if (confirmSignUpRequest.getAnalyticsMetadata() != null) {
+                AnalyticsMetadataType analyticsMetadata = confirmSignUpRequest
+                        .getAnalyticsMetadata();
+                jsonWriter.name("AnalyticsMetadata");
+                AnalyticsMetadataTypeJsonMarshaller.getInstance().marshall(analyticsMetadata,
+                        jsonWriter);
+            }
 
             jsonWriter.endObject();
             jsonWriter.close();
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ForgotPasswordRequestMarshaller.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ForgotPasswordRequestMarshaller.java
index a40624aac3..49b32aaea4 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ForgotPasswordRequestMarshaller.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ForgotPasswordRequestMarshaller.java
@@ -74,6 +74,13 @@
                 jsonWriter.name("Username");
                 jsonWriter.value(username);
             }
+            if (forgotPasswordRequest.getAnalyticsMetadata() != null) {
+                AnalyticsMetadataType analyticsMetadata = forgotPasswordRequest
+                        .getAnalyticsMetadata();
+                jsonWriter.name("AnalyticsMetadata");
+                AnalyticsMetadataTypeJsonMarshaller.getInstance().marshall(analyticsMetadata,
+                        jsonWriter);
+            }
 
             jsonWriter.endObject();
             jsonWriter.close();
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InitiateAuthRequestMarshaller.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InitiateAuthRequestMarshaller.java
index bd7e656ea5..c5df9b97a1 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InitiateAuthRequestMarshaller.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InitiateAuthRequestMarshaller.java
@@ -99,6 +99,13 @@
                 jsonWriter.name("ClientId");
                 jsonWriter.value(clientId);
             }
+            if (initiateAuthRequest.getAnalyticsMetadata() != null) {
+                AnalyticsMetadataType analyticsMetadata = initiateAuthRequest
+                        .getAnalyticsMetadata();
+                jsonWriter.name("AnalyticsMetadata");
+                AnalyticsMetadataTypeJsonMarshaller.getInstance().marshall(analyticsMetadata,
+                        jsonWriter);
+            }
 
             jsonWriter.endObject();
             jsonWriter.close();
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ResendConfirmationCodeRequestMarshaller.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ResendConfirmationCodeRequestMarshaller.java
index 41576b46eb..a46aaf538e 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ResendConfirmationCodeRequestMarshaller.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ResendConfirmationCodeRequestMarshaller.java
@@ -75,6 +75,13 @@
                 jsonWriter.name("Username");
                 jsonWriter.value(username);
             }
+            if (resendConfirmationCodeRequest.getAnalyticsMetadata() != null) {
+                AnalyticsMetadataType analyticsMetadata = resendConfirmationCodeRequest
+                        .getAnalyticsMetadata();
+                jsonWriter.name("AnalyticsMetadata");
+                AnalyticsMetadataTypeJsonMarshaller.getInstance().marshall(analyticsMetadata,
+                        jsonWriter);
+            }
 
             jsonWriter.endObject();
             jsonWriter.close();
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/RespondToAuthChallengeRequestMarshaller.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/RespondToAuthChallengeRequestMarshaller.java
index 26f2b07a29..4b8b33c9d4 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/RespondToAuthChallengeRequestMarshaller.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/RespondToAuthChallengeRequestMarshaller.java
@@ -90,6 +90,13 @@
                 }
                 jsonWriter.endObject();
             }
+            if (respondToAuthChallengeRequest.getAnalyticsMetadata() != null) {
+                AnalyticsMetadataType analyticsMetadata = respondToAuthChallengeRequest
+                        .getAnalyticsMetadata();
+                jsonWriter.name("AnalyticsMetadata");
+                AnalyticsMetadataTypeJsonMarshaller.getInstance().marshall(analyticsMetadata,
+                        jsonWriter);
+            }
 
             jsonWriter.endObject();
             jsonWriter.close();
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SignUpRequestMarshaller.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SignUpRequestMarshaller.java
index 65a213b2dc..e8c4746ae5 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SignUpRequestMarshaller.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SignUpRequestMarshaller.java
@@ -101,6 +101,12 @@
                 }
                 jsonWriter.endArray();
             }
+            if (signUpRequest.getAnalyticsMetadata() != null) {
+                AnalyticsMetadataType analyticsMetadata = signUpRequest.getAnalyticsMetadata();
+                jsonWriter.name("AnalyticsMetadata");
+                AnalyticsMetadataTypeJsonMarshaller.getInstance().marshall(analyticsMetadata,
+                        jsonWriter);
+            }
 
             jsonWriter.endObject();
             jsonWriter.close();
diff --git a/aws-android-sdk-core/pom.xml b/aws-android-sdk-core/pom.xml
index 5770e317b5..3909fc5b44 100644
--- a/aws-android-sdk-core/pom.xml
+++ b/aws-android-sdk-core/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/event/ProgressReportingInputStream.java b/aws-android-sdk-core/src/main/java/com/amazonaws/event/ProgressReportingInputStream.java
index 86610e53f5..ee490d0ca3 100644
--- a/aws-android-sdk-core/src/main/java/com/amazonaws/event/ProgressReportingInputStream.java
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/event/ProgressReportingInputStream.java
@@ -32,8 +32,14 @@
  */
 public class ProgressReportingInputStream extends SdkFilterInputStream {
 
+    /** Constant to represent 1KB. */
+    private static final int BYTES_IN_KB = 1024;
+
+    /** Constant to represent the Notification Threshold in KB. */
+    private static final int THRESHOLD_IN_KB = 8;
+
     /** The threshold of bytes between notifications. */
-    private static final int NOTIFICATION_THRESHOLD = 8 * 1024;
+    private int notificationThreshold = THRESHOLD_IN_KB * BYTES_IN_KB;
 
     /** The listener callback executor */
     private final ProgressListenerCallbackExecutor listenerCallbackExecutor;
@@ -66,6 +72,17 @@ public ProgressReportingInputStream(final InputStream in,
         this.listenerCallbackExecutor = listenerCallbackExecutor;
     }
 
+    /**
+     * Sets the number of Kbytes that need to be written before updates to the
+     * listener occur.
+     *
+     * @param threshold Number of Kbytes that needs to be written before
+     *            write update notification occurs.
+     */
+    public void setNotificationThreshold(final int threshold) {
+        this.notificationThreshold = threshold * BYTES_IN_KB;
+    }
+
     /**
      * Sets whether this input stream should fire an event with code
      * {@link ProgressEvent#COMPLETED_EVENT_CODE} when this stream runs out of
@@ -141,7 +158,8 @@ private void notifyCompleted() {
 
     private void notify(int bytesRead) {
         unnotifiedByteCount += bytesRead;
-        if (unnotifiedByteCount >= NOTIFICATION_THRESHOLD) {
+
+        if (unnotifiedByteCount >= this.notificationThreshold) {
             listenerCallbackExecutor.progressChanged(new ProgressEvent(unnotifiedByteCount));
             unnotifiedByteCount = 0;
         }
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/regions/RegionDefaults.java b/aws-android-sdk-core/src/main/java/com/amazonaws/regions/RegionDefaults.java
index 222b375f75..ff34366f06 100644
--- a/aws-android-sdk-core/src/main/java/com/amazonaws/regions/RegionDefaults.java
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/regions/RegionDefaults.java
@@ -27,324 +27,324 @@
 
         region = new Region("ap-northeast-1", "");
         ret.add(region);
-        updateRegion(region, "sns", "sns.ap-northeast-1.amazonaws.com", false, true);
-        updateRegion(region, "cognito-sync", "cognito-sync.ap-northeast-1.amazonaws.com", false,
-                true);
-        updateRegion(region, "ec2", "ec2.ap-northeast-1.amazonaws.com", false, true);
-        updateRegion(region, "sqs", "sqs.ap-northeast-1.amazonaws.com", false, true);
-        updateRegion(region, "dynamodb", "dynamodb.ap-northeast-1.amazonaws.com", false, true);
-        updateRegion(region, "sdb", "sdb.ap-northeast-1.amazonaws.com", false, true);
         updateRegion(region, "autoscaling", "autoscaling.ap-northeast-1.amazonaws.com", false, true);
-        updateRegion(region, "kinesis", "kinesis.ap-northeast-1.amazonaws.com", false, true);
         updateRegion(region, "cognito-identity", "cognito-identity.ap-northeast-1.amazonaws.com",
                 false, true);
-        updateRegion(region, "kms", "kms.ap-northeast-1.amazonaws.com", false, true);
-        updateRegion(region, "iot", "iot.ap-northeast-1.amazonaws.com", false, true);
-        updateRegion(region, "data.iot", "data.iot.ap-northeast-1.amazonaws.com", false, true);
-        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
-        updateRegion(region, "s3", "s3-ap-northeast-1.amazonaws.com", false, true);
         updateRegion(region, "cognito-idp", "cognito-idp.ap-northeast-1.amazonaws.com", false, true);
-        updateRegion(region, "lambda", "lambda.ap-northeast-1.amazonaws.com", false, true);
+        updateRegion(region, "cognito-sync", "cognito-sync.ap-northeast-1.amazonaws.com", false,
+                true);
+        updateRegion(region, "data.iot", "data.iot.ap-northeast-1.amazonaws.com", false, true);
+        updateRegion(region, "dynamodb", "dynamodb.ap-northeast-1.amazonaws.com", false, true);
+        updateRegion(region, "ec2", "ec2.ap-northeast-1.amazonaws.com", false, true);
         updateRegion(region, "elasticloadbalancing",
                 "elasticloadbalancing.ap-northeast-1.amazonaws.com", false, true);
+        updateRegion(region, "iot", "iot.ap-northeast-1.amazonaws.com", false, true);
+        updateRegion(region, "kinesis", "kinesis.ap-northeast-1.amazonaws.com", false, true);
+        updateRegion(region, "kms", "kms.ap-northeast-1.amazonaws.com", false, true);
+        updateRegion(region, "lambda", "lambda.ap-northeast-1.amazonaws.com", false, true);
+        updateRegion(region, "s3", "s3-ap-northeast-1.amazonaws.com", false, true);
+        updateRegion(region, "sdb", "sdb.ap-northeast-1.amazonaws.com", false, true);
+        updateRegion(region, "sns", "sns.ap-northeast-1.amazonaws.com", false, true);
+        updateRegion(region, "sqs", "sqs.ap-northeast-1.amazonaws.com", false, true);
+        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
 
         region = new Region("ap-northeast-2", "");
         ret.add(region);
-        updateRegion(region, "s3", "s3.ap-northeast-2.amazonaws.com", false, true);
         updateRegion(region, "autoscaling", "autoscaling.ap-northeast-2.amazonaws.com", false, true);
-        updateRegion(region, "ec2", "ec2.ap-northeast-2.amazonaws.com", false, true);
-        updateRegion(region, "cognito-sync", "cognito-sync.ap-northeast-2.amazonaws.com", false,
-                true);
-        updateRegion(region, "sts", "sts.ap-northeast-2.amazonaws.com", false, true);
-        updateRegion(region, "dynamodb", "dynamodb.ap-northeast-2.amazonaws.com", false, true);
         updateRegion(region, "cognito-identity", "cognito-identity.ap-northeast-2.amazonaws.com",
                 false, true);
         updateRegion(region, "cognito-idp", "cognito-idp.ap-northeast-2.amazonaws.com", false, true);
-        updateRegion(region, "sqs", "sqs.ap-northeast-2.amazonaws.com", false, true);
-        updateRegion(region, "iot", "iot.ap-northeast-2.amazonaws.com", false, true);
-        updateRegion(region, "sns", "sns.ap-northeast-2.amazonaws.com", false, true);
+        updateRegion(region, "cognito-sync", "cognito-sync.ap-northeast-2.amazonaws.com", false,
+                true);
+        updateRegion(region, "data.iot", "data.iot.ap-northeast-2.amazonaws.com", false, true);
+        updateRegion(region, "dynamodb", "dynamodb.ap-northeast-2.amazonaws.com", false, true);
+        updateRegion(region, "ec2", "ec2.ap-northeast-2.amazonaws.com", false, true);
         updateRegion(region, "elasticloadbalancing",
                 "elasticloadbalancing.ap-northeast-2.amazonaws.com", false, true);
+        updateRegion(region, "iot", "iot.ap-northeast-2.amazonaws.com", false, true);
+        updateRegion(region, "kinesis", "kinesis.ap-northeast-2.amazonaws.com", false, true);
         updateRegion(region, "kms", "kms.ap-northeast-2.amazonaws.com", false, true);
         updateRegion(region, "lambda", "lambda.ap-northeast-2.amazonaws.com", false, true);
-        updateRegion(region, "kinesis", "kinesis.ap-northeast-2.amazonaws.com", false, true);
-        updateRegion(region, "data.iot", "data.iot.ap-northeast-2.amazonaws.com", false, true);
+        updateRegion(region, "s3", "s3.ap-northeast-2.amazonaws.com", false, true);
+        updateRegion(region, "sns", "sns.ap-northeast-2.amazonaws.com", false, true);
+        updateRegion(region, "sqs", "sqs.ap-northeast-2.amazonaws.com", false, true);
+        updateRegion(region, "sts", "sts.ap-northeast-2.amazonaws.com", false, true);
 
         region = new Region("ap-south-1", "");
         ret.add(region);
-        updateRegion(region, "cognito-idp", "cognito-idp.ap-south-1.amazonaws.com", false, true);
-        updateRegion(region, "kms", "kms.ap-south-1.amazonaws.com", false, true);
-        updateRegion(region, "ec2", "ec2.ap-south-1.amazonaws.com", false, true);
         updateRegion(region, "autoscaling", "autoscaling.ap-south-1.amazonaws.com", false, true);
-        updateRegion(region, "lambda", "lambda.ap-south-1.amazonaws.com", false, true);
-        updateRegion(region, "kinesis", "kinesis.ap-south-1.amazonaws.com", false, true);
-        updateRegion(region, "sns", "sns.ap-south-1.amazonaws.com", false, true);
         updateRegion(region, "cognito-identity", "cognito-identity.ap-south-1.amazonaws.com",
                 false, true);
+        updateRegion(region, "cognito-idp", "cognito-idp.ap-south-1.amazonaws.com", false, true);
+        updateRegion(region, "cognito-sync", "cognito-sync.ap-south-1.amazonaws.com", false, true);
+        updateRegion(region, "dynamodb", "dynamodb.ap-south-1.amazonaws.com", false, true);
+        updateRegion(region, "ec2", "ec2.ap-south-1.amazonaws.com", false, true);
         updateRegion(region, "elasticloadbalancing",
                 "elasticloadbalancing.ap-south-1.amazonaws.com", false, true);
-        updateRegion(region, "dynamodb", "dynamodb.ap-south-1.amazonaws.com", false, true);
-        updateRegion(region, "cognito-sync", "cognito-sync.ap-south-1.amazonaws.com", false, true);
+        updateRegion(region, "kinesis", "kinesis.ap-south-1.amazonaws.com", false, true);
+        updateRegion(region, "kms", "kms.ap-south-1.amazonaws.com", false, true);
+        updateRegion(region, "lambda", "lambda.ap-south-1.amazonaws.com", false, true);
+        updateRegion(region, "s3", "s3.ap-south-1.amazonaws.com", false, true);
+        updateRegion(region, "sns", "sns.ap-south-1.amazonaws.com", false, true);
         updateRegion(region, "sqs", "sqs.ap-south-1.amazonaws.com", false, true);
         updateRegion(region, "sts", "sts.amazonaws.com", false, true);
-        updateRegion(region, "s3", "s3.ap-south-1.amazonaws.com", false, true);
 
         region = new Region("ap-southeast-1", "");
         ret.add(region);
-        updateRegion(region, "kms", "kms.ap-southeast-1.amazonaws.com", false, true);
-        updateRegion(region, "s3", "s3-ap-southeast-1.amazonaws.com", false, true);
-        updateRegion(region, "sns", "sns.ap-southeast-1.amazonaws.com", false, true);
-        updateRegion(region, "ec2", "ec2.ap-southeast-1.amazonaws.com", false, true);
+        updateRegion(region, "autoscaling", "autoscaling.ap-southeast-1.amazonaws.com", false, true);
+        updateRegion(region, "data.iot", "data.iot.ap-southeast-1.amazonaws.com", false, true);
         updateRegion(region, "dynamodb", "dynamodb.ap-southeast-1.amazonaws.com", false, true);
+        updateRegion(region, "ec2", "ec2.ap-southeast-1.amazonaws.com", false, true);
         updateRegion(region, "elasticloadbalancing",
                 "elasticloadbalancing.ap-southeast-1.amazonaws.com", false, true);
-        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
+        updateRegion(region, "iot", "iot.ap-southeast-1.amazonaws.com", false, true);
+        updateRegion(region, "kinesis", "kinesis.ap-southeast-1.amazonaws.com", false, true);
+        updateRegion(region, "kms", "kms.ap-southeast-1.amazonaws.com", false, true);
         updateRegion(region, "lambda", "lambda.ap-southeast-1.amazonaws.com", false, true);
+        updateRegion(region, "s3", "s3-ap-southeast-1.amazonaws.com", false, true);
         updateRegion(region, "sdb", "sdb.ap-southeast-1.amazonaws.com", false, true);
-        updateRegion(region, "iot", "iot.ap-southeast-1.amazonaws.com", false, true);
+        updateRegion(region, "sns", "sns.ap-southeast-1.amazonaws.com", false, true);
         updateRegion(region, "sqs", "sqs.ap-southeast-1.amazonaws.com", false, true);
-        updateRegion(region, "data.iot", "data.iot.ap-southeast-1.amazonaws.com", false, true);
-        updateRegion(region, "autoscaling", "autoscaling.ap-southeast-1.amazonaws.com", false, true);
-        updateRegion(region, "kinesis", "kinesis.ap-southeast-1.amazonaws.com", false, true);
+        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
 
         region = new Region("ap-southeast-2", "");
         ret.add(region);
-        updateRegion(region, "ec2", "ec2.ap-southeast-2.amazonaws.com", false, true);
-        updateRegion(region, "data.iot", "data.iot.ap-southeast-2.amazonaws.com", false, true);
-        updateRegion(region, "iot", "iot.ap-southeast-2.amazonaws.com", false, true);
-        updateRegion(region, "s3", "s3-ap-southeast-2.amazonaws.com", false, true);
         updateRegion(region, "autoscaling", "autoscaling.ap-southeast-2.amazonaws.com", false, true);
-        updateRegion(region, "lambda", "lambda.ap-southeast-2.amazonaws.com", false, true);
+        updateRegion(region, "cognito-identity", "cognito-identity.ap-southeast-2.amazonaws.com",
+                false, true);
+        updateRegion(region, "cognito-idp", "cognito-idp.ap-southeast-2.amazonaws.com", false, true);
         updateRegion(region, "cognito-sync", "cognito-sync.ap-southeast-2.amazonaws.com", false,
                 true);
-        updateRegion(region, "cognito-idp", "cognito-idp.ap-southeast-2.amazonaws.com", false, true);
+        updateRegion(region, "data.iot", "data.iot.ap-southeast-2.amazonaws.com", false, true);
+        updateRegion(region, "dynamodb", "dynamodb.ap-southeast-2.amazonaws.com", false, true);
+        updateRegion(region, "ec2", "ec2.ap-southeast-2.amazonaws.com", false, true);
         updateRegion(region, "elasticloadbalancing",
                 "elasticloadbalancing.ap-southeast-2.amazonaws.com", false, true);
-        updateRegion(region, "sns", "sns.ap-southeast-2.amazonaws.com", false, true);
-        updateRegion(region, "kms", "kms.ap-southeast-2.amazonaws.com", false, true);
-        updateRegion(region, "dynamodb", "dynamodb.ap-southeast-2.amazonaws.com", false, true);
-        updateRegion(region, "cognito-identity", "cognito-identity.ap-southeast-2.amazonaws.com",
-                false, true);
+        updateRegion(region, "iot", "iot.ap-southeast-2.amazonaws.com", false, true);
         updateRegion(region, "kinesis", "kinesis.ap-southeast-2.amazonaws.com", false, true);
+        updateRegion(region, "kms", "kms.ap-southeast-2.amazonaws.com", false, true);
+        updateRegion(region, "lambda", "lambda.ap-southeast-2.amazonaws.com", false, true);
+        updateRegion(region, "s3", "s3-ap-southeast-2.amazonaws.com", false, true);
         updateRegion(region, "sdb", "sdb.ap-southeast-2.amazonaws.com", false, true);
+        updateRegion(region, "sns", "sns.ap-southeast-2.amazonaws.com", false, true);
         updateRegion(region, "sqs", "sqs.ap-southeast-2.amazonaws.com", false, true);
         updateRegion(region, "sts", "sts.amazonaws.com", false, true);
 
         region = new Region("ca-central-1", "");
         ret.add(region);
+        updateRegion(region, "autoscaling", "autoscaling.ca-central-1.amazonaws.com", false, true);
         updateRegion(region, "dynamodb", "dynamodb.ca-central-1.amazonaws.com", false, true);
-        updateRegion(region, "sns", "sns.ca-central-1.amazonaws.com", false, true);
-        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
+        updateRegion(region, "ec2", "ec2.ca-central-1.amazonaws.com", false, true);
         updateRegion(region, "elasticloadbalancing",
                 "elasticloadbalancing.ca-central-1.amazonaws.com", false, true);
-        updateRegion(region, "ec2", "ec2.ca-central-1.amazonaws.com", false, true);
         updateRegion(region, "kinesis", "kinesis.ca-central-1.amazonaws.com", false, true);
-        updateRegion(region, "s3", "s3.ca-central-1.amazonaws.com", false, true);
-        updateRegion(region, "autoscaling", "autoscaling.ca-central-1.amazonaws.com", false, true);
         updateRegion(region, "kms", "kms.ca-central-1.amazonaws.com", false, true);
+        updateRegion(region, "s3", "s3.ca-central-1.amazonaws.com", false, true);
+        updateRegion(region, "sns", "sns.ca-central-1.amazonaws.com", false, true);
         updateRegion(region, "sqs", "sqs.ca-central-1.amazonaws.com", false, true);
+        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
 
         region = new Region("eu-central-1", "");
         ret.add(region);
-        updateRegion(region, "iot", "iot.eu-central-1.amazonaws.com", false, true);
-        updateRegion(region, "sns", "sns.eu-central-1.amazonaws.com", false, true);
-        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
+        updateRegion(region, "autoscaling", "autoscaling.eu-central-1.amazonaws.com", false, true);
         updateRegion(region, "cognito-identity", "cognito-identity.eu-central-1.amazonaws.com",
                 false, true);
         updateRegion(region, "cognito-idp", "cognito-idp.eu-central-1.amazonaws.com", false, true);
+        updateRegion(region, "cognito-sync", "cognito-sync.eu-central-1.amazonaws.com", false, true);
+        updateRegion(region, "data.iot", "data.iot.eu-central-1.amazonaws.com", false, true);
+        updateRegion(region, "dynamodb", "dynamodb.eu-central-1.amazonaws.com", false, true);
         updateRegion(region, "ec2", "ec2.eu-central-1.amazonaws.com", false, true);
-        updateRegion(region, "s3", "s3.eu-central-1.amazonaws.com", false, true);
         updateRegion(region, "elasticloadbalancing",
                 "elasticloadbalancing.eu-central-1.amazonaws.com", false, true);
-        updateRegion(region, "sqs", "sqs.eu-central-1.amazonaws.com", false, true);
+        updateRegion(region, "iot", "iot.eu-central-1.amazonaws.com", false, true);
         updateRegion(region, "kinesis", "kinesis.eu-central-1.amazonaws.com", false, true);
-        updateRegion(region, "data.iot", "data.iot.eu-central-1.amazonaws.com", false, true);
-        updateRegion(region, "cognito-sync", "cognito-sync.eu-central-1.amazonaws.com", false, true);
         updateRegion(region, "kms", "kms.eu-central-1.amazonaws.com", false, true);
         updateRegion(region, "lambda", "lambda.eu-central-1.amazonaws.com", false, true);
-        updateRegion(region, "autoscaling", "autoscaling.eu-central-1.amazonaws.com", false, true);
-        updateRegion(region, "dynamodb", "dynamodb.eu-central-1.amazonaws.com", false, true);
+        updateRegion(region, "s3", "s3.eu-central-1.amazonaws.com", false, true);
+        updateRegion(region, "sns", "sns.eu-central-1.amazonaws.com", false, true);
+        updateRegion(region, "sqs", "sqs.eu-central-1.amazonaws.com", false, true);
+        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
 
         region = new Region("eu-west-1", "");
         ret.add(region);
-        updateRegion(region, "lambda", "lambda.eu-west-1.amazonaws.com", false, true);
-        updateRegion(region, "machinelearning", "machinelearning.eu-west-1.amazonaws.com", false,
-                true);
-        updateRegion(region, "data.iot", "data.iot.eu-west-1.amazonaws.com", false, true);
-        updateRegion(region, "sdb", "sdb.eu-west-1.amazonaws.com", false, true);
-        updateRegion(region, "cognito-sync", "cognito-sync.eu-west-1.amazonaws.com", false, true);
-        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
-        updateRegion(region, "sqs", "sqs.eu-west-1.amazonaws.com", false, true);
         updateRegion(region, "autoscaling", "autoscaling.eu-west-1.amazonaws.com", false, true);
-        updateRegion(region, "cognito-idp", "cognito-idp.eu-west-1.amazonaws.com", false, true);
-        updateRegion(region, "dynamodb", "dynamodb.eu-west-1.amazonaws.com", false, true);
-        updateRegion(region, "polly", "polly.eu-west-1.amazonaws.com", false, true);
-        updateRegion(region, "firehose", "firehose.eu-west-1.amazonaws.com", false, true);
         updateRegion(region, "cognito-identity", "cognito-identity.eu-west-1.amazonaws.com", false,
                 true);
+        updateRegion(region, "cognito-idp", "cognito-idp.eu-west-1.amazonaws.com", false, true);
+        updateRegion(region, "cognito-sync", "cognito-sync.eu-west-1.amazonaws.com", false, true);
+        updateRegion(region, "data.iot", "data.iot.eu-west-1.amazonaws.com", false, true);
+        updateRegion(region, "dynamodb", "dynamodb.eu-west-1.amazonaws.com", false, true);
+        updateRegion(region, "ec2", "ec2.eu-west-1.amazonaws.com", false, true);
         updateRegion(region, "elasticloadbalancing",
                 "elasticloadbalancing.eu-west-1.amazonaws.com", false, true);
-        updateRegion(region, "iot", "iot.eu-west-1.amazonaws.com", false, true);
         updateRegion(region, "email", "email.eu-west-1.amazonaws.com", false, true);
-        updateRegion(region, "kms", "kms.eu-west-1.amazonaws.com", false, true);
-        updateRegion(region, "sns", "sns.eu-west-1.amazonaws.com", false, true);
+        updateRegion(region, "firehose", "firehose.eu-west-1.amazonaws.com", false, true);
+        updateRegion(region, "iot", "iot.eu-west-1.amazonaws.com", false, true);
         updateRegion(region, "kinesis", "kinesis.eu-west-1.amazonaws.com", false, true);
-        updateRegion(region, "ec2", "ec2.eu-west-1.amazonaws.com", false, true);
+        updateRegion(region, "kms", "kms.eu-west-1.amazonaws.com", false, true);
+        updateRegion(region, "lambda", "lambda.eu-west-1.amazonaws.com", false, true);
+        updateRegion(region, "machinelearning", "machinelearning.eu-west-1.amazonaws.com", false,
+                true);
+        updateRegion(region, "polly", "polly.eu-west-1.amazonaws.com", false, true);
         updateRegion(region, "s3", "s3-eu-west-1.amazonaws.com", false, true);
+        updateRegion(region, "sdb", "sdb.eu-west-1.amazonaws.com", false, true);
+        updateRegion(region, "sns", "sns.eu-west-1.amazonaws.com", false, true);
+        updateRegion(region, "sqs", "sqs.eu-west-1.amazonaws.com", false, true);
+        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
 
         region = new Region("eu-west-2", "");
         ret.add(region);
+        updateRegion(region, "autoscaling", "autoscaling.eu-west-2.amazonaws.com", false, true);
         updateRegion(region, "cognito-identity", "cognito-identity.eu-west-2.amazonaws.com", false,
                 true);
+        updateRegion(region, "cognito-idp", "cognito-idp.eu-west-2.amazonaws.com", false, true);
         updateRegion(region, "cognito-sync", "cognito-sync.eu-west-2.amazonaws.com", false, true);
+        updateRegion(region, "dynamodb", "dynamodb.eu-west-2.amazonaws.com", false, true);
+        updateRegion(region, "ec2", "ec2.eu-west-2.amazonaws.com", false, true);
+        updateRegion(region, "elasticloadbalancing",
+                "elasticloadbalancing.eu-west-2.amazonaws.com", false, true);
         updateRegion(region, "iot", "iot.eu-west-2.amazonaws.com", false, true);
         updateRegion(region, "kinesis", "kinesis.eu-west-2.amazonaws.com", false, true);
-        updateRegion(region, "autoscaling", "autoscaling.eu-west-2.amazonaws.com", false, true);
         updateRegion(region, "kms", "kms.eu-west-2.amazonaws.com", false, true);
-        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
-        updateRegion(region, "ec2", "ec2.eu-west-2.amazonaws.com", false, true);
         updateRegion(region, "lambda", "lambda.eu-west-2.amazonaws.com", false, true);
         updateRegion(region, "s3", "s3.eu-west-2.amazonaws.com", false, true);
-        updateRegion(region, "elasticloadbalancing",
-                "elasticloadbalancing.eu-west-2.amazonaws.com", false, true);
-        updateRegion(region, "sqs", "sqs.eu-west-2.amazonaws.com", false, true);
         updateRegion(region, "sns", "sns.eu-west-2.amazonaws.com", false, true);
-        updateRegion(region, "dynamodb", "dynamodb.eu-west-2.amazonaws.com", false, true);
-        updateRegion(region, "cognito-idp", "cognito-idp.eu-west-2.amazonaws.com", false, true);
+        updateRegion(region, "sqs", "sqs.eu-west-2.amazonaws.com", false, true);
+        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
 
         region = new Region("sa-east-1", "");
         ret.add(region);
+        updateRegion(region, "autoscaling", "autoscaling.sa-east-1.amazonaws.com", false, true);
+        updateRegion(region, "dynamodb", "dynamodb.sa-east-1.amazonaws.com", false, true);
         updateRegion(region, "ec2", "ec2.sa-east-1.amazonaws.com", false, true);
-        updateRegion(region, "s3", "s3-sa-east-1.amazonaws.com", false, true);
         updateRegion(region, "elasticloadbalancing",
                 "elasticloadbalancing.sa-east-1.amazonaws.com", false, true);
-        updateRegion(region, "sns", "sns.sa-east-1.amazonaws.com", false, true);
-        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
+        updateRegion(region, "kinesis", "kinesis.sa-east-1.amazonaws.com", false, true);
+        updateRegion(region, "kms", "kms.sa-east-1.amazonaws.com", false, true);
+        updateRegion(region, "s3", "s3-sa-east-1.amazonaws.com", false, true);
         updateRegion(region, "sdb", "sdb.sa-east-1.amazonaws.com", false, true);
+        updateRegion(region, "sns", "sns.sa-east-1.amazonaws.com", false, true);
         updateRegion(region, "sqs", "sqs.sa-east-1.amazonaws.com", false, true);
-        updateRegion(region, "autoscaling", "autoscaling.sa-east-1.amazonaws.com", false, true);
-        updateRegion(region, "dynamodb", "dynamodb.sa-east-1.amazonaws.com", false, true);
-        updateRegion(region, "kms", "kms.sa-east-1.amazonaws.com", false, true);
-        updateRegion(region, "kinesis", "kinesis.sa-east-1.amazonaws.com", false, true);
+        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
 
         region = new Region("us-east-1", "");
         ret.add(region);
-        updateRegion(region, "firehose", "firehose.us-east-1.amazonaws.com", false, true);
-        updateRegion(region, "polly", "polly.us-east-1.amazonaws.com", false, true);
-        updateRegion(region, "kinesis", "kinesis.us-east-1.amazonaws.com", false, true);
+        updateRegion(region, "autoscaling", "autoscaling.us-east-1.amazonaws.com", false, true);
+        updateRegion(region, "cognito-identity", "cognito-identity.us-east-1.amazonaws.com", false,
+                true);
+        updateRegion(region, "cognito-idp", "cognito-idp.us-east-1.amazonaws.com", false, true);
+        updateRegion(region, "cognito-sync", "cognito-sync.us-east-1.amazonaws.com", false, true);
+        updateRegion(region, "data.iot", "data.iot.us-east-1.amazonaws.com", false, true);
         updateRegion(region, "dynamodb", "dynamodb.us-east-1.amazonaws.com", false, true);
+        updateRegion(region, "ec2", "ec2.us-east-1.amazonaws.com", false, true);
+        updateRegion(region, "elasticloadbalancing",
+                "elasticloadbalancing.us-east-1.amazonaws.com", false, true);
         updateRegion(region, "email", "email.us-east-1.amazonaws.com", false, true);
+        updateRegion(region, "firehose", "firehose.us-east-1.amazonaws.com", false, true);
         updateRegion(region, "iot", "iot.us-east-1.amazonaws.com", false, true);
+        updateRegion(region, "kinesis", "kinesis.us-east-1.amazonaws.com", false, true);
+        updateRegion(region, "kms", "kms.us-east-1.amazonaws.com", false, true);
         updateRegion(region, "lambda", "lambda.us-east-1.amazonaws.com", false, true);
         updateRegion(region, "machinelearning", "machinelearning.us-east-1.amazonaws.com", false,
                 true);
-        updateRegion(region, "cognito-identity", "cognito-identity.us-east-1.amazonaws.com", false,
-                true);
-        updateRegion(region, "cognito-sync", "cognito-sync.us-east-1.amazonaws.com", false, true);
-        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
-        updateRegion(region, "elasticloadbalancing",
-                "elasticloadbalancing.us-east-1.amazonaws.com", false, true);
-        updateRegion(region, "sdb", "sdb.amazonaws.com", false, true);
-        updateRegion(region, "autoscaling", "autoscaling.us-east-1.amazonaws.com", false, true);
         updateRegion(region, "mobileanalytics", "mobileanalytics.us-east-1.amazonaws.com", false,
                 true);
         updateRegion(region, "pinpoint", "pinpoint.us-east-1.amazonaws.com", false, true);
-        updateRegion(region, "ec2", "ec2.us-east-1.amazonaws.com", false, true);
-        updateRegion(region, "sqs", "sqs.us-east-1.amazonaws.com", false, true);
-        updateRegion(region, "cognito-idp", "cognito-idp.us-east-1.amazonaws.com", false, true);
-        updateRegion(region, "kms", "kms.us-east-1.amazonaws.com", false, true);
-        updateRegion(region, "data.iot", "data.iot.us-east-1.amazonaws.com", false, true);
+        updateRegion(region, "polly", "polly.us-east-1.amazonaws.com", false, true);
         updateRegion(region, "s3", "s3.amazonaws.com", false, true);
+        updateRegion(region, "sdb", "sdb.amazonaws.com", false, true);
         updateRegion(region, "sns", "sns.us-east-1.amazonaws.com", false, true);
+        updateRegion(region, "sqs", "sqs.us-east-1.amazonaws.com", false, true);
+        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
 
         region = new Region("us-east-2", "");
         ret.add(region);
-        updateRegion(region, "cognito-sync", "cognito-sync.us-east-2.amazonaws.com", false, true);
-        updateRegion(region, "iot", "iot.us-east-2.amazonaws.com", false, true);
-        updateRegion(region, "polly", "polly.us-east-2.amazonaws.com", false, true);
-        updateRegion(region, "elasticloadbalancing",
-                "elasticloadbalancing.us-east-2.amazonaws.com", false, true);
+        updateRegion(region, "autoscaling", "autoscaling.us-east-2.amazonaws.com", false, true);
         updateRegion(region, "cognito-identity", "cognito-identity.us-east-2.amazonaws.com", false,
                 true);
-        updateRegion(region, "sns", "sns.us-east-2.amazonaws.com", false, true);
-        updateRegion(region, "dynamodb", "dynamodb.us-east-2.amazonaws.com", false, true);
-        updateRegion(region, "autoscaling", "autoscaling.us-east-2.amazonaws.com", false, true);
-        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
         updateRegion(region, "cognito-idp", "cognito-idp.us-east-2.amazonaws.com", false, true);
-        updateRegion(region, "lambda", "lambda.us-east-2.amazonaws.com", false, true);
+        updateRegion(region, "cognito-sync", "cognito-sync.us-east-2.amazonaws.com", false, true);
+        updateRegion(region, "dynamodb", "dynamodb.us-east-2.amazonaws.com", false, true);
+        updateRegion(region, "ec2", "ec2.us-east-2.amazonaws.com", false, true);
+        updateRegion(region, "elasticloadbalancing",
+                "elasticloadbalancing.us-east-2.amazonaws.com", false, true);
+        updateRegion(region, "iot", "iot.us-east-2.amazonaws.com", false, true);
+        updateRegion(region, "kinesis", "kinesis.us-east-2.amazonaws.com", false, true);
         updateRegion(region, "kms", "kms.us-east-2.amazonaws.com", false, true);
+        updateRegion(region, "lambda", "lambda.us-east-2.amazonaws.com", false, true);
+        updateRegion(region, "polly", "polly.us-east-2.amazonaws.com", false, true);
         updateRegion(region, "s3", "s3.us-east-2.amazonaws.com", false, true);
+        updateRegion(region, "sns", "sns.us-east-2.amazonaws.com", false, true);
         updateRegion(region, "sqs", "sqs.us-east-2.amazonaws.com", false, true);
-        updateRegion(region, "ec2", "ec2.us-east-2.amazonaws.com", false, true);
-        updateRegion(region, "kinesis", "kinesis.us-east-2.amazonaws.com", false, true);
+        updateRegion(region, "sts", "sts.amazonaws.com", false, true);
 
         region = new Region("us-west-1", "");
         ret.add(region);
-        updateRegion(region, "sqs", "sqs.us-west-1.amazonaws.com", false, true);
-        updateRegion(region, "kinesis", "kinesis.us-west-1.amazonaws.com", false, true);
         updateRegion(region, "autoscaling", "autoscaling.us-west-1.amazonaws.com", false, true);
+        updateRegion(region, "dynamodb", "dynamodb.us-west-1.amazonaws.com", false, true);
+        updateRegion(region, "ec2", "ec2.us-west-1.amazonaws.com", false, true);
+        updateRegion(region, "elasticloadbalancing",
+                "elasticloadbalancing.us-west-1.amazonaws.com", false, true);
+        updateRegion(region, "kinesis", "kinesis.us-west-1.amazonaws.com", false, true);
+        updateRegion(region, "kms", "kms.us-west-1.amazonaws.com", false, true);
         updateRegion(region, "lambda", "lambda.us-west-1.amazonaws.com", false, true);
         updateRegion(region, "s3", "s3-us-west-1.amazonaws.com", false, true);
-        updateRegion(region, "kms", "kms.us-west-1.amazonaws.com", false, true);
         updateRegion(region, "sdb", "sdb.us-west-1.amazonaws.com", false, true);
         updateRegion(region, "sns", "sns.us-west-1.amazonaws.com", false, true);
-        updateRegion(region, "elasticloadbalancing",
-                "elasticloadbalancing.us-west-1.amazonaws.com", false, true);
+        updateRegion(region, "sqs", "sqs.us-west-1.amazonaws.com", false, true);
         updateRegion(region, "sts", "sts.amazonaws.com", false, true);
-        updateRegion(region, "dynamodb", "dynamodb.us-west-1.amazonaws.com", false, true);
-        updateRegion(region, "ec2", "ec2.us-west-1.amazonaws.com", false, true);
 
         region = new Region("us-west-2", "");
         ret.add(region);
+        updateRegion(region, "autoscaling", "autoscaling.us-west-2.amazonaws.com", false, true);
+        updateRegion(region, "cognito-identity", "cognito-identity.us-west-2.amazonaws.com", false,
+                true);
+        updateRegion(region, "cognito-idp", "cognito-idp.us-west-2.amazonaws.com", false, true);
         updateRegion(region, "cognito-sync", "cognito-sync.us-west-2.amazonaws.com", false, true);
-        updateRegion(region, "s3", "s3-us-west-2.amazonaws.com", false, true);
-        updateRegion(region, "iot", "iot.us-west-2.amazonaws.com", false, true);
-        updateRegion(region, "sns", "sns.us-west-2.amazonaws.com", false, true);
         updateRegion(region, "data.iot", "data.iot.us-west-2.amazonaws.com", false, true);
+        updateRegion(region, "dynamodb", "dynamodb.us-west-2.amazonaws.com", false, true);
+        updateRegion(region, "ec2", "ec2.us-west-2.amazonaws.com", false, true);
+        updateRegion(region, "elasticloadbalancing",
+                "elasticloadbalancing.us-west-2.amazonaws.com", false, true);
+        updateRegion(region, "email", "email.us-west-2.amazonaws.com", false, true);
+        updateRegion(region, "firehose", "firehose.us-west-2.amazonaws.com", false, true);
+        updateRegion(region, "iot", "iot.us-west-2.amazonaws.com", false, true);
         updateRegion(region, "kinesis", "kinesis.us-west-2.amazonaws.com", false, true);
+        updateRegion(region, "kms", "kms.us-west-2.amazonaws.com", false, true);
         updateRegion(region, "lambda", "lambda.us-west-2.amazonaws.com", false, true);
-        updateRegion(region, "cognito-identity", "cognito-identity.us-west-2.amazonaws.com", false,
-                true);
+        updateRegion(region, "polly", "polly.us-west-2.amazonaws.com", false, true);
+        updateRegion(region, "s3", "s3-us-west-2.amazonaws.com", false, true);
         updateRegion(region, "sdb", "sdb.us-west-2.amazonaws.com", false, true);
-        updateRegion(region, "autoscaling", "autoscaling.us-west-2.amazonaws.com", false, true);
+        updateRegion(region, "sns", "sns.us-west-2.amazonaws.com", false, true);
         updateRegion(region, "sqs", "sqs.us-west-2.amazonaws.com", false, true);
-        updateRegion(region, "ec2", "ec2.us-west-2.amazonaws.com", false, true);
-        updateRegion(region, "polly", "polly.us-west-2.amazonaws.com", false, true);
         updateRegion(region, "sts", "sts.amazonaws.com", false, true);
-        updateRegion(region, "firehose", "firehose.us-west-2.amazonaws.com", false, true);
-        updateRegion(region, "email", "email.us-west-2.amazonaws.com", false, true);
-        updateRegion(region, "cognito-idp", "cognito-idp.us-west-2.amazonaws.com", false, true);
-        updateRegion(region, "dynamodb", "dynamodb.us-west-2.amazonaws.com", false, true);
-        updateRegion(region, "kms", "kms.us-west-2.amazonaws.com", false, true);
-        updateRegion(region, "elasticloadbalancing",
-                "elasticloadbalancing.us-west-2.amazonaws.com", false, true);
 
         region = new Region("cn-north-1", "");
         ret.add(region);
-        updateRegion(region, "sts", "sts.cn-north-1.amazonaws.com.cn", false, true);
-        updateRegion(region, "elasticloadbalancing",
-                "elasticloadbalancing.cn-north-1.amazonaws.com.cn", false, true);
-        updateRegion(region, "sns", "sns.cn-north-1.amazonaws.com.cn", false, true);
         updateRegion(region, "autoscaling", "autoscaling.cn-north-1.amazonaws.com.cn", false, true);
+        updateRegion(region, "dynamodb", "dynamodb.cn-north-1.amazonaws.com.cn", false, true);
         updateRegion(region, "ec2", "ec2.cn-north-1.amazonaws.com.cn", false, true);
+        updateRegion(region, "elasticloadbalancing",
+                "elasticloadbalancing.cn-north-1.amazonaws.com.cn", false, true);
+        updateRegion(region, "kinesis", "kinesis.cn-north-1.amazonaws.com.cn", false, true);
         updateRegion(region, "s3", "s3.cn-north-1.amazonaws.com.cn", false, true);
+        updateRegion(region, "sns", "sns.cn-north-1.amazonaws.com.cn", false, true);
         updateRegion(region, "sqs", "sqs.cn-north-1.amazonaws.com.cn", false, true);
-        updateRegion(region, "dynamodb", "dynamodb.cn-north-1.amazonaws.com.cn", false, true);
-        updateRegion(region, "kinesis", "kinesis.cn-north-1.amazonaws.com.cn", false, true);
+        updateRegion(region, "sts", "sts.cn-north-1.amazonaws.com.cn", false, true);
 
         region = new Region("us-gov-west-1", "");
         ret.add(region);
-        updateRegion(region, "ec2", "ec2.us-gov-west-1.amazonaws.com", false, true);
-        updateRegion(region, "sqs", "sqs.us-gov-west-1.amazonaws.com", false, true);
         updateRegion(region, "autoscaling", "autoscaling.us-gov-west-1.amazonaws.com", false, true);
-        updateRegion(region, "kinesis", "kinesis.us-gov-west-1.amazonaws.com", false, true);
-        updateRegion(region, "s3", "s3-us-gov-west-1.amazonaws.com", false, true);
-        updateRegion(region, "kms", "kms.us-gov-west-1.amazonaws.com", false, true);
+        updateRegion(region, "dynamodb", "dynamodb.us-gov-west-1.amazonaws.com", false, true);
+        updateRegion(region, "ec2", "ec2.us-gov-west-1.amazonaws.com", false, true);
         updateRegion(region, "elasticloadbalancing",
                 "elasticloadbalancing.us-gov-west-1.amazonaws.com", false, true);
+        updateRegion(region, "kinesis", "kinesis.us-gov-west-1.amazonaws.com", false, true);
+        updateRegion(region, "kms", "kms.us-gov-west-1.amazonaws.com", false, true);
+        updateRegion(region, "s3", "s3-us-gov-west-1.amazonaws.com", false, true);
         updateRegion(region, "sns", "sns.us-gov-west-1.amazonaws.com", false, true);
+        updateRegion(region, "sqs", "sqs.us-gov-west-1.amazonaws.com", false, true);
         updateRegion(region, "sts", "sts.amazonaws.com", false, true);
-        updateRegion(region, "dynamodb", "dynamodb.us-gov-west-1.amazonaws.com", false, true);
         return ret;
     }
 
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java b/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java
index 4023733330..0d31347c56 100644
--- a/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java
@@ -26,7 +26,7 @@
     private static final int DEFAULT_STRING_LENGTH = 128;
 
     /** SDK version info */
-    private static volatile String version = "2.6.2";
+    private static volatile String version = "2.6.6";
                                                                 // changed build
                                                                 // logic
 
diff --git a/aws-android-sdk-core/src/main/resources/fabric/com.amazonaws.aws-android-sdk-core.properties b/aws-android-sdk-core/src/main/resources/fabric/com.amazonaws.aws-android-sdk-core.properties
index 5d9c3b8339..fd8afa2664 100644
--- a/aws-android-sdk-core/src/main/resources/fabric/com.amazonaws.aws-android-sdk-core.properties
+++ b/aws-android-sdk-core/src/main/resources/fabric/com.amazonaws.aws-android-sdk-core.properties
@@ -1,3 +1,3 @@
 fabric-identifier=com.amazonaws.aws-android-sdk-core
-fabric-version=2.6.2
+fabric-version=2.6.6
 fabric-build-type=binary
diff --git a/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java b/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java
index d193542930..a750b71d20 100644
--- a/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java
+++ b/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java
@@ -24,7 +24,7 @@
 
     @Test
     public void getVersion() {
-        assertEquals("2.6.2", VersionInfoUtils.getVersion());
+        assertEquals("2.6.6", VersionInfoUtils.getVersion());
     }
 
     @Test
diff --git a/aws-android-sdk-ddb-document/pom.xml b/aws-android-sdk-ddb-document/pom.xml
index 70da8cd456..74bc526c62 100644
--- a/aws-android-sdk-ddb-document/pom.xml
+++ b/aws-android-sdk-ddb-document/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,13 +20,13 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-ddb</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
     <dependency>
       <groupId>com.google.guava</groupId>
diff --git a/aws-android-sdk-ddb-mapper/pom.xml b/aws-android-sdk-ddb-mapper/pom.xml
index 7e722a73cd..a6813f7b3e 100644
--- a/aws-android-sdk-ddb-mapper/pom.xml
+++ b/aws-android-sdk-ddb-mapper/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,19 +20,19 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-ddb</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-s3</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
         <dependency>
         <groupId>junit</groupId>
diff --git a/aws-android-sdk-ddb/pom.xml b/aws-android-sdk-ddb/pom.xml
index a6348a34cb..6ca03faba3 100644
--- a/aws-android-sdk-ddb/pom.xml
+++ b/aws-android-sdk-ddb/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
         <dependency>
         <groupId>junit</groupId>
diff --git a/aws-android-sdk-ec2/pom.xml b/aws-android-sdk-ec2/pom.xml
index 0a9f0ba486..5ee5827362 100644
--- a/aws-android-sdk-ec2/pom.xml
+++ b/aws-android-sdk-ec2/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-elb/pom.xml b/aws-android-sdk-elb/pom.xml
index a63336f996..3a79a014f2 100644
--- a/aws-android-sdk-elb/pom.xml
+++ b/aws-android-sdk-elb/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-iot/pom.xml b/aws-android-sdk-iot/pom.xml
index 604e11e195..d9200e985f 100644
--- a/aws-android-sdk-iot/pom.xml
+++ b/aws-android-sdk-iot/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
     <dependency>
       <groupId>org.eclipse.paho</groupId>
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AwsIotEndpointUtility.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AwsIotEndpointUtility.java
index 1710498440..2abc202941 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AwsIotEndpointUtility.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AwsIotEndpointUtility.java
@@ -18,8 +18,12 @@
     private static final int ENDPOINT_DOMAIN_OFFSET = 3;
     /** Constant for token offset of "com" in endpoint. */
     private static final int ENDPOINT_TLD_OFFSET = 4;
+    /** Constant for token offset of "cn" in endpoint*/
+    private static final int ENDPOINT_CN_TLD_OFFSET = 5;
     /** Constant for number of tokens in endpoint. */
     private static final int ENDPOINT_SPLIT_SIZE = 5;
+    /** Constant for number of tokens in China's endpoint. */
+    private static final int ENDPOINT_CN_SPLIT_SIZE = 6;
 
     /**
      * Helper class, no public constructor.
@@ -51,12 +55,16 @@ private static String stripPort(String endpoint) {
      */
     private static void validateIotEndpoint(String endpoint) {
         String[] splits = splitEndpoint(endpoint);
-        if (splits.length != ENDPOINT_SPLIT_SIZE
+        if ((splits.length != ENDPOINT_SPLIT_SIZE) && (splits.length != ENDPOINT_CN_SPLIT_SIZE)) {
+            throw new IllegalArgumentException(
+                "Bad endpoint format.  Expected XXXXXX.iot.[region].amazonaws.com[.cn]");
+        }
+        if (((splits.length == ENDPOINT_CN_SPLIT_SIZE) && (!("cn").equalsIgnoreCase(splits[ENDPOINT_CN_TLD_OFFSET])))
                 || !("iot").equalsIgnoreCase(splits[ENDPOINT_IOT_OFFSET])
                 || !("amazonaws").equalsIgnoreCase(splits[ENDPOINT_DOMAIN_OFFSET])
                 || !("com").equalsIgnoreCase(splits[ENDPOINT_TLD_OFFSET])) {
             throw new IllegalArgumentException(
-                    "Bad endpoint format.  Expected XXXXXX.iot.[region].amazonaws.com.");
+                    "Bad endpoint format.  Expected XXXXXX.iot.[region].amazonaws.com[.cn]");
         }
     }
 
diff --git a/aws-android-sdk-kinesis/pom.xml b/aws-android-sdk-kinesis/pom.xml
index 21f927334f..feed134e2c 100644
--- a/aws-android-sdk-kinesis/pom.xml
+++ b/aws-android-sdk-kinesis/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/mobileconnectors/kinesis/kinesisrecorder/AbstractKinesisRecorder.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/mobileconnectors/kinesis/kinesisrecorder/AbstractKinesisRecorder.java
index 89dde3c95f..f6f33aaab6 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/mobileconnectors/kinesis/kinesisrecorder/AbstractKinesisRecorder.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/mobileconnectors/kinesis/kinesisrecorder/AbstractKinesisRecorder.java
@@ -215,6 +215,7 @@ protected String nextBatch(RecordIterator iterator, List<byte[]> data, int maxCo
         while (iterator.hasNext() && count < maxCount && size < maxSize) {
             final String line = iterator.peek();
             if (line == null || line.isEmpty()) {
+                iterator.next();
                 continue;
             }
             // parse a line. Skip in case of corrupted data
@@ -222,6 +223,7 @@ protected String nextBatch(RecordIterator iterator, List<byte[]> data, int maxCo
                 frp.parse(line);
             } catch (final Exception e) {
                 LOGGER.warn("Failed to read line. Skip.", e);
+                iterator.next();
                 continue;
             }
 
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/mobileconnectors/kinesis/kinesisrecorder/FileRecordStore.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/mobileconnectors/kinesis/kinesisrecorder/FileRecordStore.java
index 4d34962c47..fb820902cd 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/mobileconnectors/kinesis/kinesisrecorder/FileRecordStore.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/mobileconnectors/kinesis/kinesisrecorder/FileRecordStore.java
@@ -68,7 +68,7 @@ public FileRecordStore(File workDirectory, String recordFileName, long maxStorag
         try {
             tryCreateRecordsFile();
         } catch (final IOException ioe) {
-            throw new AmazonClientException("Failed to create fire store", ioe);
+            throw new AmazonClientException("Failed to create file store", ioe);
         }
     }
 
diff --git a/aws-android-sdk-kms/pom.xml b/aws-android-sdk-kms/pom.xml
index b3ad8f8715..1744e051b1 100644
--- a/aws-android-sdk-kms/pom.xml
+++ b/aws-android-sdk-kms/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-lambda/pom.xml b/aws-android-sdk-lambda/pom.xml
index a0d025658c..f69759596d 100644
--- a/aws-android-sdk-lambda/pom.xml
+++ b/aws-android-sdk-lambda/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-lex/pom.xml b/aws-android-sdk-lex/pom.xml
index d6511bf5ee..4c1fad6c12 100644
--- a/aws-android-sdk-lex/pom.xml
+++ b/aws-android-sdk-lex/pom.xml
@@ -12,7 +12,7 @@
     <parent>
         <groupId>com.amazonaws</groupId>
         <artifactId>aws-android-sdk-pom</artifactId>
-        <version>2.6.2</version>
+        <version>2.6.6</version>
     </parent>
 
    <!-- Component includes software under each of these licenses; this is not a choice of license -->
@@ -33,7 +33,7 @@
             <groupId>com.amazonaws</groupId>
             <artifactId>aws-android-sdk-core</artifactId>
             <optional>false</optional>
-            <version>2.6.2</version>
+            <version>2.6.6</version>
         </dependency>
         <dependency>
             <groupId>com.google.android</groupId>
diff --git a/aws-android-sdk-logs/pom.xml b/aws-android-sdk-logs/pom.xml
index 1e16d532e4..a373dbc5a8 100644
--- a/aws-android-sdk-logs/pom.xml
+++ b/aws-android-sdk-logs/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-machinelearning/pom.xml b/aws-android-sdk-machinelearning/pom.xml
index c9e4e0587a..74f48c580c 100644
--- a/aws-android-sdk-machinelearning/pom.xml
+++ b/aws-android-sdk-machinelearning/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-mobileanalytics/pom.xml b/aws-android-sdk-mobileanalytics/pom.xml
index f355cd3af9..966fd225aa 100644
--- a/aws-android-sdk-mobileanalytics/pom.xml
+++ b/aws-android-sdk-mobileanalytics/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-pinpoint/pom.xml b/aws-android-sdk-pinpoint/pom.xml
index d7f0206d4f..89bbd87219 100644
--- a/aws-android-sdk-pinpoint/pom.xml
+++ b/aws-android-sdk-pinpoint/pom.xml
@@ -12,7 +12,7 @@
     <parent>
         <groupId>com.amazonaws</groupId>
         <artifactId>aws-android-sdk-pom</artifactId>
-        <version>2.6.2</version>
+        <version>2.6.6</version>
     </parent>
 
     <dependencies>
@@ -20,7 +20,7 @@
             <groupId>com.amazonaws</groupId>
             <artifactId>aws-android-sdk-core</artifactId>
             <optional>false</optional>
-            <version>2.6.2</version>
+            <version>2.6.6</version>
         </dependency>
         <dependency>
             <groupId>junit</groupId>
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/PinpointConfiguration.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/PinpointConfiguration.java
index e49e5b770b..fa14115fd5 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/PinpointConfiguration.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/PinpointConfiguration.java
@@ -22,6 +22,7 @@
 import com.amazonaws.mobile.config.AWSConfiguration;
 import com.amazonaws.mobileconnectors.pinpoint.targeting.notification.AppLevelOptOutProvider;
 import com.amazonaws.regions.Regions;
+import com.amazonaws.services.pinpoint.model.ChannelType;
 
 import org.json.JSONObject;
 
@@ -33,6 +34,7 @@
     private Context context;
     private String appId;
     private Regions region;
+    private ChannelType channelType;
     private boolean enableEvents = true;
     private boolean enableTargeting = true;
     private boolean shouldPostNotificationsInForeground = false;
@@ -47,8 +49,29 @@
      * @param context             the android context object.
      * @param appId               the Pinpoint Application Id.
      * @param region              the AWS {@link Regions} for the Pinpoint service.
+     * @param channelType         the Pinpoint Channel type.
      * @param credentialsProvider The {@link AWSCredentialsProvider} to be used for the service.
      */
+    public PinpointConfiguration(final Context context, final String appId,
+                                 final Regions region, final ChannelType channelType,
+                                 final AWSCredentialsProvider credentialsProvider) {
+        this.clientConfiguration = new ClientConfiguration();
+        this.context = context;
+        this.appId = appId;
+        this.credentialsProvider = credentialsProvider;
+        this.region = region;
+        this.channelType = channelType;
+    }
+
+    /**
+     * Create an {@link PinpointConfiguration} object with the specified parameters.
+     *
+     * @param context             the android context object.
+     * @param appId               the Pinpoint Application Id.
+     * @param region              the AWS {@link Regions} for the Pinpoint service.
+     * @param credentialsProvider The {@link AWSCredentialsProvider} to be used for the service.
+     */
+    @Deprecated
     public PinpointConfiguration(final Context context, final String appId,
                                  final Regions region,
                                  final AWSCredentialsProvider credentialsProvider) {
@@ -57,6 +80,7 @@ public PinpointConfiguration(final Context context, final String appId,
         this.appId = appId;
         this.credentialsProvider = credentialsProvider;
         this.region = region;
+        this.channelType = ChannelType.GCM;
     }
 
     /**
@@ -74,6 +98,7 @@ public PinpointConfiguration(final Context context,
         try {
             final JSONObject pinpointConfig = awsConfiguration.optJsonObject("PinpointAnalytics");
             this.appId = pinpointConfig.getString("AppId");
+            this.channelType = convertToChannelType(pinpointConfig.optString("ChannelType"));
             this.region = Regions.fromName(pinpointConfig.getString("Region"));
 
             final String userAgent = awsConfiguration.getUserAgent();
@@ -91,6 +116,13 @@ public PinpointConfiguration(final Context context,
         this.credentialsProvider = credentialsProvider;
     }
 
+    private ChannelType convertToChannelType(String channel) {
+        if (channel.isEmpty())
+            return  ChannelType.GCM;
+
+        return ChannelType.fromValue(channel);
+    }
+
     /**
      * Sets the client configuration this client will use when making request
      *
@@ -286,6 +318,26 @@ public PinpointConfiguration withAppLevelOptOutProvider(final AppLevelOptOutProv
         return this;
     }
 
+    /**
+     * The channel type supported by this configuration.
+     * @return The channel type.
+     */
+    public ChannelType getChannelType() {
+        return channelType;
+    }
+
+    /**
+     * The channel type configured.
+     *
+     * @param channelType The ChannelType for this service.
+     * @return the current PinpointConfiguration instance.
+     */
+    @SuppressWarnings("checkstyle:hiddenfield")
+    public PinpointConfiguration withChannelType(final ChannelType channelType) {
+        this.channelType = channelType;
+        return this;
+    }
+
     /**
      * Configuration option to post notifications even if the app is in the foreground. By default notifications are
      * not posted when the app is in the foreground.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/PinpointManager.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/PinpointManager.java
index 30382c2e17..9d1af183c1 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/PinpointManager.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/PinpointManager.java
@@ -27,11 +27,12 @@
 import com.amazonaws.mobileconnectors.pinpoint.internal.validate.EncodingValidator;
 import com.amazonaws.mobileconnectors.pinpoint.internal.validate.PermissionValidator;
 import com.amazonaws.mobileconnectors.pinpoint.targeting.TargetingClient;
-import com.amazonaws.mobileconnectors.pinpoint.targeting.notification.GCMTokenRegisteredHandler;
+import com.amazonaws.mobileconnectors.pinpoint.targeting.notification.DeviceTokenRegisteredHandler;
 import com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClient;
 import com.amazonaws.mobileconnectors.pinpoint.targeting.notification.PinpointNotificationReceiver;
 import com.amazonaws.regions.Regions;
 import com.amazonaws.services.pinpoint.AmazonPinpointClient;
+import com.amazonaws.services.pinpoint.model.ChannelType;
 import com.amazonaws.services.pinpointanalytics.AmazonPinpointAnalyticsClient;
 import com.amazonaws.util.VersionInfoUtils;
 import android.content.Context;
@@ -73,6 +74,7 @@ public PinpointManager(final PinpointConfiguration config) {
             final Context appContext = config.getAppContext();
             final String appId = config.getAppId();
             final Regions region = config.getRegion();
+            final ChannelType channelType = config.getChannelType();
             final PinpointCallback<PinpointManager> initCompletionCallback = config.getInitCompletionCallback();
 
             Preconditions.checkNotNull(credentialsProvider, "The credentialsProvider provided must not be null");
@@ -88,7 +90,7 @@ public PinpointManager(final PinpointConfiguration config) {
             ENCODING_VALIDATOR.validate();
 
             this.pinpointContext = new PinpointContext(analyticsServiceClient, targetingServiceClient, appContext, appId, SDL_INFO, config);
-            this.notificationClient = new NotificationClient(this.pinpointContext);
+            this.notificationClient = NotificationClient.createClient(this.pinpointContext, channelType);
             this.pinpointContext.setNotificationClient(this.notificationClient);
             PinpointNotificationReceiver.setNotificationClient(this.notificationClient);
 
@@ -105,12 +107,13 @@ public PinpointManager(final PinpointConfiguration config) {
             if (config.getEnableTargeting()) {
                 this.targetingClient = new TargetingClient(pinpointContext);
                 this.pinpointContext.setTargetingClient(this.targetingClient);
-                this.notificationClient.addGCMTokenRegisteredHandler(new GCMTokenRegisteredHandler() {
-                        @Override
-                        public void tokenRegistered(String deviceToken) {
-                            PinpointManager.this.targetingClient.updateEndpointProfile();
-                        }
-                    });
+                this.notificationClient.addDeviceTokenRegisteredHandler(new DeviceTokenRegisteredHandler() {
+
+                    @Override
+                    public void tokenRegistered(String deviceToken) {
+                        PinpointManager.this.targetingClient.updateEndpointProfile();
+                    }
+                });
             } else {
                 this.targetingClient = null;
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/TargetingClient.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/TargetingClient.java
index eb9234b315..5bdff92f2f 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/TargetingClient.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/TargetingClient.java
@@ -20,7 +20,6 @@
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
-import java.util.MissingResourceException;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.LinkedBlockingQueue;
@@ -152,17 +151,9 @@ private void executeUpdate(EndpointProfile endpointProfile) {
             return;
         }
 
-        String locale;
-        try {
-            locale = endpointProfile.getDemographic().getLocale().getISO3Country();
-        } catch (final MissingResourceException exception) {
-            log.debug("Locale getISO3Country failed, falling back to getCountry.");
-            locale = endpointProfile.getDemographic().getLocale().getCountry();
-        }
-
         final EndpointDemographic demographic = new EndpointDemographic()
             .withAppVersion(endpointProfile.getDemographic().getAppVersion())
-            .withLocale(locale)
+            .withLocale(endpointProfile.getDemographic().getLocale().toString())
             .withTimezone(endpointProfile.getDemographic().getTimezone())
             .withMake(endpointProfile.getDemographic().getMake())
             .withModel(endpointProfile.getDemographic().getModel())
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/endpointProfile/EndpointProfile.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/endpointProfile/EndpointProfile.java
index 637e4e5cec..223608c752 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/endpointProfile/EndpointProfile.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/endpointProfile/EndpointProfile.java
@@ -70,7 +70,7 @@ public EndpointProfile(final PinpointContext pinpointContext) {
         this.pinpointContext = pinpointContext;
         this.effectiveDate = DateUtil.getCorrectedDate().getTime();
         this.demographic = new EndpointProfileDemographic(this.pinpointContext);
-        this.location = new EndpointProfileLocation();
+        this.location = new EndpointProfileLocation(this.pinpointContext);
         this.user = new EndpointProfileUser();
     }
 
@@ -127,16 +127,16 @@ public String getEndpointId() {
      * @return the channel type
      */
     public String getChannelType() {
-        return "GCM";
+        return this.pinpointContext.getNotificationClient().getChannelType();
     }
 
     /**
-     * Returns the Address of the endpoint. The token that is returned by GCM.
+     * Returns the Address of the endpoint. The token that is returned by the channel selected.
      *
      * @return the address
      */
     public String getAddress() {
-        return this.pinpointContext.getNotificationClient().getGCMDeviceToken();
+        return this.pinpointContext.getNotificationClient().getDeviceToken();
     }
 
     /**
@@ -200,7 +200,7 @@ public void setEffectiveDate(long effectiveDate) {
      */
     public String getOptOut() {
         return (this.pinpointContext.getNotificationClient().areAppNotificationsEnabled() && !StringUtil.isBlank(
-            this.pinpointContext.getNotificationClient().getGCMDeviceToken())) ? "NONE" : "ALL";
+            this.pinpointContext.getNotificationClient().getDeviceToken())) ? "NONE" : "ALL";
     }
 
     /**
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/endpointProfile/EndpointProfileDemographic.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/endpointProfile/EndpointProfileDemographic.java
index 1d0b9c99a6..2361af68c2 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/endpointProfile/EndpointProfileDemographic.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/endpointProfile/EndpointProfileDemographic.java
@@ -1,16 +1,13 @@
 /**
  * Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
  *
- * Licensed under the Apache License, Version 2.0 (the "License").
- * You may not use this file except in compliance with the License.
- * A copy of the License is located at
+ * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with the License. A copy of the License is
+ * located at
  *
  * http://aws.amazon.com/apache2.0
  *
- * or in the "license" file accompanying this file. This file is distributed
- * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
- * express or implied. See the License for the specific language governing
- * permissions and limitations under the License.
+ * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under the License.
  */
 
 package com.amazonaws.mobileconnectors.pinpoint.targeting.endpointProfile;
@@ -26,8 +23,7 @@
 import static com.amazonaws.mobileconnectors.pinpoint.internal.core.util.Preconditions.checkNotNull;
 
 /**
- * Amazon Pinpoint endpoint demographic, represented by application and device
- * characteristics
+ * Amazon Pinpoint endpoint demographic, represented by application and device characteristics
  */
 public class EndpointProfileDemographic implements JSONSerializable {
 
@@ -39,7 +35,7 @@
     private String make = "";
     private String model = Build.MODEL;
     private String timezone = TimeZone.getDefault().getID();
-    private Locale locale = Locale.getDefault();
+    private Locale locale;
     private String appVersion = "";
     private String platform = ENDPOINT_PLATFORM;
     private String platformVersion = Build.VERSION.RELEASE;
@@ -53,61 +49,153 @@ public EndpointProfileDemographic(final PinpointContext context) {
         checkNotNull(context, "A valid pinpointContext must be provided");
         make = context.getSystem().getDeviceDetails().manufacturer();
         appVersion = context.getSystem().getAppDetails().versionName();
+        locale = context.getApplicationContext().getResources().getConfiguration().locale;
     }
 
+    /**
+     * Gets make.
+     *
+     * @return the make
+     */
     public String getMake() {
         return this.make;
     }
 
+    /**
+     * Sets make.
+     *
+     * @param make the make
+     */
     public void setMake(String make) {
+        if (make == null) {
+            return;
+        }
         this.make = make;
     }
 
+    /**
+     * Gets model.
+     *
+     * @return the model
+     */
     public String getModel() {
         return this.model;
     }
 
+    /**
+     * Sets model.
+     *
+     * @param model the model
+     */
     public void setModel(String model) {
+        if (model == null) {
+            return;
+        }
         this.model = model;
     }
 
+    /**
+     * Gets timezone.
+     *
+     * @return the timezone
+     */
     public String getTimezone() {
         return this.timezone;
     }
 
+    /**
+     * Sets timezone.
+     *
+     * @param timezone the timezone
+     */
     public void setTimezone(String timezone) {
+        if (timezone == null) {
+            return;
+        }
         this.timezone = timezone;
     }
 
+    /**
+     * Gets locale.
+     *
+     * @return the locale
+     */
     public Locale getLocale() {
         return this.locale;
     }
 
+    /**
+     * Sets locale.
+     *
+     * @param locale the locale
+     */
     public void setLocale(Locale locale) {
+        if (locale == null) {
+            return;
+        }
         this.locale = locale;
     }
 
+    /**
+     * Gets app version.
+     *
+     * @return the app version
+     */
     public String getAppVersion() {
         return this.appVersion;
     }
 
+    /**
+     * Sets app version.
+     *
+     * @param appVersion the app version
+     */
     public void setAppVersion(String appVersion) {
+        if (appVersion == null) {
+            return;
+        }
         this.appVersion = appVersion;
     }
 
+    /**
+     * Gets platform.
+     *
+     * @return the platform
+     */
     public String getPlatform() {
         return this.platform;
     }
 
+    /**
+     * Sets platform.
+     *
+     * @param platform the platform
+     */
     public void setPlatform(String platform) {
+        if (platform == null) {
+            return;
+        }
         this.platform = platform;
     }
 
+    /**
+     * Gets platform version.
+     *
+     * @return the platform version
+     */
     public String getPlatformVersion() {
         return this.platformVersion;
     }
 
+    /**
+     * Sets platform version.
+     *
+     * @param platformVersion the platform version
+     */
     public void setPlatformVersion(String platformVersion) {
+        if (platformVersion == null) {
+            return;
+        }
         this.platformVersion = platformVersion;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/endpointProfile/EndpointProfileLocation.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/endpointProfile/EndpointProfileLocation.java
index 7722cc5838..a1bd225bd8 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/endpointProfile/EndpointProfileLocation.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/endpointProfile/EndpointProfileLocation.java
@@ -1,22 +1,22 @@
 /**
  * Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
  *
- * Licensed under the Apache License, Version 2.0 (the "License").
- * You may not use this file except in compliance with the License.
- * A copy of the License is located at
+ * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with the License. A copy of the License is
+ * located at
  *
  * http://aws.amazon.com/apache2.0
  *
- * or in the "license" file accompanying this file. This file is distributed
- * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
- * express or implied. See the License for the specific language governing
- * permissions and limitations under the License.
+ * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under the License.
  */
 
 package com.amazonaws.mobileconnectors.pinpoint.targeting.endpointProfile;
 
-import java.util.Locale;
+import java.util.MissingResourceException;
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
 import org.json.JSONObject;
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.PinpointContext;
 import com.amazonaws.mobileconnectors.pinpoint.internal.core.util.JSONBuilder;
 import com.amazonaws.mobileconnectors.pinpoint.internal.core.util.JSONSerializable;
 
@@ -25,58 +25,154 @@
  */
 public class EndpointProfileLocation implements JSONSerializable {
 
+    private static final Log log = LogFactory.getLog(EndpointProfileLocation.class);
+
     private Double latitude = null;
     private Double longitude = null;
     private String postalCode = "";
     private String city = "";
     private String region = "";
-    private String country = Locale.getDefault().getCountry();
+    private String country = "";
+
+    /**
+     * Default constructor
+     *
+     * @param context the context
+     */
+    public EndpointProfileLocation(final PinpointContext context) {
+        String localeCountry;
+        try {
+            localeCountry = context.getApplicationContext().getResources().getConfiguration().locale.getISO3Country();
+        } catch (final MissingResourceException exception) {
+            log.debug("Locale getISO3Country failed, falling back to getCountry.");
+            localeCountry = context.getApplicationContext().getResources().getConfiguration().locale.getCountry();
+        }
+        country = localeCountry;
+    }
 
+    /**
+     * Gets latitude.
+     *
+     * @return the latitude
+     */
     public Double getLatitude() {
         return this.latitude;
     }
 
+    /**
+     * Sets latitude.
+     *
+     * @param latitude the latitude
+     */
     public void setLatitude(Double latitude) {
+        if (latitude == null) {
+            return;
+        }
         this.latitude = latitude;
     }
 
+    /**
+     * Gets longitude.
+     *
+     * @return the longitude
+     */
     public Double getLongitude() {
         return this.longitude;
     }
 
+    /**
+     * Sets longitude.
+     *
+     * @param longitude the longitude
+     */
     public void setLongitude(Double longitude) {
+        if (longitude == null) {
+            return;
+        }
         this.longitude = longitude;
     }
 
+    /**
+     * Gets postal code.
+     *
+     * @return the postal code
+     */
     public String getPostalCode() {
         return this.postalCode;
     }
 
+    /**
+     * Sets postal code.
+     *
+     * @param postalCode the postal code
+     */
     public void setPostalCode(String postalCode) {
+        if (postalCode == null) {
+            return;
+        }
         this.postalCode = postalCode;
     }
 
+    /**
+     * Gets city.
+     *
+     * @return the city
+     */
     public String getCity() {
         return this.city;
     }
 
+    /**
+     * Sets city.
+     *
+     * @param city the city
+     */
     public void setCity(String city) {
+        if (city == null) {
+            return;
+        }
         this.city = city;
     }
 
+    /**
+     * Gets region.
+     *
+     * @return the region
+     */
     public String getRegion() {
         return this.region;
     }
 
+    /**
+     * Sets region.
+     *
+     * @param region the region
+     */
     public void setRegion(String region) {
+        if (region == null) {
+            return;
+        }
         this.region = region;
     }
 
+    /**
+     * Gets country.
+     *
+     * @return the country
+     */
     public String getCountry() {
         return this.country;
     }
 
+    /**
+     * Sets country.
+     *
+     * @param country the country
+     */
     public void setCountry(String country) {
+        if (country == null) {
+            return;
+        }
         this.country = country;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/ADMNotificationClient.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/ADMNotificationClient.java
new file mode 100644
index 0000000000..4e65c70044
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/ADMNotificationClient.java
@@ -0,0 +1,58 @@
+/**
+ * Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ * http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.mobileconnectors.pinpoint.targeting.notification;
+
+import android.app.PendingIntent;
+import android.os.Bundle;
+
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.PinpointContext;
+import com.amazonaws.services.pinpoint.model.ChannelType;
+
+/**
+ * ADMNotificationClient is the entry point into the Amazon Mobile Analytics SDK to
+ * handle Pinpoint notifications on devices registered with ADM
+ */
+final class ADMNotificationClient extends NotificationClientBase {
+
+    /**
+     * Constructor.
+     *
+     * @param pinpointContext the pinpoint context. {@link PinpointContext}
+     */
+    protected ADMNotificationClient(PinpointContext pinpointContext) {
+        super(pinpointContext);
+    }
+
+
+    @Override
+    public String getChannelType() {
+        return ChannelType.ADM.toString();
+    }
+
+
+    @Override
+    protected PendingIntent createOpenAppPendingIntent(final Bundle pushBundle, final Class<?> targetClass, final String campaignId,
+                                                       final int requestId, final String intentAction) {
+        PendingIntent contentIntent = null;
+        if (intentAction.equals(NotificationClient.ADM_INTENT_ACTION)) {
+            contentIntent = PendingIntent.getService(pinpointContext.getApplicationContext(), requestId,
+                    this.notificationIntent(pushBundle, campaignId, requestId, NotificationClient.ADM_INTENT_ACTION,
+                            targetClass), PendingIntent.FLAG_ONE_SHOT);
+        }
+        return contentIntent;
+
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/BaiduNotificationClient.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/BaiduNotificationClient.java
new file mode 100644
index 0000000000..89d82572a1
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/BaiduNotificationClient.java
@@ -0,0 +1,50 @@
+/**
+ * Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ * http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.mobileconnectors.pinpoint.targeting.notification;
+
+import android.app.PendingIntent;
+import android.os.Bundle;
+
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.PinpointContext;
+import com.amazonaws.services.pinpoint.model.ChannelType;
+
+/**
+ * BaiduNotificationClient is the entry point into the Amazon Mobile Analytics SDK to
+ * handle Pinpoint notifications on devices registered with Baidu cloud messaging.
+ */
+final class BaiduNotificationClient extends NotificationClientBase {
+
+    protected BaiduNotificationClient(PinpointContext pinpointContext) {
+        super(pinpointContext);
+    }
+
+    @Override
+    public String getChannelType() {
+        return ChannelType.BAIDU.toString();
+    }
+
+    @Override
+    protected PendingIntent createOpenAppPendingIntent(Bundle pushBundle, Class<?> targetClass, String campaignId, int requestId, String intentAction) {
+        PendingIntent contentIntent = null;
+        if (NotificationClient.BAIDU_INTENT_ACTION.equals(intentAction)) {
+            contentIntent = PendingIntent.getBroadcast(pinpointContext.getApplicationContext(), requestId,
+                    this.notificationIntent(pushBundle, campaignId, requestId, NotificationClient.BAIDU_INTENT_ACTION,
+                            targetClass), PendingIntent.FLAG_ONE_SHOT);
+            PinpointNotificationReceiver.setNotificationClient(this);
+        }
+        return contentIntent;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/DeviceTokenRegisteredHandler.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/DeviceTokenRegisteredHandler.java
new file mode 100644
index 0000000000..7cebdfda4e
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/DeviceTokenRegisteredHandler.java
@@ -0,0 +1,28 @@
+/**
+ * Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ * http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.mobileconnectors.pinpoint.targeting.notification;
+
+/**
+ * interface to handle the device token registration.
+ */
+public interface DeviceTokenRegisteredHandler {
+    /**
+     * callback when token is registered.
+     *
+     * @param deviceToken the device token.
+     */
+    void tokenRegistered(final String deviceToken);
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/GCMNotificationClient.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/GCMNotificationClient.java
new file mode 100644
index 0000000000..6c6f05c58f
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/GCMNotificationClient.java
@@ -0,0 +1,61 @@
+/**
+ * Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ * http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.mobileconnectors.pinpoint.targeting.notification;
+
+import android.app.PendingIntent;
+import android.os.Bundle;
+
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.PinpointContext;
+import com.amazonaws.services.pinpoint.model.ChannelType;
+
+/**
+ * GCMNotificationClient is the entry point into the Amazon Mobile Analytics SDK to
+ * handle Pinpoint notifications on devices registered with GCM/Firebase
+ */
+final class GCMNotificationClient extends NotificationClientBase {
+
+    /**
+     * Constructor.
+     *
+     * @param pinpointContext the pinpoint context. {@link PinpointContext}
+     */
+    protected GCMNotificationClient(PinpointContext pinpointContext) {
+        super(pinpointContext);
+    }
+
+    @Override
+    public String getChannelType() {
+        return ChannelType.GCM.toString();
+    }
+
+    @Override
+    protected PendingIntent createOpenAppPendingIntent(final Bundle pushBundle, final Class<?> targetClass, final String campaignId,
+                                                     final int requestId, final String intentAction) {
+        PendingIntent contentIntent = null;
+        if (intentAction.equals(NotificationClient.GCM_INTENT_ACTION)) {
+            contentIntent = PendingIntent.getService(pinpointContext.getApplicationContext(), requestId,
+                    this.notificationIntent(pushBundle, campaignId, requestId, NotificationClient.GCM_INTENT_ACTION,
+                            targetClass), PendingIntent.FLAG_ONE_SHOT);
+        } else {
+            contentIntent = PendingIntent.getBroadcast(pinpointContext.getApplicationContext(), requestId,
+                    this.notificationIntent(pushBundle, campaignId, requestId, NotificationClient.FCM_INTENT_ACTION,
+                            targetClass), PendingIntent.FLAG_ONE_SHOT);
+            PinpointNotificationReceiver.setNotificationClient(this);
+        }
+        return contentIntent;
+
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/GCMTokenRegisteredHandler.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/GCMTokenRegisteredHandler.java
index 4608345aa2..2d9b0195dc 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/GCMTokenRegisteredHandler.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/GCMTokenRegisteredHandler.java
@@ -18,11 +18,5 @@
 /**
  * interface to handle the gcm token registration.
  */
-public interface GCMTokenRegisteredHandler {
-    /**
-     * callback when token is registered.
-     *
-     * @param deviceToken the gcm device token.
-     */
-    void tokenRegistered(final String deviceToken);
+public interface GCMTokenRegisteredHandler extends DeviceTokenRegisteredHandler {
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationClient.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationClient.java
index 1d3e7fdf29..a12bddfa26 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationClient.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationClient.java
@@ -15,39 +15,14 @@
 
 package com.amazonaws.mobileconnectors.pinpoint.targeting.notification;
 
-import java.io.IOException;
-import java.lang.reflect.Constructor;
-import java.lang.reflect.Field;
-import java.lang.reflect.InvocationTargetException;
-import java.lang.reflect.Method;
-import java.net.URL;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.concurrent.ExecutionException;
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import com.amazonaws.mobileconnectors.pinpoint.analytics.AnalyticsEvent;
-import com.amazonaws.mobileconnectors.pinpoint.internal.core.PinpointContext;
-import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.AndroidPreferences;
-import android.app.Notification;
-import android.app.NotificationManager;
-import android.app.PendingIntent;
 import android.app.Service;
-import android.content.Context;
-import android.content.Intent;
-import android.content.pm.ApplicationInfo;
-import android.content.pm.PackageManager;
-import android.content.res.Resources;
-import android.graphics.Bitmap;
-import android.graphics.BitmapFactory;
-import android.graphics.Color;
-import android.media.RingtoneManager;
-import android.net.Uri;
-import android.os.AsyncTask;
 import android.os.Bundle;
 
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.PinpointContext;
+import com.amazonaws.services.pinpoint.model.ChannelType;
+
+import java.util.Map;
+
 /**
  * NotificationClient is the entry point into the Amazon Mobile Analytics SDK to
  * handle Pinpoint notifications.
@@ -75,100 +50,80 @@
     protected static final String CAMPAIGN_TREATMENT_ID_ATTRIBUTE_KEY = "treatment_id";
     protected static final String CAMPAIGN_TREATMENT_ID_PUSH_KEY =
         CAMPAIGN_PUSH_KEY_PREFIX + CAMPAIGN_TREATMENT_ID_ATTRIBUTE_KEY;
-    private static final Log log = LogFactory.getLog(NotificationClient.class);
-    private static final String GCM_TOKEN_PREF_KEY = "AWSPINPOINT.GCMTOKEN";
-    // Notification
-    private static final String GCM_NOTIFICATION_PUSH_KEY_PREFIX = PINPOINT_PUSH_KEY_PREFIX + "notification.";
-    private static final String NOTIFICATION_SILENT_PUSH_KEY = GCM_NOTIFICATION_PUSH_KEY_PREFIX + "silentPush";
-    private static final String NOTIFICATION_TITLE_PUSH_KEY = GCM_NOTIFICATION_PUSH_KEY_PREFIX + "title";
-    private static final String NOTIFICATION_BODY_PUSH_KEY = GCM_NOTIFICATION_PUSH_KEY_PREFIX + "body";
-    private static final String NOTIFICATION_COLOR_PUSH_KEY = GCM_NOTIFICATION_PUSH_KEY_PREFIX + "color";
-    private static final String NOTIFICATION_ICON_PUSH_KEY = GCM_NOTIFICATION_PUSH_KEY_PREFIX + "icon";
-    private static final String CAMPAIGN_IMAGE_PUSH_KEY = GCM_NOTIFICATION_PUSH_KEY_PREFIX + "imageUrl";
-    private static final String CAMPAIGN_IMAGE_ICON_PUSH_KEY = GCM_NOTIFICATION_PUSH_KEY_PREFIX + "imageIconUrl";
-    private static final String CAMPAIGN_IMAGE_SMALL_ICON_PUSH_KEY =
-        GCM_NOTIFICATION_PUSH_KEY_PREFIX + "imageSmallIconUrl";
-    // Engage Attributes
-    private static final String CAMPAIGN_URL_PUSH_KEY = PINPOINT_PUSH_KEY_PREFIX + "url";
-    private static final String CAMPAIGN_DEEP_LINK_PUSH_KEY = PINPOINT_PUSH_KEY_PREFIX + "deeplink";
-    private static final String CAMPAIGN_OPEN_APP_PUSH_KEY = PINPOINT_PUSH_KEY_PREFIX + "openApp";
-    private static final String REQUEST_ID = "requestId";
-    private static final int INVALID_RESOURCE = 0;
-    private static final int ANDROID_JELLYBEAN = 16;
-    private static final int ANDROID_KITKAT = 19;
-    private static final int ANDROID_LOLLIPOP = 21;
-    private static final int ANDROID_MARSHMALLOW = 23;
-
-    private static final String AWS_EVENT_TYPE_OPENED = "_campaign.opened_notification";
-    private static final String AWS_EVENT_TYPE_RECEIVED_FOREGROUND = "_campaign.received_foreground";
-    private static final String AWS_EVENT_TYPE_RECEIVED_BACKGROUND = "_campaign.received_background";
-    private static final String GCM_INTENT_ACTION = "com.google.android.c2dm.intent.RECEIVE";
-    private static final String FCM_INTENT_ACTION = "com.amazonaws.intent.fcm.NOTIFICATION_OPEN";
-    private static final String CHECK_OP_NO_THROW = "checkOpNoThrow";
-    private static final String OP_POST_NOTIFICATION = "OP_POST_NOTIFICATION";
-    private static final String APP_OPS_MODE_ALLOWED = "MODE_ALLOWED";
-    private static final String APP_OPS_SERVICE = "APP_OPS_SERVICE";
-    private final PinpointContext pinpointContext;
-    private final AppUtil appUtil;
-    private final List<GCMTokenRegisteredHandler> gcmTokenRegisteredHandlers;
-    private volatile String theGCMToken;
-    private Constructor<?> notificationBuilderConstructor = null;
-    private Class<?> notificationBuilderClass = null;
-    private Class<?> notificationBigTextStyleClass = null;
-    private Class<?> notificationBigPictureStyleClass = null;
-    private Class<?> notificationStyleClass = null;
-    private Class<?> iconClass = null;
-    private Method setContentTitleMethod;
-    private Method setContentTextMethod;
-    private Method setSmallIconMethod;
-    private Method setSmallIconResIdMethod;
-    private Method setLargeIconMethod;
-    private Method setContentIntent;
-    private Method setStyleMethod;
-    private Method buildMethod;
-    private Method bigTextMethod;
-    private Method bigPictureMethod;
-    private Method setSummaryMethod;
-    private Method setPriorityMethod;
-    private Method setSoundMethod;
-    private Method createWithBitmapMethod;
-    private Bitmap notificationImage;
-    private Class<?> appOpsClass = null;
-    private Method checkOpNoThrowMethod = null;
-    private Field opPostNotificationField = null;
-    private Field modeAllowedField = null;
+
+
+    /**
+     * Intent action for ADM
+     */
+    public static final String ADM_INTENT_ACTION = "com.amazon.device.messaging.intent.RECEIVE";
+
+    /**
+     * Intent action for Baidu
+     */
+    public static final String BAIDU_INTENT_ACTION = "com.amazonaws.intent.baidu.NOTIFICATION_OPEN";
+
+    /**
+     * Intent action for GCM
+     */
+    public static final String GCM_INTENT_ACTION = "com.google.android.c2dm.intent.RECEIVE";
+
+    /**
+     * Intent action for FCM
+     */
+    public static final String FCM_INTENT_ACTION = "com.amazonaws.intent.fcm.NOTIFICATION_OPEN";
+
+    NotificationClientBase notificationClientBase;
+
+    /**
+     * Creates a new NotificationClient based on the supplied context and channel type. This method
+     * returns an instance based on NotificationClient interface.
+     *
+     * @param pinpointContext Context to associate with the client.
+     * @param channelType The channel type the client will support.
+     * @return A new instance of the {@link NotificationClient}
+     */
+    public static NotificationClient createClient(PinpointContext pinpointContext, ChannelType channelType) {
+        return new NotificationClient(NotificationClientBase.createClient(pinpointContext, channelType));
+    }
 
     /**
      * Constructor.
      *
      * @param pinpointContext the pinpoint context. {@link PinpointContext}
+     * @deprecated Use {@link #createClient(PinpointContext, ChannelType)} instead.
      */
+    @Deprecated
     public NotificationClient(final PinpointContext pinpointContext) {
-        this.pinpointContext = pinpointContext;
-        this.appUtil = new AppUtil(pinpointContext.getApplicationContext());
-        this.gcmTokenRegisteredHandlers = new ArrayList<GCMTokenRegisteredHandler>();
-        this.loadGCMToken();
+        notificationClientBase = NotificationClientBase.createClient(pinpointContext, ChannelType.GCM);
+    }
+
+    NotificationClient(final NotificationClientBase notificationClientBase) {
+        this.notificationClientBase = notificationClientBase;
     }
 
     /**
      * Add a GCM token register handler.
      *
      * @param handler the GCM register handler.
+     * @deprecated Use {@link #addDeviceTokenRegisteredHandler(DeviceTokenRegisteredHandler)} instead.
      */
+    @Deprecated
     public void addGCMTokenRegisteredHandler(final GCMTokenRegisteredHandler handler) {
         if (handler == null) {
             throw new IllegalArgumentException("GCMTokenRegisteredHandler cannot be null.");
         }
-        gcmTokenRegisteredHandlers.add(handler);
+        notificationClientBase.addDeviceTokenRegisteredHandler(handler);
     }
 
     /**
      * Remove the gcm register handler.
      *
      * @param handler the gcm register handler.
+     * @deprecated Use {@link #removeDeviceTokenRegisteredHandler(DeviceTokenRegisteredHandler)} instead.
      */
+    @Deprecated
     public void removeGCMTokenRegisteredHandler(final GCMTokenRegisteredHandler handler) {
-        gcmTokenRegisteredHandlers.remove(handler);
+        notificationClientBase.removeDeviceTokenRegisteredHandler(handler);
     }
 
     /**
@@ -177,488 +132,22 @@ public void removeGCMTokenRegisteredHandler(final GCMTokenRegisteredHandler hand
      * notifications.
      *
      * @param deviceToken the GCM device token.
+     * @deprecated Use {@link #registerDeviceToken(String)} instead.
      */
+    @Deprecated
     public void registerGCMDeviceToken(final String deviceToken) {
-        theGCMToken = deviceToken;
-        // Persist the GCM token to shared preferences.
-        final AndroidPreferences prefs = pinpointContext.getSystem().getPreferences();
-        prefs.putString(GCM_TOKEN_PREF_KEY, deviceToken);
-        for (final GCMTokenRegisteredHandler handler : gcmTokenRegisteredHandlers) {
-            handler.tokenRegistered(deviceToken);
-        }
-    }
-
-    private void loadGCMToken() {
-        final AndroidPreferences prefs = pinpointContext.getSystem().getPreferences();
-        // Load the GCM token from shared preferences.
-        theGCMToken = prefs.getString(GCM_TOKEN_PREF_KEY, null);
+        notificationClientBase.registerDeviceToken(deviceToken);
     }
 
     /**
      * get the GCM device token.
      *
      * @return the GCM device token.
+     * @deprecated Use {@link #getDeviceToken()} instead.
      */
+    @Deprecated
     public String getGCMDeviceToken() {
-        this.loadGCMToken();
-        return theGCMToken;
-    }
-
-    private void addGlobalCampaignAttributes(
-        final Map<String, String> campaignAttribs) {
-        for (final Map.Entry<String, String> entry : campaignAttribs.entrySet()) {
-            if (entry.getValue() != null) {
-                this.pinpointContext.getAnalyticsClient().addGlobalAttribute(entry.getKey(), entry.getValue());
-            }
-        }
-    }
-
-    void addCampaignAttributesToEvent(final AnalyticsEvent pushEvent, final Map<String, String> campaignAttribs) {
-        for (final Map.Entry<String, String> entry : campaignAttribs.entrySet()) {
-            if (entry.getValue() != null) {
-                pushEvent.addAttribute(entry.getKey(), entry.getValue());
-            }
-        }
-    }
-
-
-    private Resources getPackageResources() {
-        final PackageManager packageManager = pinpointContext.getApplicationContext().getPackageManager();
-        try {
-            final String packageName = pinpointContext.getApplicationContext().getPackageName();
-            final ApplicationInfo applicationInfo = packageManager.getApplicationInfo(packageName, PackageManager.GET_META_DATA);
-            return packageManager.getResourcesForApplication(applicationInfo);
-        } catch (final PackageManager.NameNotFoundException ex) {
-            log.error("Can't find resources for our application package.", ex);
-            return null;
-        }
-    }
-
-    private int getNotificationIconResourceId(
-        final String drawableResourceName) {
-        final PackageManager packageManager = pinpointContext.getApplicationContext().getPackageManager();
-        try {
-            final String packageName = pinpointContext.getApplicationContext().getPackageName();
-            final ApplicationInfo applicationInfo = packageManager.getApplicationInfo(packageName, PackageManager.GET_META_DATA);
-            final Resources resources = packageManager.getResourcesForApplication(applicationInfo);
-
-            if (drawableResourceName != null) {
-                final int resId = resources.getIdentifier(drawableResourceName, "drawable", packageName);
-                if (resId != INVALID_RESOURCE) {
-                    return resId;
-                }
-            }
-            return applicationInfo.icon;
-
-        } catch (final PackageManager.NameNotFoundException ex) {
-            log.error("Can't find icon for our application package.", ex);
-            // 0 is an invalid resource id, so use it to indicate failure to
-            // retrieve the resource.
-            return INVALID_RESOURCE;
-        }
-    }
-
-    private Notification createLegacyNotification(final int iconResId, final String title, final String contentText,
-                                                  final PendingIntent contentIntent) {
-        final Notification notification = new Notification();
-        notification.icon = iconResId;
-        notification.setLatestEventInfo(this.pinpointContext.getApplicationContext(), title, contentText, contentIntent);
-        notification.contentIntent = contentIntent;
-        return notification;
-    }
-
-    private boolean initClassesAndMethodsByReflection() {
-        if (notificationBuilderClass != null) {
-            return true;
-        }
-        try {
-            notificationBuilderClass = Class.forName("android.app.Notification$Builder"); //API Level 11
-            notificationBigTextStyleClass = Class.forName("android.app.Notification$BigTextStyle"); //API Level 16
-            notificationStyleClass = Class.forName("android.app.Notification$Style"); //API Level 16
-            notificationBigPictureStyleClass = Class.forName("android.app.Notification$BigPictureStyle"); //API Level 16
-            if (android.os.Build.VERSION.SDK_INT >= ANDROID_MARSHMALLOW) {
-                iconClass = Class.forName("android.graphics.drawable.Icon"); //API Level 23
-            }
-            if (!buildMethodsByReflection()) {
-                // fall back to creating the legacy notification.
-                return false;
-            }
-            return true;
-        } catch (final ClassNotFoundException ex) {
-            log.debug("Failed to get notification builder classes by reflection : " + ex.getMessage(), ex);
-            return false;
-        }
-    }
-
-    private boolean buildMethodsByReflection() {
-        try {
-            notificationBuilderConstructor = notificationBuilderClass.getDeclaredConstructor(Context.class);
-            setContentTitleMethod = notificationBuilderClass.getDeclaredMethod("setContentTitle", CharSequence.class);
-            setContentTextMethod = notificationBuilderClass.getDeclaredMethod("setContentText", CharSequence.class);
-            setContentIntent = notificationBuilderClass.getDeclaredMethod("setContentIntent", PendingIntent.class);
-            setStyleMethod = notificationBuilderClass.getDeclaredMethod("setStyle", notificationStyleClass);
-            setSmallIconResIdMethod = notificationBuilderClass.getDeclaredMethod("setSmallIcon", int.class);
-            buildMethod = notificationBuilderClass.getDeclaredMethod("build");
-            bigTextMethod = notificationBigTextStyleClass.getDeclaredMethod("bigText", CharSequence.class);
-            bigPictureMethod = notificationBigPictureStyleClass.getDeclaredMethod("bigPicture", Bitmap.class);
-            setSummaryMethod = notificationBigPictureStyleClass.getDeclaredMethod("setSummaryText", CharSequence.class);
-            setLargeIconMethod = notificationBuilderClass.getDeclaredMethod("setLargeIcon", Bitmap.class);
-            setPriorityMethod = notificationBuilderClass.getDeclaredMethod("setPriority", int.class);
-            setSoundMethod = notificationBuilderClass.getDeclaredMethod("setSound", Uri.class);
-
-            if (android.os.Build.VERSION.SDK_INT >= ANDROID_MARSHMALLOW) {
-                setSmallIconMethod = notificationBuilderClass.getDeclaredMethod("setSmallIcon", iconClass);
-                createWithBitmapMethod = iconClass.getDeclaredMethod("createWithBitmap", Bitmap.class);
-            }
-            return true;
-        } catch (final NoSuchMethodException ex) {
-            log.debug("Failed to get notification builder methods by reflection. : " + ex.getMessage(), ex);
-            return false;
-        }
-    }
-
-    private static final float RED_MULTIPLIER = 0.299f;
-    private static final float GREEN_MULTIPLIER = 0.587f;
-    private static final float BLUE_MULTIPLIER =  0.114f;
-    private static final int TRANSPARENT_WHITE_COLOR = 0x00FFFFFF;
-    private static final int BITS_TO_SHIFT_FOR_ALPHA = 24;
-    private static final int MAX_ALPHA = Color.alpha(Color.WHITE);
-
-    /**
-     * Convert a bitmap to gray-scale and store the gray-scale value in the bitmap alpha channel.
-     * If the bitmap to be converted is already a solid color, the input bitmap will be copied
-     * as is to the output.
-     *
-     * @param input the input bitmap.
-     * @return the output bitmap.
-     */
-    /*package*/ static Bitmap convertBitmapToAlphaGreyscale(final Bitmap input) {
-        final int pixelCount = input.getWidth() * input.getHeight();
-        int[] inPixels = new int[pixelCount];
-        input.getPixels(inPixels, 0, input.getWidth(), 0, 0, input.getWidth(), input.getHeight());
-        int[] outPixels = new int[pixelCount];
-        boolean hasMoreThanOneNonTransparentColor = false;
-        Integer firstColor = null;
-
-        for (int i = 0; i < pixelCount; i++) {
-            final int inputArgb = inPixels[i];
-            final int greyScale;
-            final int inputAlpha = Color.alpha(inputArgb);
-
-            // Color is changed to gray-scale in the alpha channel.
-            final int calculatedColor = MAX_ALPHA - (Math.round(Color.red(inputArgb) * RED_MULTIPLIER)
-                + Math.round(Color.green(inputArgb) * GREEN_MULTIPLIER)
-                + Math.round(Color.blue(inputArgb) * BLUE_MULTIPLIER));
-            if (inputAlpha != 0) {
-                if (firstColor == null) {
-                    firstColor = inputArgb & TRANSPARENT_WHITE_COLOR;
-                } else if ((inputArgb & TRANSPARENT_WHITE_COLOR) != firstColor) {
-                    hasMoreThanOneNonTransparentColor = true;
-                }
-            }
-            greyScale = calculatedColor * inputAlpha / MAX_ALPHA;
-            outPixels[i] = (greyScale << BITS_TO_SHIFT_FOR_ALPHA) | TRANSPARENT_WHITE_COLOR;
-        }
-
-        if (!hasMoreThanOneNonTransparentColor) {
-            // Images that have only one non-transparent color, are already in the expected format
-            // for a small icon, and so can be used directly.
-            return Bitmap.createBitmap(inPixels, input.getWidth(), input.getHeight(), Bitmap.Config.ARGB_8888);
-        }
-
-        return Bitmap.createBitmap(outPixels, input.getWidth(), input.getHeight(), Bitmap.Config.ARGB_8888);
-    }
-
-    private void setSmallIconWithFallbackToLargeIconForSDKAbove20(final Object notificationBuilder,
-                                                                  final boolean alreadySetLargeIcon,
-                                                                  final int iconResId,
-                                                                  final Bitmap largeIconBitmap)
-        throws InvocationTargetException, IllegalAccessException {
-        if (!alreadySetLargeIcon && android.os.Build.VERSION.SDK_INT >= ANDROID_LOLLIPOP) {
-            final Resources resources = getPackageResources();
-
-            if (resources != null) {
-                final Bitmap iconBitmap;
-                if (largeIconBitmap == null) {
-                    // We have to get the iconResId as a bitmap to call setLargeIcon.
-                    iconBitmap = BitmapFactory.decodeResource(resources, iconResId);
-                } else {
-                    iconBitmap = largeIconBitmap;
-                }
-                if (iconBitmap != null) {
-                    setLargeIconMethod.invoke(notificationBuilder, iconBitmap);
-                    if (android.os.Build.VERSION.SDK_INT >= ANDROID_MARSHMALLOW) {
-                        final Bitmap smallBitmap
-                            = convertBitmapToAlphaGreyscale(iconBitmap);
-                        setSmallIconMethod
-                            .invoke(notificationBuilder, createWithBitmapMethod.invoke(iconClass, smallBitmap));
-                    } else {
-                        setSmallIconResIdMethod.invoke(notificationBuilder, iconResId);
-                    }
-                    return;
-                }
-            }
-        }
-        setSmallIconResIdMethod.invoke(notificationBuilder, iconResId);
-    }
-
-    private boolean buildNotificationIcons(final int iconResId, final String imageIconUrl,
-                                           final String imageSmallIconUrl,
-                                           final Object notificationBuilder) {
-        try {
-            boolean setLargeIcon = false;
-            Bitmap largeIconBitmap = null;
-            if (imageIconUrl != null) {
-                try {
-                    largeIconBitmap = new DownloadImageTask().execute(imageIconUrl).get();
-                    setLargeIconMethod.invoke(notificationBuilder, largeIconBitmap);
-                    setLargeIcon = true;
-                } catch (final InterruptedException e) {
-                    log.error("Interrupted when downloading image : " + e.getMessage(), e);
-                } catch (final ExecutionException e) {
-                    log.error("Failed execute download image thread : " + e.getMessage(), e);
-                }
-            }
-            if (imageSmallIconUrl != null && iconClass != null
-                && android.os.Build.VERSION.SDK_INT >= ANDROID_MARSHMALLOW) {
-                try {
-                    final Bitmap iconBitmap = new DownloadImageTask().execute(imageSmallIconUrl).get();
-                    if (!setLargeIcon && android.os.Build.VERSION.SDK_INT >= ANDROID_LOLLIPOP) {
-                        setSmallIconWithFallbackToLargeIconForSDKAbove20(notificationBuilder,
-                            false, iconResId, iconBitmap);
-                    } else {
-                        setSmallIconMethod.invoke(notificationBuilder,
-                            createWithBitmapMethod.invoke(iconClass, iconBitmap));
-                    }
-                } catch (final InterruptedException e) {
-                    log.error("Interrupted when downloading small icon : " + e.getMessage(), e);
-                    setSmallIconWithFallbackToLargeIconForSDKAbove20(notificationBuilder,
-                        setLargeIcon, iconResId, null);
-
-                } catch (final ExecutionException e) {
-                    log.error("Failed execute download image small icon thread : " + e.getMessage(), e);
-                    setSmallIconWithFallbackToLargeIconForSDKAbove20(notificationBuilder,
-                        setLargeIcon, iconResId, null);
-                }
-            } else {
-                if (setLargeIcon && android.os.Build.VERSION.SDK_INT >= ANDROID_MARSHMALLOW) {
-                    final Bitmap smallBitmap =
-                        convertBitmapToAlphaGreyscale(largeIconBitmap);
-                    setSmallIconMethod
-                        .invoke(notificationBuilder, createWithBitmapMethod.invoke(iconClass, smallBitmap));
-                } else {
-                    setSmallIconWithFallbackToLargeIconForSDKAbove20(notificationBuilder,
-                        setLargeIcon, iconResId, null);
-                }
-            }
-            return true;
-        } catch (final InvocationTargetException ex) {
-            log.debug("Can't invoke notification builder methods. : " + ex.getMessage(), ex);
-            return false;
-        } catch (final IllegalAccessException ex) {
-            log.debug("Can't access notification builder methods. : " + ex.getMessage(), ex);
-            return false;
-        }
-    }
-
-    private Notification createNotification(final int iconResId, final String title, final String contentText, final String imageUrl,
-                                            final String imageIconUrl, final String imageSmallIconUrl, final PendingIntent contentIntent) {
-        log.info("Create Notification:" + title + ", Content:" + contentText);
-        if (android.os.Build.VERSION.SDK_INT < ANDROID_JELLYBEAN) {
-            return createLegacyNotification(iconResId, title, contentText, contentIntent);
-        }
-
-        if (!initClassesAndMethodsByReflection()) {
-            // fall back to creating the legacy notification.
-            return createLegacyNotification(iconResId, title, contentText, contentIntent);
-        }
-
-        final Object notificationBuilder;
-        final Object bigTextStyle;
-        final Object bigPictureStyle;
-
-        try {
-            notificationBuilder = notificationBuilderConstructor.newInstance(pinpointContext.getApplicationContext());
-            bigTextStyle = notificationBigTextStyleClass.newInstance();
-            bigPictureStyle = notificationBigPictureStyleClass.newInstance();
-        } catch (final InvocationTargetException ex) {
-            log.debug("Can't invoke notification builder constructor. : " + ex.getMessage(), ex);
-            return createLegacyNotification(iconResId, title, contentText, contentIntent);
-        } catch (final IllegalAccessException ex) {
-            log.debug("Can't access notification builder or bigTextStyle or bigPictureStyle classes. : " + ex.getMessage(), ex);
-            return createLegacyNotification(iconResId, title, contentText, contentIntent);
-        } catch (final InstantiationException ex) {
-            log.debug("Exception while instantiating notification builder or bigTextStyle or bigPictureStyle classes. : " + ex.getMessage(),
-                      ex);
-            return createLegacyNotification(iconResId, title, contentText, contentIntent);
-        }
-
-        try {
-            setContentTitleMethod.invoke(notificationBuilder, title);
-            setContentTextMethod.invoke(notificationBuilder, contentText);
-            setContentIntent.invoke(notificationBuilder, contentIntent);
-            setPriorityMethod.invoke(notificationBuilder, 1);
-            final Uri defaultSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);
-            setSoundMethod.invoke(notificationBuilder, defaultSoundUri);
-
-            if (!buildNotificationIcons(iconResId, imageIconUrl, imageSmallIconUrl, notificationBuilder)) {
-                return createLegacyNotification(iconResId, title, contentText, contentIntent);
-            }
-
-            if (imageUrl != null) {
-                try {
-                    notificationImage = new DownloadImageTask().execute(imageUrl).get();
-                    if (notificationImage != null) {
-                        bigPictureMethod.invoke(bigPictureStyle, notificationImage);
-                        setSummaryMethod.invoke(bigPictureStyle, contentText);
-                        setStyleMethod.invoke(notificationBuilder, bigPictureStyle);
-                    } else {
-                        bigTextMethod.invoke(bigTextStyle, contentText);
-                        setStyleMethod.invoke(notificationBuilder, bigTextStyle);
-                    }
-                } catch (final InterruptedException e) {
-                    log.error("Interrupted when downloading image : " + e.getMessage(), e);
-                } catch (final ExecutionException e) {
-                    log.error("Failed execute download image thread : " + e.getMessage(), e);
-                }
-            }
-
-            return (Notification) buildMethod.invoke(notificationBuilder);
-        } catch (final InvocationTargetException ex) {
-            log.debug("Can't invoke notification builder methods. : " + ex.getMessage(), ex);
-            return createLegacyNotification(iconResId, title, contentText, contentIntent);
-        } catch (final IllegalAccessException ex) {
-            log.debug("Can't access notification builder methods. : " + ex.getMessage(), ex);
-            return createLegacyNotification(iconResId, title, contentText, contentIntent);
-        }
-    }
-
-    private PendingIntent createOpenAppPendingIntent(final Bundle pushBundle, final Class<?> targetClass, final String campaignId,
-                                                     final int requestId, final String intentAction) {
-        PendingIntent contentIntent = null;
-        if (intentAction.equals(GCM_INTENT_ACTION)) {
-            contentIntent = PendingIntent.getService(pinpointContext.getApplicationContext(), requestId,
-                                                     this.notificationIntent(pushBundle, campaignId, requestId, GCM_INTENT_ACTION,
-                                                                             targetClass), PendingIntent.FLAG_ONE_SHOT);
-        } else {
-            contentIntent = PendingIntent.getBroadcast(pinpointContext.getApplicationContext(), requestId,
-                                                       this.notificationIntent(pushBundle, campaignId, requestId, FCM_INTENT_ACTION,
-                                                                               targetClass), PendingIntent.FLAG_ONE_SHOT);
-            PinpointNotificationReceiver.setNotificationClient(this);
-        }
-        return contentIntent;
-
-    }
-
-    private Intent notificationIntent(final Bundle pushBundle, final String campaignId, final int requestId, final String intentAction,
-                                      final Class<?> targetClass) {
-        final Intent notificationIntent = new Intent(pinpointContext.getApplicationContext(), targetClass);
-        notificationIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
-        notificationIntent.setAction(intentAction);
-        notificationIntent.putExtras(pushBundle);
-        notificationIntent.putExtra(INTENT_SNS_NOTIFICATION_FROM, AWS_EVENT_TYPE_OPENED);
-        notificationIntent.putExtra(CAMPAIGN_ID_PUSH_KEY, campaignId);
-        notificationIntent.putExtra(REQUEST_ID, requestId);
-        notificationIntent.setPackage(pinpointContext.getApplicationContext().getPackageName());
-        return notificationIntent;
-    }
-
-    /* package */ int getNotificationRequestId(final String campaignId, final String activityId) {
-        return (campaignId + ":" + activityId).hashCode();
-    }
-
-    private boolean displayNotification(final Bundle pushBundle, final Class<?> targetClass, String imageUrl,
-                                        String iconImageUrl, String iconSmallImageUrl,
-                                        Map<String, String> campaignAttributes, String intentAction) {
-        log.info("Display Notification: " + pushBundle.toString());
-
-        final String title = pushBundle.getString(NOTIFICATION_TITLE_PUSH_KEY);
-        final String message = pushBundle.getString(NOTIFICATION_BODY_PUSH_KEY);
-
-        final String campaignId = campaignAttributes.get(CAMPAIGN_ID_ATTRIBUTE_KEY);
-        final String activityId = campaignAttributes.get(CAMPAIGN_ACTIVITY_ID_ATTRIBUTE_KEY);
-
-        final int requestID = getNotificationRequestId(campaignId, activityId);
-
-        final int iconResId = getNotificationIconResourceId(pushBundle.getString(NOTIFICATION_ICON_PUSH_KEY));
-        if (iconResId == 0) {
-            return false;
-        }
-
-        final Notification notification = createNotification(iconResId, title, message, imageUrl, iconImageUrl,
-                                                             iconSmallImageUrl,
-                                                             this.createOpenAppPendingIntent(pushBundle, targetClass,
-                                                                                             campaignId, requestID,
-                                                                                             intentAction));
-
-        notification.flags |= Notification.FLAG_AUTO_CANCEL;
-        notification.defaults |= Notification.DEFAULT_SOUND | Notification.DEFAULT_VIBRATE;
-
-        if (android.os.Build.VERSION.SDK_INT >= ANDROID_LOLLIPOP) {
-            log.info("SDK greater than 21 detected: " + android.os.Build.VERSION.SDK_INT);
-
-            final String colorString = pushBundle.getString(NOTIFICATION_COLOR_PUSH_KEY);
-            if (colorString != null) {
-                int color;
-                try {
-                    color = Color.parseColor(colorString);
-                } catch (final IllegalArgumentException ex) {
-                    log.warn("Couldn't parse campaign notification color.", ex);
-                    color = 0;
-                }
-                Exception exception = null;
-                try {
-                    final Field colorField = notification.getClass().getDeclaredField("color");
-                    colorField.setAccessible(true);
-                    colorField.set(notification, color);
-                } catch (final IllegalAccessException ex) {
-                    exception = ex;
-                } catch (final NoSuchFieldException ex) {
-                    exception = ex;
-                }
-                if (exception != null) {
-                    log.error("Couldn't set campaign notification color : " + exception.getMessage(), exception);
-                }
-            }
-        }
-
-        final NotificationManager notificationManager = (NotificationManager) pinpointContext.getApplicationContext()
-                                                                                             .getSystemService(
-                                                                                                 Context.NOTIFICATION_SERVICE);
-
-        notificationManager.notify(requestID, notification);
-        return true;
-    }
-
-    private boolean openApp() {
-        final Intent launchIntent = pinpointContext.getApplicationContext().getPackageManager()
-                                                   .getLaunchIntentForPackage(
-                                                       pinpointContext.getApplicationContext().getPackageName());
-
-        if (launchIntent == null) {
-            log.error("Couldn't get app launch intent for campaign notification.");
-            return false;
-        }
-        launchIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED);
-        launchIntent.setPackage(null);
-        pinpointContext.getApplicationContext().startActivity(launchIntent);
-        return true;
-    }
-
-    private void openURL(final String url, final boolean noSchemeValidation) {
-        final String validatedUrl;
-        if (url.startsWith("http://") || url.startsWith("https://") || noSchemeValidation) {
-            validatedUrl = url;
-        } else {
-            validatedUrl = "http://" + url;
-        }
-
-        final Intent intent = new Intent(Intent.ACTION_VIEW);
-        intent.setData(Uri.parse(validatedUrl));
-        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-        if (intent.resolveActivity(pinpointContext.getApplicationContext().getPackageManager()) != null) {
-            pinpointContext.getApplicationContext().startActivity(intent);
-        }
+        return notificationClientBase.getDeviceToken();
     }
 
     /**
@@ -671,16 +160,18 @@ private void openURL(final String url, final boolean noSchemeValidation) {
      * @param from the from string received by the FCM service,
      * @param data the bundle received from the FCM service
      * @return {@link CampaignPushResult}.
+     *
+     * @deprecated Use {@link #handleCampaignPush(NotificationDetails)} instead.
      */
+    @Deprecated
     public CampaignPushResult handleFCMCampaignPush(final String from,
                                                     final Map<String, String> data) {
-        log.info("Handling FCM Notification: " + data.toString());
-
-        final Bundle bundle = new Bundle();
-        for (final Map.Entry<String, String> entry : data.entrySet()) {
-            bundle.putString(entry.getKey(), entry.getValue());
-        }
-        return handleCampaignPush(from, bundle, PinpointNotificationReceiver.class, FCM_INTENT_ACTION);
+        NotificationDetails.NotificationDetailsBuilder notificationDetailsBuilder =
+                NotificationDetails.builder()
+                .from(from)
+                .mapData(data)
+                .intentAction(FCM_INTENT_ACTION);
+        return notificationClientBase.handleCampaignPush(notificationDetailsBuilder.build());
     }
 
     /**
@@ -695,120 +186,18 @@ public CampaignPushResult handleFCMCampaignPush(final String from,
      * @param serviceClass the class extending GCMListenerService that handles
      *                     receiving GCM messages.
      * @return {@link CampaignPushResult}.
+     *
+     * @deprecated Use {@link #handleCampaignPush(NotificationDetails)} instead.
      */
+    @Deprecated
     public CampaignPushResult handleGCMCampaignPush(final String from, final Bundle data, final Class<? extends Service> serviceClass) {
-        log.info("Handling GCM Notification: " + data.toString());
-        return handleCampaignPush(from, data, serviceClass, GCM_INTENT_ACTION);
-    }
-
-    /* pkg */
-    CampaignPushResult handleNotificationOpen(
-        Map<String, String> campaignAttributes,
-        final Bundle data) {
-        // Add any campaign global attributes
-        if (campaignAttributes != null) {
-            // Stop Session
-            if (this.pinpointContext.getSessionClient() != null) {
-                this.pinpointContext.getSessionClient().stopSession();
-            }
-            addGlobalCampaignAttributes(campaignAttributes);
-
-            final AnalyticsEvent pushEvent = this.pinpointContext.getAnalyticsClient().createEvent(AWS_EVENT_TYPE_OPENED);
-            this.pinpointContext.getAnalyticsClient().recordEvent(pushEvent);
-            this.pinpointContext.getAnalyticsClient().submitEvents();
-
-            final String url = data.getString(CAMPAIGN_URL_PUSH_KEY);
-            if (url != null) {
-                openURL(url, false);
-                return CampaignPushResult.NOTIFICATION_OPENED;
-            }
-            final String deepLink = data.getString(CAMPAIGN_DEEP_LINK_PUSH_KEY);
-            if (deepLink != null) {
-                openURL(deepLink, true);
-                return CampaignPushResult.NOTIFICATION_OPENED;
-            }
-            final String openApp = data.getString(CAMPAIGN_OPEN_APP_PUSH_KEY);
-            if (openApp == null) {
-                log.warn("No key/value present to determine action for campaign notification, default to open app.");
-            }
-            openApp();
-        }
-        return CampaignPushResult.NOTIFICATION_OPENED;
-    }
-
-    private CampaignPushResult handleCampaignPush(final String from, final Bundle data, final Class<?> targetClass, String intentAction) {
-        // Check if push data contains a Campaign Id
-        if (!data.containsKey(CAMPAIGN_ID_PUSH_KEY)) {
-            return CampaignPushResult.NOT_HANDLED;
-        }
-
-        final boolean isAppInForeground = appUtil.isAppInForeground();
-
-        final String imageUrl = data.getString(CAMPAIGN_IMAGE_PUSH_KEY);
-        final String imageIconUrl = data.getString(CAMPAIGN_IMAGE_ICON_PUSH_KEY);
-        final String imageSmallIconUrl = data.getString(CAMPAIGN_IMAGE_SMALL_ICON_PUSH_KEY);
-        final Map<String, String> campaignAttributes = new HashMap<String, String>();
-
-        campaignAttributes.put(CAMPAIGN_ID_ATTRIBUTE_KEY, data.getString(CAMPAIGN_ID_PUSH_KEY));
-        campaignAttributes.put(CAMPAIGN_TREATMENT_ID_ATTRIBUTE_KEY, data.getString(CAMPAIGN_TREATMENT_ID_PUSH_KEY));
-        campaignAttributes.put(CAMPAIGN_ACTIVITY_ID_ATTRIBUTE_KEY, data.getString(CAMPAIGN_ACTIVITY_ID_PUSH_KEY));
-
-        this.pinpointContext.getAnalyticsClient().setCampaignAttributes(campaignAttributes);
-        log.info("Campaign Attributes are:" + campaignAttributes);
-
-        if (AWS_EVENT_TYPE_OPENED.equals(from)) {
-            return this.handleNotificationOpen(campaignAttributes, data);
-        }
-
-        if (campaignAttributes != null) {
-            // Create the push event.
-            String eventType = null;
-            if (isAppInForeground) {
-                eventType = AWS_EVENT_TYPE_RECEIVED_FOREGROUND;
-            } else {
-                eventType = AWS_EVENT_TYPE_RECEIVED_BACKGROUND;
-            }
-            final AnalyticsEvent pushEvent = this.pinpointContext.getAnalyticsClient().createEvent(eventType);
-
-            // Add the campaign attributes.
-            addCampaignAttributesToEvent(pushEvent, campaignAttributes);
-            pushEvent.addAttribute("isAppInForeground", Boolean.toString(isAppInForeground));
-            try {
-                // Ignore whether the app is in the foreground if the configuration indicates it should post
-                // notifications in the foreground.
-                if (
-                    !pinpointContext.getPinpointConfiguration().getShouldPostNotificationsInForeground() && isAppInForeground) {
-                    // Notify the caller that the app was in the foreground.
-                    return CampaignPushResult.APP_IN_FOREGROUND;
-                } else {
-                    // Display a notification with an icon, title, message,
-                    // image, and default sound.
-                    if ("1".equalsIgnoreCase(data.getString(NOTIFICATION_SILENT_PUSH_KEY))) {
-                        return CampaignPushResult.SILENT;
-                    }
-
-                    // App is in the background; attempt to display a
-                    // notification in the notification center.
-                    if (!areAppNotificationsEnabled() ||
-                        !displayNotification(data, targetClass, imageUrl, imageIconUrl, imageSmallIconUrl, campaignAttributes,
-                                             intentAction)) {
-                        // Local app notifications have been disabled by the
-                        // user from Settings -> App Info
-                        // or we couldn't display the notification for some
-                        // reason.
-
-                        pushEvent.addAttribute("isOptedOut", "true");
-                        // We can't post a notification, so delegate to the
-                        // passed in handler.
-                        return CampaignPushResult.OPTED_OUT;
-                    }
-                }
-            } finally {
-                this.pinpointContext.getAnalyticsClient().recordEvent(pushEvent);
-                this.pinpointContext.getAnalyticsClient().submitEvents();
-            }
-        }
-        return CampaignPushResult.POSTED_NOTIFICATION;
+        NotificationDetails.NotificationDetailsBuilder notificationDetailsBuilder =
+                NotificationDetails.builder()
+                .from(from)
+                .bundle(data)
+                .serviceClass(serviceClass)
+                .intentAction(GCM_INTENT_ACTION);
+        return notificationClientBase.handleCampaignPush(notificationDetailsBuilder.build());
     }
 
     /**
@@ -824,66 +213,81 @@ private CampaignPushResult handleCampaignPush(final String from, final Bundle da
      * false.
      */
     public boolean areAppNotificationsEnabled() {
-        final AppLevelOptOutProvider provider = pinpointContext.getPinpointConfiguration().getAppLevelOptOutProvider();
-        if (provider != null && provider.isOptedOut()) {
-            return false;
-        }
+        return notificationClientBase.areAppNotificationsEnabled();
+    }
 
-        return areAppNotificationsEnabledOnPlatform();
+    /**
+     * Add a device token register handler.
+     *
+     * @param handler the devices register handler.
+     */
+    public final void addDeviceTokenRegisteredHandler(final DeviceTokenRegisteredHandler handler) {
+        notificationClientBase.addDeviceTokenRegisteredHandler(handler);
     }
 
-    boolean areAppNotificationsEnabledOnPlatform() {
-        if (android.os.Build.VERSION.SDK_INT < ANDROID_KITKAT) {
-            return true;
-        }
+    /**
+     * Remove the device register handler.
+     *
+     * @param handler the gcm register handler.
+     */
+    public final void removeDeviceTokenRegisteredHandler(final DeviceTokenRegisteredHandler handler) {
+        notificationClientBase.removeDeviceTokenRegisteredHandler(handler);
+    }
 
-        final String appOpsServiceName;
-        try {
-            final Field appOpsServiceNameField = Context.class.getDeclaredField(APP_OPS_SERVICE);
-            appOpsServiceName = (String) appOpsServiceNameField.get(String.class);
-        } catch (final NoSuchFieldException e) {
-            log.error(e.getMessage(), e);
-            return true;
-        } catch (final IllegalAccessException e) {
-            log.error(e.getMessage(), e);
-            return true;
-        }
+    /**
+     * This method should be called once the device token has been received from
+     * the device's messaging api in order to enable being targeted for campaign push
+     * notifications.
+     *
+     * @param deviceToken the device token.
+     */
+    public final void registerDeviceToken(final String deviceToken) {
+        notificationClientBase.registerDeviceToken(deviceToken);
+    }
 
-        final Object mAppOps = pinpointContext.getApplicationContext().getSystemService(appOpsServiceName);
-        if (mAppOps == null) {
-            return true;
-        }
+    /**
+     * This method should be called once the user id and channel id has been received from
+     * the device's messaging api in order to enable being targeted for campaign push
+     * notifications.
+     *
+     * @param userId the user id
+     * @param channelId the channel id
+     */
+    public final void registerDeviceToken(final String userId, final String channelId) {
+        notificationClientBase.registerDeviceToken(userId, channelId);
+    }
 
-        final ApplicationInfo appInfo = pinpointContext.getApplicationContext().getApplicationInfo();
-        final String pkg = pinpointContext.getApplicationContext().getPackageName();
-
-        final int uid = appInfo.uid;
-
-        try {
-            if (appOpsClass == null || checkOpNoThrowMethod == null || opPostNotificationField == null || modeAllowedField == null) {
-                appOpsClass = Class.forName(mAppOps.getClass().getName());
-                checkOpNoThrowMethod = appOpsClass.getMethod(CHECK_OP_NO_THROW, Integer.TYPE, Integer.TYPE, String.class);
-                opPostNotificationField = appOpsClass.getDeclaredField(OP_POST_NOTIFICATION);
-                modeAllowedField = appOpsClass.getDeclaredField(APP_OPS_MODE_ALLOWED);
-            }
-
-            final int postNotificationValue = opPostNotificationField.getInt(null);
-            final int opPostNotificationMode = (Integer) checkOpNoThrowMethod.invoke(mAppOps, postNotificationValue, uid, pkg);
-            final int modeAllowed = modeAllowedField.getInt(null);
-            return (modeAllowed == opPostNotificationMode);
-
-        } catch (final ClassNotFoundException e) {
-            log.error(e.getMessage(), e);
-        } catch (final NoSuchMethodException e) {
-            log.error(e.getMessage(), e);
-        } catch (final NoSuchFieldException e) {
-            log.error(e.getMessage(), e);
-        } catch (final InvocationTargetException e) {
-            log.error(e.getMessage(), e);
-        } catch (final IllegalAccessException e) {
-            log.error(e.getMessage(), e);
-        }
-        return true;
+    /**
+     * get the device token.
+     *
+     * @return the device token.
+     */
+    public final String getDeviceToken() {
+        return notificationClientBase.getDeviceToken();
+    }
+
+    /**
+     * The Pinpoint channel type for the device associated with
+     * this notification client.
+     *
+     * @return Channel type for the device.
+     */
+    public String getChannelType() {
+        return notificationClientBase.getChannelType();
+    }
+
+    /**
+     * Handles pinpoint push messages by posting a local notification when
+     * the app is in the background, or sending a local broadcast if the app is
+     * in the foreground. Also on Api level 19 devices and above, if local
+     * notifications have been disabled and the app is in the background, a
+     * local broadcast is sent.
+     *
+     * @param notificationDetails the notification message received by the device's messaging service
+     * @return {@link NotificationClient.CampaignPushResult}.
+     */
+    public CampaignPushResult handleCampaignPush(final NotificationDetails notificationDetails) {
+        return notificationClientBase.handleCampaignPush(notificationDetails);
     }
 
     /**
@@ -920,16 +324,12 @@ boolean areAppNotificationsEnabledOnPlatform() {
         SILENT
     }
 
-    private class DownloadImageTask extends AsyncTask<String, Void, Bitmap> {
+    CampaignPushResult handleNotificationOpen(Map<String, String> campaignAttributes,
+                                                                 final Bundle data) {
+        return notificationClientBase.handleNotificationOpen(campaignAttributes, data);
+    }
 
-        @Override
-        protected Bitmap doInBackground(String... urls) {
-            try {
-                return BitmapFactory.decodeStream((new URL(urls[0])).openConnection().getInputStream());
-            } catch (final IOException ex) {
-                log.error("Cannot download or find image for rich notification.", ex);
-                return null;
-            }
-        }
+    int getNotificationRequestId(final String campaignId, final String activityId) {
+        return notificationClientBase.getNotificationRequestId(campaignId, activityId);
     }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationClientBase.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationClientBase.java
new file mode 100644
index 0000000000..c581ecd26b
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationClientBase.java
@@ -0,0 +1,928 @@
+/**
+ * Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ * http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.mobileconnectors.pinpoint.targeting.notification;
+
+import android.app.Notification;
+import android.app.NotificationManager;
+import android.app.PendingIntent;
+import android.content.Context;
+import android.content.Intent;
+import android.content.pm.ApplicationInfo;
+import android.content.pm.PackageManager;
+import android.content.res.Resources;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Color;
+import android.media.RingtoneManager;
+import android.net.Uri;
+import android.os.AsyncTask;
+import android.os.Bundle;
+
+import com.amazonaws.mobileconnectors.pinpoint.analytics.AnalyticsEvent;
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.PinpointContext;
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.AndroidPreferences;
+import com.amazonaws.services.pinpoint.model.ChannelType;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+
+import java.io.IOException;
+import java.lang.reflect.Constructor;
+import java.lang.reflect.Field;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.concurrent.ExecutionException;
+
+/**
+ * NotificationClientBase is the entry point into the Amazon Mobile Analytics SDK to
+ * handle Pinpoint notifications.
+ */
+abstract class NotificationClientBase {
+    /**
+     * Intent Key for GCM bundle.
+     */
+    public static final String INTENT_SNS_NOTIFICATION_FROM = "from";
+
+    /**
+     * Intent Key for GCM bundle data.
+     */
+    public static final String INTENT_SNS_NOTIFICATION_DATA = "data";
+    // Pinpoint
+    protected static final String PINPOINT_PUSH_KEY_PREFIX = "pinpoint.";
+    // Campaign
+
+    protected static final String CAMPAIGN_PUSH_KEY_PREFIX = PINPOINT_PUSH_KEY_PREFIX + "campaign.";
+    protected static final String CAMPAIGN_ID_ATTRIBUTE_KEY = "campaign_id";
+    protected static final String CAMPAIGN_ID_PUSH_KEY = CAMPAIGN_PUSH_KEY_PREFIX + CAMPAIGN_ID_ATTRIBUTE_KEY;
+    protected static final String CAMPAIGN_ACTIVITY_ID_ATTRIBUTE_KEY = "campaign_activity_id";
+    protected static final String CAMPAIGN_ACTIVITY_ID_PUSH_KEY =
+        CAMPAIGN_PUSH_KEY_PREFIX + CAMPAIGN_ACTIVITY_ID_ATTRIBUTE_KEY;
+    protected static final String CAMPAIGN_TREATMENT_ID_ATTRIBUTE_KEY = "treatment_id";
+    protected static final String CAMPAIGN_TREATMENT_ID_PUSH_KEY =
+        CAMPAIGN_PUSH_KEY_PREFIX + CAMPAIGN_TREATMENT_ID_ATTRIBUTE_KEY;
+    protected static final Log log = LogFactory.getLog(NotificationClientBase.class);
+    private static final String DEVICE_TOKEN_PREF_KEY = "AWSPINPOINT.GCMTOKEN";
+    // Notification
+    private static final String GCM_NOTIFICATION_PUSH_KEY_PREFIX = PINPOINT_PUSH_KEY_PREFIX + "notification.";
+    private static final String NOTIFICATION_SILENT_PUSH_KEY = GCM_NOTIFICATION_PUSH_KEY_PREFIX + "silentPush";
+    private static final String NOTIFICATION_TITLE_PUSH_KEY = GCM_NOTIFICATION_PUSH_KEY_PREFIX + "title";
+    private static final String NOTIFICATION_BODY_PUSH_KEY = GCM_NOTIFICATION_PUSH_KEY_PREFIX + "body";
+    private static final String NOTIFICATION_COLOR_PUSH_KEY = GCM_NOTIFICATION_PUSH_KEY_PREFIX + "color";
+    private static final String NOTIFICATION_ICON_PUSH_KEY = GCM_NOTIFICATION_PUSH_KEY_PREFIX + "icon";
+    private static final String CAMPAIGN_IMAGE_PUSH_KEY = GCM_NOTIFICATION_PUSH_KEY_PREFIX + "imageUrl";
+    private static final String CAMPAIGN_IMAGE_ICON_PUSH_KEY = GCM_NOTIFICATION_PUSH_KEY_PREFIX + "imageIconUrl";
+    private static final String CAMPAIGN_IMAGE_SMALL_ICON_PUSH_KEY =
+        GCM_NOTIFICATION_PUSH_KEY_PREFIX + "imageSmallIconUrl";
+    // Engage Attributes
+    private static final String CAMPAIGN_URL_PUSH_KEY = PINPOINT_PUSH_KEY_PREFIX + "url";
+    private static final String CAMPAIGN_DEEP_LINK_PUSH_KEY = PINPOINT_PUSH_KEY_PREFIX + "deeplink";
+    private static final String CAMPAIGN_OPEN_APP_PUSH_KEY = PINPOINT_PUSH_KEY_PREFIX + "openApp";
+    private static final String REQUEST_ID = "requestId";
+    private static final int INVALID_RESOURCE = 0;
+    private static final int ANDROID_JELLYBEAN = 16;
+    private static final int ANDROID_KITKAT = 19;
+    private static final int ANDROID_LOLLIPOP = 21;
+    private static final int ANDROID_MARSHMALLOW = 23;
+
+    private static final String AWS_EVENT_TYPE_OPENED = "_campaign.opened_notification";
+    private static final String AWS_EVENT_TYPE_RECEIVED_FOREGROUND = "_campaign.received_foreground";
+    private static final String AWS_EVENT_TYPE_RECEIVED_BACKGROUND = "_campaign.received_background";
+    private static final String CHECK_OP_NO_THROW = "checkOpNoThrow";
+    private static final String OP_POST_NOTIFICATION = "OP_POST_NOTIFICATION";
+    private static final String APP_OPS_MODE_ALLOWED = "MODE_ALLOWED";
+    private static final String APP_OPS_SERVICE = "APP_OPS_SERVICE";
+    protected final PinpointContext pinpointContext;
+    private final AppUtil appUtil;
+    private final List<DeviceTokenRegisteredHandler> deviceRegisteredHandlers;
+    private volatile String theDeviceToken;
+    private Constructor<?> notificationBuilderConstructor = null;
+    private Class<?> notificationBuilderClass = null;
+    private Class<?> notificationBigTextStyleClass = null;
+    private Class<?> notificationBigPictureStyleClass = null;
+    private Class<?> notificationStyleClass = null;
+    private Class<?> iconClass = null;
+    private Method setContentTitleMethod;
+    private Method setContentTextMethod;
+    private Method setSmallIconMethod;
+    private Method setSmallIconResIdMethod;
+    private Method setLargeIconMethod;
+    private Method setContentIntent;
+    private Method setStyleMethod;
+    private Method buildMethod;
+    private Method bigTextMethod;
+    private Method bigPictureMethod;
+    private Method setSummaryMethod;
+    private Method setPriorityMethod;
+    private Method setSoundMethod;
+    private Method createWithBitmapMethod;
+    private Bitmap notificationImage;
+    private Class<?> appOpsClass = null;
+    private Method checkOpNoThrowMethod = null;
+    private Field opPostNotificationField = null;
+    private Field modeAllowedField = null;
+
+    /**
+     * Constructor.
+     *
+     * @param pinpointContext the pinpoint context. {@link PinpointContext}
+     */
+    protected NotificationClientBase(final PinpointContext pinpointContext) {
+        this.pinpointContext = pinpointContext;
+        this.appUtil = new AppUtil(pinpointContext.getApplicationContext());
+        this.deviceRegisteredHandlers = new ArrayList<DeviceTokenRegisteredHandler>();
+        this.loadDeviceToken();
+    }
+
+    /**
+     * Add a device token register handler.
+     *
+     * @param handler the devices register handler.
+     */
+    public final void addDeviceTokenRegisteredHandler(final DeviceTokenRegisteredHandler handler) {
+        if (handler == null) {
+            throw new IllegalArgumentException("DeviceTokenRegisteredHandler cannot be null.");
+        }
+        deviceRegisteredHandlers.add(handler);
+    }
+
+    /**
+     * Remove the device register handler.
+     *
+     * @param handler the device register handler.
+     */
+    public final void removeDeviceTokenRegisteredHandler(final DeviceTokenRegisteredHandler handler) {
+        deviceRegisteredHandlers.remove(handler);
+    }
+
+    /**
+     * This method should be called once the device token has been received from
+     * the device's messaging api in order to enable being targeted for campaign push
+     * notifications.
+     *
+     * @param deviceToken the device token.
+     */
+    public final void registerDeviceToken(final String deviceToken) {
+        setDeviceToken(deviceToken);
+    }
+
+    /**
+     * This method should be called once the user id and channel id has been received rom
+     * the device's messaging api in order to enable being targeted for campaign push
+     * notifications.
+     *
+     * @param userId the user id
+     * @param channelId the channel id
+     */
+    public final void registerDeviceToken(final String userId, final String channelId) {
+        setDeviceToken(userId + ":" + channelId);
+    }
+
+    private void setDeviceToken(String deviceToken) {
+        this.theDeviceToken = deviceToken;
+        // Persist the device token to shared preferences.
+        final AndroidPreferences prefs = pinpointContext.getSystem().getPreferences();
+        prefs.putString(DEVICE_TOKEN_PREF_KEY, deviceToken);
+
+        for (final DeviceTokenRegisteredHandler handler : deviceRegisteredHandlers) {
+            handler.tokenRegistered(deviceToken);
+        }
+    }
+
+    private void loadDeviceToken() {
+        final AndroidPreferences prefs = pinpointContext.getSystem().getPreferences();
+        // Load the device token from shared preferences.
+        theDeviceToken = prefs.getString(DEVICE_TOKEN_PREF_KEY, null);
+    }
+
+    /**
+     * get the device token.
+     *
+     * @return the device token.
+     */
+    public final String getDeviceToken() {
+        this.loadDeviceToken();
+        return theDeviceToken;
+    }
+
+    /**
+     * The Pinpoint channel type for the device associated with
+     * this notification client.
+     *
+     * @return Channel type for the device.
+     */
+    public abstract String getChannelType();
+
+    private void addGlobalCampaignAttributes(
+        final Map<String, String> campaignAttribs) {
+        for (final Map.Entry<String, String> entry : campaignAttribs.entrySet()) {
+            if (entry.getValue() != null) {
+                this.pinpointContext.getAnalyticsClient().addGlobalAttribute(entry.getKey(), entry.getValue());
+            }
+        }
+    }
+
+    private void addCampaignAttributesToEvent(final AnalyticsEvent pushEvent, final Map<String, String> campaignAttribs) {
+        for (final Map.Entry<String, String> entry : campaignAttribs.entrySet()) {
+            if (entry.getValue() != null) {
+                pushEvent.addAttribute(entry.getKey(), entry.getValue());
+            }
+        }
+    }
+
+
+    private Resources getPackageResources() {
+        final PackageManager packageManager = pinpointContext.getApplicationContext().getPackageManager();
+        try {
+            final String packageName = pinpointContext.getApplicationContext().getPackageName();
+            final ApplicationInfo applicationInfo = packageManager.getApplicationInfo(packageName, PackageManager.GET_META_DATA);
+            return packageManager.getResourcesForApplication(applicationInfo);
+        } catch (final PackageManager.NameNotFoundException ex) {
+            log.error("Can't find resources for our application package.", ex);
+            return null;
+        }
+    }
+
+    private int getNotificationIconResourceId(
+        final String drawableResourceName) {
+        final PackageManager packageManager = pinpointContext.getApplicationContext().getPackageManager();
+        try {
+            final String packageName = pinpointContext.getApplicationContext().getPackageName();
+            final ApplicationInfo applicationInfo = packageManager.getApplicationInfo(packageName, PackageManager.GET_META_DATA);
+            final Resources resources = packageManager.getResourcesForApplication(applicationInfo);
+
+            if (drawableResourceName != null) {
+                final int resId = resources.getIdentifier(drawableResourceName, "drawable", packageName);
+                if (resId != INVALID_RESOURCE) {
+                    return resId;
+                }
+            }
+            return applicationInfo.icon;
+
+        } catch (final PackageManager.NameNotFoundException ex) {
+            log.error("Can't find icon for our application package.", ex);
+            // 0 is an invalid resource id, so use it to indicate failure to
+            // retrieve the resource.
+            return INVALID_RESOURCE;
+        }
+    }
+
+    private Notification createLegacyNotification(final int iconResId, final String title, final String contentText,
+                                                  final PendingIntent contentIntent) {
+        final Notification notification = new Notification();
+        notification.icon = iconResId;
+        notification.setLatestEventInfo(this.pinpointContext.getApplicationContext(), title, contentText, contentIntent);
+        notification.contentIntent = contentIntent;
+        return notification;
+    }
+
+    private boolean initClassesAndMethodsByReflection() {
+        if (notificationBuilderClass != null) {
+            return true;
+        }
+        try {
+            notificationBuilderClass = Class.forName("android.app.Notification$Builder"); //API Level 11
+            notificationBigTextStyleClass = Class.forName("android.app.Notification$BigTextStyle"); //API Level 16
+            notificationStyleClass = Class.forName("android.app.Notification$Style"); //API Level 16
+            notificationBigPictureStyleClass = Class.forName("android.app.Notification$BigPictureStyle"); //API Level 16
+            if (android.os.Build.VERSION.SDK_INT >= ANDROID_MARSHMALLOW) {
+                iconClass = Class.forName("android.graphics.drawable.Icon"); //API Level 23
+            }
+            if (!buildMethodsByReflection()) {
+                // fall back to creating the legacy notification.
+                return false;
+            }
+            return true;
+        } catch (final ClassNotFoundException ex) {
+            log.debug("Failed to get notification builder classes by reflection : " + ex.getMessage(), ex);
+            return false;
+        }
+    }
+
+    private boolean buildMethodsByReflection() {
+        try {
+            notificationBuilderConstructor = notificationBuilderClass.getDeclaredConstructor(Context.class);
+            setContentTitleMethod = notificationBuilderClass.getDeclaredMethod("setContentTitle", CharSequence.class);
+            setContentTextMethod = notificationBuilderClass.getDeclaredMethod("setContentText", CharSequence.class);
+            setContentIntent = notificationBuilderClass.getDeclaredMethod("setContentIntent", PendingIntent.class);
+            setStyleMethod = notificationBuilderClass.getDeclaredMethod("setStyle", notificationStyleClass);
+            setSmallIconResIdMethod = notificationBuilderClass.getDeclaredMethod("setSmallIcon", int.class);
+            buildMethod = notificationBuilderClass.getDeclaredMethod("build");
+            bigTextMethod = notificationBigTextStyleClass.getDeclaredMethod("bigText", CharSequence.class);
+            bigPictureMethod = notificationBigPictureStyleClass.getDeclaredMethod("bigPicture", Bitmap.class);
+            setSummaryMethod = notificationBigPictureStyleClass.getDeclaredMethod("setSummaryText", CharSequence.class);
+            setLargeIconMethod = notificationBuilderClass.getDeclaredMethod("setLargeIcon", Bitmap.class);
+            setPriorityMethod = notificationBuilderClass.getDeclaredMethod("setPriority", int.class);
+            setSoundMethod = notificationBuilderClass.getDeclaredMethod("setSound", Uri.class);
+
+            if (android.os.Build.VERSION.SDK_INT >= ANDROID_MARSHMALLOW) {
+                setSmallIconMethod = notificationBuilderClass.getDeclaredMethod("setSmallIcon", iconClass);
+                createWithBitmapMethod = iconClass.getDeclaredMethod("createWithBitmap", Bitmap.class);
+            }
+            return true;
+        } catch (final NoSuchMethodException ex) {
+            log.debug("Failed to get notification builder methods by reflection. : " + ex.getMessage(), ex);
+            return false;
+        }
+    }
+
+    private static final float RED_MULTIPLIER = 0.299f;
+    private static final float GREEN_MULTIPLIER = 0.587f;
+    private static final float BLUE_MULTIPLIER =  0.114f;
+    private static final int TRANSPARENT_WHITE_COLOR = 0x00FFFFFF;
+    private static final int BITS_TO_SHIFT_FOR_ALPHA = 24;
+    private static final int MAX_ALPHA = Color.alpha(Color.WHITE);
+
+    /**
+     * Convert a bitmap to gray-scale and store the gray-scale value in the bitmap alpha channel.
+     * If the bitmap to be converted is already a solid color, the input bitmap will be copied
+     * as is to the output.
+     *
+     * @param input the input bitmap.
+     * @return the output bitmap.
+     */
+    /*package*/ static Bitmap convertBitmapToAlphaGreyscale(final Bitmap input) {
+        final int pixelCount = input.getWidth() * input.getHeight();
+        int[] inPixels = new int[pixelCount];
+        input.getPixels(inPixels, 0, input.getWidth(), 0, 0, input.getWidth(), input.getHeight());
+        int[] outPixels = new int[pixelCount];
+        boolean hasMoreThanOneNonTransparentColor = false;
+        Integer firstColor = null;
+
+        for (int i = 0; i < pixelCount; i++) {
+            final int inputArgb = inPixels[i];
+            final int greyScale;
+            final int inputAlpha = Color.alpha(inputArgb);
+
+            // Color is changed to gray-scale in the alpha channel.
+            final int calculatedColor = MAX_ALPHA - (Math.round(Color.red(inputArgb) * RED_MULTIPLIER)
+                + Math.round(Color.green(inputArgb) * GREEN_MULTIPLIER)
+                + Math.round(Color.blue(inputArgb) * BLUE_MULTIPLIER));
+            if (inputAlpha != 0) {
+                if (firstColor == null) {
+                    firstColor = inputArgb & TRANSPARENT_WHITE_COLOR;
+                } else if ((inputArgb & TRANSPARENT_WHITE_COLOR) != firstColor) {
+                    hasMoreThanOneNonTransparentColor = true;
+                }
+            }
+            greyScale = calculatedColor * inputAlpha / MAX_ALPHA;
+            outPixels[i] = (greyScale << BITS_TO_SHIFT_FOR_ALPHA) | TRANSPARENT_WHITE_COLOR;
+        }
+
+        if (!hasMoreThanOneNonTransparentColor) {
+            // Images that have only one non-transparent color, are already in the expected format
+            // for a small icon, and so can be used directly.
+            return Bitmap.createBitmap(inPixels, input.getWidth(), input.getHeight(), Bitmap.Config.ARGB_8888);
+        }
+
+        return Bitmap.createBitmap(outPixels, input.getWidth(), input.getHeight(), Bitmap.Config.ARGB_8888);
+    }
+
+    private void setSmallIconWithFallbackToLargeIconForSDKAbove20(final Object notificationBuilder,
+                                                                  final boolean alreadySetLargeIcon,
+                                                                  final int iconResId,
+                                                                  final Bitmap largeIconBitmap)
+        throws InvocationTargetException, IllegalAccessException {
+        if (!alreadySetLargeIcon && android.os.Build.VERSION.SDK_INT >= ANDROID_LOLLIPOP) {
+            final Resources resources = getPackageResources();
+
+            if (resources != null) {
+                final Bitmap iconBitmap;
+                if (largeIconBitmap == null) {
+                    // We have to get the iconResId as a bitmap to call setLargeIcon.
+                    iconBitmap = BitmapFactory.decodeResource(resources, iconResId);
+                } else {
+                    iconBitmap = largeIconBitmap;
+                }
+                if (iconBitmap != null) {
+                    setLargeIconMethod.invoke(notificationBuilder, iconBitmap);
+                    if (android.os.Build.VERSION.SDK_INT >= ANDROID_MARSHMALLOW) {
+                        final Bitmap smallBitmap
+                            = convertBitmapToAlphaGreyscale(iconBitmap);
+                        setSmallIconMethod
+                            .invoke(notificationBuilder, createWithBitmapMethod.invoke(iconClass, smallBitmap));
+                    } else {
+                        setSmallIconResIdMethod.invoke(notificationBuilder, iconResId);
+                    }
+                    return;
+                }
+            }
+        }
+        setSmallIconResIdMethod.invoke(notificationBuilder, iconResId);
+    }
+
+    private boolean buildNotificationIcons(final int iconResId, final String imageIconUrl,
+                                           final String imageSmallIconUrl,
+                                           final Object notificationBuilder) {
+        try {
+            boolean setLargeIcon = false;
+            Bitmap largeIconBitmap = null;
+            if (imageIconUrl != null) {
+                try {
+                    largeIconBitmap = new DownloadImageTask().execute(imageIconUrl).get();
+                    setLargeIconMethod.invoke(notificationBuilder, largeIconBitmap);
+                    setLargeIcon = true;
+                } catch (final InterruptedException e) {
+                    log.error("Interrupted when downloading image : " + e.getMessage(), e);
+                } catch (final ExecutionException e) {
+                    log.error("Failed execute download image thread : " + e.getMessage(), e);
+                }
+            }
+            if (imageSmallIconUrl != null && iconClass != null
+                && android.os.Build.VERSION.SDK_INT >= ANDROID_MARSHMALLOW) {
+                try {
+                    final Bitmap iconBitmap = new DownloadImageTask().execute(imageSmallIconUrl).get();
+                    if (!setLargeIcon && android.os.Build.VERSION.SDK_INT >= ANDROID_LOLLIPOP) {
+                        setSmallIconWithFallbackToLargeIconForSDKAbove20(notificationBuilder,
+                            false, iconResId, iconBitmap);
+                    } else {
+                        setSmallIconMethod.invoke(notificationBuilder,
+                            createWithBitmapMethod.invoke(iconClass, iconBitmap));
+                    }
+                } catch (final InterruptedException e) {
+                    log.error("Interrupted when downloading small icon : " + e.getMessage(), e);
+                    setSmallIconWithFallbackToLargeIconForSDKAbove20(notificationBuilder,
+                        setLargeIcon, iconResId, null);
+
+                } catch (final ExecutionException e) {
+                    log.error("Failed execute download image small icon thread : " + e.getMessage(), e);
+                    setSmallIconWithFallbackToLargeIconForSDKAbove20(notificationBuilder,
+                        setLargeIcon, iconResId, null);
+                }
+            } else {
+                if (setLargeIcon && android.os.Build.VERSION.SDK_INT >= ANDROID_MARSHMALLOW) {
+                    final Bitmap smallBitmap =
+                        convertBitmapToAlphaGreyscale(largeIconBitmap);
+                    setSmallIconMethod
+                        .invoke(notificationBuilder, createWithBitmapMethod.invoke(iconClass, smallBitmap));
+                } else {
+                    setSmallIconWithFallbackToLargeIconForSDKAbove20(notificationBuilder,
+                        setLargeIcon, iconResId, null);
+                }
+            }
+            return true;
+        } catch (final InvocationTargetException ex) {
+            log.debug("Can't invoke notification builder methods. : " + ex.getMessage(), ex);
+            return false;
+        } catch (final IllegalAccessException ex) {
+            log.debug("Can't access notification builder methods. : " + ex.getMessage(), ex);
+            return false;
+        }
+    }
+
+    private Notification createNotification(final int iconResId, final String title, final String contentText, final String imageUrl,
+                                            final String imageIconUrl, final String imageSmallIconUrl, final PendingIntent contentIntent) {
+        log.info("Create Notification:" + title + ", Content:" + contentText);
+        if (android.os.Build.VERSION.SDK_INT < ANDROID_JELLYBEAN) {
+            return createLegacyNotification(iconResId, title, contentText, contentIntent);
+        }
+
+        if (!initClassesAndMethodsByReflection()) {
+            // fall back to creating the legacy notification.
+            return createLegacyNotification(iconResId, title, contentText, contentIntent);
+        }
+
+        final Object notificationBuilder;
+        final Object bigTextStyle;
+        final Object bigPictureStyle;
+
+        try {
+            notificationBuilder = notificationBuilderConstructor.newInstance(pinpointContext.getApplicationContext());
+            bigTextStyle = notificationBigTextStyleClass.newInstance();
+            bigPictureStyle = notificationBigPictureStyleClass.newInstance();
+        } catch (final InvocationTargetException ex) {
+            log.debug("Can't invoke notification builder constructor. : " + ex.getMessage(), ex);
+            return createLegacyNotification(iconResId, title, contentText, contentIntent);
+        } catch (final IllegalAccessException ex) {
+            log.debug("Can't access notification builder or bigTextStyle or bigPictureStyle classes. : " + ex.getMessage(), ex);
+            return createLegacyNotification(iconResId, title, contentText, contentIntent);
+        } catch (final InstantiationException ex) {
+            log.debug("Exception while instantiating notification builder or bigTextStyle or bigPictureStyle classes. : " + ex.getMessage(),
+                      ex);
+            return createLegacyNotification(iconResId, title, contentText, contentIntent);
+        }
+
+        try {
+            setContentTitleMethod.invoke(notificationBuilder, title);
+            setContentTextMethod.invoke(notificationBuilder, contentText);
+            setContentIntent.invoke(notificationBuilder, contentIntent);
+            setPriorityMethod.invoke(notificationBuilder, 1);
+            final Uri defaultSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);
+            setSoundMethod.invoke(notificationBuilder, defaultSoundUri);
+
+            if (!buildNotificationIcons(iconResId, imageIconUrl, imageSmallIconUrl, notificationBuilder)) {
+                return createLegacyNotification(iconResId, title, contentText, contentIntent);
+            }
+
+            if (imageUrl != null) {
+                try {
+                    notificationImage = new DownloadImageTask().execute(imageUrl).get();
+                    if (notificationImage != null) {
+                        bigPictureMethod.invoke(bigPictureStyle, notificationImage);
+                        setSummaryMethod.invoke(bigPictureStyle, contentText);
+                        setStyleMethod.invoke(notificationBuilder, bigPictureStyle);
+                    } else {
+                        bigTextMethod.invoke(bigTextStyle, contentText);
+                        setStyleMethod.invoke(notificationBuilder, bigTextStyle);
+                    }
+                } catch (final InterruptedException e) {
+                    log.error("Interrupted when downloading image : " + e.getMessage(), e);
+                } catch (final ExecutionException e) {
+                    log.error("Failed execute download image thread : " + e.getMessage(), e);
+                }
+            }
+
+            return (Notification) buildMethod.invoke(notificationBuilder);
+        } catch (final InvocationTargetException ex) {
+            log.debug("Can't invoke notification builder methods. : " + ex.getMessage(), ex);
+            return createLegacyNotification(iconResId, title, contentText, contentIntent);
+        } catch (final IllegalAccessException ex) {
+            log.debug("Can't access notification builder methods. : " + ex.getMessage(), ex);
+            return createLegacyNotification(iconResId, title, contentText, contentIntent);
+        }
+    }
+
+
+    /**
+     * Handles creation of the open app PendingIntent. Implementors of this method will need to
+     * decide on how to create the intent based on the provided action.
+     *
+     * @param pushBundle    the data to push
+     * @param targetClass   the class that handles receiving messages.
+     * @param campaignId    pinpoint campaign id
+     * @param requestId     request id
+     * @param intentAction  intent action
+     * @return {@link PendingIntent}
+     */
+    protected abstract PendingIntent createOpenAppPendingIntent(final Bundle pushBundle, final Class<?> targetClass, final String campaignId,
+                                                                final int requestId, final String intentAction);
+
+
+    protected final Intent notificationIntent(final Bundle pushBundle, final String campaignId, final int requestId, final String intentAction,
+                                      final Class<?> targetClass) {
+        final Intent notificationIntent = new Intent(pinpointContext.getApplicationContext(), targetClass);
+        notificationIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
+        notificationIntent.setAction(intentAction);
+        notificationIntent.putExtras(pushBundle);
+        notificationIntent.putExtra(INTENT_SNS_NOTIFICATION_FROM, AWS_EVENT_TYPE_OPENED);
+        notificationIntent.putExtra(CAMPAIGN_ID_PUSH_KEY, campaignId);
+        notificationIntent.putExtra(REQUEST_ID, requestId);
+        notificationIntent.setPackage(pinpointContext.getApplicationContext().getPackageName());
+        return notificationIntent;
+    }
+
+    /* package */ int getNotificationRequestId(final String campaignId, final String activityId) {
+        return (campaignId + ":" + activityId).hashCode();
+    }
+
+    private boolean displayNotification(final Bundle pushBundle, final Class<?> targetClass, String imageUrl,
+                                        String iconImageUrl, String iconSmallImageUrl,
+                                        Map<String, String> campaignAttributes, String intentAction) {
+        log.info("Display Notification: " + pushBundle.toString());
+
+        final String title = pushBundle.getString(NOTIFICATION_TITLE_PUSH_KEY);
+        final String message = pushBundle.getString(NOTIFICATION_BODY_PUSH_KEY);
+
+        final String campaignId = campaignAttributes.get(CAMPAIGN_ID_ATTRIBUTE_KEY);
+        final String activityId = campaignAttributes.get(CAMPAIGN_ACTIVITY_ID_ATTRIBUTE_KEY);
+
+        final int requestID = getNotificationRequestId(campaignId, activityId);
+
+        final int iconResId = getNotificationIconResourceId(pushBundle.getString(NOTIFICATION_ICON_PUSH_KEY));
+        if (iconResId == 0) {
+            return false;
+        }
+
+        final Notification notification = createNotification(iconResId, title, message, imageUrl, iconImageUrl,
+                                                             iconSmallImageUrl,
+                                                             this.createOpenAppPendingIntent(pushBundle, targetClass,
+                                                                                             campaignId, requestID,
+                                                                                             intentAction));
+
+        notification.flags |= Notification.FLAG_AUTO_CANCEL;
+        notification.defaults |= Notification.DEFAULT_SOUND | Notification.DEFAULT_VIBRATE;
+
+        if (android.os.Build.VERSION.SDK_INT >= ANDROID_LOLLIPOP) {
+            log.info("SDK greater than 21 detected: " + android.os.Build.VERSION.SDK_INT);
+
+            final String colorString = pushBundle.getString(NOTIFICATION_COLOR_PUSH_KEY);
+            if (colorString != null) {
+                int color;
+                try {
+                    color = Color.parseColor(colorString);
+                } catch (final IllegalArgumentException ex) {
+                    log.warn("Couldn't parse campaign notification color.", ex);
+                    color = 0;
+                }
+                Exception exception = null;
+                try {
+                    final Field colorField = notification.getClass().getDeclaredField("color");
+                    colorField.setAccessible(true);
+                    colorField.set(notification, color);
+                } catch (final IllegalAccessException ex) {
+                    exception = ex;
+                } catch (final NoSuchFieldException ex) {
+                    exception = ex;
+                }
+                if (exception != null) {
+                    log.error("Couldn't set campaign notification color : " + exception.getMessage(), exception);
+                }
+            }
+        }
+
+        final NotificationManager notificationManager = (NotificationManager) pinpointContext.getApplicationContext()
+                                                                                             .getSystemService(
+                                                                                                 Context.NOTIFICATION_SERVICE);
+
+        notificationManager.notify(requestID, notification);
+        return true;
+    }
+
+    private boolean openApp() {
+        final Intent launchIntent = pinpointContext.getApplicationContext().getPackageManager()
+                                                   .getLaunchIntentForPackage(
+                                                       pinpointContext.getApplicationContext().getPackageName());
+
+        if (launchIntent == null) {
+            log.error("Couldn't get app launch intent for campaign notification.");
+            return false;
+        }
+        launchIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED);
+        launchIntent.setPackage(null);
+        pinpointContext.getApplicationContext().startActivity(launchIntent);
+        return true;
+    }
+
+    private void openURL(final String url, final boolean noSchemeValidation) {
+        final String validatedUrl;
+        if (url.startsWith("http://") || url.startsWith("https://") || noSchemeValidation) {
+            validatedUrl = url;
+        } else {
+            validatedUrl = "http://" + url;
+        }
+
+        final Intent intent = new Intent(Intent.ACTION_VIEW);
+        intent.setData(Uri.parse(validatedUrl));
+        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+        if (intent.resolveActivity(pinpointContext.getApplicationContext().getPackageManager()) != null) {
+            pinpointContext.getApplicationContext().startActivity(intent);
+        }
+    }
+
+    /* pkg */
+    NotificationClient.CampaignPushResult handleNotificationOpen(
+        Map<String, String> campaignAttributes,
+        final Bundle data) {
+        // Add any campaign global attributes
+        if (campaignAttributes != null) {
+            // Stop Session
+            if (this.pinpointContext.getSessionClient() != null) {
+                this.pinpointContext.getSessionClient().stopSession();
+            }
+            addGlobalCampaignAttributes(campaignAttributes);
+
+            final AnalyticsEvent pushEvent = this.pinpointContext.getAnalyticsClient().createEvent(AWS_EVENT_TYPE_OPENED);
+            this.pinpointContext.getAnalyticsClient().recordEvent(pushEvent);
+            this.pinpointContext.getAnalyticsClient().submitEvents();
+
+            final String url = data.getString(CAMPAIGN_URL_PUSH_KEY);
+            if (url != null) {
+                openURL(url, false);
+                return NotificationClient.CampaignPushResult.NOTIFICATION_OPENED;
+            }
+            final String deepLink = data.getString(CAMPAIGN_DEEP_LINK_PUSH_KEY);
+            if (deepLink != null) {
+                openURL(deepLink, true);
+                return NotificationClient.CampaignPushResult.NOTIFICATION_OPENED;
+            }
+            final String openApp = data.getString(CAMPAIGN_OPEN_APP_PUSH_KEY);
+            if (openApp == null) {
+                log.warn("No key/value present to determine action for campaign notification, default to open app.");
+            }
+            openApp();
+        }
+        return NotificationClient.CampaignPushResult.NOTIFICATION_OPENED;
+    }
+
+    /**
+     * Handles pinpoint push messages by posting a local notification when
+     * the app is in the background, or sending a local broadcast if the app is
+     * in the foreground. Also on Api level 19 devices and above, if local
+     * notifications have been disabled and the app is in the background, a
+     * local broadcast is sent.
+     *
+     * @param notificationDetails the notification message received by the device's messaging service
+     * @return {@link NotificationClient.CampaignPushResult}.
+     */
+    public final NotificationClient.CampaignPushResult handleCampaignPush(NotificationDetails notificationDetails) {
+        final String from = notificationDetails.getFrom();
+        final Bundle data = notificationDetails.getBundle();
+        final Class<?> targetClass = notificationDetails.getTargetClass();
+        String intentAction = notificationDetails.getIntentAction();
+
+        // Check if push data contains a Campaign Id
+        if (data == null || !data.containsKey(CAMPAIGN_ID_PUSH_KEY)) {
+            return NotificationClient.CampaignPushResult.NOT_HANDLED;
+        }
+
+        final boolean isAppInForeground = appUtil.isAppInForeground();
+
+        final String imageUrl = data.getString(CAMPAIGN_IMAGE_PUSH_KEY);
+        final String imageIconUrl = data.getString(CAMPAIGN_IMAGE_ICON_PUSH_KEY);
+        final String imageSmallIconUrl = data.getString(CAMPAIGN_IMAGE_SMALL_ICON_PUSH_KEY);
+        final Map<String, String> campaignAttributes = new HashMap<String, String>();
+
+        campaignAttributes.put(CAMPAIGN_ID_ATTRIBUTE_KEY, data.getString(CAMPAIGN_ID_PUSH_KEY));
+        campaignAttributes.put(CAMPAIGN_TREATMENT_ID_ATTRIBUTE_KEY, data.getString(CAMPAIGN_TREATMENT_ID_PUSH_KEY));
+        campaignAttributes.put(CAMPAIGN_ACTIVITY_ID_ATTRIBUTE_KEY, data.getString(CAMPAIGN_ACTIVITY_ID_PUSH_KEY));
+
+        this.pinpointContext.getAnalyticsClient().setCampaignAttributes(campaignAttributes);
+        log.info("Campaign Attributes are:" + campaignAttributes);
+
+        if (AWS_EVENT_TYPE_OPENED.equals(from)) {
+            return this.handleNotificationOpen(campaignAttributes, data);
+        }
+
+        if (campaignAttributes != null) {
+            // Create the push event.
+            String eventType = null;
+            if (isAppInForeground) {
+                eventType = AWS_EVENT_TYPE_RECEIVED_FOREGROUND;
+            } else {
+                eventType = AWS_EVENT_TYPE_RECEIVED_BACKGROUND;
+            }
+            final AnalyticsEvent pushEvent = this.pinpointContext.getAnalyticsClient().createEvent(eventType);
+
+            // Add the campaign attributes.
+            addCampaignAttributesToEvent(pushEvent, campaignAttributes);
+            pushEvent.addAttribute("isAppInForeground", Boolean.toString(isAppInForeground));
+            try {
+                // Ignore whether the app is in the foreground if the configuration indicates it should post
+                // notifications in the foreground.
+                if (
+                    !pinpointContext.getPinpointConfiguration().getShouldPostNotificationsInForeground() && isAppInForeground) {
+                    // Notify the caller that the app was in the foreground.
+                    return NotificationClient.CampaignPushResult.APP_IN_FOREGROUND;
+                } else {
+                    // Display a notification with an icon, title, message,
+                    // image, and default sound.
+                    if ("1".equalsIgnoreCase(data.getString(NOTIFICATION_SILENT_PUSH_KEY))) {
+                        return NotificationClient.CampaignPushResult.SILENT;
+                    }
+
+                    // App is in the background; attempt to display a
+                    // notification in the notification center.
+                    if (!areAppNotificationsEnabled() ||
+                        !displayNotification(data, targetClass, imageUrl, imageIconUrl, imageSmallIconUrl, campaignAttributes,
+                                             intentAction)) {
+                        // Local app notifications have been disabled by the
+                        // user from Settings -> App Info
+                        // or we couldn't display the notification for some
+                        // reason.
+
+                        pushEvent.addAttribute("isOptedOut", "true");
+                        // We can't post a notification, so delegate to the
+                        // passed in handler.
+                        return NotificationClient.CampaignPushResult.OPTED_OUT;
+                    }
+                }
+            } finally {
+                this.pinpointContext.getAnalyticsClient().recordEvent(pushEvent);
+                this.pinpointContext.getAnalyticsClient().submitEvents();
+            }
+        }
+        return NotificationClient.CampaignPushResult.POSTED_NOTIFICATION;
+    }
+
+    /**
+     * If app-level opt-out is enabled, this method always returns false. Otherwise,
+     * the following logic applies: On devices using Android API level 19 and above,
+     * this method properly returns whether local notifications are enabled for the app.
+     * For devices before API level 19, this method always returns true. Disabling
+     * notifications was a feature added on devices supporting API Level 16 and
+     * above, so devices from API level 16 to 18 will return true from this
+     * method even when local notifications have been disabled for the app.
+     *
+     * @return true if local notifications are enabled for this app, otherwise
+     * false.
+     */
+    public final boolean areAppNotificationsEnabled() {
+        final AppLevelOptOutProvider provider = pinpointContext.getPinpointConfiguration().getAppLevelOptOutProvider();
+        if (provider != null && provider.isOptedOut()) {
+            return false;
+        }
+
+        return areAppNotificationsEnabledOnPlatform();
+    }
+
+    boolean areAppNotificationsEnabledOnPlatform() {
+        if (android.os.Build.VERSION.SDK_INT < ANDROID_KITKAT) {
+            return true;
+        }
+
+        final String appOpsServiceName;
+        try {
+            final Field appOpsServiceNameField = Context.class.getDeclaredField(APP_OPS_SERVICE);
+            appOpsServiceName = (String) appOpsServiceNameField.get(String.class);
+        } catch (final NoSuchFieldException e) {
+            log.error(e.getMessage(), e);
+            return true;
+        } catch (final IllegalAccessException e) {
+            log.error(e.getMessage(), e);
+            return true;
+        }
+
+        final Object mAppOps = pinpointContext.getApplicationContext().getSystemService(appOpsServiceName);
+        if (mAppOps == null) {
+            return true;
+        }
+
+        final ApplicationInfo appInfo = pinpointContext.getApplicationContext().getApplicationInfo();
+        final String pkg = pinpointContext.getApplicationContext().getPackageName();
+
+        final int uid = appInfo.uid;
+
+        try {
+            if (appOpsClass == null || checkOpNoThrowMethod == null || opPostNotificationField == null || modeAllowedField == null) {
+                appOpsClass = Class.forName(mAppOps.getClass().getName());
+                checkOpNoThrowMethod = appOpsClass.getMethod(CHECK_OP_NO_THROW, Integer.TYPE, Integer.TYPE, String.class);
+                opPostNotificationField = appOpsClass.getDeclaredField(OP_POST_NOTIFICATION);
+                modeAllowedField = appOpsClass.getDeclaredField(APP_OPS_MODE_ALLOWED);
+            }
+
+            final int postNotificationValue = opPostNotificationField.getInt(null);
+            final int opPostNotificationMode = (Integer) checkOpNoThrowMethod.invoke(mAppOps, postNotificationValue, uid, pkg);
+            final int modeAllowed = modeAllowedField.getInt(null);
+            return (modeAllowed == opPostNotificationMode);
+
+        } catch (final ClassNotFoundException e) {
+            log.error(e.getMessage(), e);
+        } catch (final NoSuchMethodException e) {
+            log.error(e.getMessage(), e);
+        } catch (final NoSuchFieldException e) {
+            log.error(e.getMessage(), e);
+        } catch (final InvocationTargetException e) {
+            log.error(e.getMessage(), e);
+        } catch (final IllegalAccessException e) {
+            log.error(e.getMessage(), e);
+        }
+        return true;
+    }
+
+    /**
+     * Creates a new NotificationClientBase based on the supplied context and channel type. This method
+     * returns an instance based on NotificationClientBase interface.
+     *
+     * @param pinpointContext Context to associate with the client.
+     * @param channelType The channel type the client will support.
+     * @return A new instance of the {@link NotificationClientBase}.
+     */
+    public static NotificationClientBase createClient(PinpointContext pinpointContext, ChannelType channelType) {
+        NotificationClientBase client = null;
+        switch (channelType) {
+            case ADM:
+                client = new ADMNotificationClient(pinpointContext);
+                break;
+            case GCM:
+                client = new GCMNotificationClient(pinpointContext);
+                break;
+            case BAIDU:
+                client = new BaiduNotificationClient(pinpointContext);
+                break;
+            default:
+                client = new GCMNotificationClient(pinpointContext);
+                break;
+        }
+        return client;
+    }
+
+    private class DownloadImageTask extends AsyncTask<String, Void, Bitmap> {
+
+        @Override
+        protected Bitmap doInBackground(String... urls) {
+            try {
+                return BitmapFactory.decodeStream((new URL(urls[0])).openConnection().getInputStream());
+            } catch (final IOException ex) {
+                log.error("Cannot download or find image for rich notification.", ex);
+                return null;
+            }
+        }
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationDetails.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationDetails.java
new file mode 100644
index 0000000000..5d140245f9
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationDetails.java
@@ -0,0 +1,266 @@
+/**
+ * Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ * http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+package com.amazonaws.mobileconnectors.pinpoint.targeting.notification;
+
+import android.app.Service;
+import android.content.Intent;
+import android.os.Bundle;
+
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.util.StringUtil;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.Iterator;
+import java.util.Map;
+
+import static com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClient.INTENT_SNS_NOTIFICATION_FROM;
+import static com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClientBase.log;
+
+/**
+ * NotificationDetails stores push notification information received from Pinpoint.
+ */
+public class NotificationDetails {
+    private String from;
+    private Bundle bundle;
+    private Class<?> targetClass;
+    private String intentAction;
+
+    public String getFrom() {
+        return from;
+    }
+
+    public void setFrom(String from) {
+        this.from = from;
+    }
+
+    public Bundle getBundle() {
+        return bundle;
+    }
+
+    public void setBundle(Bundle bundle) {
+        this.bundle = bundle;
+    }
+
+    public Class<?> getTargetClass() {
+        return targetClass;
+    }
+
+    public void setTargetClass(Class<?> targetClass) {
+        this.targetClass = targetClass;
+    }
+
+    public String getIntentAction() {
+        return intentAction;
+    }
+
+    public void setIntentAction(String intentAction) {
+        this.intentAction = intentAction;
+    }
+
+    /**
+     * Returns a builder for NotificationDetails.
+     * @return {@link NotificationDetailsBuilder}
+     */
+    public static NotificationDetailsBuilder builder() {
+        return new NotificationDetailsBuilder();
+    }
+
+    /**
+     * Builds a NotificationDetails object from push notification data.
+     *
+     * The messaging platform the push notification was under should determine
+     * which fields to set on the builder.
+     *
+     * GCM example:
+     * new NotificationDetails.builder()
+     *      .from(from)
+     *      .bundle(bundle)
+     *      .serviceClass(serviceClass)
+     *      .intentAction(NotificationClient.GCM_INTENT_ACTION)
+     *      .build();
+     *
+     * FCM example:
+     *  new NotificationDetails.builder()
+     *      .from(from)
+     *      .mapData(mapData)
+     *      .intentAction(NotificationClient.FCM_INTENT_ACTION)
+     *      .build();
+     *
+     * ADM example:
+     *  new NotificationDetails.builder()
+     *      .intent(intent)
+     *      .serviceClass(serviceClass)
+     *      .intentAction(NotificationClient.ADM_INTENT_ACTION)
+     *      .build();
+     *
+     * Baidu example:
+     *  new NotificationDetails.builder()
+     *      .message(message)
+     *      .build()
+     */
+    public static class NotificationDetailsBuilder {
+        private String from;
+        private Bundle bundle;
+        private Class<? extends Service> serviceClass;
+        private String intentAction;
+        private Map<String, String> mapData;
+        private Intent intent;
+        private String message;
+
+        /**
+         * The from string received by the local push notification service.
+         * @param from the "from" string received by the push notification service.
+         * @return {@link NotificationDetailsBuilder}
+         */
+        @SuppressWarnings("checkstyle:hiddenfield")
+        public NotificationDetailsBuilder from(String from) {
+            this.from = from;
+            return this;
+        }
+
+        /**
+         * The bundle received by the local push notification service.
+         * @param bundle the "bundle" received by the push notification service.
+         * @return {@link NotificationDetailsBuilder}
+         */
+        @SuppressWarnings("checkstyle:hiddenfield")
+        public NotificationDetailsBuilder bundle(Bundle bundle) {
+            this.bundle = bundle;
+            return this;
+        }
+
+        /**
+         * The Android Service class that received the push notification.
+         * @param serviceClass Android service class that received the push notification
+         * @return {@link NotificationDetailsBuilder}
+         */
+        @SuppressWarnings("checkstyle:hiddenfield")
+        public NotificationDetailsBuilder serviceClass(Class<? extends Service> serviceClass) {
+            this.serviceClass = serviceClass;
+            return this;
+        }
+
+        /**
+         * The intent action that identifies the push notification service platform.
+         * @param intentAction the intent action that identifies the push notification service platform
+         * @return {@link NotificationDetailsBuilder}
+         */
+        @SuppressWarnings("checkstyle:hiddenfield")
+        public NotificationDetailsBuilder intentAction(String intentAction) {
+            this.intentAction = intentAction;
+            return this;
+        }
+
+        /**
+         * The mapData received by the local push notification service.
+         * @param mapData the "mapData" received by the push notification service.
+         * @return {@link NotificationDetailsBuilder}
+         */
+        @SuppressWarnings("checkstyle:hiddenfield")
+        public NotificationDetailsBuilder mapData(Map<String, String> mapData) {
+            this.mapData = mapData;
+            return this;
+        }
+
+        /**
+         * The intent received by the local push notification service.
+         * @param intent the "intent" received by the push notification service.
+         * @return {@link NotificationDetailsBuilder}
+         */
+        @SuppressWarnings("checkstyle:hiddenfield")
+        public NotificationDetailsBuilder intent(Intent intent) {
+            this.intent = intent;
+            return this;
+        }
+
+        /**
+         * The message received by the local push notification service.
+         * @param message the "message" received by the push notification service.
+         * @return {@link NotificationDetailsBuilder}
+         */
+        @SuppressWarnings("checkstyle:hiddenfield")
+        public NotificationDetailsBuilder message(String message) {
+            this.message = message;
+            return this;
+        }
+
+        /**
+         * Builds and returns an instance of {@link NotificationDetails}.
+         * @return {@link NotificationDetails}
+         */
+        public NotificationDetails build() {
+            NotificationDetails notificationDetails = new NotificationDetails();
+            if (NotificationClient.GCM_INTENT_ACTION.equals(intentAction)) {
+                notificationDetails.setFrom(from);
+                notificationDetails.setBundle(bundle);
+                notificationDetails.setTargetClass(serviceClass);
+                notificationDetails.setIntentAction(intentAction);
+            }
+
+            if (NotificationClient.FCM_INTENT_ACTION.equals(intentAction)) {
+                if (mapData != null) {
+                    final Bundle localBundle = new Bundle();
+                    for (final Map.Entry<String, String> entry : mapData.entrySet()) {
+                        localBundle.putString(entry.getKey(), entry.getValue());
+                    }
+                    notificationDetails.setBundle(localBundle);
+                }
+
+                notificationDetails.setFrom(from);
+                notificationDetails.setTargetClass(PinpointNotificationReceiver.class);
+                notificationDetails.setIntentAction(intentAction);
+            }
+
+            if (NotificationClient.ADM_INTENT_ACTION.equals(intentAction)) {
+                if (intent != null) {
+                    final Bundle data = intent.getExtras();
+                    if (data != null) {
+                        notificationDetails.setFrom(data.getString(INTENT_SNS_NOTIFICATION_FROM));
+                    }
+                    notificationDetails.setBundle(data);
+                }
+                notificationDetails.setTargetClass(serviceClass);
+                notificationDetails.setIntentAction(intentAction);
+            }
+
+            if (NotificationClient.BAIDU_INTENT_ACTION.equals(intentAction)) {
+
+                try {
+                    if (!StringUtil.isNullOrEmpty(message)) {
+                        JSONObject jsonObject = new JSONObject(message);
+                        String localFrom = jsonObject.optString(INTENT_SNS_NOTIFICATION_FROM, null);
+                        Bundle localBundle = new Bundle();
+                        for (Iterator iter = jsonObject.keys(); iter.hasNext();) {
+                            String key = (String) iter.next();
+                            String value = jsonObject.getString(key);
+                            localBundle.putString(key, value);
+                        }
+
+                        notificationDetails.setFrom(localFrom);
+                        notificationDetails.setBundle(localBundle);
+                    }
+                    notificationDetails.setTargetClass(PinpointNotificationReceiver.class);
+                    notificationDetails.setIntentAction(intentAction);
+                } catch (JSONException e) {
+                    log.error("Unable to parse JSON message: " + e, e);
+                }
+
+            }
+
+            return notificationDetails;
+        }
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/PinpointNotificationReceiver.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/PinpointNotificationReceiver.java
index d0fa8b9178..3198c7c6d1 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/PinpointNotificationReceiver.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/PinpointNotificationReceiver.java
@@ -33,19 +33,23 @@ public static void setNotificationClient(NotificationClient notificationClient)
         PinpointNotificationReceiver.notificationClient = notificationClient;
     }
 
+    public static void setNotificationClient(NotificationClientBase notificationClientBase) {
+        PinpointNotificationReceiver.notificationClient = new NotificationClient(notificationClientBase);
+    }
+
     @Override
     public void onReceive(Context context, Intent intent) {
         if (notificationClient != null) {
-            final String prefix = NotificationClient.CAMPAIGN_PUSH_KEY_PREFIX;
+            final String prefix = NotificationClientBase.CAMPAIGN_PUSH_KEY_PREFIX;
             final Map<String, String> campaignAttributes = new HashMap<String, String>();
-            campaignAttributes.put(NotificationClient.CAMPAIGN_ID_ATTRIBUTE_KEY,
-                                   intent.getStringExtra(prefix.concat(NotificationClient.CAMPAIGN_ID_ATTRIBUTE_KEY)));
+            campaignAttributes.put(NotificationClientBase.CAMPAIGN_ID_ATTRIBUTE_KEY,
+                                   intent.getStringExtra(prefix.concat(NotificationClientBase.CAMPAIGN_ID_ATTRIBUTE_KEY)));
             campaignAttributes
-                .put(NotificationClient.CAMPAIGN_TREATMENT_ID_ATTRIBUTE_KEY,
-                     intent.getStringExtra(prefix.concat(NotificationClient.CAMPAIGN_TREATMENT_ID_ATTRIBUTE_KEY)));
+                .put(NotificationClientBase.CAMPAIGN_TREATMENT_ID_ATTRIBUTE_KEY,
+                     intent.getStringExtra(prefix.concat(NotificationClientBase.CAMPAIGN_TREATMENT_ID_ATTRIBUTE_KEY)));
             campaignAttributes
-                .put(NotificationClient.CAMPAIGN_ACTIVITY_ID_ATTRIBUTE_KEY,
-                     intent.getStringExtra(prefix.concat(NotificationClient.CAMPAIGN_ACTIVITY_ID_ATTRIBUTE_KEY)));
+                .put(NotificationClientBase.CAMPAIGN_ACTIVITY_ID_ATTRIBUTE_KEY,
+                     intent.getStringExtra(prefix.concat(NotificationClientBase.CAMPAIGN_ACTIVITY_ID_ATTRIBUTE_KEY)));
             notificationClient.handleNotificationOpen(campaignAttributes,
                                                       intent.getExtras());
         } else {
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/AmazonPinpoint.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/AmazonPinpoint.java
index b18c0befb3..c95537a730 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/AmazonPinpoint.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/AmazonPinpoint.java
@@ -82,18 +82,41 @@
      */
     public void setRegion(Region region) throws java.lang.IllegalArgumentException;
 
+    /**
+     * Creates or updates an app.
+     * 
+     * @param createAppRequest
+     * @return createAppResult The response from the CreateApp service method,
+     *         as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    CreateAppResult createApp(CreateAppRequest createAppRequest) throws AmazonClientException,
+            AmazonServiceException;
+
     /**
      * Creates or updates a campaign.
      * 
      * @param createCampaignRequest
      * @return createCampaignResult The response from the CreateCampaign service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -111,12 +134,12 @@ CreateCampaignResult createCampaign(CreateCampaignRequest createCampaignRequest)
      * @param createImportJobRequest
      * @return createImportJobResult The response from the CreateImportJob
      *         service method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -134,12 +157,12 @@ CreateImportJobResult createImportJob(CreateImportJobRequest createImportJobRequ
      * @param createSegmentRequest
      * @return createSegmentResult The response from the CreateSegment service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -151,18 +174,41 @@ CreateImportJobResult createImportJob(CreateImportJobRequest createImportJobRequ
     CreateSegmentResult createSegment(CreateSegmentRequest createSegmentRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * Delete an ADM channel
+     * 
+     * @param deleteAdmChannelRequest
+     * @return deleteAdmChannelResult The response from the DeleteAdmChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    DeleteAdmChannelResult deleteAdmChannel(DeleteAdmChannelRequest deleteAdmChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * Deletes the APNs channel for an app.
      * 
      * @param deleteApnsChannelRequest
      * @return deleteApnsChannelResult The response from the DeleteApnsChannel
      *         service method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -174,18 +220,89 @@ CreateSegmentResult createSegment(CreateSegmentRequest createSegmentRequest)
     DeleteApnsChannelResult deleteApnsChannel(DeleteApnsChannelRequest deleteApnsChannelRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * Delete an APNS sandbox channel
+     * 
+     * @param deleteApnsSandboxChannelRequest
+     * @return deleteApnsSandboxChannelResult The response from the
+     *         DeleteApnsSandboxChannel service method, as returned by
+     *         AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    DeleteApnsSandboxChannelResult deleteApnsSandboxChannel(
+            DeleteApnsSandboxChannelRequest deleteApnsSandboxChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * Deletes an app.
+     * 
+     * @param deleteAppRequest
+     * @return deleteAppResult The response from the DeleteApp service method,
+     *         as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    DeleteAppResult deleteApp(DeleteAppRequest deleteAppRequest) throws AmazonClientException,
+            AmazonServiceException;
+
+    /**
+     * Delete a BAIDU GCM channel
+     * 
+     * @param deleteBaiduChannelRequest
+     * @return deleteBaiduChannelResult The response from the DeleteBaiduChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    DeleteBaiduChannelResult deleteBaiduChannel(DeleteBaiduChannelRequest deleteBaiduChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * Deletes a campaign.
      * 
      * @param deleteCampaignRequest
      * @return deleteCampaignResult The response from the DeleteCampaign service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -197,18 +314,64 @@ DeleteApnsChannelResult deleteApnsChannel(DeleteApnsChannelRequest deleteApnsCha
     DeleteCampaignResult deleteCampaign(DeleteCampaignRequest deleteCampaignRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * Delete an email channel
+     * 
+     * @param deleteEmailChannelRequest
+     * @return deleteEmailChannelResult The response from the DeleteEmailChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    DeleteEmailChannelResult deleteEmailChannel(DeleteEmailChannelRequest deleteEmailChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * Deletes the event stream for an app.
+     * 
+     * @param deleteEventStreamRequest
+     * @return deleteEventStreamResult The response from the DeleteEventStream
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    DeleteEventStreamResult deleteEventStream(DeleteEventStreamRequest deleteEventStreamRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * Deletes the GCM channel for an app.
      * 
      * @param deleteGcmChannelRequest
      * @return deleteGcmChannelResult The response from the DeleteGcmChannel
      *         service method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -226,12 +389,12 @@ DeleteGcmChannelResult deleteGcmChannel(DeleteGcmChannelRequest deleteGcmChannel
      * @param deleteSegmentRequest
      * @return deleteSegmentResult The response from the DeleteSegment service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -243,18 +406,84 @@ DeleteGcmChannelResult deleteGcmChannel(DeleteGcmChannelRequest deleteGcmChannel
     DeleteSegmentResult deleteSegment(DeleteSegmentRequest deleteSegmentRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * Delete an SMS channel
+     * 
+     * @param deleteSmsChannelRequest
+     * @return deleteSmsChannelResult The response from the DeleteSmsChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    DeleteSmsChannelResult deleteSmsChannel(DeleteSmsChannelRequest deleteSmsChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * Get an ADM channel
+     * 
+     * @param getAdmChannelRequest
+     * @return getAdmChannelResult The response from the GetAdmChannel service
+     *         method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetAdmChannelResult getAdmChannel(GetAdmChannelRequest getAdmChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * HAL links
+     * 
+     * @param getApiRootRequest
+     * @return getApiRootResult The response from the GetApiRoot service method,
+     *         as returned by AmazonPinpoint.
+     * @throws NotFoundException
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetApiRootResult getApiRoot(GetApiRootRequest getApiRootRequest) throws AmazonClientException,
+            AmazonServiceException;
+
     /**
      * Returns information about the APNs channel for an app.
      * 
      * @param getApnsChannelRequest
      * @return getApnsChannelResult The response from the GetApnsChannel service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -266,6 +495,54 @@ DeleteSegmentResult deleteSegment(DeleteSegmentRequest deleteSegmentRequest)
     GetApnsChannelResult getApnsChannel(GetApnsChannelRequest getApnsChannelRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * Get an APNS sandbox channel
+     * 
+     * @param getApnsSandboxChannelRequest
+     * @return getApnsSandboxChannelResult The response from the
+     *         GetApnsSandboxChannel service method, as returned by
+     *         AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetApnsSandboxChannelResult getApnsSandboxChannel(
+            GetApnsSandboxChannelRequest getApnsSandboxChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * Returns information about an app.
+     * 
+     * @param getAppRequest
+     * @return getAppResult The response from the GetApp service method, as
+     *         returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetAppResult getApp(GetAppRequest getAppRequest) throws AmazonClientException,
+            AmazonServiceException;
+
     /**
      * Used to request the settings for an app.
      * 
@@ -273,12 +550,12 @@ GetApnsChannelResult getApnsChannel(GetApnsChannelRequest getApnsChannelRequest)
      * @return getApplicationSettingsResult The response from the
      *         GetApplicationSettings service method, as returned by
      *         AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -291,18 +568,196 @@ GetApplicationSettingsResult getApplicationSettings(
             GetApplicationSettingsRequest getApplicationSettingsRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * Returns information about your apps.
+     * 
+     * @param getAppsRequest
+     * @return getAppsResult The response from the GetApps service method, as
+     *         returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetAppsResult getApps(GetAppsRequest getAppsRequest) throws AmazonClientException,
+            AmazonServiceException;
+
+    /**
+     * HAL links
+     * 
+     * @param getAppsApplicationIdChannelsRequest
+     * @return getAppsApplicationIdChannelsResult The response from the
+     *         GetAppsApplicationIdChannels service method, as returned by
+     *         AmazonPinpoint.
+     * @throws NotFoundException
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetAppsApplicationIdChannelsResult getAppsApplicationIdChannels(
+            GetAppsApplicationIdChannelsRequest getAppsApplicationIdChannelsRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * HAL links
+     * 
+     * @param getAppsApplicationIdEndpointsRequest
+     * @return getAppsApplicationIdEndpointsResult The response from the
+     *         GetAppsApplicationIdEndpoints service method, as returned by
+     *         AmazonPinpoint.
+     * @throws NotFoundException
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetAppsApplicationIdEndpointsResult getAppsApplicationIdEndpoints(
+            GetAppsApplicationIdEndpointsRequest getAppsApplicationIdEndpointsRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * HAL links
+     * 
+     * @param getAppsApplicationIdJobsRequest
+     * @return getAppsApplicationIdJobsResult The response from the
+     *         GetAppsApplicationIdJobs service method, as returned by
+     *         AmazonPinpoint.
+     * @throws NotFoundException
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetAppsApplicationIdJobsResult getAppsApplicationIdJobs(
+            GetAppsApplicationIdJobsRequest getAppsApplicationIdJobsRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * HAL links
+     * 
+     * @param getAppsApplicationIdMessagesRequest
+     * @return getAppsApplicationIdMessagesResult The response from the
+     *         GetAppsApplicationIdMessages service method, as returned by
+     *         AmazonPinpoint.
+     * @throws NotFoundException
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetAppsApplicationIdMessagesResult getAppsApplicationIdMessages(
+            GetAppsApplicationIdMessagesRequest getAppsApplicationIdMessagesRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * HAL links
+     * 
+     * @param getAppsApplicationIdSegmentsSegmentIdJobsRequest
+     * @return getAppsApplicationIdSegmentsSegmentIdJobsResult The response from
+     *         the GetAppsApplicationIdSegmentsSegmentIdJobs service method, as
+     *         returned by AmazonPinpoint.
+     * @throws NotFoundException
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetAppsApplicationIdSegmentsSegmentIdJobsResult getAppsApplicationIdSegmentsSegmentIdJobs(
+            GetAppsApplicationIdSegmentsSegmentIdJobsRequest getAppsApplicationIdSegmentsSegmentIdJobsRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * HAL links
+     * 
+     * @param getAppsApplicationIdUsersMessagesRequest
+     * @return getAppsApplicationIdUsersMessagesResult The response from the
+     *         GetAppsApplicationIdUsersMessages service method, as returned by
+     *         AmazonPinpoint.
+     * @throws NotFoundException
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetAppsApplicationIdUsersMessagesResult getAppsApplicationIdUsersMessages(
+            GetAppsApplicationIdUsersMessagesRequest getAppsApplicationIdUsersMessagesRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * Get a BAIDU GCM channel
+     * 
+     * @param getBaiduChannelRequest
+     * @return getBaiduChannelResult The response from the GetBaiduChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetBaiduChannelResult getBaiduChannel(GetBaiduChannelRequest getBaiduChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * Returns information about a campaign.
      * 
      * @param getCampaignRequest
      * @return getCampaignResult The response from the GetCampaign service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -321,12 +776,12 @@ GetCampaignResult getCampaign(GetCampaignRequest getCampaignRequest)
      * @return getCampaignActivitiesResult The response from the
      *         GetCampaignActivities service method, as returned by
      *         AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -340,17 +795,17 @@ GetCampaignActivitiesResult getCampaignActivities(
             throws AmazonClientException, AmazonServiceException;
 
     /**
-     * Returns information about your campaign versions.
+     * Returns information about a specific version of a campaign.
      * 
      * @param getCampaignVersionRequest
      * @return getCampaignVersionResult The response from the GetCampaignVersion
      *         service method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -369,12 +824,12 @@ GetCampaignVersionResult getCampaignVersion(GetCampaignVersionRequest getCampaig
      * @return getCampaignVersionsResult The response from the
      *         GetCampaignVersions service method, as returned by
      *         AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -393,12 +848,12 @@ GetCampaignVersionsResult getCampaignVersions(
      * @param getCampaignsRequest
      * @return getCampaignsResult The response from the GetCampaigns service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -410,18 +865,41 @@ GetCampaignVersionsResult getCampaignVersions(
     GetCampaignsResult getCampaigns(GetCampaignsRequest getCampaignsRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * Get an email channel
+     * 
+     * @param getEmailChannelRequest
+     * @return getEmailChannelResult The response from the GetEmailChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetEmailChannelResult getEmailChannel(GetEmailChannelRequest getEmailChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * Returns information about an endpoint.
      * 
      * @param getEndpointRequest
      * @return getEndpointResult The response from the GetEndpoint service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -433,18 +911,41 @@ GetCampaignsResult getCampaigns(GetCampaignsRequest getCampaignsRequest)
     GetEndpointResult getEndpoint(GetEndpointRequest getEndpointRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * Returns the event stream for an app.
+     * 
+     * @param getEventStreamRequest
+     * @return getEventStreamResult The response from the GetEventStream service
+     *         method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetEventStreamResult getEventStream(GetEventStreamRequest getEventStreamRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * Returns information about the GCM channel for an app.
      * 
      * @param getGcmChannelRequest
      * @return getGcmChannelResult The response from the GetGcmChannel service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -462,12 +963,12 @@ GetGcmChannelResult getGcmChannel(GetGcmChannelRequest getGcmChannelRequest)
      * @param getImportJobRequest
      * @return getImportJobResult The response from the GetImportJob service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -485,12 +986,12 @@ GetImportJobResult getImportJob(GetImportJobRequest getImportJobRequest)
      * @param getImportJobsRequest
      * @return getImportJobsResult The response from the GetImportJobs service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -508,12 +1009,12 @@ GetImportJobsResult getImportJobs(GetImportJobsRequest getImportJobsRequest)
      * @param getSegmentRequest
      * @return getSegmentResult The response from the GetSegment service method,
      *         as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -532,12 +1033,12 @@ GetSegmentResult getSegment(GetSegmentRequest getSegmentRequest) throws AmazonCl
      * @return getSegmentImportJobsResult The response from the
      *         GetSegmentImportJobs service method, as returned by
      *         AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -556,12 +1057,12 @@ GetSegmentImportJobsResult getSegmentImportJobs(
      * @param getSegmentVersionRequest
      * @return getSegmentVersionResult The response from the GetSegmentVersion
      *         service method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -579,12 +1080,12 @@ GetSegmentVersionResult getSegmentVersion(GetSegmentVersionRequest getSegmentVer
      * @param getSegmentVersionsRequest
      * @return getSegmentVersionsResult The response from the GetSegmentVersions
      *         service method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -602,12 +1103,12 @@ GetSegmentVersionsResult getSegmentVersions(GetSegmentVersionsRequest getSegment
      * @param getSegmentsRequest
      * @return getSegmentsResult The response from the GetSegments service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -619,18 +1120,133 @@ GetSegmentVersionsResult getSegmentVersions(GetSegmentVersionsRequest getSegment
     GetSegmentsResult getSegments(GetSegmentsRequest getSegmentsRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * Get an SMS channel
+     * 
+     * @param getSmsChannelRequest
+     * @return getSmsChannelResult The response from the GetSmsChannel service
+     *         method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetSmsChannelResult getSmsChannel(GetSmsChannelRequest getSmsChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * Use to create or update the event stream for an app.
+     * 
+     * @param putEventStreamRequest
+     * @return putEventStreamResult The response from the PutEventStream service
+     *         method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    PutEventStreamResult putEventStream(PutEventStreamRequest putEventStreamRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * Send a batch of messages
+     * 
+     * @param sendMessagesRequest
+     * @return sendMessagesResult The response from the SendMessages service
+     *         method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    SendMessagesResult sendMessages(SendMessagesRequest sendMessagesRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * Send a batch of messages to users
+     * 
+     * @param sendUsersMessagesRequest
+     * @return sendUsersMessagesResult The response from the SendUsersMessages
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    SendUsersMessagesResult sendUsersMessages(SendUsersMessagesRequest sendUsersMessagesRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * Update an ADM channel
+     * 
+     * @param updateAdmChannelRequest
+     * @return updateAdmChannelResult The response from the UpdateAdmChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    UpdateAdmChannelResult updateAdmChannel(UpdateAdmChannelRequest updateAdmChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * Use to update the APNs channel for an app.
      * 
      * @param updateApnsChannelRequest
      * @return updateApnsChannelResult The response from the UpdateApnsChannel
      *         service method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -642,6 +1258,31 @@ GetSegmentsResult getSegments(GetSegmentsRequest getSegmentsRequest)
     UpdateApnsChannelResult updateApnsChannel(UpdateApnsChannelRequest updateApnsChannelRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * Update an APNS sandbox channel
+     * 
+     * @param updateApnsSandboxChannelRequest
+     * @return updateApnsSandboxChannelResult The response from the
+     *         UpdateApnsSandboxChannel service method, as returned by
+     *         AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    UpdateApnsSandboxChannelResult updateApnsSandboxChannel(
+            UpdateApnsSandboxChannelRequest updateApnsSandboxChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * Used to update the settings for an app.
      * 
@@ -649,12 +1290,12 @@ UpdateApnsChannelResult updateApnsChannel(UpdateApnsChannelRequest updateApnsCha
      * @return updateApplicationSettingsResult The response from the
      *         UpdateApplicationSettings service method, as returned by
      *         AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -667,18 +1308,41 @@ UpdateApplicationSettingsResult updateApplicationSettings(
             UpdateApplicationSettingsRequest updateApplicationSettingsRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * Update a BAIDU GCM channel
+     * 
+     * @param updateBaiduChannelRequest
+     * @return updateBaiduChannelResult The response from the UpdateBaiduChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    UpdateBaiduChannelResult updateBaiduChannel(UpdateBaiduChannelRequest updateBaiduChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * Use to update a campaign.
      * 
      * @param updateCampaignRequest
      * @return updateCampaignResult The response from the UpdateCampaign service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -690,18 +1354,41 @@ UpdateApplicationSettingsResult updateApplicationSettings(
     UpdateCampaignResult updateCampaign(UpdateCampaignRequest updateCampaignRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * Update an email channel
+     * 
+     * @param updateEmailChannelRequest
+     * @return updateEmailChannelResult The response from the UpdateEmailChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    UpdateEmailChannelResult updateEmailChannel(UpdateEmailChannelRequest updateEmailChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * Use to update an endpoint.
      * 
      * @param updateEndpointRequest
      * @return updateEndpointResult The response from the UpdateEndpoint service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -714,18 +1401,18 @@ UpdateEndpointResult updateEndpoint(UpdateEndpointRequest updateEndpointRequest)
             throws AmazonClientException, AmazonServiceException;
 
     /**
-     * Use to update your endpoints.
+     * Use to update a batch of endpoints.
      * 
      * @param updateEndpointsBatchRequest
      * @return updateEndpointsBatchResult The response from the
      *         UpdateEndpointsBatch service method, as returned by
      *         AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -744,12 +1431,12 @@ UpdateEndpointsBatchResult updateEndpointsBatch(
      * @param updateGcmChannelRequest
      * @return updateGcmChannelResult The response from the UpdateGcmChannel
      *         service method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -767,12 +1454,12 @@ UpdateGcmChannelResult updateGcmChannel(UpdateGcmChannelRequest updateGcmChannel
      * @param updateSegmentRequest
      * @return updateSegmentResult The response from the UpdateSegment service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -784,6 +1471,29 @@ UpdateGcmChannelResult updateGcmChannel(UpdateGcmChannelRequest updateGcmChannel
     UpdateSegmentResult updateSegment(UpdateSegmentRequest updateSegmentRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * Update an SMS channel
+     * 
+     * @param updateSmsChannelRequest
+     * @return updateSmsChannelResult The response from the UpdateSmsChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    UpdateSmsChannelResult updateSmsChannel(UpdateSmsChannelRequest updateSmsChannelRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * Shuts down this client object, releasing any resources that might be held
      * open. This is an optional method, and callers are not expected to call
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/AmazonPinpointClient.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/AmazonPinpointClient.java
index 110a253168..47a7f79a32 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/AmazonPinpointClient.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/AmazonPinpointClient.java
@@ -279,18 +279,66 @@ private static ClientConfiguration adjustClientConfiguration(ClientConfiguration
         return config;
     }
 
+    /**
+     * Creates or updates an app.
+     * 
+     * @param createAppRequest
+     * @return createAppResult The response from the CreateApp service method,
+     *         as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public CreateAppResult createApp(CreateAppRequest createAppRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(createAppRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<CreateAppRequest> request = null;
+        Response<CreateAppResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new CreateAppRequestMarshaller().marshall(createAppRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<CreateAppResult, JsonUnmarshallerContext> unmarshaller = new CreateAppResultJsonUnmarshaller();
+            JsonResponseHandler<CreateAppResult> responseHandler = new JsonResponseHandler<CreateAppResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * Creates or updates a campaign.
      * 
      * @param createCampaignRequest
      * @return createCampaignResult The response from the CreateCampaign service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -333,12 +381,12 @@ public CreateCampaignResult createCampaign(CreateCampaignRequest createCampaignR
      * @param createImportJobRequest
      * @return createImportJobResult The response from the CreateImportJob
      *         service method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -381,12 +429,12 @@ public CreateImportJobResult createImportJob(CreateImportJobRequest createImport
      * @param createSegmentRequest
      * @return createSegmentResult The response from the CreateSegment service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -423,18 +471,66 @@ public CreateSegmentResult createSegment(CreateSegmentRequest createSegmentReque
         }
     }
 
+    /**
+     * Delete an ADM channel
+     * 
+     * @param deleteAdmChannelRequest
+     * @return deleteAdmChannelResult The response from the DeleteAdmChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public DeleteAdmChannelResult deleteAdmChannel(DeleteAdmChannelRequest deleteAdmChannelRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(deleteAdmChannelRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<DeleteAdmChannelRequest> request = null;
+        Response<DeleteAdmChannelResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new DeleteAdmChannelRequestMarshaller().marshall(deleteAdmChannelRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<DeleteAdmChannelResult, JsonUnmarshallerContext> unmarshaller = new DeleteAdmChannelResultJsonUnmarshaller();
+            JsonResponseHandler<DeleteAdmChannelResult> responseHandler = new JsonResponseHandler<DeleteAdmChannelResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * Deletes the APNs channel for an app.
      * 
      * @param deleteApnsChannelRequest
      * @return deleteApnsChannelResult The response from the DeleteApnsChannel
      *         service method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -474,17 +570,18 @@ public DeleteApnsChannelResult deleteApnsChannel(
     }
 
     /**
-     * Deletes a campaign.
+     * Delete an APNS sandbox channel
      * 
-     * @param deleteCampaignRequest
-     * @return deleteCampaignResult The response from the DeleteCampaign service
-     *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @param deleteApnsSandboxChannelRequest
+     * @return deleteApnsSandboxChannelResult The response from the
+     *         DeleteApnsSandboxChannel service method, as returned by
+     *         AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -493,24 +590,26 @@ public DeleteApnsChannelResult deleteApnsChannel(
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public DeleteCampaignResult deleteCampaign(DeleteCampaignRequest deleteCampaignRequest)
+    public DeleteApnsSandboxChannelResult deleteApnsSandboxChannel(
+            DeleteApnsSandboxChannelRequest deleteApnsSandboxChannelRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(deleteCampaignRequest);
+        ExecutionContext executionContext = createExecutionContext(deleteApnsSandboxChannelRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<DeleteCampaignRequest> request = null;
-        Response<DeleteCampaignResult> response = null;
+        Request<DeleteApnsSandboxChannelRequest> request = null;
+        Response<DeleteApnsSandboxChannelResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new DeleteCampaignRequestMarshaller().marshall(deleteCampaignRequest);
+                request = new DeleteApnsSandboxChannelRequestMarshaller()
+                        .marshall(deleteApnsSandboxChannelRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<DeleteCampaignResult, JsonUnmarshallerContext> unmarshaller = new DeleteCampaignResultJsonUnmarshaller();
-            JsonResponseHandler<DeleteCampaignResult> responseHandler = new JsonResponseHandler<DeleteCampaignResult>(
+            Unmarshaller<DeleteApnsSandboxChannelResult, JsonUnmarshallerContext> unmarshaller = new DeleteApnsSandboxChannelResultJsonUnmarshaller();
+            JsonResponseHandler<DeleteApnsSandboxChannelResult> responseHandler = new JsonResponseHandler<DeleteApnsSandboxChannelResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -522,17 +621,65 @@ public DeleteCampaignResult deleteCampaign(DeleteCampaignRequest deleteCampaignR
     }
 
     /**
-     * Deletes the GCM channel for an app.
+     * Deletes an app.
      * 
-     * @param deleteGcmChannelRequest
-     * @return deleteGcmChannelResult The response from the DeleteGcmChannel
+     * @param deleteAppRequest
+     * @return deleteAppResult The response from the DeleteApp service method,
+     *         as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public DeleteAppResult deleteApp(DeleteAppRequest deleteAppRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(deleteAppRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<DeleteAppRequest> request = null;
+        Response<DeleteAppResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new DeleteAppRequestMarshaller().marshall(deleteAppRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<DeleteAppResult, JsonUnmarshallerContext> unmarshaller = new DeleteAppResultJsonUnmarshaller();
+            JsonResponseHandler<DeleteAppResult> responseHandler = new JsonResponseHandler<DeleteAppResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Delete a BAIDU GCM channel
+     * 
+     * @param deleteBaiduChannelRequest
+     * @return deleteBaiduChannelResult The response from the DeleteBaiduChannel
      *         service method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -541,24 +688,26 @@ public DeleteCampaignResult deleteCampaign(DeleteCampaignRequest deleteCampaignR
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public DeleteGcmChannelResult deleteGcmChannel(DeleteGcmChannelRequest deleteGcmChannelRequest)
+    public DeleteBaiduChannelResult deleteBaiduChannel(
+            DeleteBaiduChannelRequest deleteBaiduChannelRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(deleteGcmChannelRequest);
+        ExecutionContext executionContext = createExecutionContext(deleteBaiduChannelRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<DeleteGcmChannelRequest> request = null;
-        Response<DeleteGcmChannelResult> response = null;
+        Request<DeleteBaiduChannelRequest> request = null;
+        Response<DeleteBaiduChannelResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new DeleteGcmChannelRequestMarshaller().marshall(deleteGcmChannelRequest);
+                request = new DeleteBaiduChannelRequestMarshaller()
+                        .marshall(deleteBaiduChannelRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<DeleteGcmChannelResult, JsonUnmarshallerContext> unmarshaller = new DeleteGcmChannelResultJsonUnmarshaller();
-            JsonResponseHandler<DeleteGcmChannelResult> responseHandler = new JsonResponseHandler<DeleteGcmChannelResult>(
+            Unmarshaller<DeleteBaiduChannelResult, JsonUnmarshallerContext> unmarshaller = new DeleteBaiduChannelResultJsonUnmarshaller();
+            JsonResponseHandler<DeleteBaiduChannelResult> responseHandler = new JsonResponseHandler<DeleteBaiduChannelResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -570,17 +719,17 @@ public DeleteGcmChannelResult deleteGcmChannel(DeleteGcmChannelRequest deleteGcm
     }
 
     /**
-     * Deletes a segment.
+     * Deletes a campaign.
      * 
-     * @param deleteSegmentRequest
-     * @return deleteSegmentResult The response from the DeleteSegment service
+     * @param deleteCampaignRequest
+     * @return deleteCampaignResult The response from the DeleteCampaign service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -589,24 +738,24 @@ public DeleteGcmChannelResult deleteGcmChannel(DeleteGcmChannelRequest deleteGcm
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public DeleteSegmentResult deleteSegment(DeleteSegmentRequest deleteSegmentRequest)
+    public DeleteCampaignResult deleteCampaign(DeleteCampaignRequest deleteCampaignRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(deleteSegmentRequest);
+        ExecutionContext executionContext = createExecutionContext(deleteCampaignRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<DeleteSegmentRequest> request = null;
-        Response<DeleteSegmentResult> response = null;
+        Request<DeleteCampaignRequest> request = null;
+        Response<DeleteCampaignResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new DeleteSegmentRequestMarshaller().marshall(deleteSegmentRequest);
+                request = new DeleteCampaignRequestMarshaller().marshall(deleteCampaignRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<DeleteSegmentResult, JsonUnmarshallerContext> unmarshaller = new DeleteSegmentResultJsonUnmarshaller();
-            JsonResponseHandler<DeleteSegmentResult> responseHandler = new JsonResponseHandler<DeleteSegmentResult>(
+            Unmarshaller<DeleteCampaignResult, JsonUnmarshallerContext> unmarshaller = new DeleteCampaignResultJsonUnmarshaller();
+            JsonResponseHandler<DeleteCampaignResult> responseHandler = new JsonResponseHandler<DeleteCampaignResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -618,17 +767,17 @@ public DeleteSegmentResult deleteSegment(DeleteSegmentRequest deleteSegmentReque
     }
 
     /**
-     * Returns information about the APNs channel for an app.
+     * Delete an email channel
      * 
-     * @param getApnsChannelRequest
-     * @return getApnsChannelResult The response from the GetApnsChannel service
-     *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @param deleteEmailChannelRequest
+     * @return deleteEmailChannelResult The response from the DeleteEmailChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -637,24 +786,26 @@ public DeleteSegmentResult deleteSegment(DeleteSegmentRequest deleteSegmentReque
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public GetApnsChannelResult getApnsChannel(GetApnsChannelRequest getApnsChannelRequest)
+    public DeleteEmailChannelResult deleteEmailChannel(
+            DeleteEmailChannelRequest deleteEmailChannelRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(getApnsChannelRequest);
+        ExecutionContext executionContext = createExecutionContext(deleteEmailChannelRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<GetApnsChannelRequest> request = null;
-        Response<GetApnsChannelResult> response = null;
+        Request<DeleteEmailChannelRequest> request = null;
+        Response<DeleteEmailChannelResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new GetApnsChannelRequestMarshaller().marshall(getApnsChannelRequest);
+                request = new DeleteEmailChannelRequestMarshaller()
+                        .marshall(deleteEmailChannelRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<GetApnsChannelResult, JsonUnmarshallerContext> unmarshaller = new GetApnsChannelResultJsonUnmarshaller();
-            JsonResponseHandler<GetApnsChannelResult> responseHandler = new JsonResponseHandler<GetApnsChannelResult>(
+            Unmarshaller<DeleteEmailChannelResult, JsonUnmarshallerContext> unmarshaller = new DeleteEmailChannelResultJsonUnmarshaller();
+            JsonResponseHandler<DeleteEmailChannelResult> responseHandler = new JsonResponseHandler<DeleteEmailChannelResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -666,18 +817,17 @@ public GetApnsChannelResult getApnsChannel(GetApnsChannelRequest getApnsChannelR
     }
 
     /**
-     * Used to request the settings for an app.
+     * Deletes the event stream for an app.
      * 
-     * @param getApplicationSettingsRequest
-     * @return getApplicationSettingsResult The response from the
-     *         GetApplicationSettings service method, as returned by
-     *         AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @param deleteEventStreamRequest
+     * @return deleteEventStreamResult The response from the DeleteEventStream
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -686,26 +836,26 @@ public GetApnsChannelResult getApnsChannel(GetApnsChannelRequest getApnsChannelR
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public GetApplicationSettingsResult getApplicationSettings(
-            GetApplicationSettingsRequest getApplicationSettingsRequest)
+    public DeleteEventStreamResult deleteEventStream(
+            DeleteEventStreamRequest deleteEventStreamRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(getApplicationSettingsRequest);
+        ExecutionContext executionContext = createExecutionContext(deleteEventStreamRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<GetApplicationSettingsRequest> request = null;
-        Response<GetApplicationSettingsResult> response = null;
+        Request<DeleteEventStreamRequest> request = null;
+        Response<DeleteEventStreamResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new GetApplicationSettingsRequestMarshaller()
-                        .marshall(getApplicationSettingsRequest);
+                request = new DeleteEventStreamRequestMarshaller()
+                        .marshall(deleteEventStreamRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<GetApplicationSettingsResult, JsonUnmarshallerContext> unmarshaller = new GetApplicationSettingsResultJsonUnmarshaller();
-            JsonResponseHandler<GetApplicationSettingsResult> responseHandler = new JsonResponseHandler<GetApplicationSettingsResult>(
+            Unmarshaller<DeleteEventStreamResult, JsonUnmarshallerContext> unmarshaller = new DeleteEventStreamResultJsonUnmarshaller();
+            JsonResponseHandler<DeleteEventStreamResult> responseHandler = new JsonResponseHandler<DeleteEventStreamResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -717,17 +867,17 @@ public GetApplicationSettingsResult getApplicationSettings(
     }
 
     /**
-     * Returns information about a campaign.
+     * Deletes the GCM channel for an app.
      * 
-     * @param getCampaignRequest
-     * @return getCampaignResult The response from the GetCampaign service
-     *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @param deleteGcmChannelRequest
+     * @return deleteGcmChannelResult The response from the DeleteGcmChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -736,24 +886,24 @@ public GetApplicationSettingsResult getApplicationSettings(
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public GetCampaignResult getCampaign(GetCampaignRequest getCampaignRequest)
+    public DeleteGcmChannelResult deleteGcmChannel(DeleteGcmChannelRequest deleteGcmChannelRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(getCampaignRequest);
+        ExecutionContext executionContext = createExecutionContext(deleteGcmChannelRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<GetCampaignRequest> request = null;
-        Response<GetCampaignResult> response = null;
+        Request<DeleteGcmChannelRequest> request = null;
+        Response<DeleteGcmChannelResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new GetCampaignRequestMarshaller().marshall(getCampaignRequest);
+                request = new DeleteGcmChannelRequestMarshaller().marshall(deleteGcmChannelRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<GetCampaignResult, JsonUnmarshallerContext> unmarshaller = new GetCampaignResultJsonUnmarshaller();
-            JsonResponseHandler<GetCampaignResult> responseHandler = new JsonResponseHandler<GetCampaignResult>(
+            Unmarshaller<DeleteGcmChannelResult, JsonUnmarshallerContext> unmarshaller = new DeleteGcmChannelResultJsonUnmarshaller();
+            JsonResponseHandler<DeleteGcmChannelResult> responseHandler = new JsonResponseHandler<DeleteGcmChannelResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -765,18 +915,17 @@ public GetCampaignResult getCampaign(GetCampaignRequest getCampaignRequest)
     }
 
     /**
-     * Returns information about the activity performed by a campaign.
+     * Deletes a segment.
      * 
-     * @param getCampaignActivitiesRequest
-     * @return getCampaignActivitiesResult The response from the
-     *         GetCampaignActivities service method, as returned by
-     *         AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @param deleteSegmentRequest
+     * @return deleteSegmentResult The response from the DeleteSegment service
+     *         method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -785,26 +934,24 @@ public GetCampaignResult getCampaign(GetCampaignRequest getCampaignRequest)
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public GetCampaignActivitiesResult getCampaignActivities(
-            GetCampaignActivitiesRequest getCampaignActivitiesRequest)
+    public DeleteSegmentResult deleteSegment(DeleteSegmentRequest deleteSegmentRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(getCampaignActivitiesRequest);
+        ExecutionContext executionContext = createExecutionContext(deleteSegmentRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<GetCampaignActivitiesRequest> request = null;
-        Response<GetCampaignActivitiesResult> response = null;
+        Request<DeleteSegmentRequest> request = null;
+        Response<DeleteSegmentResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new GetCampaignActivitiesRequestMarshaller()
-                        .marshall(getCampaignActivitiesRequest);
+                request = new DeleteSegmentRequestMarshaller().marshall(deleteSegmentRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<GetCampaignActivitiesResult, JsonUnmarshallerContext> unmarshaller = new GetCampaignActivitiesResultJsonUnmarshaller();
-            JsonResponseHandler<GetCampaignActivitiesResult> responseHandler = new JsonResponseHandler<GetCampaignActivitiesResult>(
+            Unmarshaller<DeleteSegmentResult, JsonUnmarshallerContext> unmarshaller = new DeleteSegmentResultJsonUnmarshaller();
+            JsonResponseHandler<DeleteSegmentResult> responseHandler = new JsonResponseHandler<DeleteSegmentResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -816,17 +963,17 @@ public GetCampaignActivitiesResult getCampaignActivities(
     }
 
     /**
-     * Returns information about your campaign versions.
+     * Delete an SMS channel
      * 
-     * @param getCampaignVersionRequest
-     * @return getCampaignVersionResult The response from the GetCampaignVersion
+     * @param deleteSmsChannelRequest
+     * @return deleteSmsChannelResult The response from the DeleteSmsChannel
      *         service method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -835,26 +982,24 @@ public GetCampaignActivitiesResult getCampaignActivities(
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public GetCampaignVersionResult getCampaignVersion(
-            GetCampaignVersionRequest getCampaignVersionRequest)
+    public DeleteSmsChannelResult deleteSmsChannel(DeleteSmsChannelRequest deleteSmsChannelRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(getCampaignVersionRequest);
+        ExecutionContext executionContext = createExecutionContext(deleteSmsChannelRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<GetCampaignVersionRequest> request = null;
-        Response<GetCampaignVersionResult> response = null;
+        Request<DeleteSmsChannelRequest> request = null;
+        Response<DeleteSmsChannelResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new GetCampaignVersionRequestMarshaller()
-                        .marshall(getCampaignVersionRequest);
+                request = new DeleteSmsChannelRequestMarshaller().marshall(deleteSmsChannelRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<GetCampaignVersionResult, JsonUnmarshallerContext> unmarshaller = new GetCampaignVersionResultJsonUnmarshaller();
-            JsonResponseHandler<GetCampaignVersionResult> responseHandler = new JsonResponseHandler<GetCampaignVersionResult>(
+            Unmarshaller<DeleteSmsChannelResult, JsonUnmarshallerContext> unmarshaller = new DeleteSmsChannelResultJsonUnmarshaller();
+            JsonResponseHandler<DeleteSmsChannelResult> responseHandler = new JsonResponseHandler<DeleteSmsChannelResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -866,18 +1011,17 @@ public GetCampaignVersionResult getCampaignVersion(
     }
 
     /**
-     * Returns information about your campaign versions.
+     * Get an ADM channel
      * 
-     * @param getCampaignVersionsRequest
-     * @return getCampaignVersionsResult The response from the
-     *         GetCampaignVersions service method, as returned by
-     *         AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @param getAdmChannelRequest
+     * @return getAdmChannelResult The response from the GetAdmChannel service
+     *         method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -886,26 +1030,1336 @@ public GetCampaignVersionResult getCampaignVersion(
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public GetCampaignVersionsResult getCampaignVersions(
-            GetCampaignVersionsRequest getCampaignVersionsRequest)
+    public GetAdmChannelResult getAdmChannel(GetAdmChannelRequest getAdmChannelRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(getCampaignVersionsRequest);
+        ExecutionContext executionContext = createExecutionContext(getAdmChannelRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<GetCampaignVersionsRequest> request = null;
-        Response<GetCampaignVersionsResult> response = null;
+        Request<GetAdmChannelRequest> request = null;
+        Response<GetAdmChannelResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetAdmChannelRequestMarshaller().marshall(getAdmChannelRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetAdmChannelResult, JsonUnmarshallerContext> unmarshaller = new GetAdmChannelResultJsonUnmarshaller();
+            JsonResponseHandler<GetAdmChannelResult> responseHandler = new JsonResponseHandler<GetAdmChannelResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * HAL links
+     * 
+     * @param getApiRootRequest
+     * @return getApiRootResult The response from the GetApiRoot service method,
+     *         as returned by AmazonPinpoint.
+     * @throws NotFoundException
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetApiRootResult getApiRoot(GetApiRootRequest getApiRootRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getApiRootRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetApiRootRequest> request = null;
+        Response<GetApiRootResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetApiRootRequestMarshaller().marshall(getApiRootRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetApiRootResult, JsonUnmarshallerContext> unmarshaller = new GetApiRootResultJsonUnmarshaller();
+            JsonResponseHandler<GetApiRootResult> responseHandler = new JsonResponseHandler<GetApiRootResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Returns information about the APNs channel for an app.
+     * 
+     * @param getApnsChannelRequest
+     * @return getApnsChannelResult The response from the GetApnsChannel service
+     *         method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetApnsChannelResult getApnsChannel(GetApnsChannelRequest getApnsChannelRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getApnsChannelRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetApnsChannelRequest> request = null;
+        Response<GetApnsChannelResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetApnsChannelRequestMarshaller().marshall(getApnsChannelRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetApnsChannelResult, JsonUnmarshallerContext> unmarshaller = new GetApnsChannelResultJsonUnmarshaller();
+            JsonResponseHandler<GetApnsChannelResult> responseHandler = new JsonResponseHandler<GetApnsChannelResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Get an APNS sandbox channel
+     * 
+     * @param getApnsSandboxChannelRequest
+     * @return getApnsSandboxChannelResult The response from the
+     *         GetApnsSandboxChannel service method, as returned by
+     *         AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetApnsSandboxChannelResult getApnsSandboxChannel(
+            GetApnsSandboxChannelRequest getApnsSandboxChannelRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getApnsSandboxChannelRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetApnsSandboxChannelRequest> request = null;
+        Response<GetApnsSandboxChannelResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetApnsSandboxChannelRequestMarshaller()
+                        .marshall(getApnsSandboxChannelRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetApnsSandboxChannelResult, JsonUnmarshallerContext> unmarshaller = new GetApnsSandboxChannelResultJsonUnmarshaller();
+            JsonResponseHandler<GetApnsSandboxChannelResult> responseHandler = new JsonResponseHandler<GetApnsSandboxChannelResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Returns information about an app.
+     * 
+     * @param getAppRequest
+     * @return getAppResult The response from the GetApp service method, as
+     *         returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetAppResult getApp(GetAppRequest getAppRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getAppRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetAppRequest> request = null;
+        Response<GetAppResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetAppRequestMarshaller().marshall(getAppRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetAppResult, JsonUnmarshallerContext> unmarshaller = new GetAppResultJsonUnmarshaller();
+            JsonResponseHandler<GetAppResult> responseHandler = new JsonResponseHandler<GetAppResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Used to request the settings for an app.
+     * 
+     * @param getApplicationSettingsRequest
+     * @return getApplicationSettingsResult The response from the
+     *         GetApplicationSettings service method, as returned by
+     *         AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetApplicationSettingsResult getApplicationSettings(
+            GetApplicationSettingsRequest getApplicationSettingsRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getApplicationSettingsRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetApplicationSettingsRequest> request = null;
+        Response<GetApplicationSettingsResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetApplicationSettingsRequestMarshaller()
+                        .marshall(getApplicationSettingsRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetApplicationSettingsResult, JsonUnmarshallerContext> unmarshaller = new GetApplicationSettingsResultJsonUnmarshaller();
+            JsonResponseHandler<GetApplicationSettingsResult> responseHandler = new JsonResponseHandler<GetApplicationSettingsResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Returns information about your apps.
+     * 
+     * @param getAppsRequest
+     * @return getAppsResult The response from the GetApps service method, as
+     *         returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetAppsResult getApps(GetAppsRequest getAppsRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getAppsRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetAppsRequest> request = null;
+        Response<GetAppsResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetAppsRequestMarshaller().marshall(getAppsRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetAppsResult, JsonUnmarshallerContext> unmarshaller = new GetAppsResultJsonUnmarshaller();
+            JsonResponseHandler<GetAppsResult> responseHandler = new JsonResponseHandler<GetAppsResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * HAL links
+     * 
+     * @param getAppsApplicationIdChannelsRequest
+     * @return getAppsApplicationIdChannelsResult The response from the
+     *         GetAppsApplicationIdChannels service method, as returned by
+     *         AmazonPinpoint.
+     * @throws NotFoundException
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetAppsApplicationIdChannelsResult getAppsApplicationIdChannels(
+            GetAppsApplicationIdChannelsRequest getAppsApplicationIdChannelsRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getAppsApplicationIdChannelsRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetAppsApplicationIdChannelsRequest> request = null;
+        Response<GetAppsApplicationIdChannelsResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetAppsApplicationIdChannelsRequestMarshaller()
+                        .marshall(getAppsApplicationIdChannelsRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetAppsApplicationIdChannelsResult, JsonUnmarshallerContext> unmarshaller = new GetAppsApplicationIdChannelsResultJsonUnmarshaller();
+            JsonResponseHandler<GetAppsApplicationIdChannelsResult> responseHandler = new JsonResponseHandler<GetAppsApplicationIdChannelsResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * HAL links
+     * 
+     * @param getAppsApplicationIdEndpointsRequest
+     * @return getAppsApplicationIdEndpointsResult The response from the
+     *         GetAppsApplicationIdEndpoints service method, as returned by
+     *         AmazonPinpoint.
+     * @throws NotFoundException
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetAppsApplicationIdEndpointsResult getAppsApplicationIdEndpoints(
+            GetAppsApplicationIdEndpointsRequest getAppsApplicationIdEndpointsRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getAppsApplicationIdEndpointsRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetAppsApplicationIdEndpointsRequest> request = null;
+        Response<GetAppsApplicationIdEndpointsResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetAppsApplicationIdEndpointsRequestMarshaller()
+                        .marshall(getAppsApplicationIdEndpointsRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetAppsApplicationIdEndpointsResult, JsonUnmarshallerContext> unmarshaller = new GetAppsApplicationIdEndpointsResultJsonUnmarshaller();
+            JsonResponseHandler<GetAppsApplicationIdEndpointsResult> responseHandler = new JsonResponseHandler<GetAppsApplicationIdEndpointsResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * HAL links
+     * 
+     * @param getAppsApplicationIdJobsRequest
+     * @return getAppsApplicationIdJobsResult The response from the
+     *         GetAppsApplicationIdJobs service method, as returned by
+     *         AmazonPinpoint.
+     * @throws NotFoundException
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetAppsApplicationIdJobsResult getAppsApplicationIdJobs(
+            GetAppsApplicationIdJobsRequest getAppsApplicationIdJobsRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getAppsApplicationIdJobsRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetAppsApplicationIdJobsRequest> request = null;
+        Response<GetAppsApplicationIdJobsResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetAppsApplicationIdJobsRequestMarshaller()
+                        .marshall(getAppsApplicationIdJobsRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetAppsApplicationIdJobsResult, JsonUnmarshallerContext> unmarshaller = new GetAppsApplicationIdJobsResultJsonUnmarshaller();
+            JsonResponseHandler<GetAppsApplicationIdJobsResult> responseHandler = new JsonResponseHandler<GetAppsApplicationIdJobsResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * HAL links
+     * 
+     * @param getAppsApplicationIdMessagesRequest
+     * @return getAppsApplicationIdMessagesResult The response from the
+     *         GetAppsApplicationIdMessages service method, as returned by
+     *         AmazonPinpoint.
+     * @throws NotFoundException
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetAppsApplicationIdMessagesResult getAppsApplicationIdMessages(
+            GetAppsApplicationIdMessagesRequest getAppsApplicationIdMessagesRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getAppsApplicationIdMessagesRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetAppsApplicationIdMessagesRequest> request = null;
+        Response<GetAppsApplicationIdMessagesResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetAppsApplicationIdMessagesRequestMarshaller()
+                        .marshall(getAppsApplicationIdMessagesRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetAppsApplicationIdMessagesResult, JsonUnmarshallerContext> unmarshaller = new GetAppsApplicationIdMessagesResultJsonUnmarshaller();
+            JsonResponseHandler<GetAppsApplicationIdMessagesResult> responseHandler = new JsonResponseHandler<GetAppsApplicationIdMessagesResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * HAL links
+     * 
+     * @param getAppsApplicationIdSegmentsSegmentIdJobsRequest
+     * @return getAppsApplicationIdSegmentsSegmentIdJobsResult The response from
+     *         the GetAppsApplicationIdSegmentsSegmentIdJobs service method, as
+     *         returned by AmazonPinpoint.
+     * @throws NotFoundException
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetAppsApplicationIdSegmentsSegmentIdJobsResult getAppsApplicationIdSegmentsSegmentIdJobs(
+            GetAppsApplicationIdSegmentsSegmentIdJobsRequest getAppsApplicationIdSegmentsSegmentIdJobsRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getAppsApplicationIdSegmentsSegmentIdJobsRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetAppsApplicationIdSegmentsSegmentIdJobsRequest> request = null;
+        Response<GetAppsApplicationIdSegmentsSegmentIdJobsResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetAppsApplicationIdSegmentsSegmentIdJobsRequestMarshaller()
+                        .marshall(getAppsApplicationIdSegmentsSegmentIdJobsRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetAppsApplicationIdSegmentsSegmentIdJobsResult, JsonUnmarshallerContext> unmarshaller = new GetAppsApplicationIdSegmentsSegmentIdJobsResultJsonUnmarshaller();
+            JsonResponseHandler<GetAppsApplicationIdSegmentsSegmentIdJobsResult> responseHandler = new JsonResponseHandler<GetAppsApplicationIdSegmentsSegmentIdJobsResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * HAL links
+     * 
+     * @param getAppsApplicationIdUsersMessagesRequest
+     * @return getAppsApplicationIdUsersMessagesResult The response from the
+     *         GetAppsApplicationIdUsersMessages service method, as returned by
+     *         AmazonPinpoint.
+     * @throws NotFoundException
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetAppsApplicationIdUsersMessagesResult getAppsApplicationIdUsersMessages(
+            GetAppsApplicationIdUsersMessagesRequest getAppsApplicationIdUsersMessagesRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getAppsApplicationIdUsersMessagesRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetAppsApplicationIdUsersMessagesRequest> request = null;
+        Response<GetAppsApplicationIdUsersMessagesResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetAppsApplicationIdUsersMessagesRequestMarshaller()
+                        .marshall(getAppsApplicationIdUsersMessagesRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetAppsApplicationIdUsersMessagesResult, JsonUnmarshallerContext> unmarshaller = new GetAppsApplicationIdUsersMessagesResultJsonUnmarshaller();
+            JsonResponseHandler<GetAppsApplicationIdUsersMessagesResult> responseHandler = new JsonResponseHandler<GetAppsApplicationIdUsersMessagesResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Get a BAIDU GCM channel
+     * 
+     * @param getBaiduChannelRequest
+     * @return getBaiduChannelResult The response from the GetBaiduChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetBaiduChannelResult getBaiduChannel(GetBaiduChannelRequest getBaiduChannelRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getBaiduChannelRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetBaiduChannelRequest> request = null;
+        Response<GetBaiduChannelResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetBaiduChannelRequestMarshaller().marshall(getBaiduChannelRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetBaiduChannelResult, JsonUnmarshallerContext> unmarshaller = new GetBaiduChannelResultJsonUnmarshaller();
+            JsonResponseHandler<GetBaiduChannelResult> responseHandler = new JsonResponseHandler<GetBaiduChannelResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Returns information about a campaign.
+     * 
+     * @param getCampaignRequest
+     * @return getCampaignResult The response from the GetCampaign service
+     *         method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetCampaignResult getCampaign(GetCampaignRequest getCampaignRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getCampaignRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetCampaignRequest> request = null;
+        Response<GetCampaignResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetCampaignRequestMarshaller().marshall(getCampaignRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetCampaignResult, JsonUnmarshallerContext> unmarshaller = new GetCampaignResultJsonUnmarshaller();
+            JsonResponseHandler<GetCampaignResult> responseHandler = new JsonResponseHandler<GetCampaignResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Returns information about the activity performed by a campaign.
+     * 
+     * @param getCampaignActivitiesRequest
+     * @return getCampaignActivitiesResult The response from the
+     *         GetCampaignActivities service method, as returned by
+     *         AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetCampaignActivitiesResult getCampaignActivities(
+            GetCampaignActivitiesRequest getCampaignActivitiesRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getCampaignActivitiesRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetCampaignActivitiesRequest> request = null;
+        Response<GetCampaignActivitiesResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetCampaignActivitiesRequestMarshaller()
+                        .marshall(getCampaignActivitiesRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetCampaignActivitiesResult, JsonUnmarshallerContext> unmarshaller = new GetCampaignActivitiesResultJsonUnmarshaller();
+            JsonResponseHandler<GetCampaignActivitiesResult> responseHandler = new JsonResponseHandler<GetCampaignActivitiesResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Returns information about a specific version of a campaign.
+     * 
+     * @param getCampaignVersionRequest
+     * @return getCampaignVersionResult The response from the GetCampaignVersion
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetCampaignVersionResult getCampaignVersion(
+            GetCampaignVersionRequest getCampaignVersionRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getCampaignVersionRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetCampaignVersionRequest> request = null;
+        Response<GetCampaignVersionResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetCampaignVersionRequestMarshaller()
+                        .marshall(getCampaignVersionRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetCampaignVersionResult, JsonUnmarshallerContext> unmarshaller = new GetCampaignVersionResultJsonUnmarshaller();
+            JsonResponseHandler<GetCampaignVersionResult> responseHandler = new JsonResponseHandler<GetCampaignVersionResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Returns information about your campaign versions.
+     * 
+     * @param getCampaignVersionsRequest
+     * @return getCampaignVersionsResult The response from the
+     *         GetCampaignVersions service method, as returned by
+     *         AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetCampaignVersionsResult getCampaignVersions(
+            GetCampaignVersionsRequest getCampaignVersionsRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getCampaignVersionsRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetCampaignVersionsRequest> request = null;
+        Response<GetCampaignVersionsResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetCampaignVersionsRequestMarshaller()
+                        .marshall(getCampaignVersionsRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetCampaignVersionsResult, JsonUnmarshallerContext> unmarshaller = new GetCampaignVersionsResultJsonUnmarshaller();
+            JsonResponseHandler<GetCampaignVersionsResult> responseHandler = new JsonResponseHandler<GetCampaignVersionsResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Returns information about your campaigns.
+     * 
+     * @param getCampaignsRequest
+     * @return getCampaignsResult The response from the GetCampaigns service
+     *         method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetCampaignsResult getCampaigns(GetCampaignsRequest getCampaignsRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getCampaignsRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetCampaignsRequest> request = null;
+        Response<GetCampaignsResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetCampaignsRequestMarshaller().marshall(getCampaignsRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetCampaignsResult, JsonUnmarshallerContext> unmarshaller = new GetCampaignsResultJsonUnmarshaller();
+            JsonResponseHandler<GetCampaignsResult> responseHandler = new JsonResponseHandler<GetCampaignsResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Get an email channel
+     * 
+     * @param getEmailChannelRequest
+     * @return getEmailChannelResult The response from the GetEmailChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetEmailChannelResult getEmailChannel(GetEmailChannelRequest getEmailChannelRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getEmailChannelRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetEmailChannelRequest> request = null;
+        Response<GetEmailChannelResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetEmailChannelRequestMarshaller().marshall(getEmailChannelRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetEmailChannelResult, JsonUnmarshallerContext> unmarshaller = new GetEmailChannelResultJsonUnmarshaller();
+            JsonResponseHandler<GetEmailChannelResult> responseHandler = new JsonResponseHandler<GetEmailChannelResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Returns information about an endpoint.
+     * 
+     * @param getEndpointRequest
+     * @return getEndpointResult The response from the GetEndpoint service
+     *         method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetEndpointResult getEndpoint(GetEndpointRequest getEndpointRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getEndpointRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetEndpointRequest> request = null;
+        Response<GetEndpointResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetEndpointRequestMarshaller().marshall(getEndpointRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetEndpointResult, JsonUnmarshallerContext> unmarshaller = new GetEndpointResultJsonUnmarshaller();
+            JsonResponseHandler<GetEndpointResult> responseHandler = new JsonResponseHandler<GetEndpointResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Returns the event stream for an app.
+     * 
+     * @param getEventStreamRequest
+     * @return getEventStreamResult The response from the GetEventStream service
+     *         method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetEventStreamResult getEventStream(GetEventStreamRequest getEventStreamRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getEventStreamRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetEventStreamRequest> request = null;
+        Response<GetEventStreamResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetEventStreamRequestMarshaller().marshall(getEventStreamRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetEventStreamResult, JsonUnmarshallerContext> unmarshaller = new GetEventStreamResultJsonUnmarshaller();
+            JsonResponseHandler<GetEventStreamResult> responseHandler = new JsonResponseHandler<GetEventStreamResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Returns information about the GCM channel for an app.
+     * 
+     * @param getGcmChannelRequest
+     * @return getGcmChannelResult The response from the GetGcmChannel service
+     *         method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetGcmChannelResult getGcmChannel(GetGcmChannelRequest getGcmChannelRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getGcmChannelRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetGcmChannelRequest> request = null;
+        Response<GetGcmChannelResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetGcmChannelRequestMarshaller().marshall(getGcmChannelRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetGcmChannelResult, JsonUnmarshallerContext> unmarshaller = new GetGcmChannelResultJsonUnmarshaller();
+            JsonResponseHandler<GetGcmChannelResult> responseHandler = new JsonResponseHandler<GetGcmChannelResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Returns information about an import job.
+     * 
+     * @param getImportJobRequest
+     * @return getImportJobResult The response from the GetImportJob service
+     *         method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetImportJobResult getImportJob(GetImportJobRequest getImportJobRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getImportJobRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetImportJobRequest> request = null;
+        Response<GetImportJobResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetImportJobRequestMarshaller().marshall(getImportJobRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetImportJobResult, JsonUnmarshallerContext> unmarshaller = new GetImportJobResultJsonUnmarshaller();
+            JsonResponseHandler<GetImportJobResult> responseHandler = new JsonResponseHandler<GetImportJobResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Returns information about your import jobs.
+     * 
+     * @param getImportJobsRequest
+     * @return getImportJobsResult The response from the GetImportJobs service
+     *         method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetImportJobsResult getImportJobs(GetImportJobsRequest getImportJobsRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getImportJobsRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetImportJobsRequest> request = null;
+        Response<GetImportJobsResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetImportJobsRequestMarshaller().marshall(getImportJobsRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetImportJobsResult, JsonUnmarshallerContext> unmarshaller = new GetImportJobsResultJsonUnmarshaller();
+            JsonResponseHandler<GetImportJobsResult> responseHandler = new JsonResponseHandler<GetImportJobsResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Returns information about a segment.
+     * 
+     * @param getSegmentRequest
+     * @return getSegmentResult The response from the GetSegment service method,
+     *         as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetSegmentResult getSegment(GetSegmentRequest getSegmentRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getSegmentRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetSegmentRequest> request = null;
+        Response<GetSegmentResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetSegmentRequestMarshaller().marshall(getSegmentRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetSegmentResult, JsonUnmarshallerContext> unmarshaller = new GetSegmentResultJsonUnmarshaller();
+            JsonResponseHandler<GetSegmentResult> responseHandler = new JsonResponseHandler<GetSegmentResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Returns a list of import jobs for a specific segment.
+     * 
+     * @param getSegmentImportJobsRequest
+     * @return getSegmentImportJobsResult The response from the
+     *         GetSegmentImportJobs service method, as returned by
+     *         AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetSegmentImportJobsResult getSegmentImportJobs(
+            GetSegmentImportJobsRequest getSegmentImportJobsRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getSegmentImportJobsRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetSegmentImportJobsRequest> request = null;
+        Response<GetSegmentImportJobsResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetSegmentImportJobsRequestMarshaller()
+                        .marshall(getSegmentImportJobsRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetSegmentImportJobsResult, JsonUnmarshallerContext> unmarshaller = new GetSegmentImportJobsResultJsonUnmarshaller();
+            JsonResponseHandler<GetSegmentImportJobsResult> responseHandler = new JsonResponseHandler<GetSegmentImportJobsResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * Returns information about a segment version.
+     * 
+     * @param getSegmentVersionRequest
+     * @return getSegmentVersionResult The response from the GetSegmentVersion
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetSegmentVersionResult getSegmentVersion(
+            GetSegmentVersionRequest getSegmentVersionRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getSegmentVersionRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetSegmentVersionRequest> request = null;
+        Response<GetSegmentVersionResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new GetCampaignVersionsRequestMarshaller()
-                        .marshall(getCampaignVersionsRequest);
+                request = new GetSegmentVersionRequestMarshaller()
+                        .marshall(getSegmentVersionRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<GetCampaignVersionsResult, JsonUnmarshallerContext> unmarshaller = new GetCampaignVersionsResultJsonUnmarshaller();
-            JsonResponseHandler<GetCampaignVersionsResult> responseHandler = new JsonResponseHandler<GetCampaignVersionsResult>(
+            Unmarshaller<GetSegmentVersionResult, JsonUnmarshallerContext> unmarshaller = new GetSegmentVersionResultJsonUnmarshaller();
+            JsonResponseHandler<GetSegmentVersionResult> responseHandler = new JsonResponseHandler<GetSegmentVersionResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -917,17 +2371,17 @@ public GetCampaignVersionsResult getCampaignVersions(
     }
 
     /**
-     * Returns information about your campaigns.
+     * Returns information about your segment versions.
      * 
-     * @param getCampaignsRequest
-     * @return getCampaignsResult The response from the GetCampaigns service
-     *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @param getSegmentVersionsRequest
+     * @return getSegmentVersionsResult The response from the GetSegmentVersions
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -936,24 +2390,26 @@ public GetCampaignVersionsResult getCampaignVersions(
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public GetCampaignsResult getCampaigns(GetCampaignsRequest getCampaignsRequest)
+    public GetSegmentVersionsResult getSegmentVersions(
+            GetSegmentVersionsRequest getSegmentVersionsRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(getCampaignsRequest);
+        ExecutionContext executionContext = createExecutionContext(getSegmentVersionsRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<GetCampaignsRequest> request = null;
-        Response<GetCampaignsResult> response = null;
+        Request<GetSegmentVersionsRequest> request = null;
+        Response<GetSegmentVersionsResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new GetCampaignsRequestMarshaller().marshall(getCampaignsRequest);
+                request = new GetSegmentVersionsRequestMarshaller()
+                        .marshall(getSegmentVersionsRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<GetCampaignsResult, JsonUnmarshallerContext> unmarshaller = new GetCampaignsResultJsonUnmarshaller();
-            JsonResponseHandler<GetCampaignsResult> responseHandler = new JsonResponseHandler<GetCampaignsResult>(
+            Unmarshaller<GetSegmentVersionsResult, JsonUnmarshallerContext> unmarshaller = new GetSegmentVersionsResultJsonUnmarshaller();
+            JsonResponseHandler<GetSegmentVersionsResult> responseHandler = new JsonResponseHandler<GetSegmentVersionsResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -965,17 +2421,17 @@ public GetCampaignsResult getCampaigns(GetCampaignsRequest getCampaignsRequest)
     }
 
     /**
-     * Returns information about an endpoint.
+     * Used to get information about your segments.
      * 
-     * @param getEndpointRequest
-     * @return getEndpointResult The response from the GetEndpoint service
+     * @param getSegmentsRequest
+     * @return getSegmentsResult The response from the GetSegments service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -984,24 +2440,24 @@ public GetCampaignsResult getCampaigns(GetCampaignsRequest getCampaignsRequest)
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public GetEndpointResult getEndpoint(GetEndpointRequest getEndpointRequest)
+    public GetSegmentsResult getSegments(GetSegmentsRequest getSegmentsRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(getEndpointRequest);
+        ExecutionContext executionContext = createExecutionContext(getSegmentsRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<GetEndpointRequest> request = null;
-        Response<GetEndpointResult> response = null;
+        Request<GetSegmentsRequest> request = null;
+        Response<GetSegmentsResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new GetEndpointRequestMarshaller().marshall(getEndpointRequest);
+                request = new GetSegmentsRequestMarshaller().marshall(getSegmentsRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<GetEndpointResult, JsonUnmarshallerContext> unmarshaller = new GetEndpointResultJsonUnmarshaller();
-            JsonResponseHandler<GetEndpointResult> responseHandler = new JsonResponseHandler<GetEndpointResult>(
+            Unmarshaller<GetSegmentsResult, JsonUnmarshallerContext> unmarshaller = new GetSegmentsResultJsonUnmarshaller();
+            JsonResponseHandler<GetSegmentsResult> responseHandler = new JsonResponseHandler<GetSegmentsResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -1013,17 +2469,17 @@ public GetEndpointResult getEndpoint(GetEndpointRequest getEndpointRequest)
     }
 
     /**
-     * Returns information about the GCM channel for an app.
+     * Get an SMS channel
      * 
-     * @param getGcmChannelRequest
-     * @return getGcmChannelResult The response from the GetGcmChannel service
+     * @param getSmsChannelRequest
+     * @return getSmsChannelResult The response from the GetSmsChannel service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1032,24 +2488,24 @@ public GetEndpointResult getEndpoint(GetEndpointRequest getEndpointRequest)
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public GetGcmChannelResult getGcmChannel(GetGcmChannelRequest getGcmChannelRequest)
+    public GetSmsChannelResult getSmsChannel(GetSmsChannelRequest getSmsChannelRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(getGcmChannelRequest);
+        ExecutionContext executionContext = createExecutionContext(getSmsChannelRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<GetGcmChannelRequest> request = null;
-        Response<GetGcmChannelResult> response = null;
+        Request<GetSmsChannelRequest> request = null;
+        Response<GetSmsChannelResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new GetGcmChannelRequestMarshaller().marshall(getGcmChannelRequest);
+                request = new GetSmsChannelRequestMarshaller().marshall(getSmsChannelRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<GetGcmChannelResult, JsonUnmarshallerContext> unmarshaller = new GetGcmChannelResultJsonUnmarshaller();
-            JsonResponseHandler<GetGcmChannelResult> responseHandler = new JsonResponseHandler<GetGcmChannelResult>(
+            Unmarshaller<GetSmsChannelResult, JsonUnmarshallerContext> unmarshaller = new GetSmsChannelResultJsonUnmarshaller();
+            JsonResponseHandler<GetSmsChannelResult> responseHandler = new JsonResponseHandler<GetSmsChannelResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -1061,17 +2517,17 @@ public GetGcmChannelResult getGcmChannel(GetGcmChannelRequest getGcmChannelReque
     }
 
     /**
-     * Returns information about an import job.
+     * Use to create or update the event stream for an app.
      * 
-     * @param getImportJobRequest
-     * @return getImportJobResult The response from the GetImportJob service
+     * @param putEventStreamRequest
+     * @return putEventStreamResult The response from the PutEventStream service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1080,24 +2536,24 @@ public GetGcmChannelResult getGcmChannel(GetGcmChannelRequest getGcmChannelReque
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public GetImportJobResult getImportJob(GetImportJobRequest getImportJobRequest)
+    public PutEventStreamResult putEventStream(PutEventStreamRequest putEventStreamRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(getImportJobRequest);
+        ExecutionContext executionContext = createExecutionContext(putEventStreamRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<GetImportJobRequest> request = null;
-        Response<GetImportJobResult> response = null;
+        Request<PutEventStreamRequest> request = null;
+        Response<PutEventStreamResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new GetImportJobRequestMarshaller().marshall(getImportJobRequest);
+                request = new PutEventStreamRequestMarshaller().marshall(putEventStreamRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<GetImportJobResult, JsonUnmarshallerContext> unmarshaller = new GetImportJobResultJsonUnmarshaller();
-            JsonResponseHandler<GetImportJobResult> responseHandler = new JsonResponseHandler<GetImportJobResult>(
+            Unmarshaller<PutEventStreamResult, JsonUnmarshallerContext> unmarshaller = new PutEventStreamResultJsonUnmarshaller();
+            JsonResponseHandler<PutEventStreamResult> responseHandler = new JsonResponseHandler<PutEventStreamResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -1109,17 +2565,17 @@ public GetImportJobResult getImportJob(GetImportJobRequest getImportJobRequest)
     }
 
     /**
-     * Returns information about your import jobs.
+     * Send a batch of messages
      * 
-     * @param getImportJobsRequest
-     * @return getImportJobsResult The response from the GetImportJobs service
+     * @param sendMessagesRequest
+     * @return sendMessagesResult The response from the SendMessages service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1128,24 +2584,24 @@ public GetImportJobResult getImportJob(GetImportJobRequest getImportJobRequest)
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public GetImportJobsResult getImportJobs(GetImportJobsRequest getImportJobsRequest)
+    public SendMessagesResult sendMessages(SendMessagesRequest sendMessagesRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(getImportJobsRequest);
+        ExecutionContext executionContext = createExecutionContext(sendMessagesRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<GetImportJobsRequest> request = null;
-        Response<GetImportJobsResult> response = null;
+        Request<SendMessagesRequest> request = null;
+        Response<SendMessagesResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new GetImportJobsRequestMarshaller().marshall(getImportJobsRequest);
+                request = new SendMessagesRequestMarshaller().marshall(sendMessagesRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<GetImportJobsResult, JsonUnmarshallerContext> unmarshaller = new GetImportJobsResultJsonUnmarshaller();
-            JsonResponseHandler<GetImportJobsResult> responseHandler = new JsonResponseHandler<GetImportJobsResult>(
+            Unmarshaller<SendMessagesResult, JsonUnmarshallerContext> unmarshaller = new SendMessagesResultJsonUnmarshaller();
+            JsonResponseHandler<SendMessagesResult> responseHandler = new JsonResponseHandler<SendMessagesResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -1157,17 +2613,17 @@ public GetImportJobsResult getImportJobs(GetImportJobsRequest getImportJobsReque
     }
 
     /**
-     * Returns information about a segment.
+     * Send a batch of messages to users
      * 
-     * @param getSegmentRequest
-     * @return getSegmentResult The response from the GetSegment service method,
-     *         as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @param sendUsersMessagesRequest
+     * @return sendUsersMessagesResult The response from the SendUsersMessages
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1176,24 +2632,26 @@ public GetImportJobsResult getImportJobs(GetImportJobsRequest getImportJobsReque
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public GetSegmentResult getSegment(GetSegmentRequest getSegmentRequest)
+    public SendUsersMessagesResult sendUsersMessages(
+            SendUsersMessagesRequest sendUsersMessagesRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(getSegmentRequest);
+        ExecutionContext executionContext = createExecutionContext(sendUsersMessagesRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<GetSegmentRequest> request = null;
-        Response<GetSegmentResult> response = null;
+        Request<SendUsersMessagesRequest> request = null;
+        Response<SendUsersMessagesResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new GetSegmentRequestMarshaller().marshall(getSegmentRequest);
+                request = new SendUsersMessagesRequestMarshaller()
+                        .marshall(sendUsersMessagesRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<GetSegmentResult, JsonUnmarshallerContext> unmarshaller = new GetSegmentResultJsonUnmarshaller();
-            JsonResponseHandler<GetSegmentResult> responseHandler = new JsonResponseHandler<GetSegmentResult>(
+            Unmarshaller<SendUsersMessagesResult, JsonUnmarshallerContext> unmarshaller = new SendUsersMessagesResultJsonUnmarshaller();
+            JsonResponseHandler<SendUsersMessagesResult> responseHandler = new JsonResponseHandler<SendUsersMessagesResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -1205,18 +2663,17 @@ public GetSegmentResult getSegment(GetSegmentRequest getSegmentRequest)
     }
 
     /**
-     * Returns a list of import jobs for a specific segment.
+     * Update an ADM channel
      * 
-     * @param getSegmentImportJobsRequest
-     * @return getSegmentImportJobsResult The response from the
-     *         GetSegmentImportJobs service method, as returned by
-     *         AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @param updateAdmChannelRequest
+     * @return updateAdmChannelResult The response from the UpdateAdmChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1225,26 +2682,24 @@ public GetSegmentResult getSegment(GetSegmentRequest getSegmentRequest)
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public GetSegmentImportJobsResult getSegmentImportJobs(
-            GetSegmentImportJobsRequest getSegmentImportJobsRequest)
+    public UpdateAdmChannelResult updateAdmChannel(UpdateAdmChannelRequest updateAdmChannelRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(getSegmentImportJobsRequest);
+        ExecutionContext executionContext = createExecutionContext(updateAdmChannelRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<GetSegmentImportJobsRequest> request = null;
-        Response<GetSegmentImportJobsResult> response = null;
+        Request<UpdateAdmChannelRequest> request = null;
+        Response<UpdateAdmChannelResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new GetSegmentImportJobsRequestMarshaller()
-                        .marshall(getSegmentImportJobsRequest);
+                request = new UpdateAdmChannelRequestMarshaller().marshall(updateAdmChannelRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<GetSegmentImportJobsResult, JsonUnmarshallerContext> unmarshaller = new GetSegmentImportJobsResultJsonUnmarshaller();
-            JsonResponseHandler<GetSegmentImportJobsResult> responseHandler = new JsonResponseHandler<GetSegmentImportJobsResult>(
+            Unmarshaller<UpdateAdmChannelResult, JsonUnmarshallerContext> unmarshaller = new UpdateAdmChannelResultJsonUnmarshaller();
+            JsonResponseHandler<UpdateAdmChannelResult> responseHandler = new JsonResponseHandler<UpdateAdmChannelResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -1256,17 +2711,17 @@ public GetSegmentImportJobsResult getSegmentImportJobs(
     }
 
     /**
-     * Returns information about a segment version.
+     * Use to update the APNs channel for an app.
      * 
-     * @param getSegmentVersionRequest
-     * @return getSegmentVersionResult The response from the GetSegmentVersion
+     * @param updateApnsChannelRequest
+     * @return updateApnsChannelResult The response from the UpdateApnsChannel
      *         service method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1275,26 +2730,26 @@ public GetSegmentImportJobsResult getSegmentImportJobs(
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public GetSegmentVersionResult getSegmentVersion(
-            GetSegmentVersionRequest getSegmentVersionRequest)
+    public UpdateApnsChannelResult updateApnsChannel(
+            UpdateApnsChannelRequest updateApnsChannelRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(getSegmentVersionRequest);
+        ExecutionContext executionContext = createExecutionContext(updateApnsChannelRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<GetSegmentVersionRequest> request = null;
-        Response<GetSegmentVersionResult> response = null;
+        Request<UpdateApnsChannelRequest> request = null;
+        Response<UpdateApnsChannelResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new GetSegmentVersionRequestMarshaller()
-                        .marshall(getSegmentVersionRequest);
+                request = new UpdateApnsChannelRequestMarshaller()
+                        .marshall(updateApnsChannelRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<GetSegmentVersionResult, JsonUnmarshallerContext> unmarshaller = new GetSegmentVersionResultJsonUnmarshaller();
-            JsonResponseHandler<GetSegmentVersionResult> responseHandler = new JsonResponseHandler<GetSegmentVersionResult>(
+            Unmarshaller<UpdateApnsChannelResult, JsonUnmarshallerContext> unmarshaller = new UpdateApnsChannelResultJsonUnmarshaller();
+            JsonResponseHandler<UpdateApnsChannelResult> responseHandler = new JsonResponseHandler<UpdateApnsChannelResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -1306,17 +2761,18 @@ public GetSegmentVersionResult getSegmentVersion(
     }
 
     /**
-     * Returns information about your segment versions.
+     * Update an APNS sandbox channel
      * 
-     * @param getSegmentVersionsRequest
-     * @return getSegmentVersionsResult The response from the GetSegmentVersions
-     *         service method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @param updateApnsSandboxChannelRequest
+     * @return updateApnsSandboxChannelResult The response from the
+     *         UpdateApnsSandboxChannel service method, as returned by
+     *         AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1325,26 +2781,26 @@ public GetSegmentVersionResult getSegmentVersion(
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public GetSegmentVersionsResult getSegmentVersions(
-            GetSegmentVersionsRequest getSegmentVersionsRequest)
+    public UpdateApnsSandboxChannelResult updateApnsSandboxChannel(
+            UpdateApnsSandboxChannelRequest updateApnsSandboxChannelRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(getSegmentVersionsRequest);
+        ExecutionContext executionContext = createExecutionContext(updateApnsSandboxChannelRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<GetSegmentVersionsRequest> request = null;
-        Response<GetSegmentVersionsResult> response = null;
+        Request<UpdateApnsSandboxChannelRequest> request = null;
+        Response<UpdateApnsSandboxChannelResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new GetSegmentVersionsRequestMarshaller()
-                        .marshall(getSegmentVersionsRequest);
+                request = new UpdateApnsSandboxChannelRequestMarshaller()
+                        .marshall(updateApnsSandboxChannelRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<GetSegmentVersionsResult, JsonUnmarshallerContext> unmarshaller = new GetSegmentVersionsResultJsonUnmarshaller();
-            JsonResponseHandler<GetSegmentVersionsResult> responseHandler = new JsonResponseHandler<GetSegmentVersionsResult>(
+            Unmarshaller<UpdateApnsSandboxChannelResult, JsonUnmarshallerContext> unmarshaller = new UpdateApnsSandboxChannelResultJsonUnmarshaller();
+            JsonResponseHandler<UpdateApnsSandboxChannelResult> responseHandler = new JsonResponseHandler<UpdateApnsSandboxChannelResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -1356,17 +2812,18 @@ public GetSegmentVersionsResult getSegmentVersions(
     }
 
     /**
-     * Used to get information about your segments.
+     * Used to update the settings for an app.
      * 
-     * @param getSegmentsRequest
-     * @return getSegmentsResult The response from the GetSegments service
-     *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @param updateApplicationSettingsRequest
+     * @return updateApplicationSettingsResult The response from the
+     *         UpdateApplicationSettings service method, as returned by
+     *         AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1375,24 +2832,26 @@ public GetSegmentVersionsResult getSegmentVersions(
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public GetSegmentsResult getSegments(GetSegmentsRequest getSegmentsRequest)
+    public UpdateApplicationSettingsResult updateApplicationSettings(
+            UpdateApplicationSettingsRequest updateApplicationSettingsRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(getSegmentsRequest);
+        ExecutionContext executionContext = createExecutionContext(updateApplicationSettingsRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<GetSegmentsRequest> request = null;
-        Response<GetSegmentsResult> response = null;
+        Request<UpdateApplicationSettingsRequest> request = null;
+        Response<UpdateApplicationSettingsResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new GetSegmentsRequestMarshaller().marshall(getSegmentsRequest);
+                request = new UpdateApplicationSettingsRequestMarshaller()
+                        .marshall(updateApplicationSettingsRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<GetSegmentsResult, JsonUnmarshallerContext> unmarshaller = new GetSegmentsResultJsonUnmarshaller();
-            JsonResponseHandler<GetSegmentsResult> responseHandler = new JsonResponseHandler<GetSegmentsResult>(
+            Unmarshaller<UpdateApplicationSettingsResult, JsonUnmarshallerContext> unmarshaller = new UpdateApplicationSettingsResultJsonUnmarshaller();
+            JsonResponseHandler<UpdateApplicationSettingsResult> responseHandler = new JsonResponseHandler<UpdateApplicationSettingsResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -1404,17 +2863,17 @@ public GetSegmentsResult getSegments(GetSegmentsRequest getSegmentsRequest)
     }
 
     /**
-     * Use to update the APNs channel for an app.
+     * Update a BAIDU GCM channel
      * 
-     * @param updateApnsChannelRequest
-     * @return updateApnsChannelResult The response from the UpdateApnsChannel
+     * @param updateBaiduChannelRequest
+     * @return updateBaiduChannelResult The response from the UpdateBaiduChannel
      *         service method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1423,26 +2882,26 @@ public GetSegmentsResult getSegments(GetSegmentsRequest getSegmentsRequest)
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public UpdateApnsChannelResult updateApnsChannel(
-            UpdateApnsChannelRequest updateApnsChannelRequest)
+    public UpdateBaiduChannelResult updateBaiduChannel(
+            UpdateBaiduChannelRequest updateBaiduChannelRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(updateApnsChannelRequest);
+        ExecutionContext executionContext = createExecutionContext(updateBaiduChannelRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<UpdateApnsChannelRequest> request = null;
-        Response<UpdateApnsChannelResult> response = null;
+        Request<UpdateBaiduChannelRequest> request = null;
+        Response<UpdateBaiduChannelResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new UpdateApnsChannelRequestMarshaller()
-                        .marshall(updateApnsChannelRequest);
+                request = new UpdateBaiduChannelRequestMarshaller()
+                        .marshall(updateBaiduChannelRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<UpdateApnsChannelResult, JsonUnmarshallerContext> unmarshaller = new UpdateApnsChannelResultJsonUnmarshaller();
-            JsonResponseHandler<UpdateApnsChannelResult> responseHandler = new JsonResponseHandler<UpdateApnsChannelResult>(
+            Unmarshaller<UpdateBaiduChannelResult, JsonUnmarshallerContext> unmarshaller = new UpdateBaiduChannelResultJsonUnmarshaller();
+            JsonResponseHandler<UpdateBaiduChannelResult> responseHandler = new JsonResponseHandler<UpdateBaiduChannelResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -1454,18 +2913,17 @@ public UpdateApnsChannelResult updateApnsChannel(
     }
 
     /**
-     * Used to update the settings for an app.
+     * Use to update a campaign.
      * 
-     * @param updateApplicationSettingsRequest
-     * @return updateApplicationSettingsResult The response from the
-     *         UpdateApplicationSettings service method, as returned by
-     *         AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @param updateCampaignRequest
+     * @return updateCampaignResult The response from the UpdateCampaign service
+     *         method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1474,26 +2932,24 @@ public UpdateApnsChannelResult updateApnsChannel(
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public UpdateApplicationSettingsResult updateApplicationSettings(
-            UpdateApplicationSettingsRequest updateApplicationSettingsRequest)
+    public UpdateCampaignResult updateCampaign(UpdateCampaignRequest updateCampaignRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(updateApplicationSettingsRequest);
+        ExecutionContext executionContext = createExecutionContext(updateCampaignRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<UpdateApplicationSettingsRequest> request = null;
-        Response<UpdateApplicationSettingsResult> response = null;
+        Request<UpdateCampaignRequest> request = null;
+        Response<UpdateCampaignResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new UpdateApplicationSettingsRequestMarshaller()
-                        .marshall(updateApplicationSettingsRequest);
+                request = new UpdateCampaignRequestMarshaller().marshall(updateCampaignRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<UpdateApplicationSettingsResult, JsonUnmarshallerContext> unmarshaller = new UpdateApplicationSettingsResultJsonUnmarshaller();
-            JsonResponseHandler<UpdateApplicationSettingsResult> responseHandler = new JsonResponseHandler<UpdateApplicationSettingsResult>(
+            Unmarshaller<UpdateCampaignResult, JsonUnmarshallerContext> unmarshaller = new UpdateCampaignResultJsonUnmarshaller();
+            JsonResponseHandler<UpdateCampaignResult> responseHandler = new JsonResponseHandler<UpdateCampaignResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -1505,17 +2961,17 @@ public UpdateApplicationSettingsResult updateApplicationSettings(
     }
 
     /**
-     * Use to update a campaign.
+     * Update an email channel
      * 
-     * @param updateCampaignRequest
-     * @return updateCampaignResult The response from the UpdateCampaign service
-     *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @param updateEmailChannelRequest
+     * @return updateEmailChannelResult The response from the UpdateEmailChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1524,24 +2980,26 @@ public UpdateApplicationSettingsResult updateApplicationSettings(
      *             AmazonPinpoint indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public UpdateCampaignResult updateCampaign(UpdateCampaignRequest updateCampaignRequest)
+    public UpdateEmailChannelResult updateEmailChannel(
+            UpdateEmailChannelRequest updateEmailChannelRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(updateCampaignRequest);
+        ExecutionContext executionContext = createExecutionContext(updateEmailChannelRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<UpdateCampaignRequest> request = null;
-        Response<UpdateCampaignResult> response = null;
+        Request<UpdateEmailChannelRequest> request = null;
+        Response<UpdateEmailChannelResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new UpdateCampaignRequestMarshaller().marshall(updateCampaignRequest);
+                request = new UpdateEmailChannelRequestMarshaller()
+                        .marshall(updateEmailChannelRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<UpdateCampaignResult, JsonUnmarshallerContext> unmarshaller = new UpdateCampaignResultJsonUnmarshaller();
-            JsonResponseHandler<UpdateCampaignResult> responseHandler = new JsonResponseHandler<UpdateCampaignResult>(
+            Unmarshaller<UpdateEmailChannelResult, JsonUnmarshallerContext> unmarshaller = new UpdateEmailChannelResultJsonUnmarshaller();
+            JsonResponseHandler<UpdateEmailChannelResult> responseHandler = new JsonResponseHandler<UpdateEmailChannelResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
@@ -1558,12 +3016,12 @@ public UpdateCampaignResult updateCampaign(UpdateCampaignRequest updateCampaignR
      * @param updateEndpointRequest
      * @return updateEndpointResult The response from the UpdateEndpoint service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1601,18 +3059,18 @@ public UpdateEndpointResult updateEndpoint(UpdateEndpointRequest updateEndpointR
     }
 
     /**
-     * Use to update your endpoints.
+     * Use to update a batch of endpoints.
      * 
      * @param updateEndpointsBatchRequest
      * @return updateEndpointsBatchResult The response from the
      *         UpdateEndpointsBatch service method, as returned by
      *         AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1657,12 +3115,12 @@ public UpdateEndpointsBatchResult updateEndpointsBatch(
      * @param updateGcmChannelRequest
      * @return updateGcmChannelResult The response from the UpdateGcmChannel
      *         service method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1705,12 +3163,12 @@ public UpdateGcmChannelResult updateGcmChannel(UpdateGcmChannelRequest updateGcm
      * @param updateSegmentRequest
      * @return updateSegmentResult The response from the UpdateSegment service
      *         method, as returned by AmazonPinpoint.
-     * @throws BadRequestException 400 response
-     * @throws InternalServerErrorException 500 response
-     * @throws ForbiddenException 403 response
-     * @throws NotFoundException 404 response
-     * @throws MethodNotAllowedException 405 response
-     * @throws TooManyRequestsException 429 response
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -1747,6 +3205,54 @@ public UpdateSegmentResult updateSegment(UpdateSegmentRequest updateSegmentReque
         }
     }
 
+    /**
+     * Update an SMS channel
+     * 
+     * @param updateSmsChannelRequest
+     * @return updateSmsChannelResult The response from the UpdateSmsChannel
+     *         service method, as returned by AmazonPinpoint.
+     * @throws BadRequestException
+     * @throws InternalServerErrorException
+     * @throws ForbiddenException
+     * @throws NotFoundException
+     * @throws MethodNotAllowedException
+     * @throws TooManyRequestsException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by
+     *             AmazonPinpoint indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public UpdateSmsChannelResult updateSmsChannel(UpdateSmsChannelRequest updateSmsChannelRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(updateSmsChannelRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<UpdateSmsChannelRequest> request = null;
+        Response<UpdateSmsChannelResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new UpdateSmsChannelRequestMarshaller().marshall(updateSmsChannelRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<UpdateSmsChannelResult, JsonUnmarshallerContext> unmarshaller = new UpdateSmsChannelResultJsonUnmarshaller();
+            JsonResponseHandler<UpdateSmsChannelResult> responseHandler = new JsonResponseHandler<UpdateSmsChannelResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * Returns additional metadata for a previously executed successful,
      * request, typically used for debugging issues where a service isn't acting
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ADMChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ADMChannelRequest.java
new file mode 100644
index 0000000000..27d137646b
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ADMChannelRequest.java
@@ -0,0 +1,206 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Amazon Device Messaging channel definition.
+ */
+public class ADMChannelRequest implements Serializable {
+    /**
+     * Client ID as gotten from Amazon
+     */
+    private String clientId;
+
+    /**
+     * Client secret as gotten from Amazon
+     */
+    private String clientSecret;
+
+    /**
+     * If the channel is enabled for sending messages.
+     */
+    private Boolean enabled;
+
+    /**
+     * Client ID as gotten from Amazon
+     *
+     * @return Client ID as gotten from Amazon
+     */
+    public String getClientId() {
+        return clientId;
+    }
+
+    /**
+     * Client ID as gotten from Amazon
+     *
+     * @param clientId Client ID as gotten from Amazon
+     */
+    public void setClientId(String clientId) {
+        this.clientId = clientId;
+    }
+
+    /**
+     * Client ID as gotten from Amazon
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param clientId Client ID as gotten from Amazon
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMChannelRequest withClientId(String clientId) {
+        this.clientId = clientId;
+        return this;
+    }
+
+    /**
+     * Client secret as gotten from Amazon
+     *
+     * @return Client secret as gotten from Amazon
+     */
+    public String getClientSecret() {
+        return clientSecret;
+    }
+
+    /**
+     * Client secret as gotten from Amazon
+     *
+     * @param clientSecret Client secret as gotten from Amazon
+     */
+    public void setClientSecret(String clientSecret) {
+        this.clientSecret = clientSecret;
+    }
+
+    /**
+     * Client secret as gotten from Amazon
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param clientSecret Client secret as gotten from Amazon
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMChannelRequest withClientSecret(String clientSecret) {
+        this.clientSecret = clientSecret;
+        return this;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean isEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean getEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     */
+    public void setEnabled(Boolean enabled) {
+        this.enabled = enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMChannelRequest withEnabled(Boolean enabled) {
+        this.enabled = enabled;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getClientId() != null)
+            sb.append("ClientId: " + getClientId() + ",");
+        if (getClientSecret() != null)
+            sb.append("ClientSecret: " + getClientSecret() + ",");
+        if (getEnabled() != null)
+            sb.append("Enabled: " + getEnabled());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getClientId() == null) ? 0 : getClientId().hashCode());
+        hashCode = prime * hashCode
+                + ((getClientSecret() == null) ? 0 : getClientSecret().hashCode());
+        hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ADMChannelRequest == false)
+            return false;
+        ADMChannelRequest other = (ADMChannelRequest) obj;
+
+        if (other.getClientId() == null ^ this.getClientId() == null)
+            return false;
+        if (other.getClientId() != null && other.getClientId().equals(this.getClientId()) == false)
+            return false;
+        if (other.getClientSecret() == null ^ this.getClientSecret() == null)
+            return false;
+        if (other.getClientSecret() != null
+                && other.getClientSecret().equals(this.getClientSecret()) == false)
+            return false;
+        if (other.getEnabled() == null ^ this.getEnabled() == null)
+            return false;
+        if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ADMChannelResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ADMChannelResponse.java
new file mode 100644
index 0000000000..5b09049ac7
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ADMChannelResponse.java
@@ -0,0 +1,492 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Amazon Device Messaging channel definition.
+ */
+public class ADMChannelResponse implements Serializable {
+    /**
+     * Application id
+     */
+    private String applicationId;
+
+    /**
+     * When was this segment created
+     */
+    private String creationDate;
+
+    /**
+     * If the channel is enabled for sending messages.
+     */
+    private Boolean enabled;
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     */
+    private String id;
+
+    /**
+     * Is this channel archived
+     */
+    private Boolean isArchived;
+
+    /**
+     * Who last updated this entry
+     */
+    private String lastModifiedBy;
+
+    /**
+     * Last date this was updated
+     */
+    private String lastModifiedDate;
+
+    /**
+     * Platform type. Will be "ADM"
+     */
+    private String platform;
+
+    /**
+     * Version of channel
+     */
+    private Integer version;
+
+    /**
+     * Application id
+     *
+     * @return Application id
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Application id
+     *
+     * @param applicationId Application id
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Application id
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId Application id
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMChannelResponse withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * When was this segment created
+     *
+     * @return When was this segment created
+     */
+    public String getCreationDate() {
+        return creationDate;
+    }
+
+    /**
+     * When was this segment created
+     *
+     * @param creationDate When was this segment created
+     */
+    public void setCreationDate(String creationDate) {
+        this.creationDate = creationDate;
+    }
+
+    /**
+     * When was this segment created
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param creationDate When was this segment created
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMChannelResponse withCreationDate(String creationDate) {
+        this.creationDate = creationDate;
+        return this;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean isEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean getEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     */
+    public void setEnabled(Boolean enabled) {
+        this.enabled = enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMChannelResponse withEnabled(Boolean enabled) {
+        this.enabled = enabled;
+        return this;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     *
+     * @return Channel ID. Not used, only for backwards compatibility.
+     */
+    public String getId() {
+        return id;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     *
+     * @param id Channel ID. Not used, only for backwards compatibility.
+     */
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param id Channel ID. Not used, only for backwards compatibility.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMChannelResponse withId(String id) {
+        this.id = id;
+        return this;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @return Is this channel archived
+     */
+    public Boolean isIsArchived() {
+        return isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @return Is this channel archived
+     */
+    public Boolean getIsArchived() {
+        return isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @param isArchived Is this channel archived
+     */
+    public void setIsArchived(Boolean isArchived) {
+        this.isArchived = isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param isArchived Is this channel archived
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMChannelResponse withIsArchived(Boolean isArchived) {
+        this.isArchived = isArchived;
+        return this;
+    }
+
+    /**
+     * Who last updated this entry
+     *
+     * @return Who last updated this entry
+     */
+    public String getLastModifiedBy() {
+        return lastModifiedBy;
+    }
+
+    /**
+     * Who last updated this entry
+     *
+     * @param lastModifiedBy Who last updated this entry
+     */
+    public void setLastModifiedBy(String lastModifiedBy) {
+        this.lastModifiedBy = lastModifiedBy;
+    }
+
+    /**
+     * Who last updated this entry
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastModifiedBy Who last updated this entry
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMChannelResponse withLastModifiedBy(String lastModifiedBy) {
+        this.lastModifiedBy = lastModifiedBy;
+        return this;
+    }
+
+    /**
+     * Last date this was updated
+     *
+     * @return Last date this was updated
+     */
+    public String getLastModifiedDate() {
+        return lastModifiedDate;
+    }
+
+    /**
+     * Last date this was updated
+     *
+     * @param lastModifiedDate Last date this was updated
+     */
+    public void setLastModifiedDate(String lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+    }
+
+    /**
+     * Last date this was updated
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastModifiedDate Last date this was updated
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMChannelResponse withLastModifiedDate(String lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+        return this;
+    }
+
+    /**
+     * Platform type. Will be "ADM"
+     *
+     * @return Platform type. Will be "ADM"
+     */
+    public String getPlatform() {
+        return platform;
+    }
+
+    /**
+     * Platform type. Will be "ADM"
+     *
+     * @param platform Platform type. Will be "ADM"
+     */
+    public void setPlatform(String platform) {
+        this.platform = platform;
+    }
+
+    /**
+     * Platform type. Will be "ADM"
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param platform Platform type. Will be "ADM"
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMChannelResponse withPlatform(String platform) {
+        this.platform = platform;
+        return this;
+    }
+
+    /**
+     * Version of channel
+     *
+     * @return Version of channel
+     */
+    public Integer getVersion() {
+        return version;
+    }
+
+    /**
+     * Version of channel
+     *
+     * @param version Version of channel
+     */
+    public void setVersion(Integer version) {
+        this.version = version;
+    }
+
+    /**
+     * Version of channel
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param version Version of channel
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMChannelResponse withVersion(Integer version) {
+        this.version = version;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getCreationDate() != null)
+            sb.append("CreationDate: " + getCreationDate() + ",");
+        if (getEnabled() != null)
+            sb.append("Enabled: " + getEnabled() + ",");
+        if (getId() != null)
+            sb.append("Id: " + getId() + ",");
+        if (getIsArchived() != null)
+            sb.append("IsArchived: " + getIsArchived() + ",");
+        if (getLastModifiedBy() != null)
+            sb.append("LastModifiedBy: " + getLastModifiedBy() + ",");
+        if (getLastModifiedDate() != null)
+            sb.append("LastModifiedDate: " + getLastModifiedDate() + ",");
+        if (getPlatform() != null)
+            sb.append("Platform: " + getPlatform() + ",");
+        if (getVersion() != null)
+            sb.append("Version: " + getVersion());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime * hashCode
+                + ((getCreationDate() == null) ? 0 : getCreationDate().hashCode());
+        hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
+        hashCode = prime * hashCode + ((getId() == null) ? 0 : getId().hashCode());
+        hashCode = prime * hashCode + ((getIsArchived() == null) ? 0 : getIsArchived().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastModifiedBy() == null) ? 0 : getLastModifiedBy().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastModifiedDate() == null) ? 0 : getLastModifiedDate().hashCode());
+        hashCode = prime * hashCode + ((getPlatform() == null) ? 0 : getPlatform().hashCode());
+        hashCode = prime * hashCode + ((getVersion() == null) ? 0 : getVersion().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ADMChannelResponse == false)
+            return false;
+        ADMChannelResponse other = (ADMChannelResponse) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        if (other.getCreationDate() == null ^ this.getCreationDate() == null)
+            return false;
+        if (other.getCreationDate() != null
+                && other.getCreationDate().equals(this.getCreationDate()) == false)
+            return false;
+        if (other.getEnabled() == null ^ this.getEnabled() == null)
+            return false;
+        if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
+            return false;
+        if (other.getId() == null ^ this.getId() == null)
+            return false;
+        if (other.getId() != null && other.getId().equals(this.getId()) == false)
+            return false;
+        if (other.getIsArchived() == null ^ this.getIsArchived() == null)
+            return false;
+        if (other.getIsArchived() != null
+                && other.getIsArchived().equals(this.getIsArchived()) == false)
+            return false;
+        if (other.getLastModifiedBy() == null ^ this.getLastModifiedBy() == null)
+            return false;
+        if (other.getLastModifiedBy() != null
+                && other.getLastModifiedBy().equals(this.getLastModifiedBy()) == false)
+            return false;
+        if (other.getLastModifiedDate() == null ^ this.getLastModifiedDate() == null)
+            return false;
+        if (other.getLastModifiedDate() != null
+                && other.getLastModifiedDate().equals(this.getLastModifiedDate()) == false)
+            return false;
+        if (other.getPlatform() == null ^ this.getPlatform() == null)
+            return false;
+        if (other.getPlatform() != null && other.getPlatform().equals(this.getPlatform()) == false)
+            return false;
+        if (other.getVersion() == null ^ this.getVersion() == null)
+            return false;
+        if (other.getVersion() != null && other.getVersion().equals(this.getVersion()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ADMMessage.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ADMMessage.java
new file mode 100644
index 0000000000..1ec9adb749
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ADMMessage.java
@@ -0,0 +1,1173 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * ADM Message.
+ */
+public class ADMMessage implements Serializable {
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     */
+    private String action;
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     */
+    private String body;
+
+    /**
+     * Optional. Arbitrary string used to indicate multiple messages are
+     * logically the same and that ADM is allowed to drop previously enqueued
+     * messages in favor of this one.
+     */
+    private String consolidationKey;
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     */
+    private java.util.Map<String, String> data;
+
+    /**
+     * Optional. Number of seconds ADM should retain the message if the device
+     * is offline
+     */
+    private String expiresAfter;
+
+    /**
+     * The icon image name of the asset saved in your application.
+     */
+    private String iconReference;
+
+    /**
+     * The URL that points to an image used as the large icon to the
+     * notification content view.
+     */
+    private String imageIconUrl;
+
+    /**
+     * The URL that points to an image used in the push notification.
+     */
+    private String imageUrl;
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     */
+    private String jsonData;
+
+    /**
+     * Optional. Base-64-encoded MD5 checksum of the data parameter. Used to
+     * verify data integrity
+     */
+    private String mD5;
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     */
+    private String rawContent;
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     */
+    private Boolean silentPush;
+
+    /**
+     * The URL that points to an image used as the small icon for the
+     * notification which will be used to represent the notification in the
+     * status bar and content view
+     */
+    private String smallImageIconUrl;
+
+    /**
+     * Indicates a sound to play when the device receives the notification.
+     * Supports default, or the filename of a sound resource bundled in the app.
+     * Android sound files must reside in /res/raw/
+     */
+    private String sound;
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     */
+    private java.util.Map<String, java.util.List<String>> substitutions;
+
+    /**
+     * The message title that displays above the message on the user's device.
+     */
+    private String title;
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     */
+    private String url;
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @return The action that occurs if the user taps a push notification
+     *         delivered by the campaign: OPEN_APP - Your app launches, or it
+     *         becomes the foreground app if it has been sent to the background.
+     *         This is the default action. DEEP_LINK - Uses deep linking
+     *         features in iOS and Android to open your app and display a
+     *         designated user interface within the app. URL - The default
+     *         mobile browser on the user's device launches and opens a web page
+     *         at the URL you specify. Possible values include: OPEN_APP |
+     *         DEEP_LINK | URL
+     * @see Action
+     */
+    public String getAction() {
+        return action;
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @see Action
+     */
+    public void setAction(String action) {
+        this.action = action;
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see Action
+     */
+    public ADMMessage withAction(String action) {
+        this.action = action;
+        return this;
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @see Action
+     */
+    public void setAction(Action action) {
+        this.action = action.toString();
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see Action
+     */
+    public ADMMessage withAction(Action action) {
+        this.action = action.toString();
+        return this;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @return The message body of the notification, the email body or the text
+     *         message.
+     */
+    public String getBody() {
+        return body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     */
+    public void setBody(String body) {
+        this.body = body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage withBody(String body) {
+        this.body = body;
+        return this;
+    }
+
+    /**
+     * Optional. Arbitrary string used to indicate multiple messages are
+     * logically the same and that ADM is allowed to drop previously enqueued
+     * messages in favor of this one.
+     *
+     * @return Optional. Arbitrary string used to indicate multiple messages are
+     *         logically the same and that ADM is allowed to drop previously
+     *         enqueued messages in favor of this one.
+     */
+    public String getConsolidationKey() {
+        return consolidationKey;
+    }
+
+    /**
+     * Optional. Arbitrary string used to indicate multiple messages are
+     * logically the same and that ADM is allowed to drop previously enqueued
+     * messages in favor of this one.
+     *
+     * @param consolidationKey Optional. Arbitrary string used to indicate
+     *            multiple messages are logically the same and that ADM is
+     *            allowed to drop previously enqueued messages in favor of this
+     *            one.
+     */
+    public void setConsolidationKey(String consolidationKey) {
+        this.consolidationKey = consolidationKey;
+    }
+
+    /**
+     * Optional. Arbitrary string used to indicate multiple messages are
+     * logically the same and that ADM is allowed to drop previously enqueued
+     * messages in favor of this one.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param consolidationKey Optional. Arbitrary string used to indicate
+     *            multiple messages are logically the same and that ADM is
+     *            allowed to drop previously enqueued messages in favor of this
+     *            one.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage withConsolidationKey(String consolidationKey) {
+        this.consolidationKey = consolidationKey;
+        return this;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @return The data payload used for a silent push. This payload is added to
+     *         the notifications' data.pinpoint.jsonBody' object
+     */
+    public java.util.Map<String, String> getData() {
+        return data;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @param data The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     */
+    public void setData(java.util.Map<String, String> data) {
+        this.data = data;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param data The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage withData(java.util.Map<String, String> data) {
+        this.data = data;
+        return this;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     * <p>
+     * The method adds a new key-value pair into Data parameter, and returns a
+     * reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Data.
+     * @param value The corresponding value of the entry to be added into Data.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage addDataEntry(String key, String value) {
+        if (null == this.data) {
+            this.data = new java.util.HashMap<String, String>();
+        }
+        if (this.data.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.data.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Data.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public ADMMessage clearDataEntries() {
+        this.data = null;
+        return this;
+    }
+
+    /**
+     * Optional. Number of seconds ADM should retain the message if the device
+     * is offline
+     *
+     * @return Optional. Number of seconds ADM should retain the message if the
+     *         device is offline
+     */
+    public String getExpiresAfter() {
+        return expiresAfter;
+    }
+
+    /**
+     * Optional. Number of seconds ADM should retain the message if the device
+     * is offline
+     *
+     * @param expiresAfter Optional. Number of seconds ADM should retain the
+     *            message if the device is offline
+     */
+    public void setExpiresAfter(String expiresAfter) {
+        this.expiresAfter = expiresAfter;
+    }
+
+    /**
+     * Optional. Number of seconds ADM should retain the message if the device
+     * is offline
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param expiresAfter Optional. Number of seconds ADM should retain the
+     *            message if the device is offline
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage withExpiresAfter(String expiresAfter) {
+        this.expiresAfter = expiresAfter;
+        return this;
+    }
+
+    /**
+     * The icon image name of the asset saved in your application.
+     *
+     * @return The icon image name of the asset saved in your application.
+     */
+    public String getIconReference() {
+        return iconReference;
+    }
+
+    /**
+     * The icon image name of the asset saved in your application.
+     *
+     * @param iconReference The icon image name of the asset saved in your
+     *            application.
+     */
+    public void setIconReference(String iconReference) {
+        this.iconReference = iconReference;
+    }
+
+    /**
+     * The icon image name of the asset saved in your application.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param iconReference The icon image name of the asset saved in your
+     *            application.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage withIconReference(String iconReference) {
+        this.iconReference = iconReference;
+        return this;
+    }
+
+    /**
+     * The URL that points to an image used as the large icon to the
+     * notification content view.
+     *
+     * @return The URL that points to an image used as the large icon to the
+     *         notification content view.
+     */
+    public String getImageIconUrl() {
+        return imageIconUrl;
+    }
+
+    /**
+     * The URL that points to an image used as the large icon to the
+     * notification content view.
+     *
+     * @param imageIconUrl The URL that points to an image used as the large
+     *            icon to the notification content view.
+     */
+    public void setImageIconUrl(String imageIconUrl) {
+        this.imageIconUrl = imageIconUrl;
+    }
+
+    /**
+     * The URL that points to an image used as the large icon to the
+     * notification content view.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param imageIconUrl The URL that points to an image used as the large
+     *            icon to the notification content view.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage withImageIconUrl(String imageIconUrl) {
+        this.imageIconUrl = imageIconUrl;
+        return this;
+    }
+
+    /**
+     * The URL that points to an image used in the push notification.
+     *
+     * @return The URL that points to an image used in the push notification.
+     */
+    public String getImageUrl() {
+        return imageUrl;
+    }
+
+    /**
+     * The URL that points to an image used in the push notification.
+     *
+     * @param imageUrl The URL that points to an image used in the push
+     *            notification.
+     */
+    public void setImageUrl(String imageUrl) {
+        this.imageUrl = imageUrl;
+    }
+
+    /**
+     * The URL that points to an image used in the push notification.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param imageUrl The URL that points to an image used in the push
+     *            notification.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage withImageUrl(String imageUrl) {
+        this.imageUrl = imageUrl;
+        return this;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @return The data payload used for a silent push. This payload is added to
+     *         the notifications' data.pinpoint.jsonBody' object
+     */
+    public String getJsonData() {
+        return jsonData;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @param jsonData The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     */
+    public void setJsonData(String jsonData) {
+        this.jsonData = jsonData;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param jsonData The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage withJsonData(String jsonData) {
+        this.jsonData = jsonData;
+        return this;
+    }
+
+    /**
+     * Optional. Base-64-encoded MD5 checksum of the data parameter. Used to
+     * verify data integrity
+     *
+     * @return Optional. Base-64-encoded MD5 checksum of the data parameter.
+     *         Used to verify data integrity
+     */
+    public String getMD5() {
+        return mD5;
+    }
+
+    /**
+     * Optional. Base-64-encoded MD5 checksum of the data parameter. Used to
+     * verify data integrity
+     *
+     * @param mD5 Optional. Base-64-encoded MD5 checksum of the data parameter.
+     *            Used to verify data integrity
+     */
+    public void setMD5(String mD5) {
+        this.mD5 = mD5;
+    }
+
+    /**
+     * Optional. Base-64-encoded MD5 checksum of the data parameter. Used to
+     * verify data integrity
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param mD5 Optional. Base-64-encoded MD5 checksum of the data parameter.
+     *            Used to verify data integrity
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage withMD5(String mD5) {
+        this.mD5 = mD5;
+        return this;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     *
+     * @return The Raw JSON formatted string to be used as the payload. This
+     *         value overrides the message.
+     */
+    public String getRawContent() {
+        return rawContent;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     *
+     * @param rawContent The Raw JSON formatted string to be used as the
+     *            payload. This value overrides the message.
+     */
+    public void setRawContent(String rawContent) {
+        this.rawContent = rawContent;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param rawContent The Raw JSON formatted string to be used as the
+     *            payload. This value overrides the message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage withRawContent(String rawContent) {
+        this.rawContent = rawContent;
+        return this;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     *
+     * @return Indicates if the message should display on the users device.
+     *         Silent pushes can be used for Remote Configuration and Phone Home
+     *         use cases.
+     */
+    public Boolean isSilentPush() {
+        return silentPush;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     *
+     * @return Indicates if the message should display on the users device.
+     *         Silent pushes can be used for Remote Configuration and Phone Home
+     *         use cases.
+     */
+    public Boolean getSilentPush() {
+        return silentPush;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     *
+     * @param silentPush Indicates if the message should display on the users
+     *            device. Silent pushes can be used for Remote Configuration and
+     *            Phone Home use cases.
+     */
+    public void setSilentPush(Boolean silentPush) {
+        this.silentPush = silentPush;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param silentPush Indicates if the message should display on the users
+     *            device. Silent pushes can be used for Remote Configuration and
+     *            Phone Home use cases.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage withSilentPush(Boolean silentPush) {
+        this.silentPush = silentPush;
+        return this;
+    }
+
+    /**
+     * The URL that points to an image used as the small icon for the
+     * notification which will be used to represent the notification in the
+     * status bar and content view
+     *
+     * @return The URL that points to an image used as the small icon for the
+     *         notification which will be used to represent the notification in
+     *         the status bar and content view
+     */
+    public String getSmallImageIconUrl() {
+        return smallImageIconUrl;
+    }
+
+    /**
+     * The URL that points to an image used as the small icon for the
+     * notification which will be used to represent the notification in the
+     * status bar and content view
+     *
+     * @param smallImageIconUrl The URL that points to an image used as the
+     *            small icon for the notification which will be used to
+     *            represent the notification in the status bar and content view
+     */
+    public void setSmallImageIconUrl(String smallImageIconUrl) {
+        this.smallImageIconUrl = smallImageIconUrl;
+    }
+
+    /**
+     * The URL that points to an image used as the small icon for the
+     * notification which will be used to represent the notification in the
+     * status bar and content view
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param smallImageIconUrl The URL that points to an image used as the
+     *            small icon for the notification which will be used to
+     *            represent the notification in the status bar and content view
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage withSmallImageIconUrl(String smallImageIconUrl) {
+        this.smallImageIconUrl = smallImageIconUrl;
+        return this;
+    }
+
+    /**
+     * Indicates a sound to play when the device receives the notification.
+     * Supports default, or the filename of a sound resource bundled in the app.
+     * Android sound files must reside in /res/raw/
+     *
+     * @return Indicates a sound to play when the device receives the
+     *         notification. Supports default, or the filename of a sound
+     *         resource bundled in the app. Android sound files must reside in
+     *         /res/raw/
+     */
+    public String getSound() {
+        return sound;
+    }
+
+    /**
+     * Indicates a sound to play when the device receives the notification.
+     * Supports default, or the filename of a sound resource bundled in the app.
+     * Android sound files must reside in /res/raw/
+     *
+     * @param sound Indicates a sound to play when the device receives the
+     *            notification. Supports default, or the filename of a sound
+     *            resource bundled in the app. Android sound files must reside
+     *            in /res/raw/
+     */
+    public void setSound(String sound) {
+        this.sound = sound;
+    }
+
+    /**
+     * Indicates a sound to play when the device receives the notification.
+     * Supports default, or the filename of a sound resource bundled in the app.
+     * Android sound files must reside in /res/raw/
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param sound Indicates a sound to play when the device receives the
+     *            notification. Supports default, or the filename of a sound
+     *            resource bundled in the app. Android sound files must reside
+     *            in /res/raw/
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage withSound(String sound) {
+        this.sound = sound;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @return Default message substitutions. Can be overridden by individual
+     *         address substitutions.
+     */
+    public java.util.Map<String, java.util.List<String>> getSubstitutions() {
+        return substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     */
+    public void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage withSubstitutions(java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * The method adds a new key-value pair into Substitutions parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into Substitutions.
+     * @param value The corresponding value of the entry to be added into
+     *            Substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage addSubstitutionsEntry(String key, java.util.List<String> value) {
+        if (null == this.substitutions) {
+            this.substitutions = new java.util.HashMap<String, java.util.List<String>>();
+        }
+        if (this.substitutions.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.substitutions.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public ADMMessage clearSubstitutionsEntries() {
+        this.substitutions = null;
+        return this;
+    }
+
+    /**
+     * The message title that displays above the message on the user's device.
+     *
+     * @return The message title that displays above the message on the user's
+     *         device.
+     */
+    public String getTitle() {
+        return title;
+    }
+
+    /**
+     * The message title that displays above the message on the user's device.
+     *
+     * @param title The message title that displays above the message on the
+     *            user's device.
+     */
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    /**
+     * The message title that displays above the message on the user's device.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param title The message title that displays above the message on the
+     *            user's device.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage withTitle(String title) {
+        this.title = title;
+        return this;
+    }
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     *
+     * @return The URL to open in the user's mobile browser. Used if the value
+     *         for Action is URL.
+     */
+    public String getUrl() {
+        return url;
+    }
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     *
+     * @param url The URL to open in the user's mobile browser. Used if the
+     *            value for Action is URL.
+     */
+    public void setUrl(String url) {
+        this.url = url;
+    }
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param url The URL to open in the user's mobile browser. Used if the
+     *            value for Action is URL.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ADMMessage withUrl(String url) {
+        this.url = url;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAction() != null)
+            sb.append("Action: " + getAction() + ",");
+        if (getBody() != null)
+            sb.append("Body: " + getBody() + ",");
+        if (getConsolidationKey() != null)
+            sb.append("ConsolidationKey: " + getConsolidationKey() + ",");
+        if (getData() != null)
+            sb.append("Data: " + getData() + ",");
+        if (getExpiresAfter() != null)
+            sb.append("ExpiresAfter: " + getExpiresAfter() + ",");
+        if (getIconReference() != null)
+            sb.append("IconReference: " + getIconReference() + ",");
+        if (getImageIconUrl() != null)
+            sb.append("ImageIconUrl: " + getImageIconUrl() + ",");
+        if (getImageUrl() != null)
+            sb.append("ImageUrl: " + getImageUrl() + ",");
+        if (getJsonData() != null)
+            sb.append("JsonData: " + getJsonData() + ",");
+        if (getMD5() != null)
+            sb.append("MD5: " + getMD5() + ",");
+        if (getRawContent() != null)
+            sb.append("RawContent: " + getRawContent() + ",");
+        if (getSilentPush() != null)
+            sb.append("SilentPush: " + getSilentPush() + ",");
+        if (getSmallImageIconUrl() != null)
+            sb.append("SmallImageIconUrl: " + getSmallImageIconUrl() + ",");
+        if (getSound() != null)
+            sb.append("Sound: " + getSound() + ",");
+        if (getSubstitutions() != null)
+            sb.append("Substitutions: " + getSubstitutions() + ",");
+        if (getTitle() != null)
+            sb.append("Title: " + getTitle() + ",");
+        if (getUrl() != null)
+            sb.append("Url: " + getUrl());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getAction() == null) ? 0 : getAction().hashCode());
+        hashCode = prime * hashCode + ((getBody() == null) ? 0 : getBody().hashCode());
+        hashCode = prime * hashCode
+                + ((getConsolidationKey() == null) ? 0 : getConsolidationKey().hashCode());
+        hashCode = prime * hashCode + ((getData() == null) ? 0 : getData().hashCode());
+        hashCode = prime * hashCode
+                + ((getExpiresAfter() == null) ? 0 : getExpiresAfter().hashCode());
+        hashCode = prime * hashCode
+                + ((getIconReference() == null) ? 0 : getIconReference().hashCode());
+        hashCode = prime * hashCode
+                + ((getImageIconUrl() == null) ? 0 : getImageIconUrl().hashCode());
+        hashCode = prime * hashCode + ((getImageUrl() == null) ? 0 : getImageUrl().hashCode());
+        hashCode = prime * hashCode + ((getJsonData() == null) ? 0 : getJsonData().hashCode());
+        hashCode = prime * hashCode + ((getMD5() == null) ? 0 : getMD5().hashCode());
+        hashCode = prime * hashCode + ((getRawContent() == null) ? 0 : getRawContent().hashCode());
+        hashCode = prime * hashCode + ((getSilentPush() == null) ? 0 : getSilentPush().hashCode());
+        hashCode = prime * hashCode
+                + ((getSmallImageIconUrl() == null) ? 0 : getSmallImageIconUrl().hashCode());
+        hashCode = prime * hashCode + ((getSound() == null) ? 0 : getSound().hashCode());
+        hashCode = prime * hashCode
+                + ((getSubstitutions() == null) ? 0 : getSubstitutions().hashCode());
+        hashCode = prime * hashCode + ((getTitle() == null) ? 0 : getTitle().hashCode());
+        hashCode = prime * hashCode + ((getUrl() == null) ? 0 : getUrl().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ADMMessage == false)
+            return false;
+        ADMMessage other = (ADMMessage) obj;
+
+        if (other.getAction() == null ^ this.getAction() == null)
+            return false;
+        if (other.getAction() != null && other.getAction().equals(this.getAction()) == false)
+            return false;
+        if (other.getBody() == null ^ this.getBody() == null)
+            return false;
+        if (other.getBody() != null && other.getBody().equals(this.getBody()) == false)
+            return false;
+        if (other.getConsolidationKey() == null ^ this.getConsolidationKey() == null)
+            return false;
+        if (other.getConsolidationKey() != null
+                && other.getConsolidationKey().equals(this.getConsolidationKey()) == false)
+            return false;
+        if (other.getData() == null ^ this.getData() == null)
+            return false;
+        if (other.getData() != null && other.getData().equals(this.getData()) == false)
+            return false;
+        if (other.getExpiresAfter() == null ^ this.getExpiresAfter() == null)
+            return false;
+        if (other.getExpiresAfter() != null
+                && other.getExpiresAfter().equals(this.getExpiresAfter()) == false)
+            return false;
+        if (other.getIconReference() == null ^ this.getIconReference() == null)
+            return false;
+        if (other.getIconReference() != null
+                && other.getIconReference().equals(this.getIconReference()) == false)
+            return false;
+        if (other.getImageIconUrl() == null ^ this.getImageIconUrl() == null)
+            return false;
+        if (other.getImageIconUrl() != null
+                && other.getImageIconUrl().equals(this.getImageIconUrl()) == false)
+            return false;
+        if (other.getImageUrl() == null ^ this.getImageUrl() == null)
+            return false;
+        if (other.getImageUrl() != null && other.getImageUrl().equals(this.getImageUrl()) == false)
+            return false;
+        if (other.getJsonData() == null ^ this.getJsonData() == null)
+            return false;
+        if (other.getJsonData() != null && other.getJsonData().equals(this.getJsonData()) == false)
+            return false;
+        if (other.getMD5() == null ^ this.getMD5() == null)
+            return false;
+        if (other.getMD5() != null && other.getMD5().equals(this.getMD5()) == false)
+            return false;
+        if (other.getRawContent() == null ^ this.getRawContent() == null)
+            return false;
+        if (other.getRawContent() != null
+                && other.getRawContent().equals(this.getRawContent()) == false)
+            return false;
+        if (other.getSilentPush() == null ^ this.getSilentPush() == null)
+            return false;
+        if (other.getSilentPush() != null
+                && other.getSilentPush().equals(this.getSilentPush()) == false)
+            return false;
+        if (other.getSmallImageIconUrl() == null ^ this.getSmallImageIconUrl() == null)
+            return false;
+        if (other.getSmallImageIconUrl() != null
+                && other.getSmallImageIconUrl().equals(this.getSmallImageIconUrl()) == false)
+            return false;
+        if (other.getSound() == null ^ this.getSound() == null)
+            return false;
+        if (other.getSound() != null && other.getSound().equals(this.getSound()) == false)
+            return false;
+        if (other.getSubstitutions() == null ^ this.getSubstitutions() == null)
+            return false;
+        if (other.getSubstitutions() != null
+                && other.getSubstitutions().equals(this.getSubstitutions()) == false)
+            return false;
+        if (other.getTitle() == null ^ this.getTitle() == null)
+            return false;
+        if (other.getTitle() != null && other.getTitle().equals(this.getTitle()) == false)
+            return false;
+        if (other.getUrl() == null ^ this.getUrl() == null)
+            return false;
+        if (other.getUrl() != null && other.getUrl().equals(this.getUrl()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSChannelRequest.java
index 13ce8ca899..6fdeb7311f 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSChannelRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSChannelRequest.java
@@ -17,12 +17,20 @@
 
 import java.io.Serializable;
 
+/**
+ * Apple Push Notification Service channel definition.
+ */
 public class APNSChannelRequest implements Serializable {
     /**
      * The distribution certificate from Apple.
      */
     private String certificate;
 
+    /**
+     * If the channel is enabled for sending messages.
+     */
+    private Boolean enabled;
+
     /**
      * The certificate private key.
      */
@@ -61,6 +69,48 @@ public APNSChannelRequest withCertificate(String certificate) {
         return this;
     }
 
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean isEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean getEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     */
+    public void setEnabled(Boolean enabled) {
+        this.enabled = enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSChannelRequest withEnabled(Boolean enabled) {
+        this.enabled = enabled;
+        return this;
+    }
+
     /**
      * The certificate private key.
      *
@@ -107,6 +157,8 @@ public String toString() {
         sb.append("{");
         if (getCertificate() != null)
             sb.append("Certificate: " + getCertificate() + ",");
+        if (getEnabled() != null)
+            sb.append("Enabled: " + getEnabled() + ",");
         if (getPrivateKey() != null)
             sb.append("PrivateKey: " + getPrivateKey());
         sb.append("}");
@@ -120,6 +172,7 @@ public int hashCode() {
 
         hashCode = prime * hashCode
                 + ((getCertificate() == null) ? 0 : getCertificate().hashCode());
+        hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
         hashCode = prime * hashCode + ((getPrivateKey() == null) ? 0 : getPrivateKey().hashCode());
         return hashCode;
     }
@@ -140,6 +193,10 @@ public boolean equals(Object obj) {
         if (other.getCertificate() != null
                 && other.getCertificate().equals(this.getCertificate()) == false)
             return false;
+        if (other.getEnabled() == null ^ this.getEnabled() == null)
+            return false;
+        if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
+            return false;
         if (other.getPrivateKey() == null ^ this.getPrivateKey() == null)
             return false;
         if (other.getPrivateKey() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSChannelResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSChannelResponse.java
index 3d34780c03..6cc0566143 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSChannelResponse.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSChannelResponse.java
@@ -17,9 +17,12 @@
 
 import java.io.Serializable;
 
+/**
+ * Apple Distribution Push Notification Service channel definition.
+ */
 public class APNSChannelResponse implements Serializable {
     /**
-     * The new value for the applicationId property for this object.
+     * The ID of the application to which the channel applies.
      */
     private String applicationId;
 
@@ -29,7 +32,12 @@
     private String creationDate;
 
     /**
-     * The new value for the id property for this object.
+     * If the channel is enabled for sending messages.
+     */
+    private Boolean enabled;
+
+    /**
+     * Channel ID. Not used. Present only for backwards compatibility.
      */
     private String id;
 
@@ -59,32 +67,32 @@
     private Integer version;
 
     /**
-     * Returns the value of the applicationId property for this object.
+     * The ID of the application to which the channel applies.
      *
-     * @return The value of the applicationId property for this object.
+     * @return The ID of the application to which the channel applies.
      */
     public String getApplicationId() {
         return applicationId;
     }
 
     /**
-     * Sets the value of applicationId
+     * The ID of the application to which the channel applies.
      *
-     * @param applicationId The new value for the applicationId property for
-     *            this object.
+     * @param applicationId The ID of the application to which the channel
+     *            applies.
      */
     public void setApplicationId(String applicationId) {
         this.applicationId = applicationId;
     }
 
     /**
-     * Sets the value of the applicationId property for this object.
+     * The ID of the application to which the channel applies.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param applicationId The new value for the applicationId property for
-     *            this object.
+     * @param applicationId The ID of the application to which the channel
+     *            applies.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -127,30 +135,72 @@ public APNSChannelResponse withCreationDate(String creationDate) {
     }
 
     /**
-     * Returns the value of the id property for this object.
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean isEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean getEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     */
+    public void setEnabled(Boolean enabled) {
+        this.enabled = enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSChannelResponse withEnabled(Boolean enabled) {
+        this.enabled = enabled;
+        return this;
+    }
+
+    /**
+     * Channel ID. Not used. Present only for backwards compatibility.
      *
-     * @return The value of the id property for this object.
+     * @return Channel ID. Not used. Present only for backwards compatibility.
      */
     public String getId() {
         return id;
     }
 
     /**
-     * Sets the value of id
+     * Channel ID. Not used. Present only for backwards compatibility.
      *
-     * @param id The new value for the id property for this object.
+     * @param id Channel ID. Not used. Present only for backwards compatibility.
      */
     public void setId(String id) {
         this.id = id;
     }
 
     /**
-     * Sets the value of the id property for this object.
+     * Channel ID. Not used. Present only for backwards compatibility.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param id The new value for the id property for this object.
+     * @param id Channel ID. Not used. Present only for backwards compatibility.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -348,6 +398,8 @@ public String toString() {
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getCreationDate() != null)
             sb.append("CreationDate: " + getCreationDate() + ",");
+        if (getEnabled() != null)
+            sb.append("Enabled: " + getEnabled() + ",");
         if (getId() != null)
             sb.append("Id: " + getId() + ",");
         if (getIsArchived() != null)
@@ -373,6 +425,7 @@ public int hashCode() {
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode
                 + ((getCreationDate() == null) ? 0 : getCreationDate().hashCode());
+        hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
         hashCode = prime * hashCode + ((getId() == null) ? 0 : getId().hashCode());
         hashCode = prime * hashCode + ((getIsArchived() == null) ? 0 : getIsArchived().hashCode());
         hashCode = prime * hashCode
@@ -405,6 +458,10 @@ public boolean equals(Object obj) {
         if (other.getCreationDate() != null
                 && other.getCreationDate().equals(this.getCreationDate()) == false)
             return false;
+        if (other.getEnabled() == null ^ this.getEnabled() == null)
+            return false;
+        if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
+            return false;
         if (other.getId() == null ^ this.getId() == null)
             return false;
         if (other.getId() != null && other.getId().equals(this.getId()) == false)
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSMessage.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSMessage.java
new file mode 100644
index 0000000000..689826e926
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSMessage.java
@@ -0,0 +1,1042 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * APNS Message.
+ */
+public class APNSMessage implements Serializable {
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     */
+    private String action;
+
+    /**
+     * Include this key when you want the system to modify the badge of your app
+     * icon. If this key is not included in the dictionary, the badge is not
+     * changed. To remove the badge, set the value of this key to 0.
+     */
+    private Integer badge;
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     */
+    private String body;
+
+    /**
+     * Provide this key with a string value that represents the notification's
+     * type. This value corresponds to the value in the identifier property of
+     * one of your app's registered categories.
+     */
+    private String category;
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     */
+    private java.util.Map<String, String> data;
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     */
+    private String jsonData;
+
+    /**
+     * The URL that points to a video used in the push notification.
+     */
+    private String mediaUrl;
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     */
+    private String rawContent;
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     */
+    private Boolean silentPush;
+
+    /**
+     * Include this key when you want the system to play a sound. The value of
+     * this key is the name of a sound file in your app's main bundle or in the
+     * Library/Sounds folder of your app's data container. If the sound file
+     * cannot be found, or if you specify defaultfor the value, the system plays
+     * the default alert sound.
+     */
+    private String sound;
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     */
+    private java.util.Map<String, java.util.List<String>> substitutions;
+
+    /**
+     * Provide this key with a string value that represents the app-specific
+     * identifier for grouping notifications. If you provide a Notification
+     * Content app extension, you can use this value to group your notifications
+     * together.
+     */
+    private String threadId;
+
+    /**
+     * The message title that displays above the message on the user's device.
+     */
+    private String title;
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     */
+    private String url;
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @return The action that occurs if the user taps a push notification
+     *         delivered by the campaign: OPEN_APP - Your app launches, or it
+     *         becomes the foreground app if it has been sent to the background.
+     *         This is the default action. DEEP_LINK - Uses deep linking
+     *         features in iOS and Android to open your app and display a
+     *         designated user interface within the app. URL - The default
+     *         mobile browser on the user's device launches and opens a web page
+     *         at the URL you specify. Possible values include: OPEN_APP |
+     *         DEEP_LINK | URL
+     * @see Action
+     */
+    public String getAction() {
+        return action;
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @see Action
+     */
+    public void setAction(String action) {
+        this.action = action;
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see Action
+     */
+    public APNSMessage withAction(String action) {
+        this.action = action;
+        return this;
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @see Action
+     */
+    public void setAction(Action action) {
+        this.action = action.toString();
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see Action
+     */
+    public APNSMessage withAction(Action action) {
+        this.action = action.toString();
+        return this;
+    }
+
+    /**
+     * Include this key when you want the system to modify the badge of your app
+     * icon. If this key is not included in the dictionary, the badge is not
+     * changed. To remove the badge, set the value of this key to 0.
+     *
+     * @return Include this key when you want the system to modify the badge of
+     *         your app icon. If this key is not included in the dictionary, the
+     *         badge is not changed. To remove the badge, set the value of this
+     *         key to 0.
+     */
+    public Integer getBadge() {
+        return badge;
+    }
+
+    /**
+     * Include this key when you want the system to modify the badge of your app
+     * icon. If this key is not included in the dictionary, the badge is not
+     * changed. To remove the badge, set the value of this key to 0.
+     *
+     * @param badge Include this key when you want the system to modify the
+     *            badge of your app icon. If this key is not included in the
+     *            dictionary, the badge is not changed. To remove the badge, set
+     *            the value of this key to 0.
+     */
+    public void setBadge(Integer badge) {
+        this.badge = badge;
+    }
+
+    /**
+     * Include this key when you want the system to modify the badge of your app
+     * icon. If this key is not included in the dictionary, the badge is not
+     * changed. To remove the badge, set the value of this key to 0.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param badge Include this key when you want the system to modify the
+     *            badge of your app icon. If this key is not included in the
+     *            dictionary, the badge is not changed. To remove the badge, set
+     *            the value of this key to 0.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSMessage withBadge(Integer badge) {
+        this.badge = badge;
+        return this;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @return The message body of the notification, the email body or the text
+     *         message.
+     */
+    public String getBody() {
+        return body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     */
+    public void setBody(String body) {
+        this.body = body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSMessage withBody(String body) {
+        this.body = body;
+        return this;
+    }
+
+    /**
+     * Provide this key with a string value that represents the notification's
+     * type. This value corresponds to the value in the identifier property of
+     * one of your app's registered categories.
+     *
+     * @return Provide this key with a string value that represents the
+     *         notification's type. This value corresponds to the value in the
+     *         identifier property of one of your app's registered categories.
+     */
+    public String getCategory() {
+        return category;
+    }
+
+    /**
+     * Provide this key with a string value that represents the notification's
+     * type. This value corresponds to the value in the identifier property of
+     * one of your app's registered categories.
+     *
+     * @param category Provide this key with a string value that represents the
+     *            notification's type. This value corresponds to the value in
+     *            the identifier property of one of your app's registered
+     *            categories.
+     */
+    public void setCategory(String category) {
+        this.category = category;
+    }
+
+    /**
+     * Provide this key with a string value that represents the notification's
+     * type. This value corresponds to the value in the identifier property of
+     * one of your app's registered categories.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param category Provide this key with a string value that represents the
+     *            notification's type. This value corresponds to the value in
+     *            the identifier property of one of your app's registered
+     *            categories.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSMessage withCategory(String category) {
+        this.category = category;
+        return this;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @return The data payload used for a silent push. This payload is added to
+     *         the notifications' data.pinpoint.jsonBody' object
+     */
+    public java.util.Map<String, String> getData() {
+        return data;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @param data The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     */
+    public void setData(java.util.Map<String, String> data) {
+        this.data = data;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param data The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSMessage withData(java.util.Map<String, String> data) {
+        this.data = data;
+        return this;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     * <p>
+     * The method adds a new key-value pair into Data parameter, and returns a
+     * reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Data.
+     * @param value The corresponding value of the entry to be added into Data.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSMessage addDataEntry(String key, String value) {
+        if (null == this.data) {
+            this.data = new java.util.HashMap<String, String>();
+        }
+        if (this.data.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.data.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Data.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public APNSMessage clearDataEntries() {
+        this.data = null;
+        return this;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @return The data payload used for a silent push. This payload is added to
+     *         the notifications' data.pinpoint.jsonBody' object
+     */
+    public String getJsonData() {
+        return jsonData;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @param jsonData The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     */
+    public void setJsonData(String jsonData) {
+        this.jsonData = jsonData;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param jsonData The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSMessage withJsonData(String jsonData) {
+        this.jsonData = jsonData;
+        return this;
+    }
+
+    /**
+     * The URL that points to a video used in the push notification.
+     *
+     * @return The URL that points to a video used in the push notification.
+     */
+    public String getMediaUrl() {
+        return mediaUrl;
+    }
+
+    /**
+     * The URL that points to a video used in the push notification.
+     *
+     * @param mediaUrl The URL that points to a video used in the push
+     *            notification.
+     */
+    public void setMediaUrl(String mediaUrl) {
+        this.mediaUrl = mediaUrl;
+    }
+
+    /**
+     * The URL that points to a video used in the push notification.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param mediaUrl The URL that points to a video used in the push
+     *            notification.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSMessage withMediaUrl(String mediaUrl) {
+        this.mediaUrl = mediaUrl;
+        return this;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     *
+     * @return The Raw JSON formatted string to be used as the payload. This
+     *         value overrides the message.
+     */
+    public String getRawContent() {
+        return rawContent;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     *
+     * @param rawContent The Raw JSON formatted string to be used as the
+     *            payload. This value overrides the message.
+     */
+    public void setRawContent(String rawContent) {
+        this.rawContent = rawContent;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param rawContent The Raw JSON formatted string to be used as the
+     *            payload. This value overrides the message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSMessage withRawContent(String rawContent) {
+        this.rawContent = rawContent;
+        return this;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     *
+     * @return Indicates if the message should display on the users device.
+     *         Silent pushes can be used for Remote Configuration and Phone Home
+     *         use cases.
+     */
+    public Boolean isSilentPush() {
+        return silentPush;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     *
+     * @return Indicates if the message should display on the users device.
+     *         Silent pushes can be used for Remote Configuration and Phone Home
+     *         use cases.
+     */
+    public Boolean getSilentPush() {
+        return silentPush;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     *
+     * @param silentPush Indicates if the message should display on the users
+     *            device. Silent pushes can be used for Remote Configuration and
+     *            Phone Home use cases.
+     */
+    public void setSilentPush(Boolean silentPush) {
+        this.silentPush = silentPush;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param silentPush Indicates if the message should display on the users
+     *            device. Silent pushes can be used for Remote Configuration and
+     *            Phone Home use cases.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSMessage withSilentPush(Boolean silentPush) {
+        this.silentPush = silentPush;
+        return this;
+    }
+
+    /**
+     * Include this key when you want the system to play a sound. The value of
+     * this key is the name of a sound file in your app's main bundle or in the
+     * Library/Sounds folder of your app's data container. If the sound file
+     * cannot be found, or if you specify defaultfor the value, the system plays
+     * the default alert sound.
+     *
+     * @return Include this key when you want the system to play a sound. The
+     *         value of this key is the name of a sound file in your app's main
+     *         bundle or in the Library/Sounds folder of your app's data
+     *         container. If the sound file cannot be found, or if you specify
+     *         defaultfor the value, the system plays the default alert sound.
+     */
+    public String getSound() {
+        return sound;
+    }
+
+    /**
+     * Include this key when you want the system to play a sound. The value of
+     * this key is the name of a sound file in your app's main bundle or in the
+     * Library/Sounds folder of your app's data container. If the sound file
+     * cannot be found, or if you specify defaultfor the value, the system plays
+     * the default alert sound.
+     *
+     * @param sound Include this key when you want the system to play a sound.
+     *            The value of this key is the name of a sound file in your
+     *            app's main bundle or in the Library/Sounds folder of your
+     *            app's data container. If the sound file cannot be found, or if
+     *            you specify defaultfor the value, the system plays the default
+     *            alert sound.
+     */
+    public void setSound(String sound) {
+        this.sound = sound;
+    }
+
+    /**
+     * Include this key when you want the system to play a sound. The value of
+     * this key is the name of a sound file in your app's main bundle or in the
+     * Library/Sounds folder of your app's data container. If the sound file
+     * cannot be found, or if you specify defaultfor the value, the system plays
+     * the default alert sound.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param sound Include this key when you want the system to play a sound.
+     *            The value of this key is the name of a sound file in your
+     *            app's main bundle or in the Library/Sounds folder of your
+     *            app's data container. If the sound file cannot be found, or if
+     *            you specify defaultfor the value, the system plays the default
+     *            alert sound.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSMessage withSound(String sound) {
+        this.sound = sound;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @return Default message substitutions. Can be overridden by individual
+     *         address substitutions.
+     */
+    public java.util.Map<String, java.util.List<String>> getSubstitutions() {
+        return substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     */
+    public void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSMessage withSubstitutions(java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * The method adds a new key-value pair into Substitutions parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into Substitutions.
+     * @param value The corresponding value of the entry to be added into
+     *            Substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSMessage addSubstitutionsEntry(String key, java.util.List<String> value) {
+        if (null == this.substitutions) {
+            this.substitutions = new java.util.HashMap<String, java.util.List<String>>();
+        }
+        if (this.substitutions.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.substitutions.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public APNSMessage clearSubstitutionsEntries() {
+        this.substitutions = null;
+        return this;
+    }
+
+    /**
+     * Provide this key with a string value that represents the app-specific
+     * identifier for grouping notifications. If you provide a Notification
+     * Content app extension, you can use this value to group your notifications
+     * together.
+     *
+     * @return Provide this key with a string value that represents the
+     *         app-specific identifier for grouping notifications. If you
+     *         provide a Notification Content app extension, you can use this
+     *         value to group your notifications together.
+     */
+    public String getThreadId() {
+        return threadId;
+    }
+
+    /**
+     * Provide this key with a string value that represents the app-specific
+     * identifier for grouping notifications. If you provide a Notification
+     * Content app extension, you can use this value to group your notifications
+     * together.
+     *
+     * @param threadId Provide this key with a string value that represents the
+     *            app-specific identifier for grouping notifications. If you
+     *            provide a Notification Content app extension, you can use this
+     *            value to group your notifications together.
+     */
+    public void setThreadId(String threadId) {
+        this.threadId = threadId;
+    }
+
+    /**
+     * Provide this key with a string value that represents the app-specific
+     * identifier for grouping notifications. If you provide a Notification
+     * Content app extension, you can use this value to group your notifications
+     * together.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param threadId Provide this key with a string value that represents the
+     *            app-specific identifier for grouping notifications. If you
+     *            provide a Notification Content app extension, you can use this
+     *            value to group your notifications together.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSMessage withThreadId(String threadId) {
+        this.threadId = threadId;
+        return this;
+    }
+
+    /**
+     * The message title that displays above the message on the user's device.
+     *
+     * @return The message title that displays above the message on the user's
+     *         device.
+     */
+    public String getTitle() {
+        return title;
+    }
+
+    /**
+     * The message title that displays above the message on the user's device.
+     *
+     * @param title The message title that displays above the message on the
+     *            user's device.
+     */
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    /**
+     * The message title that displays above the message on the user's device.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param title The message title that displays above the message on the
+     *            user's device.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSMessage withTitle(String title) {
+        this.title = title;
+        return this;
+    }
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     *
+     * @return The URL to open in the user's mobile browser. Used if the value
+     *         for Action is URL.
+     */
+    public String getUrl() {
+        return url;
+    }
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     *
+     * @param url The URL to open in the user's mobile browser. Used if the
+     *            value for Action is URL.
+     */
+    public void setUrl(String url) {
+        this.url = url;
+    }
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param url The URL to open in the user's mobile browser. Used if the
+     *            value for Action is URL.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSMessage withUrl(String url) {
+        this.url = url;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAction() != null)
+            sb.append("Action: " + getAction() + ",");
+        if (getBadge() != null)
+            sb.append("Badge: " + getBadge() + ",");
+        if (getBody() != null)
+            sb.append("Body: " + getBody() + ",");
+        if (getCategory() != null)
+            sb.append("Category: " + getCategory() + ",");
+        if (getData() != null)
+            sb.append("Data: " + getData() + ",");
+        if (getJsonData() != null)
+            sb.append("JsonData: " + getJsonData() + ",");
+        if (getMediaUrl() != null)
+            sb.append("MediaUrl: " + getMediaUrl() + ",");
+        if (getRawContent() != null)
+            sb.append("RawContent: " + getRawContent() + ",");
+        if (getSilentPush() != null)
+            sb.append("SilentPush: " + getSilentPush() + ",");
+        if (getSound() != null)
+            sb.append("Sound: " + getSound() + ",");
+        if (getSubstitutions() != null)
+            sb.append("Substitutions: " + getSubstitutions() + ",");
+        if (getThreadId() != null)
+            sb.append("ThreadId: " + getThreadId() + ",");
+        if (getTitle() != null)
+            sb.append("Title: " + getTitle() + ",");
+        if (getUrl() != null)
+            sb.append("Url: " + getUrl());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getAction() == null) ? 0 : getAction().hashCode());
+        hashCode = prime * hashCode + ((getBadge() == null) ? 0 : getBadge().hashCode());
+        hashCode = prime * hashCode + ((getBody() == null) ? 0 : getBody().hashCode());
+        hashCode = prime * hashCode + ((getCategory() == null) ? 0 : getCategory().hashCode());
+        hashCode = prime * hashCode + ((getData() == null) ? 0 : getData().hashCode());
+        hashCode = prime * hashCode + ((getJsonData() == null) ? 0 : getJsonData().hashCode());
+        hashCode = prime * hashCode + ((getMediaUrl() == null) ? 0 : getMediaUrl().hashCode());
+        hashCode = prime * hashCode + ((getRawContent() == null) ? 0 : getRawContent().hashCode());
+        hashCode = prime * hashCode + ((getSilentPush() == null) ? 0 : getSilentPush().hashCode());
+        hashCode = prime * hashCode + ((getSound() == null) ? 0 : getSound().hashCode());
+        hashCode = prime * hashCode
+                + ((getSubstitutions() == null) ? 0 : getSubstitutions().hashCode());
+        hashCode = prime * hashCode + ((getThreadId() == null) ? 0 : getThreadId().hashCode());
+        hashCode = prime * hashCode + ((getTitle() == null) ? 0 : getTitle().hashCode());
+        hashCode = prime * hashCode + ((getUrl() == null) ? 0 : getUrl().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof APNSMessage == false)
+            return false;
+        APNSMessage other = (APNSMessage) obj;
+
+        if (other.getAction() == null ^ this.getAction() == null)
+            return false;
+        if (other.getAction() != null && other.getAction().equals(this.getAction()) == false)
+            return false;
+        if (other.getBadge() == null ^ this.getBadge() == null)
+            return false;
+        if (other.getBadge() != null && other.getBadge().equals(this.getBadge()) == false)
+            return false;
+        if (other.getBody() == null ^ this.getBody() == null)
+            return false;
+        if (other.getBody() != null && other.getBody().equals(this.getBody()) == false)
+            return false;
+        if (other.getCategory() == null ^ this.getCategory() == null)
+            return false;
+        if (other.getCategory() != null && other.getCategory().equals(this.getCategory()) == false)
+            return false;
+        if (other.getData() == null ^ this.getData() == null)
+            return false;
+        if (other.getData() != null && other.getData().equals(this.getData()) == false)
+            return false;
+        if (other.getJsonData() == null ^ this.getJsonData() == null)
+            return false;
+        if (other.getJsonData() != null && other.getJsonData().equals(this.getJsonData()) == false)
+            return false;
+        if (other.getMediaUrl() == null ^ this.getMediaUrl() == null)
+            return false;
+        if (other.getMediaUrl() != null && other.getMediaUrl().equals(this.getMediaUrl()) == false)
+            return false;
+        if (other.getRawContent() == null ^ this.getRawContent() == null)
+            return false;
+        if (other.getRawContent() != null
+                && other.getRawContent().equals(this.getRawContent()) == false)
+            return false;
+        if (other.getSilentPush() == null ^ this.getSilentPush() == null)
+            return false;
+        if (other.getSilentPush() != null
+                && other.getSilentPush().equals(this.getSilentPush()) == false)
+            return false;
+        if (other.getSound() == null ^ this.getSound() == null)
+            return false;
+        if (other.getSound() != null && other.getSound().equals(this.getSound()) == false)
+            return false;
+        if (other.getSubstitutions() == null ^ this.getSubstitutions() == null)
+            return false;
+        if (other.getSubstitutions() != null
+                && other.getSubstitutions().equals(this.getSubstitutions()) == false)
+            return false;
+        if (other.getThreadId() == null ^ this.getThreadId() == null)
+            return false;
+        if (other.getThreadId() != null && other.getThreadId().equals(this.getThreadId()) == false)
+            return false;
+        if (other.getTitle() == null ^ this.getTitle() == null)
+            return false;
+        if (other.getTitle() != null && other.getTitle().equals(this.getTitle()) == false)
+            return false;
+        if (other.getUrl() == null ^ this.getUrl() == null)
+            return false;
+        if (other.getUrl() != null && other.getUrl().equals(this.getUrl()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSSandboxChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSSandboxChannelRequest.java
new file mode 100644
index 0000000000..56d62c66a0
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSSandboxChannelRequest.java
@@ -0,0 +1,207 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Apple Development Push Notification Service channel definition.
+ */
+public class APNSSandboxChannelRequest implements Serializable {
+    /**
+     * The distribution certificate from Apple.
+     */
+    private String certificate;
+
+    /**
+     * If the channel is enabled for sending messages.
+     */
+    private Boolean enabled;
+
+    /**
+     * The certificate private key.
+     */
+    private String privateKey;
+
+    /**
+     * The distribution certificate from Apple.
+     *
+     * @return The distribution certificate from Apple.
+     */
+    public String getCertificate() {
+        return certificate;
+    }
+
+    /**
+     * The distribution certificate from Apple.
+     *
+     * @param certificate The distribution certificate from Apple.
+     */
+    public void setCertificate(String certificate) {
+        this.certificate = certificate;
+    }
+
+    /**
+     * The distribution certificate from Apple.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param certificate The distribution certificate from Apple.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSSandboxChannelRequest withCertificate(String certificate) {
+        this.certificate = certificate;
+        return this;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean isEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean getEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     */
+    public void setEnabled(Boolean enabled) {
+        this.enabled = enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSSandboxChannelRequest withEnabled(Boolean enabled) {
+        this.enabled = enabled;
+        return this;
+    }
+
+    /**
+     * The certificate private key.
+     *
+     * @return The certificate private key.
+     */
+    public String getPrivateKey() {
+        return privateKey;
+    }
+
+    /**
+     * The certificate private key.
+     *
+     * @param privateKey The certificate private key.
+     */
+    public void setPrivateKey(String privateKey) {
+        this.privateKey = privateKey;
+    }
+
+    /**
+     * The certificate private key.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param privateKey The certificate private key.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSSandboxChannelRequest withPrivateKey(String privateKey) {
+        this.privateKey = privateKey;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getCertificate() != null)
+            sb.append("Certificate: " + getCertificate() + ",");
+        if (getEnabled() != null)
+            sb.append("Enabled: " + getEnabled() + ",");
+        if (getPrivateKey() != null)
+            sb.append("PrivateKey: " + getPrivateKey());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getCertificate() == null) ? 0 : getCertificate().hashCode());
+        hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
+        hashCode = prime * hashCode + ((getPrivateKey() == null) ? 0 : getPrivateKey().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof APNSSandboxChannelRequest == false)
+            return false;
+        APNSSandboxChannelRequest other = (APNSSandboxChannelRequest) obj;
+
+        if (other.getCertificate() == null ^ this.getCertificate() == null)
+            return false;
+        if (other.getCertificate() != null
+                && other.getCertificate().equals(this.getCertificate()) == false)
+            return false;
+        if (other.getEnabled() == null ^ this.getEnabled() == null)
+            return false;
+        if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
+            return false;
+        if (other.getPrivateKey() == null ^ this.getPrivateKey() == null)
+            return false;
+        if (other.getPrivateKey() != null
+                && other.getPrivateKey().equals(this.getPrivateKey()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSSandboxChannelResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSSandboxChannelResponse.java
new file mode 100644
index 0000000000..d0c2c5866e
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/APNSSandboxChannelResponse.java
@@ -0,0 +1,492 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Apple Development Push Notification Service channel definition.
+ */
+public class APNSSandboxChannelResponse implements Serializable {
+    /**
+     * Application id
+     */
+    private String applicationId;
+
+    /**
+     * When was this segment created
+     */
+    private String creationDate;
+
+    /**
+     * If the channel is enabled for sending messages.
+     */
+    private Boolean enabled;
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     */
+    private String id;
+
+    /**
+     * Is this channel archived
+     */
+    private Boolean isArchived;
+
+    /**
+     * Who last updated this entry
+     */
+    private String lastModifiedBy;
+
+    /**
+     * Last date this was updated
+     */
+    private String lastModifiedDate;
+
+    /**
+     * The platform type. Will be APNS_SANDBOX.
+     */
+    private String platform;
+
+    /**
+     * Version of channel
+     */
+    private Integer version;
+
+    /**
+     * Application id
+     *
+     * @return Application id
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Application id
+     *
+     * @param applicationId Application id
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Application id
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId Application id
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSSandboxChannelResponse withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * When was this segment created
+     *
+     * @return When was this segment created
+     */
+    public String getCreationDate() {
+        return creationDate;
+    }
+
+    /**
+     * When was this segment created
+     *
+     * @param creationDate When was this segment created
+     */
+    public void setCreationDate(String creationDate) {
+        this.creationDate = creationDate;
+    }
+
+    /**
+     * When was this segment created
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param creationDate When was this segment created
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSSandboxChannelResponse withCreationDate(String creationDate) {
+        this.creationDate = creationDate;
+        return this;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean isEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean getEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     */
+    public void setEnabled(Boolean enabled) {
+        this.enabled = enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSSandboxChannelResponse withEnabled(Boolean enabled) {
+        this.enabled = enabled;
+        return this;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     *
+     * @return Channel ID. Not used, only for backwards compatibility.
+     */
+    public String getId() {
+        return id;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     *
+     * @param id Channel ID. Not used, only for backwards compatibility.
+     */
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param id Channel ID. Not used, only for backwards compatibility.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSSandboxChannelResponse withId(String id) {
+        this.id = id;
+        return this;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @return Is this channel archived
+     */
+    public Boolean isIsArchived() {
+        return isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @return Is this channel archived
+     */
+    public Boolean getIsArchived() {
+        return isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @param isArchived Is this channel archived
+     */
+    public void setIsArchived(Boolean isArchived) {
+        this.isArchived = isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param isArchived Is this channel archived
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSSandboxChannelResponse withIsArchived(Boolean isArchived) {
+        this.isArchived = isArchived;
+        return this;
+    }
+
+    /**
+     * Who last updated this entry
+     *
+     * @return Who last updated this entry
+     */
+    public String getLastModifiedBy() {
+        return lastModifiedBy;
+    }
+
+    /**
+     * Who last updated this entry
+     *
+     * @param lastModifiedBy Who last updated this entry
+     */
+    public void setLastModifiedBy(String lastModifiedBy) {
+        this.lastModifiedBy = lastModifiedBy;
+    }
+
+    /**
+     * Who last updated this entry
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastModifiedBy Who last updated this entry
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSSandboxChannelResponse withLastModifiedBy(String lastModifiedBy) {
+        this.lastModifiedBy = lastModifiedBy;
+        return this;
+    }
+
+    /**
+     * Last date this was updated
+     *
+     * @return Last date this was updated
+     */
+    public String getLastModifiedDate() {
+        return lastModifiedDate;
+    }
+
+    /**
+     * Last date this was updated
+     *
+     * @param lastModifiedDate Last date this was updated
+     */
+    public void setLastModifiedDate(String lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+    }
+
+    /**
+     * Last date this was updated
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastModifiedDate Last date this was updated
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSSandboxChannelResponse withLastModifiedDate(String lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+        return this;
+    }
+
+    /**
+     * The platform type. Will be APNS_SANDBOX.
+     *
+     * @return The platform type. Will be APNS_SANDBOX.
+     */
+    public String getPlatform() {
+        return platform;
+    }
+
+    /**
+     * The platform type. Will be APNS_SANDBOX.
+     *
+     * @param platform The platform type. Will be APNS_SANDBOX.
+     */
+    public void setPlatform(String platform) {
+        this.platform = platform;
+    }
+
+    /**
+     * The platform type. Will be APNS_SANDBOX.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param platform The platform type. Will be APNS_SANDBOX.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSSandboxChannelResponse withPlatform(String platform) {
+        this.platform = platform;
+        return this;
+    }
+
+    /**
+     * Version of channel
+     *
+     * @return Version of channel
+     */
+    public Integer getVersion() {
+        return version;
+    }
+
+    /**
+     * Version of channel
+     *
+     * @param version Version of channel
+     */
+    public void setVersion(Integer version) {
+        this.version = version;
+    }
+
+    /**
+     * Version of channel
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param version Version of channel
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public APNSSandboxChannelResponse withVersion(Integer version) {
+        this.version = version;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getCreationDate() != null)
+            sb.append("CreationDate: " + getCreationDate() + ",");
+        if (getEnabled() != null)
+            sb.append("Enabled: " + getEnabled() + ",");
+        if (getId() != null)
+            sb.append("Id: " + getId() + ",");
+        if (getIsArchived() != null)
+            sb.append("IsArchived: " + getIsArchived() + ",");
+        if (getLastModifiedBy() != null)
+            sb.append("LastModifiedBy: " + getLastModifiedBy() + ",");
+        if (getLastModifiedDate() != null)
+            sb.append("LastModifiedDate: " + getLastModifiedDate() + ",");
+        if (getPlatform() != null)
+            sb.append("Platform: " + getPlatform() + ",");
+        if (getVersion() != null)
+            sb.append("Version: " + getVersion());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime * hashCode
+                + ((getCreationDate() == null) ? 0 : getCreationDate().hashCode());
+        hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
+        hashCode = prime * hashCode + ((getId() == null) ? 0 : getId().hashCode());
+        hashCode = prime * hashCode + ((getIsArchived() == null) ? 0 : getIsArchived().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastModifiedBy() == null) ? 0 : getLastModifiedBy().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastModifiedDate() == null) ? 0 : getLastModifiedDate().hashCode());
+        hashCode = prime * hashCode + ((getPlatform() == null) ? 0 : getPlatform().hashCode());
+        hashCode = prime * hashCode + ((getVersion() == null) ? 0 : getVersion().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof APNSSandboxChannelResponse == false)
+            return false;
+        APNSSandboxChannelResponse other = (APNSSandboxChannelResponse) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        if (other.getCreationDate() == null ^ this.getCreationDate() == null)
+            return false;
+        if (other.getCreationDate() != null
+                && other.getCreationDate().equals(this.getCreationDate()) == false)
+            return false;
+        if (other.getEnabled() == null ^ this.getEnabled() == null)
+            return false;
+        if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
+            return false;
+        if (other.getId() == null ^ this.getId() == null)
+            return false;
+        if (other.getId() != null && other.getId().equals(this.getId()) == false)
+            return false;
+        if (other.getIsArchived() == null ^ this.getIsArchived() == null)
+            return false;
+        if (other.getIsArchived() != null
+                && other.getIsArchived().equals(this.getIsArchived()) == false)
+            return false;
+        if (other.getLastModifiedBy() == null ^ this.getLastModifiedBy() == null)
+            return false;
+        if (other.getLastModifiedBy() != null
+                && other.getLastModifiedBy().equals(this.getLastModifiedBy()) == false)
+            return false;
+        if (other.getLastModifiedDate() == null ^ this.getLastModifiedDate() == null)
+            return false;
+        if (other.getLastModifiedDate() != null
+                && other.getLastModifiedDate().equals(this.getLastModifiedDate()) == false)
+            return false;
+        if (other.getPlatform() == null ^ this.getPlatform() == null)
+            return false;
+        if (other.getPlatform() != null && other.getPlatform().equals(this.getPlatform()) == false)
+            return false;
+        if (other.getVersion() == null ^ this.getVersion() == null)
+            return false;
+        if (other.getVersion() != null && other.getVersion().equals(this.getVersion()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ActivitiesResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ActivitiesResponse.java
index 372204436c..a95bf346d2 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ActivitiesResponse.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ActivitiesResponse.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Activities for campaign.
+ */
 public class ActivitiesResponse implements Serializable {
     /**
      * List of campaign activities
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ActivityResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ActivityResponse.java
index 47bb398c08..62ac6d6160 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ActivityResponse.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ActivityResponse.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Activity definition
+ */
 public class ActivityResponse implements Serializable {
     /**
      * The ID of the application to which the campaign applies.
@@ -66,6 +69,16 @@
      */
     private Integer successfulEndpointCount;
 
+    /**
+     * The total number of timezones completed.
+     */
+    private Integer timezonesCompletedCount;
+
+    /**
+     * The total number of unique timezones present in the segment.
+     */
+    private Integer timezonesTotalCount;
+
     /**
      * The total number of endpoints to which the campaign attempts to deliver
      * messages.
@@ -399,6 +412,74 @@ public ActivityResponse withSuccessfulEndpointCount(Integer successfulEndpointCo
         return this;
     }
 
+    /**
+     * The total number of timezones completed.
+     *
+     * @return The total number of timezones completed.
+     */
+    public Integer getTimezonesCompletedCount() {
+        return timezonesCompletedCount;
+    }
+
+    /**
+     * The total number of timezones completed.
+     *
+     * @param timezonesCompletedCount The total number of timezones completed.
+     */
+    public void setTimezonesCompletedCount(Integer timezonesCompletedCount) {
+        this.timezonesCompletedCount = timezonesCompletedCount;
+    }
+
+    /**
+     * The total number of timezones completed.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param timezonesCompletedCount The total number of timezones completed.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ActivityResponse withTimezonesCompletedCount(Integer timezonesCompletedCount) {
+        this.timezonesCompletedCount = timezonesCompletedCount;
+        return this;
+    }
+
+    /**
+     * The total number of unique timezones present in the segment.
+     *
+     * @return The total number of unique timezones present in the segment.
+     */
+    public Integer getTimezonesTotalCount() {
+        return timezonesTotalCount;
+    }
+
+    /**
+     * The total number of unique timezones present in the segment.
+     *
+     * @param timezonesTotalCount The total number of unique timezones present
+     *            in the segment.
+     */
+    public void setTimezonesTotalCount(Integer timezonesTotalCount) {
+        this.timezonesTotalCount = timezonesTotalCount;
+    }
+
+    /**
+     * The total number of unique timezones present in the segment.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param timezonesTotalCount The total number of unique timezones present
+     *            in the segment.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ActivityResponse withTimezonesTotalCount(Integer timezonesTotalCount) {
+        this.timezonesTotalCount = timezonesTotalCount;
+        return this;
+    }
+
     /**
      * The total number of endpoints to which the campaign attempts to deliver
      * messages.
@@ -502,6 +583,10 @@ public String toString() {
             sb.append("State: " + getState() + ",");
         if (getSuccessfulEndpointCount() != null)
             sb.append("SuccessfulEndpointCount: " + getSuccessfulEndpointCount() + ",");
+        if (getTimezonesCompletedCount() != null)
+            sb.append("TimezonesCompletedCount: " + getTimezonesCompletedCount() + ",");
+        if (getTimezonesTotalCount() != null)
+            sb.append("TimezonesTotalCount: " + getTimezonesTotalCount() + ",");
         if (getTotalEndpointCount() != null)
             sb.append("TotalEndpointCount: " + getTotalEndpointCount() + ",");
         if (getTreatmentId() != null)
@@ -529,6 +614,12 @@ public int hashCode() {
                 * hashCode
                 + ((getSuccessfulEndpointCount() == null) ? 0 : getSuccessfulEndpointCount()
                         .hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getTimezonesCompletedCount() == null) ? 0 : getTimezonesCompletedCount()
+                        .hashCode());
+        hashCode = prime * hashCode
+                + ((getTimezonesTotalCount() == null) ? 0 : getTimezonesTotalCount().hashCode());
         hashCode = prime * hashCode
                 + ((getTotalEndpointCount() == null) ? 0 : getTotalEndpointCount().hashCode());
         hashCode = prime * hashCode
@@ -587,6 +678,16 @@ public boolean equals(Object obj) {
         if (other.getSuccessfulEndpointCount() != null
                 && other.getSuccessfulEndpointCount().equals(this.getSuccessfulEndpointCount()) == false)
             return false;
+        if (other.getTimezonesCompletedCount() == null ^ this.getTimezonesCompletedCount() == null)
+            return false;
+        if (other.getTimezonesCompletedCount() != null
+                && other.getTimezonesCompletedCount().equals(this.getTimezonesCompletedCount()) == false)
+            return false;
+        if (other.getTimezonesTotalCount() == null ^ this.getTimezonesTotalCount() == null)
+            return false;
+        if (other.getTimezonesTotalCount() != null
+                && other.getTimezonesTotalCount().equals(this.getTimezonesTotalCount()) == false)
+            return false;
         if (other.getTotalEndpointCount() == null ^ this.getTotalEndpointCount() == null)
             return false;
         if (other.getTotalEndpointCount() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/AddressConfiguration.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/AddressConfiguration.java
new file mode 100644
index 0000000000..d01309f25a
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/AddressConfiguration.java
@@ -0,0 +1,512 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Address configuration.
+ */
+public class AddressConfiguration implements Serializable {
+    /**
+     * Body override. If specified will override default body.
+     */
+    private String bodyOverride;
+
+    /**
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
+     */
+    private String channelType;
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message
+     * for this address. This payload is added to the push notification's
+     * 'data.pinpoint' object or added to the email/sms delivery receipt event
+     * attributes.
+     */
+    private java.util.Map<String, String> context;
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     */
+    private String rawContent;
+
+    /**
+     * A map of substitution values for the message to be merged with the
+     * DefaultMessage's substitutions. Substitutions on this map take precedence
+     * over the all other substitutions.
+     */
+    private java.util.Map<String, java.util.List<String>> substitutions;
+
+    /**
+     * Title override. If specified will override default title if applicable.
+     */
+    private String titleOverride;
+
+    /**
+     * Body override. If specified will override default body.
+     *
+     * @return Body override. If specified will override default body.
+     */
+    public String getBodyOverride() {
+        return bodyOverride;
+    }
+
+    /**
+     * Body override. If specified will override default body.
+     *
+     * @param bodyOverride Body override. If specified will override default
+     *            body.
+     */
+    public void setBodyOverride(String bodyOverride) {
+        this.bodyOverride = bodyOverride;
+    }
+
+    /**
+     * Body override. If specified will override default body.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param bodyOverride Body override. If specified will override default
+     *            body.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AddressConfiguration withBodyOverride(String bodyOverride) {
+        this.bodyOverride = bodyOverride;
+        return this;
+    }
+
+    /**
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
+     *
+     * @return The channel type. Valid values: GCM | APNS | SMS | EMAIL
+     * @see ChannelType
+     */
+    public String getChannelType() {
+        return channelType;
+    }
+
+    /**
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
+     *
+     * @param channelType The channel type. Valid values: GCM | APNS | SMS |
+     *            EMAIL
+     * @see ChannelType
+     */
+    public void setChannelType(String channelType) {
+        this.channelType = channelType;
+    }
+
+    /**
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
+     *
+     * @param channelType The channel type. Valid values: GCM | APNS | SMS |
+     *            EMAIL
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see ChannelType
+     */
+    public AddressConfiguration withChannelType(String channelType) {
+        this.channelType = channelType;
+        return this;
+    }
+
+    /**
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
+     *
+     * @param channelType The channel type. Valid values: GCM | APNS | SMS |
+     *            EMAIL
+     * @see ChannelType
+     */
+    public void setChannelType(ChannelType channelType) {
+        this.channelType = channelType.toString();
+    }
+
+    /**
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
+     *
+     * @param channelType The channel type. Valid values: GCM | APNS | SMS |
+     *            EMAIL
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see ChannelType
+     */
+    public AddressConfiguration withChannelType(ChannelType channelType) {
+        this.channelType = channelType.toString();
+        return this;
+    }
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message
+     * for this address. This payload is added to the push notification's
+     * 'data.pinpoint' object or added to the email/sms delivery receipt event
+     * attributes.
+     *
+     * @return A map of custom attributes to attributes to be attached to the
+     *         message for this address. This payload is added to the push
+     *         notification's 'data.pinpoint' object or added to the email/sms
+     *         delivery receipt event attributes.
+     */
+    public java.util.Map<String, String> getContext() {
+        return context;
+    }
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message
+     * for this address. This payload is added to the push notification's
+     * 'data.pinpoint' object or added to the email/sms delivery receipt event
+     * attributes.
+     *
+     * @param context A map of custom attributes to attributes to be attached to
+     *            the message for this address. This payload is added to the
+     *            push notification's 'data.pinpoint' object or added to the
+     *            email/sms delivery receipt event attributes.
+     */
+    public void setContext(java.util.Map<String, String> context) {
+        this.context = context;
+    }
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message
+     * for this address. This payload is added to the push notification's
+     * 'data.pinpoint' object or added to the email/sms delivery receipt event
+     * attributes.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param context A map of custom attributes to attributes to be attached to
+     *            the message for this address. This payload is added to the
+     *            push notification's 'data.pinpoint' object or added to the
+     *            email/sms delivery receipt event attributes.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AddressConfiguration withContext(java.util.Map<String, String> context) {
+        this.context = context;
+        return this;
+    }
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message
+     * for this address. This payload is added to the push notification's
+     * 'data.pinpoint' object or added to the email/sms delivery receipt event
+     * attributes.
+     * <p>
+     * The method adds a new key-value pair into Context parameter, and returns
+     * a reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Context.
+     * @param value The corresponding value of the entry to be added into
+     *            Context.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AddressConfiguration addContextEntry(String key, String value) {
+        if (null == this.context) {
+            this.context = new java.util.HashMap<String, String>();
+        }
+        if (this.context.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.context.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Context.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public AddressConfiguration clearContextEntries() {
+        this.context = null;
+        return this;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     *
+     * @return The Raw JSON formatted string to be used as the payload. This
+     *         value overrides the message.
+     */
+    public String getRawContent() {
+        return rawContent;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     *
+     * @param rawContent The Raw JSON formatted string to be used as the
+     *            payload. This value overrides the message.
+     */
+    public void setRawContent(String rawContent) {
+        this.rawContent = rawContent;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param rawContent The Raw JSON formatted string to be used as the
+     *            payload. This value overrides the message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AddressConfiguration withRawContent(String rawContent) {
+        this.rawContent = rawContent;
+        return this;
+    }
+
+    /**
+     * A map of substitution values for the message to be merged with the
+     * DefaultMessage's substitutions. Substitutions on this map take precedence
+     * over the all other substitutions.
+     *
+     * @return A map of substitution values for the message to be merged with
+     *         the DefaultMessage's substitutions. Substitutions on this map
+     *         take precedence over the all other substitutions.
+     */
+    public java.util.Map<String, java.util.List<String>> getSubstitutions() {
+        return substitutions;
+    }
+
+    /**
+     * A map of substitution values for the message to be merged with the
+     * DefaultMessage's substitutions. Substitutions on this map take precedence
+     * over the all other substitutions.
+     *
+     * @param substitutions A map of substitution values for the message to be
+     *            merged with the DefaultMessage's substitutions. Substitutions
+     *            on this map take precedence over the all other substitutions.
+     */
+    public void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+    }
+
+    /**
+     * A map of substitution values for the message to be merged with the
+     * DefaultMessage's substitutions. Substitutions on this map take precedence
+     * over the all other substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param substitutions A map of substitution values for the message to be
+     *            merged with the DefaultMessage's substitutions. Substitutions
+     *            on this map take precedence over the all other substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AddressConfiguration withSubstitutions(
+            java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+        return this;
+    }
+
+    /**
+     * A map of substitution values for the message to be merged with the
+     * DefaultMessage's substitutions. Substitutions on this map take precedence
+     * over the all other substitutions.
+     * <p>
+     * The method adds a new key-value pair into Substitutions parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into Substitutions.
+     * @param value The corresponding value of the entry to be added into
+     *            Substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AddressConfiguration addSubstitutionsEntry(String key, java.util.List<String> value) {
+        if (null == this.substitutions) {
+            this.substitutions = new java.util.HashMap<String, java.util.List<String>>();
+        }
+        if (this.substitutions.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.substitutions.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public AddressConfiguration clearSubstitutionsEntries() {
+        this.substitutions = null;
+        return this;
+    }
+
+    /**
+     * Title override. If specified will override default title if applicable.
+     *
+     * @return Title override. If specified will override default title if
+     *         applicable.
+     */
+    public String getTitleOverride() {
+        return titleOverride;
+    }
+
+    /**
+     * Title override. If specified will override default title if applicable.
+     *
+     * @param titleOverride Title override. If specified will override default
+     *            title if applicable.
+     */
+    public void setTitleOverride(String titleOverride) {
+        this.titleOverride = titleOverride;
+    }
+
+    /**
+     * Title override. If specified will override default title if applicable.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param titleOverride Title override. If specified will override default
+     *            title if applicable.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AddressConfiguration withTitleOverride(String titleOverride) {
+        this.titleOverride = titleOverride;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getBodyOverride() != null)
+            sb.append("BodyOverride: " + getBodyOverride() + ",");
+        if (getChannelType() != null)
+            sb.append("ChannelType: " + getChannelType() + ",");
+        if (getContext() != null)
+            sb.append("Context: " + getContext() + ",");
+        if (getRawContent() != null)
+            sb.append("RawContent: " + getRawContent() + ",");
+        if (getSubstitutions() != null)
+            sb.append("Substitutions: " + getSubstitutions() + ",");
+        if (getTitleOverride() != null)
+            sb.append("TitleOverride: " + getTitleOverride());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getBodyOverride() == null) ? 0 : getBodyOverride().hashCode());
+        hashCode = prime * hashCode
+                + ((getChannelType() == null) ? 0 : getChannelType().hashCode());
+        hashCode = prime * hashCode + ((getContext() == null) ? 0 : getContext().hashCode());
+        hashCode = prime * hashCode + ((getRawContent() == null) ? 0 : getRawContent().hashCode());
+        hashCode = prime * hashCode
+                + ((getSubstitutions() == null) ? 0 : getSubstitutions().hashCode());
+        hashCode = prime * hashCode
+                + ((getTitleOverride() == null) ? 0 : getTitleOverride().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof AddressConfiguration == false)
+            return false;
+        AddressConfiguration other = (AddressConfiguration) obj;
+
+        if (other.getBodyOverride() == null ^ this.getBodyOverride() == null)
+            return false;
+        if (other.getBodyOverride() != null
+                && other.getBodyOverride().equals(this.getBodyOverride()) == false)
+            return false;
+        if (other.getChannelType() == null ^ this.getChannelType() == null)
+            return false;
+        if (other.getChannelType() != null
+                && other.getChannelType().equals(this.getChannelType()) == false)
+            return false;
+        if (other.getContext() == null ^ this.getContext() == null)
+            return false;
+        if (other.getContext() != null && other.getContext().equals(this.getContext()) == false)
+            return false;
+        if (other.getRawContent() == null ^ this.getRawContent() == null)
+            return false;
+        if (other.getRawContent() != null
+                && other.getRawContent().equals(this.getRawContent()) == false)
+            return false;
+        if (other.getSubstitutions() == null ^ this.getSubstitutions() == null)
+            return false;
+        if (other.getSubstitutions() != null
+                && other.getSubstitutions().equals(this.getSubstitutions()) == false)
+            return false;
+        if (other.getTitleOverride() == null ^ this.getTitleOverride() == null)
+            return false;
+        if (other.getTitleOverride() != null
+                && other.getTitleOverride().equals(this.getTitleOverride()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ApplicationResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ApplicationResponse.java
new file mode 100644
index 0000000000..fa68ab3115
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ApplicationResponse.java
@@ -0,0 +1,150 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Application Response.
+ */
+public class ApplicationResponse implements Serializable {
+    /**
+     * The unique application ID.
+     */
+    private String id;
+
+    /**
+     * The display name of the application.
+     */
+    private String name;
+
+    /**
+     * The unique application ID.
+     *
+     * @return The unique application ID.
+     */
+    public String getId() {
+        return id;
+    }
+
+    /**
+     * The unique application ID.
+     *
+     * @param id The unique application ID.
+     */
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    /**
+     * The unique application ID.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param id The unique application ID.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ApplicationResponse withId(String id) {
+        this.id = id;
+        return this;
+    }
+
+    /**
+     * The display name of the application.
+     *
+     * @return The display name of the application.
+     */
+    public String getName() {
+        return name;
+    }
+
+    /**
+     * The display name of the application.
+     *
+     * @param name The display name of the application.
+     */
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    /**
+     * The display name of the application.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param name The display name of the application.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ApplicationResponse withName(String name) {
+        this.name = name;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getId() != null)
+            sb.append("Id: " + getId() + ",");
+        if (getName() != null)
+            sb.append("Name: " + getName());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getId() == null) ? 0 : getId().hashCode());
+        hashCode = prime * hashCode + ((getName() == null) ? 0 : getName().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ApplicationResponse == false)
+            return false;
+        ApplicationResponse other = (ApplicationResponse) obj;
+
+        if (other.getId() == null ^ this.getId() == null)
+            return false;
+        if (other.getId() != null && other.getId().equals(this.getId()) == false)
+            return false;
+        if (other.getName() == null ^ this.getName() == null)
+            return false;
+        if (other.getName() != null && other.getName().equals(this.getName()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ApplicationSettingsResource.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ApplicationSettingsResource.java
index f050d52b46..5f034dd495 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ApplicationSettingsResource.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ApplicationSettingsResource.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Application settings.
+ */
 public class ApplicationSettingsResource implements Serializable {
     /**
      * The unique ID for the application.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ApplicationsResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ApplicationsResponse.java
new file mode 100644
index 0000000000..912f304024
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ApplicationsResponse.java
@@ -0,0 +1,183 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Get Applications Result.
+ */
+public class ApplicationsResponse implements Serializable {
+    /**
+     * List of applications returned in this page.
+     */
+    private java.util.List<ApplicationResponse> item;
+
+    /**
+     * The string that you use in a subsequent request to get the next page of
+     * results in a paginated response.
+     */
+    private String nextToken;
+
+    /**
+     * List of applications returned in this page.
+     *
+     * @return List of applications returned in this page.
+     */
+    public java.util.List<ApplicationResponse> getItem() {
+        return item;
+    }
+
+    /**
+     * List of applications returned in this page.
+     *
+     * @param item List of applications returned in this page.
+     */
+    public void setItem(java.util.Collection<ApplicationResponse> item) {
+        if (item == null) {
+            this.item = null;
+            return;
+        }
+
+        this.item = new java.util.ArrayList<ApplicationResponse>(item);
+    }
+
+    /**
+     * List of applications returned in this page.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param item List of applications returned in this page.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ApplicationsResponse withItem(ApplicationResponse... item) {
+        if (getItem() == null) {
+            this.item = new java.util.ArrayList<ApplicationResponse>(item.length);
+        }
+        for (ApplicationResponse value : item) {
+            this.item.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * List of applications returned in this page.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param item List of applications returned in this page.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ApplicationsResponse withItem(java.util.Collection<ApplicationResponse> item) {
+        setItem(item);
+        return this;
+    }
+
+    /**
+     * The string that you use in a subsequent request to get the next page of
+     * results in a paginated response.
+     *
+     * @return The string that you use in a subsequent request to get the next
+     *         page of results in a paginated response.
+     */
+    public String getNextToken() {
+        return nextToken;
+    }
+
+    /**
+     * The string that you use in a subsequent request to get the next page of
+     * results in a paginated response.
+     *
+     * @param nextToken The string that you use in a subsequent request to get
+     *            the next page of results in a paginated response.
+     */
+    public void setNextToken(String nextToken) {
+        this.nextToken = nextToken;
+    }
+
+    /**
+     * The string that you use in a subsequent request to get the next page of
+     * results in a paginated response.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param nextToken The string that you use in a subsequent request to get
+     *            the next page of results in a paginated response.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ApplicationsResponse withNextToken(String nextToken) {
+        this.nextToken = nextToken;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getItem() != null)
+            sb.append("Item: " + getItem() + ",");
+        if (getNextToken() != null)
+            sb.append("NextToken: " + getNextToken());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getItem() == null) ? 0 : getItem().hashCode());
+        hashCode = prime * hashCode + ((getNextToken() == null) ? 0 : getNextToken().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ApplicationsResponse == false)
+            return false;
+        ApplicationsResponse other = (ApplicationsResponse) obj;
+
+        if (other.getItem() == null ^ this.getItem() == null)
+            return false;
+        if (other.getItem() != null && other.getItem().equals(this.getItem()) == false)
+            return false;
+        if (other.getNextToken() == null ^ this.getNextToken() == null)
+            return false;
+        if (other.getNextToken() != null
+                && other.getNextToken().equals(this.getNextToken()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/AttributeDimension.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/AttributeDimension.java
index 999a0ced2f..ecf644c57d 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/AttributeDimension.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/AttributeDimension.java
@@ -17,11 +17,14 @@
 
 import java.io.Serializable;
 
+/**
+ * Custom attibute dimension
+ */
 public class AttributeDimension implements Serializable {
     /**
-     * The type of dimension: INCLUSIVE â€“ Endpoints that match the criteria
-     * are included in the segment. EXCLUSIVE â€“ Endpoints that match the
-     * criteria are excluded from the segment.
+     * The type of dimension: INCLUSIVE - Endpoints that match the criteria are
+     * included in the segment. EXCLUSIVE - Endpoints that match the criteria
+     * are excluded from the segment.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>INCLUSIVE, EXCLUSIVE
@@ -36,16 +39,16 @@
     private java.util.List<String> values;
 
     /**
-     * The type of dimension: INCLUSIVE â€“ Endpoints that match the criteria
-     * are included in the segment. EXCLUSIVE â€“ Endpoints that match the
-     * criteria are excluded from the segment.
+     * The type of dimension: INCLUSIVE - Endpoints that match the criteria are
+     * included in the segment. EXCLUSIVE - Endpoints that match the criteria
+     * are excluded from the segment.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>INCLUSIVE, EXCLUSIVE
      *
-     * @return The type of dimension: INCLUSIVE â€“ Endpoints that match the
-     *         criteria are included in the segment. EXCLUSIVE â€“ Endpoints
-     *         that match the criteria are excluded from the segment.
+     * @return The type of dimension: INCLUSIVE - Endpoints that match the
+     *         criteria are included in the segment. EXCLUSIVE - Endpoints that
+     *         match the criteria are excluded from the segment.
      * @see AttributeType
      */
     public String getAttributeType() {
@@ -53,15 +56,15 @@ public String getAttributeType() {
     }
 
     /**
-     * The type of dimension: INCLUSIVE â€“ Endpoints that match the criteria
-     * are included in the segment. EXCLUSIVE â€“ Endpoints that match the
-     * criteria are excluded from the segment.
+     * The type of dimension: INCLUSIVE - Endpoints that match the criteria are
+     * included in the segment. EXCLUSIVE - Endpoints that match the criteria
+     * are excluded from the segment.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>INCLUSIVE, EXCLUSIVE
      *
-     * @param attributeType The type of dimension: INCLUSIVE â€“ Endpoints that
-     *            match the criteria are included in the segment. EXCLUSIVE â€“
+     * @param attributeType The type of dimension: INCLUSIVE - Endpoints that
+     *            match the criteria are included in the segment. EXCLUSIVE -
      *            Endpoints that match the criteria are excluded from the
      *            segment.
      * @see AttributeType
@@ -71,9 +74,9 @@ public void setAttributeType(String attributeType) {
     }
 
     /**
-     * The type of dimension: INCLUSIVE â€“ Endpoints that match the criteria
-     * are included in the segment. EXCLUSIVE â€“ Endpoints that match the
-     * criteria are excluded from the segment.
+     * The type of dimension: INCLUSIVE - Endpoints that match the criteria are
+     * included in the segment. EXCLUSIVE - Endpoints that match the criteria
+     * are excluded from the segment.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
@@ -81,8 +84,8 @@ public void setAttributeType(String attributeType) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>INCLUSIVE, EXCLUSIVE
      *
-     * @param attributeType The type of dimension: INCLUSIVE â€“ Endpoints that
-     *            match the criteria are included in the segment. EXCLUSIVE â€“
+     * @param attributeType The type of dimension: INCLUSIVE - Endpoints that
+     *            match the criteria are included in the segment. EXCLUSIVE -
      *            Endpoints that match the criteria are excluded from the
      *            segment.
      * @return A reference to this updated object so that method calls can be
@@ -95,15 +98,15 @@ public AttributeDimension withAttributeType(String attributeType) {
     }
 
     /**
-     * The type of dimension: INCLUSIVE â€“ Endpoints that match the criteria
-     * are included in the segment. EXCLUSIVE â€“ Endpoints that match the
-     * criteria are excluded from the segment.
+     * The type of dimension: INCLUSIVE - Endpoints that match the criteria are
+     * included in the segment. EXCLUSIVE - Endpoints that match the criteria
+     * are excluded from the segment.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>INCLUSIVE, EXCLUSIVE
      *
-     * @param attributeType The type of dimension: INCLUSIVE â€“ Endpoints that
-     *            match the criteria are included in the segment. EXCLUSIVE â€“
+     * @param attributeType The type of dimension: INCLUSIVE - Endpoints that
+     *            match the criteria are included in the segment. EXCLUSIVE -
      *            Endpoints that match the criteria are excluded from the
      *            segment.
      * @see AttributeType
@@ -113,9 +116,9 @@ public void setAttributeType(AttributeType attributeType) {
     }
 
     /**
-     * The type of dimension: INCLUSIVE â€“ Endpoints that match the criteria
-     * are included in the segment. EXCLUSIVE â€“ Endpoints that match the
-     * criteria are excluded from the segment.
+     * The type of dimension: INCLUSIVE - Endpoints that match the criteria are
+     * included in the segment. EXCLUSIVE - Endpoints that match the criteria
+     * are excluded from the segment.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
@@ -123,8 +126,8 @@ public void setAttributeType(AttributeType attributeType) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>INCLUSIVE, EXCLUSIVE
      *
-     * @param attributeType The type of dimension: INCLUSIVE â€“ Endpoints that
-     *            match the criteria are included in the segment. EXCLUSIVE â€“
+     * @param attributeType The type of dimension: INCLUSIVE - Endpoints that
+     *            match the criteria are included in the segment. EXCLUSIVE -
      *            Endpoints that match the criteria are excluded from the
      *            segment.
      * @return A reference to this updated object so that method calls can be
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/BadRequestException.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/BadRequestException.java
index 93b735ec52..4d52ce2532 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/BadRequestException.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/BadRequestException.java
@@ -18,14 +18,15 @@
 import com.amazonaws.AmazonServiceException;
 
 /**
- * 
+ * Simple message object.
  */
 public class BadRequestException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
-    private String accessControlAllowOrigin;
-
-    private MessageBody messageBody;
+    /**
+     * The unique message body ID.
+     */
+    private String requestID;
 
     /**
      * Constructs a new BadRequestException with the specified error message.
@@ -37,42 +38,20 @@ public BadRequestException(String message) {
     }
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Returns the value of the messageBody property for this object.
+     * The unique message body ID.
      *
-     * @return The value of the messageBody property for this object.
+     * @return The unique message body ID.
      */
-    public MessageBody getMessageBody() {
-        return messageBody;
+    public String getRequestID() {
+        return requestID;
     }
 
     /**
-     * Sets the value of messageBody
+     * The unique message body ID.
      *
-     * @param messageBody The new value for the messageBody property for this
-     *            object.
+     * @param requestID The unique message body ID.
      */
-    public void setMessageBody(MessageBody messageBody) {
-        this.messageBody = messageBody;
+    public void setRequestID(String requestID) {
+        this.requestID = requestID;
     }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/BaiduChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/BaiduChannelRequest.java
new file mode 100644
index 0000000000..8de808c729
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/BaiduChannelRequest.java
@@ -0,0 +1,205 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Baidu Cloud Push credentials
+ */
+public class BaiduChannelRequest implements Serializable {
+    /**
+     * Platform credential API key from Baidu.
+     */
+    private String apiKey;
+
+    /**
+     * If the channel is enabled for sending messages.
+     */
+    private Boolean enabled;
+
+    /**
+     * Platform credential Secret key from Baidu.
+     */
+    private String secretKey;
+
+    /**
+     * Platform credential API key from Baidu.
+     *
+     * @return Platform credential API key from Baidu.
+     */
+    public String getApiKey() {
+        return apiKey;
+    }
+
+    /**
+     * Platform credential API key from Baidu.
+     *
+     * @param apiKey Platform credential API key from Baidu.
+     */
+    public void setApiKey(String apiKey) {
+        this.apiKey = apiKey;
+    }
+
+    /**
+     * Platform credential API key from Baidu.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param apiKey Platform credential API key from Baidu.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduChannelRequest withApiKey(String apiKey) {
+        this.apiKey = apiKey;
+        return this;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean isEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean getEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     */
+    public void setEnabled(Boolean enabled) {
+        this.enabled = enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduChannelRequest withEnabled(Boolean enabled) {
+        this.enabled = enabled;
+        return this;
+    }
+
+    /**
+     * Platform credential Secret key from Baidu.
+     *
+     * @return Platform credential Secret key from Baidu.
+     */
+    public String getSecretKey() {
+        return secretKey;
+    }
+
+    /**
+     * Platform credential Secret key from Baidu.
+     *
+     * @param secretKey Platform credential Secret key from Baidu.
+     */
+    public void setSecretKey(String secretKey) {
+        this.secretKey = secretKey;
+    }
+
+    /**
+     * Platform credential Secret key from Baidu.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param secretKey Platform credential Secret key from Baidu.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduChannelRequest withSecretKey(String secretKey) {
+        this.secretKey = secretKey;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApiKey() != null)
+            sb.append("ApiKey: " + getApiKey() + ",");
+        if (getEnabled() != null)
+            sb.append("Enabled: " + getEnabled() + ",");
+        if (getSecretKey() != null)
+            sb.append("SecretKey: " + getSecretKey());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getApiKey() == null) ? 0 : getApiKey().hashCode());
+        hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
+        hashCode = prime * hashCode + ((getSecretKey() == null) ? 0 : getSecretKey().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof BaiduChannelRequest == false)
+            return false;
+        BaiduChannelRequest other = (BaiduChannelRequest) obj;
+
+        if (other.getApiKey() == null ^ this.getApiKey() == null)
+            return false;
+        if (other.getApiKey() != null && other.getApiKey().equals(this.getApiKey()) == false)
+            return false;
+        if (other.getEnabled() == null ^ this.getEnabled() == null)
+            return false;
+        if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
+            return false;
+        if (other.getSecretKey() == null ^ this.getSecretKey() == null)
+            return false;
+        if (other.getSecretKey() != null
+                && other.getSecretKey().equals(this.getSecretKey()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/BaiduChannelResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/BaiduChannelResponse.java
new file mode 100644
index 0000000000..a0de450f8b
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/BaiduChannelResponse.java
@@ -0,0 +1,538 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Baidu Cloud Messaging channel definition
+ */
+public class BaiduChannelResponse implements Serializable {
+    /**
+     * Application id
+     */
+    private String applicationId;
+
+    /**
+     * When was this segment created
+     */
+    private String creationDate;
+
+    /**
+     * The Baidu API key from Baidu.
+     */
+    private String credential;
+
+    /**
+     * If the channel is enabled for sending messages.
+     */
+    private Boolean enabled;
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     */
+    private String id;
+
+    /**
+     * Is this channel archived
+     */
+    private Boolean isArchived;
+
+    /**
+     * Who made the last change
+     */
+    private String lastModifiedBy;
+
+    /**
+     * Last date this was updated
+     */
+    private String lastModifiedDate;
+
+    /**
+     * The platform type. Will be BAIDU
+     */
+    private String platform;
+
+    /**
+     * Version of channel
+     */
+    private Integer version;
+
+    /**
+     * Application id
+     *
+     * @return Application id
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Application id
+     *
+     * @param applicationId Application id
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Application id
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId Application id
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduChannelResponse withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * When was this segment created
+     *
+     * @return When was this segment created
+     */
+    public String getCreationDate() {
+        return creationDate;
+    }
+
+    /**
+     * When was this segment created
+     *
+     * @param creationDate When was this segment created
+     */
+    public void setCreationDate(String creationDate) {
+        this.creationDate = creationDate;
+    }
+
+    /**
+     * When was this segment created
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param creationDate When was this segment created
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduChannelResponse withCreationDate(String creationDate) {
+        this.creationDate = creationDate;
+        return this;
+    }
+
+    /**
+     * The Baidu API key from Baidu.
+     *
+     * @return The Baidu API key from Baidu.
+     */
+    public String getCredential() {
+        return credential;
+    }
+
+    /**
+     * The Baidu API key from Baidu.
+     *
+     * @param credential The Baidu API key from Baidu.
+     */
+    public void setCredential(String credential) {
+        this.credential = credential;
+    }
+
+    /**
+     * The Baidu API key from Baidu.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param credential The Baidu API key from Baidu.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduChannelResponse withCredential(String credential) {
+        this.credential = credential;
+        return this;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean isEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean getEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     */
+    public void setEnabled(Boolean enabled) {
+        this.enabled = enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduChannelResponse withEnabled(Boolean enabled) {
+        this.enabled = enabled;
+        return this;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     *
+     * @return Channel ID. Not used, only for backwards compatibility.
+     */
+    public String getId() {
+        return id;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     *
+     * @param id Channel ID. Not used, only for backwards compatibility.
+     */
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param id Channel ID. Not used, only for backwards compatibility.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduChannelResponse withId(String id) {
+        this.id = id;
+        return this;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @return Is this channel archived
+     */
+    public Boolean isIsArchived() {
+        return isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @return Is this channel archived
+     */
+    public Boolean getIsArchived() {
+        return isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @param isArchived Is this channel archived
+     */
+    public void setIsArchived(Boolean isArchived) {
+        this.isArchived = isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param isArchived Is this channel archived
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduChannelResponse withIsArchived(Boolean isArchived) {
+        this.isArchived = isArchived;
+        return this;
+    }
+
+    /**
+     * Who made the last change
+     *
+     * @return Who made the last change
+     */
+    public String getLastModifiedBy() {
+        return lastModifiedBy;
+    }
+
+    /**
+     * Who made the last change
+     *
+     * @param lastModifiedBy Who made the last change
+     */
+    public void setLastModifiedBy(String lastModifiedBy) {
+        this.lastModifiedBy = lastModifiedBy;
+    }
+
+    /**
+     * Who made the last change
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastModifiedBy Who made the last change
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduChannelResponse withLastModifiedBy(String lastModifiedBy) {
+        this.lastModifiedBy = lastModifiedBy;
+        return this;
+    }
+
+    /**
+     * Last date this was updated
+     *
+     * @return Last date this was updated
+     */
+    public String getLastModifiedDate() {
+        return lastModifiedDate;
+    }
+
+    /**
+     * Last date this was updated
+     *
+     * @param lastModifiedDate Last date this was updated
+     */
+    public void setLastModifiedDate(String lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+    }
+
+    /**
+     * Last date this was updated
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastModifiedDate Last date this was updated
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduChannelResponse withLastModifiedDate(String lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+        return this;
+    }
+
+    /**
+     * The platform type. Will be BAIDU
+     *
+     * @return The platform type. Will be BAIDU
+     */
+    public String getPlatform() {
+        return platform;
+    }
+
+    /**
+     * The platform type. Will be BAIDU
+     *
+     * @param platform The platform type. Will be BAIDU
+     */
+    public void setPlatform(String platform) {
+        this.platform = platform;
+    }
+
+    /**
+     * The platform type. Will be BAIDU
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param platform The platform type. Will be BAIDU
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduChannelResponse withPlatform(String platform) {
+        this.platform = platform;
+        return this;
+    }
+
+    /**
+     * Version of channel
+     *
+     * @return Version of channel
+     */
+    public Integer getVersion() {
+        return version;
+    }
+
+    /**
+     * Version of channel
+     *
+     * @param version Version of channel
+     */
+    public void setVersion(Integer version) {
+        this.version = version;
+    }
+
+    /**
+     * Version of channel
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param version Version of channel
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduChannelResponse withVersion(Integer version) {
+        this.version = version;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getCreationDate() != null)
+            sb.append("CreationDate: " + getCreationDate() + ",");
+        if (getCredential() != null)
+            sb.append("Credential: " + getCredential() + ",");
+        if (getEnabled() != null)
+            sb.append("Enabled: " + getEnabled() + ",");
+        if (getId() != null)
+            sb.append("Id: " + getId() + ",");
+        if (getIsArchived() != null)
+            sb.append("IsArchived: " + getIsArchived() + ",");
+        if (getLastModifiedBy() != null)
+            sb.append("LastModifiedBy: " + getLastModifiedBy() + ",");
+        if (getLastModifiedDate() != null)
+            sb.append("LastModifiedDate: " + getLastModifiedDate() + ",");
+        if (getPlatform() != null)
+            sb.append("Platform: " + getPlatform() + ",");
+        if (getVersion() != null)
+            sb.append("Version: " + getVersion());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime * hashCode
+                + ((getCreationDate() == null) ? 0 : getCreationDate().hashCode());
+        hashCode = prime * hashCode + ((getCredential() == null) ? 0 : getCredential().hashCode());
+        hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
+        hashCode = prime * hashCode + ((getId() == null) ? 0 : getId().hashCode());
+        hashCode = prime * hashCode + ((getIsArchived() == null) ? 0 : getIsArchived().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastModifiedBy() == null) ? 0 : getLastModifiedBy().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastModifiedDate() == null) ? 0 : getLastModifiedDate().hashCode());
+        hashCode = prime * hashCode + ((getPlatform() == null) ? 0 : getPlatform().hashCode());
+        hashCode = prime * hashCode + ((getVersion() == null) ? 0 : getVersion().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof BaiduChannelResponse == false)
+            return false;
+        BaiduChannelResponse other = (BaiduChannelResponse) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        if (other.getCreationDate() == null ^ this.getCreationDate() == null)
+            return false;
+        if (other.getCreationDate() != null
+                && other.getCreationDate().equals(this.getCreationDate()) == false)
+            return false;
+        if (other.getCredential() == null ^ this.getCredential() == null)
+            return false;
+        if (other.getCredential() != null
+                && other.getCredential().equals(this.getCredential()) == false)
+            return false;
+        if (other.getEnabled() == null ^ this.getEnabled() == null)
+            return false;
+        if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
+            return false;
+        if (other.getId() == null ^ this.getId() == null)
+            return false;
+        if (other.getId() != null && other.getId().equals(this.getId()) == false)
+            return false;
+        if (other.getIsArchived() == null ^ this.getIsArchived() == null)
+            return false;
+        if (other.getIsArchived() != null
+                && other.getIsArchived().equals(this.getIsArchived()) == false)
+            return false;
+        if (other.getLastModifiedBy() == null ^ this.getLastModifiedBy() == null)
+            return false;
+        if (other.getLastModifiedBy() != null
+                && other.getLastModifiedBy().equals(this.getLastModifiedBy()) == false)
+            return false;
+        if (other.getLastModifiedDate() == null ^ this.getLastModifiedDate() == null)
+            return false;
+        if (other.getLastModifiedDate() != null
+                && other.getLastModifiedDate().equals(this.getLastModifiedDate()) == false)
+            return false;
+        if (other.getPlatform() == null ^ this.getPlatform() == null)
+            return false;
+        if (other.getPlatform() != null && other.getPlatform().equals(this.getPlatform()) == false)
+            return false;
+        if (other.getVersion() == null ^ this.getVersion() == null)
+            return false;
+        if (other.getVersion() != null && other.getVersion().equals(this.getVersion()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/BaiduMessage.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/BaiduMessage.java
new file mode 100644
index 0000000000..45a83916b0
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/BaiduMessage.java
@@ -0,0 +1,1005 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Baidu Message.
+ */
+public class BaiduMessage implements Serializable {
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     */
+    private String action;
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     */
+    private String body;
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     */
+    private java.util.Map<String, String> data;
+
+    /**
+     * The icon image name of the asset saved in your application.
+     */
+    private String iconReference;
+
+    /**
+     * The URL that points to an image used as the large icon to the
+     * notification content view.
+     */
+    private String imageIconUrl;
+
+    /**
+     * The URL that points to an image used in the push notification.
+     */
+    private String imageUrl;
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     */
+    private String jsonData;
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     */
+    private String rawContent;
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     */
+    private Boolean silentPush;
+
+    /**
+     * The URL that points to an image used as the small icon for the
+     * notification which will be used to represent the notification in the
+     * status bar and content view
+     */
+    private String smallImageIconUrl;
+
+    /**
+     * Indicates a sound to play when the device receives the notification.
+     * Supports default, or the filename of a sound resource bundled in the app.
+     * Android sound files must reside in /res/raw/
+     */
+    private String sound;
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     */
+    private java.util.Map<String, java.util.List<String>> substitutions;
+
+    /**
+     * The message title that displays above the message on the user's device.
+     */
+    private String title;
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     */
+    private String url;
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @return The action that occurs if the user taps a push notification
+     *         delivered by the campaign: OPEN_APP - Your app launches, or it
+     *         becomes the foreground app if it has been sent to the background.
+     *         This is the default action. DEEP_LINK - Uses deep linking
+     *         features in iOS and Android to open your app and display a
+     *         designated user interface within the app. URL - The default
+     *         mobile browser on the user's device launches and opens a web page
+     *         at the URL you specify. Possible values include: OPEN_APP |
+     *         DEEP_LINK | URL
+     * @see Action
+     */
+    public String getAction() {
+        return action;
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @see Action
+     */
+    public void setAction(String action) {
+        this.action = action;
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see Action
+     */
+    public BaiduMessage withAction(String action) {
+        this.action = action;
+        return this;
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @see Action
+     */
+    public void setAction(Action action) {
+        this.action = action.toString();
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see Action
+     */
+    public BaiduMessage withAction(Action action) {
+        this.action = action.toString();
+        return this;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @return The message body of the notification, the email body or the text
+     *         message.
+     */
+    public String getBody() {
+        return body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     */
+    public void setBody(String body) {
+        this.body = body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduMessage withBody(String body) {
+        this.body = body;
+        return this;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @return The data payload used for a silent push. This payload is added to
+     *         the notifications' data.pinpoint.jsonBody' object
+     */
+    public java.util.Map<String, String> getData() {
+        return data;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @param data The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     */
+    public void setData(java.util.Map<String, String> data) {
+        this.data = data;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param data The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduMessage withData(java.util.Map<String, String> data) {
+        this.data = data;
+        return this;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     * <p>
+     * The method adds a new key-value pair into Data parameter, and returns a
+     * reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Data.
+     * @param value The corresponding value of the entry to be added into Data.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduMessage addDataEntry(String key, String value) {
+        if (null == this.data) {
+            this.data = new java.util.HashMap<String, String>();
+        }
+        if (this.data.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.data.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Data.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public BaiduMessage clearDataEntries() {
+        this.data = null;
+        return this;
+    }
+
+    /**
+     * The icon image name of the asset saved in your application.
+     *
+     * @return The icon image name of the asset saved in your application.
+     */
+    public String getIconReference() {
+        return iconReference;
+    }
+
+    /**
+     * The icon image name of the asset saved in your application.
+     *
+     * @param iconReference The icon image name of the asset saved in your
+     *            application.
+     */
+    public void setIconReference(String iconReference) {
+        this.iconReference = iconReference;
+    }
+
+    /**
+     * The icon image name of the asset saved in your application.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param iconReference The icon image name of the asset saved in your
+     *            application.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduMessage withIconReference(String iconReference) {
+        this.iconReference = iconReference;
+        return this;
+    }
+
+    /**
+     * The URL that points to an image used as the large icon to the
+     * notification content view.
+     *
+     * @return The URL that points to an image used as the large icon to the
+     *         notification content view.
+     */
+    public String getImageIconUrl() {
+        return imageIconUrl;
+    }
+
+    /**
+     * The URL that points to an image used as the large icon to the
+     * notification content view.
+     *
+     * @param imageIconUrl The URL that points to an image used as the large
+     *            icon to the notification content view.
+     */
+    public void setImageIconUrl(String imageIconUrl) {
+        this.imageIconUrl = imageIconUrl;
+    }
+
+    /**
+     * The URL that points to an image used as the large icon to the
+     * notification content view.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param imageIconUrl The URL that points to an image used as the large
+     *            icon to the notification content view.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduMessage withImageIconUrl(String imageIconUrl) {
+        this.imageIconUrl = imageIconUrl;
+        return this;
+    }
+
+    /**
+     * The URL that points to an image used in the push notification.
+     *
+     * @return The URL that points to an image used in the push notification.
+     */
+    public String getImageUrl() {
+        return imageUrl;
+    }
+
+    /**
+     * The URL that points to an image used in the push notification.
+     *
+     * @param imageUrl The URL that points to an image used in the push
+     *            notification.
+     */
+    public void setImageUrl(String imageUrl) {
+        this.imageUrl = imageUrl;
+    }
+
+    /**
+     * The URL that points to an image used in the push notification.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param imageUrl The URL that points to an image used in the push
+     *            notification.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduMessage withImageUrl(String imageUrl) {
+        this.imageUrl = imageUrl;
+        return this;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @return The data payload used for a silent push. This payload is added to
+     *         the notifications' data.pinpoint.jsonBody' object
+     */
+    public String getJsonData() {
+        return jsonData;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @param jsonData The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     */
+    public void setJsonData(String jsonData) {
+        this.jsonData = jsonData;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param jsonData The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduMessage withJsonData(String jsonData) {
+        this.jsonData = jsonData;
+        return this;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     *
+     * @return The Raw JSON formatted string to be used as the payload. This
+     *         value overrides the message.
+     */
+    public String getRawContent() {
+        return rawContent;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     *
+     * @param rawContent The Raw JSON formatted string to be used as the
+     *            payload. This value overrides the message.
+     */
+    public void setRawContent(String rawContent) {
+        this.rawContent = rawContent;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param rawContent The Raw JSON formatted string to be used as the
+     *            payload. This value overrides the message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduMessage withRawContent(String rawContent) {
+        this.rawContent = rawContent;
+        return this;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     *
+     * @return Indicates if the message should display on the users device.
+     *         Silent pushes can be used for Remote Configuration and Phone Home
+     *         use cases.
+     */
+    public Boolean isSilentPush() {
+        return silentPush;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     *
+     * @return Indicates if the message should display on the users device.
+     *         Silent pushes can be used for Remote Configuration and Phone Home
+     *         use cases.
+     */
+    public Boolean getSilentPush() {
+        return silentPush;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     *
+     * @param silentPush Indicates if the message should display on the users
+     *            device. Silent pushes can be used for Remote Configuration and
+     *            Phone Home use cases.
+     */
+    public void setSilentPush(Boolean silentPush) {
+        this.silentPush = silentPush;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param silentPush Indicates if the message should display on the users
+     *            device. Silent pushes can be used for Remote Configuration and
+     *            Phone Home use cases.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduMessage withSilentPush(Boolean silentPush) {
+        this.silentPush = silentPush;
+        return this;
+    }
+
+    /**
+     * The URL that points to an image used as the small icon for the
+     * notification which will be used to represent the notification in the
+     * status bar and content view
+     *
+     * @return The URL that points to an image used as the small icon for the
+     *         notification which will be used to represent the notification in
+     *         the status bar and content view
+     */
+    public String getSmallImageIconUrl() {
+        return smallImageIconUrl;
+    }
+
+    /**
+     * The URL that points to an image used as the small icon for the
+     * notification which will be used to represent the notification in the
+     * status bar and content view
+     *
+     * @param smallImageIconUrl The URL that points to an image used as the
+     *            small icon for the notification which will be used to
+     *            represent the notification in the status bar and content view
+     */
+    public void setSmallImageIconUrl(String smallImageIconUrl) {
+        this.smallImageIconUrl = smallImageIconUrl;
+    }
+
+    /**
+     * The URL that points to an image used as the small icon for the
+     * notification which will be used to represent the notification in the
+     * status bar and content view
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param smallImageIconUrl The URL that points to an image used as the
+     *            small icon for the notification which will be used to
+     *            represent the notification in the status bar and content view
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduMessage withSmallImageIconUrl(String smallImageIconUrl) {
+        this.smallImageIconUrl = smallImageIconUrl;
+        return this;
+    }
+
+    /**
+     * Indicates a sound to play when the device receives the notification.
+     * Supports default, or the filename of a sound resource bundled in the app.
+     * Android sound files must reside in /res/raw/
+     *
+     * @return Indicates a sound to play when the device receives the
+     *         notification. Supports default, or the filename of a sound
+     *         resource bundled in the app. Android sound files must reside in
+     *         /res/raw/
+     */
+    public String getSound() {
+        return sound;
+    }
+
+    /**
+     * Indicates a sound to play when the device receives the notification.
+     * Supports default, or the filename of a sound resource bundled in the app.
+     * Android sound files must reside in /res/raw/
+     *
+     * @param sound Indicates a sound to play when the device receives the
+     *            notification. Supports default, or the filename of a sound
+     *            resource bundled in the app. Android sound files must reside
+     *            in /res/raw/
+     */
+    public void setSound(String sound) {
+        this.sound = sound;
+    }
+
+    /**
+     * Indicates a sound to play when the device receives the notification.
+     * Supports default, or the filename of a sound resource bundled in the app.
+     * Android sound files must reside in /res/raw/
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param sound Indicates a sound to play when the device receives the
+     *            notification. Supports default, or the filename of a sound
+     *            resource bundled in the app. Android sound files must reside
+     *            in /res/raw/
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduMessage withSound(String sound) {
+        this.sound = sound;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @return Default message substitutions. Can be overridden by individual
+     *         address substitutions.
+     */
+    public java.util.Map<String, java.util.List<String>> getSubstitutions() {
+        return substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     */
+    public void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduMessage withSubstitutions(
+            java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * The method adds a new key-value pair into Substitutions parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into Substitutions.
+     * @param value The corresponding value of the entry to be added into
+     *            Substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduMessage addSubstitutionsEntry(String key, java.util.List<String> value) {
+        if (null == this.substitutions) {
+            this.substitutions = new java.util.HashMap<String, java.util.List<String>>();
+        }
+        if (this.substitutions.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.substitutions.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public BaiduMessage clearSubstitutionsEntries() {
+        this.substitutions = null;
+        return this;
+    }
+
+    /**
+     * The message title that displays above the message on the user's device.
+     *
+     * @return The message title that displays above the message on the user's
+     *         device.
+     */
+    public String getTitle() {
+        return title;
+    }
+
+    /**
+     * The message title that displays above the message on the user's device.
+     *
+     * @param title The message title that displays above the message on the
+     *            user's device.
+     */
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    /**
+     * The message title that displays above the message on the user's device.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param title The message title that displays above the message on the
+     *            user's device.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduMessage withTitle(String title) {
+        this.title = title;
+        return this;
+    }
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     *
+     * @return The URL to open in the user's mobile browser. Used if the value
+     *         for Action is URL.
+     */
+    public String getUrl() {
+        return url;
+    }
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     *
+     * @param url The URL to open in the user's mobile browser. Used if the
+     *            value for Action is URL.
+     */
+    public void setUrl(String url) {
+        this.url = url;
+    }
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param url The URL to open in the user's mobile browser. Used if the
+     *            value for Action is URL.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public BaiduMessage withUrl(String url) {
+        this.url = url;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAction() != null)
+            sb.append("Action: " + getAction() + ",");
+        if (getBody() != null)
+            sb.append("Body: " + getBody() + ",");
+        if (getData() != null)
+            sb.append("Data: " + getData() + ",");
+        if (getIconReference() != null)
+            sb.append("IconReference: " + getIconReference() + ",");
+        if (getImageIconUrl() != null)
+            sb.append("ImageIconUrl: " + getImageIconUrl() + ",");
+        if (getImageUrl() != null)
+            sb.append("ImageUrl: " + getImageUrl() + ",");
+        if (getJsonData() != null)
+            sb.append("JsonData: " + getJsonData() + ",");
+        if (getRawContent() != null)
+            sb.append("RawContent: " + getRawContent() + ",");
+        if (getSilentPush() != null)
+            sb.append("SilentPush: " + getSilentPush() + ",");
+        if (getSmallImageIconUrl() != null)
+            sb.append("SmallImageIconUrl: " + getSmallImageIconUrl() + ",");
+        if (getSound() != null)
+            sb.append("Sound: " + getSound() + ",");
+        if (getSubstitutions() != null)
+            sb.append("Substitutions: " + getSubstitutions() + ",");
+        if (getTitle() != null)
+            sb.append("Title: " + getTitle() + ",");
+        if (getUrl() != null)
+            sb.append("Url: " + getUrl());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getAction() == null) ? 0 : getAction().hashCode());
+        hashCode = prime * hashCode + ((getBody() == null) ? 0 : getBody().hashCode());
+        hashCode = prime * hashCode + ((getData() == null) ? 0 : getData().hashCode());
+        hashCode = prime * hashCode
+                + ((getIconReference() == null) ? 0 : getIconReference().hashCode());
+        hashCode = prime * hashCode
+                + ((getImageIconUrl() == null) ? 0 : getImageIconUrl().hashCode());
+        hashCode = prime * hashCode + ((getImageUrl() == null) ? 0 : getImageUrl().hashCode());
+        hashCode = prime * hashCode + ((getJsonData() == null) ? 0 : getJsonData().hashCode());
+        hashCode = prime * hashCode + ((getRawContent() == null) ? 0 : getRawContent().hashCode());
+        hashCode = prime * hashCode + ((getSilentPush() == null) ? 0 : getSilentPush().hashCode());
+        hashCode = prime * hashCode
+                + ((getSmallImageIconUrl() == null) ? 0 : getSmallImageIconUrl().hashCode());
+        hashCode = prime * hashCode + ((getSound() == null) ? 0 : getSound().hashCode());
+        hashCode = prime * hashCode
+                + ((getSubstitutions() == null) ? 0 : getSubstitutions().hashCode());
+        hashCode = prime * hashCode + ((getTitle() == null) ? 0 : getTitle().hashCode());
+        hashCode = prime * hashCode + ((getUrl() == null) ? 0 : getUrl().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof BaiduMessage == false)
+            return false;
+        BaiduMessage other = (BaiduMessage) obj;
+
+        if (other.getAction() == null ^ this.getAction() == null)
+            return false;
+        if (other.getAction() != null && other.getAction().equals(this.getAction()) == false)
+            return false;
+        if (other.getBody() == null ^ this.getBody() == null)
+            return false;
+        if (other.getBody() != null && other.getBody().equals(this.getBody()) == false)
+            return false;
+        if (other.getData() == null ^ this.getData() == null)
+            return false;
+        if (other.getData() != null && other.getData().equals(this.getData()) == false)
+            return false;
+        if (other.getIconReference() == null ^ this.getIconReference() == null)
+            return false;
+        if (other.getIconReference() != null
+                && other.getIconReference().equals(this.getIconReference()) == false)
+            return false;
+        if (other.getImageIconUrl() == null ^ this.getImageIconUrl() == null)
+            return false;
+        if (other.getImageIconUrl() != null
+                && other.getImageIconUrl().equals(this.getImageIconUrl()) == false)
+            return false;
+        if (other.getImageUrl() == null ^ this.getImageUrl() == null)
+            return false;
+        if (other.getImageUrl() != null && other.getImageUrl().equals(this.getImageUrl()) == false)
+            return false;
+        if (other.getJsonData() == null ^ this.getJsonData() == null)
+            return false;
+        if (other.getJsonData() != null && other.getJsonData().equals(this.getJsonData()) == false)
+            return false;
+        if (other.getRawContent() == null ^ this.getRawContent() == null)
+            return false;
+        if (other.getRawContent() != null
+                && other.getRawContent().equals(this.getRawContent()) == false)
+            return false;
+        if (other.getSilentPush() == null ^ this.getSilentPush() == null)
+            return false;
+        if (other.getSilentPush() != null
+                && other.getSilentPush().equals(this.getSilentPush()) == false)
+            return false;
+        if (other.getSmallImageIconUrl() == null ^ this.getSmallImageIconUrl() == null)
+            return false;
+        if (other.getSmallImageIconUrl() != null
+                && other.getSmallImageIconUrl().equals(this.getSmallImageIconUrl()) == false)
+            return false;
+        if (other.getSound() == null ^ this.getSound() == null)
+            return false;
+        if (other.getSound() != null && other.getSound().equals(this.getSound()) == false)
+            return false;
+        if (other.getSubstitutions() == null ^ this.getSubstitutions() == null)
+            return false;
+        if (other.getSubstitutions() != null
+                && other.getSubstitutions().equals(this.getSubstitutions()) == false)
+            return false;
+        if (other.getTitle() == null ^ this.getTitle() == null)
+            return false;
+        if (other.getTitle() != null && other.getTitle().equals(this.getTitle()) == false)
+            return false;
+        if (other.getUrl() == null ^ this.getUrl() == null)
+            return false;
+        if (other.getUrl() != null && other.getUrl().equals(this.getUrl()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignEmailMessage.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignEmailMessage.java
new file mode 100644
index 0000000000..ab782623ba
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignEmailMessage.java
@@ -0,0 +1,249 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * The email message configuration.
+ */
+public class CampaignEmailMessage implements Serializable {
+    /**
+     * The email text body.
+     */
+    private String body;
+
+    /**
+     * The email address used to send the email from. Defaults to use
+     * FromAddress specified in the Email Channel.
+     */
+    private String fromAddress;
+
+    /**
+     * The email html body.
+     */
+    private String htmlBody;
+
+    /**
+     * The email title (Or subject).
+     */
+    private String title;
+
+    /**
+     * The email text body.
+     *
+     * @return The email text body.
+     */
+    public String getBody() {
+        return body;
+    }
+
+    /**
+     * The email text body.
+     *
+     * @param body The email text body.
+     */
+    public void setBody(String body) {
+        this.body = body;
+    }
+
+    /**
+     * The email text body.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param body The email text body.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CampaignEmailMessage withBody(String body) {
+        this.body = body;
+        return this;
+    }
+
+    /**
+     * The email address used to send the email from. Defaults to use
+     * FromAddress specified in the Email Channel.
+     *
+     * @return The email address used to send the email from. Defaults to use
+     *         FromAddress specified in the Email Channel.
+     */
+    public String getFromAddress() {
+        return fromAddress;
+    }
+
+    /**
+     * The email address used to send the email from. Defaults to use
+     * FromAddress specified in the Email Channel.
+     *
+     * @param fromAddress The email address used to send the email from.
+     *            Defaults to use FromAddress specified in the Email Channel.
+     */
+    public void setFromAddress(String fromAddress) {
+        this.fromAddress = fromAddress;
+    }
+
+    /**
+     * The email address used to send the email from. Defaults to use
+     * FromAddress specified in the Email Channel.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param fromAddress The email address used to send the email from.
+     *            Defaults to use FromAddress specified in the Email Channel.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CampaignEmailMessage withFromAddress(String fromAddress) {
+        this.fromAddress = fromAddress;
+        return this;
+    }
+
+    /**
+     * The email html body.
+     *
+     * @return The email html body.
+     */
+    public String getHtmlBody() {
+        return htmlBody;
+    }
+
+    /**
+     * The email html body.
+     *
+     * @param htmlBody The email html body.
+     */
+    public void setHtmlBody(String htmlBody) {
+        this.htmlBody = htmlBody;
+    }
+
+    /**
+     * The email html body.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param htmlBody The email html body.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CampaignEmailMessage withHtmlBody(String htmlBody) {
+        this.htmlBody = htmlBody;
+        return this;
+    }
+
+    /**
+     * The email title (Or subject).
+     *
+     * @return The email title (Or subject).
+     */
+    public String getTitle() {
+        return title;
+    }
+
+    /**
+     * The email title (Or subject).
+     *
+     * @param title The email title (Or subject).
+     */
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    /**
+     * The email title (Or subject).
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param title The email title (Or subject).
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CampaignEmailMessage withTitle(String title) {
+        this.title = title;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getBody() != null)
+            sb.append("Body: " + getBody() + ",");
+        if (getFromAddress() != null)
+            sb.append("FromAddress: " + getFromAddress() + ",");
+        if (getHtmlBody() != null)
+            sb.append("HtmlBody: " + getHtmlBody() + ",");
+        if (getTitle() != null)
+            sb.append("Title: " + getTitle());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getBody() == null) ? 0 : getBody().hashCode());
+        hashCode = prime * hashCode
+                + ((getFromAddress() == null) ? 0 : getFromAddress().hashCode());
+        hashCode = prime * hashCode + ((getHtmlBody() == null) ? 0 : getHtmlBody().hashCode());
+        hashCode = prime * hashCode + ((getTitle() == null) ? 0 : getTitle().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof CampaignEmailMessage == false)
+            return false;
+        CampaignEmailMessage other = (CampaignEmailMessage) obj;
+
+        if (other.getBody() == null ^ this.getBody() == null)
+            return false;
+        if (other.getBody() != null && other.getBody().equals(this.getBody()) == false)
+            return false;
+        if (other.getFromAddress() == null ^ this.getFromAddress() == null)
+            return false;
+        if (other.getFromAddress() != null
+                && other.getFromAddress().equals(this.getFromAddress()) == false)
+            return false;
+        if (other.getHtmlBody() == null ^ this.getHtmlBody() == null)
+            return false;
+        if (other.getHtmlBody() != null && other.getHtmlBody().equals(this.getHtmlBody()) == false)
+            return false;
+        if (other.getTitle() == null ^ this.getTitle() == null)
+            return false;
+        if (other.getTitle() != null && other.getTitle().equals(this.getTitle()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignLimits.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignLimits.java
index f9de4a81dd..56d871bf80 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignLimits.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignLimits.java
@@ -17,12 +17,29 @@
 
 import java.io.Serializable;
 
+/**
+ * Campaign Limits are used to limit the number of messages that can be sent to
+ * a user.
+ */
 public class CampaignLimits implements Serializable {
     /**
      * The maximum number of messages that the campaign can send daily.
      */
     private Integer daily;
 
+    /**
+     * The maximum duration of a campaign from the scheduled start. Must be a
+     * minimum of 60 seconds.
+     */
+    private Integer maximumDuration;
+
+    /**
+     * The maximum number of messages per second that the campaign will send.
+     * This is a best effort maximum cap and can go as high as 20000 and as low
+     * as 50
+     */
+    private Integer messagesPerSecond;
+
     /**
      * The maximum total number of messages that the campaign can send.
      */
@@ -63,6 +80,90 @@ public CampaignLimits withDaily(Integer daily) {
         return this;
     }
 
+    /**
+     * The maximum duration of a campaign from the scheduled start. Must be a
+     * minimum of 60 seconds.
+     *
+     * @return The maximum duration of a campaign from the scheduled start. Must
+     *         be a minimum of 60 seconds.
+     */
+    public Integer getMaximumDuration() {
+        return maximumDuration;
+    }
+
+    /**
+     * The maximum duration of a campaign from the scheduled start. Must be a
+     * minimum of 60 seconds.
+     *
+     * @param maximumDuration The maximum duration of a campaign from the
+     *            scheduled start. Must be a minimum of 60 seconds.
+     */
+    public void setMaximumDuration(Integer maximumDuration) {
+        this.maximumDuration = maximumDuration;
+    }
+
+    /**
+     * The maximum duration of a campaign from the scheduled start. Must be a
+     * minimum of 60 seconds.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param maximumDuration The maximum duration of a campaign from the
+     *            scheduled start. Must be a minimum of 60 seconds.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CampaignLimits withMaximumDuration(Integer maximumDuration) {
+        this.maximumDuration = maximumDuration;
+        return this;
+    }
+
+    /**
+     * The maximum number of messages per second that the campaign will send.
+     * This is a best effort maximum cap and can go as high as 20000 and as low
+     * as 50
+     *
+     * @return The maximum number of messages per second that the campaign will
+     *         send. This is a best effort maximum cap and can go as high as
+     *         20000 and as low as 50
+     */
+    public Integer getMessagesPerSecond() {
+        return messagesPerSecond;
+    }
+
+    /**
+     * The maximum number of messages per second that the campaign will send.
+     * This is a best effort maximum cap and can go as high as 20000 and as low
+     * as 50
+     *
+     * @param messagesPerSecond The maximum number of messages per second that
+     *            the campaign will send. This is a best effort maximum cap and
+     *            can go as high as 20000 and as low as 50
+     */
+    public void setMessagesPerSecond(Integer messagesPerSecond) {
+        this.messagesPerSecond = messagesPerSecond;
+    }
+
+    /**
+     * The maximum number of messages per second that the campaign will send.
+     * This is a best effort maximum cap and can go as high as 20000 and as low
+     * as 50
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param messagesPerSecond The maximum number of messages per second that
+     *            the campaign will send. This is a best effort maximum cap and
+     *            can go as high as 20000 and as low as 50
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CampaignLimits withMessagesPerSecond(Integer messagesPerSecond) {
+        this.messagesPerSecond = messagesPerSecond;
+        return this;
+    }
+
     /**
      * The maximum total number of messages that the campaign can send.
      *
@@ -111,6 +212,10 @@ public String toString() {
         sb.append("{");
         if (getDaily() != null)
             sb.append("Daily: " + getDaily() + ",");
+        if (getMaximumDuration() != null)
+            sb.append("MaximumDuration: " + getMaximumDuration() + ",");
+        if (getMessagesPerSecond() != null)
+            sb.append("MessagesPerSecond: " + getMessagesPerSecond() + ",");
         if (getTotal() != null)
             sb.append("Total: " + getTotal());
         sb.append("}");
@@ -123,6 +228,10 @@ public int hashCode() {
         int hashCode = 1;
 
         hashCode = prime * hashCode + ((getDaily() == null) ? 0 : getDaily().hashCode());
+        hashCode = prime * hashCode
+                + ((getMaximumDuration() == null) ? 0 : getMaximumDuration().hashCode());
+        hashCode = prime * hashCode
+                + ((getMessagesPerSecond() == null) ? 0 : getMessagesPerSecond().hashCode());
         hashCode = prime * hashCode + ((getTotal() == null) ? 0 : getTotal().hashCode());
         return hashCode;
     }
@@ -142,6 +251,16 @@ public boolean equals(Object obj) {
             return false;
         if (other.getDaily() != null && other.getDaily().equals(this.getDaily()) == false)
             return false;
+        if (other.getMaximumDuration() == null ^ this.getMaximumDuration() == null)
+            return false;
+        if (other.getMaximumDuration() != null
+                && other.getMaximumDuration().equals(this.getMaximumDuration()) == false)
+            return false;
+        if (other.getMessagesPerSecond() == null ^ this.getMessagesPerSecond() == null)
+            return false;
+        if (other.getMessagesPerSecond() != null
+                && other.getMessagesPerSecond().equals(this.getMessagesPerSecond()) == false)
+            return false;
         if (other.getTotal() == null ^ this.getTotal() == null)
             return false;
         if (other.getTotal() != null && other.getTotal().equals(this.getTotal()) == false)
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignResponse.java
index bedf22f9f5..3c74cd85af 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignResponse.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignResponse.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Campaign definition
+ */
 public class CampaignResponse implements Serializable {
     /**
      * Treatments that are defined in addition to the default treatment.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignSmsMessage.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignSmsMessage.java
new file mode 100644
index 0000000000..27e4032f6f
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignSmsMessage.java
@@ -0,0 +1,249 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * SMS message configuration.
+ */
+public class CampaignSmsMessage implements Serializable {
+    /**
+     * The SMS text body.
+     */
+    private String body;
+
+    /**
+     * Is this is a transactional SMS message, otherwise a promotional message.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>TRANSACTIONAL, PROMOTIONAL
+     */
+    private String messageType;
+
+    /**
+     * Sender ID of sent message.
+     */
+    private String senderId;
+
+    /**
+     * The SMS text body.
+     *
+     * @return The SMS text body.
+     */
+    public String getBody() {
+        return body;
+    }
+
+    /**
+     * The SMS text body.
+     *
+     * @param body The SMS text body.
+     */
+    public void setBody(String body) {
+        this.body = body;
+    }
+
+    /**
+     * The SMS text body.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param body The SMS text body.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CampaignSmsMessage withBody(String body) {
+        this.body = body;
+        return this;
+    }
+
+    /**
+     * Is this is a transactional SMS message, otherwise a promotional message.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>TRANSACTIONAL, PROMOTIONAL
+     *
+     * @return Is this is a transactional SMS message, otherwise a promotional
+     *         message.
+     * @see MessageType
+     */
+    public String getMessageType() {
+        return messageType;
+    }
+
+    /**
+     * Is this is a transactional SMS message, otherwise a promotional message.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>TRANSACTIONAL, PROMOTIONAL
+     *
+     * @param messageType Is this is a transactional SMS message, otherwise a
+     *            promotional message.
+     * @see MessageType
+     */
+    public void setMessageType(String messageType) {
+        this.messageType = messageType;
+    }
+
+    /**
+     * Is this is a transactional SMS message, otherwise a promotional message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>TRANSACTIONAL, PROMOTIONAL
+     *
+     * @param messageType Is this is a transactional SMS message, otherwise a
+     *            promotional message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see MessageType
+     */
+    public CampaignSmsMessage withMessageType(String messageType) {
+        this.messageType = messageType;
+        return this;
+    }
+
+    /**
+     * Is this is a transactional SMS message, otherwise a promotional message.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>TRANSACTIONAL, PROMOTIONAL
+     *
+     * @param messageType Is this is a transactional SMS message, otherwise a
+     *            promotional message.
+     * @see MessageType
+     */
+    public void setMessageType(MessageType messageType) {
+        this.messageType = messageType.toString();
+    }
+
+    /**
+     * Is this is a transactional SMS message, otherwise a promotional message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>TRANSACTIONAL, PROMOTIONAL
+     *
+     * @param messageType Is this is a transactional SMS message, otherwise a
+     *            promotional message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see MessageType
+     */
+    public CampaignSmsMessage withMessageType(MessageType messageType) {
+        this.messageType = messageType.toString();
+        return this;
+    }
+
+    /**
+     * Sender ID of sent message.
+     *
+     * @return Sender ID of sent message.
+     */
+    public String getSenderId() {
+        return senderId;
+    }
+
+    /**
+     * Sender ID of sent message.
+     *
+     * @param senderId Sender ID of sent message.
+     */
+    public void setSenderId(String senderId) {
+        this.senderId = senderId;
+    }
+
+    /**
+     * Sender ID of sent message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param senderId Sender ID of sent message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CampaignSmsMessage withSenderId(String senderId) {
+        this.senderId = senderId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getBody() != null)
+            sb.append("Body: " + getBody() + ",");
+        if (getMessageType() != null)
+            sb.append("MessageType: " + getMessageType() + ",");
+        if (getSenderId() != null)
+            sb.append("SenderId: " + getSenderId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getBody() == null) ? 0 : getBody().hashCode());
+        hashCode = prime * hashCode
+                + ((getMessageType() == null) ? 0 : getMessageType().hashCode());
+        hashCode = prime * hashCode + ((getSenderId() == null) ? 0 : getSenderId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof CampaignSmsMessage == false)
+            return false;
+        CampaignSmsMessage other = (CampaignSmsMessage) obj;
+
+        if (other.getBody() == null ^ this.getBody() == null)
+            return false;
+        if (other.getBody() != null && other.getBody().equals(this.getBody()) == false)
+            return false;
+        if (other.getMessageType() == null ^ this.getMessageType() == null)
+            return false;
+        if (other.getMessageType() != null
+                && other.getMessageType().equals(this.getMessageType()) == false)
+            return false;
+        if (other.getSenderId() == null ^ this.getSenderId() == null)
+            return false;
+        if (other.getSenderId() != null && other.getSenderId().equals(this.getSenderId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignState.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignState.java
index 793df8a6ac..6d601f67d8 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignState.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignState.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * State of the Campaign
+ */
 public class CampaignState implements Serializable {
     /**
      * The status of the campaign, or the status of a treatment that belongs to
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignsResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignsResponse.java
index 16234d91e9..d920f6fad3 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignsResponse.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CampaignsResponse.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * List of available campaigns.
+ */
 public class CampaignsResponse implements Serializable {
     /**
      * A list of campaigns.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ChannelType.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ChannelType.java
index fb622feab4..e6d9ee86c3 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ChannelType.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ChannelType.java
@@ -23,8 +23,13 @@
  */
 public enum ChannelType {
 
+    GCM("GCM"),
     APNS("APNS"),
-    GCM("GCM");
+    APNS_SANDBOX("APNS_SANDBOX"),
+    ADM("ADM"),
+    SMS("SMS"),
+    EMAIL("EMAIL"),
+    BAIDU("BAIDU");
 
     private String value;
 
@@ -40,8 +45,13 @@ public String toString() {
     private static final Map<String, ChannelType> enumMap;
     static {
         enumMap = new HashMap<String, ChannelType>();
-        enumMap.put("APNS", APNS);
         enumMap.put("GCM", GCM);
+        enumMap.put("APNS", APNS);
+        enumMap.put("APNS_SANDBOX", APNS_SANDBOX);
+        enumMap.put("ADM", ADM);
+        enumMap.put("SMS", SMS);
+        enumMap.put("EMAIL", EMAIL);
+        enumMap.put("BAIDU", BAIDU);
     }
 
     /**
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateAppRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateAppRequest.java
new file mode 100644
index 0000000000..b952d6f209
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateAppRequest.java
@@ -0,0 +1,113 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Creates or updates an app.
+ */
+public class CreateAppRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * Application Request.
+     */
+    private CreateApplicationRequest createApplicationRequest;
+
+    /**
+     * Application Request.
+     *
+     * @return Application Request.
+     */
+    public CreateApplicationRequest getCreateApplicationRequest() {
+        return createApplicationRequest;
+    }
+
+    /**
+     * Application Request.
+     *
+     * @param createApplicationRequest Application Request.
+     */
+    public void setCreateApplicationRequest(CreateApplicationRequest createApplicationRequest) {
+        this.createApplicationRequest = createApplicationRequest;
+    }
+
+    /**
+     * Application Request.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param createApplicationRequest Application Request.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateAppRequest withCreateApplicationRequest(
+            CreateApplicationRequest createApplicationRequest) {
+        this.createApplicationRequest = createApplicationRequest;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getCreateApplicationRequest() != null)
+            sb.append("CreateApplicationRequest: " + getCreateApplicationRequest());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime
+                * hashCode
+                + ((getCreateApplicationRequest() == null) ? 0 : getCreateApplicationRequest()
+                        .hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof CreateAppRequest == false)
+            return false;
+        CreateAppRequest other = (CreateAppRequest) obj;
+
+        if (other.getCreateApplicationRequest() == null
+                ^ this.getCreateApplicationRequest() == null)
+            return false;
+        if (other.getCreateApplicationRequest() != null
+                && other.getCreateApplicationRequest().equals(this.getCreateApplicationRequest()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateAppResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateAppResult.java
new file mode 100644
index 0000000000..74e5cf1830
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateAppResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class CreateAppResult implements Serializable {
+    /**
+     * Application Response.
+     */
+    private ApplicationResponse applicationResponse;
+
+    /**
+     * Application Response.
+     *
+     * @return Application Response.
+     */
+    public ApplicationResponse getApplicationResponse() {
+        return applicationResponse;
+    }
+
+    /**
+     * Application Response.
+     *
+     * @param applicationResponse Application Response.
+     */
+    public void setApplicationResponse(ApplicationResponse applicationResponse) {
+        this.applicationResponse = applicationResponse;
+    }
+
+    /**
+     * Application Response.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationResponse Application Response.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateAppResult withApplicationResponse(ApplicationResponse applicationResponse) {
+        this.applicationResponse = applicationResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationResponse() != null)
+            sb.append("ApplicationResponse: " + getApplicationResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationResponse() == null) ? 0 : getApplicationResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof CreateAppResult == false)
+            return false;
+        CreateAppResult other = (CreateAppResult) obj;
+
+        if (other.getApplicationResponse() == null ^ this.getApplicationResponse() == null)
+            return false;
+        if (other.getApplicationResponse() != null
+                && other.getApplicationResponse().equals(this.getApplicationResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateApplicationRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateApplicationRequest.java
new file mode 100644
index 0000000000..1d8b42528a
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateApplicationRequest.java
@@ -0,0 +1,108 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Application Request.
+ */
+public class CreateApplicationRequest implements Serializable {
+    /**
+     * The display name of the application. Used in the Amazon Pinpoint console.
+     */
+    private String name;
+
+    /**
+     * The display name of the application. Used in the Amazon Pinpoint console.
+     *
+     * @return The display name of the application. Used in the Amazon Pinpoint
+     *         console.
+     */
+    public String getName() {
+        return name;
+    }
+
+    /**
+     * The display name of the application. Used in the Amazon Pinpoint console.
+     *
+     * @param name The display name of the application. Used in the Amazon
+     *            Pinpoint console.
+     */
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    /**
+     * The display name of the application. Used in the Amazon Pinpoint console.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param name The display name of the application. Used in the Amazon
+     *            Pinpoint console.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateApplicationRequest withName(String name) {
+        this.name = name;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getName() != null)
+            sb.append("Name: " + getName());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getName() == null) ? 0 : getName().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof CreateApplicationRequest == false)
+            return false;
+        CreateApplicationRequest other = (CreateApplicationRequest) obj;
+
+        if (other.getName() == null ^ this.getName() == null)
+            return false;
+        if (other.getName() != null && other.getName().equals(this.getName()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateCampaignRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateCampaignRequest.java
index fbc2612faf..6b635ac5db 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateCampaignRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateCampaignRequest.java
@@ -23,54 +23,16 @@
  * Creates or updates a campaign.
  */
 public class CreateCampaignRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
     private String applicationId;
 
     /**
-     * The new value for the writeCampaignRequest property for this object.
+     * Used to create a campaign.
      */
     private WriteCampaignRequest writeCampaignRequest;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public CreateCampaignRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -107,32 +69,30 @@ public CreateCampaignRequest withApplicationId(String applicationId) {
     }
 
     /**
-     * Returns the value of the writeCampaignRequest property for this object.
+     * Used to create a campaign.
      *
-     * @return The value of the writeCampaignRequest property for this object.
+     * @return Used to create a campaign.
      */
     public WriteCampaignRequest getWriteCampaignRequest() {
         return writeCampaignRequest;
     }
 
     /**
-     * Sets the value of writeCampaignRequest
+     * Used to create a campaign.
      *
-     * @param writeCampaignRequest The new value for the writeCampaignRequest
-     *            property for this object.
+     * @param writeCampaignRequest Used to create a campaign.
      */
     public void setWriteCampaignRequest(WriteCampaignRequest writeCampaignRequest) {
         this.writeCampaignRequest = writeCampaignRequest;
     }
 
     /**
-     * Sets the value of the writeCampaignRequest property for this object.
+     * Used to create a campaign.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param writeCampaignRequest The new value for the writeCampaignRequest
-     *            property for this object.
+     * @param writeCampaignRequest Used to create a campaign.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -152,8 +112,6 @@ public CreateCampaignRequest withWriteCampaignRequest(WriteCampaignRequest write
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getWriteCampaignRequest() != null)
@@ -167,7 +125,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode
@@ -186,10 +143,6 @@ public boolean equals(Object obj) {
             return false;
         CreateCampaignRequest other = (CreateCampaignRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateCampaignResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateCampaignResult.java
index 5c3c42f540..e7ed936126 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateCampaignResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateCampaignResult.java
@@ -19,79 +19,35 @@
 
 public class CreateCampaignResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the campaignResponse property for this object.
+     * Campaign definition
      */
     private CampaignResponse campaignResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Campaign definition
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public CreateCampaignResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the campaignResponse property for this object.
-     *
-     * @return The value of the campaignResponse property for this object.
+     * @return Campaign definition
      */
     public CampaignResponse getCampaignResponse() {
         return campaignResponse;
     }
 
     /**
-     * Sets the value of campaignResponse
+     * Campaign definition
      *
-     * @param campaignResponse The new value for the campaignResponse property
-     *            for this object.
+     * @param campaignResponse Campaign definition
      */
     public void setCampaignResponse(CampaignResponse campaignResponse) {
         this.campaignResponse = campaignResponse;
     }
 
     /**
-     * Sets the value of the campaignResponse property for this object.
+     * Campaign definition
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param campaignResponse The new value for the campaignResponse property
-     *            for this object.
+     * @param campaignResponse Campaign definition
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public CreateCampaignResult withCampaignResponse(CampaignResponse campaignRespon
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getCampaignResponse() != null)
             sb.append("CampaignResponse: " + getCampaignResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getCampaignResponse() == null) ? 0 : getCampaignResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         CreateCampaignResult other = (CreateCampaignResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getCampaignResponse() == null ^ this.getCampaignResponse() == null)
             return false;
         if (other.getCampaignResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateImportJobRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateImportJobRequest.java
index f872b6aafa..4eb36cbd61 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateImportJobRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateImportJobRequest.java
@@ -23,11 +23,6 @@
  * Creates or updates an import job.
  */
 public class CreateImportJobRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
@@ -38,39 +33,6 @@
      */
     private ImportJobRequest importJobRequest;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public CreateImportJobRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -152,8 +114,6 @@ public CreateImportJobRequest withImportJobRequest(ImportJobRequest importJobReq
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getImportJobRequest() != null)
@@ -167,7 +127,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode
@@ -186,10 +145,6 @@ public boolean equals(Object obj) {
             return false;
         CreateImportJobRequest other = (CreateImportJobRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateImportJobResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateImportJobResult.java
index 9871b290c6..6bc1a2192b 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateImportJobResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateImportJobResult.java
@@ -18,53 +18,11 @@
 import java.io.Serializable;
 
 public class CreateImportJobResult implements Serializable {
-    /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
     /**
      * The new value for the importJobResponse property for this object.
      */
     private ImportJobResponse importJobResponse;
 
-    /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public CreateImportJobResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
     /**
      * Returns the value of the importJobResponse property for this object.
      *
@@ -111,8 +69,6 @@ public CreateImportJobResult withImportJobResponse(ImportJobResponse importJobRe
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getImportJobResponse() != null)
             sb.append("ImportJobResponse: " + getImportJobResponse());
         sb.append("}");
@@ -124,10 +80,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getImportJobResponse() == null) ? 0 : getImportJobResponse().hashCode());
         return hashCode;
@@ -144,12 +96,6 @@ public boolean equals(Object obj) {
             return false;
         CreateImportJobResult other = (CreateImportJobResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getImportJobResponse() == null ^ this.getImportJobResponse() == null)
             return false;
         if (other.getImportJobResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateSegmentRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateSegmentRequest.java
index 809893897e..0b4625ed46 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateSegmentRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateSegmentRequest.java
@@ -23,54 +23,16 @@
  * Used to create or update a segment.
  */
 public class CreateSegmentRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
     private String applicationId;
 
     /**
-     * The new value for the writeSegmentRequest property for this object.
+     * Segment definition.
      */
     private WriteSegmentRequest writeSegmentRequest;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public CreateSegmentRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -107,32 +69,30 @@ public CreateSegmentRequest withApplicationId(String applicationId) {
     }
 
     /**
-     * Returns the value of the writeSegmentRequest property for this object.
+     * Segment definition.
      *
-     * @return The value of the writeSegmentRequest property for this object.
+     * @return Segment definition.
      */
     public WriteSegmentRequest getWriteSegmentRequest() {
         return writeSegmentRequest;
     }
 
     /**
-     * Sets the value of writeSegmentRequest
+     * Segment definition.
      *
-     * @param writeSegmentRequest The new value for the writeSegmentRequest
-     *            property for this object.
+     * @param writeSegmentRequest Segment definition.
      */
     public void setWriteSegmentRequest(WriteSegmentRequest writeSegmentRequest) {
         this.writeSegmentRequest = writeSegmentRequest;
     }
 
     /**
-     * Sets the value of the writeSegmentRequest property for this object.
+     * Segment definition.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param writeSegmentRequest The new value for the writeSegmentRequest
-     *            property for this object.
+     * @param writeSegmentRequest Segment definition.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -152,8 +112,6 @@ public CreateSegmentRequest withWriteSegmentRequest(WriteSegmentRequest writeSeg
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getWriteSegmentRequest() != null)
@@ -167,7 +125,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode
@@ -186,10 +143,6 @@ public boolean equals(Object obj) {
             return false;
         CreateSegmentRequest other = (CreateSegmentRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateSegmentResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateSegmentResult.java
index 552b3cc8c3..0d6f6b2416 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateSegmentResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/CreateSegmentResult.java
@@ -19,79 +19,35 @@
 
 public class CreateSegmentResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the segmentResponse property for this object.
+     * Segment definition.
      */
     private SegmentResponse segmentResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Segment definition.
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public CreateSegmentResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the segmentResponse property for this object.
-     *
-     * @return The value of the segmentResponse property for this object.
+     * @return Segment definition.
      */
     public SegmentResponse getSegmentResponse() {
         return segmentResponse;
     }
 
     /**
-     * Sets the value of segmentResponse
+     * Segment definition.
      *
-     * @param segmentResponse The new value for the segmentResponse property for
-     *            this object.
+     * @param segmentResponse Segment definition.
      */
     public void setSegmentResponse(SegmentResponse segmentResponse) {
         this.segmentResponse = segmentResponse;
     }
 
     /**
-     * Sets the value of the segmentResponse property for this object.
+     * Segment definition.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param segmentResponse The new value for the segmentResponse property for
-     *            this object.
+     * @param segmentResponse Segment definition.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public CreateSegmentResult withSegmentResponse(SegmentResponse segmentResponse)
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getSegmentResponse() != null)
             sb.append("SegmentResponse: " + getSegmentResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getSegmentResponse() == null) ? 0 : getSegmentResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         CreateSegmentResult other = (CreateSegmentResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getSegmentResponse() == null ^ this.getSegmentResponse() == null)
             return false;
         if (other.getSegmentResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DefaultMessage.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DefaultMessage.java
new file mode 100644
index 0000000000..f15b7c819a
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DefaultMessage.java
@@ -0,0 +1,199 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Default Message across push notification, email, and sms.
+ */
+public class DefaultMessage implements Serializable {
+    /**
+     * The message body of the notification, the email body or the text message.
+     */
+    private String body;
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     */
+    private java.util.Map<String, java.util.List<String>> substitutions;
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @return The message body of the notification, the email body or the text
+     *         message.
+     */
+    public String getBody() {
+        return body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     */
+    public void setBody(String body) {
+        this.body = body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DefaultMessage withBody(String body) {
+        this.body = body;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @return Default message substitutions. Can be overridden by individual
+     *         address substitutions.
+     */
+    public java.util.Map<String, java.util.List<String>> getSubstitutions() {
+        return substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     */
+    public void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DefaultMessage withSubstitutions(
+            java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * The method adds a new key-value pair into Substitutions parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into Substitutions.
+     * @param value The corresponding value of the entry to be added into
+     *            Substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DefaultMessage addSubstitutionsEntry(String key, java.util.List<String> value) {
+        if (null == this.substitutions) {
+            this.substitutions = new java.util.HashMap<String, java.util.List<String>>();
+        }
+        if (this.substitutions.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.substitutions.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public DefaultMessage clearSubstitutionsEntries() {
+        this.substitutions = null;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getBody() != null)
+            sb.append("Body: " + getBody() + ",");
+        if (getSubstitutions() != null)
+            sb.append("Substitutions: " + getSubstitutions());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getBody() == null) ? 0 : getBody().hashCode());
+        hashCode = prime * hashCode
+                + ((getSubstitutions() == null) ? 0 : getSubstitutions().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DefaultMessage == false)
+            return false;
+        DefaultMessage other = (DefaultMessage) obj;
+
+        if (other.getBody() == null ^ this.getBody() == null)
+            return false;
+        if (other.getBody() != null && other.getBody().equals(this.getBody()) == false)
+            return false;
+        if (other.getSubstitutions() == null ^ this.getSubstitutions() == null)
+            return false;
+        if (other.getSubstitutions() != null
+                && other.getSubstitutions().equals(this.getSubstitutions()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DefaultPushNotificationMessage.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DefaultPushNotificationMessage.java
new file mode 100644
index 0000000000..81bdb9e67f
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DefaultPushNotificationMessage.java
@@ -0,0 +1,680 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Default Push Notification Message.
+ */
+public class DefaultPushNotificationMessage implements Serializable {
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     */
+    private String action;
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     */
+    private String body;
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     */
+    private java.util.Map<String, String> data;
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     */
+    private String jsonData;
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     */
+    private Boolean silentPush;
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     */
+    private java.util.Map<String, java.util.List<String>> substitutions;
+
+    /**
+     * The message title that displays above the message on the user's device.
+     */
+    private String title;
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     */
+    private String url;
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @return The action that occurs if the user taps a push notification
+     *         delivered by the campaign: OPEN_APP - Your app launches, or it
+     *         becomes the foreground app if it has been sent to the background.
+     *         This is the default action. DEEP_LINK - Uses deep linking
+     *         features in iOS and Android to open your app and display a
+     *         designated user interface within the app. URL - The default
+     *         mobile browser on the user's device launches and opens a web page
+     *         at the URL you specify. Possible values include: OPEN_APP |
+     *         DEEP_LINK | URL
+     * @see Action
+     */
+    public String getAction() {
+        return action;
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @see Action
+     */
+    public void setAction(String action) {
+        this.action = action;
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see Action
+     */
+    public DefaultPushNotificationMessage withAction(String action) {
+        this.action = action;
+        return this;
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @see Action
+     */
+    public void setAction(Action action) {
+        this.action = action.toString();
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see Action
+     */
+    public DefaultPushNotificationMessage withAction(Action action) {
+        this.action = action.toString();
+        return this;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @return The message body of the notification, the email body or the text
+     *         message.
+     */
+    public String getBody() {
+        return body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     */
+    public void setBody(String body) {
+        this.body = body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DefaultPushNotificationMessage withBody(String body) {
+        this.body = body;
+        return this;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @return The data payload used for a silent push. This payload is added to
+     *         the notifications' data.pinpoint.jsonBody' object
+     */
+    public java.util.Map<String, String> getData() {
+        return data;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @param data The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     */
+    public void setData(java.util.Map<String, String> data) {
+        this.data = data;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param data The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DefaultPushNotificationMessage withData(java.util.Map<String, String> data) {
+        this.data = data;
+        return this;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     * <p>
+     * The method adds a new key-value pair into Data parameter, and returns a
+     * reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Data.
+     * @param value The corresponding value of the entry to be added into Data.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DefaultPushNotificationMessage addDataEntry(String key, String value) {
+        if (null == this.data) {
+            this.data = new java.util.HashMap<String, String>();
+        }
+        if (this.data.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.data.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Data.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public DefaultPushNotificationMessage clearDataEntries() {
+        this.data = null;
+        return this;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @return The data payload used for a silent push. This payload is added to
+     *         the notifications' data.pinpoint.jsonBody' object
+     */
+    public String getJsonData() {
+        return jsonData;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @param jsonData The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     */
+    public void setJsonData(String jsonData) {
+        this.jsonData = jsonData;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param jsonData The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DefaultPushNotificationMessage withJsonData(String jsonData) {
+        this.jsonData = jsonData;
+        return this;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     *
+     * @return Indicates if the message should display on the users device.
+     *         Silent pushes can be used for Remote Configuration and Phone Home
+     *         use cases.
+     */
+    public Boolean isSilentPush() {
+        return silentPush;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     *
+     * @return Indicates if the message should display on the users device.
+     *         Silent pushes can be used for Remote Configuration and Phone Home
+     *         use cases.
+     */
+    public Boolean getSilentPush() {
+        return silentPush;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     *
+     * @param silentPush Indicates if the message should display on the users
+     *            device. Silent pushes can be used for Remote Configuration and
+     *            Phone Home use cases.
+     */
+    public void setSilentPush(Boolean silentPush) {
+        this.silentPush = silentPush;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param silentPush Indicates if the message should display on the users
+     *            device. Silent pushes can be used for Remote Configuration and
+     *            Phone Home use cases.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DefaultPushNotificationMessage withSilentPush(Boolean silentPush) {
+        this.silentPush = silentPush;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @return Default message substitutions. Can be overridden by individual
+     *         address substitutions.
+     */
+    public java.util.Map<String, java.util.List<String>> getSubstitutions() {
+        return substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     */
+    public void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DefaultPushNotificationMessage withSubstitutions(
+            java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * The method adds a new key-value pair into Substitutions parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into Substitutions.
+     * @param value The corresponding value of the entry to be added into
+     *            Substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DefaultPushNotificationMessage addSubstitutionsEntry(String key,
+            java.util.List<String> value) {
+        if (null == this.substitutions) {
+            this.substitutions = new java.util.HashMap<String, java.util.List<String>>();
+        }
+        if (this.substitutions.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.substitutions.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public DefaultPushNotificationMessage clearSubstitutionsEntries() {
+        this.substitutions = null;
+        return this;
+    }
+
+    /**
+     * The message title that displays above the message on the user's device.
+     *
+     * @return The message title that displays above the message on the user's
+     *         device.
+     */
+    public String getTitle() {
+        return title;
+    }
+
+    /**
+     * The message title that displays above the message on the user's device.
+     *
+     * @param title The message title that displays above the message on the
+     *            user's device.
+     */
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    /**
+     * The message title that displays above the message on the user's device.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param title The message title that displays above the message on the
+     *            user's device.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DefaultPushNotificationMessage withTitle(String title) {
+        this.title = title;
+        return this;
+    }
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     *
+     * @return The URL to open in the user's mobile browser. Used if the value
+     *         for Action is URL.
+     */
+    public String getUrl() {
+        return url;
+    }
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     *
+     * @param url The URL to open in the user's mobile browser. Used if the
+     *            value for Action is URL.
+     */
+    public void setUrl(String url) {
+        this.url = url;
+    }
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param url The URL to open in the user's mobile browser. Used if the
+     *            value for Action is URL.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DefaultPushNotificationMessage withUrl(String url) {
+        this.url = url;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAction() != null)
+            sb.append("Action: " + getAction() + ",");
+        if (getBody() != null)
+            sb.append("Body: " + getBody() + ",");
+        if (getData() != null)
+            sb.append("Data: " + getData() + ",");
+        if (getJsonData() != null)
+            sb.append("JsonData: " + getJsonData() + ",");
+        if (getSilentPush() != null)
+            sb.append("SilentPush: " + getSilentPush() + ",");
+        if (getSubstitutions() != null)
+            sb.append("Substitutions: " + getSubstitutions() + ",");
+        if (getTitle() != null)
+            sb.append("Title: " + getTitle() + ",");
+        if (getUrl() != null)
+            sb.append("Url: " + getUrl());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getAction() == null) ? 0 : getAction().hashCode());
+        hashCode = prime * hashCode + ((getBody() == null) ? 0 : getBody().hashCode());
+        hashCode = prime * hashCode + ((getData() == null) ? 0 : getData().hashCode());
+        hashCode = prime * hashCode + ((getJsonData() == null) ? 0 : getJsonData().hashCode());
+        hashCode = prime * hashCode + ((getSilentPush() == null) ? 0 : getSilentPush().hashCode());
+        hashCode = prime * hashCode
+                + ((getSubstitutions() == null) ? 0 : getSubstitutions().hashCode());
+        hashCode = prime * hashCode + ((getTitle() == null) ? 0 : getTitle().hashCode());
+        hashCode = prime * hashCode + ((getUrl() == null) ? 0 : getUrl().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DefaultPushNotificationMessage == false)
+            return false;
+        DefaultPushNotificationMessage other = (DefaultPushNotificationMessage) obj;
+
+        if (other.getAction() == null ^ this.getAction() == null)
+            return false;
+        if (other.getAction() != null && other.getAction().equals(this.getAction()) == false)
+            return false;
+        if (other.getBody() == null ^ this.getBody() == null)
+            return false;
+        if (other.getBody() != null && other.getBody().equals(this.getBody()) == false)
+            return false;
+        if (other.getData() == null ^ this.getData() == null)
+            return false;
+        if (other.getData() != null && other.getData().equals(this.getData()) == false)
+            return false;
+        if (other.getJsonData() == null ^ this.getJsonData() == null)
+            return false;
+        if (other.getJsonData() != null && other.getJsonData().equals(this.getJsonData()) == false)
+            return false;
+        if (other.getSilentPush() == null ^ this.getSilentPush() == null)
+            return false;
+        if (other.getSilentPush() != null
+                && other.getSilentPush().equals(this.getSilentPush()) == false)
+            return false;
+        if (other.getSubstitutions() == null ^ this.getSubstitutions() == null)
+            return false;
+        if (other.getSubstitutions() != null
+                && other.getSubstitutions().equals(this.getSubstitutions()) == false)
+            return false;
+        if (other.getTitle() == null ^ this.getTitle() == null)
+            return false;
+        if (other.getTitle() != null && other.getTitle().equals(this.getTitle()) == false)
+            return false;
+        if (other.getUrl() == null ^ this.getUrl() == null)
+            return false;
+        if (other.getUrl() != null && other.getUrl().equals(this.getUrl()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteAdmChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteAdmChannelRequest.java
new file mode 100644
index 0000000000..9ed9dd24e2
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteAdmChannelRequest.java
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Delete an ADM channel
+ */
+public class DeleteAdmChannelRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteAdmChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteAdmChannelRequest == false)
+            return false;
+        DeleteAdmChannelRequest other = (DeleteAdmChannelRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteAdmChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteAdmChannelResult.java
new file mode 100644
index 0000000000..2afa404137
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteAdmChannelResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class DeleteAdmChannelResult implements Serializable {
+    /**
+     * Amazon Device Messaging channel definition.
+     */
+    private ADMChannelResponse aDMChannelResponse;
+
+    /**
+     * Amazon Device Messaging channel definition.
+     *
+     * @return Amazon Device Messaging channel definition.
+     */
+    public ADMChannelResponse getADMChannelResponse() {
+        return aDMChannelResponse;
+    }
+
+    /**
+     * Amazon Device Messaging channel definition.
+     *
+     * @param aDMChannelResponse Amazon Device Messaging channel definition.
+     */
+    public void setADMChannelResponse(ADMChannelResponse aDMChannelResponse) {
+        this.aDMChannelResponse = aDMChannelResponse;
+    }
+
+    /**
+     * Amazon Device Messaging channel definition.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param aDMChannelResponse Amazon Device Messaging channel definition.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteAdmChannelResult withADMChannelResponse(ADMChannelResponse aDMChannelResponse) {
+        this.aDMChannelResponse = aDMChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getADMChannelResponse() != null)
+            sb.append("ADMChannelResponse: " + getADMChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getADMChannelResponse() == null) ? 0 : getADMChannelResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteAdmChannelResult == false)
+            return false;
+        DeleteAdmChannelResult other = (DeleteAdmChannelResult) obj;
+
+        if (other.getADMChannelResponse() == null ^ this.getADMChannelResponse() == null)
+            return false;
+        if (other.getADMChannelResponse() != null
+                && other.getADMChannelResponse().equals(this.getADMChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteApnsChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteApnsChannelRequest.java
index 410d77560d..0b7d113969 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteApnsChannelRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteApnsChannelRequest.java
@@ -23,49 +23,11 @@
  * Deletes the APNs channel for an app.
  */
 public class DeleteApnsChannelRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
     private String applicationId;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public DeleteApnsChannelRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -112,8 +74,6 @@ public DeleteApnsChannelRequest withApplicationId(String applicationId) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId());
         sb.append("}");
@@ -125,7 +85,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         return hashCode;
@@ -142,10 +101,6 @@ public boolean equals(Object obj) {
             return false;
         DeleteApnsChannelRequest other = (DeleteApnsChannelRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteApnsChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteApnsChannelResult.java
index d9638cbf9f..67490248b6 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteApnsChannelResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteApnsChannelResult.java
@@ -19,42 +19,37 @@
 
 public class DeleteApnsChannelResult implements Serializable {
     /**
-     * The new value for the aPNSChannelResponse property for this object.
+     * Apple Distribution Push Notification Service channel definition.
      */
     private APNSChannelResponse aPNSChannelResponse;
 
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * Returns the value of the aPNSChannelResponse property for this object.
+     * Apple Distribution Push Notification Service channel definition.
      *
-     * @return The value of the aPNSChannelResponse property for this object.
+     * @return Apple Distribution Push Notification Service channel definition.
      */
     public APNSChannelResponse getAPNSChannelResponse() {
         return aPNSChannelResponse;
     }
 
     /**
-     * Sets the value of aPNSChannelResponse
+     * Apple Distribution Push Notification Service channel definition.
      *
-     * @param aPNSChannelResponse The new value for the aPNSChannelResponse
-     *            property for this object.
+     * @param aPNSChannelResponse Apple Distribution Push Notification Service
+     *            channel definition.
      */
     public void setAPNSChannelResponse(APNSChannelResponse aPNSChannelResponse) {
         this.aPNSChannelResponse = aPNSChannelResponse;
     }
 
     /**
-     * Sets the value of the aPNSChannelResponse property for this object.
+     * Apple Distribution Push Notification Service channel definition.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param aPNSChannelResponse The new value for the aPNSChannelResponse
-     *            property for this object.
+     * @param aPNSChannelResponse Apple Distribution Push Notification Service
+     *            channel definition.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -63,43 +58,6 @@ public DeleteApnsChannelResult withAPNSChannelResponse(APNSChannelResponse aPNSC
         return this;
     }
 
-    /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public DeleteApnsChannelResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -112,9 +70,7 @@ public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
         if (getAPNSChannelResponse() != null)
-            sb.append("APNSChannelResponse: " + getAPNSChannelResponse() + ",");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin());
+            sb.append("APNSChannelResponse: " + getAPNSChannelResponse());
         sb.append("}");
         return sb.toString();
     }
@@ -126,10 +82,6 @@ public int hashCode() {
 
         hashCode = prime * hashCode
                 + ((getAPNSChannelResponse() == null) ? 0 : getAPNSChannelResponse().hashCode());
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         return hashCode;
     }
 
@@ -149,12 +101,6 @@ public boolean equals(Object obj) {
         if (other.getAPNSChannelResponse() != null
                 && other.getAPNSChannelResponse().equals(this.getAPNSChannelResponse()) == false)
             return false;
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteApnsSandboxChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteApnsSandboxChannelRequest.java
new file mode 100644
index 0000000000..c536da259a
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteApnsSandboxChannelRequest.java
@@ -0,0 +1,112 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Delete an APNS sandbox channel
+ */
+public class DeleteApnsSandboxChannelRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteApnsSandboxChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteApnsSandboxChannelRequest == false)
+            return false;
+        DeleteApnsSandboxChannelRequest other = (DeleteApnsSandboxChannelRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteApnsSandboxChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteApnsSandboxChannelResult.java
new file mode 100644
index 0000000000..591b95a301
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteApnsSandboxChannelResult.java
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class DeleteApnsSandboxChannelResult implements Serializable {
+    /**
+     * Apple Development Push Notification Service channel definition.
+     */
+    private APNSSandboxChannelResponse aPNSSandboxChannelResponse;
+
+    /**
+     * Apple Development Push Notification Service channel definition.
+     *
+     * @return Apple Development Push Notification Service channel definition.
+     */
+    public APNSSandboxChannelResponse getAPNSSandboxChannelResponse() {
+        return aPNSSandboxChannelResponse;
+    }
+
+    /**
+     * Apple Development Push Notification Service channel definition.
+     *
+     * @param aPNSSandboxChannelResponse Apple Development Push Notification
+     *            Service channel definition.
+     */
+    public void setAPNSSandboxChannelResponse(APNSSandboxChannelResponse aPNSSandboxChannelResponse) {
+        this.aPNSSandboxChannelResponse = aPNSSandboxChannelResponse;
+    }
+
+    /**
+     * Apple Development Push Notification Service channel definition.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param aPNSSandboxChannelResponse Apple Development Push Notification
+     *            Service channel definition.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteApnsSandboxChannelResult withAPNSSandboxChannelResponse(
+            APNSSandboxChannelResponse aPNSSandboxChannelResponse) {
+        this.aPNSSandboxChannelResponse = aPNSSandboxChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAPNSSandboxChannelResponse() != null)
+            sb.append("APNSSandboxChannelResponse: " + getAPNSSandboxChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime
+                * hashCode
+                + ((getAPNSSandboxChannelResponse() == null) ? 0 : getAPNSSandboxChannelResponse()
+                        .hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteApnsSandboxChannelResult == false)
+            return false;
+        DeleteApnsSandboxChannelResult other = (DeleteApnsSandboxChannelResult) obj;
+
+        if (other.getAPNSSandboxChannelResponse() == null
+                ^ this.getAPNSSandboxChannelResponse() == null)
+            return false;
+        if (other.getAPNSSandboxChannelResponse() != null
+                && other.getAPNSSandboxChannelResponse().equals(
+                        this.getAPNSSandboxChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteAppRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteAppRequest.java
new file mode 100644
index 0000000000..04b94b9988
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteAppRequest.java
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Deletes an app.
+ */
+public class DeleteAppRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteAppRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteAppRequest == false)
+            return false;
+        DeleteAppRequest other = (DeleteAppRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteAppResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteAppResult.java
new file mode 100644
index 0000000000..a8e7a4f720
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteAppResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class DeleteAppResult implements Serializable {
+    /**
+     * Application Response.
+     */
+    private ApplicationResponse applicationResponse;
+
+    /**
+     * Application Response.
+     *
+     * @return Application Response.
+     */
+    public ApplicationResponse getApplicationResponse() {
+        return applicationResponse;
+    }
+
+    /**
+     * Application Response.
+     *
+     * @param applicationResponse Application Response.
+     */
+    public void setApplicationResponse(ApplicationResponse applicationResponse) {
+        this.applicationResponse = applicationResponse;
+    }
+
+    /**
+     * Application Response.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationResponse Application Response.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteAppResult withApplicationResponse(ApplicationResponse applicationResponse) {
+        this.applicationResponse = applicationResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationResponse() != null)
+            sb.append("ApplicationResponse: " + getApplicationResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationResponse() == null) ? 0 : getApplicationResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteAppResult == false)
+            return false;
+        DeleteAppResult other = (DeleteAppResult) obj;
+
+        if (other.getApplicationResponse() == null ^ this.getApplicationResponse() == null)
+            return false;
+        if (other.getApplicationResponse() != null
+                && other.getApplicationResponse().equals(this.getApplicationResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteBaiduChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteBaiduChannelRequest.java
new file mode 100644
index 0000000000..3656aa89cb
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteBaiduChannelRequest.java
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Delete a BAIDU GCM channel
+ */
+public class DeleteBaiduChannelRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteBaiduChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteBaiduChannelRequest == false)
+            return false;
+        DeleteBaiduChannelRequest other = (DeleteBaiduChannelRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteBaiduChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteBaiduChannelResult.java
new file mode 100644
index 0000000000..8a7fcda6e7
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteBaiduChannelResult.java
@@ -0,0 +1,105 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class DeleteBaiduChannelResult implements Serializable {
+    /**
+     * Baidu Cloud Messaging channel definition
+     */
+    private BaiduChannelResponse baiduChannelResponse;
+
+    /**
+     * Baidu Cloud Messaging channel definition
+     *
+     * @return Baidu Cloud Messaging channel definition
+     */
+    public BaiduChannelResponse getBaiduChannelResponse() {
+        return baiduChannelResponse;
+    }
+
+    /**
+     * Baidu Cloud Messaging channel definition
+     *
+     * @param baiduChannelResponse Baidu Cloud Messaging channel definition
+     */
+    public void setBaiduChannelResponse(BaiduChannelResponse baiduChannelResponse) {
+        this.baiduChannelResponse = baiduChannelResponse;
+    }
+
+    /**
+     * Baidu Cloud Messaging channel definition
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param baiduChannelResponse Baidu Cloud Messaging channel definition
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteBaiduChannelResult withBaiduChannelResponse(
+            BaiduChannelResponse baiduChannelResponse) {
+        this.baiduChannelResponse = baiduChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getBaiduChannelResponse() != null)
+            sb.append("BaiduChannelResponse: " + getBaiduChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getBaiduChannelResponse() == null) ? 0 : getBaiduChannelResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteBaiduChannelResult == false)
+            return false;
+        DeleteBaiduChannelResult other = (DeleteBaiduChannelResult) obj;
+
+        if (other.getBaiduChannelResponse() == null ^ this.getBaiduChannelResponse() == null)
+            return false;
+        if (other.getBaiduChannelResponse() != null
+                && other.getBaiduChannelResponse().equals(this.getBaiduChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteCampaignRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteCampaignRequest.java
index b8cdf10e7b..773ac9b47b 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteCampaignRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteCampaignRequest.java
@@ -23,11 +23,6 @@
  * Deletes a campaign.
  */
 public class DeleteCampaignRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
@@ -38,39 +33,6 @@
      */
     private String campaignId;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public DeleteCampaignRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -152,8 +114,6 @@ public DeleteCampaignRequest withCampaignId(String campaignId) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getCampaignId() != null)
@@ -167,7 +127,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getCampaignId() == null) ? 0 : getCampaignId().hashCode());
@@ -185,10 +144,6 @@ public boolean equals(Object obj) {
             return false;
         DeleteCampaignRequest other = (DeleteCampaignRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteCampaignResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteCampaignResult.java
index 88fd58fa71..dd47470d2c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteCampaignResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteCampaignResult.java
@@ -19,79 +19,35 @@
 
 public class DeleteCampaignResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the campaignResponse property for this object.
+     * Campaign definition
      */
     private CampaignResponse campaignResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Campaign definition
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public DeleteCampaignResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the campaignResponse property for this object.
-     *
-     * @return The value of the campaignResponse property for this object.
+     * @return Campaign definition
      */
     public CampaignResponse getCampaignResponse() {
         return campaignResponse;
     }
 
     /**
-     * Sets the value of campaignResponse
+     * Campaign definition
      *
-     * @param campaignResponse The new value for the campaignResponse property
-     *            for this object.
+     * @param campaignResponse Campaign definition
      */
     public void setCampaignResponse(CampaignResponse campaignResponse) {
         this.campaignResponse = campaignResponse;
     }
 
     /**
-     * Sets the value of the campaignResponse property for this object.
+     * Campaign definition
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param campaignResponse The new value for the campaignResponse property
-     *            for this object.
+     * @param campaignResponse Campaign definition
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public DeleteCampaignResult withCampaignResponse(CampaignResponse campaignRespon
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getCampaignResponse() != null)
             sb.append("CampaignResponse: " + getCampaignResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getCampaignResponse() == null) ? 0 : getCampaignResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         DeleteCampaignResult other = (DeleteCampaignResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getCampaignResponse() == null ^ this.getCampaignResponse() == null)
             return false;
         if (other.getCampaignResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteEmailChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteEmailChannelRequest.java
new file mode 100644
index 0000000000..2754e9ce4c
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteEmailChannelRequest.java
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Delete an email channel
+ */
+public class DeleteEmailChannelRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteEmailChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteEmailChannelRequest == false)
+            return false;
+        DeleteEmailChannelRequest other = (DeleteEmailChannelRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteEmailChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteEmailChannelResult.java
new file mode 100644
index 0000000000..b187824832
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteEmailChannelResult.java
@@ -0,0 +1,105 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class DeleteEmailChannelResult implements Serializable {
+    /**
+     * Email Channel Response.
+     */
+    private EmailChannelResponse emailChannelResponse;
+
+    /**
+     * Email Channel Response.
+     *
+     * @return Email Channel Response.
+     */
+    public EmailChannelResponse getEmailChannelResponse() {
+        return emailChannelResponse;
+    }
+
+    /**
+     * Email Channel Response.
+     *
+     * @param emailChannelResponse Email Channel Response.
+     */
+    public void setEmailChannelResponse(EmailChannelResponse emailChannelResponse) {
+        this.emailChannelResponse = emailChannelResponse;
+    }
+
+    /**
+     * Email Channel Response.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param emailChannelResponse Email Channel Response.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteEmailChannelResult withEmailChannelResponse(
+            EmailChannelResponse emailChannelResponse) {
+        this.emailChannelResponse = emailChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getEmailChannelResponse() != null)
+            sb.append("EmailChannelResponse: " + getEmailChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getEmailChannelResponse() == null) ? 0 : getEmailChannelResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteEmailChannelResult == false)
+            return false;
+        DeleteEmailChannelResult other = (DeleteEmailChannelResult) obj;
+
+        if (other.getEmailChannelResponse() == null ^ this.getEmailChannelResponse() == null)
+            return false;
+        if (other.getEmailChannelResponse() != null
+                && other.getEmailChannelResponse().equals(this.getEmailChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteEventStreamRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteEventStreamRequest.java
new file mode 100644
index 0000000000..f958c28e9d
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteEventStreamRequest.java
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Deletes the event stream for an app.
+ */
+public class DeleteEventStreamRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteEventStreamRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteEventStreamRequest == false)
+            return false;
+        DeleteEventStreamRequest other = (DeleteEventStreamRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteEventStreamResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteEventStreamResult.java
new file mode 100644
index 0000000000..379f64046c
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteEventStreamResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class DeleteEventStreamResult implements Serializable {
+    /**
+     * Model for an event publishing subscription export.
+     */
+    private EventStream eventStream;
+
+    /**
+     * Model for an event publishing subscription export.
+     *
+     * @return Model for an event publishing subscription export.
+     */
+    public EventStream getEventStream() {
+        return eventStream;
+    }
+
+    /**
+     * Model for an event publishing subscription export.
+     *
+     * @param eventStream Model for an event publishing subscription export.
+     */
+    public void setEventStream(EventStream eventStream) {
+        this.eventStream = eventStream;
+    }
+
+    /**
+     * Model for an event publishing subscription export.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param eventStream Model for an event publishing subscription export.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteEventStreamResult withEventStream(EventStream eventStream) {
+        this.eventStream = eventStream;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getEventStream() != null)
+            sb.append("EventStream: " + getEventStream());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getEventStream() == null) ? 0 : getEventStream().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteEventStreamResult == false)
+            return false;
+        DeleteEventStreamResult other = (DeleteEventStreamResult) obj;
+
+        if (other.getEventStream() == null ^ this.getEventStream() == null)
+            return false;
+        if (other.getEventStream() != null
+                && other.getEventStream().equals(this.getEventStream()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteGcmChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteGcmChannelRequest.java
index 4a600a1277..d1620e036e 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteGcmChannelRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteGcmChannelRequest.java
@@ -23,49 +23,11 @@
  * Deletes the GCM channel for an app.
  */
 public class DeleteGcmChannelRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
     private String applicationId;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public DeleteGcmChannelRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -112,8 +74,6 @@ public DeleteGcmChannelRequest withApplicationId(String applicationId) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId());
         sb.append("}");
@@ -125,7 +85,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         return hashCode;
@@ -142,10 +101,6 @@ public boolean equals(Object obj) {
             return false;
         DeleteGcmChannelRequest other = (DeleteGcmChannelRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteGcmChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteGcmChannelResult.java
index 505562ca4e..e9743521a5 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteGcmChannelResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteGcmChannelResult.java
@@ -19,79 +19,35 @@
 
 public class DeleteGcmChannelResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the gCMChannelResponse property for this object.
+     * Google Cloud Messaging channel definition
      */
     private GCMChannelResponse gCMChannelResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Google Cloud Messaging channel definition
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public DeleteGcmChannelResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the gCMChannelResponse property for this object.
-     *
-     * @return The value of the gCMChannelResponse property for this object.
+     * @return Google Cloud Messaging channel definition
      */
     public GCMChannelResponse getGCMChannelResponse() {
         return gCMChannelResponse;
     }
 
     /**
-     * Sets the value of gCMChannelResponse
+     * Google Cloud Messaging channel definition
      *
-     * @param gCMChannelResponse The new value for the gCMChannelResponse
-     *            property for this object.
+     * @param gCMChannelResponse Google Cloud Messaging channel definition
      */
     public void setGCMChannelResponse(GCMChannelResponse gCMChannelResponse) {
         this.gCMChannelResponse = gCMChannelResponse;
     }
 
     /**
-     * Sets the value of the gCMChannelResponse property for this object.
+     * Google Cloud Messaging channel definition
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param gCMChannelResponse The new value for the gCMChannelResponse
-     *            property for this object.
+     * @param gCMChannelResponse Google Cloud Messaging channel definition
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public DeleteGcmChannelResult withGCMChannelResponse(GCMChannelResponse gCMChann
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getGCMChannelResponse() != null)
             sb.append("GCMChannelResponse: " + getGCMChannelResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getGCMChannelResponse() == null) ? 0 : getGCMChannelResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         DeleteGcmChannelResult other = (DeleteGcmChannelResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getGCMChannelResponse() == null ^ this.getGCMChannelResponse() == null)
             return false;
         if (other.getGCMChannelResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteSegmentRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteSegmentRequest.java
index 1fad9f1b5b..2a1f063f5c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteSegmentRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteSegmentRequest.java
@@ -23,11 +23,6 @@
  * Deletes a segment.
  */
 public class DeleteSegmentRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
@@ -38,39 +33,6 @@
      */
     private String segmentId;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public DeleteSegmentRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -152,8 +114,6 @@ public DeleteSegmentRequest withSegmentId(String segmentId) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getSegmentId() != null)
@@ -167,7 +127,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getSegmentId() == null) ? 0 : getSegmentId().hashCode());
@@ -185,10 +144,6 @@ public boolean equals(Object obj) {
             return false;
         DeleteSegmentRequest other = (DeleteSegmentRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteSegmentResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteSegmentResult.java
index a6394a9263..026fc69c54 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteSegmentResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteSegmentResult.java
@@ -19,79 +19,35 @@
 
 public class DeleteSegmentResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the segmentResponse property for this object.
+     * Segment definition.
      */
     private SegmentResponse segmentResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Segment definition.
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public DeleteSegmentResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the segmentResponse property for this object.
-     *
-     * @return The value of the segmentResponse property for this object.
+     * @return Segment definition.
      */
     public SegmentResponse getSegmentResponse() {
         return segmentResponse;
     }
 
     /**
-     * Sets the value of segmentResponse
+     * Segment definition.
      *
-     * @param segmentResponse The new value for the segmentResponse property for
-     *            this object.
+     * @param segmentResponse Segment definition.
      */
     public void setSegmentResponse(SegmentResponse segmentResponse) {
         this.segmentResponse = segmentResponse;
     }
 
     /**
-     * Sets the value of the segmentResponse property for this object.
+     * Segment definition.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param segmentResponse The new value for the segmentResponse property for
-     *            this object.
+     * @param segmentResponse Segment definition.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public DeleteSegmentResult withSegmentResponse(SegmentResponse segmentResponse)
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getSegmentResponse() != null)
             sb.append("SegmentResponse: " + getSegmentResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getSegmentResponse() == null) ? 0 : getSegmentResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         DeleteSegmentResult other = (DeleteSegmentResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getSegmentResponse() == null ^ this.getSegmentResponse() == null)
             return false;
         if (other.getSegmentResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteSmsChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteSmsChannelRequest.java
new file mode 100644
index 0000000000..9a36a2ba5d
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteSmsChannelRequest.java
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Delete an SMS channel
+ */
+public class DeleteSmsChannelRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteSmsChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteSmsChannelRequest == false)
+            return false;
+        DeleteSmsChannelRequest other = (DeleteSmsChannelRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteSmsChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteSmsChannelResult.java
new file mode 100644
index 0000000000..7574b16b8d
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeleteSmsChannelResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class DeleteSmsChannelResult implements Serializable {
+    /**
+     * SMS Channel Response.
+     */
+    private SMSChannelResponse sMSChannelResponse;
+
+    /**
+     * SMS Channel Response.
+     *
+     * @return SMS Channel Response.
+     */
+    public SMSChannelResponse getSMSChannelResponse() {
+        return sMSChannelResponse;
+    }
+
+    /**
+     * SMS Channel Response.
+     *
+     * @param sMSChannelResponse SMS Channel Response.
+     */
+    public void setSMSChannelResponse(SMSChannelResponse sMSChannelResponse) {
+        this.sMSChannelResponse = sMSChannelResponse;
+    }
+
+    /**
+     * SMS Channel Response.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param sMSChannelResponse SMS Channel Response.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteSmsChannelResult withSMSChannelResponse(SMSChannelResponse sMSChannelResponse) {
+        this.sMSChannelResponse = sMSChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getSMSChannelResponse() != null)
+            sb.append("SMSChannelResponse: " + getSMSChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getSMSChannelResponse() == null) ? 0 : getSMSChannelResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteSmsChannelResult == false)
+            return false;
+        DeleteSmsChannelResult other = (DeleteSmsChannelResult) obj;
+
+        if (other.getSMSChannelResponse() == null ^ this.getSMSChannelResponse() == null)
+            return false;
+        if (other.getSMSChannelResponse() != null
+                && other.getSMSChannelResponse().equals(this.getSMSChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeliveryStatus.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeliveryStatus.java
new file mode 100644
index 0000000000..6411d33b74
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DeliveryStatus.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Delivery Status
+ */
+public enum DeliveryStatus {
+
+    SUCCESSFUL("SUCCESSFUL"),
+    THROTTLED("THROTTLED"),
+    TEMPORARY_FAILURE("TEMPORARY_FAILURE"),
+    PERMANENT_FAILURE("PERMANENT_FAILURE");
+
+    private String value;
+
+    private DeliveryStatus(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, DeliveryStatus> enumMap;
+    static {
+        enumMap = new HashMap<String, DeliveryStatus>();
+        enumMap.put("SUCCESSFUL", SUCCESSFUL);
+        enumMap.put("THROTTLED", THROTTLED);
+        enumMap.put("TEMPORARY_FAILURE", TEMPORARY_FAILURE);
+        enumMap.put("PERMANENT_FAILURE", PERMANENT_FAILURE);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return DeliveryStatus corresponding to the value
+     */
+    public static DeliveryStatus fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DirectMessageConfiguration.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DirectMessageConfiguration.java
new file mode 100644
index 0000000000..3c8be8ee01
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/DirectMessageConfiguration.java
@@ -0,0 +1,474 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * The message configuration.
+ */
+public class DirectMessageConfiguration implements Serializable {
+    /**
+     * The message to ADM channels. Overrides the default push notification
+     * message.
+     */
+    private ADMMessage aDMMessage;
+
+    /**
+     * The message to APNS channels. Overrides the default push notification
+     * message.
+     */
+    private APNSMessage aPNSMessage;
+
+    /**
+     * The message to Baidu GCM channels. Overrides the default push
+     * notification message.
+     */
+    private BaiduMessage baiduMessage;
+
+    /**
+     * The default message for all channels.
+     */
+    private DefaultMessage defaultMessage;
+
+    /**
+     * The default push notification message for all push channels.
+     */
+    private DefaultPushNotificationMessage defaultPushNotificationMessage;
+
+    /**
+     * The message to Email channels. Overrides the default message.
+     */
+    private EmailMessage emailMessage;
+
+    /**
+     * The message to GCM channels. Overrides the default push notification
+     * message.
+     */
+    private GCMMessage gCMMessage;
+
+    /**
+     * The message to SMS channels. Overrides the default message.
+     */
+    private SMSMessage sMSMessage;
+
+    /**
+     * The message to ADM channels. Overrides the default push notification
+     * message.
+     *
+     * @return The message to ADM channels. Overrides the default push
+     *         notification message.
+     */
+    public ADMMessage getADMMessage() {
+        return aDMMessage;
+    }
+
+    /**
+     * The message to ADM channels. Overrides the default push notification
+     * message.
+     *
+     * @param aDMMessage The message to ADM channels. Overrides the default push
+     *            notification message.
+     */
+    public void setADMMessage(ADMMessage aDMMessage) {
+        this.aDMMessage = aDMMessage;
+    }
+
+    /**
+     * The message to ADM channels. Overrides the default push notification
+     * message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param aDMMessage The message to ADM channels. Overrides the default push
+     *            notification message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DirectMessageConfiguration withADMMessage(ADMMessage aDMMessage) {
+        this.aDMMessage = aDMMessage;
+        return this;
+    }
+
+    /**
+     * The message to APNS channels. Overrides the default push notification
+     * message.
+     *
+     * @return The message to APNS channels. Overrides the default push
+     *         notification message.
+     */
+    public APNSMessage getAPNSMessage() {
+        return aPNSMessage;
+    }
+
+    /**
+     * The message to APNS channels. Overrides the default push notification
+     * message.
+     *
+     * @param aPNSMessage The message to APNS channels. Overrides the default
+     *            push notification message.
+     */
+    public void setAPNSMessage(APNSMessage aPNSMessage) {
+        this.aPNSMessage = aPNSMessage;
+    }
+
+    /**
+     * The message to APNS channels. Overrides the default push notification
+     * message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param aPNSMessage The message to APNS channels. Overrides the default
+     *            push notification message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DirectMessageConfiguration withAPNSMessage(APNSMessage aPNSMessage) {
+        this.aPNSMessage = aPNSMessage;
+        return this;
+    }
+
+    /**
+     * The message to Baidu GCM channels. Overrides the default push
+     * notification message.
+     *
+     * @return The message to Baidu GCM channels. Overrides the default push
+     *         notification message.
+     */
+    public BaiduMessage getBaiduMessage() {
+        return baiduMessage;
+    }
+
+    /**
+     * The message to Baidu GCM channels. Overrides the default push
+     * notification message.
+     *
+     * @param baiduMessage The message to Baidu GCM channels. Overrides the
+     *            default push notification message.
+     */
+    public void setBaiduMessage(BaiduMessage baiduMessage) {
+        this.baiduMessage = baiduMessage;
+    }
+
+    /**
+     * The message to Baidu GCM channels. Overrides the default push
+     * notification message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param baiduMessage The message to Baidu GCM channels. Overrides the
+     *            default push notification message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DirectMessageConfiguration withBaiduMessage(BaiduMessage baiduMessage) {
+        this.baiduMessage = baiduMessage;
+        return this;
+    }
+
+    /**
+     * The default message for all channels.
+     *
+     * @return The default message for all channels.
+     */
+    public DefaultMessage getDefaultMessage() {
+        return defaultMessage;
+    }
+
+    /**
+     * The default message for all channels.
+     *
+     * @param defaultMessage The default message for all channels.
+     */
+    public void setDefaultMessage(DefaultMessage defaultMessage) {
+        this.defaultMessage = defaultMessage;
+    }
+
+    /**
+     * The default message for all channels.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param defaultMessage The default message for all channels.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DirectMessageConfiguration withDefaultMessage(DefaultMessage defaultMessage) {
+        this.defaultMessage = defaultMessage;
+        return this;
+    }
+
+    /**
+     * The default push notification message for all push channels.
+     *
+     * @return The default push notification message for all push channels.
+     */
+    public DefaultPushNotificationMessage getDefaultPushNotificationMessage() {
+        return defaultPushNotificationMessage;
+    }
+
+    /**
+     * The default push notification message for all push channels.
+     *
+     * @param defaultPushNotificationMessage The default push notification
+     *            message for all push channels.
+     */
+    public void setDefaultPushNotificationMessage(
+            DefaultPushNotificationMessage defaultPushNotificationMessage) {
+        this.defaultPushNotificationMessage = defaultPushNotificationMessage;
+    }
+
+    /**
+     * The default push notification message for all push channels.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param defaultPushNotificationMessage The default push notification
+     *            message for all push channels.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DirectMessageConfiguration withDefaultPushNotificationMessage(
+            DefaultPushNotificationMessage defaultPushNotificationMessage) {
+        this.defaultPushNotificationMessage = defaultPushNotificationMessage;
+        return this;
+    }
+
+    /**
+     * The message to Email channels. Overrides the default message.
+     *
+     * @return The message to Email channels. Overrides the default message.
+     */
+    public EmailMessage getEmailMessage() {
+        return emailMessage;
+    }
+
+    /**
+     * The message to Email channels. Overrides the default message.
+     *
+     * @param emailMessage The message to Email channels. Overrides the default
+     *            message.
+     */
+    public void setEmailMessage(EmailMessage emailMessage) {
+        this.emailMessage = emailMessage;
+    }
+
+    /**
+     * The message to Email channels. Overrides the default message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param emailMessage The message to Email channels. Overrides the default
+     *            message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DirectMessageConfiguration withEmailMessage(EmailMessage emailMessage) {
+        this.emailMessage = emailMessage;
+        return this;
+    }
+
+    /**
+     * The message to GCM channels. Overrides the default push notification
+     * message.
+     *
+     * @return The message to GCM channels. Overrides the default push
+     *         notification message.
+     */
+    public GCMMessage getGCMMessage() {
+        return gCMMessage;
+    }
+
+    /**
+     * The message to GCM channels. Overrides the default push notification
+     * message.
+     *
+     * @param gCMMessage The message to GCM channels. Overrides the default push
+     *            notification message.
+     */
+    public void setGCMMessage(GCMMessage gCMMessage) {
+        this.gCMMessage = gCMMessage;
+    }
+
+    /**
+     * The message to GCM channels. Overrides the default push notification
+     * message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param gCMMessage The message to GCM channels. Overrides the default push
+     *            notification message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DirectMessageConfiguration withGCMMessage(GCMMessage gCMMessage) {
+        this.gCMMessage = gCMMessage;
+        return this;
+    }
+
+    /**
+     * The message to SMS channels. Overrides the default message.
+     *
+     * @return The message to SMS channels. Overrides the default message.
+     */
+    public SMSMessage getSMSMessage() {
+        return sMSMessage;
+    }
+
+    /**
+     * The message to SMS channels. Overrides the default message.
+     *
+     * @param sMSMessage The message to SMS channels. Overrides the default
+     *            message.
+     */
+    public void setSMSMessage(SMSMessage sMSMessage) {
+        this.sMSMessage = sMSMessage;
+    }
+
+    /**
+     * The message to SMS channels. Overrides the default message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param sMSMessage The message to SMS channels. Overrides the default
+     *            message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DirectMessageConfiguration withSMSMessage(SMSMessage sMSMessage) {
+        this.sMSMessage = sMSMessage;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getADMMessage() != null)
+            sb.append("ADMMessage: " + getADMMessage() + ",");
+        if (getAPNSMessage() != null)
+            sb.append("APNSMessage: " + getAPNSMessage() + ",");
+        if (getBaiduMessage() != null)
+            sb.append("BaiduMessage: " + getBaiduMessage() + ",");
+        if (getDefaultMessage() != null)
+            sb.append("DefaultMessage: " + getDefaultMessage() + ",");
+        if (getDefaultPushNotificationMessage() != null)
+            sb.append("DefaultPushNotificationMessage: " + getDefaultPushNotificationMessage()
+                    + ",");
+        if (getEmailMessage() != null)
+            sb.append("EmailMessage: " + getEmailMessage() + ",");
+        if (getGCMMessage() != null)
+            sb.append("GCMMessage: " + getGCMMessage() + ",");
+        if (getSMSMessage() != null)
+            sb.append("SMSMessage: " + getSMSMessage());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getADMMessage() == null) ? 0 : getADMMessage().hashCode());
+        hashCode = prime * hashCode
+                + ((getAPNSMessage() == null) ? 0 : getAPNSMessage().hashCode());
+        hashCode = prime * hashCode
+                + ((getBaiduMessage() == null) ? 0 : getBaiduMessage().hashCode());
+        hashCode = prime * hashCode
+                + ((getDefaultMessage() == null) ? 0 : getDefaultMessage().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getDefaultPushNotificationMessage() == null) ? 0
+                        : getDefaultPushNotificationMessage().hashCode());
+        hashCode = prime * hashCode
+                + ((getEmailMessage() == null) ? 0 : getEmailMessage().hashCode());
+        hashCode = prime * hashCode + ((getGCMMessage() == null) ? 0 : getGCMMessage().hashCode());
+        hashCode = prime * hashCode + ((getSMSMessage() == null) ? 0 : getSMSMessage().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DirectMessageConfiguration == false)
+            return false;
+        DirectMessageConfiguration other = (DirectMessageConfiguration) obj;
+
+        if (other.getADMMessage() == null ^ this.getADMMessage() == null)
+            return false;
+        if (other.getADMMessage() != null
+                && other.getADMMessage().equals(this.getADMMessage()) == false)
+            return false;
+        if (other.getAPNSMessage() == null ^ this.getAPNSMessage() == null)
+            return false;
+        if (other.getAPNSMessage() != null
+                && other.getAPNSMessage().equals(this.getAPNSMessage()) == false)
+            return false;
+        if (other.getBaiduMessage() == null ^ this.getBaiduMessage() == null)
+            return false;
+        if (other.getBaiduMessage() != null
+                && other.getBaiduMessage().equals(this.getBaiduMessage()) == false)
+            return false;
+        if (other.getDefaultMessage() == null ^ this.getDefaultMessage() == null)
+            return false;
+        if (other.getDefaultMessage() != null
+                && other.getDefaultMessage().equals(this.getDefaultMessage()) == false)
+            return false;
+        if (other.getDefaultPushNotificationMessage() == null
+                ^ this.getDefaultPushNotificationMessage() == null)
+            return false;
+        if (other.getDefaultPushNotificationMessage() != null
+                && other.getDefaultPushNotificationMessage().equals(
+                        this.getDefaultPushNotificationMessage()) == false)
+            return false;
+        if (other.getEmailMessage() == null ^ this.getEmailMessage() == null)
+            return false;
+        if (other.getEmailMessage() != null
+                && other.getEmailMessage().equals(this.getEmailMessage()) == false)
+            return false;
+        if (other.getGCMMessage() == null ^ this.getGCMMessage() == null)
+            return false;
+        if (other.getGCMMessage() != null
+                && other.getGCMMessage().equals(this.getGCMMessage()) == false)
+            return false;
+        if (other.getSMSMessage() == null ^ this.getSMSMessage() == null)
+            return false;
+        if (other.getSMSMessage() != null
+                && other.getSMSMessage().equals(this.getSMSMessage()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailChannelRequest.java
new file mode 100644
index 0000000000..39541e2978
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailChannelRequest.java
@@ -0,0 +1,258 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Email Channel Request
+ */
+public class EmailChannelRequest implements Serializable {
+    /**
+     * If the channel is enabled for sending messages.
+     */
+    private Boolean enabled;
+
+    /**
+     * The email address used to send emails from.
+     */
+    private String fromAddress;
+
+    /**
+     * The ARN of an identity verified with SES.
+     */
+    private String identity;
+
+    /**
+     * The ARN of an IAM Role used to submit events to Mobile Analytics' event
+     * ingestion service
+     */
+    private String roleArn;
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean isEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean getEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     */
+    public void setEnabled(Boolean enabled) {
+        this.enabled = enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelRequest withEnabled(Boolean enabled) {
+        this.enabled = enabled;
+        return this;
+    }
+
+    /**
+     * The email address used to send emails from.
+     *
+     * @return The email address used to send emails from.
+     */
+    public String getFromAddress() {
+        return fromAddress;
+    }
+
+    /**
+     * The email address used to send emails from.
+     *
+     * @param fromAddress The email address used to send emails from.
+     */
+    public void setFromAddress(String fromAddress) {
+        this.fromAddress = fromAddress;
+    }
+
+    /**
+     * The email address used to send emails from.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param fromAddress The email address used to send emails from.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelRequest withFromAddress(String fromAddress) {
+        this.fromAddress = fromAddress;
+        return this;
+    }
+
+    /**
+     * The ARN of an identity verified with SES.
+     *
+     * @return The ARN of an identity verified with SES.
+     */
+    public String getIdentity() {
+        return identity;
+    }
+
+    /**
+     * The ARN of an identity verified with SES.
+     *
+     * @param identity The ARN of an identity verified with SES.
+     */
+    public void setIdentity(String identity) {
+        this.identity = identity;
+    }
+
+    /**
+     * The ARN of an identity verified with SES.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param identity The ARN of an identity verified with SES.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelRequest withIdentity(String identity) {
+        this.identity = identity;
+        return this;
+    }
+
+    /**
+     * The ARN of an IAM Role used to submit events to Mobile Analytics' event
+     * ingestion service
+     *
+     * @return The ARN of an IAM Role used to submit events to Mobile Analytics'
+     *         event ingestion service
+     */
+    public String getRoleArn() {
+        return roleArn;
+    }
+
+    /**
+     * The ARN of an IAM Role used to submit events to Mobile Analytics' event
+     * ingestion service
+     *
+     * @param roleArn The ARN of an IAM Role used to submit events to Mobile
+     *            Analytics' event ingestion service
+     */
+    public void setRoleArn(String roleArn) {
+        this.roleArn = roleArn;
+    }
+
+    /**
+     * The ARN of an IAM Role used to submit events to Mobile Analytics' event
+     * ingestion service
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param roleArn The ARN of an IAM Role used to submit events to Mobile
+     *            Analytics' event ingestion service
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelRequest withRoleArn(String roleArn) {
+        this.roleArn = roleArn;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getEnabled() != null)
+            sb.append("Enabled: " + getEnabled() + ",");
+        if (getFromAddress() != null)
+            sb.append("FromAddress: " + getFromAddress() + ",");
+        if (getIdentity() != null)
+            sb.append("Identity: " + getIdentity() + ",");
+        if (getRoleArn() != null)
+            sb.append("RoleArn: " + getRoleArn());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
+        hashCode = prime * hashCode
+                + ((getFromAddress() == null) ? 0 : getFromAddress().hashCode());
+        hashCode = prime * hashCode + ((getIdentity() == null) ? 0 : getIdentity().hashCode());
+        hashCode = prime * hashCode + ((getRoleArn() == null) ? 0 : getRoleArn().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof EmailChannelRequest == false)
+            return false;
+        EmailChannelRequest other = (EmailChannelRequest) obj;
+
+        if (other.getEnabled() == null ^ this.getEnabled() == null)
+            return false;
+        if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
+            return false;
+        if (other.getFromAddress() == null ^ this.getFromAddress() == null)
+            return false;
+        if (other.getFromAddress() != null
+                && other.getFromAddress().equals(this.getFromAddress()) == false)
+            return false;
+        if (other.getIdentity() == null ^ this.getIdentity() == null)
+            return false;
+        if (other.getIdentity() != null && other.getIdentity().equals(this.getIdentity()) == false)
+            return false;
+        if (other.getRoleArn() == null ^ this.getRoleArn() == null)
+            return false;
+        if (other.getRoleArn() != null && other.getRoleArn().equals(this.getRoleArn()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailChannelResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailChannelResponse.java
new file mode 100644
index 0000000000..9bbe0102b1
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailChannelResponse.java
@@ -0,0 +1,641 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Email Channel Response.
+ */
+public class EmailChannelResponse implements Serializable {
+    /**
+     * The unique ID of the application to which the email channel belongs.
+     */
+    private String applicationId;
+
+    /**
+     * The date that the settings were last updated in ISO 8601 format.
+     */
+    private String creationDate;
+
+    /**
+     * If the channel is enabled for sending messages.
+     */
+    private Boolean enabled;
+
+    /**
+     * The email address used to send emails from.
+     */
+    private String fromAddress;
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     */
+    private String id;
+
+    /**
+     * The ARN of an identity verified with SES.
+     */
+    private String identity;
+
+    /**
+     * Is this channel archived
+     */
+    private Boolean isArchived;
+
+    /**
+     * Who last updated this entry
+     */
+    private String lastModifiedBy;
+
+    /**
+     * Last date this was updated
+     */
+    private String lastModifiedDate;
+
+    /**
+     * Platform type. Will be "EMAIL"
+     */
+    private String platform;
+
+    /**
+     * The ARN of an IAM Role used to submit events to Mobile Analytics' event
+     * ingestion service
+     */
+    private String roleArn;
+
+    /**
+     * Version of channel
+     */
+    private Integer version;
+
+    /**
+     * The unique ID of the application to which the email channel belongs.
+     *
+     * @return The unique ID of the application to which the email channel
+     *         belongs.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * The unique ID of the application to which the email channel belongs.
+     *
+     * @param applicationId The unique ID of the application to which the email
+     *            channel belongs.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * The unique ID of the application to which the email channel belongs.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The unique ID of the application to which the email
+     *            channel belongs.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelResponse withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * The date that the settings were last updated in ISO 8601 format.
+     *
+     * @return The date that the settings were last updated in ISO 8601 format.
+     */
+    public String getCreationDate() {
+        return creationDate;
+    }
+
+    /**
+     * The date that the settings were last updated in ISO 8601 format.
+     *
+     * @param creationDate The date that the settings were last updated in ISO
+     *            8601 format.
+     */
+    public void setCreationDate(String creationDate) {
+        this.creationDate = creationDate;
+    }
+
+    /**
+     * The date that the settings were last updated in ISO 8601 format.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param creationDate The date that the settings were last updated in ISO
+     *            8601 format.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelResponse withCreationDate(String creationDate) {
+        this.creationDate = creationDate;
+        return this;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean isEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean getEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     */
+    public void setEnabled(Boolean enabled) {
+        this.enabled = enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelResponse withEnabled(Boolean enabled) {
+        this.enabled = enabled;
+        return this;
+    }
+
+    /**
+     * The email address used to send emails from.
+     *
+     * @return The email address used to send emails from.
+     */
+    public String getFromAddress() {
+        return fromAddress;
+    }
+
+    /**
+     * The email address used to send emails from.
+     *
+     * @param fromAddress The email address used to send emails from.
+     */
+    public void setFromAddress(String fromAddress) {
+        this.fromAddress = fromAddress;
+    }
+
+    /**
+     * The email address used to send emails from.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param fromAddress The email address used to send emails from.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelResponse withFromAddress(String fromAddress) {
+        this.fromAddress = fromAddress;
+        return this;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     *
+     * @return Channel ID. Not used, only for backwards compatibility.
+     */
+    public String getId() {
+        return id;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     *
+     * @param id Channel ID. Not used, only for backwards compatibility.
+     */
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param id Channel ID. Not used, only for backwards compatibility.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelResponse withId(String id) {
+        this.id = id;
+        return this;
+    }
+
+    /**
+     * The ARN of an identity verified with SES.
+     *
+     * @return The ARN of an identity verified with SES.
+     */
+    public String getIdentity() {
+        return identity;
+    }
+
+    /**
+     * The ARN of an identity verified with SES.
+     *
+     * @param identity The ARN of an identity verified with SES.
+     */
+    public void setIdentity(String identity) {
+        this.identity = identity;
+    }
+
+    /**
+     * The ARN of an identity verified with SES.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param identity The ARN of an identity verified with SES.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelResponse withIdentity(String identity) {
+        this.identity = identity;
+        return this;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @return Is this channel archived
+     */
+    public Boolean isIsArchived() {
+        return isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @return Is this channel archived
+     */
+    public Boolean getIsArchived() {
+        return isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @param isArchived Is this channel archived
+     */
+    public void setIsArchived(Boolean isArchived) {
+        this.isArchived = isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param isArchived Is this channel archived
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelResponse withIsArchived(Boolean isArchived) {
+        this.isArchived = isArchived;
+        return this;
+    }
+
+    /**
+     * Who last updated this entry
+     *
+     * @return Who last updated this entry
+     */
+    public String getLastModifiedBy() {
+        return lastModifiedBy;
+    }
+
+    /**
+     * Who last updated this entry
+     *
+     * @param lastModifiedBy Who last updated this entry
+     */
+    public void setLastModifiedBy(String lastModifiedBy) {
+        this.lastModifiedBy = lastModifiedBy;
+    }
+
+    /**
+     * Who last updated this entry
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastModifiedBy Who last updated this entry
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelResponse withLastModifiedBy(String lastModifiedBy) {
+        this.lastModifiedBy = lastModifiedBy;
+        return this;
+    }
+
+    /**
+     * Last date this was updated
+     *
+     * @return Last date this was updated
+     */
+    public String getLastModifiedDate() {
+        return lastModifiedDate;
+    }
+
+    /**
+     * Last date this was updated
+     *
+     * @param lastModifiedDate Last date this was updated
+     */
+    public void setLastModifiedDate(String lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+    }
+
+    /**
+     * Last date this was updated
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastModifiedDate Last date this was updated
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelResponse withLastModifiedDate(String lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+        return this;
+    }
+
+    /**
+     * Platform type. Will be "EMAIL"
+     *
+     * @return Platform type. Will be "EMAIL"
+     */
+    public String getPlatform() {
+        return platform;
+    }
+
+    /**
+     * Platform type. Will be "EMAIL"
+     *
+     * @param platform Platform type. Will be "EMAIL"
+     */
+    public void setPlatform(String platform) {
+        this.platform = platform;
+    }
+
+    /**
+     * Platform type. Will be "EMAIL"
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param platform Platform type. Will be "EMAIL"
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelResponse withPlatform(String platform) {
+        this.platform = platform;
+        return this;
+    }
+
+    /**
+     * The ARN of an IAM Role used to submit events to Mobile Analytics' event
+     * ingestion service
+     *
+     * @return The ARN of an IAM Role used to submit events to Mobile Analytics'
+     *         event ingestion service
+     */
+    public String getRoleArn() {
+        return roleArn;
+    }
+
+    /**
+     * The ARN of an IAM Role used to submit events to Mobile Analytics' event
+     * ingestion service
+     *
+     * @param roleArn The ARN of an IAM Role used to submit events to Mobile
+     *            Analytics' event ingestion service
+     */
+    public void setRoleArn(String roleArn) {
+        this.roleArn = roleArn;
+    }
+
+    /**
+     * The ARN of an IAM Role used to submit events to Mobile Analytics' event
+     * ingestion service
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param roleArn The ARN of an IAM Role used to submit events to Mobile
+     *            Analytics' event ingestion service
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelResponse withRoleArn(String roleArn) {
+        this.roleArn = roleArn;
+        return this;
+    }
+
+    /**
+     * Version of channel
+     *
+     * @return Version of channel
+     */
+    public Integer getVersion() {
+        return version;
+    }
+
+    /**
+     * Version of channel
+     *
+     * @param version Version of channel
+     */
+    public void setVersion(Integer version) {
+        this.version = version;
+    }
+
+    /**
+     * Version of channel
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param version Version of channel
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailChannelResponse withVersion(Integer version) {
+        this.version = version;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getCreationDate() != null)
+            sb.append("CreationDate: " + getCreationDate() + ",");
+        if (getEnabled() != null)
+            sb.append("Enabled: " + getEnabled() + ",");
+        if (getFromAddress() != null)
+            sb.append("FromAddress: " + getFromAddress() + ",");
+        if (getId() != null)
+            sb.append("Id: " + getId() + ",");
+        if (getIdentity() != null)
+            sb.append("Identity: " + getIdentity() + ",");
+        if (getIsArchived() != null)
+            sb.append("IsArchived: " + getIsArchived() + ",");
+        if (getLastModifiedBy() != null)
+            sb.append("LastModifiedBy: " + getLastModifiedBy() + ",");
+        if (getLastModifiedDate() != null)
+            sb.append("LastModifiedDate: " + getLastModifiedDate() + ",");
+        if (getPlatform() != null)
+            sb.append("Platform: " + getPlatform() + ",");
+        if (getRoleArn() != null)
+            sb.append("RoleArn: " + getRoleArn() + ",");
+        if (getVersion() != null)
+            sb.append("Version: " + getVersion());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime * hashCode
+                + ((getCreationDate() == null) ? 0 : getCreationDate().hashCode());
+        hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
+        hashCode = prime * hashCode
+                + ((getFromAddress() == null) ? 0 : getFromAddress().hashCode());
+        hashCode = prime * hashCode + ((getId() == null) ? 0 : getId().hashCode());
+        hashCode = prime * hashCode + ((getIdentity() == null) ? 0 : getIdentity().hashCode());
+        hashCode = prime * hashCode + ((getIsArchived() == null) ? 0 : getIsArchived().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastModifiedBy() == null) ? 0 : getLastModifiedBy().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastModifiedDate() == null) ? 0 : getLastModifiedDate().hashCode());
+        hashCode = prime * hashCode + ((getPlatform() == null) ? 0 : getPlatform().hashCode());
+        hashCode = prime * hashCode + ((getRoleArn() == null) ? 0 : getRoleArn().hashCode());
+        hashCode = prime * hashCode + ((getVersion() == null) ? 0 : getVersion().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof EmailChannelResponse == false)
+            return false;
+        EmailChannelResponse other = (EmailChannelResponse) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        if (other.getCreationDate() == null ^ this.getCreationDate() == null)
+            return false;
+        if (other.getCreationDate() != null
+                && other.getCreationDate().equals(this.getCreationDate()) == false)
+            return false;
+        if (other.getEnabled() == null ^ this.getEnabled() == null)
+            return false;
+        if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
+            return false;
+        if (other.getFromAddress() == null ^ this.getFromAddress() == null)
+            return false;
+        if (other.getFromAddress() != null
+                && other.getFromAddress().equals(this.getFromAddress()) == false)
+            return false;
+        if (other.getId() == null ^ this.getId() == null)
+            return false;
+        if (other.getId() != null && other.getId().equals(this.getId()) == false)
+            return false;
+        if (other.getIdentity() == null ^ this.getIdentity() == null)
+            return false;
+        if (other.getIdentity() != null && other.getIdentity().equals(this.getIdentity()) == false)
+            return false;
+        if (other.getIsArchived() == null ^ this.getIsArchived() == null)
+            return false;
+        if (other.getIsArchived() != null
+                && other.getIsArchived().equals(this.getIsArchived()) == false)
+            return false;
+        if (other.getLastModifiedBy() == null ^ this.getLastModifiedBy() == null)
+            return false;
+        if (other.getLastModifiedBy() != null
+                && other.getLastModifiedBy().equals(this.getLastModifiedBy()) == false)
+            return false;
+        if (other.getLastModifiedDate() == null ^ this.getLastModifiedDate() == null)
+            return false;
+        if (other.getLastModifiedDate() != null
+                && other.getLastModifiedDate().equals(this.getLastModifiedDate()) == false)
+            return false;
+        if (other.getPlatform() == null ^ this.getPlatform() == null)
+            return false;
+        if (other.getPlatform() != null && other.getPlatform().equals(this.getPlatform()) == false)
+            return false;
+        if (other.getRoleArn() == null ^ this.getRoleArn() == null)
+            return false;
+        if (other.getRoleArn() != null && other.getRoleArn().equals(this.getRoleArn()) == false)
+            return false;
+        if (other.getVersion() == null ^ this.getVersion() == null)
+            return false;
+        if (other.getVersion() != null && other.getVersion().equals(this.getVersion()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailMessage.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailMessage.java
new file mode 100644
index 0000000000..c0694adb18
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EmailMessage.java
@@ -0,0 +1,390 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Email Message.
+ */
+public class EmailMessage implements Serializable {
+    /**
+     * The message body of the notification, the email body or the text message.
+     */
+    private String body;
+
+    /**
+     * The email address used to send the email from. Defaults to use
+     * FromAddress specified in the Email Channel.
+     */
+    private String fromAddress;
+
+    /**
+     * The HTML part of the email.
+     */
+    private String htmlBody;
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     */
+    private java.util.Map<String, java.util.List<String>> substitutions;
+
+    /**
+     * The ARN of the template to use for the email.
+     */
+    private String templateArn;
+
+    /**
+     * The subject of the email.
+     */
+    private String title;
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @return The message body of the notification, the email body or the text
+     *         message.
+     */
+    public String getBody() {
+        return body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     */
+    public void setBody(String body) {
+        this.body = body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailMessage withBody(String body) {
+        this.body = body;
+        return this;
+    }
+
+    /**
+     * The email address used to send the email from. Defaults to use
+     * FromAddress specified in the Email Channel.
+     *
+     * @return The email address used to send the email from. Defaults to use
+     *         FromAddress specified in the Email Channel.
+     */
+    public String getFromAddress() {
+        return fromAddress;
+    }
+
+    /**
+     * The email address used to send the email from. Defaults to use
+     * FromAddress specified in the Email Channel.
+     *
+     * @param fromAddress The email address used to send the email from.
+     *            Defaults to use FromAddress specified in the Email Channel.
+     */
+    public void setFromAddress(String fromAddress) {
+        this.fromAddress = fromAddress;
+    }
+
+    /**
+     * The email address used to send the email from. Defaults to use
+     * FromAddress specified in the Email Channel.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param fromAddress The email address used to send the email from.
+     *            Defaults to use FromAddress specified in the Email Channel.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailMessage withFromAddress(String fromAddress) {
+        this.fromAddress = fromAddress;
+        return this;
+    }
+
+    /**
+     * The HTML part of the email.
+     *
+     * @return The HTML part of the email.
+     */
+    public String getHtmlBody() {
+        return htmlBody;
+    }
+
+    /**
+     * The HTML part of the email.
+     *
+     * @param htmlBody The HTML part of the email.
+     */
+    public void setHtmlBody(String htmlBody) {
+        this.htmlBody = htmlBody;
+    }
+
+    /**
+     * The HTML part of the email.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param htmlBody The HTML part of the email.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailMessage withHtmlBody(String htmlBody) {
+        this.htmlBody = htmlBody;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @return Default message substitutions. Can be overridden by individual
+     *         address substitutions.
+     */
+    public java.util.Map<String, java.util.List<String>> getSubstitutions() {
+        return substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     */
+    public void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailMessage withSubstitutions(
+            java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * The method adds a new key-value pair into Substitutions parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into Substitutions.
+     * @param value The corresponding value of the entry to be added into
+     *            Substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailMessage addSubstitutionsEntry(String key, java.util.List<String> value) {
+        if (null == this.substitutions) {
+            this.substitutions = new java.util.HashMap<String, java.util.List<String>>();
+        }
+        if (this.substitutions.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.substitutions.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public EmailMessage clearSubstitutionsEntries() {
+        this.substitutions = null;
+        return this;
+    }
+
+    /**
+     * The ARN of the template to use for the email.
+     *
+     * @return The ARN of the template to use for the email.
+     */
+    public String getTemplateArn() {
+        return templateArn;
+    }
+
+    /**
+     * The ARN of the template to use for the email.
+     *
+     * @param templateArn The ARN of the template to use for the email.
+     */
+    public void setTemplateArn(String templateArn) {
+        this.templateArn = templateArn;
+    }
+
+    /**
+     * The ARN of the template to use for the email.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param templateArn The ARN of the template to use for the email.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailMessage withTemplateArn(String templateArn) {
+        this.templateArn = templateArn;
+        return this;
+    }
+
+    /**
+     * The subject of the email.
+     *
+     * @return The subject of the email.
+     */
+    public String getTitle() {
+        return title;
+    }
+
+    /**
+     * The subject of the email.
+     *
+     * @param title The subject of the email.
+     */
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    /**
+     * The subject of the email.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param title The subject of the email.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EmailMessage withTitle(String title) {
+        this.title = title;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getBody() != null)
+            sb.append("Body: " + getBody() + ",");
+        if (getFromAddress() != null)
+            sb.append("FromAddress: " + getFromAddress() + ",");
+        if (getHtmlBody() != null)
+            sb.append("HtmlBody: " + getHtmlBody() + ",");
+        if (getSubstitutions() != null)
+            sb.append("Substitutions: " + getSubstitutions() + ",");
+        if (getTemplateArn() != null)
+            sb.append("TemplateArn: " + getTemplateArn() + ",");
+        if (getTitle() != null)
+            sb.append("Title: " + getTitle());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getBody() == null) ? 0 : getBody().hashCode());
+        hashCode = prime * hashCode
+                + ((getFromAddress() == null) ? 0 : getFromAddress().hashCode());
+        hashCode = prime * hashCode + ((getHtmlBody() == null) ? 0 : getHtmlBody().hashCode());
+        hashCode = prime * hashCode
+                + ((getSubstitutions() == null) ? 0 : getSubstitutions().hashCode());
+        hashCode = prime * hashCode
+                + ((getTemplateArn() == null) ? 0 : getTemplateArn().hashCode());
+        hashCode = prime * hashCode + ((getTitle() == null) ? 0 : getTitle().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof EmailMessage == false)
+            return false;
+        EmailMessage other = (EmailMessage) obj;
+
+        if (other.getBody() == null ^ this.getBody() == null)
+            return false;
+        if (other.getBody() != null && other.getBody().equals(this.getBody()) == false)
+            return false;
+        if (other.getFromAddress() == null ^ this.getFromAddress() == null)
+            return false;
+        if (other.getFromAddress() != null
+                && other.getFromAddress().equals(this.getFromAddress()) == false)
+            return false;
+        if (other.getHtmlBody() == null ^ this.getHtmlBody() == null)
+            return false;
+        if (other.getHtmlBody() != null && other.getHtmlBody().equals(this.getHtmlBody()) == false)
+            return false;
+        if (other.getSubstitutions() == null ^ this.getSubstitutions() == null)
+            return false;
+        if (other.getSubstitutions() != null
+                && other.getSubstitutions().equals(this.getSubstitutions()) == false)
+            return false;
+        if (other.getTemplateArn() == null ^ this.getTemplateArn() == null)
+            return false;
+        if (other.getTemplateArn() != null
+                && other.getTemplateArn().equals(this.getTemplateArn()) == false)
+            return false;
+        if (other.getTitle() == null ^ this.getTitle() == null)
+            return false;
+        if (other.getTitle() != null && other.getTitle().equals(this.getTitle()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointBatchItem.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointBatchItem.java
index 64ff78efdc..acad1c45db 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointBatchItem.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointBatchItem.java
@@ -17,9 +17,13 @@
 
 import java.io.Serializable;
 
+/**
+ * Endpoint update request
+ */
 public class EndpointBatchItem implements Serializable {
     /**
-     * The address or token of the endpoint.
+     * The address or token of the endpoint as provided by your push provider
+     * (e.g. DeviceToken or RegistrationId).
      */
     private String address;
 
@@ -30,10 +34,10 @@
     private java.util.Map<String, java.util.List<String>> attributes;
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      */
     private String channelType;
 
@@ -55,7 +59,7 @@
     private String endpointStatus;
 
     /**
-     * The new value for the id property for this object.
+     * The unique Id for the Endpoint in the batch.
      */
     private String id;
 
@@ -71,8 +75,8 @@
 
     /**
      * Indicates whether a user has opted out of receiving messages with one of
-     * the following values: ALL â€“ User receives all messages. NONE â€“ User
-     * receives no messages.
+     * the following values: ALL - User has opted out of all messages. NONE -
+     * Users has not opted out and receives all messages.
      */
     private String optOut;
 
@@ -87,30 +91,36 @@
     private EndpointUser user;
 
     /**
-     * The address or token of the endpoint.
+     * The address or token of the endpoint as provided by your push provider
+     * (e.g. DeviceToken or RegistrationId).
      *
-     * @return The address or token of the endpoint.
+     * @return The address or token of the endpoint as provided by your push
+     *         provider (e.g. DeviceToken or RegistrationId).
      */
     public String getAddress() {
         return address;
     }
 
     /**
-     * The address or token of the endpoint.
+     * The address or token of the endpoint as provided by your push provider
+     * (e.g. DeviceToken or RegistrationId).
      *
-     * @param address The address or token of the endpoint.
+     * @param address The address or token of the endpoint as provided by your
+     *            push provider (e.g. DeviceToken or RegistrationId).
      */
     public void setAddress(String address) {
         this.address = address;
     }
 
     /**
-     * The address or token of the endpoint.
+     * The address or token of the endpoint as provided by your push provider
+     * (e.g. DeviceToken or RegistrationId).
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param address The address or token of the endpoint.
+     * @param address The address or token of the endpoint as provided by your
+     *            push provider (e.g. DeviceToken or RegistrationId).
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -198,12 +208,12 @@ public EndpointBatchItem clearAttributesEntries() {
     }
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      *
-     * @return The channel type. Valid values: APNS, GCM
+     * @return The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * @see ChannelType
      */
     public String getChannelType() {
@@ -211,12 +221,13 @@ public String getChannelType() {
     }
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      *
-     * @param channelType The channel type. Valid values: APNS, GCM
+     * @param channelType The channel type. Valid values: GCM | APNS | SMS |
+     *            EMAIL
      * @see ChannelType
      */
     public void setChannelType(String channelType) {
@@ -224,15 +235,16 @@ public void setChannelType(String channelType) {
     }
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      *
-     * @param channelType The channel type. Valid values: APNS, GCM
+     * @param channelType The channel type. Valid values: GCM | APNS | SMS |
+     *            EMAIL
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      * @see ChannelType
@@ -243,12 +255,13 @@ public EndpointBatchItem withChannelType(String channelType) {
     }
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      *
-     * @param channelType The channel type. Valid values: APNS, GCM
+     * @param channelType The channel type. Valid values: GCM | APNS | SMS |
+     *            EMAIL
      * @see ChannelType
      */
     public void setChannelType(ChannelType channelType) {
@@ -256,15 +269,16 @@ public void setChannelType(ChannelType channelType) {
     }
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      *
-     * @param channelType The channel type. Valid values: APNS, GCM
+     * @param channelType The channel type. Valid values: GCM | APNS | SMS |
+     *            EMAIL
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      * @see ChannelType
@@ -389,30 +403,30 @@ public EndpointBatchItem withEndpointStatus(String endpointStatus) {
     }
 
     /**
-     * Returns the value of the id property for this object.
+     * The unique Id for the Endpoint in the batch.
      *
-     * @return The value of the id property for this object.
+     * @return The unique Id for the Endpoint in the batch.
      */
     public String getId() {
         return id;
     }
 
     /**
-     * Sets the value of id
+     * The unique Id for the Endpoint in the batch.
      *
-     * @param id The new value for the id property for this object.
+     * @param id The unique Id for the Endpoint in the batch.
      */
     public void setId(String id) {
         this.id = id;
     }
 
     /**
-     * Sets the value of the id property for this object.
+     * The unique Id for the Endpoint in the batch.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param id The new value for the id property for this object.
+     * @param id The unique Id for the Endpoint in the batch.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -523,12 +537,13 @@ public EndpointBatchItem clearMetricsEntries() {
 
     /**
      * Indicates whether a user has opted out of receiving messages with one of
-     * the following values: ALL â€“ User receives all messages. NONE â€“ User
-     * receives no messages.
+     * the following values: ALL - User has opted out of all messages. NONE -
+     * Users has not opted out and receives all messages.
      *
      * @return Indicates whether a user has opted out of receiving messages with
-     *         one of the following values: ALL â€“ User receives all messages.
-     *         NONE â€“ User receives no messages.
+     *         one of the following values: ALL - User has opted out of all
+     *         messages. NONE - Users has not opted out and receives all
+     *         messages.
      */
     public String getOptOut() {
         return optOut;
@@ -536,12 +551,13 @@ public String getOptOut() {
 
     /**
      * Indicates whether a user has opted out of receiving messages with one of
-     * the following values: ALL â€“ User receives all messages. NONE â€“ User
-     * receives no messages.
+     * the following values: ALL - User has opted out of all messages. NONE -
+     * Users has not opted out and receives all messages.
      *
      * @param optOut Indicates whether a user has opted out of receiving
-     *            messages with one of the following values: ALL â€“ User
-     *            receives all messages. NONE â€“ User receives no messages.
+     *            messages with one of the following values: ALL - User has
+     *            opted out of all messages. NONE - Users has not opted out and
+     *            receives all messages.
      */
     public void setOptOut(String optOut) {
         this.optOut = optOut;
@@ -549,15 +565,16 @@ public void setOptOut(String optOut) {
 
     /**
      * Indicates whether a user has opted out of receiving messages with one of
-     * the following values: ALL â€“ User receives all messages. NONE â€“ User
-     * receives no messages.
+     * the following values: ALL - User has opted out of all messages. NONE -
+     * Users has not opted out and receives all messages.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param optOut Indicates whether a user has opted out of receiving
-     *            messages with one of the following values: ALL â€“ User
-     *            receives all messages. NONE â€“ User receives no messages.
+     *            messages with one of the following values: ALL - User has
+     *            opted out of all messages. NONE - Users has not opted out and
+     *            receives all messages.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointBatchRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointBatchRequest.java
index 9d517c9d05..450eee989a 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointBatchRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointBatchRequest.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Endpoint batch update request.
+ */
 public class EndpointBatchRequest implements Serializable {
     /**
      * List of items to update. Maximum 100 items
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointDemographic.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointDemographic.java
index ec35917188..5e2a59f297 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointDemographic.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointDemographic.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Endpoint demographic data
+ */
 public class EndpointDemographic implements Serializable {
     /**
      * The version of the application associated with the endpoint.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointLocation.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointLocation.java
index a990851f7b..09144b85f6 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointLocation.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointLocation.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Endpoint location data
+ */
 public class EndpointLocation implements Serializable {
     /**
      * The city where the endpoint is located.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointMessageResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointMessageResult.java
new file mode 100644
index 0000000000..6e04416b63
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointMessageResult.java
@@ -0,0 +1,347 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * The result from sending a message to an endpoint.
+ */
+public class EndpointMessageResult implements Serializable {
+    /**
+     * Address that endpoint message was delivered to.
+     */
+    private String address;
+
+    /**
+     * Delivery status of message.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
+     * PERMANENT_FAILURE
+     */
+    private String deliveryStatus;
+
+    /**
+     * Downstream service status code.
+     */
+    private Integer statusCode;
+
+    /**
+     * Status message for message delivery.
+     */
+    private String statusMessage;
+
+    /**
+     * If token was updated as part of delivery. (This is GCM Specific)
+     */
+    private String updatedToken;
+
+    /**
+     * Address that endpoint message was delivered to.
+     *
+     * @return Address that endpoint message was delivered to.
+     */
+    public String getAddress() {
+        return address;
+    }
+
+    /**
+     * Address that endpoint message was delivered to.
+     *
+     * @param address Address that endpoint message was delivered to.
+     */
+    public void setAddress(String address) {
+        this.address = address;
+    }
+
+    /**
+     * Address that endpoint message was delivered to.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param address Address that endpoint message was delivered to.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EndpointMessageResult withAddress(String address) {
+        this.address = address;
+        return this;
+    }
+
+    /**
+     * Delivery status of message.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
+     * PERMANENT_FAILURE
+     *
+     * @return Delivery status of message.
+     * @see DeliveryStatus
+     */
+    public String getDeliveryStatus() {
+        return deliveryStatus;
+    }
+
+    /**
+     * Delivery status of message.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
+     * PERMANENT_FAILURE
+     *
+     * @param deliveryStatus Delivery status of message.
+     * @see DeliveryStatus
+     */
+    public void setDeliveryStatus(String deliveryStatus) {
+        this.deliveryStatus = deliveryStatus;
+    }
+
+    /**
+     * Delivery status of message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
+     * PERMANENT_FAILURE
+     *
+     * @param deliveryStatus Delivery status of message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see DeliveryStatus
+     */
+    public EndpointMessageResult withDeliveryStatus(String deliveryStatus) {
+        this.deliveryStatus = deliveryStatus;
+        return this;
+    }
+
+    /**
+     * Delivery status of message.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
+     * PERMANENT_FAILURE
+     *
+     * @param deliveryStatus Delivery status of message.
+     * @see DeliveryStatus
+     */
+    public void setDeliveryStatus(DeliveryStatus deliveryStatus) {
+        this.deliveryStatus = deliveryStatus.toString();
+    }
+
+    /**
+     * Delivery status of message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
+     * PERMANENT_FAILURE
+     *
+     * @param deliveryStatus Delivery status of message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see DeliveryStatus
+     */
+    public EndpointMessageResult withDeliveryStatus(DeliveryStatus deliveryStatus) {
+        this.deliveryStatus = deliveryStatus.toString();
+        return this;
+    }
+
+    /**
+     * Downstream service status code.
+     *
+     * @return Downstream service status code.
+     */
+    public Integer getStatusCode() {
+        return statusCode;
+    }
+
+    /**
+     * Downstream service status code.
+     *
+     * @param statusCode Downstream service status code.
+     */
+    public void setStatusCode(Integer statusCode) {
+        this.statusCode = statusCode;
+    }
+
+    /**
+     * Downstream service status code.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param statusCode Downstream service status code.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EndpointMessageResult withStatusCode(Integer statusCode) {
+        this.statusCode = statusCode;
+        return this;
+    }
+
+    /**
+     * Status message for message delivery.
+     *
+     * @return Status message for message delivery.
+     */
+    public String getStatusMessage() {
+        return statusMessage;
+    }
+
+    /**
+     * Status message for message delivery.
+     *
+     * @param statusMessage Status message for message delivery.
+     */
+    public void setStatusMessage(String statusMessage) {
+        this.statusMessage = statusMessage;
+    }
+
+    /**
+     * Status message for message delivery.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param statusMessage Status message for message delivery.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EndpointMessageResult withStatusMessage(String statusMessage) {
+        this.statusMessage = statusMessage;
+        return this;
+    }
+
+    /**
+     * If token was updated as part of delivery. (This is GCM Specific)
+     *
+     * @return If token was updated as part of delivery. (This is GCM Specific)
+     */
+    public String getUpdatedToken() {
+        return updatedToken;
+    }
+
+    /**
+     * If token was updated as part of delivery. (This is GCM Specific)
+     *
+     * @param updatedToken If token was updated as part of delivery. (This is
+     *            GCM Specific)
+     */
+    public void setUpdatedToken(String updatedToken) {
+        this.updatedToken = updatedToken;
+    }
+
+    /**
+     * If token was updated as part of delivery. (This is GCM Specific)
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param updatedToken If token was updated as part of delivery. (This is
+     *            GCM Specific)
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EndpointMessageResult withUpdatedToken(String updatedToken) {
+        this.updatedToken = updatedToken;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAddress() != null)
+            sb.append("Address: " + getAddress() + ",");
+        if (getDeliveryStatus() != null)
+            sb.append("DeliveryStatus: " + getDeliveryStatus() + ",");
+        if (getStatusCode() != null)
+            sb.append("StatusCode: " + getStatusCode() + ",");
+        if (getStatusMessage() != null)
+            sb.append("StatusMessage: " + getStatusMessage() + ",");
+        if (getUpdatedToken() != null)
+            sb.append("UpdatedToken: " + getUpdatedToken());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getAddress() == null) ? 0 : getAddress().hashCode());
+        hashCode = prime * hashCode
+                + ((getDeliveryStatus() == null) ? 0 : getDeliveryStatus().hashCode());
+        hashCode = prime * hashCode + ((getStatusCode() == null) ? 0 : getStatusCode().hashCode());
+        hashCode = prime * hashCode
+                + ((getStatusMessage() == null) ? 0 : getStatusMessage().hashCode());
+        hashCode = prime * hashCode
+                + ((getUpdatedToken() == null) ? 0 : getUpdatedToken().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof EndpointMessageResult == false)
+            return false;
+        EndpointMessageResult other = (EndpointMessageResult) obj;
+
+        if (other.getAddress() == null ^ this.getAddress() == null)
+            return false;
+        if (other.getAddress() != null && other.getAddress().equals(this.getAddress()) == false)
+            return false;
+        if (other.getDeliveryStatus() == null ^ this.getDeliveryStatus() == null)
+            return false;
+        if (other.getDeliveryStatus() != null
+                && other.getDeliveryStatus().equals(this.getDeliveryStatus()) == false)
+            return false;
+        if (other.getStatusCode() == null ^ this.getStatusCode() == null)
+            return false;
+        if (other.getStatusCode() != null
+                && other.getStatusCode().equals(this.getStatusCode()) == false)
+            return false;
+        if (other.getStatusMessage() == null ^ this.getStatusMessage() == null)
+            return false;
+        if (other.getStatusMessage() != null
+                && other.getStatusMessage().equals(this.getStatusMessage()) == false)
+            return false;
+        if (other.getUpdatedToken() == null ^ this.getUpdatedToken() == null)
+            return false;
+        if (other.getUpdatedToken() != null
+                && other.getUpdatedToken().equals(this.getUpdatedToken()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointRequest.java
index 226164dff1..3222428427 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointRequest.java
@@ -17,9 +17,13 @@
 
 import java.io.Serializable;
 
+/**
+ * Endpoint update request
+ */
 public class EndpointRequest implements Serializable {
     /**
-     * The address or token of the endpoint.
+     * The address or token of the endpoint as provided by your push provider
+     * (e.g. DeviceToken or RegistrationId).
      */
     private String address;
 
@@ -30,10 +34,10 @@
     private java.util.Map<String, java.util.List<String>> attributes;
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      */
     private String channelType;
 
@@ -66,8 +70,8 @@
 
     /**
      * Indicates whether a user has opted out of receiving messages with one of
-     * the following values: ALL â€“ User receives all messages. NONE â€“ User
-     * receives no messages.
+     * the following values: ALL - User has opted out of all messages. NONE -
+     * Users has not opted out and receives all messages.
      */
     private String optOut;
 
@@ -82,30 +86,36 @@
     private EndpointUser user;
 
     /**
-     * The address or token of the endpoint.
+     * The address or token of the endpoint as provided by your push provider
+     * (e.g. DeviceToken or RegistrationId).
      *
-     * @return The address or token of the endpoint.
+     * @return The address or token of the endpoint as provided by your push
+     *         provider (e.g. DeviceToken or RegistrationId).
      */
     public String getAddress() {
         return address;
     }
 
     /**
-     * The address or token of the endpoint.
+     * The address or token of the endpoint as provided by your push provider
+     * (e.g. DeviceToken or RegistrationId).
      *
-     * @param address The address or token of the endpoint.
+     * @param address The address or token of the endpoint as provided by your
+     *            push provider (e.g. DeviceToken or RegistrationId).
      */
     public void setAddress(String address) {
         this.address = address;
     }
 
     /**
-     * The address or token of the endpoint.
+     * The address or token of the endpoint as provided by your push provider
+     * (e.g. DeviceToken or RegistrationId).
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param address The address or token of the endpoint.
+     * @param address The address or token of the endpoint as provided by your
+     *            push provider (e.g. DeviceToken or RegistrationId).
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -193,12 +203,12 @@ public EndpointRequest clearAttributesEntries() {
     }
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      *
-     * @return The channel type. Valid values: APNS, GCM
+     * @return The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * @see ChannelType
      */
     public String getChannelType() {
@@ -206,12 +216,13 @@ public String getChannelType() {
     }
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      *
-     * @param channelType The channel type. Valid values: APNS, GCM
+     * @param channelType The channel type. Valid values: GCM | APNS | SMS |
+     *            EMAIL
      * @see ChannelType
      */
     public void setChannelType(String channelType) {
@@ -219,15 +230,16 @@ public void setChannelType(String channelType) {
     }
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      *
-     * @param channelType The channel type. Valid values: APNS, GCM
+     * @param channelType The channel type. Valid values: GCM | APNS | SMS |
+     *            EMAIL
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      * @see ChannelType
@@ -238,12 +250,13 @@ public EndpointRequest withChannelType(String channelType) {
     }
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      *
-     * @param channelType The channel type. Valid values: APNS, GCM
+     * @param channelType The channel type. Valid values: GCM | APNS | SMS |
+     *            EMAIL
      * @see ChannelType
      */
     public void setChannelType(ChannelType channelType) {
@@ -251,15 +264,16 @@ public void setChannelType(ChannelType channelType) {
     }
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      *
-     * @param channelType The channel type. Valid values: APNS, GCM
+     * @param channelType The channel type. Valid values: GCM | APNS | SMS |
+     *            EMAIL
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      * @see ChannelType
@@ -485,12 +499,13 @@ public EndpointRequest clearMetricsEntries() {
 
     /**
      * Indicates whether a user has opted out of receiving messages with one of
-     * the following values: ALL â€“ User receives all messages. NONE â€“ User
-     * receives no messages.
+     * the following values: ALL - User has opted out of all messages. NONE -
+     * Users has not opted out and receives all messages.
      *
      * @return Indicates whether a user has opted out of receiving messages with
-     *         one of the following values: ALL â€“ User receives all messages.
-     *         NONE â€“ User receives no messages.
+     *         one of the following values: ALL - User has opted out of all
+     *         messages. NONE - Users has not opted out and receives all
+     *         messages.
      */
     public String getOptOut() {
         return optOut;
@@ -498,12 +513,13 @@ public String getOptOut() {
 
     /**
      * Indicates whether a user has opted out of receiving messages with one of
-     * the following values: ALL â€“ User receives all messages. NONE â€“ User
-     * receives no messages.
+     * the following values: ALL - User has opted out of all messages. NONE -
+     * Users has not opted out and receives all messages.
      *
      * @param optOut Indicates whether a user has opted out of receiving
-     *            messages with one of the following values: ALL â€“ User
-     *            receives all messages. NONE â€“ User receives no messages.
+     *            messages with one of the following values: ALL - User has
+     *            opted out of all messages. NONE - Users has not opted out and
+     *            receives all messages.
      */
     public void setOptOut(String optOut) {
         this.optOut = optOut;
@@ -511,15 +527,16 @@ public void setOptOut(String optOut) {
 
     /**
      * Indicates whether a user has opted out of receiving messages with one of
-     * the following values: ALL â€“ User receives all messages. NONE â€“ User
-     * receives no messages.
+     * the following values: ALL - User has opted out of all messages. NONE -
+     * Users has not opted out and receives all messages.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param optOut Indicates whether a user has opted out of receiving
-     *            messages with one of the following values: ALL â€“ User
-     *            receives all messages. NONE â€“ User receives no messages.
+     *            messages with one of the following values: ALL - User has
+     *            opted out of all messages. NONE - Users has not opted out and
+     *            receives all messages.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointResponse.java
index 6cf641c05d..982dd16bee 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointResponse.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointResponse.java
@@ -17,9 +17,13 @@
 
 import java.io.Serializable;
 
+/**
+ * Endpoint response
+ */
 public class EndpointResponse implements Serializable {
     /**
-     * The address or token of the endpoint.
+     * The address or token of the endpoint as provided by your push provider
+     * (e.g. DeviceToken or RegistrationId).
      */
     private String address;
 
@@ -35,10 +39,10 @@
     private java.util.Map<String, java.util.List<String>> attributes;
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      */
     private String channelType;
 
@@ -91,8 +95,8 @@
 
     /**
      * Indicates whether a user has opted out of receiving messages with one of
-     * the following values: ALL â€“ User receives all messages. NONE â€“ User
-     * receives no messages.
+     * the following values: ALL - User has opted out of all messages. NONE -
+     * Users has not opted out and receives all messages.
      */
     private String optOut;
 
@@ -101,41 +105,42 @@
      */
     private String requestId;
 
-    /**
-     * The ShardId of endpoint
-     */
-    private String shardId;
-
     /**
      * Custom user-specific attributes that your app reports to Amazon Pinpoint.
      */
     private EndpointUser user;
 
     /**
-     * The address or token of the endpoint.
+     * The address or token of the endpoint as provided by your push provider
+     * (e.g. DeviceToken or RegistrationId).
      *
-     * @return The address or token of the endpoint.
+     * @return The address or token of the endpoint as provided by your push
+     *         provider (e.g. DeviceToken or RegistrationId).
      */
     public String getAddress() {
         return address;
     }
 
     /**
-     * The address or token of the endpoint.
+     * The address or token of the endpoint as provided by your push provider
+     * (e.g. DeviceToken or RegistrationId).
      *
-     * @param address The address or token of the endpoint.
+     * @param address The address or token of the endpoint as provided by your
+     *            push provider (e.g. DeviceToken or RegistrationId).
      */
     public void setAddress(String address) {
         this.address = address;
     }
 
     /**
-     * The address or token of the endpoint.
+     * The address or token of the endpoint as provided by your push provider
+     * (e.g. DeviceToken or RegistrationId).
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param address The address or token of the endpoint.
+     * @param address The address or token of the endpoint as provided by your
+     *            push provider (e.g. DeviceToken or RegistrationId).
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -258,12 +263,12 @@ public EndpointResponse clearAttributesEntries() {
     }
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      *
-     * @return The channel type. Valid values: APNS, GCM
+     * @return The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * @see ChannelType
      */
     public String getChannelType() {
@@ -271,12 +276,13 @@ public String getChannelType() {
     }
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      *
-     * @param channelType The channel type. Valid values: APNS, GCM
+     * @param channelType The channel type. Valid values: GCM | APNS | SMS |
+     *            EMAIL
      * @see ChannelType
      */
     public void setChannelType(String channelType) {
@@ -284,15 +290,16 @@ public void setChannelType(String channelType) {
     }
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      *
-     * @param channelType The channel type. Valid values: APNS, GCM
+     * @param channelType The channel type. Valid values: GCM | APNS | SMS |
+     *            EMAIL
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      * @see ChannelType
@@ -303,12 +310,13 @@ public EndpointResponse withChannelType(String channelType) {
     }
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      *
-     * @param channelType The channel type. Valid values: APNS, GCM
+     * @param channelType The channel type. Valid values: GCM | APNS | SMS |
+     *            EMAIL
      * @see ChannelType
      */
     public void setChannelType(ChannelType channelType) {
@@ -316,15 +324,16 @@ public void setChannelType(ChannelType channelType) {
     }
 
     /**
-     * The channel type. Valid values: APNS, GCM
+     * The channel type. Valid values: GCM | APNS | SMS | EMAIL
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>APNS, GCM
+     * <b>Allowed Values: </b>GCM, APNS, APNS_SANDBOX, ADM, SMS, EMAIL, BAIDU
      *
-     * @param channelType The channel type. Valid values: APNS, GCM
+     * @param channelType The channel type. Valid values: GCM | APNS | SMS |
+     *            EMAIL
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      * @see ChannelType
@@ -685,12 +694,13 @@ public EndpointResponse clearMetricsEntries() {
 
     /**
      * Indicates whether a user has opted out of receiving messages with one of
-     * the following values: ALL â€“ User receives all messages. NONE â€“ User
-     * receives no messages.
+     * the following values: ALL - User has opted out of all messages. NONE -
+     * Users has not opted out and receives all messages.
      *
      * @return Indicates whether a user has opted out of receiving messages with
-     *         one of the following values: ALL â€“ User receives all messages.
-     *         NONE â€“ User receives no messages.
+     *         one of the following values: ALL - User has opted out of all
+     *         messages. NONE - Users has not opted out and receives all
+     *         messages.
      */
     public String getOptOut() {
         return optOut;
@@ -698,12 +708,13 @@ public String getOptOut() {
 
     /**
      * Indicates whether a user has opted out of receiving messages with one of
-     * the following values: ALL â€“ User receives all messages. NONE â€“ User
-     * receives no messages.
+     * the following values: ALL - User has opted out of all messages. NONE -
+     * Users has not opted out and receives all messages.
      *
      * @param optOut Indicates whether a user has opted out of receiving
-     *            messages with one of the following values: ALL â€“ User
-     *            receives all messages. NONE â€“ User receives no messages.
+     *            messages with one of the following values: ALL - User has
+     *            opted out of all messages. NONE - Users has not opted out and
+     *            receives all messages.
      */
     public void setOptOut(String optOut) {
         this.optOut = optOut;
@@ -711,15 +722,16 @@ public void setOptOut(String optOut) {
 
     /**
      * Indicates whether a user has opted out of receiving messages with one of
-     * the following values: ALL â€“ User receives all messages. NONE â€“ User
-     * receives no messages.
+     * the following values: ALL - User has opted out of all messages. NONE -
+     * Users has not opted out and receives all messages.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param optOut Indicates whether a user has opted out of receiving
-     *            messages with one of the following values: ALL â€“ User
-     *            receives all messages. NONE â€“ User receives no messages.
+     *            messages with one of the following values: ALL - User has
+     *            opted out of all messages. NONE - Users has not opted out and
+     *            receives all messages.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -763,39 +775,6 @@ public EndpointResponse withRequestId(String requestId) {
         return this;
     }
 
-    /**
-     * The ShardId of endpoint
-     *
-     * @return The ShardId of endpoint
-     */
-    public String getShardId() {
-        return shardId;
-    }
-
-    /**
-     * The ShardId of endpoint
-     *
-     * @param shardId The ShardId of endpoint
-     */
-    public void setShardId(String shardId) {
-        this.shardId = shardId;
-    }
-
-    /**
-     * The ShardId of endpoint
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param shardId The ShardId of endpoint
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public EndpointResponse withShardId(String shardId) {
-        this.shardId = shardId;
-        return this;
-    }
-
     /**
      * Custom user-specific attributes that your app reports to Amazon Pinpoint.
      *
@@ -871,8 +850,6 @@ public String toString() {
             sb.append("OptOut: " + getOptOut() + ",");
         if (getRequestId() != null)
             sb.append("RequestId: " + getRequestId() + ",");
-        if (getShardId() != null)
-            sb.append("ShardId: " + getShardId() + ",");
         if (getUser() != null)
             sb.append("User: " + getUser());
         sb.append("}");
@@ -904,7 +881,6 @@ public int hashCode() {
         hashCode = prime * hashCode + ((getMetrics() == null) ? 0 : getMetrics().hashCode());
         hashCode = prime * hashCode + ((getOptOut() == null) ? 0 : getOptOut().hashCode());
         hashCode = prime * hashCode + ((getRequestId() == null) ? 0 : getRequestId().hashCode());
-        hashCode = prime * hashCode + ((getShardId() == null) ? 0 : getShardId().hashCode());
         hashCode = prime * hashCode + ((getUser() == null) ? 0 : getUser().hashCode());
         return hashCode;
     }
@@ -984,10 +960,6 @@ public boolean equals(Object obj) {
         if (other.getRequestId() != null
                 && other.getRequestId().equals(this.getRequestId()) == false)
             return false;
-        if (other.getShardId() == null ^ this.getShardId() == null)
-            return false;
-        if (other.getShardId() != null && other.getShardId().equals(this.getShardId()) == false)
-            return false;
         if (other.getUser() == null ^ this.getUser() == null)
             return false;
         if (other.getUser() != null && other.getUser().equals(this.getUser()) == false)
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointSendConfiguration.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointSendConfiguration.java
new file mode 100644
index 0000000000..eb86331876
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointSendConfiguration.java
@@ -0,0 +1,414 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Endpoint send configuration.
+ */
+public class EndpointSendConfiguration implements Serializable {
+    /**
+     * Body override. If specified will override default body.
+     */
+    private String bodyOverride;
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message
+     * for this address. This payload is added to the push notification's
+     * 'data.pinpoint' object or added to the email/sms delivery receipt event
+     * attributes.
+     */
+    private java.util.Map<String, String> context;
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     */
+    private String rawContent;
+
+    /**
+     * A map of substitution values for the message to be merged with the
+     * DefaultMessage's substitutions. Substitutions on this map take precedence
+     * over the all other substitutions.
+     */
+    private java.util.Map<String, java.util.List<String>> substitutions;
+
+    /**
+     * Title override. If specified will override default title if applicable.
+     */
+    private String titleOverride;
+
+    /**
+     * Body override. If specified will override default body.
+     *
+     * @return Body override. If specified will override default body.
+     */
+    public String getBodyOverride() {
+        return bodyOverride;
+    }
+
+    /**
+     * Body override. If specified will override default body.
+     *
+     * @param bodyOverride Body override. If specified will override default
+     *            body.
+     */
+    public void setBodyOverride(String bodyOverride) {
+        this.bodyOverride = bodyOverride;
+    }
+
+    /**
+     * Body override. If specified will override default body.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param bodyOverride Body override. If specified will override default
+     *            body.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EndpointSendConfiguration withBodyOverride(String bodyOverride) {
+        this.bodyOverride = bodyOverride;
+        return this;
+    }
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message
+     * for this address. This payload is added to the push notification's
+     * 'data.pinpoint' object or added to the email/sms delivery receipt event
+     * attributes.
+     *
+     * @return A map of custom attributes to attributes to be attached to the
+     *         message for this address. This payload is added to the push
+     *         notification's 'data.pinpoint' object or added to the email/sms
+     *         delivery receipt event attributes.
+     */
+    public java.util.Map<String, String> getContext() {
+        return context;
+    }
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message
+     * for this address. This payload is added to the push notification's
+     * 'data.pinpoint' object or added to the email/sms delivery receipt event
+     * attributes.
+     *
+     * @param context A map of custom attributes to attributes to be attached to
+     *            the message for this address. This payload is added to the
+     *            push notification's 'data.pinpoint' object or added to the
+     *            email/sms delivery receipt event attributes.
+     */
+    public void setContext(java.util.Map<String, String> context) {
+        this.context = context;
+    }
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message
+     * for this address. This payload is added to the push notification's
+     * 'data.pinpoint' object or added to the email/sms delivery receipt event
+     * attributes.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param context A map of custom attributes to attributes to be attached to
+     *            the message for this address. This payload is added to the
+     *            push notification's 'data.pinpoint' object or added to the
+     *            email/sms delivery receipt event attributes.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EndpointSendConfiguration withContext(java.util.Map<String, String> context) {
+        this.context = context;
+        return this;
+    }
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message
+     * for this address. This payload is added to the push notification's
+     * 'data.pinpoint' object or added to the email/sms delivery receipt event
+     * attributes.
+     * <p>
+     * The method adds a new key-value pair into Context parameter, and returns
+     * a reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Context.
+     * @param value The corresponding value of the entry to be added into
+     *            Context.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EndpointSendConfiguration addContextEntry(String key, String value) {
+        if (null == this.context) {
+            this.context = new java.util.HashMap<String, String>();
+        }
+        if (this.context.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.context.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Context.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public EndpointSendConfiguration clearContextEntries() {
+        this.context = null;
+        return this;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     *
+     * @return The Raw JSON formatted string to be used as the payload. This
+     *         value overrides the message.
+     */
+    public String getRawContent() {
+        return rawContent;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     *
+     * @param rawContent The Raw JSON formatted string to be used as the
+     *            payload. This value overrides the message.
+     */
+    public void setRawContent(String rawContent) {
+        this.rawContent = rawContent;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param rawContent The Raw JSON formatted string to be used as the
+     *            payload. This value overrides the message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EndpointSendConfiguration withRawContent(String rawContent) {
+        this.rawContent = rawContent;
+        return this;
+    }
+
+    /**
+     * A map of substitution values for the message to be merged with the
+     * DefaultMessage's substitutions. Substitutions on this map take precedence
+     * over the all other substitutions.
+     *
+     * @return A map of substitution values for the message to be merged with
+     *         the DefaultMessage's substitutions. Substitutions on this map
+     *         take precedence over the all other substitutions.
+     */
+    public java.util.Map<String, java.util.List<String>> getSubstitutions() {
+        return substitutions;
+    }
+
+    /**
+     * A map of substitution values for the message to be merged with the
+     * DefaultMessage's substitutions. Substitutions on this map take precedence
+     * over the all other substitutions.
+     *
+     * @param substitutions A map of substitution values for the message to be
+     *            merged with the DefaultMessage's substitutions. Substitutions
+     *            on this map take precedence over the all other substitutions.
+     */
+    public void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+    }
+
+    /**
+     * A map of substitution values for the message to be merged with the
+     * DefaultMessage's substitutions. Substitutions on this map take precedence
+     * over the all other substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param substitutions A map of substitution values for the message to be
+     *            merged with the DefaultMessage's substitutions. Substitutions
+     *            on this map take precedence over the all other substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EndpointSendConfiguration withSubstitutions(
+            java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+        return this;
+    }
+
+    /**
+     * A map of substitution values for the message to be merged with the
+     * DefaultMessage's substitutions. Substitutions on this map take precedence
+     * over the all other substitutions.
+     * <p>
+     * The method adds a new key-value pair into Substitutions parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into Substitutions.
+     * @param value The corresponding value of the entry to be added into
+     *            Substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EndpointSendConfiguration addSubstitutionsEntry(String key, java.util.List<String> value) {
+        if (null == this.substitutions) {
+            this.substitutions = new java.util.HashMap<String, java.util.List<String>>();
+        }
+        if (this.substitutions.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.substitutions.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public EndpointSendConfiguration clearSubstitutionsEntries() {
+        this.substitutions = null;
+        return this;
+    }
+
+    /**
+     * Title override. If specified will override default title if applicable.
+     *
+     * @return Title override. If specified will override default title if
+     *         applicable.
+     */
+    public String getTitleOverride() {
+        return titleOverride;
+    }
+
+    /**
+     * Title override. If specified will override default title if applicable.
+     *
+     * @param titleOverride Title override. If specified will override default
+     *            title if applicable.
+     */
+    public void setTitleOverride(String titleOverride) {
+        this.titleOverride = titleOverride;
+    }
+
+    /**
+     * Title override. If specified will override default title if applicable.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param titleOverride Title override. If specified will override default
+     *            title if applicable.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EndpointSendConfiguration withTitleOverride(String titleOverride) {
+        this.titleOverride = titleOverride;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getBodyOverride() != null)
+            sb.append("BodyOverride: " + getBodyOverride() + ",");
+        if (getContext() != null)
+            sb.append("Context: " + getContext() + ",");
+        if (getRawContent() != null)
+            sb.append("RawContent: " + getRawContent() + ",");
+        if (getSubstitutions() != null)
+            sb.append("Substitutions: " + getSubstitutions() + ",");
+        if (getTitleOverride() != null)
+            sb.append("TitleOverride: " + getTitleOverride());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getBodyOverride() == null) ? 0 : getBodyOverride().hashCode());
+        hashCode = prime * hashCode + ((getContext() == null) ? 0 : getContext().hashCode());
+        hashCode = prime * hashCode + ((getRawContent() == null) ? 0 : getRawContent().hashCode());
+        hashCode = prime * hashCode
+                + ((getSubstitutions() == null) ? 0 : getSubstitutions().hashCode());
+        hashCode = prime * hashCode
+                + ((getTitleOverride() == null) ? 0 : getTitleOverride().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof EndpointSendConfiguration == false)
+            return false;
+        EndpointSendConfiguration other = (EndpointSendConfiguration) obj;
+
+        if (other.getBodyOverride() == null ^ this.getBodyOverride() == null)
+            return false;
+        if (other.getBodyOverride() != null
+                && other.getBodyOverride().equals(this.getBodyOverride()) == false)
+            return false;
+        if (other.getContext() == null ^ this.getContext() == null)
+            return false;
+        if (other.getContext() != null && other.getContext().equals(this.getContext()) == false)
+            return false;
+        if (other.getRawContent() == null ^ this.getRawContent() == null)
+            return false;
+        if (other.getRawContent() != null
+                && other.getRawContent().equals(this.getRawContent()) == false)
+            return false;
+        if (other.getSubstitutions() == null ^ this.getSubstitutions() == null)
+            return false;
+        if (other.getSubstitutions() != null
+                && other.getSubstitutions().equals(this.getSubstitutions()) == false)
+            return false;
+        if (other.getTitleOverride() == null ^ this.getTitleOverride() == null)
+            return false;
+        if (other.getTitleOverride() != null
+                && other.getTitleOverride().equals(this.getTitleOverride()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointUser.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointUser.java
index 31ac860fa3..690368a210 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointUser.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EndpointUser.java
@@ -17,9 +17,12 @@
 
 import java.io.Serializable;
 
+/**
+ * Endpoint user specific custom userAttributes
+ */
 public class EndpointUser implements Serializable {
     /**
-     * Custom attributesd specific to the user.
+     * Custom attributes specific to the user.
      */
     private java.util.Map<String, java.util.List<String>> userAttributes;
 
@@ -29,30 +32,30 @@
     private String userId;
 
     /**
-     * Custom attributesd specific to the user.
+     * Custom attributes specific to the user.
      *
-     * @return Custom attributesd specific to the user.
+     * @return Custom attributes specific to the user.
      */
     public java.util.Map<String, java.util.List<String>> getUserAttributes() {
         return userAttributes;
     }
 
     /**
-     * Custom attributesd specific to the user.
+     * Custom attributes specific to the user.
      *
-     * @param userAttributes Custom attributesd specific to the user.
+     * @param userAttributes Custom attributes specific to the user.
      */
     public void setUserAttributes(java.util.Map<String, java.util.List<String>> userAttributes) {
         this.userAttributes = userAttributes;
     }
 
     /**
-     * Custom attributesd specific to the user.
+     * Custom attributes specific to the user.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param userAttributes Custom attributesd specific to the user.
+     * @param userAttributes Custom attributes specific to the user.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -63,7 +66,7 @@ public EndpointUser withUserAttributes(
     }
 
     /**
-     * Custom attributesd specific to the user.
+     * Custom attributes specific to the user.
      * <p>
      * The method adds a new key-value pair into UserAttributes parameter, and
      * returns a reference to this object so that method calls can be chained
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventStream.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventStream.java
new file mode 100644
index 0000000000..9bfa61e30a
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/EventStream.java
@@ -0,0 +1,383 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Model for an event publishing subscription export.
+ */
+public class EventStream implements Serializable {
+    /**
+     * The ID of the application from which events should be published.
+     */
+    private String applicationId;
+
+    /**
+     * The Amazon Resource Name (ARN) of the Amazon Kinesis stream or Firehose
+     * delivery stream to which you want to publish events. Firehose ARN:
+     * arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME Kinesis
+     * ARN: arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME
+     */
+    private String destinationStreamArn;
+
+    /**
+     * The external ID assigned the IAM role that authorizes Amazon Pinpoint to
+     * publish to the stream.
+     */
+    private String externalId;
+
+    /**
+     * The date the event stream was last updated in ISO 8601 format.
+     */
+    private String lastModifiedDate;
+
+    /**
+     * The IAM user who last modified the event stream.
+     */
+    private String lastUpdatedBy;
+
+    /**
+     * The IAM role that authorizes Amazon Pinpoint to publish events to the
+     * stream in your account.
+     */
+    private String roleArn;
+
+    /**
+     * The ID of the application from which events should be published.
+     *
+     * @return The ID of the application from which events should be published.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * The ID of the application from which events should be published.
+     *
+     * @param applicationId The ID of the application from which events should
+     *            be published.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * The ID of the application from which events should be published.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The ID of the application from which events should
+     *            be published.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EventStream withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * The Amazon Resource Name (ARN) of the Amazon Kinesis stream or Firehose
+     * delivery stream to which you want to publish events. Firehose ARN:
+     * arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME Kinesis
+     * ARN: arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME
+     *
+     * @return The Amazon Resource Name (ARN) of the Amazon Kinesis stream or
+     *         Firehose delivery stream to which you want to publish events.
+     *         Firehose ARN:
+     *         arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME
+     *         Kinesis ARN: arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME
+     */
+    public String getDestinationStreamArn() {
+        return destinationStreamArn;
+    }
+
+    /**
+     * The Amazon Resource Name (ARN) of the Amazon Kinesis stream or Firehose
+     * delivery stream to which you want to publish events. Firehose ARN:
+     * arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME Kinesis
+     * ARN: arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME
+     *
+     * @param destinationStreamArn The Amazon Resource Name (ARN) of the Amazon
+     *            Kinesis stream or Firehose delivery stream to which you want
+     *            to publish events. Firehose ARN:
+     *            arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME
+     *            Kinesis ARN:
+     *            arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME
+     */
+    public void setDestinationStreamArn(String destinationStreamArn) {
+        this.destinationStreamArn = destinationStreamArn;
+    }
+
+    /**
+     * The Amazon Resource Name (ARN) of the Amazon Kinesis stream or Firehose
+     * delivery stream to which you want to publish events. Firehose ARN:
+     * arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME Kinesis
+     * ARN: arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param destinationStreamArn The Amazon Resource Name (ARN) of the Amazon
+     *            Kinesis stream or Firehose delivery stream to which you want
+     *            to publish events. Firehose ARN:
+     *            arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME
+     *            Kinesis ARN:
+     *            arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EventStream withDestinationStreamArn(String destinationStreamArn) {
+        this.destinationStreamArn = destinationStreamArn;
+        return this;
+    }
+
+    /**
+     * The external ID assigned the IAM role that authorizes Amazon Pinpoint to
+     * publish to the stream.
+     *
+     * @return The external ID assigned the IAM role that authorizes Amazon
+     *         Pinpoint to publish to the stream.
+     */
+    public String getExternalId() {
+        return externalId;
+    }
+
+    /**
+     * The external ID assigned the IAM role that authorizes Amazon Pinpoint to
+     * publish to the stream.
+     *
+     * @param externalId The external ID assigned the IAM role that authorizes
+     *            Amazon Pinpoint to publish to the stream.
+     */
+    public void setExternalId(String externalId) {
+        this.externalId = externalId;
+    }
+
+    /**
+     * The external ID assigned the IAM role that authorizes Amazon Pinpoint to
+     * publish to the stream.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param externalId The external ID assigned the IAM role that authorizes
+     *            Amazon Pinpoint to publish to the stream.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EventStream withExternalId(String externalId) {
+        this.externalId = externalId;
+        return this;
+    }
+
+    /**
+     * The date the event stream was last updated in ISO 8601 format.
+     *
+     * @return The date the event stream was last updated in ISO 8601 format.
+     */
+    public String getLastModifiedDate() {
+        return lastModifiedDate;
+    }
+
+    /**
+     * The date the event stream was last updated in ISO 8601 format.
+     *
+     * @param lastModifiedDate The date the event stream was last updated in ISO
+     *            8601 format.
+     */
+    public void setLastModifiedDate(String lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+    }
+
+    /**
+     * The date the event stream was last updated in ISO 8601 format.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastModifiedDate The date the event stream was last updated in ISO
+     *            8601 format.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EventStream withLastModifiedDate(String lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+        return this;
+    }
+
+    /**
+     * The IAM user who last modified the event stream.
+     *
+     * @return The IAM user who last modified the event stream.
+     */
+    public String getLastUpdatedBy() {
+        return lastUpdatedBy;
+    }
+
+    /**
+     * The IAM user who last modified the event stream.
+     *
+     * @param lastUpdatedBy The IAM user who last modified the event stream.
+     */
+    public void setLastUpdatedBy(String lastUpdatedBy) {
+        this.lastUpdatedBy = lastUpdatedBy;
+    }
+
+    /**
+     * The IAM user who last modified the event stream.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastUpdatedBy The IAM user who last modified the event stream.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EventStream withLastUpdatedBy(String lastUpdatedBy) {
+        this.lastUpdatedBy = lastUpdatedBy;
+        return this;
+    }
+
+    /**
+     * The IAM role that authorizes Amazon Pinpoint to publish events to the
+     * stream in your account.
+     *
+     * @return The IAM role that authorizes Amazon Pinpoint to publish events to
+     *         the stream in your account.
+     */
+    public String getRoleArn() {
+        return roleArn;
+    }
+
+    /**
+     * The IAM role that authorizes Amazon Pinpoint to publish events to the
+     * stream in your account.
+     *
+     * @param roleArn The IAM role that authorizes Amazon Pinpoint to publish
+     *            events to the stream in your account.
+     */
+    public void setRoleArn(String roleArn) {
+        this.roleArn = roleArn;
+    }
+
+    /**
+     * The IAM role that authorizes Amazon Pinpoint to publish events to the
+     * stream in your account.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param roleArn The IAM role that authorizes Amazon Pinpoint to publish
+     *            events to the stream in your account.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EventStream withRoleArn(String roleArn) {
+        this.roleArn = roleArn;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getDestinationStreamArn() != null)
+            sb.append("DestinationStreamArn: " + getDestinationStreamArn() + ",");
+        if (getExternalId() != null)
+            sb.append("ExternalId: " + getExternalId() + ",");
+        if (getLastModifiedDate() != null)
+            sb.append("LastModifiedDate: " + getLastModifiedDate() + ",");
+        if (getLastUpdatedBy() != null)
+            sb.append("LastUpdatedBy: " + getLastUpdatedBy() + ",");
+        if (getRoleArn() != null)
+            sb.append("RoleArn: " + getRoleArn());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime * hashCode
+                + ((getDestinationStreamArn() == null) ? 0 : getDestinationStreamArn().hashCode());
+        hashCode = prime * hashCode + ((getExternalId() == null) ? 0 : getExternalId().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastModifiedDate() == null) ? 0 : getLastModifiedDate().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastUpdatedBy() == null) ? 0 : getLastUpdatedBy().hashCode());
+        hashCode = prime * hashCode + ((getRoleArn() == null) ? 0 : getRoleArn().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof EventStream == false)
+            return false;
+        EventStream other = (EventStream) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        if (other.getDestinationStreamArn() == null ^ this.getDestinationStreamArn() == null)
+            return false;
+        if (other.getDestinationStreamArn() != null
+                && other.getDestinationStreamArn().equals(this.getDestinationStreamArn()) == false)
+            return false;
+        if (other.getExternalId() == null ^ this.getExternalId() == null)
+            return false;
+        if (other.getExternalId() != null
+                && other.getExternalId().equals(this.getExternalId()) == false)
+            return false;
+        if (other.getLastModifiedDate() == null ^ this.getLastModifiedDate() == null)
+            return false;
+        if (other.getLastModifiedDate() != null
+                && other.getLastModifiedDate().equals(this.getLastModifiedDate()) == false)
+            return false;
+        if (other.getLastUpdatedBy() == null ^ this.getLastUpdatedBy() == null)
+            return false;
+        if (other.getLastUpdatedBy() != null
+                && other.getLastUpdatedBy().equals(this.getLastUpdatedBy()) == false)
+            return false;
+        if (other.getRoleArn() == null ^ this.getRoleArn() == null)
+            return false;
+        if (other.getRoleArn() != null && other.getRoleArn().equals(this.getRoleArn()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ForbiddenException.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ForbiddenException.java
index b05effc9a9..ba2727afb7 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ForbiddenException.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ForbiddenException.java
@@ -18,14 +18,15 @@
 import com.amazonaws.AmazonServiceException;
 
 /**
- * 
+ * Simple message object.
  */
 public class ForbiddenException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
-    private String accessControlAllowOrigin;
-
-    private MessageBody messageBody;
+    /**
+     * The unique message body ID.
+     */
+    private String requestID;
 
     /**
      * Constructs a new ForbiddenException with the specified error message.
@@ -37,42 +38,20 @@ public ForbiddenException(String message) {
     }
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Returns the value of the messageBody property for this object.
+     * The unique message body ID.
      *
-     * @return The value of the messageBody property for this object.
+     * @return The unique message body ID.
      */
-    public MessageBody getMessageBody() {
-        return messageBody;
+    public String getRequestID() {
+        return requestID;
     }
 
     /**
-     * Sets the value of messageBody
+     * The unique message body ID.
      *
-     * @param messageBody The new value for the messageBody property for this
-     *            object.
+     * @param requestID The unique message body ID.
      */
-    public void setMessageBody(MessageBody messageBody) {
-        this.messageBody = messageBody;
+    public void setRequestID(String requestID) {
+        this.requestID = requestID;
     }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GCMChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GCMChannelRequest.java
index 258b20cff5..ac0546ebd2 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GCMChannelRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GCMChannelRequest.java
@@ -17,12 +17,20 @@
 
 import java.io.Serializable;
 
+/**
+ * Google Cloud Messaging credentials
+ */
 public class GCMChannelRequest implements Serializable {
     /**
      * Platform credential API key from Google.
      */
     private String apiKey;
 
+    /**
+     * If the channel is enabled for sending messages.
+     */
+    private Boolean enabled;
+
     /**
      * Platform credential API key from Google.
      *
@@ -56,6 +64,48 @@ public GCMChannelRequest withApiKey(String apiKey) {
         return this;
     }
 
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean isEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean getEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     */
+    public void setEnabled(Boolean enabled) {
+        this.enabled = enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMChannelRequest withEnabled(Boolean enabled) {
+        this.enabled = enabled;
+        return this;
+    }
+
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -68,7 +118,9 @@ public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
         if (getApiKey() != null)
-            sb.append("ApiKey: " + getApiKey());
+            sb.append("ApiKey: " + getApiKey() + ",");
+        if (getEnabled() != null)
+            sb.append("Enabled: " + getEnabled());
         sb.append("}");
         return sb.toString();
     }
@@ -79,6 +131,7 @@ public int hashCode() {
         int hashCode = 1;
 
         hashCode = prime * hashCode + ((getApiKey() == null) ? 0 : getApiKey().hashCode());
+        hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
         return hashCode;
     }
 
@@ -97,6 +150,10 @@ public boolean equals(Object obj) {
             return false;
         if (other.getApiKey() != null && other.getApiKey().equals(this.getApiKey()) == false)
             return false;
+        if (other.getEnabled() == null ^ this.getEnabled() == null)
+            return false;
+        if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
+            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GCMChannelResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GCMChannelResponse.java
index 961f696229..403cfc7d6c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GCMChannelResponse.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GCMChannelResponse.java
@@ -17,9 +17,12 @@
 
 import java.io.Serializable;
 
+/**
+ * Google Cloud Messaging channel definition
+ */
 public class GCMChannelResponse implements Serializable {
     /**
-     * The new value for the applicationId property for this object.
+     * The ID of the application to which the channel applies.
      */
     private String applicationId;
 
@@ -34,7 +37,12 @@
     private String credential;
 
     /**
-     * The new value for the id property for this object.
+     * If the channel is enabled for sending messages.
+     */
+    private Boolean enabled;
+
+    /**
+     * Channel ID. Not used. Present only for backwards compatibility.
      */
     private String id;
 
@@ -64,32 +72,32 @@
     private Integer version;
 
     /**
-     * Returns the value of the applicationId property for this object.
+     * The ID of the application to which the channel applies.
      *
-     * @return The value of the applicationId property for this object.
+     * @return The ID of the application to which the channel applies.
      */
     public String getApplicationId() {
         return applicationId;
     }
 
     /**
-     * Sets the value of applicationId
+     * The ID of the application to which the channel applies.
      *
-     * @param applicationId The new value for the applicationId property for
-     *            this object.
+     * @param applicationId The ID of the application to which the channel
+     *            applies.
      */
     public void setApplicationId(String applicationId) {
         this.applicationId = applicationId;
     }
 
     /**
-     * Sets the value of the applicationId property for this object.
+     * The ID of the application to which the channel applies.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param applicationId The new value for the applicationId property for
-     *            this object.
+     * @param applicationId The ID of the application to which the channel
+     *            applies.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -165,30 +173,72 @@ public GCMChannelResponse withCredential(String credential) {
     }
 
     /**
-     * Returns the value of the id property for this object.
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean isEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean getEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     */
+    public void setEnabled(Boolean enabled) {
+        this.enabled = enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMChannelResponse withEnabled(Boolean enabled) {
+        this.enabled = enabled;
+        return this;
+    }
+
+    /**
+     * Channel ID. Not used. Present only for backwards compatibility.
      *
-     * @return The value of the id property for this object.
+     * @return Channel ID. Not used. Present only for backwards compatibility.
      */
     public String getId() {
         return id;
     }
 
     /**
-     * Sets the value of id
+     * Channel ID. Not used. Present only for backwards compatibility.
      *
-     * @param id The new value for the id property for this object.
+     * @param id Channel ID. Not used. Present only for backwards compatibility.
      */
     public void setId(String id) {
         this.id = id;
     }
 
     /**
-     * Sets the value of the id property for this object.
+     * Channel ID. Not used. Present only for backwards compatibility.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param id The new value for the id property for this object.
+     * @param id Channel ID. Not used. Present only for backwards compatibility.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -388,6 +438,8 @@ public String toString() {
             sb.append("CreationDate: " + getCreationDate() + ",");
         if (getCredential() != null)
             sb.append("Credential: " + getCredential() + ",");
+        if (getEnabled() != null)
+            sb.append("Enabled: " + getEnabled() + ",");
         if (getId() != null)
             sb.append("Id: " + getId() + ",");
         if (getIsArchived() != null)
@@ -414,6 +466,7 @@ public int hashCode() {
         hashCode = prime * hashCode
                 + ((getCreationDate() == null) ? 0 : getCreationDate().hashCode());
         hashCode = prime * hashCode + ((getCredential() == null) ? 0 : getCredential().hashCode());
+        hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
         hashCode = prime * hashCode + ((getId() == null) ? 0 : getId().hashCode());
         hashCode = prime * hashCode + ((getIsArchived() == null) ? 0 : getIsArchived().hashCode());
         hashCode = prime * hashCode
@@ -451,6 +504,10 @@ public boolean equals(Object obj) {
         if (other.getCredential() != null
                 && other.getCredential().equals(this.getCredential()) == false)
             return false;
+        if (other.getEnabled() == null ^ this.getEnabled() == null)
+            return false;
+        if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
+            return false;
         if (other.getId() == null ^ this.getId() == null)
             return false;
         if (other.getId() != null && other.getId().equals(this.getId()) == false)
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GCMMessage.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GCMMessage.java
new file mode 100644
index 0000000000..3873246f06
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GCMMessage.java
@@ -0,0 +1,1139 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * GCM Message.
+ */
+public class GCMMessage implements Serializable {
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     */
+    private String action;
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     */
+    private String body;
+
+    /**
+     * This parameter identifies a group of messages (e.g., with collapse_key:
+     * "Updates Available") that can be collapsed, so that only the last message
+     * gets sent when delivery can be resumed. This is intended to avoid sending
+     * too many of the same messages when the device comes back online or
+     * becomes active.
+     */
+    private String collapseKey;
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     */
+    private java.util.Map<String, String> data;
+
+    /**
+     * The icon image name of the asset saved in your application.
+     */
+    private String iconReference;
+
+    /**
+     * The URL that points to an image used as the large icon to the
+     * notification content view.
+     */
+    private String imageIconUrl;
+
+    /**
+     * The URL that points to an image used in the push notification.
+     */
+    private String imageUrl;
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     */
+    private String jsonData;
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     */
+    private String rawContent;
+
+    /**
+     * This parameter specifies the package name of the application where the
+     * registration tokens must match in order to receive the message.
+     */
+    private String restrictedPackageName;
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     */
+    private Boolean silentPush;
+
+    /**
+     * The URL that points to an image used as the small icon for the
+     * notification which will be used to represent the notification in the
+     * status bar and content view
+     */
+    private String smallImageIconUrl;
+
+    /**
+     * Indicates a sound to play when the device receives the notification.
+     * Supports default, or the filename of a sound resource bundled in the app.
+     * Android sound files must reside in /res/raw/
+     */
+    private String sound;
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     */
+    private java.util.Map<String, java.util.List<String>> substitutions;
+
+    /**
+     * The message title that displays above the message on the user's device.
+     */
+    private String title;
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     */
+    private String url;
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @return The action that occurs if the user taps a push notification
+     *         delivered by the campaign: OPEN_APP - Your app launches, or it
+     *         becomes the foreground app if it has been sent to the background.
+     *         This is the default action. DEEP_LINK - Uses deep linking
+     *         features in iOS and Android to open your app and display a
+     *         designated user interface within the app. URL - The default
+     *         mobile browser on the user's device launches and opens a web page
+     *         at the URL you specify. Possible values include: OPEN_APP |
+     *         DEEP_LINK | URL
+     * @see Action
+     */
+    public String getAction() {
+        return action;
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @see Action
+     */
+    public void setAction(String action) {
+        this.action = action;
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see Action
+     */
+    public GCMMessage withAction(String action) {
+        this.action = action;
+        return this;
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @see Action
+     */
+    public void setAction(Action action) {
+        this.action = action.toString();
+    }
+
+    /**
+     * The action that occurs if the user taps a push notification delivered by
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK |
+     * URL
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
+     *
+     * @param action The action that occurs if the user taps a push notification
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify. Possible values include:
+     *            OPEN_APP | DEEP_LINK | URL
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see Action
+     */
+    public GCMMessage withAction(Action action) {
+        this.action = action.toString();
+        return this;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @return The message body of the notification, the email body or the text
+     *         message.
+     */
+    public String getBody() {
+        return body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     */
+    public void setBody(String body) {
+        this.body = body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMMessage withBody(String body) {
+        this.body = body;
+        return this;
+    }
+
+    /**
+     * This parameter identifies a group of messages (e.g., with collapse_key:
+     * "Updates Available") that can be collapsed, so that only the last message
+     * gets sent when delivery can be resumed. This is intended to avoid sending
+     * too many of the same messages when the device comes back online or
+     * becomes active.
+     *
+     * @return This parameter identifies a group of messages (e.g., with
+     *         collapse_key: "Updates Available") that can be collapsed, so that
+     *         only the last message gets sent when delivery can be resumed.
+     *         This is intended to avoid sending too many of the same messages
+     *         when the device comes back online or becomes active.
+     */
+    public String getCollapseKey() {
+        return collapseKey;
+    }
+
+    /**
+     * This parameter identifies a group of messages (e.g., with collapse_key:
+     * "Updates Available") that can be collapsed, so that only the last message
+     * gets sent when delivery can be resumed. This is intended to avoid sending
+     * too many of the same messages when the device comes back online or
+     * becomes active.
+     *
+     * @param collapseKey This parameter identifies a group of messages (e.g.,
+     *            with collapse_key: "Updates Available") that can be collapsed,
+     *            so that only the last message gets sent when delivery can be
+     *            resumed. This is intended to avoid sending too many of the
+     *            same messages when the device comes back online or becomes
+     *            active.
+     */
+    public void setCollapseKey(String collapseKey) {
+        this.collapseKey = collapseKey;
+    }
+
+    /**
+     * This parameter identifies a group of messages (e.g., with collapse_key:
+     * "Updates Available") that can be collapsed, so that only the last message
+     * gets sent when delivery can be resumed. This is intended to avoid sending
+     * too many of the same messages when the device comes back online or
+     * becomes active.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param collapseKey This parameter identifies a group of messages (e.g.,
+     *            with collapse_key: "Updates Available") that can be collapsed,
+     *            so that only the last message gets sent when delivery can be
+     *            resumed. This is intended to avoid sending too many of the
+     *            same messages when the device comes back online or becomes
+     *            active.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMMessage withCollapseKey(String collapseKey) {
+        this.collapseKey = collapseKey;
+        return this;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @return The data payload used for a silent push. This payload is added to
+     *         the notifications' data.pinpoint.jsonBody' object
+     */
+    public java.util.Map<String, String> getData() {
+        return data;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @param data The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     */
+    public void setData(java.util.Map<String, String> data) {
+        this.data = data;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param data The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMMessage withData(java.util.Map<String, String> data) {
+        this.data = data;
+        return this;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     * <p>
+     * The method adds a new key-value pair into Data parameter, and returns a
+     * reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Data.
+     * @param value The corresponding value of the entry to be added into Data.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMMessage addDataEntry(String key, String value) {
+        if (null == this.data) {
+            this.data = new java.util.HashMap<String, String>();
+        }
+        if (this.data.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.data.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Data.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public GCMMessage clearDataEntries() {
+        this.data = null;
+        return this;
+    }
+
+    /**
+     * The icon image name of the asset saved in your application.
+     *
+     * @return The icon image name of the asset saved in your application.
+     */
+    public String getIconReference() {
+        return iconReference;
+    }
+
+    /**
+     * The icon image name of the asset saved in your application.
+     *
+     * @param iconReference The icon image name of the asset saved in your
+     *            application.
+     */
+    public void setIconReference(String iconReference) {
+        this.iconReference = iconReference;
+    }
+
+    /**
+     * The icon image name of the asset saved in your application.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param iconReference The icon image name of the asset saved in your
+     *            application.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMMessage withIconReference(String iconReference) {
+        this.iconReference = iconReference;
+        return this;
+    }
+
+    /**
+     * The URL that points to an image used as the large icon to the
+     * notification content view.
+     *
+     * @return The URL that points to an image used as the large icon to the
+     *         notification content view.
+     */
+    public String getImageIconUrl() {
+        return imageIconUrl;
+    }
+
+    /**
+     * The URL that points to an image used as the large icon to the
+     * notification content view.
+     *
+     * @param imageIconUrl The URL that points to an image used as the large
+     *            icon to the notification content view.
+     */
+    public void setImageIconUrl(String imageIconUrl) {
+        this.imageIconUrl = imageIconUrl;
+    }
+
+    /**
+     * The URL that points to an image used as the large icon to the
+     * notification content view.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param imageIconUrl The URL that points to an image used as the large
+     *            icon to the notification content view.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMMessage withImageIconUrl(String imageIconUrl) {
+        this.imageIconUrl = imageIconUrl;
+        return this;
+    }
+
+    /**
+     * The URL that points to an image used in the push notification.
+     *
+     * @return The URL that points to an image used in the push notification.
+     */
+    public String getImageUrl() {
+        return imageUrl;
+    }
+
+    /**
+     * The URL that points to an image used in the push notification.
+     *
+     * @param imageUrl The URL that points to an image used in the push
+     *            notification.
+     */
+    public void setImageUrl(String imageUrl) {
+        this.imageUrl = imageUrl;
+    }
+
+    /**
+     * The URL that points to an image used in the push notification.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param imageUrl The URL that points to an image used in the push
+     *            notification.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMMessage withImageUrl(String imageUrl) {
+        this.imageUrl = imageUrl;
+        return this;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @return The data payload used for a silent push. This payload is added to
+     *         the notifications' data.pinpoint.jsonBody' object
+     */
+    public String getJsonData() {
+        return jsonData;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     *
+     * @param jsonData The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     */
+    public void setJsonData(String jsonData) {
+        this.jsonData = jsonData;
+    }
+
+    /**
+     * The data payload used for a silent push. This payload is added to the
+     * notifications' data.pinpoint.jsonBody' object
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param jsonData The data payload used for a silent push. This payload is
+     *            added to the notifications' data.pinpoint.jsonBody' object
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMMessage withJsonData(String jsonData) {
+        this.jsonData = jsonData;
+        return this;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     *
+     * @return The Raw JSON formatted string to be used as the payload. This
+     *         value overrides the message.
+     */
+    public String getRawContent() {
+        return rawContent;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     *
+     * @param rawContent The Raw JSON formatted string to be used as the
+     *            payload. This value overrides the message.
+     */
+    public void setRawContent(String rawContent) {
+        this.rawContent = rawContent;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param rawContent The Raw JSON formatted string to be used as the
+     *            payload. This value overrides the message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMMessage withRawContent(String rawContent) {
+        this.rawContent = rawContent;
+        return this;
+    }
+
+    /**
+     * This parameter specifies the package name of the application where the
+     * registration tokens must match in order to receive the message.
+     *
+     * @return This parameter specifies the package name of the application
+     *         where the registration tokens must match in order to receive the
+     *         message.
+     */
+    public String getRestrictedPackageName() {
+        return restrictedPackageName;
+    }
+
+    /**
+     * This parameter specifies the package name of the application where the
+     * registration tokens must match in order to receive the message.
+     *
+     * @param restrictedPackageName This parameter specifies the package name of
+     *            the application where the registration tokens must match in
+     *            order to receive the message.
+     */
+    public void setRestrictedPackageName(String restrictedPackageName) {
+        this.restrictedPackageName = restrictedPackageName;
+    }
+
+    /**
+     * This parameter specifies the package name of the application where the
+     * registration tokens must match in order to receive the message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param restrictedPackageName This parameter specifies the package name of
+     *            the application where the registration tokens must match in
+     *            order to receive the message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMMessage withRestrictedPackageName(String restrictedPackageName) {
+        this.restrictedPackageName = restrictedPackageName;
+        return this;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     *
+     * @return Indicates if the message should display on the users device.
+     *         Silent pushes can be used for Remote Configuration and Phone Home
+     *         use cases.
+     */
+    public Boolean isSilentPush() {
+        return silentPush;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     *
+     * @return Indicates if the message should display on the users device.
+     *         Silent pushes can be used for Remote Configuration and Phone Home
+     *         use cases.
+     */
+    public Boolean getSilentPush() {
+        return silentPush;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     *
+     * @param silentPush Indicates if the message should display on the users
+     *            device. Silent pushes can be used for Remote Configuration and
+     *            Phone Home use cases.
+     */
+    public void setSilentPush(Boolean silentPush) {
+        this.silentPush = silentPush;
+    }
+
+    /**
+     * Indicates if the message should display on the users device. Silent
+     * pushes can be used for Remote Configuration and Phone Home use cases.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param silentPush Indicates if the message should display on the users
+     *            device. Silent pushes can be used for Remote Configuration and
+     *            Phone Home use cases.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMMessage withSilentPush(Boolean silentPush) {
+        this.silentPush = silentPush;
+        return this;
+    }
+
+    /**
+     * The URL that points to an image used as the small icon for the
+     * notification which will be used to represent the notification in the
+     * status bar and content view
+     *
+     * @return The URL that points to an image used as the small icon for the
+     *         notification which will be used to represent the notification in
+     *         the status bar and content view
+     */
+    public String getSmallImageIconUrl() {
+        return smallImageIconUrl;
+    }
+
+    /**
+     * The URL that points to an image used as the small icon for the
+     * notification which will be used to represent the notification in the
+     * status bar and content view
+     *
+     * @param smallImageIconUrl The URL that points to an image used as the
+     *            small icon for the notification which will be used to
+     *            represent the notification in the status bar and content view
+     */
+    public void setSmallImageIconUrl(String smallImageIconUrl) {
+        this.smallImageIconUrl = smallImageIconUrl;
+    }
+
+    /**
+     * The URL that points to an image used as the small icon for the
+     * notification which will be used to represent the notification in the
+     * status bar and content view
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param smallImageIconUrl The URL that points to an image used as the
+     *            small icon for the notification which will be used to
+     *            represent the notification in the status bar and content view
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMMessage withSmallImageIconUrl(String smallImageIconUrl) {
+        this.smallImageIconUrl = smallImageIconUrl;
+        return this;
+    }
+
+    /**
+     * Indicates a sound to play when the device receives the notification.
+     * Supports default, or the filename of a sound resource bundled in the app.
+     * Android sound files must reside in /res/raw/
+     *
+     * @return Indicates a sound to play when the device receives the
+     *         notification. Supports default, or the filename of a sound
+     *         resource bundled in the app. Android sound files must reside in
+     *         /res/raw/
+     */
+    public String getSound() {
+        return sound;
+    }
+
+    /**
+     * Indicates a sound to play when the device receives the notification.
+     * Supports default, or the filename of a sound resource bundled in the app.
+     * Android sound files must reside in /res/raw/
+     *
+     * @param sound Indicates a sound to play when the device receives the
+     *            notification. Supports default, or the filename of a sound
+     *            resource bundled in the app. Android sound files must reside
+     *            in /res/raw/
+     */
+    public void setSound(String sound) {
+        this.sound = sound;
+    }
+
+    /**
+     * Indicates a sound to play when the device receives the notification.
+     * Supports default, or the filename of a sound resource bundled in the app.
+     * Android sound files must reside in /res/raw/
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param sound Indicates a sound to play when the device receives the
+     *            notification. Supports default, or the filename of a sound
+     *            resource bundled in the app. Android sound files must reside
+     *            in /res/raw/
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMMessage withSound(String sound) {
+        this.sound = sound;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @return Default message substitutions. Can be overridden by individual
+     *         address substitutions.
+     */
+    public java.util.Map<String, java.util.List<String>> getSubstitutions() {
+        return substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     */
+    public void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMMessage withSubstitutions(java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * The method adds a new key-value pair into Substitutions parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into Substitutions.
+     * @param value The corresponding value of the entry to be added into
+     *            Substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMMessage addSubstitutionsEntry(String key, java.util.List<String> value) {
+        if (null == this.substitutions) {
+            this.substitutions = new java.util.HashMap<String, java.util.List<String>>();
+        }
+        if (this.substitutions.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.substitutions.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public GCMMessage clearSubstitutionsEntries() {
+        this.substitutions = null;
+        return this;
+    }
+
+    /**
+     * The message title that displays above the message on the user's device.
+     *
+     * @return The message title that displays above the message on the user's
+     *         device.
+     */
+    public String getTitle() {
+        return title;
+    }
+
+    /**
+     * The message title that displays above the message on the user's device.
+     *
+     * @param title The message title that displays above the message on the
+     *            user's device.
+     */
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    /**
+     * The message title that displays above the message on the user's device.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param title The message title that displays above the message on the
+     *            user's device.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMMessage withTitle(String title) {
+        this.title = title;
+        return this;
+    }
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     *
+     * @return The URL to open in the user's mobile browser. Used if the value
+     *         for Action is URL.
+     */
+    public String getUrl() {
+        return url;
+    }
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     *
+     * @param url The URL to open in the user's mobile browser. Used if the
+     *            value for Action is URL.
+     */
+    public void setUrl(String url) {
+        this.url = url;
+    }
+
+    /**
+     * The URL to open in the user's mobile browser. Used if the value for
+     * Action is URL.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param url The URL to open in the user's mobile browser. Used if the
+     *            value for Action is URL.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GCMMessage withUrl(String url) {
+        this.url = url;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAction() != null)
+            sb.append("Action: " + getAction() + ",");
+        if (getBody() != null)
+            sb.append("Body: " + getBody() + ",");
+        if (getCollapseKey() != null)
+            sb.append("CollapseKey: " + getCollapseKey() + ",");
+        if (getData() != null)
+            sb.append("Data: " + getData() + ",");
+        if (getIconReference() != null)
+            sb.append("IconReference: " + getIconReference() + ",");
+        if (getImageIconUrl() != null)
+            sb.append("ImageIconUrl: " + getImageIconUrl() + ",");
+        if (getImageUrl() != null)
+            sb.append("ImageUrl: " + getImageUrl() + ",");
+        if (getJsonData() != null)
+            sb.append("JsonData: " + getJsonData() + ",");
+        if (getRawContent() != null)
+            sb.append("RawContent: " + getRawContent() + ",");
+        if (getRestrictedPackageName() != null)
+            sb.append("RestrictedPackageName: " + getRestrictedPackageName() + ",");
+        if (getSilentPush() != null)
+            sb.append("SilentPush: " + getSilentPush() + ",");
+        if (getSmallImageIconUrl() != null)
+            sb.append("SmallImageIconUrl: " + getSmallImageIconUrl() + ",");
+        if (getSound() != null)
+            sb.append("Sound: " + getSound() + ",");
+        if (getSubstitutions() != null)
+            sb.append("Substitutions: " + getSubstitutions() + ",");
+        if (getTitle() != null)
+            sb.append("Title: " + getTitle() + ",");
+        if (getUrl() != null)
+            sb.append("Url: " + getUrl());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getAction() == null) ? 0 : getAction().hashCode());
+        hashCode = prime * hashCode + ((getBody() == null) ? 0 : getBody().hashCode());
+        hashCode = prime * hashCode
+                + ((getCollapseKey() == null) ? 0 : getCollapseKey().hashCode());
+        hashCode = prime * hashCode + ((getData() == null) ? 0 : getData().hashCode());
+        hashCode = prime * hashCode
+                + ((getIconReference() == null) ? 0 : getIconReference().hashCode());
+        hashCode = prime * hashCode
+                + ((getImageIconUrl() == null) ? 0 : getImageIconUrl().hashCode());
+        hashCode = prime * hashCode + ((getImageUrl() == null) ? 0 : getImageUrl().hashCode());
+        hashCode = prime * hashCode + ((getJsonData() == null) ? 0 : getJsonData().hashCode());
+        hashCode = prime * hashCode + ((getRawContent() == null) ? 0 : getRawContent().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getRestrictedPackageName() == null) ? 0 : getRestrictedPackageName().hashCode());
+        hashCode = prime * hashCode + ((getSilentPush() == null) ? 0 : getSilentPush().hashCode());
+        hashCode = prime * hashCode
+                + ((getSmallImageIconUrl() == null) ? 0 : getSmallImageIconUrl().hashCode());
+        hashCode = prime * hashCode + ((getSound() == null) ? 0 : getSound().hashCode());
+        hashCode = prime * hashCode
+                + ((getSubstitutions() == null) ? 0 : getSubstitutions().hashCode());
+        hashCode = prime * hashCode + ((getTitle() == null) ? 0 : getTitle().hashCode());
+        hashCode = prime * hashCode + ((getUrl() == null) ? 0 : getUrl().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GCMMessage == false)
+            return false;
+        GCMMessage other = (GCMMessage) obj;
+
+        if (other.getAction() == null ^ this.getAction() == null)
+            return false;
+        if (other.getAction() != null && other.getAction().equals(this.getAction()) == false)
+            return false;
+        if (other.getBody() == null ^ this.getBody() == null)
+            return false;
+        if (other.getBody() != null && other.getBody().equals(this.getBody()) == false)
+            return false;
+        if (other.getCollapseKey() == null ^ this.getCollapseKey() == null)
+            return false;
+        if (other.getCollapseKey() != null
+                && other.getCollapseKey().equals(this.getCollapseKey()) == false)
+            return false;
+        if (other.getData() == null ^ this.getData() == null)
+            return false;
+        if (other.getData() != null && other.getData().equals(this.getData()) == false)
+            return false;
+        if (other.getIconReference() == null ^ this.getIconReference() == null)
+            return false;
+        if (other.getIconReference() != null
+                && other.getIconReference().equals(this.getIconReference()) == false)
+            return false;
+        if (other.getImageIconUrl() == null ^ this.getImageIconUrl() == null)
+            return false;
+        if (other.getImageIconUrl() != null
+                && other.getImageIconUrl().equals(this.getImageIconUrl()) == false)
+            return false;
+        if (other.getImageUrl() == null ^ this.getImageUrl() == null)
+            return false;
+        if (other.getImageUrl() != null && other.getImageUrl().equals(this.getImageUrl()) == false)
+            return false;
+        if (other.getJsonData() == null ^ this.getJsonData() == null)
+            return false;
+        if (other.getJsonData() != null && other.getJsonData().equals(this.getJsonData()) == false)
+            return false;
+        if (other.getRawContent() == null ^ this.getRawContent() == null)
+            return false;
+        if (other.getRawContent() != null
+                && other.getRawContent().equals(this.getRawContent()) == false)
+            return false;
+        if (other.getRestrictedPackageName() == null ^ this.getRestrictedPackageName() == null)
+            return false;
+        if (other.getRestrictedPackageName() != null
+                && other.getRestrictedPackageName().equals(this.getRestrictedPackageName()) == false)
+            return false;
+        if (other.getSilentPush() == null ^ this.getSilentPush() == null)
+            return false;
+        if (other.getSilentPush() != null
+                && other.getSilentPush().equals(this.getSilentPush()) == false)
+            return false;
+        if (other.getSmallImageIconUrl() == null ^ this.getSmallImageIconUrl() == null)
+            return false;
+        if (other.getSmallImageIconUrl() != null
+                && other.getSmallImageIconUrl().equals(this.getSmallImageIconUrl()) == false)
+            return false;
+        if (other.getSound() == null ^ this.getSound() == null)
+            return false;
+        if (other.getSound() != null && other.getSound().equals(this.getSound()) == false)
+            return false;
+        if (other.getSubstitutions() == null ^ this.getSubstitutions() == null)
+            return false;
+        if (other.getSubstitutions() != null
+                && other.getSubstitutions().equals(this.getSubstitutions()) == false)
+            return false;
+        if (other.getTitle() == null ^ this.getTitle() == null)
+            return false;
+        if (other.getTitle() != null && other.getTitle().equals(this.getTitle()) == false)
+            return false;
+        if (other.getUrl() == null ^ this.getUrl() == null)
+            return false;
+        if (other.getUrl() != null && other.getUrl().equals(this.getUrl()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAdmChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAdmChannelRequest.java
new file mode 100644
index 0000000000..8eb1aa0b59
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAdmChannelRequest.java
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Get an ADM channel
+ */
+public class GetAdmChannelRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAdmChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAdmChannelRequest == false)
+            return false;
+        GetAdmChannelRequest other = (GetAdmChannelRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAdmChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAdmChannelResult.java
new file mode 100644
index 0000000000..e0b55bf6a5
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAdmChannelResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class GetAdmChannelResult implements Serializable {
+    /**
+     * Amazon Device Messaging channel definition.
+     */
+    private ADMChannelResponse aDMChannelResponse;
+
+    /**
+     * Amazon Device Messaging channel definition.
+     *
+     * @return Amazon Device Messaging channel definition.
+     */
+    public ADMChannelResponse getADMChannelResponse() {
+        return aDMChannelResponse;
+    }
+
+    /**
+     * Amazon Device Messaging channel definition.
+     *
+     * @param aDMChannelResponse Amazon Device Messaging channel definition.
+     */
+    public void setADMChannelResponse(ADMChannelResponse aDMChannelResponse) {
+        this.aDMChannelResponse = aDMChannelResponse;
+    }
+
+    /**
+     * Amazon Device Messaging channel definition.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param aDMChannelResponse Amazon Device Messaging channel definition.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAdmChannelResult withADMChannelResponse(ADMChannelResponse aDMChannelResponse) {
+        this.aDMChannelResponse = aDMChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getADMChannelResponse() != null)
+            sb.append("ADMChannelResponse: " + getADMChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getADMChannelResponse() == null) ? 0 : getADMChannelResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAdmChannelResult == false)
+            return false;
+        GetAdmChannelResult other = (GetAdmChannelResult) obj;
+
+        if (other.getADMChannelResponse() == null ^ this.getADMChannelResponse() == null)
+            return false;
+        if (other.getADMChannelResponse() != null
+                && other.getADMChannelResponse().equals(this.getADMChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApiRootRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApiRootRequest.java
new file mode 100644
index 0000000000..e5b34bab95
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApiRootRequest.java
@@ -0,0 +1,62 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * HAL links
+ */
+public class GetApiRootRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetApiRootRequest == false)
+            return false;
+        GetApiRootRequest other = (GetApiRootRequest) obj;
+
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApiRootResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApiRootResult.java
new file mode 100644
index 0000000000..de36f05f30
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApiRootResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class GetApiRootResult implements Serializable {
+    /**
+     * Simple message object.
+     */
+    private MessageBody messageBody;
+
+    /**
+     * Simple message object.
+     *
+     * @return Simple message object.
+     */
+    public MessageBody getMessageBody() {
+        return messageBody;
+    }
+
+    /**
+     * Simple message object.
+     *
+     * @param messageBody Simple message object.
+     */
+    public void setMessageBody(MessageBody messageBody) {
+        this.messageBody = messageBody;
+    }
+
+    /**
+     * Simple message object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param messageBody Simple message object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetApiRootResult withMessageBody(MessageBody messageBody) {
+        this.messageBody = messageBody;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getMessageBody() != null)
+            sb.append("MessageBody: " + getMessageBody());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getMessageBody() == null) ? 0 : getMessageBody().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetApiRootResult == false)
+            return false;
+        GetApiRootResult other = (GetApiRootResult) obj;
+
+        if (other.getMessageBody() == null ^ this.getMessageBody() == null)
+            return false;
+        if (other.getMessageBody() != null
+                && other.getMessageBody().equals(this.getMessageBody()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApnsChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApnsChannelRequest.java
index c04ff9b55b..bd694f0f4b 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApnsChannelRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApnsChannelRequest.java
@@ -23,49 +23,11 @@
  * Returns information about the APNs channel for an app.
  */
 public class GetApnsChannelRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
     private String applicationId;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetApnsChannelRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -112,8 +74,6 @@ public GetApnsChannelRequest withApplicationId(String applicationId) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId());
         sb.append("}");
@@ -125,7 +85,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         return hashCode;
@@ -142,10 +101,6 @@ public boolean equals(Object obj) {
             return false;
         GetApnsChannelRequest other = (GetApnsChannelRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApnsChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApnsChannelResult.java
index 4491fb6fb8..e4dc42beb6 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApnsChannelResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApnsChannelResult.java
@@ -19,42 +19,37 @@
 
 public class GetApnsChannelResult implements Serializable {
     /**
-     * The new value for the aPNSChannelResponse property for this object.
+     * Apple Distribution Push Notification Service channel definition.
      */
     private APNSChannelResponse aPNSChannelResponse;
 
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * Returns the value of the aPNSChannelResponse property for this object.
+     * Apple Distribution Push Notification Service channel definition.
      *
-     * @return The value of the aPNSChannelResponse property for this object.
+     * @return Apple Distribution Push Notification Service channel definition.
      */
     public APNSChannelResponse getAPNSChannelResponse() {
         return aPNSChannelResponse;
     }
 
     /**
-     * Sets the value of aPNSChannelResponse
+     * Apple Distribution Push Notification Service channel definition.
      *
-     * @param aPNSChannelResponse The new value for the aPNSChannelResponse
-     *            property for this object.
+     * @param aPNSChannelResponse Apple Distribution Push Notification Service
+     *            channel definition.
      */
     public void setAPNSChannelResponse(APNSChannelResponse aPNSChannelResponse) {
         this.aPNSChannelResponse = aPNSChannelResponse;
     }
 
     /**
-     * Sets the value of the aPNSChannelResponse property for this object.
+     * Apple Distribution Push Notification Service channel definition.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param aPNSChannelResponse The new value for the aPNSChannelResponse
-     *            property for this object.
+     * @param aPNSChannelResponse Apple Distribution Push Notification Service
+     *            channel definition.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -63,43 +58,6 @@ public GetApnsChannelResult withAPNSChannelResponse(APNSChannelResponse aPNSChan
         return this;
     }
 
-    /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetApnsChannelResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -112,9 +70,7 @@ public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
         if (getAPNSChannelResponse() != null)
-            sb.append("APNSChannelResponse: " + getAPNSChannelResponse() + ",");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin());
+            sb.append("APNSChannelResponse: " + getAPNSChannelResponse());
         sb.append("}");
         return sb.toString();
     }
@@ -126,10 +82,6 @@ public int hashCode() {
 
         hashCode = prime * hashCode
                 + ((getAPNSChannelResponse() == null) ? 0 : getAPNSChannelResponse().hashCode());
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         return hashCode;
     }
 
@@ -149,12 +101,6 @@ public boolean equals(Object obj) {
         if (other.getAPNSChannelResponse() != null
                 && other.getAPNSChannelResponse().equals(this.getAPNSChannelResponse()) == false)
             return false;
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApnsSandboxChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApnsSandboxChannelRequest.java
new file mode 100644
index 0000000000..b6a027a6a9
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApnsSandboxChannelRequest.java
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Get an APNS sandbox channel
+ */
+public class GetApnsSandboxChannelRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetApnsSandboxChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetApnsSandboxChannelRequest == false)
+            return false;
+        GetApnsSandboxChannelRequest other = (GetApnsSandboxChannelRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApnsSandboxChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApnsSandboxChannelResult.java
new file mode 100644
index 0000000000..93a437c202
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApnsSandboxChannelResult.java
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class GetApnsSandboxChannelResult implements Serializable {
+    /**
+     * Apple Development Push Notification Service channel definition.
+     */
+    private APNSSandboxChannelResponse aPNSSandboxChannelResponse;
+
+    /**
+     * Apple Development Push Notification Service channel definition.
+     *
+     * @return Apple Development Push Notification Service channel definition.
+     */
+    public APNSSandboxChannelResponse getAPNSSandboxChannelResponse() {
+        return aPNSSandboxChannelResponse;
+    }
+
+    /**
+     * Apple Development Push Notification Service channel definition.
+     *
+     * @param aPNSSandboxChannelResponse Apple Development Push Notification
+     *            Service channel definition.
+     */
+    public void setAPNSSandboxChannelResponse(APNSSandboxChannelResponse aPNSSandboxChannelResponse) {
+        this.aPNSSandboxChannelResponse = aPNSSandboxChannelResponse;
+    }
+
+    /**
+     * Apple Development Push Notification Service channel definition.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param aPNSSandboxChannelResponse Apple Development Push Notification
+     *            Service channel definition.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetApnsSandboxChannelResult withAPNSSandboxChannelResponse(
+            APNSSandboxChannelResponse aPNSSandboxChannelResponse) {
+        this.aPNSSandboxChannelResponse = aPNSSandboxChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAPNSSandboxChannelResponse() != null)
+            sb.append("APNSSandboxChannelResponse: " + getAPNSSandboxChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime
+                * hashCode
+                + ((getAPNSSandboxChannelResponse() == null) ? 0 : getAPNSSandboxChannelResponse()
+                        .hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetApnsSandboxChannelResult == false)
+            return false;
+        GetApnsSandboxChannelResult other = (GetApnsSandboxChannelResult) obj;
+
+        if (other.getAPNSSandboxChannelResponse() == null
+                ^ this.getAPNSSandboxChannelResponse() == null)
+            return false;
+        if (other.getAPNSSandboxChannelResponse() != null
+                && other.getAPNSSandboxChannelResponse().equals(
+                        this.getAPNSSandboxChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppRequest.java
new file mode 100644
index 0000000000..26b0fb9e83
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppRequest.java
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Returns information about an app.
+ */
+public class GetAppRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAppRequest == false)
+            return false;
+        GetAppRequest other = (GetAppRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppResult.java
new file mode 100644
index 0000000000..1030a390ff
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class GetAppResult implements Serializable {
+    /**
+     * Application Response.
+     */
+    private ApplicationResponse applicationResponse;
+
+    /**
+     * Application Response.
+     *
+     * @return Application Response.
+     */
+    public ApplicationResponse getApplicationResponse() {
+        return applicationResponse;
+    }
+
+    /**
+     * Application Response.
+     *
+     * @param applicationResponse Application Response.
+     */
+    public void setApplicationResponse(ApplicationResponse applicationResponse) {
+        this.applicationResponse = applicationResponse;
+    }
+
+    /**
+     * Application Response.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationResponse Application Response.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppResult withApplicationResponse(ApplicationResponse applicationResponse) {
+        this.applicationResponse = applicationResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationResponse() != null)
+            sb.append("ApplicationResponse: " + getApplicationResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationResponse() == null) ? 0 : getApplicationResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAppResult == false)
+            return false;
+        GetAppResult other = (GetAppResult) obj;
+
+        if (other.getApplicationResponse() == null ^ this.getApplicationResponse() == null)
+            return false;
+        if (other.getApplicationResponse() != null
+                && other.getApplicationResponse().equals(this.getApplicationResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApplicationSettingsRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApplicationSettingsRequest.java
index 8ed6b98913..65fc107dfd 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApplicationSettingsRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApplicationSettingsRequest.java
@@ -23,49 +23,11 @@
  * Used to request the settings for an app.
  */
 public class GetApplicationSettingsRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
     private String applicationId;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetApplicationSettingsRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -112,8 +74,6 @@ public GetApplicationSettingsRequest withApplicationId(String applicationId) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId());
         sb.append("}");
@@ -125,7 +85,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         return hashCode;
@@ -142,10 +101,6 @@ public boolean equals(Object obj) {
             return false;
         GetApplicationSettingsRequest other = (GetApplicationSettingsRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApplicationSettingsResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApplicationSettingsResult.java
index 983eb1748e..1219085866 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApplicationSettingsResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetApplicationSettingsResult.java
@@ -19,69 +19,23 @@
 
 public class GetApplicationSettingsResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the applicationSettingsResource property for this
-     * object.
+     * Application settings.
      */
     private ApplicationSettingsResource applicationSettingsResource;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetApplicationSettingsResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the applicationSettingsResource property for this
-     * object.
+     * Application settings.
      *
-     * @return The value of the applicationSettingsResource property for this
-     *         object.
+     * @return Application settings.
      */
     public ApplicationSettingsResource getApplicationSettingsResource() {
         return applicationSettingsResource;
     }
 
     /**
-     * Sets the value of applicationSettingsResource
+     * Application settings.
      *
-     * @param applicationSettingsResource The new value for the
-     *            applicationSettingsResource property for this object.
+     * @param applicationSettingsResource Application settings.
      */
     public void setApplicationSettingsResource(
             ApplicationSettingsResource applicationSettingsResource) {
@@ -89,14 +43,12 @@ public void setApplicationSettingsResource(
     }
 
     /**
-     * Sets the value of the applicationSettingsResource property for this
-     * object.
+     * Application settings.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param applicationSettingsResource The new value for the
-     *            applicationSettingsResource property for this object.
+     * @param applicationSettingsResource Application settings.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -117,8 +69,6 @@ public GetApplicationSettingsResult withApplicationSettingsResource(
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getApplicationSettingsResource() != null)
             sb.append("ApplicationSettingsResource: " + getApplicationSettingsResource());
         sb.append("}");
@@ -130,10 +80,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime
                 * hashCode
                 + ((getApplicationSettingsResource() == null) ? 0
@@ -152,12 +98,6 @@ public boolean equals(Object obj) {
             return false;
         GetApplicationSettingsResult other = (GetApplicationSettingsResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getApplicationSettingsResource() == null
                 ^ this.getApplicationSettingsResource() == null)
             return false;
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdChannelsRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdChannelsRequest.java
new file mode 100644
index 0000000000..feab8a6e12
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdChannelsRequest.java
@@ -0,0 +1,112 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * HAL links
+ */
+public class GetAppsApplicationIdChannelsRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppsApplicationIdChannelsRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAppsApplicationIdChannelsRequest == false)
+            return false;
+        GetAppsApplicationIdChannelsRequest other = (GetAppsApplicationIdChannelsRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdChannelsResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdChannelsResult.java
new file mode 100644
index 0000000000..a61acbe254
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdChannelsResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class GetAppsApplicationIdChannelsResult implements Serializable {
+    /**
+     * Simple message object.
+     */
+    private MessageBody messageBody;
+
+    /**
+     * Simple message object.
+     *
+     * @return Simple message object.
+     */
+    public MessageBody getMessageBody() {
+        return messageBody;
+    }
+
+    /**
+     * Simple message object.
+     *
+     * @param messageBody Simple message object.
+     */
+    public void setMessageBody(MessageBody messageBody) {
+        this.messageBody = messageBody;
+    }
+
+    /**
+     * Simple message object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param messageBody Simple message object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppsApplicationIdChannelsResult withMessageBody(MessageBody messageBody) {
+        this.messageBody = messageBody;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getMessageBody() != null)
+            sb.append("MessageBody: " + getMessageBody());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getMessageBody() == null) ? 0 : getMessageBody().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAppsApplicationIdChannelsResult == false)
+            return false;
+        GetAppsApplicationIdChannelsResult other = (GetAppsApplicationIdChannelsResult) obj;
+
+        if (other.getMessageBody() == null ^ this.getMessageBody() == null)
+            return false;
+        if (other.getMessageBody() != null
+                && other.getMessageBody().equals(this.getMessageBody()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdEndpointsRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdEndpointsRequest.java
new file mode 100644
index 0000000000..027830c1a3
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdEndpointsRequest.java
@@ -0,0 +1,112 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * HAL links
+ */
+public class GetAppsApplicationIdEndpointsRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppsApplicationIdEndpointsRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAppsApplicationIdEndpointsRequest == false)
+            return false;
+        GetAppsApplicationIdEndpointsRequest other = (GetAppsApplicationIdEndpointsRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdEndpointsResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdEndpointsResult.java
new file mode 100644
index 0000000000..11f67f033f
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdEndpointsResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class GetAppsApplicationIdEndpointsResult implements Serializable {
+    /**
+     * Simple message object.
+     */
+    private MessageBody messageBody;
+
+    /**
+     * Simple message object.
+     *
+     * @return Simple message object.
+     */
+    public MessageBody getMessageBody() {
+        return messageBody;
+    }
+
+    /**
+     * Simple message object.
+     *
+     * @param messageBody Simple message object.
+     */
+    public void setMessageBody(MessageBody messageBody) {
+        this.messageBody = messageBody;
+    }
+
+    /**
+     * Simple message object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param messageBody Simple message object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppsApplicationIdEndpointsResult withMessageBody(MessageBody messageBody) {
+        this.messageBody = messageBody;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getMessageBody() != null)
+            sb.append("MessageBody: " + getMessageBody());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getMessageBody() == null) ? 0 : getMessageBody().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAppsApplicationIdEndpointsResult == false)
+            return false;
+        GetAppsApplicationIdEndpointsResult other = (GetAppsApplicationIdEndpointsResult) obj;
+
+        if (other.getMessageBody() == null ^ this.getMessageBody() == null)
+            return false;
+        if (other.getMessageBody() != null
+                && other.getMessageBody().equals(this.getMessageBody()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdJobsRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdJobsRequest.java
new file mode 100644
index 0000000000..ac62e40b16
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdJobsRequest.java
@@ -0,0 +1,112 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * HAL links
+ */
+public class GetAppsApplicationIdJobsRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppsApplicationIdJobsRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAppsApplicationIdJobsRequest == false)
+            return false;
+        GetAppsApplicationIdJobsRequest other = (GetAppsApplicationIdJobsRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdJobsResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdJobsResult.java
new file mode 100644
index 0000000000..aca2661208
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdJobsResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class GetAppsApplicationIdJobsResult implements Serializable {
+    /**
+     * Simple message object.
+     */
+    private MessageBody messageBody;
+
+    /**
+     * Simple message object.
+     *
+     * @return Simple message object.
+     */
+    public MessageBody getMessageBody() {
+        return messageBody;
+    }
+
+    /**
+     * Simple message object.
+     *
+     * @param messageBody Simple message object.
+     */
+    public void setMessageBody(MessageBody messageBody) {
+        this.messageBody = messageBody;
+    }
+
+    /**
+     * Simple message object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param messageBody Simple message object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppsApplicationIdJobsResult withMessageBody(MessageBody messageBody) {
+        this.messageBody = messageBody;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getMessageBody() != null)
+            sb.append("MessageBody: " + getMessageBody());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getMessageBody() == null) ? 0 : getMessageBody().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAppsApplicationIdJobsResult == false)
+            return false;
+        GetAppsApplicationIdJobsResult other = (GetAppsApplicationIdJobsResult) obj;
+
+        if (other.getMessageBody() == null ^ this.getMessageBody() == null)
+            return false;
+        if (other.getMessageBody() != null
+                && other.getMessageBody().equals(this.getMessageBody()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdMessagesRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdMessagesRequest.java
new file mode 100644
index 0000000000..34d5896325
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdMessagesRequest.java
@@ -0,0 +1,112 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * HAL links
+ */
+public class GetAppsApplicationIdMessagesRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppsApplicationIdMessagesRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAppsApplicationIdMessagesRequest == false)
+            return false;
+        GetAppsApplicationIdMessagesRequest other = (GetAppsApplicationIdMessagesRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdMessagesResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdMessagesResult.java
new file mode 100644
index 0000000000..88cc1fc460
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdMessagesResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class GetAppsApplicationIdMessagesResult implements Serializable {
+    /**
+     * Simple message object.
+     */
+    private MessageBody messageBody;
+
+    /**
+     * Simple message object.
+     *
+     * @return Simple message object.
+     */
+    public MessageBody getMessageBody() {
+        return messageBody;
+    }
+
+    /**
+     * Simple message object.
+     *
+     * @param messageBody Simple message object.
+     */
+    public void setMessageBody(MessageBody messageBody) {
+        this.messageBody = messageBody;
+    }
+
+    /**
+     * Simple message object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param messageBody Simple message object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppsApplicationIdMessagesResult withMessageBody(MessageBody messageBody) {
+        this.messageBody = messageBody;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getMessageBody() != null)
+            sb.append("MessageBody: " + getMessageBody());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getMessageBody() == null) ? 0 : getMessageBody().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAppsApplicationIdMessagesResult == false)
+            return false;
+        GetAppsApplicationIdMessagesResult other = (GetAppsApplicationIdMessagesResult) obj;
+
+        if (other.getMessageBody() == null ^ this.getMessageBody() == null)
+            return false;
+        if (other.getMessageBody() != null
+                && other.getMessageBody().equals(this.getMessageBody()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdSegmentsSegmentIdJobsRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdSegmentsSegmentIdJobsRequest.java
new file mode 100644
index 0000000000..6d4128edc9
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdSegmentsSegmentIdJobsRequest.java
@@ -0,0 +1,160 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * HAL links
+ */
+public class GetAppsApplicationIdSegmentsSegmentIdJobsRequest extends AmazonWebServiceRequest
+        implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * The new value for the segmentId property for this object.
+     */
+    private String segmentId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppsApplicationIdSegmentsSegmentIdJobsRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns the value of the segmentId property for this object.
+     *
+     * @return The value of the segmentId property for this object.
+     */
+    public String getSegmentId() {
+        return segmentId;
+    }
+
+    /**
+     * Sets the value of segmentId
+     *
+     * @param segmentId The new value for the segmentId property for this
+     *            object.
+     */
+    public void setSegmentId(String segmentId) {
+        this.segmentId = segmentId;
+    }
+
+    /**
+     * Sets the value of the segmentId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param segmentId The new value for the segmentId property for this
+     *            object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppsApplicationIdSegmentsSegmentIdJobsRequest withSegmentId(String segmentId) {
+        this.segmentId = segmentId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getSegmentId() != null)
+            sb.append("SegmentId: " + getSegmentId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime * hashCode + ((getSegmentId() == null) ? 0 : getSegmentId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAppsApplicationIdSegmentsSegmentIdJobsRequest == false)
+            return false;
+        GetAppsApplicationIdSegmentsSegmentIdJobsRequest other = (GetAppsApplicationIdSegmentsSegmentIdJobsRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        if (other.getSegmentId() == null ^ this.getSegmentId() == null)
+            return false;
+        if (other.getSegmentId() != null
+                && other.getSegmentId().equals(this.getSegmentId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdSegmentsSegmentIdJobsResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdSegmentsSegmentIdJobsResult.java
new file mode 100644
index 0000000000..86db8073bd
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdSegmentsSegmentIdJobsResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class GetAppsApplicationIdSegmentsSegmentIdJobsResult implements Serializable {
+    /**
+     * Simple message object.
+     */
+    private MessageBody messageBody;
+
+    /**
+     * Simple message object.
+     *
+     * @return Simple message object.
+     */
+    public MessageBody getMessageBody() {
+        return messageBody;
+    }
+
+    /**
+     * Simple message object.
+     *
+     * @param messageBody Simple message object.
+     */
+    public void setMessageBody(MessageBody messageBody) {
+        this.messageBody = messageBody;
+    }
+
+    /**
+     * Simple message object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param messageBody Simple message object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppsApplicationIdSegmentsSegmentIdJobsResult withMessageBody(MessageBody messageBody) {
+        this.messageBody = messageBody;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getMessageBody() != null)
+            sb.append("MessageBody: " + getMessageBody());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getMessageBody() == null) ? 0 : getMessageBody().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAppsApplicationIdSegmentsSegmentIdJobsResult == false)
+            return false;
+        GetAppsApplicationIdSegmentsSegmentIdJobsResult other = (GetAppsApplicationIdSegmentsSegmentIdJobsResult) obj;
+
+        if (other.getMessageBody() == null ^ this.getMessageBody() == null)
+            return false;
+        if (other.getMessageBody() != null
+                && other.getMessageBody().equals(this.getMessageBody()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdUsersMessagesRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdUsersMessagesRequest.java
new file mode 100644
index 0000000000..c6fd6028a4
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdUsersMessagesRequest.java
@@ -0,0 +1,112 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * HAL links
+ */
+public class GetAppsApplicationIdUsersMessagesRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppsApplicationIdUsersMessagesRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAppsApplicationIdUsersMessagesRequest == false)
+            return false;
+        GetAppsApplicationIdUsersMessagesRequest other = (GetAppsApplicationIdUsersMessagesRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdUsersMessagesResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdUsersMessagesResult.java
new file mode 100644
index 0000000000..88ce8f2cbe
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsApplicationIdUsersMessagesResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class GetAppsApplicationIdUsersMessagesResult implements Serializable {
+    /**
+     * Simple message object.
+     */
+    private MessageBody messageBody;
+
+    /**
+     * Simple message object.
+     *
+     * @return Simple message object.
+     */
+    public MessageBody getMessageBody() {
+        return messageBody;
+    }
+
+    /**
+     * Simple message object.
+     *
+     * @param messageBody Simple message object.
+     */
+    public void setMessageBody(MessageBody messageBody) {
+        this.messageBody = messageBody;
+    }
+
+    /**
+     * Simple message object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param messageBody Simple message object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppsApplicationIdUsersMessagesResult withMessageBody(MessageBody messageBody) {
+        this.messageBody = messageBody;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getMessageBody() != null)
+            sb.append("MessageBody: " + getMessageBody());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getMessageBody() == null) ? 0 : getMessageBody().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAppsApplicationIdUsersMessagesResult == false)
+            return false;
+        GetAppsApplicationIdUsersMessagesResult other = (GetAppsApplicationIdUsersMessagesResult) obj;
+
+        if (other.getMessageBody() == null ^ this.getMessageBody() == null)
+            return false;
+        if (other.getMessageBody() != null
+                && other.getMessageBody().equals(this.getMessageBody()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsRequest.java
new file mode 100644
index 0000000000..d07df8cc10
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsRequest.java
@@ -0,0 +1,152 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Returns information about your apps.
+ */
+public class GetAppsRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the pageSize property for this object.
+     */
+    private String pageSize;
+
+    /**
+     * The new value for the token property for this object.
+     */
+    private String token;
+
+    /**
+     * Returns the value of the pageSize property for this object.
+     *
+     * @return The value of the pageSize property for this object.
+     */
+    public String getPageSize() {
+        return pageSize;
+    }
+
+    /**
+     * Sets the value of pageSize
+     *
+     * @param pageSize The new value for the pageSize property for this object.
+     */
+    public void setPageSize(String pageSize) {
+        this.pageSize = pageSize;
+    }
+
+    /**
+     * Sets the value of the pageSize property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param pageSize The new value for the pageSize property for this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppsRequest withPageSize(String pageSize) {
+        this.pageSize = pageSize;
+        return this;
+    }
+
+    /**
+     * Returns the value of the token property for this object.
+     *
+     * @return The value of the token property for this object.
+     */
+    public String getToken() {
+        return token;
+    }
+
+    /**
+     * Sets the value of token
+     *
+     * @param token The new value for the token property for this object.
+     */
+    public void setToken(String token) {
+        this.token = token;
+    }
+
+    /**
+     * Sets the value of the token property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param token The new value for the token property for this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppsRequest withToken(String token) {
+        this.token = token;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getPageSize() != null)
+            sb.append("PageSize: " + getPageSize() + ",");
+        if (getToken() != null)
+            sb.append("Token: " + getToken());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getPageSize() == null) ? 0 : getPageSize().hashCode());
+        hashCode = prime * hashCode + ((getToken() == null) ? 0 : getToken().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAppsRequest == false)
+            return false;
+        GetAppsRequest other = (GetAppsRequest) obj;
+
+        if (other.getPageSize() == null ^ this.getPageSize() == null)
+            return false;
+        if (other.getPageSize() != null && other.getPageSize().equals(this.getPageSize()) == false)
+            return false;
+        if (other.getToken() == null ^ this.getToken() == null)
+            return false;
+        if (other.getToken() != null && other.getToken().equals(this.getToken()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsResult.java
new file mode 100644
index 0000000000..ea4c64729e
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetAppsResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class GetAppsResult implements Serializable {
+    /**
+     * Get Applications Result.
+     */
+    private ApplicationsResponse applicationsResponse;
+
+    /**
+     * Get Applications Result.
+     *
+     * @return Get Applications Result.
+     */
+    public ApplicationsResponse getApplicationsResponse() {
+        return applicationsResponse;
+    }
+
+    /**
+     * Get Applications Result.
+     *
+     * @param applicationsResponse Get Applications Result.
+     */
+    public void setApplicationsResponse(ApplicationsResponse applicationsResponse) {
+        this.applicationsResponse = applicationsResponse;
+    }
+
+    /**
+     * Get Applications Result.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationsResponse Get Applications Result.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetAppsResult withApplicationsResponse(ApplicationsResponse applicationsResponse) {
+        this.applicationsResponse = applicationsResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationsResponse() != null)
+            sb.append("ApplicationsResponse: " + getApplicationsResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationsResponse() == null) ? 0 : getApplicationsResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetAppsResult == false)
+            return false;
+        GetAppsResult other = (GetAppsResult) obj;
+
+        if (other.getApplicationsResponse() == null ^ this.getApplicationsResponse() == null)
+            return false;
+        if (other.getApplicationsResponse() != null
+                && other.getApplicationsResponse().equals(this.getApplicationsResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetBaiduChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetBaiduChannelRequest.java
new file mode 100644
index 0000000000..841637244c
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetBaiduChannelRequest.java
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Get a BAIDU GCM channel
+ */
+public class GetBaiduChannelRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetBaiduChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetBaiduChannelRequest == false)
+            return false;
+        GetBaiduChannelRequest other = (GetBaiduChannelRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetBaiduChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetBaiduChannelResult.java
new file mode 100644
index 0000000000..2a764c9481
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetBaiduChannelResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class GetBaiduChannelResult implements Serializable {
+    /**
+     * Baidu Cloud Messaging channel definition
+     */
+    private BaiduChannelResponse baiduChannelResponse;
+
+    /**
+     * Baidu Cloud Messaging channel definition
+     *
+     * @return Baidu Cloud Messaging channel definition
+     */
+    public BaiduChannelResponse getBaiduChannelResponse() {
+        return baiduChannelResponse;
+    }
+
+    /**
+     * Baidu Cloud Messaging channel definition
+     *
+     * @param baiduChannelResponse Baidu Cloud Messaging channel definition
+     */
+    public void setBaiduChannelResponse(BaiduChannelResponse baiduChannelResponse) {
+        this.baiduChannelResponse = baiduChannelResponse;
+    }
+
+    /**
+     * Baidu Cloud Messaging channel definition
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param baiduChannelResponse Baidu Cloud Messaging channel definition
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetBaiduChannelResult withBaiduChannelResponse(BaiduChannelResponse baiduChannelResponse) {
+        this.baiduChannelResponse = baiduChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getBaiduChannelResponse() != null)
+            sb.append("BaiduChannelResponse: " + getBaiduChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getBaiduChannelResponse() == null) ? 0 : getBaiduChannelResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetBaiduChannelResult == false)
+            return false;
+        GetBaiduChannelResult other = (GetBaiduChannelResult) obj;
+
+        if (other.getBaiduChannelResponse() == null ^ this.getBaiduChannelResponse() == null)
+            return false;
+        if (other.getBaiduChannelResponse() != null
+                && other.getBaiduChannelResponse().equals(this.getBaiduChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignActivitiesRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignActivitiesRequest.java
index 475cfd83fc..8fa0032a70 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignActivitiesRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignActivitiesRequest.java
@@ -23,11 +23,6 @@
  * Returns information about the activity performed by a campaign.
  */
 public class GetCampaignActivitiesRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
@@ -39,48 +34,16 @@
     private String campaignId;
 
     /**
-     * The new value for the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      */
     private String pageSize;
 
     /**
-     * The new value for the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      */
     private String token;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetCampaignActivitiesRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -152,30 +115,32 @@ public GetCampaignActivitiesRequest withCampaignId(String campaignId) {
     }
 
     /**
-     * Returns the value of the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      *
-     * @return The value of the pageSize property for this object.
+     * @return The number of entries you want on each page in the response.
      */
     public String getPageSize() {
         return pageSize;
     }
 
     /**
-     * Sets the value of pageSize
+     * The number of entries you want on each page in the response.
      *
-     * @param pageSize The new value for the pageSize property for this object.
+     * @param pageSize The number of entries you want on each page in the
+     *            response.
      */
     public void setPageSize(String pageSize) {
         this.pageSize = pageSize;
     }
 
     /**
-     * Sets the value of the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param pageSize The new value for the pageSize property for this object.
+     * @param pageSize The number of entries you want on each page in the
+     *            response.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -185,30 +150,36 @@ public GetCampaignActivitiesRequest withPageSize(String pageSize) {
     }
 
     /**
-     * Returns the value of the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      *
-     * @return The value of the token property for this object.
+     * @return The NextToken string returned on a previous page that you use to
+     *         get the next page of results in a paginated response.
      */
     public String getToken() {
         return token;
     }
 
     /**
-     * Sets the value of token
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      *
-     * @param token The new value for the token property for this object.
+     * @param token The NextToken string returned on a previous page that you
+     *            use to get the next page of results in a paginated response.
      */
     public void setToken(String token) {
         this.token = token;
     }
 
     /**
-     * Sets the value of the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param token The new value for the token property for this object.
+     * @param token The NextToken string returned on a previous page that you
+     *            use to get the next page of results in a paginated response.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -228,8 +199,6 @@ public GetCampaignActivitiesRequest withToken(String token) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getCampaignId() != null)
@@ -247,7 +216,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getCampaignId() == null) ? 0 : getCampaignId().hashCode());
@@ -267,10 +235,6 @@ public boolean equals(Object obj) {
             return false;
         GetCampaignActivitiesRequest other = (GetCampaignActivitiesRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignActivitiesResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignActivitiesResult.java
index d78281664b..65e5e84121 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignActivitiesResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignActivitiesResult.java
@@ -19,79 +19,35 @@
 
 public class GetCampaignActivitiesResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the activitiesResponse property for this object.
+     * Activities for campaign.
      */
     private ActivitiesResponse activitiesResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Activities for campaign.
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetCampaignActivitiesResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the activitiesResponse property for this object.
-     *
-     * @return The value of the activitiesResponse property for this object.
+     * @return Activities for campaign.
      */
     public ActivitiesResponse getActivitiesResponse() {
         return activitiesResponse;
     }
 
     /**
-     * Sets the value of activitiesResponse
+     * Activities for campaign.
      *
-     * @param activitiesResponse The new value for the activitiesResponse
-     *            property for this object.
+     * @param activitiesResponse Activities for campaign.
      */
     public void setActivitiesResponse(ActivitiesResponse activitiesResponse) {
         this.activitiesResponse = activitiesResponse;
     }
 
     /**
-     * Sets the value of the activitiesResponse property for this object.
+     * Activities for campaign.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param activitiesResponse The new value for the activitiesResponse
-     *            property for this object.
+     * @param activitiesResponse Activities for campaign.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public GetCampaignActivitiesResult withActivitiesResponse(ActivitiesResponse act
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getActivitiesResponse() != null)
             sb.append("ActivitiesResponse: " + getActivitiesResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getActivitiesResponse() == null) ? 0 : getActivitiesResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         GetCampaignActivitiesResult other = (GetCampaignActivitiesResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getActivitiesResponse() == null ^ this.getActivitiesResponse() == null)
             return false;
         if (other.getActivitiesResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignRequest.java
index 15d485feb7..36498cd86d 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignRequest.java
@@ -23,11 +23,6 @@
  * Returns information about a campaign.
  */
 public class GetCampaignRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
@@ -38,39 +33,6 @@
      */
     private String campaignId;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetCampaignRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -152,8 +114,6 @@ public GetCampaignRequest withCampaignId(String campaignId) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getCampaignId() != null)
@@ -167,7 +127,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getCampaignId() == null) ? 0 : getCampaignId().hashCode());
@@ -185,10 +144,6 @@ public boolean equals(Object obj) {
             return false;
         GetCampaignRequest other = (GetCampaignRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignResult.java
index bc325a718f..effab548e5 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignResult.java
@@ -19,79 +19,35 @@
 
 public class GetCampaignResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the campaignResponse property for this object.
+     * Campaign definition
      */
     private CampaignResponse campaignResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Campaign definition
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetCampaignResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the campaignResponse property for this object.
-     *
-     * @return The value of the campaignResponse property for this object.
+     * @return Campaign definition
      */
     public CampaignResponse getCampaignResponse() {
         return campaignResponse;
     }
 
     /**
-     * Sets the value of campaignResponse
+     * Campaign definition
      *
-     * @param campaignResponse The new value for the campaignResponse property
-     *            for this object.
+     * @param campaignResponse Campaign definition
      */
     public void setCampaignResponse(CampaignResponse campaignResponse) {
         this.campaignResponse = campaignResponse;
     }
 
     /**
-     * Sets the value of the campaignResponse property for this object.
+     * Campaign definition
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param campaignResponse The new value for the campaignResponse property
-     *            for this object.
+     * @param campaignResponse Campaign definition
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public GetCampaignResult withCampaignResponse(CampaignResponse campaignResponse)
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getCampaignResponse() != null)
             sb.append("CampaignResponse: " + getCampaignResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getCampaignResponse() == null) ? 0 : getCampaignResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         GetCampaignResult other = (GetCampaignResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getCampaignResponse() == null ^ this.getCampaignResponse() == null)
             return false;
         if (other.getCampaignResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignVersionRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignVersionRequest.java
index 29329f8bad..d76e434d0a 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignVersionRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignVersionRequest.java
@@ -20,14 +20,9 @@
 import com.amazonaws.AmazonWebServiceRequest;
 
 /**
- * Returns information about your campaign versions.
+ * Returns information about a specific version of a campaign.
  */
 public class GetCampaignVersionRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
@@ -43,39 +38,6 @@
      */
     private String version;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetCampaignVersionRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -190,8 +152,6 @@ public GetCampaignVersionRequest withVersion(String version) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getCampaignId() != null)
@@ -207,7 +167,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getCampaignId() == null) ? 0 : getCampaignId().hashCode());
@@ -226,10 +185,6 @@ public boolean equals(Object obj) {
             return false;
         GetCampaignVersionRequest other = (GetCampaignVersionRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignVersionResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignVersionResult.java
index c34d90c50e..59d0a539d9 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignVersionResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignVersionResult.java
@@ -19,79 +19,35 @@
 
 public class GetCampaignVersionResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the campaignResponse property for this object.
+     * Campaign definition
      */
     private CampaignResponse campaignResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Campaign definition
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetCampaignVersionResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the campaignResponse property for this object.
-     *
-     * @return The value of the campaignResponse property for this object.
+     * @return Campaign definition
      */
     public CampaignResponse getCampaignResponse() {
         return campaignResponse;
     }
 
     /**
-     * Sets the value of campaignResponse
+     * Campaign definition
      *
-     * @param campaignResponse The new value for the campaignResponse property
-     *            for this object.
+     * @param campaignResponse Campaign definition
      */
     public void setCampaignResponse(CampaignResponse campaignResponse) {
         this.campaignResponse = campaignResponse;
     }
 
     /**
-     * Sets the value of the campaignResponse property for this object.
+     * Campaign definition
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param campaignResponse The new value for the campaignResponse property
-     *            for this object.
+     * @param campaignResponse Campaign definition
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public GetCampaignVersionResult withCampaignResponse(CampaignResponse campaignRe
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getCampaignResponse() != null)
             sb.append("CampaignResponse: " + getCampaignResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getCampaignResponse() == null) ? 0 : getCampaignResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         GetCampaignVersionResult other = (GetCampaignVersionResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getCampaignResponse() == null ^ this.getCampaignResponse() == null)
             return false;
         if (other.getCampaignResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignVersionsRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignVersionsRequest.java
index 692f1ca66a..0a244333b9 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignVersionsRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignVersionsRequest.java
@@ -23,11 +23,6 @@
  * Returns information about your campaign versions.
  */
 public class GetCampaignVersionsRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
@@ -39,48 +34,16 @@
     private String campaignId;
 
     /**
-     * The new value for the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      */
     private String pageSize;
 
     /**
-     * The new value for the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      */
     private String token;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetCampaignVersionsRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -152,30 +115,32 @@ public GetCampaignVersionsRequest withCampaignId(String campaignId) {
     }
 
     /**
-     * Returns the value of the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      *
-     * @return The value of the pageSize property for this object.
+     * @return The number of entries you want on each page in the response.
      */
     public String getPageSize() {
         return pageSize;
     }
 
     /**
-     * Sets the value of pageSize
+     * The number of entries you want on each page in the response.
      *
-     * @param pageSize The new value for the pageSize property for this object.
+     * @param pageSize The number of entries you want on each page in the
+     *            response.
      */
     public void setPageSize(String pageSize) {
         this.pageSize = pageSize;
     }
 
     /**
-     * Sets the value of the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param pageSize The new value for the pageSize property for this object.
+     * @param pageSize The number of entries you want on each page in the
+     *            response.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -185,30 +150,36 @@ public GetCampaignVersionsRequest withPageSize(String pageSize) {
     }
 
     /**
-     * Returns the value of the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      *
-     * @return The value of the token property for this object.
+     * @return The NextToken string returned on a previous page that you use to
+     *         get the next page of results in a paginated response.
      */
     public String getToken() {
         return token;
     }
 
     /**
-     * Sets the value of token
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      *
-     * @param token The new value for the token property for this object.
+     * @param token The NextToken string returned on a previous page that you
+     *            use to get the next page of results in a paginated response.
      */
     public void setToken(String token) {
         this.token = token;
     }
 
     /**
-     * Sets the value of the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param token The new value for the token property for this object.
+     * @param token The NextToken string returned on a previous page that you
+     *            use to get the next page of results in a paginated response.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -228,8 +199,6 @@ public GetCampaignVersionsRequest withToken(String token) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getCampaignId() != null)
@@ -247,7 +216,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getCampaignId() == null) ? 0 : getCampaignId().hashCode());
@@ -267,10 +235,6 @@ public boolean equals(Object obj) {
             return false;
         GetCampaignVersionsRequest other = (GetCampaignVersionsRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignVersionsResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignVersionsResult.java
index edebef2a9a..2741028b76 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignVersionsResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignVersionsResult.java
@@ -19,79 +19,35 @@
 
 public class GetCampaignVersionsResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the campaignsResponse property for this object.
+     * List of available campaigns.
      */
     private CampaignsResponse campaignsResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * List of available campaigns.
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetCampaignVersionsResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the campaignsResponse property for this object.
-     *
-     * @return The value of the campaignsResponse property for this object.
+     * @return List of available campaigns.
      */
     public CampaignsResponse getCampaignsResponse() {
         return campaignsResponse;
     }
 
     /**
-     * Sets the value of campaignsResponse
+     * List of available campaigns.
      *
-     * @param campaignsResponse The new value for the campaignsResponse property
-     *            for this object.
+     * @param campaignsResponse List of available campaigns.
      */
     public void setCampaignsResponse(CampaignsResponse campaignsResponse) {
         this.campaignsResponse = campaignsResponse;
     }
 
     /**
-     * Sets the value of the campaignsResponse property for this object.
+     * List of available campaigns.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param campaignsResponse The new value for the campaignsResponse property
-     *            for this object.
+     * @param campaignsResponse List of available campaigns.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public GetCampaignVersionsResult withCampaignsResponse(CampaignsResponse campaig
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getCampaignsResponse() != null)
             sb.append("CampaignsResponse: " + getCampaignsResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getCampaignsResponse() == null) ? 0 : getCampaignsResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         GetCampaignVersionsResult other = (GetCampaignVersionsResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getCampaignsResponse() == null ^ this.getCampaignsResponse() == null)
             return false;
         if (other.getCampaignsResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignsRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignsRequest.java
index 6bcd82ca47..579b3fc24c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignsRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignsRequest.java
@@ -23,59 +23,22 @@
  * Returns information about your campaigns.
  */
 public class GetCampaignsRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
     private String applicationId;
 
     /**
-     * The new value for the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      */
     private String pageSize;
 
     /**
-     * The new value for the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      */
     private String token;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetCampaignsRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -112,30 +75,32 @@ public GetCampaignsRequest withApplicationId(String applicationId) {
     }
 
     /**
-     * Returns the value of the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      *
-     * @return The value of the pageSize property for this object.
+     * @return The number of entries you want on each page in the response.
      */
     public String getPageSize() {
         return pageSize;
     }
 
     /**
-     * Sets the value of pageSize
+     * The number of entries you want on each page in the response.
      *
-     * @param pageSize The new value for the pageSize property for this object.
+     * @param pageSize The number of entries you want on each page in the
+     *            response.
      */
     public void setPageSize(String pageSize) {
         this.pageSize = pageSize;
     }
 
     /**
-     * Sets the value of the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param pageSize The new value for the pageSize property for this object.
+     * @param pageSize The number of entries you want on each page in the
+     *            response.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -145,30 +110,36 @@ public GetCampaignsRequest withPageSize(String pageSize) {
     }
 
     /**
-     * Returns the value of the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      *
-     * @return The value of the token property for this object.
+     * @return The NextToken string returned on a previous page that you use to
+     *         get the next page of results in a paginated response.
      */
     public String getToken() {
         return token;
     }
 
     /**
-     * Sets the value of token
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      *
-     * @param token The new value for the token property for this object.
+     * @param token The NextToken string returned on a previous page that you
+     *            use to get the next page of results in a paginated response.
      */
     public void setToken(String token) {
         this.token = token;
     }
 
     /**
-     * Sets the value of the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param token The new value for the token property for this object.
+     * @param token The NextToken string returned on a previous page that you
+     *            use to get the next page of results in a paginated response.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -188,8 +159,6 @@ public GetCampaignsRequest withToken(String token) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getPageSize() != null)
@@ -205,7 +174,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getPageSize() == null) ? 0 : getPageSize().hashCode());
@@ -224,10 +192,6 @@ public boolean equals(Object obj) {
             return false;
         GetCampaignsRequest other = (GetCampaignsRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignsResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignsResult.java
index 0e4f7702e1..35720d8b1d 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignsResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetCampaignsResult.java
@@ -19,79 +19,35 @@
 
 public class GetCampaignsResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the campaignsResponse property for this object.
+     * List of available campaigns.
      */
     private CampaignsResponse campaignsResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * List of available campaigns.
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetCampaignsResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the campaignsResponse property for this object.
-     *
-     * @return The value of the campaignsResponse property for this object.
+     * @return List of available campaigns.
      */
     public CampaignsResponse getCampaignsResponse() {
         return campaignsResponse;
     }
 
     /**
-     * Sets the value of campaignsResponse
+     * List of available campaigns.
      *
-     * @param campaignsResponse The new value for the campaignsResponse property
-     *            for this object.
+     * @param campaignsResponse List of available campaigns.
      */
     public void setCampaignsResponse(CampaignsResponse campaignsResponse) {
         this.campaignsResponse = campaignsResponse;
     }
 
     /**
-     * Sets the value of the campaignsResponse property for this object.
+     * List of available campaigns.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param campaignsResponse The new value for the campaignsResponse property
-     *            for this object.
+     * @param campaignsResponse List of available campaigns.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public GetCampaignsResult withCampaignsResponse(CampaignsResponse campaignsRespo
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getCampaignsResponse() != null)
             sb.append("CampaignsResponse: " + getCampaignsResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getCampaignsResponse() == null) ? 0 : getCampaignsResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         GetCampaignsResult other = (GetCampaignsResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getCampaignsResponse() == null ^ this.getCampaignsResponse() == null)
             return false;
         if (other.getCampaignsResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEmailChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEmailChannelRequest.java
new file mode 100644
index 0000000000..60eccadaef
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEmailChannelRequest.java
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Get an email channel
+ */
+public class GetEmailChannelRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetEmailChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetEmailChannelRequest == false)
+            return false;
+        GetEmailChannelRequest other = (GetEmailChannelRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEmailChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEmailChannelResult.java
new file mode 100644
index 0000000000..b1c6621eb7
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEmailChannelResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class GetEmailChannelResult implements Serializable {
+    /**
+     * Email Channel Response.
+     */
+    private EmailChannelResponse emailChannelResponse;
+
+    /**
+     * Email Channel Response.
+     *
+     * @return Email Channel Response.
+     */
+    public EmailChannelResponse getEmailChannelResponse() {
+        return emailChannelResponse;
+    }
+
+    /**
+     * Email Channel Response.
+     *
+     * @param emailChannelResponse Email Channel Response.
+     */
+    public void setEmailChannelResponse(EmailChannelResponse emailChannelResponse) {
+        this.emailChannelResponse = emailChannelResponse;
+    }
+
+    /**
+     * Email Channel Response.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param emailChannelResponse Email Channel Response.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetEmailChannelResult withEmailChannelResponse(EmailChannelResponse emailChannelResponse) {
+        this.emailChannelResponse = emailChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getEmailChannelResponse() != null)
+            sb.append("EmailChannelResponse: " + getEmailChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getEmailChannelResponse() == null) ? 0 : getEmailChannelResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetEmailChannelResult == false)
+            return false;
+        GetEmailChannelResult other = (GetEmailChannelResult) obj;
+
+        if (other.getEmailChannelResponse() == null ^ this.getEmailChannelResponse() == null)
+            return false;
+        if (other.getEmailChannelResponse() != null
+                && other.getEmailChannelResponse().equals(this.getEmailChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEndpointRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEndpointRequest.java
index 3510276b33..e7de7dda63 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEndpointRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEndpointRequest.java
@@ -23,11 +23,6 @@
  * Returns information about an endpoint.
  */
 public class GetEndpointRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
@@ -38,39 +33,6 @@
      */
     private String endpointId;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetEndpointRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -152,8 +114,6 @@ public GetEndpointRequest withEndpointId(String endpointId) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getEndpointId() != null)
@@ -167,7 +127,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getEndpointId() == null) ? 0 : getEndpointId().hashCode());
@@ -185,10 +144,6 @@ public boolean equals(Object obj) {
             return false;
         GetEndpointRequest other = (GetEndpointRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEndpointResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEndpointResult.java
index a28a53a531..3adf3aac8c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEndpointResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEndpointResult.java
@@ -19,79 +19,35 @@
 
 public class GetEndpointResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the endpointResponse property for this object.
+     * Endpoint response
      */
     private EndpointResponse endpointResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Endpoint response
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetEndpointResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the endpointResponse property for this object.
-     *
-     * @return The value of the endpointResponse property for this object.
+     * @return Endpoint response
      */
     public EndpointResponse getEndpointResponse() {
         return endpointResponse;
     }
 
     /**
-     * Sets the value of endpointResponse
+     * Endpoint response
      *
-     * @param endpointResponse The new value for the endpointResponse property
-     *            for this object.
+     * @param endpointResponse Endpoint response
      */
     public void setEndpointResponse(EndpointResponse endpointResponse) {
         this.endpointResponse = endpointResponse;
     }
 
     /**
-     * Sets the value of the endpointResponse property for this object.
+     * Endpoint response
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param endpointResponse The new value for the endpointResponse property
-     *            for this object.
+     * @param endpointResponse Endpoint response
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public GetEndpointResult withEndpointResponse(EndpointResponse endpointResponse)
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getEndpointResponse() != null)
             sb.append("EndpointResponse: " + getEndpointResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getEndpointResponse() == null) ? 0 : getEndpointResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         GetEndpointResult other = (GetEndpointResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getEndpointResponse() == null ^ this.getEndpointResponse() == null)
             return false;
         if (other.getEndpointResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEventStreamRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEventStreamRequest.java
new file mode 100644
index 0000000000..e3cd8288f2
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEventStreamRequest.java
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Returns the event stream for an app.
+ */
+public class GetEventStreamRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetEventStreamRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetEventStreamRequest == false)
+            return false;
+        GetEventStreamRequest other = (GetEventStreamRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEventStreamResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEventStreamResult.java
new file mode 100644
index 0000000000..29247c3f60
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetEventStreamResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class GetEventStreamResult implements Serializable {
+    /**
+     * Model for an event publishing subscription export.
+     */
+    private EventStream eventStream;
+
+    /**
+     * Model for an event publishing subscription export.
+     *
+     * @return Model for an event publishing subscription export.
+     */
+    public EventStream getEventStream() {
+        return eventStream;
+    }
+
+    /**
+     * Model for an event publishing subscription export.
+     *
+     * @param eventStream Model for an event publishing subscription export.
+     */
+    public void setEventStream(EventStream eventStream) {
+        this.eventStream = eventStream;
+    }
+
+    /**
+     * Model for an event publishing subscription export.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param eventStream Model for an event publishing subscription export.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetEventStreamResult withEventStream(EventStream eventStream) {
+        this.eventStream = eventStream;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getEventStream() != null)
+            sb.append("EventStream: " + getEventStream());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getEventStream() == null) ? 0 : getEventStream().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetEventStreamResult == false)
+            return false;
+        GetEventStreamResult other = (GetEventStreamResult) obj;
+
+        if (other.getEventStream() == null ^ this.getEventStream() == null)
+            return false;
+        if (other.getEventStream() != null
+                && other.getEventStream().equals(this.getEventStream()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetGcmChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetGcmChannelRequest.java
index 4a5b345abb..32d6c12e7d 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetGcmChannelRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetGcmChannelRequest.java
@@ -23,49 +23,11 @@
  * Returns information about the GCM channel for an app.
  */
 public class GetGcmChannelRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
     private String applicationId;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetGcmChannelRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -112,8 +74,6 @@ public GetGcmChannelRequest withApplicationId(String applicationId) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId());
         sb.append("}");
@@ -125,7 +85,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         return hashCode;
@@ -142,10 +101,6 @@ public boolean equals(Object obj) {
             return false;
         GetGcmChannelRequest other = (GetGcmChannelRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetGcmChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetGcmChannelResult.java
index a6bb5a0979..3a0f50e85a 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetGcmChannelResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetGcmChannelResult.java
@@ -19,79 +19,35 @@
 
 public class GetGcmChannelResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the gCMChannelResponse property for this object.
+     * Google Cloud Messaging channel definition
      */
     private GCMChannelResponse gCMChannelResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Google Cloud Messaging channel definition
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetGcmChannelResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the gCMChannelResponse property for this object.
-     *
-     * @return The value of the gCMChannelResponse property for this object.
+     * @return Google Cloud Messaging channel definition
      */
     public GCMChannelResponse getGCMChannelResponse() {
         return gCMChannelResponse;
     }
 
     /**
-     * Sets the value of gCMChannelResponse
+     * Google Cloud Messaging channel definition
      *
-     * @param gCMChannelResponse The new value for the gCMChannelResponse
-     *            property for this object.
+     * @param gCMChannelResponse Google Cloud Messaging channel definition
      */
     public void setGCMChannelResponse(GCMChannelResponse gCMChannelResponse) {
         this.gCMChannelResponse = gCMChannelResponse;
     }
 
     /**
-     * Sets the value of the gCMChannelResponse property for this object.
+     * Google Cloud Messaging channel definition
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param gCMChannelResponse The new value for the gCMChannelResponse
-     *            property for this object.
+     * @param gCMChannelResponse Google Cloud Messaging channel definition
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public GetGcmChannelResult withGCMChannelResponse(GCMChannelResponse gCMChannelR
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getGCMChannelResponse() != null)
             sb.append("GCMChannelResponse: " + getGCMChannelResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getGCMChannelResponse() == null) ? 0 : getGCMChannelResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         GetGcmChannelResult other = (GetGcmChannelResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getGCMChannelResponse() == null ^ this.getGCMChannelResponse() == null)
             return false;
         if (other.getGCMChannelResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetImportJobRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetImportJobRequest.java
index 2190ca0f16..dadf7480eb 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetImportJobRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetImportJobRequest.java
@@ -23,11 +23,6 @@
  * Returns information about an import job.
  */
 public class GetImportJobRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
@@ -38,39 +33,6 @@
      */
     private String jobId;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetImportJobRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -150,8 +112,6 @@ public GetImportJobRequest withJobId(String jobId) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getJobId() != null)
@@ -165,7 +125,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getJobId() == null) ? 0 : getJobId().hashCode());
@@ -183,10 +142,6 @@ public boolean equals(Object obj) {
             return false;
         GetImportJobRequest other = (GetImportJobRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetImportJobResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetImportJobResult.java
index 3557c08b79..b20cbc7c11 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetImportJobResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetImportJobResult.java
@@ -18,53 +18,11 @@
 import java.io.Serializable;
 
 public class GetImportJobResult implements Serializable {
-    /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
     /**
      * The new value for the importJobResponse property for this object.
      */
     private ImportJobResponse importJobResponse;
 
-    /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetImportJobResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
     /**
      * Returns the value of the importJobResponse property for this object.
      *
@@ -111,8 +69,6 @@ public GetImportJobResult withImportJobResponse(ImportJobResponse importJobRespo
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getImportJobResponse() != null)
             sb.append("ImportJobResponse: " + getImportJobResponse());
         sb.append("}");
@@ -124,10 +80,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getImportJobResponse() == null) ? 0 : getImportJobResponse().hashCode());
         return hashCode;
@@ -144,12 +96,6 @@ public boolean equals(Object obj) {
             return false;
         GetImportJobResult other = (GetImportJobResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getImportJobResponse() == null ^ this.getImportJobResponse() == null)
             return false;
         if (other.getImportJobResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetImportJobsRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetImportJobsRequest.java
index fac9cb0e52..647a6448e0 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetImportJobsRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetImportJobsRequest.java
@@ -23,59 +23,22 @@
  * Returns information about your import jobs.
  */
 public class GetImportJobsRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
     private String applicationId;
 
     /**
-     * The new value for the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      */
     private String pageSize;
 
     /**
-     * The new value for the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      */
     private String token;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetImportJobsRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -112,30 +75,32 @@ public GetImportJobsRequest withApplicationId(String applicationId) {
     }
 
     /**
-     * Returns the value of the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      *
-     * @return The value of the pageSize property for this object.
+     * @return The number of entries you want on each page in the response.
      */
     public String getPageSize() {
         return pageSize;
     }
 
     /**
-     * Sets the value of pageSize
+     * The number of entries you want on each page in the response.
      *
-     * @param pageSize The new value for the pageSize property for this object.
+     * @param pageSize The number of entries you want on each page in the
+     *            response.
      */
     public void setPageSize(String pageSize) {
         this.pageSize = pageSize;
     }
 
     /**
-     * Sets the value of the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param pageSize The new value for the pageSize property for this object.
+     * @param pageSize The number of entries you want on each page in the
+     *            response.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -145,30 +110,36 @@ public GetImportJobsRequest withPageSize(String pageSize) {
     }
 
     /**
-     * Returns the value of the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      *
-     * @return The value of the token property for this object.
+     * @return The NextToken string returned on a previous page that you use to
+     *         get the next page of results in a paginated response.
      */
     public String getToken() {
         return token;
     }
 
     /**
-     * Sets the value of token
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      *
-     * @param token The new value for the token property for this object.
+     * @param token The NextToken string returned on a previous page that you
+     *            use to get the next page of results in a paginated response.
      */
     public void setToken(String token) {
         this.token = token;
     }
 
     /**
-     * Sets the value of the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param token The new value for the token property for this object.
+     * @param token The NextToken string returned on a previous page that you
+     *            use to get the next page of results in a paginated response.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -188,8 +159,6 @@ public GetImportJobsRequest withToken(String token) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getPageSize() != null)
@@ -205,7 +174,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getPageSize() == null) ? 0 : getPageSize().hashCode());
@@ -224,10 +192,6 @@ public boolean equals(Object obj) {
             return false;
         GetImportJobsRequest other = (GetImportJobsRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetImportJobsResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetImportJobsResult.java
index 2c62f2e6e0..6fd60a362e 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetImportJobsResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetImportJobsResult.java
@@ -19,79 +19,35 @@
 
 public class GetImportJobsResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the importJobsResponse property for this object.
+     * Import job list.
      */
     private ImportJobsResponse importJobsResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Import job list.
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetImportJobsResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the importJobsResponse property for this object.
-     *
-     * @return The value of the importJobsResponse property for this object.
+     * @return Import job list.
      */
     public ImportJobsResponse getImportJobsResponse() {
         return importJobsResponse;
     }
 
     /**
-     * Sets the value of importJobsResponse
+     * Import job list.
      *
-     * @param importJobsResponse The new value for the importJobsResponse
-     *            property for this object.
+     * @param importJobsResponse Import job list.
      */
     public void setImportJobsResponse(ImportJobsResponse importJobsResponse) {
         this.importJobsResponse = importJobsResponse;
     }
 
     /**
-     * Sets the value of the importJobsResponse property for this object.
+     * Import job list.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param importJobsResponse The new value for the importJobsResponse
-     *            property for this object.
+     * @param importJobsResponse Import job list.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public GetImportJobsResult withImportJobsResponse(ImportJobsResponse importJobsR
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getImportJobsResponse() != null)
             sb.append("ImportJobsResponse: " + getImportJobsResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getImportJobsResponse() == null) ? 0 : getImportJobsResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         GetImportJobsResult other = (GetImportJobsResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getImportJobsResponse() == null ^ this.getImportJobsResponse() == null)
             return false;
         if (other.getImportJobsResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentImportJobsRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentImportJobsRequest.java
index fb4eae9fef..15ffd360b4 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentImportJobsRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentImportJobsRequest.java
@@ -23,18 +23,13 @@
  * Returns a list of import jobs for a specific segment.
  */
 public class GetSegmentImportJobsRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
     private String applicationId;
 
     /**
-     * The new value for the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      */
     private String pageSize;
 
@@ -44,43 +39,11 @@
     private String segmentId;
 
     /**
-     * The new value for the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      */
     private String token;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetSegmentImportJobsRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -117,30 +80,32 @@ public GetSegmentImportJobsRequest withApplicationId(String applicationId) {
     }
 
     /**
-     * Returns the value of the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      *
-     * @return The value of the pageSize property for this object.
+     * @return The number of entries you want on each page in the response.
      */
     public String getPageSize() {
         return pageSize;
     }
 
     /**
-     * Sets the value of pageSize
+     * The number of entries you want on each page in the response.
      *
-     * @param pageSize The new value for the pageSize property for this object.
+     * @param pageSize The number of entries you want on each page in the
+     *            response.
      */
     public void setPageSize(String pageSize) {
         this.pageSize = pageSize;
     }
 
     /**
-     * Sets the value of the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param pageSize The new value for the pageSize property for this object.
+     * @param pageSize The number of entries you want on each page in the
+     *            response.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -185,30 +150,36 @@ public GetSegmentImportJobsRequest withSegmentId(String segmentId) {
     }
 
     /**
-     * Returns the value of the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      *
-     * @return The value of the token property for this object.
+     * @return The NextToken string returned on a previous page that you use to
+     *         get the next page of results in a paginated response.
      */
     public String getToken() {
         return token;
     }
 
     /**
-     * Sets the value of token
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      *
-     * @param token The new value for the token property for this object.
+     * @param token The NextToken string returned on a previous page that you
+     *            use to get the next page of results in a paginated response.
      */
     public void setToken(String token) {
         this.token = token;
     }
 
     /**
-     * Sets the value of the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param token The new value for the token property for this object.
+     * @param token The NextToken string returned on a previous page that you
+     *            use to get the next page of results in a paginated response.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -228,8 +199,6 @@ public GetSegmentImportJobsRequest withToken(String token) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getPageSize() != null)
@@ -247,7 +216,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getPageSize() == null) ? 0 : getPageSize().hashCode());
@@ -267,10 +235,6 @@ public boolean equals(Object obj) {
             return false;
         GetSegmentImportJobsRequest other = (GetSegmentImportJobsRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentImportJobsResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentImportJobsResult.java
index d14e42343b..b6df7fb6c1 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentImportJobsResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentImportJobsResult.java
@@ -19,79 +19,35 @@
 
 public class GetSegmentImportJobsResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the importJobsResponse property for this object.
+     * Import job list.
      */
     private ImportJobsResponse importJobsResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Import job list.
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetSegmentImportJobsResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the importJobsResponse property for this object.
-     *
-     * @return The value of the importJobsResponse property for this object.
+     * @return Import job list.
      */
     public ImportJobsResponse getImportJobsResponse() {
         return importJobsResponse;
     }
 
     /**
-     * Sets the value of importJobsResponse
+     * Import job list.
      *
-     * @param importJobsResponse The new value for the importJobsResponse
-     *            property for this object.
+     * @param importJobsResponse Import job list.
      */
     public void setImportJobsResponse(ImportJobsResponse importJobsResponse) {
         this.importJobsResponse = importJobsResponse;
     }
 
     /**
-     * Sets the value of the importJobsResponse property for this object.
+     * Import job list.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param importJobsResponse The new value for the importJobsResponse
-     *            property for this object.
+     * @param importJobsResponse Import job list.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public GetSegmentImportJobsResult withImportJobsResponse(ImportJobsResponse impo
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getImportJobsResponse() != null)
             sb.append("ImportJobsResponse: " + getImportJobsResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getImportJobsResponse() == null) ? 0 : getImportJobsResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         GetSegmentImportJobsResult other = (GetSegmentImportJobsResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getImportJobsResponse() == null ^ this.getImportJobsResponse() == null)
             return false;
         if (other.getImportJobsResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentRequest.java
index d48369d287..c7a80cb467 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentRequest.java
@@ -23,11 +23,6 @@
  * Returns information about a segment.
  */
 public class GetSegmentRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
@@ -38,39 +33,6 @@
      */
     private String segmentId;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetSegmentRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -152,8 +114,6 @@ public GetSegmentRequest withSegmentId(String segmentId) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getSegmentId() != null)
@@ -167,7 +127,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getSegmentId() == null) ? 0 : getSegmentId().hashCode());
@@ -185,10 +144,6 @@ public boolean equals(Object obj) {
             return false;
         GetSegmentRequest other = (GetSegmentRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentResult.java
index 5dff88ba24..886f73825d 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentResult.java
@@ -19,79 +19,35 @@
 
 public class GetSegmentResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the segmentResponse property for this object.
+     * Segment definition.
      */
     private SegmentResponse segmentResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Segment definition.
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetSegmentResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the segmentResponse property for this object.
-     *
-     * @return The value of the segmentResponse property for this object.
+     * @return Segment definition.
      */
     public SegmentResponse getSegmentResponse() {
         return segmentResponse;
     }
 
     /**
-     * Sets the value of segmentResponse
+     * Segment definition.
      *
-     * @param segmentResponse The new value for the segmentResponse property for
-     *            this object.
+     * @param segmentResponse Segment definition.
      */
     public void setSegmentResponse(SegmentResponse segmentResponse) {
         this.segmentResponse = segmentResponse;
     }
 
     /**
-     * Sets the value of the segmentResponse property for this object.
+     * Segment definition.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param segmentResponse The new value for the segmentResponse property for
-     *            this object.
+     * @param segmentResponse Segment definition.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public GetSegmentResult withSegmentResponse(SegmentResponse segmentResponse) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getSegmentResponse() != null)
             sb.append("SegmentResponse: " + getSegmentResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getSegmentResponse() == null) ? 0 : getSegmentResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         GetSegmentResult other = (GetSegmentResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getSegmentResponse() == null ^ this.getSegmentResponse() == null)
             return false;
         if (other.getSegmentResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentVersionRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentVersionRequest.java
index c13b409d0e..581e3d8738 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentVersionRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentVersionRequest.java
@@ -23,11 +23,6 @@
  * Returns information about a segment version.
  */
 public class GetSegmentVersionRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
@@ -43,39 +38,6 @@
      */
     private String version;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetSegmentVersionRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -190,8 +152,6 @@ public GetSegmentVersionRequest withVersion(String version) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getSegmentId() != null)
@@ -207,7 +167,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getSegmentId() == null) ? 0 : getSegmentId().hashCode());
@@ -226,10 +185,6 @@ public boolean equals(Object obj) {
             return false;
         GetSegmentVersionRequest other = (GetSegmentVersionRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentVersionResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentVersionResult.java
index fa39435509..1341ef8a0b 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentVersionResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentVersionResult.java
@@ -19,79 +19,35 @@
 
 public class GetSegmentVersionResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the segmentResponse property for this object.
+     * Segment definition.
      */
     private SegmentResponse segmentResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Segment definition.
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetSegmentVersionResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the segmentResponse property for this object.
-     *
-     * @return The value of the segmentResponse property for this object.
+     * @return Segment definition.
      */
     public SegmentResponse getSegmentResponse() {
         return segmentResponse;
     }
 
     /**
-     * Sets the value of segmentResponse
+     * Segment definition.
      *
-     * @param segmentResponse The new value for the segmentResponse property for
-     *            this object.
+     * @param segmentResponse Segment definition.
      */
     public void setSegmentResponse(SegmentResponse segmentResponse) {
         this.segmentResponse = segmentResponse;
     }
 
     /**
-     * Sets the value of the segmentResponse property for this object.
+     * Segment definition.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param segmentResponse The new value for the segmentResponse property for
-     *            this object.
+     * @param segmentResponse Segment definition.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public GetSegmentVersionResult withSegmentResponse(SegmentResponse segmentRespon
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getSegmentResponse() != null)
             sb.append("SegmentResponse: " + getSegmentResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getSegmentResponse() == null) ? 0 : getSegmentResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         GetSegmentVersionResult other = (GetSegmentVersionResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getSegmentResponse() == null ^ this.getSegmentResponse() == null)
             return false;
         if (other.getSegmentResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentVersionsRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentVersionsRequest.java
index 278e11ae24..8fb75b9a62 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentVersionsRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentVersionsRequest.java
@@ -23,18 +23,13 @@
  * Returns information about your segment versions.
  */
 public class GetSegmentVersionsRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
     private String applicationId;
 
     /**
-     * The new value for the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      */
     private String pageSize;
 
@@ -44,43 +39,11 @@
     private String segmentId;
 
     /**
-     * The new value for the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      */
     private String token;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetSegmentVersionsRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -117,30 +80,32 @@ public GetSegmentVersionsRequest withApplicationId(String applicationId) {
     }
 
     /**
-     * Returns the value of the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      *
-     * @return The value of the pageSize property for this object.
+     * @return The number of entries you want on each page in the response.
      */
     public String getPageSize() {
         return pageSize;
     }
 
     /**
-     * Sets the value of pageSize
+     * The number of entries you want on each page in the response.
      *
-     * @param pageSize The new value for the pageSize property for this object.
+     * @param pageSize The number of entries you want on each page in the
+     *            response.
      */
     public void setPageSize(String pageSize) {
         this.pageSize = pageSize;
     }
 
     /**
-     * Sets the value of the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param pageSize The new value for the pageSize property for this object.
+     * @param pageSize The number of entries you want on each page in the
+     *            response.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -185,30 +150,36 @@ public GetSegmentVersionsRequest withSegmentId(String segmentId) {
     }
 
     /**
-     * Returns the value of the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      *
-     * @return The value of the token property for this object.
+     * @return The NextToken string returned on a previous page that you use to
+     *         get the next page of results in a paginated response.
      */
     public String getToken() {
         return token;
     }
 
     /**
-     * Sets the value of token
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      *
-     * @param token The new value for the token property for this object.
+     * @param token The NextToken string returned on a previous page that you
+     *            use to get the next page of results in a paginated response.
      */
     public void setToken(String token) {
         this.token = token;
     }
 
     /**
-     * Sets the value of the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param token The new value for the token property for this object.
+     * @param token The NextToken string returned on a previous page that you
+     *            use to get the next page of results in a paginated response.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -228,8 +199,6 @@ public GetSegmentVersionsRequest withToken(String token) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getPageSize() != null)
@@ -247,7 +216,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getPageSize() == null) ? 0 : getPageSize().hashCode());
@@ -267,10 +235,6 @@ public boolean equals(Object obj) {
             return false;
         GetSegmentVersionsRequest other = (GetSegmentVersionsRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentVersionsResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentVersionsResult.java
index 2e0f994c97..d47af93159 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentVersionsResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentVersionsResult.java
@@ -19,79 +19,35 @@
 
 public class GetSegmentVersionsResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the segmentsResponse property for this object.
+     * Segments in your account.
      */
     private SegmentsResponse segmentsResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Segments in your account.
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetSegmentVersionsResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the segmentsResponse property for this object.
-     *
-     * @return The value of the segmentsResponse property for this object.
+     * @return Segments in your account.
      */
     public SegmentsResponse getSegmentsResponse() {
         return segmentsResponse;
     }
 
     /**
-     * Sets the value of segmentsResponse
+     * Segments in your account.
      *
-     * @param segmentsResponse The new value for the segmentsResponse property
-     *            for this object.
+     * @param segmentsResponse Segments in your account.
      */
     public void setSegmentsResponse(SegmentsResponse segmentsResponse) {
         this.segmentsResponse = segmentsResponse;
     }
 
     /**
-     * Sets the value of the segmentsResponse property for this object.
+     * Segments in your account.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param segmentsResponse The new value for the segmentsResponse property
-     *            for this object.
+     * @param segmentsResponse Segments in your account.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public GetSegmentVersionsResult withSegmentsResponse(SegmentsResponse segmentsRe
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getSegmentsResponse() != null)
             sb.append("SegmentsResponse: " + getSegmentsResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getSegmentsResponse() == null) ? 0 : getSegmentsResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         GetSegmentVersionsResult other = (GetSegmentVersionsResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getSegmentsResponse() == null ^ this.getSegmentsResponse() == null)
             return false;
         if (other.getSegmentsResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentsRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentsRequest.java
index b62089bb31..cf19a19baa 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentsRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentsRequest.java
@@ -23,59 +23,22 @@
  * Used to get information about your segments.
  */
 public class GetSegmentsRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
     private String applicationId;
 
     /**
-     * The new value for the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      */
     private String pageSize;
 
     /**
-     * The new value for the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      */
     private String token;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetSegmentsRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -112,30 +75,32 @@ public GetSegmentsRequest withApplicationId(String applicationId) {
     }
 
     /**
-     * Returns the value of the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      *
-     * @return The value of the pageSize property for this object.
+     * @return The number of entries you want on each page in the response.
      */
     public String getPageSize() {
         return pageSize;
     }
 
     /**
-     * Sets the value of pageSize
+     * The number of entries you want on each page in the response.
      *
-     * @param pageSize The new value for the pageSize property for this object.
+     * @param pageSize The number of entries you want on each page in the
+     *            response.
      */
     public void setPageSize(String pageSize) {
         this.pageSize = pageSize;
     }
 
     /**
-     * Sets the value of the pageSize property for this object.
+     * The number of entries you want on each page in the response.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param pageSize The new value for the pageSize property for this object.
+     * @param pageSize The number of entries you want on each page in the
+     *            response.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -145,30 +110,36 @@ public GetSegmentsRequest withPageSize(String pageSize) {
     }
 
     /**
-     * Returns the value of the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      *
-     * @return The value of the token property for this object.
+     * @return The NextToken string returned on a previous page that you use to
+     *         get the next page of results in a paginated response.
      */
     public String getToken() {
         return token;
     }
 
     /**
-     * Sets the value of token
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      *
-     * @param token The new value for the token property for this object.
+     * @param token The NextToken string returned on a previous page that you
+     *            use to get the next page of results in a paginated response.
      */
     public void setToken(String token) {
         this.token = token;
     }
 
     /**
-     * Sets the value of the token property for this object.
+     * The NextToken string returned on a previous page that you use to get the
+     * next page of results in a paginated response.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param token The new value for the token property for this object.
+     * @param token The NextToken string returned on a previous page that you
+     *            use to get the next page of results in a paginated response.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -188,8 +159,6 @@ public GetSegmentsRequest withToken(String token) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getPageSize() != null)
@@ -205,7 +174,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getPageSize() == null) ? 0 : getPageSize().hashCode());
@@ -224,10 +192,6 @@ public boolean equals(Object obj) {
             return false;
         GetSegmentsRequest other = (GetSegmentsRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentsResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentsResult.java
index 309df418d1..6653d6e413 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentsResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSegmentsResult.java
@@ -19,79 +19,35 @@
 
 public class GetSegmentsResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the segmentsResponse property for this object.
+     * Segments in your account.
      */
     private SegmentsResponse segmentsResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Segments in your account.
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public GetSegmentsResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the segmentsResponse property for this object.
-     *
-     * @return The value of the segmentsResponse property for this object.
+     * @return Segments in your account.
      */
     public SegmentsResponse getSegmentsResponse() {
         return segmentsResponse;
     }
 
     /**
-     * Sets the value of segmentsResponse
+     * Segments in your account.
      *
-     * @param segmentsResponse The new value for the segmentsResponse property
-     *            for this object.
+     * @param segmentsResponse Segments in your account.
      */
     public void setSegmentsResponse(SegmentsResponse segmentsResponse) {
         this.segmentsResponse = segmentsResponse;
     }
 
     /**
-     * Sets the value of the segmentsResponse property for this object.
+     * Segments in your account.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param segmentsResponse The new value for the segmentsResponse property
-     *            for this object.
+     * @param segmentsResponse Segments in your account.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public GetSegmentsResult withSegmentsResponse(SegmentsResponse segmentsResponse)
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getSegmentsResponse() != null)
             sb.append("SegmentsResponse: " + getSegmentsResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getSegmentsResponse() == null) ? 0 : getSegmentsResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         GetSegmentsResult other = (GetSegmentsResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getSegmentsResponse() == null ^ this.getSegmentsResponse() == null)
             return false;
         if (other.getSegmentsResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSmsChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSmsChannelRequest.java
new file mode 100644
index 0000000000..bf34b91fbc
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSmsChannelRequest.java
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Get an SMS channel
+ */
+public class GetSmsChannelRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetSmsChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetSmsChannelRequest == false)
+            return false;
+        GetSmsChannelRequest other = (GetSmsChannelRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSmsChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSmsChannelResult.java
new file mode 100644
index 0000000000..7c96dd5cd9
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/GetSmsChannelResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class GetSmsChannelResult implements Serializable {
+    /**
+     * SMS Channel Response.
+     */
+    private SMSChannelResponse sMSChannelResponse;
+
+    /**
+     * SMS Channel Response.
+     *
+     * @return SMS Channel Response.
+     */
+    public SMSChannelResponse getSMSChannelResponse() {
+        return sMSChannelResponse;
+    }
+
+    /**
+     * SMS Channel Response.
+     *
+     * @param sMSChannelResponse SMS Channel Response.
+     */
+    public void setSMSChannelResponse(SMSChannelResponse sMSChannelResponse) {
+        this.sMSChannelResponse = sMSChannelResponse;
+    }
+
+    /**
+     * SMS Channel Response.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param sMSChannelResponse SMS Channel Response.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetSmsChannelResult withSMSChannelResponse(SMSChannelResponse sMSChannelResponse) {
+        this.sMSChannelResponse = sMSChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getSMSChannelResponse() != null)
+            sb.append("SMSChannelResponse: " + getSMSChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getSMSChannelResponse() == null) ? 0 : getSMSChannelResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetSmsChannelResult == false)
+            return false;
+        GetSmsChannelResult other = (GetSmsChannelResult) obj;
+
+        if (other.getSMSChannelResponse() == null ^ this.getSMSChannelResponse() == null)
+            return false;
+        if (other.getSMSChannelResponse() != null
+                && other.getSMSChannelResponse().equals(this.getSMSChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ImportJobsResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ImportJobsResponse.java
index 6a706c4bd6..b7b07dc2dc 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ImportJobsResponse.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/ImportJobsResponse.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Import job list.
+ */
 public class ImportJobsResponse implements Serializable {
     /**
      * A list of import jobs for the application.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/InternalServerErrorException.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/InternalServerErrorException.java
index 8af38c4d7f..4fa4c77eca 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/InternalServerErrorException.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/InternalServerErrorException.java
@@ -18,14 +18,15 @@
 import com.amazonaws.AmazonServiceException;
 
 /**
- * 
+ * Simple message object.
  */
 public class InternalServerErrorException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
-    private String accessControlAllowOrigin;
-
-    private MessageBody messageBody;
+    /**
+     * The unique message body ID.
+     */
+    private String requestID;
 
     /**
      * Constructs a new InternalServerErrorException with the specified error
@@ -38,42 +39,20 @@ public InternalServerErrorException(String message) {
     }
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Returns the value of the messageBody property for this object.
+     * The unique message body ID.
      *
-     * @return The value of the messageBody property for this object.
+     * @return The unique message body ID.
      */
-    public MessageBody getMessageBody() {
-        return messageBody;
+    public String getRequestID() {
+        return requestID;
     }
 
     /**
-     * Sets the value of messageBody
+     * The unique message body ID.
      *
-     * @param messageBody The new value for the messageBody property for this
-     *            object.
+     * @param requestID The unique message body ID.
      */
-    public void setMessageBody(MessageBody messageBody) {
-        this.messageBody = messageBody;
+    public void setRequestID(String requestID) {
+        this.requestID = requestID;
     }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Message.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Message.java
index 3acd48dec3..cd162ddc7f 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Message.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Message.java
@@ -20,12 +20,12 @@
 public class Message implements Serializable {
     /**
      * The action that occurs if the user taps a push notification delivered by
-     * the campaign: OPEN_APP â€“ Your app launches, or it becomes the
-     * foreground app if it has been sent to the background. This is the default
-     * action. DEEP_LINK â€“ Uses deep linking features in iOS and Android to
-     * open your app and display a designated user interface within the app. URL
-     * â€“ The default mobile browser on the user's device launches and opens a
-     * web page at the URL you specify.
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
@@ -43,6 +43,12 @@
      */
     private String imageIconUrl;
 
+    /**
+     * The URL that points to the small icon image for the push notification
+     * icon, for example, the app icon.
+     */
+    private String imageSmallIconUrl;
+
     /**
      * The URL that points to an image used in the push notification.
      */
@@ -59,6 +65,12 @@
      */
     private String mediaUrl;
 
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     */
+    private String rawContent;
+
     /**
      * Indicates if the message should display on the users device. Silent
      * pushes can be used for Remote Configuration and Phone Home use cases.
@@ -78,22 +90,22 @@
 
     /**
      * The action that occurs if the user taps a push notification delivered by
-     * the campaign: OPEN_APP â€“ Your app launches, or it becomes the
-     * foreground app if it has been sent to the background. This is the default
-     * action. DEEP_LINK â€“ Uses deep linking features in iOS and Android to
-     * open your app and display a designated user interface within the app. URL
-     * â€“ The default mobile browser on the user's device launches and opens a
-     * web page at the URL you specify.
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
      *
      * @return The action that occurs if the user taps a push notification
-     *         delivered by the campaign: OPEN_APP â€“ Your app launches, or it
+     *         delivered by the campaign: OPEN_APP - Your app launches, or it
      *         becomes the foreground app if it has been sent to the background.
-     *         This is the default action. DEEP_LINK â€“ Uses deep linking
+     *         This is the default action. DEEP_LINK - Uses deep linking
      *         features in iOS and Android to open your app and display a
-     *         designated user interface within the app. URL â€“ The default
+     *         designated user interface within the app. URL - The default
      *         mobile browser on the user's device launches and opens a web page
      *         at the URL you specify.
      * @see Action
@@ -104,24 +116,24 @@ public String getAction() {
 
     /**
      * The action that occurs if the user taps a push notification delivered by
-     * the campaign: OPEN_APP â€“ Your app launches, or it becomes the
-     * foreground app if it has been sent to the background. This is the default
-     * action. DEEP_LINK â€“ Uses deep linking features in iOS and Android to
-     * open your app and display a designated user interface within the app. URL
-     * â€“ The default mobile browser on the user's device launches and opens a
-     * web page at the URL you specify.
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
      *
      * @param action The action that occurs if the user taps a push notification
-     *            delivered by the campaign: OPEN_APP â€“ Your app launches, or
-     *            it becomes the foreground app if it has been sent to the
-     *            background. This is the default action. DEEP_LINK â€“ Uses
-     *            deep linking features in iOS and Android to open your app and
-     *            display a designated user interface within the app. URL â€“
-     *            The default mobile browser on the user's device launches and
-     *            opens a web page at the URL you specify.
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify.
      * @see Action
      */
     public void setAction(String action) {
@@ -130,12 +142,12 @@ public void setAction(String action) {
 
     /**
      * The action that occurs if the user taps a push notification delivered by
-     * the campaign: OPEN_APP â€“ Your app launches, or it becomes the
-     * foreground app if it has been sent to the background. This is the default
-     * action. DEEP_LINK â€“ Uses deep linking features in iOS and Android to
-     * open your app and display a designated user interface within the app. URL
-     * â€“ The default mobile browser on the user's device launches and opens a
-     * web page at the URL you specify.
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
@@ -144,13 +156,13 @@ public void setAction(String action) {
      * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
      *
      * @param action The action that occurs if the user taps a push notification
-     *            delivered by the campaign: OPEN_APP â€“ Your app launches, or
-     *            it becomes the foreground app if it has been sent to the
-     *            background. This is the default action. DEEP_LINK â€“ Uses
-     *            deep linking features in iOS and Android to open your app and
-     *            display a designated user interface within the app. URL â€“
-     *            The default mobile browser on the user's device launches and
-     *            opens a web page at the URL you specify.
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      * @see Action
@@ -162,24 +174,24 @@ public Message withAction(String action) {
 
     /**
      * The action that occurs if the user taps a push notification delivered by
-     * the campaign: OPEN_APP â€“ Your app launches, or it becomes the
-     * foreground app if it has been sent to the background. This is the default
-     * action. DEEP_LINK â€“ Uses deep linking features in iOS and Android to
-     * open your app and display a designated user interface within the app. URL
-     * â€“ The default mobile browser on the user's device launches and opens a
-     * web page at the URL you specify.
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
      *
      * @param action The action that occurs if the user taps a push notification
-     *            delivered by the campaign: OPEN_APP â€“ Your app launches, or
-     *            it becomes the foreground app if it has been sent to the
-     *            background. This is the default action. DEEP_LINK â€“ Uses
-     *            deep linking features in iOS and Android to open your app and
-     *            display a designated user interface within the app. URL â€“
-     *            The default mobile browser on the user's device launches and
-     *            opens a web page at the URL you specify.
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify.
      * @see Action
      */
     public void setAction(Action action) {
@@ -188,12 +200,12 @@ public void setAction(Action action) {
 
     /**
      * The action that occurs if the user taps a push notification delivered by
-     * the campaign: OPEN_APP â€“ Your app launches, or it becomes the
-     * foreground app if it has been sent to the background. This is the default
-     * action. DEEP_LINK â€“ Uses deep linking features in iOS and Android to
-     * open your app and display a designated user interface within the app. URL
-     * â€“ The default mobile browser on the user's device launches and opens a
-     * web page at the URL you specify.
+     * the campaign: OPEN_APP - Your app launches, or it becomes the foreground
+     * app if it has been sent to the background. This is the default action.
+     * DEEP_LINK - Uses deep linking features in iOS and Android to open your
+     * app and display a designated user interface within the app. URL - The
+     * default mobile browser on the user's device launches and opens a web page
+     * at the URL you specify.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
@@ -202,13 +214,13 @@ public void setAction(Action action) {
      * <b>Allowed Values: </b>OPEN_APP, DEEP_LINK, URL
      *
      * @param action The action that occurs if the user taps a push notification
-     *            delivered by the campaign: OPEN_APP â€“ Your app launches, or
-     *            it becomes the foreground app if it has been sent to the
-     *            background. This is the default action. DEEP_LINK â€“ Uses
-     *            deep linking features in iOS and Android to open your app and
-     *            display a designated user interface within the app. URL â€“
-     *            The default mobile browser on the user's device launches and
-     *            opens a web page at the URL you specify.
+     *            delivered by the campaign: OPEN_APP - Your app launches, or it
+     *            becomes the foreground app if it has been sent to the
+     *            background. This is the default action. DEEP_LINK - Uses deep
+     *            linking features in iOS and Android to open your app and
+     *            display a designated user interface within the app. URL - The
+     *            default mobile browser on the user's device launches and opens
+     *            a web page at the URL you specify.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      * @see Action
@@ -290,6 +302,45 @@ public Message withImageIconUrl(String imageIconUrl) {
         return this;
     }
 
+    /**
+     * The URL that points to the small icon image for the push notification
+     * icon, for example, the app icon.
+     *
+     * @return The URL that points to the small icon image for the push
+     *         notification icon, for example, the app icon.
+     */
+    public String getImageSmallIconUrl() {
+        return imageSmallIconUrl;
+    }
+
+    /**
+     * The URL that points to the small icon image for the push notification
+     * icon, for example, the app icon.
+     *
+     * @param imageSmallIconUrl The URL that points to the small icon image for
+     *            the push notification icon, for example, the app icon.
+     */
+    public void setImageSmallIconUrl(String imageSmallIconUrl) {
+        this.imageSmallIconUrl = imageSmallIconUrl;
+    }
+
+    /**
+     * The URL that points to the small icon image for the push notification
+     * icon, for example, the app icon.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param imageSmallIconUrl The URL that points to the small icon image for
+     *            the push notification icon, for example, the app icon.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public Message withImageSmallIconUrl(String imageSmallIconUrl) {
+        this.imageSmallIconUrl = imageSmallIconUrl;
+        return this;
+    }
+
     /**
      * The URL that points to an image used in the push notification.
      *
@@ -397,6 +448,45 @@ public Message withMediaUrl(String mediaUrl) {
         return this;
     }
 
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     *
+     * @return The Raw JSON formatted string to be used as the payload. This
+     *         value overrides the message.
+     */
+    public String getRawContent() {
+        return rawContent;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     *
+     * @param rawContent The Raw JSON formatted string to be used as the
+     *            payload. This value overrides the message.
+     */
+    public void setRawContent(String rawContent) {
+        this.rawContent = rawContent;
+    }
+
+    /**
+     * The Raw JSON formatted string to be used as the payload. This value
+     * overrides the message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param rawContent The Raw JSON formatted string to be used as the
+     *            payload. This value overrides the message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public Message withRawContent(String rawContent) {
+        this.rawContent = rawContent;
+        return this;
+    }
+
     /**
      * Indicates if the message should display on the users device. Silent
      * pushes can be used for Remote Configuration and Phone Home use cases.
@@ -543,12 +633,16 @@ public String toString() {
             sb.append("Body: " + getBody() + ",");
         if (getImageIconUrl() != null)
             sb.append("ImageIconUrl: " + getImageIconUrl() + ",");
+        if (getImageSmallIconUrl() != null)
+            sb.append("ImageSmallIconUrl: " + getImageSmallIconUrl() + ",");
         if (getImageUrl() != null)
             sb.append("ImageUrl: " + getImageUrl() + ",");
         if (getJsonBody() != null)
             sb.append("JsonBody: " + getJsonBody() + ",");
         if (getMediaUrl() != null)
             sb.append("MediaUrl: " + getMediaUrl() + ",");
+        if (getRawContent() != null)
+            sb.append("RawContent: " + getRawContent() + ",");
         if (getSilentPush() != null)
             sb.append("SilentPush: " + getSilentPush() + ",");
         if (getTitle() != null)
@@ -568,9 +662,12 @@ public int hashCode() {
         hashCode = prime * hashCode + ((getBody() == null) ? 0 : getBody().hashCode());
         hashCode = prime * hashCode
                 + ((getImageIconUrl() == null) ? 0 : getImageIconUrl().hashCode());
+        hashCode = prime * hashCode
+                + ((getImageSmallIconUrl() == null) ? 0 : getImageSmallIconUrl().hashCode());
         hashCode = prime * hashCode + ((getImageUrl() == null) ? 0 : getImageUrl().hashCode());
         hashCode = prime * hashCode + ((getJsonBody() == null) ? 0 : getJsonBody().hashCode());
         hashCode = prime * hashCode + ((getMediaUrl() == null) ? 0 : getMediaUrl().hashCode());
+        hashCode = prime * hashCode + ((getRawContent() == null) ? 0 : getRawContent().hashCode());
         hashCode = prime * hashCode + ((getSilentPush() == null) ? 0 : getSilentPush().hashCode());
         hashCode = prime * hashCode + ((getTitle() == null) ? 0 : getTitle().hashCode());
         hashCode = prime * hashCode + ((getUrl() == null) ? 0 : getUrl().hashCode());
@@ -601,6 +698,11 @@ public boolean equals(Object obj) {
         if (other.getImageIconUrl() != null
                 && other.getImageIconUrl().equals(this.getImageIconUrl()) == false)
             return false;
+        if (other.getImageSmallIconUrl() == null ^ this.getImageSmallIconUrl() == null)
+            return false;
+        if (other.getImageSmallIconUrl() != null
+                && other.getImageSmallIconUrl().equals(this.getImageSmallIconUrl()) == false)
+            return false;
         if (other.getImageUrl() == null ^ this.getImageUrl() == null)
             return false;
         if (other.getImageUrl() != null && other.getImageUrl().equals(this.getImageUrl()) == false)
@@ -613,6 +715,11 @@ public boolean equals(Object obj) {
             return false;
         if (other.getMediaUrl() != null && other.getMediaUrl().equals(this.getMediaUrl()) == false)
             return false;
+        if (other.getRawContent() == null ^ this.getRawContent() == null)
+            return false;
+        if (other.getRawContent() != null
+                && other.getRawContent().equals(this.getRawContent()) == false)
+            return false;
         if (other.getSilentPush() == null ^ this.getSilentPush() == null)
             return false;
         if (other.getSilentPush() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageBody.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageBody.java
index 5c971b3818..6d2dd04cdd 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageBody.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageBody.java
@@ -17,42 +17,45 @@
 
 import java.io.Serializable;
 
+/**
+ * Simple message object.
+ */
 public class MessageBody implements Serializable {
     /**
-     * The new value for the message property for this object.
+     * The error message returned from the API.
      */
     private String message;
 
     /**
-     * The new value for the requestID property for this object.
+     * The unique message body ID.
      */
     private String requestID;
 
     /**
-     * Returns the value of the message property for this object.
+     * The error message returned from the API.
      *
-     * @return The value of the message property for this object.
+     * @return The error message returned from the API.
      */
     public String getMessage() {
         return message;
     }
 
     /**
-     * Sets the value of message
+     * The error message returned from the API.
      *
-     * @param message The new value for the message property for this object.
+     * @param message The error message returned from the API.
      */
     public void setMessage(String message) {
         this.message = message;
     }
 
     /**
-     * Sets the value of the message property for this object.
+     * The error message returned from the API.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param message The new value for the message property for this object.
+     * @param message The error message returned from the API.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -62,32 +65,30 @@ public MessageBody withMessage(String message) {
     }
 
     /**
-     * Returns the value of the requestID property for this object.
+     * The unique message body ID.
      *
-     * @return The value of the requestID property for this object.
+     * @return The unique message body ID.
      */
     public String getRequestID() {
         return requestID;
     }
 
     /**
-     * Sets the value of requestID
+     * The unique message body ID.
      *
-     * @param requestID The new value for the requestID property for this
-     *            object.
+     * @param requestID The unique message body ID.
      */
     public void setRequestID(String requestID) {
         this.requestID = requestID;
     }
 
     /**
-     * Sets the value of the requestID property for this object.
+     * The unique message body ID.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param requestID The new value for the requestID property for this
-     *            object.
+     * @param requestID The unique message body ID.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageConfiguration.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageConfiguration.java
index a2081ccf25..84ef238d12 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageConfiguration.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageConfiguration.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Message configuration for a campaign.
+ */
 public class MessageConfiguration implements Serializable {
     /**
      * The message that the campaign delivers to APNS channels. Overrides the
@@ -29,12 +32,22 @@
      */
     private Message defaultMessage;
 
+    /**
+     * The email message configuration.
+     */
+    private CampaignEmailMessage emailMessage;
+
     /**
      * The message that the campaign delivers to GCM channels. Overrides the
      * default message.
      */
     private Message gCMMessage;
 
+    /**
+     * The SMS message configuration.
+     */
+    private CampaignSmsMessage sMSMessage;
+
     /**
      * The message that the campaign delivers to APNS channels. Overrides the
      * default message.
@@ -107,6 +120,39 @@ public MessageConfiguration withDefaultMessage(Message defaultMessage) {
         return this;
     }
 
+    /**
+     * The email message configuration.
+     *
+     * @return The email message configuration.
+     */
+    public CampaignEmailMessage getEmailMessage() {
+        return emailMessage;
+    }
+
+    /**
+     * The email message configuration.
+     *
+     * @param emailMessage The email message configuration.
+     */
+    public void setEmailMessage(CampaignEmailMessage emailMessage) {
+        this.emailMessage = emailMessage;
+    }
+
+    /**
+     * The email message configuration.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param emailMessage The email message configuration.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageConfiguration withEmailMessage(CampaignEmailMessage emailMessage) {
+        this.emailMessage = emailMessage;
+        return this;
+    }
+
     /**
      * The message that the campaign delivers to GCM channels. Overrides the
      * default message.
@@ -146,6 +192,39 @@ public MessageConfiguration withGCMMessage(Message gCMMessage) {
         return this;
     }
 
+    /**
+     * The SMS message configuration.
+     *
+     * @return The SMS message configuration.
+     */
+    public CampaignSmsMessage getSMSMessage() {
+        return sMSMessage;
+    }
+
+    /**
+     * The SMS message configuration.
+     *
+     * @param sMSMessage The SMS message configuration.
+     */
+    public void setSMSMessage(CampaignSmsMessage sMSMessage) {
+        this.sMSMessage = sMSMessage;
+    }
+
+    /**
+     * The SMS message configuration.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param sMSMessage The SMS message configuration.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageConfiguration withSMSMessage(CampaignSmsMessage sMSMessage) {
+        this.sMSMessage = sMSMessage;
+        return this;
+    }
+
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -161,8 +240,12 @@ public String toString() {
             sb.append("APNSMessage: " + getAPNSMessage() + ",");
         if (getDefaultMessage() != null)
             sb.append("DefaultMessage: " + getDefaultMessage() + ",");
+        if (getEmailMessage() != null)
+            sb.append("EmailMessage: " + getEmailMessage() + ",");
         if (getGCMMessage() != null)
-            sb.append("GCMMessage: " + getGCMMessage());
+            sb.append("GCMMessage: " + getGCMMessage() + ",");
+        if (getSMSMessage() != null)
+            sb.append("SMSMessage: " + getSMSMessage());
         sb.append("}");
         return sb.toString();
     }
@@ -176,7 +259,10 @@ public int hashCode() {
                 + ((getAPNSMessage() == null) ? 0 : getAPNSMessage().hashCode());
         hashCode = prime * hashCode
                 + ((getDefaultMessage() == null) ? 0 : getDefaultMessage().hashCode());
+        hashCode = prime * hashCode
+                + ((getEmailMessage() == null) ? 0 : getEmailMessage().hashCode());
         hashCode = prime * hashCode + ((getGCMMessage() == null) ? 0 : getGCMMessage().hashCode());
+        hashCode = prime * hashCode + ((getSMSMessage() == null) ? 0 : getSMSMessage().hashCode());
         return hashCode;
     }
 
@@ -201,11 +287,21 @@ public boolean equals(Object obj) {
         if (other.getDefaultMessage() != null
                 && other.getDefaultMessage().equals(this.getDefaultMessage()) == false)
             return false;
+        if (other.getEmailMessage() == null ^ this.getEmailMessage() == null)
+            return false;
+        if (other.getEmailMessage() != null
+                && other.getEmailMessage().equals(this.getEmailMessage()) == false)
+            return false;
         if (other.getGCMMessage() == null ^ this.getGCMMessage() == null)
             return false;
         if (other.getGCMMessage() != null
                 && other.getGCMMessage().equals(this.getGCMMessage()) == false)
             return false;
+        if (other.getSMSMessage() == null ^ this.getSMSMessage() == null)
+            return false;
+        if (other.getSMSMessage() != null
+                && other.getSMSMessage().equals(this.getSMSMessage()) == false)
+            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageRequest.java
new file mode 100644
index 0000000000..b953f09e38
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageRequest.java
@@ -0,0 +1,551 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Send message request.
+ */
+public class MessageRequest implements Serializable {
+    /**
+     * A map of destination addresses, with the address as the key(Email
+     * address, phone number or push token) and the Address Configuration as the
+     * value.
+     */
+    private java.util.Map<String, AddressConfiguration> addresses;
+
+    /**
+     * The JSON payload used for campaign attributes. This payload is added to
+     * the notifications' data->pinpoint->campaign' object in iOS and flattened
+     * to pinpoint.campaign.{AttributeName} keys in Android. Email will use the
+     * attribute campaign_id to save the templates.
+     */
+    private java.util.Map<String, String> campaign;
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message.
+     * This payload is added to the push notification's 'data.pinpoint' object
+     * or added to the email/sms delivery receipt event attributes.
+     */
+    private java.util.Map<String, String> context;
+
+    /**
+     * A map of destination addresses, with the address as the key(Email
+     * address, phone number or push token) and the Address Configuration as the
+     * value.
+     */
+    private java.util.Map<String, EndpointSendConfiguration> endpoints;
+
+    /**
+     * Message configuration.
+     */
+    private DirectMessageConfiguration messageConfiguration;
+
+    /**
+     * Original request Id for which this message is delivered.
+     */
+    private String requestId;
+
+    /**
+     * A map of destination addresses, with the address as the key(Email
+     * address, phone number or push token) and the Address Configuration as the
+     * value.
+     *
+     * @return A map of destination addresses, with the address as the key(Email
+     *         address, phone number or push token) and the Address
+     *         Configuration as the value.
+     */
+    public java.util.Map<String, AddressConfiguration> getAddresses() {
+        return addresses;
+    }
+
+    /**
+     * A map of destination addresses, with the address as the key(Email
+     * address, phone number or push token) and the Address Configuration as the
+     * value.
+     *
+     * @param addresses A map of destination addresses, with the address as the
+     *            key(Email address, phone number or push token) and the Address
+     *            Configuration as the value.
+     */
+    public void setAddresses(java.util.Map<String, AddressConfiguration> addresses) {
+        this.addresses = addresses;
+    }
+
+    /**
+     * A map of destination addresses, with the address as the key(Email
+     * address, phone number or push token) and the Address Configuration as the
+     * value.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param addresses A map of destination addresses, with the address as the
+     *            key(Email address, phone number or push token) and the Address
+     *            Configuration as the value.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageRequest withAddresses(java.util.Map<String, AddressConfiguration> addresses) {
+        this.addresses = addresses;
+        return this;
+    }
+
+    /**
+     * A map of destination addresses, with the address as the key(Email
+     * address, phone number or push token) and the Address Configuration as the
+     * value.
+     * <p>
+     * The method adds a new key-value pair into Addresses parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into Addresses.
+     * @param value The corresponding value of the entry to be added into
+     *            Addresses.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageRequest addAddressesEntry(String key, AddressConfiguration value) {
+        if (null == this.addresses) {
+            this.addresses = new java.util.HashMap<String, AddressConfiguration>();
+        }
+        if (this.addresses.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.addresses.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Addresses.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public MessageRequest clearAddressesEntries() {
+        this.addresses = null;
+        return this;
+    }
+
+    /**
+     * The JSON payload used for campaign attributes. This payload is added to
+     * the notifications' data->pinpoint->campaign' object in iOS and flattened
+     * to pinpoint.campaign.{AttributeName} keys in Android. Email will use the
+     * attribute campaign_id to save the templates.
+     *
+     * @return The JSON payload used for campaign attributes. This payload is
+     *         added to the notifications' data->pinpoint->campaign' object in
+     *         iOS and flattened to pinpoint.campaign.{AttributeName} keys in
+     *         Android. Email will use the attribute campaign_id to save the
+     *         templates.
+     */
+    public java.util.Map<String, String> getCampaign() {
+        return campaign;
+    }
+
+    /**
+     * The JSON payload used for campaign attributes. This payload is added to
+     * the notifications' data->pinpoint->campaign' object in iOS and flattened
+     * to pinpoint.campaign.{AttributeName} keys in Android. Email will use the
+     * attribute campaign_id to save the templates.
+     *
+     * @param campaign The JSON payload used for campaign attributes. This
+     *            payload is added to the notifications'
+     *            data->pinpoint->campaign' object in iOS and flattened to
+     *            pinpoint.campaign.{AttributeName} keys in Android. Email will
+     *            use the attribute campaign_id to save the templates.
+     */
+    public void setCampaign(java.util.Map<String, String> campaign) {
+        this.campaign = campaign;
+    }
+
+    /**
+     * The JSON payload used for campaign attributes. This payload is added to
+     * the notifications' data->pinpoint->campaign' object in iOS and flattened
+     * to pinpoint.campaign.{AttributeName} keys in Android. Email will use the
+     * attribute campaign_id to save the templates.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param campaign The JSON payload used for campaign attributes. This
+     *            payload is added to the notifications'
+     *            data->pinpoint->campaign' object in iOS and flattened to
+     *            pinpoint.campaign.{AttributeName} keys in Android. Email will
+     *            use the attribute campaign_id to save the templates.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageRequest withCampaign(java.util.Map<String, String> campaign) {
+        this.campaign = campaign;
+        return this;
+    }
+
+    /**
+     * The JSON payload used for campaign attributes. This payload is added to
+     * the notifications' data->pinpoint->campaign' object in iOS and flattened
+     * to pinpoint.campaign.{AttributeName} keys in Android. Email will use the
+     * attribute campaign_id to save the templates.
+     * <p>
+     * The method adds a new key-value pair into Campaign parameter, and returns
+     * a reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Campaign.
+     * @param value The corresponding value of the entry to be added into
+     *            Campaign.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageRequest addCampaignEntry(String key, String value) {
+        if (null == this.campaign) {
+            this.campaign = new java.util.HashMap<String, String>();
+        }
+        if (this.campaign.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.campaign.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Campaign.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public MessageRequest clearCampaignEntries() {
+        this.campaign = null;
+        return this;
+    }
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message.
+     * This payload is added to the push notification's 'data.pinpoint' object
+     * or added to the email/sms delivery receipt event attributes.
+     *
+     * @return A map of custom attributes to attributes to be attached to the
+     *         message. This payload is added to the push notification's
+     *         'data.pinpoint' object or added to the email/sms delivery receipt
+     *         event attributes.
+     */
+    public java.util.Map<String, String> getContext() {
+        return context;
+    }
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message.
+     * This payload is added to the push notification's 'data.pinpoint' object
+     * or added to the email/sms delivery receipt event attributes.
+     *
+     * @param context A map of custom attributes to attributes to be attached to
+     *            the message. This payload is added to the push notification's
+     *            'data.pinpoint' object or added to the email/sms delivery
+     *            receipt event attributes.
+     */
+    public void setContext(java.util.Map<String, String> context) {
+        this.context = context;
+    }
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message.
+     * This payload is added to the push notification's 'data.pinpoint' object
+     * or added to the email/sms delivery receipt event attributes.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param context A map of custom attributes to attributes to be attached to
+     *            the message. This payload is added to the push notification's
+     *            'data.pinpoint' object or added to the email/sms delivery
+     *            receipt event attributes.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageRequest withContext(java.util.Map<String, String> context) {
+        this.context = context;
+        return this;
+    }
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message.
+     * This payload is added to the push notification's 'data.pinpoint' object
+     * or added to the email/sms delivery receipt event attributes.
+     * <p>
+     * The method adds a new key-value pair into Context parameter, and returns
+     * a reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Context.
+     * @param value The corresponding value of the entry to be added into
+     *            Context.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageRequest addContextEntry(String key, String value) {
+        if (null == this.context) {
+            this.context = new java.util.HashMap<String, String>();
+        }
+        if (this.context.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.context.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Context.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public MessageRequest clearContextEntries() {
+        this.context = null;
+        return this;
+    }
+
+    /**
+     * A map of destination addresses, with the address as the key(Email
+     * address, phone number or push token) and the Address Configuration as the
+     * value.
+     *
+     * @return A map of destination addresses, with the address as the key(Email
+     *         address, phone number or push token) and the Address
+     *         Configuration as the value.
+     */
+    public java.util.Map<String, EndpointSendConfiguration> getEndpoints() {
+        return endpoints;
+    }
+
+    /**
+     * A map of destination addresses, with the address as the key(Email
+     * address, phone number or push token) and the Address Configuration as the
+     * value.
+     *
+     * @param endpoints A map of destination addresses, with the address as the
+     *            key(Email address, phone number or push token) and the Address
+     *            Configuration as the value.
+     */
+    public void setEndpoints(java.util.Map<String, EndpointSendConfiguration> endpoints) {
+        this.endpoints = endpoints;
+    }
+
+    /**
+     * A map of destination addresses, with the address as the key(Email
+     * address, phone number or push token) and the Address Configuration as the
+     * value.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param endpoints A map of destination addresses, with the address as the
+     *            key(Email address, phone number or push token) and the Address
+     *            Configuration as the value.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageRequest withEndpoints(java.util.Map<String, EndpointSendConfiguration> endpoints) {
+        this.endpoints = endpoints;
+        return this;
+    }
+
+    /**
+     * A map of destination addresses, with the address as the key(Email
+     * address, phone number or push token) and the Address Configuration as the
+     * value.
+     * <p>
+     * The method adds a new key-value pair into Endpoints parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into Endpoints.
+     * @param value The corresponding value of the entry to be added into
+     *            Endpoints.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageRequest addEndpointsEntry(String key, EndpointSendConfiguration value) {
+        if (null == this.endpoints) {
+            this.endpoints = new java.util.HashMap<String, EndpointSendConfiguration>();
+        }
+        if (this.endpoints.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.endpoints.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Endpoints.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public MessageRequest clearEndpointsEntries() {
+        this.endpoints = null;
+        return this;
+    }
+
+    /**
+     * Message configuration.
+     *
+     * @return Message configuration.
+     */
+    public DirectMessageConfiguration getMessageConfiguration() {
+        return messageConfiguration;
+    }
+
+    /**
+     * Message configuration.
+     *
+     * @param messageConfiguration Message configuration.
+     */
+    public void setMessageConfiguration(DirectMessageConfiguration messageConfiguration) {
+        this.messageConfiguration = messageConfiguration;
+    }
+
+    /**
+     * Message configuration.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param messageConfiguration Message configuration.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageRequest withMessageConfiguration(DirectMessageConfiguration messageConfiguration) {
+        this.messageConfiguration = messageConfiguration;
+        return this;
+    }
+
+    /**
+     * Original request Id for which this message is delivered.
+     *
+     * @return Original request Id for which this message is delivered.
+     */
+    public String getRequestId() {
+        return requestId;
+    }
+
+    /**
+     * Original request Id for which this message is delivered.
+     *
+     * @param requestId Original request Id for which this message is delivered.
+     */
+    public void setRequestId(String requestId) {
+        this.requestId = requestId;
+    }
+
+    /**
+     * Original request Id for which this message is delivered.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param requestId Original request Id for which this message is delivered.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageRequest withRequestId(String requestId) {
+        this.requestId = requestId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAddresses() != null)
+            sb.append("Addresses: " + getAddresses() + ",");
+        if (getCampaign() != null)
+            sb.append("Campaign: " + getCampaign() + ",");
+        if (getContext() != null)
+            sb.append("Context: " + getContext() + ",");
+        if (getEndpoints() != null)
+            sb.append("Endpoints: " + getEndpoints() + ",");
+        if (getMessageConfiguration() != null)
+            sb.append("MessageConfiguration: " + getMessageConfiguration() + ",");
+        if (getRequestId() != null)
+            sb.append("RequestId: " + getRequestId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getAddresses() == null) ? 0 : getAddresses().hashCode());
+        hashCode = prime * hashCode + ((getCampaign() == null) ? 0 : getCampaign().hashCode());
+        hashCode = prime * hashCode + ((getContext() == null) ? 0 : getContext().hashCode());
+        hashCode = prime * hashCode + ((getEndpoints() == null) ? 0 : getEndpoints().hashCode());
+        hashCode = prime * hashCode
+                + ((getMessageConfiguration() == null) ? 0 : getMessageConfiguration().hashCode());
+        hashCode = prime * hashCode + ((getRequestId() == null) ? 0 : getRequestId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof MessageRequest == false)
+            return false;
+        MessageRequest other = (MessageRequest) obj;
+
+        if (other.getAddresses() == null ^ this.getAddresses() == null)
+            return false;
+        if (other.getAddresses() != null
+                && other.getAddresses().equals(this.getAddresses()) == false)
+            return false;
+        if (other.getCampaign() == null ^ this.getCampaign() == null)
+            return false;
+        if (other.getCampaign() != null && other.getCampaign().equals(this.getCampaign()) == false)
+            return false;
+        if (other.getContext() == null ^ this.getContext() == null)
+            return false;
+        if (other.getContext() != null && other.getContext().equals(this.getContext()) == false)
+            return false;
+        if (other.getEndpoints() == null ^ this.getEndpoints() == null)
+            return false;
+        if (other.getEndpoints() != null
+                && other.getEndpoints().equals(this.getEndpoints()) == false)
+            return false;
+        if (other.getMessageConfiguration() == null ^ this.getMessageConfiguration() == null)
+            return false;
+        if (other.getMessageConfiguration() != null
+                && other.getMessageConfiguration().equals(this.getMessageConfiguration()) == false)
+            return false;
+        if (other.getRequestId() == null ^ this.getRequestId() == null)
+            return false;
+        if (other.getRequestId() != null
+                && other.getRequestId().equals(this.getRequestId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageResponse.java
new file mode 100644
index 0000000000..b2acb2403a
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageResponse.java
@@ -0,0 +1,343 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Send message response.
+ */
+public class MessageResponse implements Serializable {
+    /**
+     * Application id of the message.
+     */
+    private String applicationId;
+
+    /**
+     * A map containing a multi part response for each address, with the
+     * endpointId as the key and the result as the value.
+     */
+    private java.util.Map<String, EndpointMessageResult> endpointResult;
+
+    /**
+     * Original request Id for which this message was delivered.
+     */
+    private String requestId;
+
+    /**
+     * A map containing a multi part response for each address, with the address
+     * as the key(Email address, phone number or push token) and the result as
+     * the value.
+     */
+    private java.util.Map<String, MessageResult> result;
+
+    /**
+     * Application id of the message.
+     *
+     * @return Application id of the message.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Application id of the message.
+     *
+     * @param applicationId Application id of the message.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Application id of the message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId Application id of the message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageResponse withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * A map containing a multi part response for each address, with the
+     * endpointId as the key and the result as the value.
+     *
+     * @return A map containing a multi part response for each address, with the
+     *         endpointId as the key and the result as the value.
+     */
+    public java.util.Map<String, EndpointMessageResult> getEndpointResult() {
+        return endpointResult;
+    }
+
+    /**
+     * A map containing a multi part response for each address, with the
+     * endpointId as the key and the result as the value.
+     *
+     * @param endpointResult A map containing a multi part response for each
+     *            address, with the endpointId as the key and the result as the
+     *            value.
+     */
+    public void setEndpointResult(java.util.Map<String, EndpointMessageResult> endpointResult) {
+        this.endpointResult = endpointResult;
+    }
+
+    /**
+     * A map containing a multi part response for each address, with the
+     * endpointId as the key and the result as the value.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param endpointResult A map containing a multi part response for each
+     *            address, with the endpointId as the key and the result as the
+     *            value.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageResponse withEndpointResult(
+            java.util.Map<String, EndpointMessageResult> endpointResult) {
+        this.endpointResult = endpointResult;
+        return this;
+    }
+
+    /**
+     * A map containing a multi part response for each address, with the
+     * endpointId as the key and the result as the value.
+     * <p>
+     * The method adds a new key-value pair into EndpointResult parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into EndpointResult.
+     * @param value The corresponding value of the entry to be added into
+     *            EndpointResult.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageResponse addEndpointResultEntry(String key, EndpointMessageResult value) {
+        if (null == this.endpointResult) {
+            this.endpointResult = new java.util.HashMap<String, EndpointMessageResult>();
+        }
+        if (this.endpointResult.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.endpointResult.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into EndpointResult.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public MessageResponse clearEndpointResultEntries() {
+        this.endpointResult = null;
+        return this;
+    }
+
+    /**
+     * Original request Id for which this message was delivered.
+     *
+     * @return Original request Id for which this message was delivered.
+     */
+    public String getRequestId() {
+        return requestId;
+    }
+
+    /**
+     * Original request Id for which this message was delivered.
+     *
+     * @param requestId Original request Id for which this message was
+     *            delivered.
+     */
+    public void setRequestId(String requestId) {
+        this.requestId = requestId;
+    }
+
+    /**
+     * Original request Id for which this message was delivered.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param requestId Original request Id for which this message was
+     *            delivered.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageResponse withRequestId(String requestId) {
+        this.requestId = requestId;
+        return this;
+    }
+
+    /**
+     * A map containing a multi part response for each address, with the address
+     * as the key(Email address, phone number or push token) and the result as
+     * the value.
+     *
+     * @return A map containing a multi part response for each address, with the
+     *         address as the key(Email address, phone number or push token) and
+     *         the result as the value.
+     */
+    public java.util.Map<String, MessageResult> getResult() {
+        return result;
+    }
+
+    /**
+     * A map containing a multi part response for each address, with the address
+     * as the key(Email address, phone number or push token) and the result as
+     * the value.
+     *
+     * @param result A map containing a multi part response for each address,
+     *            with the address as the key(Email address, phone number or
+     *            push token) and the result as the value.
+     */
+    public void setResult(java.util.Map<String, MessageResult> result) {
+        this.result = result;
+    }
+
+    /**
+     * A map containing a multi part response for each address, with the address
+     * as the key(Email address, phone number or push token) and the result as
+     * the value.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param result A map containing a multi part response for each address,
+     *            with the address as the key(Email address, phone number or
+     *            push token) and the result as the value.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageResponse withResult(java.util.Map<String, MessageResult> result) {
+        this.result = result;
+        return this;
+    }
+
+    /**
+     * A map containing a multi part response for each address, with the address
+     * as the key(Email address, phone number or push token) and the result as
+     * the value.
+     * <p>
+     * The method adds a new key-value pair into Result parameter, and returns a
+     * reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Result.
+     * @param value The corresponding value of the entry to be added into
+     *            Result.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageResponse addResultEntry(String key, MessageResult value) {
+        if (null == this.result) {
+            this.result = new java.util.HashMap<String, MessageResult>();
+        }
+        if (this.result.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.result.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Result.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public MessageResponse clearResultEntries() {
+        this.result = null;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getEndpointResult() != null)
+            sb.append("EndpointResult: " + getEndpointResult() + ",");
+        if (getRequestId() != null)
+            sb.append("RequestId: " + getRequestId() + ",");
+        if (getResult() != null)
+            sb.append("Result: " + getResult());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime * hashCode
+                + ((getEndpointResult() == null) ? 0 : getEndpointResult().hashCode());
+        hashCode = prime * hashCode + ((getRequestId() == null) ? 0 : getRequestId().hashCode());
+        hashCode = prime * hashCode + ((getResult() == null) ? 0 : getResult().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof MessageResponse == false)
+            return false;
+        MessageResponse other = (MessageResponse) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        if (other.getEndpointResult() == null ^ this.getEndpointResult() == null)
+            return false;
+        if (other.getEndpointResult() != null
+                && other.getEndpointResult().equals(this.getEndpointResult()) == false)
+            return false;
+        if (other.getRequestId() == null ^ this.getRequestId() == null)
+            return false;
+        if (other.getRequestId() != null
+                && other.getRequestId().equals(this.getRequestId()) == false)
+            return false;
+        if (other.getResult() == null ^ this.getResult() == null)
+            return false;
+        if (other.getResult() != null && other.getResult().equals(this.getResult()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageResult.java
new file mode 100644
index 0000000000..e454e1e3c8
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageResult.java
@@ -0,0 +1,302 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * The result from sending a message to an address.
+ */
+public class MessageResult implements Serializable {
+    /**
+     * Delivery status of message.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
+     * PERMANENT_FAILURE
+     */
+    private String deliveryStatus;
+
+    /**
+     * Downstream service status code.
+     */
+    private Integer statusCode;
+
+    /**
+     * Status message for message delivery.
+     */
+    private String statusMessage;
+
+    /**
+     * If token was updated as part of delivery. (This is GCM Specific)
+     */
+    private String updatedToken;
+
+    /**
+     * Delivery status of message.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
+     * PERMANENT_FAILURE
+     *
+     * @return Delivery status of message.
+     * @see DeliveryStatus
+     */
+    public String getDeliveryStatus() {
+        return deliveryStatus;
+    }
+
+    /**
+     * Delivery status of message.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
+     * PERMANENT_FAILURE
+     *
+     * @param deliveryStatus Delivery status of message.
+     * @see DeliveryStatus
+     */
+    public void setDeliveryStatus(String deliveryStatus) {
+        this.deliveryStatus = deliveryStatus;
+    }
+
+    /**
+     * Delivery status of message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
+     * PERMANENT_FAILURE
+     *
+     * @param deliveryStatus Delivery status of message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see DeliveryStatus
+     */
+    public MessageResult withDeliveryStatus(String deliveryStatus) {
+        this.deliveryStatus = deliveryStatus;
+        return this;
+    }
+
+    /**
+     * Delivery status of message.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
+     * PERMANENT_FAILURE
+     *
+     * @param deliveryStatus Delivery status of message.
+     * @see DeliveryStatus
+     */
+    public void setDeliveryStatus(DeliveryStatus deliveryStatus) {
+        this.deliveryStatus = deliveryStatus.toString();
+    }
+
+    /**
+     * Delivery status of message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>SUCCESSFUL, THROTTLED, TEMPORARY_FAILURE,
+     * PERMANENT_FAILURE
+     *
+     * @param deliveryStatus Delivery status of message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see DeliveryStatus
+     */
+    public MessageResult withDeliveryStatus(DeliveryStatus deliveryStatus) {
+        this.deliveryStatus = deliveryStatus.toString();
+        return this;
+    }
+
+    /**
+     * Downstream service status code.
+     *
+     * @return Downstream service status code.
+     */
+    public Integer getStatusCode() {
+        return statusCode;
+    }
+
+    /**
+     * Downstream service status code.
+     *
+     * @param statusCode Downstream service status code.
+     */
+    public void setStatusCode(Integer statusCode) {
+        this.statusCode = statusCode;
+    }
+
+    /**
+     * Downstream service status code.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param statusCode Downstream service status code.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageResult withStatusCode(Integer statusCode) {
+        this.statusCode = statusCode;
+        return this;
+    }
+
+    /**
+     * Status message for message delivery.
+     *
+     * @return Status message for message delivery.
+     */
+    public String getStatusMessage() {
+        return statusMessage;
+    }
+
+    /**
+     * Status message for message delivery.
+     *
+     * @param statusMessage Status message for message delivery.
+     */
+    public void setStatusMessage(String statusMessage) {
+        this.statusMessage = statusMessage;
+    }
+
+    /**
+     * Status message for message delivery.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param statusMessage Status message for message delivery.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageResult withStatusMessage(String statusMessage) {
+        this.statusMessage = statusMessage;
+        return this;
+    }
+
+    /**
+     * If token was updated as part of delivery. (This is GCM Specific)
+     *
+     * @return If token was updated as part of delivery. (This is GCM Specific)
+     */
+    public String getUpdatedToken() {
+        return updatedToken;
+    }
+
+    /**
+     * If token was updated as part of delivery. (This is GCM Specific)
+     *
+     * @param updatedToken If token was updated as part of delivery. (This is
+     *            GCM Specific)
+     */
+    public void setUpdatedToken(String updatedToken) {
+        this.updatedToken = updatedToken;
+    }
+
+    /**
+     * If token was updated as part of delivery. (This is GCM Specific)
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param updatedToken If token was updated as part of delivery. (This is
+     *            GCM Specific)
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MessageResult withUpdatedToken(String updatedToken) {
+        this.updatedToken = updatedToken;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getDeliveryStatus() != null)
+            sb.append("DeliveryStatus: " + getDeliveryStatus() + ",");
+        if (getStatusCode() != null)
+            sb.append("StatusCode: " + getStatusCode() + ",");
+        if (getStatusMessage() != null)
+            sb.append("StatusMessage: " + getStatusMessage() + ",");
+        if (getUpdatedToken() != null)
+            sb.append("UpdatedToken: " + getUpdatedToken());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getDeliveryStatus() == null) ? 0 : getDeliveryStatus().hashCode());
+        hashCode = prime * hashCode + ((getStatusCode() == null) ? 0 : getStatusCode().hashCode());
+        hashCode = prime * hashCode
+                + ((getStatusMessage() == null) ? 0 : getStatusMessage().hashCode());
+        hashCode = prime * hashCode
+                + ((getUpdatedToken() == null) ? 0 : getUpdatedToken().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof MessageResult == false)
+            return false;
+        MessageResult other = (MessageResult) obj;
+
+        if (other.getDeliveryStatus() == null ^ this.getDeliveryStatus() == null)
+            return false;
+        if (other.getDeliveryStatus() != null
+                && other.getDeliveryStatus().equals(this.getDeliveryStatus()) == false)
+            return false;
+        if (other.getStatusCode() == null ^ this.getStatusCode() == null)
+            return false;
+        if (other.getStatusCode() != null
+                && other.getStatusCode().equals(this.getStatusCode()) == false)
+            return false;
+        if (other.getStatusMessage() == null ^ this.getStatusMessage() == null)
+            return false;
+        if (other.getStatusMessage() != null
+                && other.getStatusMessage().equals(this.getStatusMessage()) == false)
+            return false;
+        if (other.getUpdatedToken() == null ^ this.getUpdatedToken() == null)
+            return false;
+        if (other.getUpdatedToken() != null
+                && other.getUpdatedToken().equals(this.getUpdatedToken()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageType.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageType.java
new file mode 100644
index 0000000000..36bd58f36c
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MessageType.java
@@ -0,0 +1,62 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Message Type
+ */
+public enum MessageType {
+
+    TRANSACTIONAL("TRANSACTIONAL"),
+    PROMOTIONAL("PROMOTIONAL");
+
+    private String value;
+
+    private MessageType(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, MessageType> enumMap;
+    static {
+        enumMap = new HashMap<String, MessageType>();
+        enumMap.put("TRANSACTIONAL", TRANSACTIONAL);
+        enumMap.put("PROMOTIONAL", PROMOTIONAL);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return MessageType corresponding to the value
+     */
+    public static MessageType fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MethodNotAllowedException.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MethodNotAllowedException.java
index 4fb486ea6a..0b61a2c6c3 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MethodNotAllowedException.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/MethodNotAllowedException.java
@@ -18,14 +18,15 @@
 import com.amazonaws.AmazonServiceException;
 
 /**
- * 
+ * Simple message object.
  */
 public class MethodNotAllowedException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
-    private String accessControlAllowOrigin;
-
-    private MessageBody messageBody;
+    /**
+     * The unique message body ID.
+     */
+    private String requestID;
 
     /**
      * Constructs a new MethodNotAllowedException with the specified error
@@ -38,42 +39,20 @@ public MethodNotAllowedException(String message) {
     }
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Returns the value of the messageBody property for this object.
+     * The unique message body ID.
      *
-     * @return The value of the messageBody property for this object.
+     * @return The unique message body ID.
      */
-    public MessageBody getMessageBody() {
-        return messageBody;
+    public String getRequestID() {
+        return requestID;
     }
 
     /**
-     * Sets the value of messageBody
+     * The unique message body ID.
      *
-     * @param messageBody The new value for the messageBody property for this
-     *            object.
+     * @param requestID The unique message body ID.
      */
-    public void setMessageBody(MessageBody messageBody) {
-        this.messageBody = messageBody;
+    public void setRequestID(String requestID) {
+        this.requestID = requestID;
     }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/NotFoundException.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/NotFoundException.java
index 4a5f04909e..78782d6ca9 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/NotFoundException.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/NotFoundException.java
@@ -18,14 +18,15 @@
 import com.amazonaws.AmazonServiceException;
 
 /**
- * 
+ * Simple message object.
  */
 public class NotFoundException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
-    private String accessControlAllowOrigin;
-
-    private MessageBody messageBody;
+    /**
+     * The unique message body ID.
+     */
+    private String requestID;
 
     /**
      * Constructs a new NotFoundException with the specified error message.
@@ -37,42 +38,20 @@ public NotFoundException(String message) {
     }
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Returns the value of the messageBody property for this object.
+     * The unique message body ID.
      *
-     * @return The value of the messageBody property for this object.
+     * @return The unique message body ID.
      */
-    public MessageBody getMessageBody() {
-        return messageBody;
+    public String getRequestID() {
+        return requestID;
     }
 
     /**
-     * Sets the value of messageBody
+     * The unique message body ID.
      *
-     * @param messageBody The new value for the messageBody property for this
-     *            object.
+     * @param requestID The unique message body ID.
      */
-    public void setMessageBody(MessageBody messageBody) {
-        this.messageBody = messageBody;
+    public void setRequestID(String requestID) {
+        this.requestID = requestID;
     }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PutEventStreamRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PutEventStreamRequest.java
new file mode 100644
index 0000000000..0338672c23
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PutEventStreamRequest.java
@@ -0,0 +1,158 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Use to create or update the event stream for an app.
+ */
+public class PutEventStreamRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Request to save an EventStream.
+     */
+    private WriteEventStream writeEventStream;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PutEventStreamRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Request to save an EventStream.
+     *
+     * @return Request to save an EventStream.
+     */
+    public WriteEventStream getWriteEventStream() {
+        return writeEventStream;
+    }
+
+    /**
+     * Request to save an EventStream.
+     *
+     * @param writeEventStream Request to save an EventStream.
+     */
+    public void setWriteEventStream(WriteEventStream writeEventStream) {
+        this.writeEventStream = writeEventStream;
+    }
+
+    /**
+     * Request to save an EventStream.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param writeEventStream Request to save an EventStream.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PutEventStreamRequest withWriteEventStream(WriteEventStream writeEventStream) {
+        this.writeEventStream = writeEventStream;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getWriteEventStream() != null)
+            sb.append("WriteEventStream: " + getWriteEventStream());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime * hashCode
+                + ((getWriteEventStream() == null) ? 0 : getWriteEventStream().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof PutEventStreamRequest == false)
+            return false;
+        PutEventStreamRequest other = (PutEventStreamRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        if (other.getWriteEventStream() == null ^ this.getWriteEventStream() == null)
+            return false;
+        if (other.getWriteEventStream() != null
+                && other.getWriteEventStream().equals(this.getWriteEventStream()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PutEventStreamResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PutEventStreamResult.java
new file mode 100644
index 0000000000..1cbd4ecc17
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/PutEventStreamResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class PutEventStreamResult implements Serializable {
+    /**
+     * Model for an event publishing subscription export.
+     */
+    private EventStream eventStream;
+
+    /**
+     * Model for an event publishing subscription export.
+     *
+     * @return Model for an event publishing subscription export.
+     */
+    public EventStream getEventStream() {
+        return eventStream;
+    }
+
+    /**
+     * Model for an event publishing subscription export.
+     *
+     * @param eventStream Model for an event publishing subscription export.
+     */
+    public void setEventStream(EventStream eventStream) {
+        this.eventStream = eventStream;
+    }
+
+    /**
+     * Model for an event publishing subscription export.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param eventStream Model for an event publishing subscription export.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PutEventStreamResult withEventStream(EventStream eventStream) {
+        this.eventStream = eventStream;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getEventStream() != null)
+            sb.append("EventStream: " + getEventStream());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getEventStream() == null) ? 0 : getEventStream().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof PutEventStreamResult == false)
+            return false;
+        PutEventStreamResult other = (PutEventStreamResult) obj;
+
+        if (other.getEventStream() == null ^ this.getEventStream() == null)
+            return false;
+        if (other.getEventStream() != null
+                && other.getEventStream().equals(this.getEventStream()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/QuietTime.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/QuietTime.java
index 0c30b50b96..5552b70dbc 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/QuietTime.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/QuietTime.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Quiet Time
+ */
 public class QuietTime implements Serializable {
     /**
      * The default end time for quiet time in ISO 8601 format.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/RecencyDimension.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/RecencyDimension.java
index 88af0badc0..6e11c36b0f 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/RecencyDimension.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/RecencyDimension.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Define how a segment based on recency of use.
+ */
 public class RecencyDimension implements Serializable {
     /**
      * The length of time during which users have been active or inactive with
@@ -28,10 +31,10 @@
     private String duration;
 
     /**
-     * The recency dimension type: ACTIVE â€“ Users who have used your app
-     * within the specified duration are included in the segment. INACTIVE â€“
-     * Users who have not used your app within the specified duration are
-     * included in the segment.
+     * The recency dimension type: ACTIVE - Users who have used your app within
+     * the specified duration are included in the segment. INACTIVE - Users who
+     * have not used your app within the specified duration are included in the
+     * segment.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>ACTIVE, INACTIVE
@@ -131,18 +134,18 @@ public RecencyDimension withDuration(Duration duration) {
     }
 
     /**
-     * The recency dimension type: ACTIVE â€“ Users who have used your app
-     * within the specified duration are included in the segment. INACTIVE â€“
-     * Users who have not used your app within the specified duration are
-     * included in the segment.
+     * The recency dimension type: ACTIVE - Users who have used your app within
+     * the specified duration are included in the segment. INACTIVE - Users who
+     * have not used your app within the specified duration are included in the
+     * segment.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>ACTIVE, INACTIVE
      *
-     * @return The recency dimension type: ACTIVE â€“ Users who have used your
-     *         app within the specified duration are included in the segment.
-     *         INACTIVE â€“ Users who have not used your app within the
-     *         specified duration are included in the segment.
+     * @return The recency dimension type: ACTIVE - Users who have used your app
+     *         within the specified duration are included in the segment.
+     *         INACTIVE - Users who have not used your app within the specified
+     *         duration are included in the segment.
      * @see RecencyType
      */
     public String getRecencyType() {
@@ -150,17 +153,17 @@ public String getRecencyType() {
     }
 
     /**
-     * The recency dimension type: ACTIVE â€“ Users who have used your app
-     * within the specified duration are included in the segment. INACTIVE â€“
-     * Users who have not used your app within the specified duration are
-     * included in the segment.
+     * The recency dimension type: ACTIVE - Users who have used your app within
+     * the specified duration are included in the segment. INACTIVE - Users who
+     * have not used your app within the specified duration are included in the
+     * segment.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>ACTIVE, INACTIVE
      *
-     * @param recencyType The recency dimension type: ACTIVE â€“ Users who have
+     * @param recencyType The recency dimension type: ACTIVE - Users who have
      *            used your app within the specified duration are included in
-     *            the segment. INACTIVE â€“ Users who have not used your app
+     *            the segment. INACTIVE - Users who have not used your app
      *            within the specified duration are included in the segment.
      * @see RecencyType
      */
@@ -169,10 +172,10 @@ public void setRecencyType(String recencyType) {
     }
 
     /**
-     * The recency dimension type: ACTIVE â€“ Users who have used your app
-     * within the specified duration are included in the segment. INACTIVE â€“
-     * Users who have not used your app within the specified duration are
-     * included in the segment.
+     * The recency dimension type: ACTIVE - Users who have used your app within
+     * the specified duration are included in the segment. INACTIVE - Users who
+     * have not used your app within the specified duration are included in the
+     * segment.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
@@ -180,9 +183,9 @@ public void setRecencyType(String recencyType) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>ACTIVE, INACTIVE
      *
-     * @param recencyType The recency dimension type: ACTIVE â€“ Users who have
+     * @param recencyType The recency dimension type: ACTIVE - Users who have
      *            used your app within the specified duration are included in
-     *            the segment. INACTIVE â€“ Users who have not used your app
+     *            the segment. INACTIVE - Users who have not used your app
      *            within the specified duration are included in the segment.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -194,17 +197,17 @@ public RecencyDimension withRecencyType(String recencyType) {
     }
 
     /**
-     * The recency dimension type: ACTIVE â€“ Users who have used your app
-     * within the specified duration are included in the segment. INACTIVE â€“
-     * Users who have not used your app within the specified duration are
-     * included in the segment.
+     * The recency dimension type: ACTIVE - Users who have used your app within
+     * the specified duration are included in the segment. INACTIVE - Users who
+     * have not used your app within the specified duration are included in the
+     * segment.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>ACTIVE, INACTIVE
      *
-     * @param recencyType The recency dimension type: ACTIVE â€“ Users who have
+     * @param recencyType The recency dimension type: ACTIVE - Users who have
      *            used your app within the specified duration are included in
-     *            the segment. INACTIVE â€“ Users who have not used your app
+     *            the segment. INACTIVE - Users who have not used your app
      *            within the specified duration are included in the segment.
      * @see RecencyType
      */
@@ -213,10 +216,10 @@ public void setRecencyType(RecencyType recencyType) {
     }
 
     /**
-     * The recency dimension type: ACTIVE â€“ Users who have used your app
-     * within the specified duration are included in the segment. INACTIVE â€“
-     * Users who have not used your app within the specified duration are
-     * included in the segment.
+     * The recency dimension type: ACTIVE - Users who have used your app within
+     * the specified duration are included in the segment. INACTIVE - Users who
+     * have not used your app within the specified duration are included in the
+     * segment.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
@@ -224,9 +227,9 @@ public void setRecencyType(RecencyType recencyType) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>ACTIVE, INACTIVE
      *
-     * @param recencyType The recency dimension type: ACTIVE â€“ Users who have
+     * @param recencyType The recency dimension type: ACTIVE - Users who have
      *            used your app within the specified duration are included in
-     *            the segment. INACTIVE â€“ Users who have not used your app
+     *            the segment. INACTIVE - Users who have not used your app
      *            within the specified duration are included in the segment.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SMSChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SMSChannelRequest.java
new file mode 100644
index 0000000000..23543ffa06
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SMSChannelRequest.java
@@ -0,0 +1,205 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * SMS Channel Request
+ */
+public class SMSChannelRequest implements Serializable {
+    /**
+     * If the channel is enabled for sending messages.
+     */
+    private Boolean enabled;
+
+    /**
+     * Sender identifier of your messages.
+     */
+    private String senderId;
+
+    /**
+     * ShortCode registered with phone provider.
+     */
+    private String shortCode;
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean isEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean getEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     */
+    public void setEnabled(Boolean enabled) {
+        this.enabled = enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSChannelRequest withEnabled(Boolean enabled) {
+        this.enabled = enabled;
+        return this;
+    }
+
+    /**
+     * Sender identifier of your messages.
+     *
+     * @return Sender identifier of your messages.
+     */
+    public String getSenderId() {
+        return senderId;
+    }
+
+    /**
+     * Sender identifier of your messages.
+     *
+     * @param senderId Sender identifier of your messages.
+     */
+    public void setSenderId(String senderId) {
+        this.senderId = senderId;
+    }
+
+    /**
+     * Sender identifier of your messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param senderId Sender identifier of your messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSChannelRequest withSenderId(String senderId) {
+        this.senderId = senderId;
+        return this;
+    }
+
+    /**
+     * ShortCode registered with phone provider.
+     *
+     * @return ShortCode registered with phone provider.
+     */
+    public String getShortCode() {
+        return shortCode;
+    }
+
+    /**
+     * ShortCode registered with phone provider.
+     *
+     * @param shortCode ShortCode registered with phone provider.
+     */
+    public void setShortCode(String shortCode) {
+        this.shortCode = shortCode;
+    }
+
+    /**
+     * ShortCode registered with phone provider.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param shortCode ShortCode registered with phone provider.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSChannelRequest withShortCode(String shortCode) {
+        this.shortCode = shortCode;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getEnabled() != null)
+            sb.append("Enabled: " + getEnabled() + ",");
+        if (getSenderId() != null)
+            sb.append("SenderId: " + getSenderId() + ",");
+        if (getShortCode() != null)
+            sb.append("ShortCode: " + getShortCode());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
+        hashCode = prime * hashCode + ((getSenderId() == null) ? 0 : getSenderId().hashCode());
+        hashCode = prime * hashCode + ((getShortCode() == null) ? 0 : getShortCode().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof SMSChannelRequest == false)
+            return false;
+        SMSChannelRequest other = (SMSChannelRequest) obj;
+
+        if (other.getEnabled() == null ^ this.getEnabled() == null)
+            return false;
+        if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
+            return false;
+        if (other.getSenderId() == null ^ this.getSenderId() == null)
+            return false;
+        if (other.getSenderId() != null && other.getSenderId().equals(this.getSenderId()) == false)
+            return false;
+        if (other.getShortCode() == null ^ this.getShortCode() == null)
+            return false;
+        if (other.getShortCode() != null
+                && other.getShortCode().equals(this.getShortCode()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SMSChannelResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SMSChannelResponse.java
new file mode 100644
index 0000000000..f10039f0e1
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SMSChannelResponse.java
@@ -0,0 +1,588 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * SMS Channel Response.
+ */
+public class SMSChannelResponse implements Serializable {
+    /**
+     * The unique ID of the application to which the SMS channel belongs.
+     */
+    private String applicationId;
+
+    /**
+     * The date that the settings were last updated in ISO 8601 format.
+     */
+    private String creationDate;
+
+    /**
+     * If the channel is enabled for sending messages.
+     */
+    private Boolean enabled;
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     */
+    private String id;
+
+    /**
+     * Is this channel archived
+     */
+    private Boolean isArchived;
+
+    /**
+     * Who last updated this entry
+     */
+    private String lastModifiedBy;
+
+    /**
+     * Last date this was updated
+     */
+    private String lastModifiedDate;
+
+    /**
+     * Platform type. Will be "SMS"
+     */
+    private String platform;
+
+    /**
+     * Sender identifier of your messages.
+     */
+    private String senderId;
+
+    /**
+     * The short code registered with the phone provider.
+     */
+    private String shortCode;
+
+    /**
+     * Version of channel
+     */
+    private Integer version;
+
+    /**
+     * The unique ID of the application to which the SMS channel belongs.
+     *
+     * @return The unique ID of the application to which the SMS channel
+     *         belongs.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * The unique ID of the application to which the SMS channel belongs.
+     *
+     * @param applicationId The unique ID of the application to which the SMS
+     *            channel belongs.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * The unique ID of the application to which the SMS channel belongs.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The unique ID of the application to which the SMS
+     *            channel belongs.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSChannelResponse withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * The date that the settings were last updated in ISO 8601 format.
+     *
+     * @return The date that the settings were last updated in ISO 8601 format.
+     */
+    public String getCreationDate() {
+        return creationDate;
+    }
+
+    /**
+     * The date that the settings were last updated in ISO 8601 format.
+     *
+     * @param creationDate The date that the settings were last updated in ISO
+     *            8601 format.
+     */
+    public void setCreationDate(String creationDate) {
+        this.creationDate = creationDate;
+    }
+
+    /**
+     * The date that the settings were last updated in ISO 8601 format.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param creationDate The date that the settings were last updated in ISO
+     *            8601 format.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSChannelResponse withCreationDate(String creationDate) {
+        this.creationDate = creationDate;
+        return this;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean isEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @return If the channel is enabled for sending messages.
+     */
+    public Boolean getEnabled() {
+        return enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     */
+    public void setEnabled(Boolean enabled) {
+        this.enabled = enabled;
+    }
+
+    /**
+     * If the channel is enabled for sending messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param enabled If the channel is enabled for sending messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSChannelResponse withEnabled(Boolean enabled) {
+        this.enabled = enabled;
+        return this;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     *
+     * @return Channel ID. Not used, only for backwards compatibility.
+     */
+    public String getId() {
+        return id;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     *
+     * @param id Channel ID. Not used, only for backwards compatibility.
+     */
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    /**
+     * Channel ID. Not used, only for backwards compatibility.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param id Channel ID. Not used, only for backwards compatibility.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSChannelResponse withId(String id) {
+        this.id = id;
+        return this;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @return Is this channel archived
+     */
+    public Boolean isIsArchived() {
+        return isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @return Is this channel archived
+     */
+    public Boolean getIsArchived() {
+        return isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     *
+     * @param isArchived Is this channel archived
+     */
+    public void setIsArchived(Boolean isArchived) {
+        this.isArchived = isArchived;
+    }
+
+    /**
+     * Is this channel archived
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param isArchived Is this channel archived
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSChannelResponse withIsArchived(Boolean isArchived) {
+        this.isArchived = isArchived;
+        return this;
+    }
+
+    /**
+     * Who last updated this entry
+     *
+     * @return Who last updated this entry
+     */
+    public String getLastModifiedBy() {
+        return lastModifiedBy;
+    }
+
+    /**
+     * Who last updated this entry
+     *
+     * @param lastModifiedBy Who last updated this entry
+     */
+    public void setLastModifiedBy(String lastModifiedBy) {
+        this.lastModifiedBy = lastModifiedBy;
+    }
+
+    /**
+     * Who last updated this entry
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastModifiedBy Who last updated this entry
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSChannelResponse withLastModifiedBy(String lastModifiedBy) {
+        this.lastModifiedBy = lastModifiedBy;
+        return this;
+    }
+
+    /**
+     * Last date this was updated
+     *
+     * @return Last date this was updated
+     */
+    public String getLastModifiedDate() {
+        return lastModifiedDate;
+    }
+
+    /**
+     * Last date this was updated
+     *
+     * @param lastModifiedDate Last date this was updated
+     */
+    public void setLastModifiedDate(String lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+    }
+
+    /**
+     * Last date this was updated
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastModifiedDate Last date this was updated
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSChannelResponse withLastModifiedDate(String lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+        return this;
+    }
+
+    /**
+     * Platform type. Will be "SMS"
+     *
+     * @return Platform type. Will be "SMS"
+     */
+    public String getPlatform() {
+        return platform;
+    }
+
+    /**
+     * Platform type. Will be "SMS"
+     *
+     * @param platform Platform type. Will be "SMS"
+     */
+    public void setPlatform(String platform) {
+        this.platform = platform;
+    }
+
+    /**
+     * Platform type. Will be "SMS"
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param platform Platform type. Will be "SMS"
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSChannelResponse withPlatform(String platform) {
+        this.platform = platform;
+        return this;
+    }
+
+    /**
+     * Sender identifier of your messages.
+     *
+     * @return Sender identifier of your messages.
+     */
+    public String getSenderId() {
+        return senderId;
+    }
+
+    /**
+     * Sender identifier of your messages.
+     *
+     * @param senderId Sender identifier of your messages.
+     */
+    public void setSenderId(String senderId) {
+        this.senderId = senderId;
+    }
+
+    /**
+     * Sender identifier of your messages.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param senderId Sender identifier of your messages.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSChannelResponse withSenderId(String senderId) {
+        this.senderId = senderId;
+        return this;
+    }
+
+    /**
+     * The short code registered with the phone provider.
+     *
+     * @return The short code registered with the phone provider.
+     */
+    public String getShortCode() {
+        return shortCode;
+    }
+
+    /**
+     * The short code registered with the phone provider.
+     *
+     * @param shortCode The short code registered with the phone provider.
+     */
+    public void setShortCode(String shortCode) {
+        this.shortCode = shortCode;
+    }
+
+    /**
+     * The short code registered with the phone provider.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param shortCode The short code registered with the phone provider.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSChannelResponse withShortCode(String shortCode) {
+        this.shortCode = shortCode;
+        return this;
+    }
+
+    /**
+     * Version of channel
+     *
+     * @return Version of channel
+     */
+    public Integer getVersion() {
+        return version;
+    }
+
+    /**
+     * Version of channel
+     *
+     * @param version Version of channel
+     */
+    public void setVersion(Integer version) {
+        this.version = version;
+    }
+
+    /**
+     * Version of channel
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param version Version of channel
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSChannelResponse withVersion(Integer version) {
+        this.version = version;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getCreationDate() != null)
+            sb.append("CreationDate: " + getCreationDate() + ",");
+        if (getEnabled() != null)
+            sb.append("Enabled: " + getEnabled() + ",");
+        if (getId() != null)
+            sb.append("Id: " + getId() + ",");
+        if (getIsArchived() != null)
+            sb.append("IsArchived: " + getIsArchived() + ",");
+        if (getLastModifiedBy() != null)
+            sb.append("LastModifiedBy: " + getLastModifiedBy() + ",");
+        if (getLastModifiedDate() != null)
+            sb.append("LastModifiedDate: " + getLastModifiedDate() + ",");
+        if (getPlatform() != null)
+            sb.append("Platform: " + getPlatform() + ",");
+        if (getSenderId() != null)
+            sb.append("SenderId: " + getSenderId() + ",");
+        if (getShortCode() != null)
+            sb.append("ShortCode: " + getShortCode() + ",");
+        if (getVersion() != null)
+            sb.append("Version: " + getVersion());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime * hashCode
+                + ((getCreationDate() == null) ? 0 : getCreationDate().hashCode());
+        hashCode = prime * hashCode + ((getEnabled() == null) ? 0 : getEnabled().hashCode());
+        hashCode = prime * hashCode + ((getId() == null) ? 0 : getId().hashCode());
+        hashCode = prime * hashCode + ((getIsArchived() == null) ? 0 : getIsArchived().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastModifiedBy() == null) ? 0 : getLastModifiedBy().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastModifiedDate() == null) ? 0 : getLastModifiedDate().hashCode());
+        hashCode = prime * hashCode + ((getPlatform() == null) ? 0 : getPlatform().hashCode());
+        hashCode = prime * hashCode + ((getSenderId() == null) ? 0 : getSenderId().hashCode());
+        hashCode = prime * hashCode + ((getShortCode() == null) ? 0 : getShortCode().hashCode());
+        hashCode = prime * hashCode + ((getVersion() == null) ? 0 : getVersion().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof SMSChannelResponse == false)
+            return false;
+        SMSChannelResponse other = (SMSChannelResponse) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        if (other.getCreationDate() == null ^ this.getCreationDate() == null)
+            return false;
+        if (other.getCreationDate() != null
+                && other.getCreationDate().equals(this.getCreationDate()) == false)
+            return false;
+        if (other.getEnabled() == null ^ this.getEnabled() == null)
+            return false;
+        if (other.getEnabled() != null && other.getEnabled().equals(this.getEnabled()) == false)
+            return false;
+        if (other.getId() == null ^ this.getId() == null)
+            return false;
+        if (other.getId() != null && other.getId().equals(this.getId()) == false)
+            return false;
+        if (other.getIsArchived() == null ^ this.getIsArchived() == null)
+            return false;
+        if (other.getIsArchived() != null
+                && other.getIsArchived().equals(this.getIsArchived()) == false)
+            return false;
+        if (other.getLastModifiedBy() == null ^ this.getLastModifiedBy() == null)
+            return false;
+        if (other.getLastModifiedBy() != null
+                && other.getLastModifiedBy().equals(this.getLastModifiedBy()) == false)
+            return false;
+        if (other.getLastModifiedDate() == null ^ this.getLastModifiedDate() == null)
+            return false;
+        if (other.getLastModifiedDate() != null
+                && other.getLastModifiedDate().equals(this.getLastModifiedDate()) == false)
+            return false;
+        if (other.getPlatform() == null ^ this.getPlatform() == null)
+            return false;
+        if (other.getPlatform() != null && other.getPlatform().equals(this.getPlatform()) == false)
+            return false;
+        if (other.getSenderId() == null ^ this.getSenderId() == null)
+            return false;
+        if (other.getSenderId() != null && other.getSenderId().equals(this.getSenderId()) == false)
+            return false;
+        if (other.getShortCode() == null ^ this.getShortCode() == null)
+            return false;
+        if (other.getShortCode() != null
+                && other.getShortCode().equals(this.getShortCode()) == false)
+            return false;
+        if (other.getVersion() == null ^ this.getVersion() == null)
+            return false;
+        if (other.getVersion() != null && other.getVersion().equals(this.getVersion()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SMSMessage.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SMSMessage.java
new file mode 100644
index 0000000000..ee11743ce8
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SMSMessage.java
@@ -0,0 +1,341 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * SMS Message.
+ */
+public class SMSMessage implements Serializable {
+    /**
+     * The message body of the notification, the email body or the text message.
+     */
+    private String body;
+
+    /**
+     * Is this a transaction priority message or lower priority.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>TRANSACTIONAL, PROMOTIONAL
+     */
+    private String messageType;
+
+    /**
+     * Sender ID of sent message.
+     */
+    private String senderId;
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     */
+    private java.util.Map<String, java.util.List<String>> substitutions;
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @return The message body of the notification, the email body or the text
+     *         message.
+     */
+    public String getBody() {
+        return body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     */
+    public void setBody(String body) {
+        this.body = body;
+    }
+
+    /**
+     * The message body of the notification, the email body or the text message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param body The message body of the notification, the email body or the
+     *            text message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSMessage withBody(String body) {
+        this.body = body;
+        return this;
+    }
+
+    /**
+     * Is this a transaction priority message or lower priority.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>TRANSACTIONAL, PROMOTIONAL
+     *
+     * @return Is this a transaction priority message or lower priority.
+     * @see MessageType
+     */
+    public String getMessageType() {
+        return messageType;
+    }
+
+    /**
+     * Is this a transaction priority message or lower priority.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>TRANSACTIONAL, PROMOTIONAL
+     *
+     * @param messageType Is this a transaction priority message or lower
+     *            priority.
+     * @see MessageType
+     */
+    public void setMessageType(String messageType) {
+        this.messageType = messageType;
+    }
+
+    /**
+     * Is this a transaction priority message or lower priority.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>TRANSACTIONAL, PROMOTIONAL
+     *
+     * @param messageType Is this a transaction priority message or lower
+     *            priority.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see MessageType
+     */
+    public SMSMessage withMessageType(String messageType) {
+        this.messageType = messageType;
+        return this;
+    }
+
+    /**
+     * Is this a transaction priority message or lower priority.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>TRANSACTIONAL, PROMOTIONAL
+     *
+     * @param messageType Is this a transaction priority message or lower
+     *            priority.
+     * @see MessageType
+     */
+    public void setMessageType(MessageType messageType) {
+        this.messageType = messageType.toString();
+    }
+
+    /**
+     * Is this a transaction priority message or lower priority.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>TRANSACTIONAL, PROMOTIONAL
+     *
+     * @param messageType Is this a transaction priority message or lower
+     *            priority.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see MessageType
+     */
+    public SMSMessage withMessageType(MessageType messageType) {
+        this.messageType = messageType.toString();
+        return this;
+    }
+
+    /**
+     * Sender ID of sent message.
+     *
+     * @return Sender ID of sent message.
+     */
+    public String getSenderId() {
+        return senderId;
+    }
+
+    /**
+     * Sender ID of sent message.
+     *
+     * @param senderId Sender ID of sent message.
+     */
+    public void setSenderId(String senderId) {
+        this.senderId = senderId;
+    }
+
+    /**
+     * Sender ID of sent message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param senderId Sender ID of sent message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSMessage withSenderId(String senderId) {
+        this.senderId = senderId;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @return Default message substitutions. Can be overridden by individual
+     *         address substitutions.
+     */
+    public java.util.Map<String, java.util.List<String>> getSubstitutions() {
+        return substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     */
+    public void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param substitutions Default message substitutions. Can be overridden by
+     *            individual address substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSMessage withSubstitutions(java.util.Map<String, java.util.List<String>> substitutions) {
+        this.substitutions = substitutions;
+        return this;
+    }
+
+    /**
+     * Default message substitutions. Can be overridden by individual address
+     * substitutions.
+     * <p>
+     * The method adds a new key-value pair into Substitutions parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into Substitutions.
+     * @param value The corresponding value of the entry to be added into
+     *            Substitutions.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SMSMessage addSubstitutionsEntry(String key, java.util.List<String> value) {
+        if (null == this.substitutions) {
+            this.substitutions = new java.util.HashMap<String, java.util.List<String>>();
+        }
+        if (this.substitutions.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.substitutions.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Substitutions.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public SMSMessage clearSubstitutionsEntries() {
+        this.substitutions = null;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getBody() != null)
+            sb.append("Body: " + getBody() + ",");
+        if (getMessageType() != null)
+            sb.append("MessageType: " + getMessageType() + ",");
+        if (getSenderId() != null)
+            sb.append("SenderId: " + getSenderId() + ",");
+        if (getSubstitutions() != null)
+            sb.append("Substitutions: " + getSubstitutions());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getBody() == null) ? 0 : getBody().hashCode());
+        hashCode = prime * hashCode
+                + ((getMessageType() == null) ? 0 : getMessageType().hashCode());
+        hashCode = prime * hashCode + ((getSenderId() == null) ? 0 : getSenderId().hashCode());
+        hashCode = prime * hashCode
+                + ((getSubstitutions() == null) ? 0 : getSubstitutions().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof SMSMessage == false)
+            return false;
+        SMSMessage other = (SMSMessage) obj;
+
+        if (other.getBody() == null ^ this.getBody() == null)
+            return false;
+        if (other.getBody() != null && other.getBody().equals(this.getBody()) == false)
+            return false;
+        if (other.getMessageType() == null ^ this.getMessageType() == null)
+            return false;
+        if (other.getMessageType() != null
+                && other.getMessageType().equals(this.getMessageType()) == false)
+            return false;
+        if (other.getSenderId() == null ^ this.getSenderId() == null)
+            return false;
+        if (other.getSenderId() != null && other.getSenderId().equals(this.getSenderId()) == false)
+            return false;
+        if (other.getSubstitutions() == null ^ this.getSubstitutions() == null)
+            return false;
+        if (other.getSubstitutions() != null
+                && other.getSubstitutions().equals(this.getSubstitutions()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Schedule.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Schedule.java
index 905f533285..f956a925ce 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Schedule.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Schedule.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Shcedule that defines when a campaign is run.
+ */
 public class Schedule implements Serializable {
     /**
      * The scheduled time that the campaign ends in ISO 8601 format.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentBehaviors.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentBehaviors.java
index 7b397f7dd0..7906f47177 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentBehaviors.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentBehaviors.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Segment behavior dimensions
+ */
 public class SegmentBehaviors implements Serializable {
     /**
      * The recency of use.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentDemographics.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentDemographics.java
index f920bd9a1e..c075d81e8d 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentDemographics.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentDemographics.java
@@ -17,12 +17,20 @@
 
 import java.io.Serializable;
 
+/**
+ * Segment demographic dimensions
+ */
 public class SegmentDemographics implements Serializable {
     /**
      * The app version criteria for the segment.
      */
     private SetDimension appVersion;
 
+    /**
+     * The channel criteria for the segment.
+     */
+    private SetDimension channel;
+
     /**
      * The device type criteria for the segment.
      */
@@ -76,6 +84,39 @@ public SegmentDemographics withAppVersion(SetDimension appVersion) {
         return this;
     }
 
+    /**
+     * The channel criteria for the segment.
+     *
+     * @return The channel criteria for the segment.
+     */
+    public SetDimension getChannel() {
+        return channel;
+    }
+
+    /**
+     * The channel criteria for the segment.
+     *
+     * @param channel The channel criteria for the segment.
+     */
+    public void setChannel(SetDimension channel) {
+        this.channel = channel;
+    }
+
+    /**
+     * The channel criteria for the segment.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param channel The channel criteria for the segment.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SegmentDemographics withChannel(SetDimension channel) {
+        this.channel = channel;
+        return this;
+    }
+
     /**
      * The device type criteria for the segment.
      *
@@ -221,6 +262,8 @@ public String toString() {
         sb.append("{");
         if (getAppVersion() != null)
             sb.append("AppVersion: " + getAppVersion() + ",");
+        if (getChannel() != null)
+            sb.append("Channel: " + getChannel() + ",");
         if (getDeviceType() != null)
             sb.append("DeviceType: " + getDeviceType() + ",");
         if (getMake() != null)
@@ -239,6 +282,7 @@ public int hashCode() {
         int hashCode = 1;
 
         hashCode = prime * hashCode + ((getAppVersion() == null) ? 0 : getAppVersion().hashCode());
+        hashCode = prime * hashCode + ((getChannel() == null) ? 0 : getChannel().hashCode());
         hashCode = prime * hashCode + ((getDeviceType() == null) ? 0 : getDeviceType().hashCode());
         hashCode = prime * hashCode + ((getMake() == null) ? 0 : getMake().hashCode());
         hashCode = prime * hashCode + ((getModel() == null) ? 0 : getModel().hashCode());
@@ -262,6 +306,10 @@ public boolean equals(Object obj) {
         if (other.getAppVersion() != null
                 && other.getAppVersion().equals(this.getAppVersion()) == false)
             return false;
+        if (other.getChannel() == null ^ this.getChannel() == null)
+            return false;
+        if (other.getChannel() != null && other.getChannel().equals(this.getChannel()) == false)
+            return false;
         if (other.getDeviceType() == null ^ this.getDeviceType() == null)
             return false;
         if (other.getDeviceType() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentDimensions.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentDimensions.java
index b4a5dfb126..7bd1636267 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentDimensions.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentDimensions.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Segment dimensions
+ */
 public class SegmentDimensions implements Serializable {
     /**
      * Custom segment attributes.
@@ -38,6 +41,11 @@
      */
     private SegmentLocation location;
 
+    /**
+     * Custom segment user attributes.
+     */
+    private java.util.Map<String, AttributeDimension> userAttributes;
+
     /**
      * Custom segment attributes.
      *
@@ -174,7 +182,7 @@ public SegmentDimensions withDemographic(SegmentDemographics demographic) {
 
     /**
      * The segment location attributes.
-     * 
+     *
      * @return The segment location attributes.
      */
     public SegmentLocation getLocation() {
@@ -183,7 +191,7 @@ public SegmentLocation getLocation() {
 
     /**
      * The segment location attributes.
-     * 
+     *
      * @param location The segment location attributes.
      */
     public void setLocation(SegmentLocation location) {
@@ -191,11 +199,13 @@ public void setLocation(SegmentLocation location) {
     }
 
     /**
-     * The segment location attributes. <p>
+     * The segment location attributes.
+     * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param location The segment location attributes. @return A reference to this updated object so that method calls can be
+     * @param location The segment location attributes.
+     * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
     public SegmentDimensions withLocation(SegmentLocation location) {
@@ -203,6 +213,75 @@ public SegmentDimensions withLocation(SegmentLocation location) {
         return this;
     }
 
+    /**
+     * Custom segment user attributes.
+     *
+     * @return Custom segment user attributes.
+     */
+    public java.util.Map<String, AttributeDimension> getUserAttributes() {
+        return userAttributes;
+    }
+
+    /**
+     * Custom segment user attributes.
+     *
+     * @param userAttributes Custom segment user attributes.
+     */
+    public void setUserAttributes(java.util.Map<String, AttributeDimension> userAttributes) {
+        this.userAttributes = userAttributes;
+    }
+
+    /**
+     * Custom segment user attributes.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param userAttributes Custom segment user attributes.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SegmentDimensions withUserAttributes(
+            java.util.Map<String, AttributeDimension> userAttributes) {
+        this.userAttributes = userAttributes;
+        return this;
+    }
+
+    /**
+     * Custom segment user attributes.
+     * <p>
+     * The method adds a new key-value pair into UserAttributes parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into UserAttributes.
+     * @param value The corresponding value of the entry to be added into
+     *            UserAttributes.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SegmentDimensions addUserAttributesEntry(String key, AttributeDimension value) {
+        if (null == this.userAttributes) {
+            this.userAttributes = new java.util.HashMap<String, AttributeDimension>();
+        }
+        if (this.userAttributes.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.userAttributes.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into UserAttributes.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public SegmentDimensions clearUserAttributesEntries() {
+        this.userAttributes = null;
+        return this;
+    }
+
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -221,7 +300,9 @@ public String toString() {
         if (getDemographic() != null)
             sb.append("Demographic: " + getDemographic() + ",");
         if (getLocation() != null)
-            sb.append("Location: " + getLocation());
+            sb.append("Location: " + getLocation() + ",");
+        if (getUserAttributes() != null)
+            sb.append("UserAttributes: " + getUserAttributes());
         sb.append("}");
         return sb.toString();
     }
@@ -236,6 +317,8 @@ public int hashCode() {
         hashCode = prime * hashCode
                 + ((getDemographic() == null) ? 0 : getDemographic().hashCode());
         hashCode = prime * hashCode + ((getLocation() == null) ? 0 : getLocation().hashCode());
+        hashCode = prime * hashCode
+                + ((getUserAttributes() == null) ? 0 : getUserAttributes().hashCode());
         return hashCode;
     }
 
@@ -268,6 +351,11 @@ public boolean equals(Object obj) {
             return false;
         if (other.getLocation() != null && other.getLocation().equals(this.getLocation()) == false)
             return false;
+        if (other.getUserAttributes() == null ^ this.getUserAttributes() == null)
+            return false;
+        if (other.getUserAttributes() != null
+                && other.getUserAttributes().equals(this.getUserAttributes()) == false)
+            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentImportResource.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentImportResource.java
index 4cd1076897..f87d32a561 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentImportResource.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentImportResource.java
@@ -17,7 +17,15 @@
 
 import java.io.Serializable;
 
+/**
+ * Segment import definition.
+ */
 public class SegmentImportResource implements Serializable {
+    /**
+     * Channel type counts
+     */
+    private java.util.Map<String, Integer> channelCounts;
+
     /**
      * A unique, custom ID assigned to the IAM role that restricts who can
      * assume the role.
@@ -51,6 +59,74 @@
      */
     private Integer size;
 
+    /**
+     * Channel type counts
+     *
+     * @return Channel type counts
+     */
+    public java.util.Map<String, Integer> getChannelCounts() {
+        return channelCounts;
+    }
+
+    /**
+     * Channel type counts
+     *
+     * @param channelCounts Channel type counts
+     */
+    public void setChannelCounts(java.util.Map<String, Integer> channelCounts) {
+        this.channelCounts = channelCounts;
+    }
+
+    /**
+     * Channel type counts
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param channelCounts Channel type counts
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SegmentImportResource withChannelCounts(java.util.Map<String, Integer> channelCounts) {
+        this.channelCounts = channelCounts;
+        return this;
+    }
+
+    /**
+     * Channel type counts
+     * <p>
+     * The method adds a new key-value pair into ChannelCounts parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into ChannelCounts.
+     * @param value The corresponding value of the entry to be added into
+     *            ChannelCounts.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SegmentImportResource addChannelCountsEntry(String key, Integer value) {
+        if (null == this.channelCounts) {
+            this.channelCounts = new java.util.HashMap<String, Integer>();
+        }
+        if (this.channelCounts.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.channelCounts.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into ChannelCounts.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public SegmentImportResource clearChannelCountsEntries() {
+        this.channelCounts = null;
+        return this;
+    }
+
     /**
      * A unique, custom ID assigned to the IAM role that restricts who can
      * assume the role.
@@ -305,6 +381,8 @@ public SegmentImportResource withSize(Integer size) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
+        if (getChannelCounts() != null)
+            sb.append("ChannelCounts: " + getChannelCounts() + ",");
         if (getExternalId() != null)
             sb.append("ExternalId: " + getExternalId() + ",");
         if (getFormat() != null)
@@ -324,6 +402,8 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
+        hashCode = prime * hashCode
+                + ((getChannelCounts() == null) ? 0 : getChannelCounts().hashCode());
         hashCode = prime * hashCode + ((getExternalId() == null) ? 0 : getExternalId().hashCode());
         hashCode = prime * hashCode + ((getFormat() == null) ? 0 : getFormat().hashCode());
         hashCode = prime * hashCode + ((getRoleArn() == null) ? 0 : getRoleArn().hashCode());
@@ -343,6 +423,11 @@ public boolean equals(Object obj) {
             return false;
         SegmentImportResource other = (SegmentImportResource) obj;
 
+        if (other.getChannelCounts() == null ^ this.getChannelCounts() == null)
+            return false;
+        if (other.getChannelCounts() != null
+                && other.getChannelCounts().equals(this.getChannelCounts()) == false)
+            return false;
         if (other.getExternalId() == null ^ this.getExternalId() == null)
             return false;
         if (other.getExternalId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentLocation.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentLocation.java
index 17fc2cc8f2..d292ed2df7 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentLocation.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentLocation.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Segment location dimensions
+ */
 public class SegmentLocation implements Serializable {
     /**
      * The country filter according to ISO 3166-1 Alpha-2 codes.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentResponse.java
index d4dad20a4f..2a788481e8 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentResponse.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentResponse.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Segment definition.
+ */
 public class SegmentResponse implements Serializable {
     /**
      * The ID of the application to which the segment applies.
@@ -54,11 +57,11 @@
     private String name;
 
     /**
-     * The segment type: DIMENSIONAL â€“ A dynamic segment built from selection
+     * The segment type: DIMENSIONAL - A dynamic segment built from selection
      * criteria based on endpoint data reported by your app. You create this
      * type of segment by using the segment builder in the Amazon Pinpoint
-     * console or by making a POST request to the segments resource. IMPORT â€“
-     * A static segment built from an imported set of endpoint definitions. You
+     * console or by making a POST request to the segments resource. IMPORT - A
+     * static segment built from an imported set of endpoint definitions. You
      * create this type of segment by importing a segment in the Amazon Pinpoint
      * console or by making a POST request to the jobs/import resource.
      * <p>
@@ -308,22 +311,22 @@ public SegmentResponse withName(String name) {
     }
 
     /**
-     * The segment type: DIMENSIONAL â€“ A dynamic segment built from selection
+     * The segment type: DIMENSIONAL - A dynamic segment built from selection
      * criteria based on endpoint data reported by your app. You create this
      * type of segment by using the segment builder in the Amazon Pinpoint
-     * console or by making a POST request to the segments resource. IMPORT â€“
-     * A static segment built from an imported set of endpoint definitions. You
+     * console or by making a POST request to the segments resource. IMPORT - A
+     * static segment built from an imported set of endpoint definitions. You
      * create this type of segment by importing a segment in the Amazon Pinpoint
      * console or by making a POST request to the jobs/import resource.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>DIMENSIONAL, IMPORT
      *
-     * @return The segment type: DIMENSIONAL â€“ A dynamic segment built from
+     * @return The segment type: DIMENSIONAL - A dynamic segment built from
      *         selection criteria based on endpoint data reported by your app.
      *         You create this type of segment by using the segment builder in
      *         the Amazon Pinpoint console or by making a POST request to the
-     *         segments resource. IMPORT â€“ A static segment built from an
+     *         segments resource. IMPORT - A static segment built from an
      *         imported set of endpoint definitions. You create this type of
      *         segment by importing a segment in the Amazon Pinpoint console or
      *         by making a POST request to the jobs/import resource.
@@ -334,22 +337,22 @@ public String getSegmentType() {
     }
 
     /**
-     * The segment type: DIMENSIONAL â€“ A dynamic segment built from selection
+     * The segment type: DIMENSIONAL - A dynamic segment built from selection
      * criteria based on endpoint data reported by your app. You create this
      * type of segment by using the segment builder in the Amazon Pinpoint
-     * console or by making a POST request to the segments resource. IMPORT â€“
-     * A static segment built from an imported set of endpoint definitions. You
+     * console or by making a POST request to the segments resource. IMPORT - A
+     * static segment built from an imported set of endpoint definitions. You
      * create this type of segment by importing a segment in the Amazon Pinpoint
      * console or by making a POST request to the jobs/import resource.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>DIMENSIONAL, IMPORT
      *
-     * @param segmentType The segment type: DIMENSIONAL â€“ A dynamic segment
+     * @param segmentType The segment type: DIMENSIONAL - A dynamic segment
      *            built from selection criteria based on endpoint data reported
      *            by your app. You create this type of segment by using the
      *            segment builder in the Amazon Pinpoint console or by making a
-     *            POST request to the segments resource. IMPORT â€“ A static
+     *            POST request to the segments resource. IMPORT - A static
      *            segment built from an imported set of endpoint definitions.
      *            You create this type of segment by importing a segment in the
      *            Amazon Pinpoint console or by making a POST request to the
@@ -361,11 +364,11 @@ public void setSegmentType(String segmentType) {
     }
 
     /**
-     * The segment type: DIMENSIONAL â€“ A dynamic segment built from selection
+     * The segment type: DIMENSIONAL - A dynamic segment built from selection
      * criteria based on endpoint data reported by your app. You create this
      * type of segment by using the segment builder in the Amazon Pinpoint
-     * console or by making a POST request to the segments resource. IMPORT â€“
-     * A static segment built from an imported set of endpoint definitions. You
+     * console or by making a POST request to the segments resource. IMPORT - A
+     * static segment built from an imported set of endpoint definitions. You
      * create this type of segment by importing a segment in the Amazon Pinpoint
      * console or by making a POST request to the jobs/import resource.
      * <p>
@@ -375,11 +378,11 @@ public void setSegmentType(String segmentType) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>DIMENSIONAL, IMPORT
      *
-     * @param segmentType The segment type: DIMENSIONAL â€“ A dynamic segment
+     * @param segmentType The segment type: DIMENSIONAL - A dynamic segment
      *            built from selection criteria based on endpoint data reported
      *            by your app. You create this type of segment by using the
      *            segment builder in the Amazon Pinpoint console or by making a
-     *            POST request to the segments resource. IMPORT â€“ A static
+     *            POST request to the segments resource. IMPORT - A static
      *            segment built from an imported set of endpoint definitions.
      *            You create this type of segment by importing a segment in the
      *            Amazon Pinpoint console or by making a POST request to the
@@ -394,22 +397,22 @@ public SegmentResponse withSegmentType(String segmentType) {
     }
 
     /**
-     * The segment type: DIMENSIONAL â€“ A dynamic segment built from selection
+     * The segment type: DIMENSIONAL - A dynamic segment built from selection
      * criteria based on endpoint data reported by your app. You create this
      * type of segment by using the segment builder in the Amazon Pinpoint
-     * console or by making a POST request to the segments resource. IMPORT â€“
-     * A static segment built from an imported set of endpoint definitions. You
+     * console or by making a POST request to the segments resource. IMPORT - A
+     * static segment built from an imported set of endpoint definitions. You
      * create this type of segment by importing a segment in the Amazon Pinpoint
      * console or by making a POST request to the jobs/import resource.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>DIMENSIONAL, IMPORT
      *
-     * @param segmentType The segment type: DIMENSIONAL â€“ A dynamic segment
+     * @param segmentType The segment type: DIMENSIONAL - A dynamic segment
      *            built from selection criteria based on endpoint data reported
      *            by your app. You create this type of segment by using the
      *            segment builder in the Amazon Pinpoint console or by making a
-     *            POST request to the segments resource. IMPORT â€“ A static
+     *            POST request to the segments resource. IMPORT - A static
      *            segment built from an imported set of endpoint definitions.
      *            You create this type of segment by importing a segment in the
      *            Amazon Pinpoint console or by making a POST request to the
@@ -421,11 +424,11 @@ public void setSegmentType(SegmentType segmentType) {
     }
 
     /**
-     * The segment type: DIMENSIONAL â€“ A dynamic segment built from selection
+     * The segment type: DIMENSIONAL - A dynamic segment built from selection
      * criteria based on endpoint data reported by your app. You create this
      * type of segment by using the segment builder in the Amazon Pinpoint
-     * console or by making a POST request to the segments resource. IMPORT â€“
-     * A static segment built from an imported set of endpoint definitions. You
+     * console or by making a POST request to the segments resource. IMPORT - A
+     * static segment built from an imported set of endpoint definitions. You
      * create this type of segment by importing a segment in the Amazon Pinpoint
      * console or by making a POST request to the jobs/import resource.
      * <p>
@@ -435,11 +438,11 @@ public void setSegmentType(SegmentType segmentType) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>DIMENSIONAL, IMPORT
      *
-     * @param segmentType The segment type: DIMENSIONAL â€“ A dynamic segment
+     * @param segmentType The segment type: DIMENSIONAL - A dynamic segment
      *            built from selection criteria based on endpoint data reported
      *            by your app. You create this type of segment by using the
      *            segment builder in the Amazon Pinpoint console or by making a
-     *            POST request to the segments resource. IMPORT â€“ A static
+     *            POST request to the segments resource. IMPORT - A static
      *            segment built from an imported set of endpoint definitions.
      *            You create this type of segment by importing a segment in the
      *            Amazon Pinpoint console or by making a POST request to the
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentsResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentsResponse.java
index f6f410892f..6fc482f7ae 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentsResponse.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SegmentsResponse.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Segments in your account.
+ */
 public class SegmentsResponse implements Serializable {
     /**
      * The list of segments.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendMessagesRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendMessagesRequest.java
new file mode 100644
index 0000000000..ff10ad5700
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendMessagesRequest.java
@@ -0,0 +1,158 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Send a batch of messages
+ */
+public class SendMessagesRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Send message request.
+     */
+    private MessageRequest messageRequest;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SendMessagesRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Send message request.
+     *
+     * @return Send message request.
+     */
+    public MessageRequest getMessageRequest() {
+        return messageRequest;
+    }
+
+    /**
+     * Send message request.
+     *
+     * @param messageRequest Send message request.
+     */
+    public void setMessageRequest(MessageRequest messageRequest) {
+        this.messageRequest = messageRequest;
+    }
+
+    /**
+     * Send message request.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param messageRequest Send message request.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SendMessagesRequest withMessageRequest(MessageRequest messageRequest) {
+        this.messageRequest = messageRequest;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getMessageRequest() != null)
+            sb.append("MessageRequest: " + getMessageRequest());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime * hashCode
+                + ((getMessageRequest() == null) ? 0 : getMessageRequest().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof SendMessagesRequest == false)
+            return false;
+        SendMessagesRequest other = (SendMessagesRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        if (other.getMessageRequest() == null ^ this.getMessageRequest() == null)
+            return false;
+        if (other.getMessageRequest() != null
+                && other.getMessageRequest().equals(this.getMessageRequest()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendMessagesResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendMessagesResult.java
new file mode 100644
index 0000000000..a40c765983
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendMessagesResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class SendMessagesResult implements Serializable {
+    /**
+     * Send message response.
+     */
+    private MessageResponse messageResponse;
+
+    /**
+     * Send message response.
+     *
+     * @return Send message response.
+     */
+    public MessageResponse getMessageResponse() {
+        return messageResponse;
+    }
+
+    /**
+     * Send message response.
+     *
+     * @param messageResponse Send message response.
+     */
+    public void setMessageResponse(MessageResponse messageResponse) {
+        this.messageResponse = messageResponse;
+    }
+
+    /**
+     * Send message response.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param messageResponse Send message response.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SendMessagesResult withMessageResponse(MessageResponse messageResponse) {
+        this.messageResponse = messageResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getMessageResponse() != null)
+            sb.append("MessageResponse: " + getMessageResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getMessageResponse() == null) ? 0 : getMessageResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof SendMessagesResult == false)
+            return false;
+        SendMessagesResult other = (SendMessagesResult) obj;
+
+        if (other.getMessageResponse() == null ^ this.getMessageResponse() == null)
+            return false;
+        if (other.getMessageResponse() != null
+                && other.getMessageResponse().equals(this.getMessageResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendUsersMessageRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendUsersMessageRequest.java
new file mode 100644
index 0000000000..c29f8b0f3f
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendUsersMessageRequest.java
@@ -0,0 +1,338 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Send message request.
+ */
+public class SendUsersMessageRequest implements Serializable {
+    /**
+     * A map of custom attributes to attributes to be attached to the message.
+     * This payload is added to the push notification's 'data.pinpoint' object
+     * or added to the email/sms delivery receipt event attributes.
+     */
+    private java.util.Map<String, String> context;
+
+    /**
+     * Message configuration.
+     */
+    private DirectMessageConfiguration messageConfiguration;
+
+    /**
+     * Original request Id for which this message is delivered.
+     */
+    private String requestId;
+
+    /**
+     * A map of destination endpoints, with the EndpointId as the key Endpoint
+     * Message Configuration as the value.
+     */
+    private java.util.Map<String, EndpointSendConfiguration> users;
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message.
+     * This payload is added to the push notification's 'data.pinpoint' object
+     * or added to the email/sms delivery receipt event attributes.
+     *
+     * @return A map of custom attributes to attributes to be attached to the
+     *         message. This payload is added to the push notification's
+     *         'data.pinpoint' object or added to the email/sms delivery receipt
+     *         event attributes.
+     */
+    public java.util.Map<String, String> getContext() {
+        return context;
+    }
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message.
+     * This payload is added to the push notification's 'data.pinpoint' object
+     * or added to the email/sms delivery receipt event attributes.
+     *
+     * @param context A map of custom attributes to attributes to be attached to
+     *            the message. This payload is added to the push notification's
+     *            'data.pinpoint' object or added to the email/sms delivery
+     *            receipt event attributes.
+     */
+    public void setContext(java.util.Map<String, String> context) {
+        this.context = context;
+    }
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message.
+     * This payload is added to the push notification's 'data.pinpoint' object
+     * or added to the email/sms delivery receipt event attributes.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param context A map of custom attributes to attributes to be attached to
+     *            the message. This payload is added to the push notification's
+     *            'data.pinpoint' object or added to the email/sms delivery
+     *            receipt event attributes.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SendUsersMessageRequest withContext(java.util.Map<String, String> context) {
+        this.context = context;
+        return this;
+    }
+
+    /**
+     * A map of custom attributes to attributes to be attached to the message.
+     * This payload is added to the push notification's 'data.pinpoint' object
+     * or added to the email/sms delivery receipt event attributes.
+     * <p>
+     * The method adds a new key-value pair into Context parameter, and returns
+     * a reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Context.
+     * @param value The corresponding value of the entry to be added into
+     *            Context.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SendUsersMessageRequest addContextEntry(String key, String value) {
+        if (null == this.context) {
+            this.context = new java.util.HashMap<String, String>();
+        }
+        if (this.context.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.context.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Context.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public SendUsersMessageRequest clearContextEntries() {
+        this.context = null;
+        return this;
+    }
+
+    /**
+     * Message configuration.
+     *
+     * @return Message configuration.
+     */
+    public DirectMessageConfiguration getMessageConfiguration() {
+        return messageConfiguration;
+    }
+
+    /**
+     * Message configuration.
+     *
+     * @param messageConfiguration Message configuration.
+     */
+    public void setMessageConfiguration(DirectMessageConfiguration messageConfiguration) {
+        this.messageConfiguration = messageConfiguration;
+    }
+
+    /**
+     * Message configuration.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param messageConfiguration Message configuration.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SendUsersMessageRequest withMessageConfiguration(
+            DirectMessageConfiguration messageConfiguration) {
+        this.messageConfiguration = messageConfiguration;
+        return this;
+    }
+
+    /**
+     * Original request Id for which this message is delivered.
+     *
+     * @return Original request Id for which this message is delivered.
+     */
+    public String getRequestId() {
+        return requestId;
+    }
+
+    /**
+     * Original request Id for which this message is delivered.
+     *
+     * @param requestId Original request Id for which this message is delivered.
+     */
+    public void setRequestId(String requestId) {
+        this.requestId = requestId;
+    }
+
+    /**
+     * Original request Id for which this message is delivered.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param requestId Original request Id for which this message is delivered.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SendUsersMessageRequest withRequestId(String requestId) {
+        this.requestId = requestId;
+        return this;
+    }
+
+    /**
+     * A map of destination endpoints, with the EndpointId as the key Endpoint
+     * Message Configuration as the value.
+     *
+     * @return A map of destination endpoints, with the EndpointId as the key
+     *         Endpoint Message Configuration as the value.
+     */
+    public java.util.Map<String, EndpointSendConfiguration> getUsers() {
+        return users;
+    }
+
+    /**
+     * A map of destination endpoints, with the EndpointId as the key Endpoint
+     * Message Configuration as the value.
+     *
+     * @param users A map of destination endpoints, with the EndpointId as the
+     *            key Endpoint Message Configuration as the value.
+     */
+    public void setUsers(java.util.Map<String, EndpointSendConfiguration> users) {
+        this.users = users;
+    }
+
+    /**
+     * A map of destination endpoints, with the EndpointId as the key Endpoint
+     * Message Configuration as the value.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param users A map of destination endpoints, with the EndpointId as the
+     *            key Endpoint Message Configuration as the value.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SendUsersMessageRequest withUsers(java.util.Map<String, EndpointSendConfiguration> users) {
+        this.users = users;
+        return this;
+    }
+
+    /**
+     * A map of destination endpoints, with the EndpointId as the key Endpoint
+     * Message Configuration as the value.
+     * <p>
+     * The method adds a new key-value pair into Users parameter, and returns a
+     * reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Users.
+     * @param value The corresponding value of the entry to be added into Users.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SendUsersMessageRequest addUsersEntry(String key, EndpointSendConfiguration value) {
+        if (null == this.users) {
+            this.users = new java.util.HashMap<String, EndpointSendConfiguration>();
+        }
+        if (this.users.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.users.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Users.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public SendUsersMessageRequest clearUsersEntries() {
+        this.users = null;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getContext() != null)
+            sb.append("Context: " + getContext() + ",");
+        if (getMessageConfiguration() != null)
+            sb.append("MessageConfiguration: " + getMessageConfiguration() + ",");
+        if (getRequestId() != null)
+            sb.append("RequestId: " + getRequestId() + ",");
+        if (getUsers() != null)
+            sb.append("Users: " + getUsers());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getContext() == null) ? 0 : getContext().hashCode());
+        hashCode = prime * hashCode
+                + ((getMessageConfiguration() == null) ? 0 : getMessageConfiguration().hashCode());
+        hashCode = prime * hashCode + ((getRequestId() == null) ? 0 : getRequestId().hashCode());
+        hashCode = prime * hashCode + ((getUsers() == null) ? 0 : getUsers().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof SendUsersMessageRequest == false)
+            return false;
+        SendUsersMessageRequest other = (SendUsersMessageRequest) obj;
+
+        if (other.getContext() == null ^ this.getContext() == null)
+            return false;
+        if (other.getContext() != null && other.getContext().equals(this.getContext()) == false)
+            return false;
+        if (other.getMessageConfiguration() == null ^ this.getMessageConfiguration() == null)
+            return false;
+        if (other.getMessageConfiguration() != null
+                && other.getMessageConfiguration().equals(this.getMessageConfiguration()) == false)
+            return false;
+        if (other.getRequestId() == null ^ this.getRequestId() == null)
+            return false;
+        if (other.getRequestId() != null
+                && other.getRequestId().equals(this.getRequestId()) == false)
+            return false;
+        if (other.getUsers() == null ^ this.getUsers() == null)
+            return false;
+        if (other.getUsers() != null && other.getUsers().equals(this.getUsers()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendUsersMessageResponse.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendUsersMessageResponse.java
new file mode 100644
index 0000000000..97b27aa349
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendUsersMessageResponse.java
@@ -0,0 +1,244 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * User send message response.
+ */
+public class SendUsersMessageResponse implements Serializable {
+    /**
+     * Application id of the message.
+     */
+    private String applicationId;
+
+    /**
+     * Original request Id for which this message was delivered.
+     */
+    private String requestId;
+
+    /**
+     * A map containing of UserId to Map of EndpointId to Endpoint Message
+     * Result.
+     */
+    private java.util.Map<String, java.util.Map<String, EndpointMessageResult>> result;
+
+    /**
+     * Application id of the message.
+     *
+     * @return Application id of the message.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Application id of the message.
+     *
+     * @param applicationId Application id of the message.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Application id of the message.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId Application id of the message.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SendUsersMessageResponse withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Original request Id for which this message was delivered.
+     *
+     * @return Original request Id for which this message was delivered.
+     */
+    public String getRequestId() {
+        return requestId;
+    }
+
+    /**
+     * Original request Id for which this message was delivered.
+     *
+     * @param requestId Original request Id for which this message was
+     *            delivered.
+     */
+    public void setRequestId(String requestId) {
+        this.requestId = requestId;
+    }
+
+    /**
+     * Original request Id for which this message was delivered.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param requestId Original request Id for which this message was
+     *            delivered.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SendUsersMessageResponse withRequestId(String requestId) {
+        this.requestId = requestId;
+        return this;
+    }
+
+    /**
+     * A map containing of UserId to Map of EndpointId to Endpoint Message
+     * Result.
+     *
+     * @return A map containing of UserId to Map of EndpointId to Endpoint
+     *         Message Result.
+     */
+    public java.util.Map<String, java.util.Map<String, EndpointMessageResult>> getResult() {
+        return result;
+    }
+
+    /**
+     * A map containing of UserId to Map of EndpointId to Endpoint Message
+     * Result.
+     *
+     * @param result A map containing of UserId to Map of EndpointId to Endpoint
+     *            Message Result.
+     */
+    public void setResult(java.util.Map<String, java.util.Map<String, EndpointMessageResult>> result) {
+        this.result = result;
+    }
+
+    /**
+     * A map containing of UserId to Map of EndpointId to Endpoint Message
+     * Result.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param result A map containing of UserId to Map of EndpointId to Endpoint
+     *            Message Result.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SendUsersMessageResponse withResult(
+            java.util.Map<String, java.util.Map<String, EndpointMessageResult>> result) {
+        this.result = result;
+        return this;
+    }
+
+    /**
+     * A map containing of UserId to Map of EndpointId to Endpoint Message
+     * Result.
+     * <p>
+     * The method adds a new key-value pair into Result parameter, and returns a
+     * reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Result.
+     * @param value The corresponding value of the entry to be added into
+     *            Result.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SendUsersMessageResponse addResultEntry(String key,
+            java.util.Map<String, EndpointMessageResult> value) {
+        if (null == this.result) {
+            this.result = new java.util.HashMap<String, java.util.Map<String, EndpointMessageResult>>();
+        }
+        if (this.result.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.result.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Result.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public SendUsersMessageResponse clearResultEntries() {
+        this.result = null;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getRequestId() != null)
+            sb.append("RequestId: " + getRequestId() + ",");
+        if (getResult() != null)
+            sb.append("Result: " + getResult());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime * hashCode + ((getRequestId() == null) ? 0 : getRequestId().hashCode());
+        hashCode = prime * hashCode + ((getResult() == null) ? 0 : getResult().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof SendUsersMessageResponse == false)
+            return false;
+        SendUsersMessageResponse other = (SendUsersMessageResponse) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        if (other.getRequestId() == null ^ this.getRequestId() == null)
+            return false;
+        if (other.getRequestId() != null
+                && other.getRequestId().equals(this.getRequestId()) == false)
+            return false;
+        if (other.getResult() == null ^ this.getResult() == null)
+            return false;
+        if (other.getResult() != null && other.getResult().equals(this.getResult()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendUsersMessagesRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendUsersMessagesRequest.java
new file mode 100644
index 0000000000..8f5da1d902
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendUsersMessagesRequest.java
@@ -0,0 +1,161 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Send a batch of messages to users
+ */
+public class SendUsersMessagesRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Send message request.
+     */
+    private SendUsersMessageRequest sendUsersMessageRequest;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SendUsersMessagesRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Send message request.
+     *
+     * @return Send message request.
+     */
+    public SendUsersMessageRequest getSendUsersMessageRequest() {
+        return sendUsersMessageRequest;
+    }
+
+    /**
+     * Send message request.
+     *
+     * @param sendUsersMessageRequest Send message request.
+     */
+    public void setSendUsersMessageRequest(SendUsersMessageRequest sendUsersMessageRequest) {
+        this.sendUsersMessageRequest = sendUsersMessageRequest;
+    }
+
+    /**
+     * Send message request.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param sendUsersMessageRequest Send message request.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SendUsersMessagesRequest withSendUsersMessageRequest(
+            SendUsersMessageRequest sendUsersMessageRequest) {
+        this.sendUsersMessageRequest = sendUsersMessageRequest;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getSendUsersMessageRequest() != null)
+            sb.append("SendUsersMessageRequest: " + getSendUsersMessageRequest());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getSendUsersMessageRequest() == null) ? 0 : getSendUsersMessageRequest()
+                        .hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof SendUsersMessagesRequest == false)
+            return false;
+        SendUsersMessagesRequest other = (SendUsersMessagesRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        if (other.getSendUsersMessageRequest() == null ^ this.getSendUsersMessageRequest() == null)
+            return false;
+        if (other.getSendUsersMessageRequest() != null
+                && other.getSendUsersMessageRequest().equals(this.getSendUsersMessageRequest()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendUsersMessagesResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendUsersMessagesResult.java
new file mode 100644
index 0000000000..1bdd97ff85
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SendUsersMessagesResult.java
@@ -0,0 +1,108 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class SendUsersMessagesResult implements Serializable {
+    /**
+     * User send message response.
+     */
+    private SendUsersMessageResponse sendUsersMessageResponse;
+
+    /**
+     * User send message response.
+     *
+     * @return User send message response.
+     */
+    public SendUsersMessageResponse getSendUsersMessageResponse() {
+        return sendUsersMessageResponse;
+    }
+
+    /**
+     * User send message response.
+     *
+     * @param sendUsersMessageResponse User send message response.
+     */
+    public void setSendUsersMessageResponse(SendUsersMessageResponse sendUsersMessageResponse) {
+        this.sendUsersMessageResponse = sendUsersMessageResponse;
+    }
+
+    /**
+     * User send message response.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param sendUsersMessageResponse User send message response.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SendUsersMessagesResult withSendUsersMessageResponse(
+            SendUsersMessageResponse sendUsersMessageResponse) {
+        this.sendUsersMessageResponse = sendUsersMessageResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getSendUsersMessageResponse() != null)
+            sb.append("SendUsersMessageResponse: " + getSendUsersMessageResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime
+                * hashCode
+                + ((getSendUsersMessageResponse() == null) ? 0 : getSendUsersMessageResponse()
+                        .hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof SendUsersMessagesResult == false)
+            return false;
+        SendUsersMessagesResult other = (SendUsersMessagesResult) obj;
+
+        if (other.getSendUsersMessageResponse() == null
+                ^ this.getSendUsersMessageResponse() == null)
+            return false;
+        if (other.getSendUsersMessageResponse() != null
+                && other.getSendUsersMessageResponse().equals(this.getSendUsersMessageResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SetDimension.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SetDimension.java
index 2867b3012e..408463570c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SetDimension.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/SetDimension.java
@@ -17,11 +17,14 @@
 
 import java.io.Serializable;
 
+/**
+ * Dimension specification of a segment.
+ */
 public class SetDimension implements Serializable {
     /**
-     * The type of dimension: INCLUSIVE â€“ Endpoints that match the criteria
-     * are included in the segment. EXCLUSIVE â€“ Endpoints that match the
-     * criteria are excluded from the segment.
+     * The type of dimension: INCLUSIVE - Endpoints that match the criteria are
+     * included in the segment. EXCLUSIVE - Endpoints that match the criteria
+     * are excluded from the segment.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>INCLUSIVE, EXCLUSIVE
@@ -36,16 +39,16 @@
     private java.util.List<String> values;
 
     /**
-     * The type of dimension: INCLUSIVE â€“ Endpoints that match the criteria
-     * are included in the segment. EXCLUSIVE â€“ Endpoints that match the
-     * criteria are excluded from the segment.
+     * The type of dimension: INCLUSIVE - Endpoints that match the criteria are
+     * included in the segment. EXCLUSIVE - Endpoints that match the criteria
+     * are excluded from the segment.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>INCLUSIVE, EXCLUSIVE
      *
-     * @return The type of dimension: INCLUSIVE â€“ Endpoints that match the
-     *         criteria are included in the segment. EXCLUSIVE â€“ Endpoints
-     *         that match the criteria are excluded from the segment.
+     * @return The type of dimension: INCLUSIVE - Endpoints that match the
+     *         criteria are included in the segment. EXCLUSIVE - Endpoints that
+     *         match the criteria are excluded from the segment.
      * @see DimensionType
      */
     public String getDimensionType() {
@@ -53,15 +56,15 @@ public String getDimensionType() {
     }
 
     /**
-     * The type of dimension: INCLUSIVE â€“ Endpoints that match the criteria
-     * are included in the segment. EXCLUSIVE â€“ Endpoints that match the
-     * criteria are excluded from the segment.
+     * The type of dimension: INCLUSIVE - Endpoints that match the criteria are
+     * included in the segment. EXCLUSIVE - Endpoints that match the criteria
+     * are excluded from the segment.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>INCLUSIVE, EXCLUSIVE
      *
-     * @param dimensionType The type of dimension: INCLUSIVE â€“ Endpoints that
-     *            match the criteria are included in the segment. EXCLUSIVE â€“
+     * @param dimensionType The type of dimension: INCLUSIVE - Endpoints that
+     *            match the criteria are included in the segment. EXCLUSIVE -
      *            Endpoints that match the criteria are excluded from the
      *            segment.
      * @see DimensionType
@@ -71,9 +74,9 @@ public void setDimensionType(String dimensionType) {
     }
 
     /**
-     * The type of dimension: INCLUSIVE â€“ Endpoints that match the criteria
-     * are included in the segment. EXCLUSIVE â€“ Endpoints that match the
-     * criteria are excluded from the segment.
+     * The type of dimension: INCLUSIVE - Endpoints that match the criteria are
+     * included in the segment. EXCLUSIVE - Endpoints that match the criteria
+     * are excluded from the segment.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
@@ -81,8 +84,8 @@ public void setDimensionType(String dimensionType) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>INCLUSIVE, EXCLUSIVE
      *
-     * @param dimensionType The type of dimension: INCLUSIVE â€“ Endpoints that
-     *            match the criteria are included in the segment. EXCLUSIVE â€“
+     * @param dimensionType The type of dimension: INCLUSIVE - Endpoints that
+     *            match the criteria are included in the segment. EXCLUSIVE -
      *            Endpoints that match the criteria are excluded from the
      *            segment.
      * @return A reference to this updated object so that method calls can be
@@ -95,15 +98,15 @@ public SetDimension withDimensionType(String dimensionType) {
     }
 
     /**
-     * The type of dimension: INCLUSIVE â€“ Endpoints that match the criteria
-     * are included in the segment. EXCLUSIVE â€“ Endpoints that match the
-     * criteria are excluded from the segment.
+     * The type of dimension: INCLUSIVE - Endpoints that match the criteria are
+     * included in the segment. EXCLUSIVE - Endpoints that match the criteria
+     * are excluded from the segment.
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>INCLUSIVE, EXCLUSIVE
      *
-     * @param dimensionType The type of dimension: INCLUSIVE â€“ Endpoints that
-     *            match the criteria are included in the segment. EXCLUSIVE â€“
+     * @param dimensionType The type of dimension: INCLUSIVE - Endpoints that
+     *            match the criteria are included in the segment. EXCLUSIVE -
      *            Endpoints that match the criteria are excluded from the
      *            segment.
      * @see DimensionType
@@ -113,9 +116,9 @@ public void setDimensionType(DimensionType dimensionType) {
     }
 
     /**
-     * The type of dimension: INCLUSIVE â€“ Endpoints that match the criteria
-     * are included in the segment. EXCLUSIVE â€“ Endpoints that match the
-     * criteria are excluded from the segment.
+     * The type of dimension: INCLUSIVE - Endpoints that match the criteria are
+     * included in the segment. EXCLUSIVE - Endpoints that match the criteria
+     * are excluded from the segment.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
@@ -123,8 +126,8 @@ public void setDimensionType(DimensionType dimensionType) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>INCLUSIVE, EXCLUSIVE
      *
-     * @param dimensionType The type of dimension: INCLUSIVE â€“ Endpoints that
-     *            match the criteria are included in the segment. EXCLUSIVE â€“
+     * @param dimensionType The type of dimension: INCLUSIVE - Endpoints that
+     *            match the criteria are included in the segment. EXCLUSIVE -
      *            Endpoints that match the criteria are excluded from the
      *            segment.
      * @return A reference to this updated object so that method calls can be
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/TooManyRequestsException.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/TooManyRequestsException.java
index 70f65c5079..236af21380 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/TooManyRequestsException.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/TooManyRequestsException.java
@@ -18,14 +18,15 @@
 import com.amazonaws.AmazonServiceException;
 
 /**
- * 
+ * Simple message object.
  */
 public class TooManyRequestsException extends AmazonServiceException {
     private static final long serialVersionUID = 1L;
 
-    private String accessControlAllowOrigin;
-
-    private MessageBody messageBody;
+    /**
+     * The unique message body ID.
+     */
+    private String requestID;
 
     /**
      * Constructs a new TooManyRequestsException with the specified error
@@ -38,42 +39,20 @@ public TooManyRequestsException(String message) {
     }
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Returns the value of the messageBody property for this object.
+     * The unique message body ID.
      *
-     * @return The value of the messageBody property for this object.
+     * @return The unique message body ID.
      */
-    public MessageBody getMessageBody() {
-        return messageBody;
+    public String getRequestID() {
+        return requestID;
     }
 
     /**
-     * Sets the value of messageBody
+     * The unique message body ID.
      *
-     * @param messageBody The new value for the messageBody property for this
-     *            object.
+     * @param requestID The unique message body ID.
      */
-    public void setMessageBody(MessageBody messageBody) {
-        this.messageBody = messageBody;
+    public void setRequestID(String requestID) {
+        this.requestID = requestID;
     }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/TreatmentResource.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/TreatmentResource.java
index 5c612252f3..ccddf267f7 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/TreatmentResource.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/TreatmentResource.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Treatment resource
+ */
 public class TreatmentResource implements Serializable {
     /**
      * The unique treatment ID.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateAdmChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateAdmChannelRequest.java
new file mode 100644
index 0000000000..8e9e471377
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateAdmChannelRequest.java
@@ -0,0 +1,158 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Update an ADM channel
+ */
+public class UpdateAdmChannelRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * Amazon Device Messaging channel definition.
+     */
+    private ADMChannelRequest aDMChannelRequest;
+
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Amazon Device Messaging channel definition.
+     *
+     * @return Amazon Device Messaging channel definition.
+     */
+    public ADMChannelRequest getADMChannelRequest() {
+        return aDMChannelRequest;
+    }
+
+    /**
+     * Amazon Device Messaging channel definition.
+     *
+     * @param aDMChannelRequest Amazon Device Messaging channel definition.
+     */
+    public void setADMChannelRequest(ADMChannelRequest aDMChannelRequest) {
+        this.aDMChannelRequest = aDMChannelRequest;
+    }
+
+    /**
+     * Amazon Device Messaging channel definition.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param aDMChannelRequest Amazon Device Messaging channel definition.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateAdmChannelRequest withADMChannelRequest(ADMChannelRequest aDMChannelRequest) {
+        this.aDMChannelRequest = aDMChannelRequest;
+        return this;
+    }
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateAdmChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getADMChannelRequest() != null)
+            sb.append("ADMChannelRequest: " + getADMChannelRequest() + ",");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getADMChannelRequest() == null) ? 0 : getADMChannelRequest().hashCode());
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateAdmChannelRequest == false)
+            return false;
+        UpdateAdmChannelRequest other = (UpdateAdmChannelRequest) obj;
+
+        if (other.getADMChannelRequest() == null ^ this.getADMChannelRequest() == null)
+            return false;
+        if (other.getADMChannelRequest() != null
+                && other.getADMChannelRequest().equals(this.getADMChannelRequest()) == false)
+            return false;
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateAdmChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateAdmChannelResult.java
new file mode 100644
index 0000000000..21a2cc3847
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateAdmChannelResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class UpdateAdmChannelResult implements Serializable {
+    /**
+     * Amazon Device Messaging channel definition.
+     */
+    private ADMChannelResponse aDMChannelResponse;
+
+    /**
+     * Amazon Device Messaging channel definition.
+     *
+     * @return Amazon Device Messaging channel definition.
+     */
+    public ADMChannelResponse getADMChannelResponse() {
+        return aDMChannelResponse;
+    }
+
+    /**
+     * Amazon Device Messaging channel definition.
+     *
+     * @param aDMChannelResponse Amazon Device Messaging channel definition.
+     */
+    public void setADMChannelResponse(ADMChannelResponse aDMChannelResponse) {
+        this.aDMChannelResponse = aDMChannelResponse;
+    }
+
+    /**
+     * Amazon Device Messaging channel definition.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param aDMChannelResponse Amazon Device Messaging channel definition.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateAdmChannelResult withADMChannelResponse(ADMChannelResponse aDMChannelResponse) {
+        this.aDMChannelResponse = aDMChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getADMChannelResponse() != null)
+            sb.append("ADMChannelResponse: " + getADMChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getADMChannelResponse() == null) ? 0 : getADMChannelResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateAdmChannelResult == false)
+            return false;
+        UpdateAdmChannelResult other = (UpdateAdmChannelResult) obj;
+
+        if (other.getADMChannelResponse() == null ^ this.getADMChannelResponse() == null)
+            return false;
+        if (other.getADMChannelResponse() != null
+                && other.getADMChannelResponse().equals(this.getADMChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApnsChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApnsChannelRequest.java
index b9fe4524a6..a7c0e897c5 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApnsChannelRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApnsChannelRequest.java
@@ -24,47 +24,42 @@
  */
 public class UpdateApnsChannelRequest extends AmazonWebServiceRequest implements Serializable {
     /**
-     * The new value for the aPNSChannelRequest property for this object.
+     * Apple Push Notification Service channel definition.
      */
     private APNSChannelRequest aPNSChannelRequest;
 
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
     private String applicationId;
 
     /**
-     * Returns the value of the aPNSChannelRequest property for this object.
+     * Apple Push Notification Service channel definition.
      *
-     * @return The value of the aPNSChannelRequest property for this object.
+     * @return Apple Push Notification Service channel definition.
      */
     public APNSChannelRequest getAPNSChannelRequest() {
         return aPNSChannelRequest;
     }
 
     /**
-     * Sets the value of aPNSChannelRequest
+     * Apple Push Notification Service channel definition.
      *
-     * @param aPNSChannelRequest The new value for the aPNSChannelRequest
-     *            property for this object.
+     * @param aPNSChannelRequest Apple Push Notification Service channel
+     *            definition.
      */
     public void setAPNSChannelRequest(APNSChannelRequest aPNSChannelRequest) {
         this.aPNSChannelRequest = aPNSChannelRequest;
     }
 
     /**
-     * Sets the value of the aPNSChannelRequest property for this object.
+     * Apple Push Notification Service channel definition.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param aPNSChannelRequest The new value for the aPNSChannelRequest
-     *            property for this object.
+     * @param aPNSChannelRequest Apple Push Notification Service channel
+     *            definition.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -73,39 +68,6 @@ public UpdateApnsChannelRequest withAPNSChannelRequest(APNSChannelRequest aPNSCh
         return this;
     }
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public UpdateApnsChannelRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -154,8 +116,6 @@ public String toString() {
         sb.append("{");
         if (getAPNSChannelRequest() != null)
             sb.append("APNSChannelRequest: " + getAPNSChannelRequest() + ",");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId());
         sb.append("}");
@@ -169,7 +129,6 @@ public int hashCode() {
 
         hashCode = prime * hashCode
                 + ((getAPNSChannelRequest() == null) ? 0 : getAPNSChannelRequest().hashCode());
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         return hashCode;
@@ -191,10 +150,6 @@ public boolean equals(Object obj) {
         if (other.getAPNSChannelRequest() != null
                 && other.getAPNSChannelRequest().equals(this.getAPNSChannelRequest()) == false)
             return false;
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApnsChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApnsChannelResult.java
index 246fd71370..2092a8d2ab 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApnsChannelResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApnsChannelResult.java
@@ -19,42 +19,37 @@
 
 public class UpdateApnsChannelResult implements Serializable {
     /**
-     * The new value for the aPNSChannelResponse property for this object.
+     * Apple Distribution Push Notification Service channel definition.
      */
     private APNSChannelResponse aPNSChannelResponse;
 
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * Returns the value of the aPNSChannelResponse property for this object.
+     * Apple Distribution Push Notification Service channel definition.
      *
-     * @return The value of the aPNSChannelResponse property for this object.
+     * @return Apple Distribution Push Notification Service channel definition.
      */
     public APNSChannelResponse getAPNSChannelResponse() {
         return aPNSChannelResponse;
     }
 
     /**
-     * Sets the value of aPNSChannelResponse
+     * Apple Distribution Push Notification Service channel definition.
      *
-     * @param aPNSChannelResponse The new value for the aPNSChannelResponse
-     *            property for this object.
+     * @param aPNSChannelResponse Apple Distribution Push Notification Service
+     *            channel definition.
      */
     public void setAPNSChannelResponse(APNSChannelResponse aPNSChannelResponse) {
         this.aPNSChannelResponse = aPNSChannelResponse;
     }
 
     /**
-     * Sets the value of the aPNSChannelResponse property for this object.
+     * Apple Distribution Push Notification Service channel definition.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param aPNSChannelResponse The new value for the aPNSChannelResponse
-     *            property for this object.
+     * @param aPNSChannelResponse Apple Distribution Push Notification Service
+     *            channel definition.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -63,43 +58,6 @@ public UpdateApnsChannelResult withAPNSChannelResponse(APNSChannelResponse aPNSC
         return this;
     }
 
-    /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public UpdateApnsChannelResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -112,9 +70,7 @@ public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
         if (getAPNSChannelResponse() != null)
-            sb.append("APNSChannelResponse: " + getAPNSChannelResponse() + ",");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin());
+            sb.append("APNSChannelResponse: " + getAPNSChannelResponse());
         sb.append("}");
         return sb.toString();
     }
@@ -126,10 +82,6 @@ public int hashCode() {
 
         hashCode = prime * hashCode
                 + ((getAPNSChannelResponse() == null) ? 0 : getAPNSChannelResponse().hashCode());
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         return hashCode;
     }
 
@@ -149,12 +101,6 @@ public boolean equals(Object obj) {
         if (other.getAPNSChannelResponse() != null
                 && other.getAPNSChannelResponse().equals(this.getAPNSChannelResponse()) == false)
             return false;
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApnsSandboxChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApnsSandboxChannelRequest.java
new file mode 100644
index 0000000000..a295a1d416
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApnsSandboxChannelRequest.java
@@ -0,0 +1,165 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Update an APNS sandbox channel
+ */
+public class UpdateApnsSandboxChannelRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * Apple Development Push Notification Service channel definition.
+     */
+    private APNSSandboxChannelRequest aPNSSandboxChannelRequest;
+
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Apple Development Push Notification Service channel definition.
+     *
+     * @return Apple Development Push Notification Service channel definition.
+     */
+    public APNSSandboxChannelRequest getAPNSSandboxChannelRequest() {
+        return aPNSSandboxChannelRequest;
+    }
+
+    /**
+     * Apple Development Push Notification Service channel definition.
+     *
+     * @param aPNSSandboxChannelRequest Apple Development Push Notification
+     *            Service channel definition.
+     */
+    public void setAPNSSandboxChannelRequest(APNSSandboxChannelRequest aPNSSandboxChannelRequest) {
+        this.aPNSSandboxChannelRequest = aPNSSandboxChannelRequest;
+    }
+
+    /**
+     * Apple Development Push Notification Service channel definition.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param aPNSSandboxChannelRequest Apple Development Push Notification
+     *            Service channel definition.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateApnsSandboxChannelRequest withAPNSSandboxChannelRequest(
+            APNSSandboxChannelRequest aPNSSandboxChannelRequest) {
+        this.aPNSSandboxChannelRequest = aPNSSandboxChannelRequest;
+        return this;
+    }
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateApnsSandboxChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAPNSSandboxChannelRequest() != null)
+            sb.append("APNSSandboxChannelRequest: " + getAPNSSandboxChannelRequest() + ",");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime
+                * hashCode
+                + ((getAPNSSandboxChannelRequest() == null) ? 0 : getAPNSSandboxChannelRequest()
+                        .hashCode());
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateApnsSandboxChannelRequest == false)
+            return false;
+        UpdateApnsSandboxChannelRequest other = (UpdateApnsSandboxChannelRequest) obj;
+
+        if (other.getAPNSSandboxChannelRequest() == null
+                ^ this.getAPNSSandboxChannelRequest() == null)
+            return false;
+        if (other.getAPNSSandboxChannelRequest() != null
+                && other.getAPNSSandboxChannelRequest().equals(this.getAPNSSandboxChannelRequest()) == false)
+            return false;
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApnsSandboxChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApnsSandboxChannelResult.java
new file mode 100644
index 0000000000..2c332cb5b1
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApnsSandboxChannelResult.java
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class UpdateApnsSandboxChannelResult implements Serializable {
+    /**
+     * Apple Development Push Notification Service channel definition.
+     */
+    private APNSSandboxChannelResponse aPNSSandboxChannelResponse;
+
+    /**
+     * Apple Development Push Notification Service channel definition.
+     *
+     * @return Apple Development Push Notification Service channel definition.
+     */
+    public APNSSandboxChannelResponse getAPNSSandboxChannelResponse() {
+        return aPNSSandboxChannelResponse;
+    }
+
+    /**
+     * Apple Development Push Notification Service channel definition.
+     *
+     * @param aPNSSandboxChannelResponse Apple Development Push Notification
+     *            Service channel definition.
+     */
+    public void setAPNSSandboxChannelResponse(APNSSandboxChannelResponse aPNSSandboxChannelResponse) {
+        this.aPNSSandboxChannelResponse = aPNSSandboxChannelResponse;
+    }
+
+    /**
+     * Apple Development Push Notification Service channel definition.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param aPNSSandboxChannelResponse Apple Development Push Notification
+     *            Service channel definition.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateApnsSandboxChannelResult withAPNSSandboxChannelResponse(
+            APNSSandboxChannelResponse aPNSSandboxChannelResponse) {
+        this.aPNSSandboxChannelResponse = aPNSSandboxChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAPNSSandboxChannelResponse() != null)
+            sb.append("APNSSandboxChannelResponse: " + getAPNSSandboxChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime
+                * hashCode
+                + ((getAPNSSandboxChannelResponse() == null) ? 0 : getAPNSSandboxChannelResponse()
+                        .hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateApnsSandboxChannelResult == false)
+            return false;
+        UpdateApnsSandboxChannelResult other = (UpdateApnsSandboxChannelResult) obj;
+
+        if (other.getAPNSSandboxChannelResponse() == null
+                ^ this.getAPNSSandboxChannelResponse() == null)
+            return false;
+        if (other.getAPNSSandboxChannelResponse() != null
+                && other.getAPNSSandboxChannelResponse().equals(
+                        this.getAPNSSandboxChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApplicationSettingsRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApplicationSettingsRequest.java
index f43281a879..cb152f8e67 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApplicationSettingsRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApplicationSettingsRequest.java
@@ -24,55 +24,16 @@
  */
 public class UpdateApplicationSettingsRequest extends AmazonWebServiceRequest implements
         Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
     private String applicationId;
 
     /**
-     * The new value for the writeApplicationSettingsRequest property for this
-     * object.
+     * Creating application setting request
      */
     private WriteApplicationSettingsRequest writeApplicationSettingsRequest;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public UpdateApplicationSettingsRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -109,21 +70,19 @@ public UpdateApplicationSettingsRequest withApplicationId(String applicationId)
     }
 
     /**
-     * Returns the value of the writeApplicationSettingsRequest property for
-     * this object.
+     * Creating application setting request
      *
-     * @return The value of the writeApplicationSettingsRequest property for
-     *         this object.
+     * @return Creating application setting request
      */
     public WriteApplicationSettingsRequest getWriteApplicationSettingsRequest() {
         return writeApplicationSettingsRequest;
     }
 
     /**
-     * Sets the value of writeApplicationSettingsRequest
+     * Creating application setting request
      *
-     * @param writeApplicationSettingsRequest The new value for the
-     *            writeApplicationSettingsRequest property for this object.
+     * @param writeApplicationSettingsRequest Creating application setting
+     *            request
      */
     public void setWriteApplicationSettingsRequest(
             WriteApplicationSettingsRequest writeApplicationSettingsRequest) {
@@ -131,14 +90,13 @@ public void setWriteApplicationSettingsRequest(
     }
 
     /**
-     * Sets the value of the writeApplicationSettingsRequest property for this
-     * object.
+     * Creating application setting request
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param writeApplicationSettingsRequest The new value for the
-     *            writeApplicationSettingsRequest property for this object.
+     * @param writeApplicationSettingsRequest Creating application setting
+     *            request
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -159,8 +117,6 @@ public UpdateApplicationSettingsRequest withWriteApplicationSettingsRequest(
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getWriteApplicationSettingsRequest() != null)
@@ -174,7 +130,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime
@@ -195,10 +150,6 @@ public boolean equals(Object obj) {
             return false;
         UpdateApplicationSettingsRequest other = (UpdateApplicationSettingsRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApplicationSettingsResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApplicationSettingsResult.java
index 12ff0a5a9f..672111c019 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApplicationSettingsResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateApplicationSettingsResult.java
@@ -19,70 +19,23 @@
 
 public class UpdateApplicationSettingsResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the applicationSettingsResource property for this
-     * object.
+     * Application settings.
      */
     private ApplicationSettingsResource applicationSettingsResource;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public UpdateApplicationSettingsResult withAccessControlAllowOrigin(
-            String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the applicationSettingsResource property for this
-     * object.
+     * Application settings.
      *
-     * @return The value of the applicationSettingsResource property for this
-     *         object.
+     * @return Application settings.
      */
     public ApplicationSettingsResource getApplicationSettingsResource() {
         return applicationSettingsResource;
     }
 
     /**
-     * Sets the value of applicationSettingsResource
+     * Application settings.
      *
-     * @param applicationSettingsResource The new value for the
-     *            applicationSettingsResource property for this object.
+     * @param applicationSettingsResource Application settings.
      */
     public void setApplicationSettingsResource(
             ApplicationSettingsResource applicationSettingsResource) {
@@ -90,14 +43,12 @@ public void setApplicationSettingsResource(
     }
 
     /**
-     * Sets the value of the applicationSettingsResource property for this
-     * object.
+     * Application settings.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param applicationSettingsResource The new value for the
-     *            applicationSettingsResource property for this object.
+     * @param applicationSettingsResource Application settings.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -118,8 +69,6 @@ public UpdateApplicationSettingsResult withApplicationSettingsResource(
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getApplicationSettingsResource() != null)
             sb.append("ApplicationSettingsResource: " + getApplicationSettingsResource());
         sb.append("}");
@@ -131,10 +80,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime
                 * hashCode
                 + ((getApplicationSettingsResource() == null) ? 0
@@ -153,12 +98,6 @@ public boolean equals(Object obj) {
             return false;
         UpdateApplicationSettingsResult other = (UpdateApplicationSettingsResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getApplicationSettingsResource() == null
                 ^ this.getApplicationSettingsResource() == null)
             return false;
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateBaiduChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateBaiduChannelRequest.java
new file mode 100644
index 0000000000..59a98dd34f
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateBaiduChannelRequest.java
@@ -0,0 +1,158 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Update a BAIDU GCM channel
+ */
+public class UpdateBaiduChannelRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Baidu Cloud Push credentials
+     */
+    private BaiduChannelRequest baiduChannelRequest;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateBaiduChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Baidu Cloud Push credentials
+     *
+     * @return Baidu Cloud Push credentials
+     */
+    public BaiduChannelRequest getBaiduChannelRequest() {
+        return baiduChannelRequest;
+    }
+
+    /**
+     * Baidu Cloud Push credentials
+     *
+     * @param baiduChannelRequest Baidu Cloud Push credentials
+     */
+    public void setBaiduChannelRequest(BaiduChannelRequest baiduChannelRequest) {
+        this.baiduChannelRequest = baiduChannelRequest;
+    }
+
+    /**
+     * Baidu Cloud Push credentials
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param baiduChannelRequest Baidu Cloud Push credentials
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateBaiduChannelRequest withBaiduChannelRequest(BaiduChannelRequest baiduChannelRequest) {
+        this.baiduChannelRequest = baiduChannelRequest;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getBaiduChannelRequest() != null)
+            sb.append("BaiduChannelRequest: " + getBaiduChannelRequest());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime * hashCode
+                + ((getBaiduChannelRequest() == null) ? 0 : getBaiduChannelRequest().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateBaiduChannelRequest == false)
+            return false;
+        UpdateBaiduChannelRequest other = (UpdateBaiduChannelRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        if (other.getBaiduChannelRequest() == null ^ this.getBaiduChannelRequest() == null)
+            return false;
+        if (other.getBaiduChannelRequest() != null
+                && other.getBaiduChannelRequest().equals(this.getBaiduChannelRequest()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateBaiduChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateBaiduChannelResult.java
new file mode 100644
index 0000000000..ea143ec23a
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateBaiduChannelResult.java
@@ -0,0 +1,105 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class UpdateBaiduChannelResult implements Serializable {
+    /**
+     * Baidu Cloud Messaging channel definition
+     */
+    private BaiduChannelResponse baiduChannelResponse;
+
+    /**
+     * Baidu Cloud Messaging channel definition
+     *
+     * @return Baidu Cloud Messaging channel definition
+     */
+    public BaiduChannelResponse getBaiduChannelResponse() {
+        return baiduChannelResponse;
+    }
+
+    /**
+     * Baidu Cloud Messaging channel definition
+     *
+     * @param baiduChannelResponse Baidu Cloud Messaging channel definition
+     */
+    public void setBaiduChannelResponse(BaiduChannelResponse baiduChannelResponse) {
+        this.baiduChannelResponse = baiduChannelResponse;
+    }
+
+    /**
+     * Baidu Cloud Messaging channel definition
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param baiduChannelResponse Baidu Cloud Messaging channel definition
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateBaiduChannelResult withBaiduChannelResponse(
+            BaiduChannelResponse baiduChannelResponse) {
+        this.baiduChannelResponse = baiduChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getBaiduChannelResponse() != null)
+            sb.append("BaiduChannelResponse: " + getBaiduChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getBaiduChannelResponse() == null) ? 0 : getBaiduChannelResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateBaiduChannelResult == false)
+            return false;
+        UpdateBaiduChannelResult other = (UpdateBaiduChannelResult) obj;
+
+        if (other.getBaiduChannelResponse() == null ^ this.getBaiduChannelResponse() == null)
+            return false;
+        if (other.getBaiduChannelResponse() != null
+                && other.getBaiduChannelResponse().equals(this.getBaiduChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateCampaignRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateCampaignRequest.java
index 84185b4812..c42a752d56 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateCampaignRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateCampaignRequest.java
@@ -23,11 +23,6 @@
  * Use to update a campaign.
  */
 public class UpdateCampaignRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
@@ -39,43 +34,10 @@
     private String campaignId;
 
     /**
-     * The new value for the writeCampaignRequest property for this object.
+     * Used to create a campaign.
      */
     private WriteCampaignRequest writeCampaignRequest;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public UpdateCampaignRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -147,32 +109,30 @@ public UpdateCampaignRequest withCampaignId(String campaignId) {
     }
 
     /**
-     * Returns the value of the writeCampaignRequest property for this object.
+     * Used to create a campaign.
      *
-     * @return The value of the writeCampaignRequest property for this object.
+     * @return Used to create a campaign.
      */
     public WriteCampaignRequest getWriteCampaignRequest() {
         return writeCampaignRequest;
     }
 
     /**
-     * Sets the value of writeCampaignRequest
+     * Used to create a campaign.
      *
-     * @param writeCampaignRequest The new value for the writeCampaignRequest
-     *            property for this object.
+     * @param writeCampaignRequest Used to create a campaign.
      */
     public void setWriteCampaignRequest(WriteCampaignRequest writeCampaignRequest) {
         this.writeCampaignRequest = writeCampaignRequest;
     }
 
     /**
-     * Sets the value of the writeCampaignRequest property for this object.
+     * Used to create a campaign.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param writeCampaignRequest The new value for the writeCampaignRequest
-     *            property for this object.
+     * @param writeCampaignRequest Used to create a campaign.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -192,8 +152,6 @@ public UpdateCampaignRequest withWriteCampaignRequest(WriteCampaignRequest write
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getCampaignId() != null)
@@ -209,7 +167,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getCampaignId() == null) ? 0 : getCampaignId().hashCode());
@@ -229,10 +186,6 @@ public boolean equals(Object obj) {
             return false;
         UpdateCampaignRequest other = (UpdateCampaignRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateCampaignResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateCampaignResult.java
index 59ef0674e5..26d3c1ec81 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateCampaignResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateCampaignResult.java
@@ -19,79 +19,35 @@
 
 public class UpdateCampaignResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the campaignResponse property for this object.
+     * Campaign definition
      */
     private CampaignResponse campaignResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Campaign definition
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public UpdateCampaignResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the campaignResponse property for this object.
-     *
-     * @return The value of the campaignResponse property for this object.
+     * @return Campaign definition
      */
     public CampaignResponse getCampaignResponse() {
         return campaignResponse;
     }
 
     /**
-     * Sets the value of campaignResponse
+     * Campaign definition
      *
-     * @param campaignResponse The new value for the campaignResponse property
-     *            for this object.
+     * @param campaignResponse Campaign definition
      */
     public void setCampaignResponse(CampaignResponse campaignResponse) {
         this.campaignResponse = campaignResponse;
     }
 
     /**
-     * Sets the value of the campaignResponse property for this object.
+     * Campaign definition
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param campaignResponse The new value for the campaignResponse property
-     *            for this object.
+     * @param campaignResponse Campaign definition
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public UpdateCampaignResult withCampaignResponse(CampaignResponse campaignRespon
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getCampaignResponse() != null)
             sb.append("CampaignResponse: " + getCampaignResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getCampaignResponse() == null) ? 0 : getCampaignResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         UpdateCampaignResult other = (UpdateCampaignResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getCampaignResponse() == null ^ this.getCampaignResponse() == null)
             return false;
         if (other.getCampaignResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEmailChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEmailChannelRequest.java
new file mode 100644
index 0000000000..eaa01b291c
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEmailChannelRequest.java
@@ -0,0 +1,158 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Update an email channel
+ */
+public class UpdateEmailChannelRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * Email Channel Request
+     */
+    private EmailChannelRequest emailChannelRequest;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateEmailChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * Email Channel Request
+     *
+     * @return Email Channel Request
+     */
+    public EmailChannelRequest getEmailChannelRequest() {
+        return emailChannelRequest;
+    }
+
+    /**
+     * Email Channel Request
+     *
+     * @param emailChannelRequest Email Channel Request
+     */
+    public void setEmailChannelRequest(EmailChannelRequest emailChannelRequest) {
+        this.emailChannelRequest = emailChannelRequest;
+    }
+
+    /**
+     * Email Channel Request
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param emailChannelRequest Email Channel Request
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateEmailChannelRequest withEmailChannelRequest(EmailChannelRequest emailChannelRequest) {
+        this.emailChannelRequest = emailChannelRequest;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getEmailChannelRequest() != null)
+            sb.append("EmailChannelRequest: " + getEmailChannelRequest());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime * hashCode
+                + ((getEmailChannelRequest() == null) ? 0 : getEmailChannelRequest().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateEmailChannelRequest == false)
+            return false;
+        UpdateEmailChannelRequest other = (UpdateEmailChannelRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        if (other.getEmailChannelRequest() == null ^ this.getEmailChannelRequest() == null)
+            return false;
+        if (other.getEmailChannelRequest() != null
+                && other.getEmailChannelRequest().equals(this.getEmailChannelRequest()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEmailChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEmailChannelResult.java
new file mode 100644
index 0000000000..fcbc65d3ea
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEmailChannelResult.java
@@ -0,0 +1,105 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class UpdateEmailChannelResult implements Serializable {
+    /**
+     * Email Channel Response.
+     */
+    private EmailChannelResponse emailChannelResponse;
+
+    /**
+     * Email Channel Response.
+     *
+     * @return Email Channel Response.
+     */
+    public EmailChannelResponse getEmailChannelResponse() {
+        return emailChannelResponse;
+    }
+
+    /**
+     * Email Channel Response.
+     *
+     * @param emailChannelResponse Email Channel Response.
+     */
+    public void setEmailChannelResponse(EmailChannelResponse emailChannelResponse) {
+        this.emailChannelResponse = emailChannelResponse;
+    }
+
+    /**
+     * Email Channel Response.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param emailChannelResponse Email Channel Response.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateEmailChannelResult withEmailChannelResponse(
+            EmailChannelResponse emailChannelResponse) {
+        this.emailChannelResponse = emailChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getEmailChannelResponse() != null)
+            sb.append("EmailChannelResponse: " + getEmailChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getEmailChannelResponse() == null) ? 0 : getEmailChannelResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateEmailChannelResult == false)
+            return false;
+        UpdateEmailChannelResult other = (UpdateEmailChannelResult) obj;
+
+        if (other.getEmailChannelResponse() == null ^ this.getEmailChannelResponse() == null)
+            return false;
+        if (other.getEmailChannelResponse() != null
+                && other.getEmailChannelResponse().equals(this.getEmailChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointRequest.java
index db99b7c1d0..0e8dfa315e 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointRequest.java
@@ -23,11 +23,6 @@
  * Use to update an endpoint.
  */
 public class UpdateEndpointRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
@@ -39,43 +34,10 @@
     private String endpointId;
 
     /**
-     * The new value for the endpointRequest property for this object.
+     * Endpoint update request
      */
     private EndpointRequest endpointRequest;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public UpdateEndpointRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -147,32 +109,30 @@ public UpdateEndpointRequest withEndpointId(String endpointId) {
     }
 
     /**
-     * Returns the value of the endpointRequest property for this object.
+     * Endpoint update request
      *
-     * @return The value of the endpointRequest property for this object.
+     * @return Endpoint update request
      */
     public EndpointRequest getEndpointRequest() {
         return endpointRequest;
     }
 
     /**
-     * Sets the value of endpointRequest
+     * Endpoint update request
      *
-     * @param endpointRequest The new value for the endpointRequest property for
-     *            this object.
+     * @param endpointRequest Endpoint update request
      */
     public void setEndpointRequest(EndpointRequest endpointRequest) {
         this.endpointRequest = endpointRequest;
     }
 
     /**
-     * Sets the value of the endpointRequest property for this object.
+     * Endpoint update request
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param endpointRequest The new value for the endpointRequest property for
-     *            this object.
+     * @param endpointRequest Endpoint update request
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -192,8 +152,6 @@ public UpdateEndpointRequest withEndpointRequest(EndpointRequest endpointRequest
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getEndpointId() != null)
@@ -209,7 +167,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getEndpointId() == null) ? 0 : getEndpointId().hashCode());
@@ -229,10 +186,6 @@ public boolean equals(Object obj) {
             return false;
         UpdateEndpointRequest other = (UpdateEndpointRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointResult.java
index 24e60706f4..e879154318 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointResult.java
@@ -19,79 +19,35 @@
 
 public class UpdateEndpointResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the messageBody property for this object.
+     * Simple message object.
      */
     private MessageBody messageBody;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Simple message object.
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public UpdateEndpointResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the messageBody property for this object.
-     *
-     * @return The value of the messageBody property for this object.
+     * @return Simple message object.
      */
     public MessageBody getMessageBody() {
         return messageBody;
     }
 
     /**
-     * Sets the value of messageBody
+     * Simple message object.
      *
-     * @param messageBody The new value for the messageBody property for this
-     *            object.
+     * @param messageBody Simple message object.
      */
     public void setMessageBody(MessageBody messageBody) {
         this.messageBody = messageBody;
     }
 
     /**
-     * Sets the value of the messageBody property for this object.
+     * Simple message object.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param messageBody The new value for the messageBody property for this
-     *            object.
+     * @param messageBody Simple message object.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public UpdateEndpointResult withMessageBody(MessageBody messageBody) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getMessageBody() != null)
             sb.append("MessageBody: " + getMessageBody());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getMessageBody() == null) ? 0 : getMessageBody().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         UpdateEndpointResult other = (UpdateEndpointResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getMessageBody() == null ^ this.getMessageBody() == null)
             return false;
         if (other.getMessageBody() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointsBatchRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointsBatchRequest.java
index 228c919085..85ad711430 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointsBatchRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointsBatchRequest.java
@@ -20,57 +20,19 @@
 import com.amazonaws.AmazonWebServiceRequest;
 
 /**
- * Use to update your endpoints.
+ * Use to update a batch of endpoints.
  */
 public class UpdateEndpointsBatchRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
     private String applicationId;
 
     /**
-     * The new value for the endpointBatchRequest property for this object.
+     * Endpoint batch update request.
      */
     private EndpointBatchRequest endpointBatchRequest;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public UpdateEndpointsBatchRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -107,32 +69,30 @@ public UpdateEndpointsBatchRequest withApplicationId(String applicationId) {
     }
 
     /**
-     * Returns the value of the endpointBatchRequest property for this object.
+     * Endpoint batch update request.
      *
-     * @return The value of the endpointBatchRequest property for this object.
+     * @return Endpoint batch update request.
      */
     public EndpointBatchRequest getEndpointBatchRequest() {
         return endpointBatchRequest;
     }
 
     /**
-     * Sets the value of endpointBatchRequest
+     * Endpoint batch update request.
      *
-     * @param endpointBatchRequest The new value for the endpointBatchRequest
-     *            property for this object.
+     * @param endpointBatchRequest Endpoint batch update request.
      */
     public void setEndpointBatchRequest(EndpointBatchRequest endpointBatchRequest) {
         this.endpointBatchRequest = endpointBatchRequest;
     }
 
     /**
-     * Sets the value of the endpointBatchRequest property for this object.
+     * Endpoint batch update request.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param endpointBatchRequest The new value for the endpointBatchRequest
-     *            property for this object.
+     * @param endpointBatchRequest Endpoint batch update request.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -153,8 +113,6 @@ public UpdateEndpointsBatchRequest withEndpointBatchRequest(
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getEndpointBatchRequest() != null)
@@ -168,7 +126,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode
@@ -187,10 +144,6 @@ public boolean equals(Object obj) {
             return false;
         UpdateEndpointsBatchRequest other = (UpdateEndpointsBatchRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointsBatchResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointsBatchResult.java
index 8c4251d4ce..ba0da768db 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointsBatchResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateEndpointsBatchResult.java
@@ -19,79 +19,35 @@
 
 public class UpdateEndpointsBatchResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the messageBody property for this object.
+     * Simple message object.
      */
     private MessageBody messageBody;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Simple message object.
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public UpdateEndpointsBatchResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the messageBody property for this object.
-     *
-     * @return The value of the messageBody property for this object.
+     * @return Simple message object.
      */
     public MessageBody getMessageBody() {
         return messageBody;
     }
 
     /**
-     * Sets the value of messageBody
+     * Simple message object.
      *
-     * @param messageBody The new value for the messageBody property for this
-     *            object.
+     * @param messageBody Simple message object.
      */
     public void setMessageBody(MessageBody messageBody) {
         this.messageBody = messageBody;
     }
 
     /**
-     * Sets the value of the messageBody property for this object.
+     * Simple message object.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param messageBody The new value for the messageBody property for this
-     *            object.
+     * @param messageBody Simple message object.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public UpdateEndpointsBatchResult withMessageBody(MessageBody messageBody) {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getMessageBody() != null)
             sb.append("MessageBody: " + getMessageBody());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getMessageBody() == null) ? 0 : getMessageBody().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         UpdateEndpointsBatchResult other = (UpdateEndpointsBatchResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getMessageBody() == null ^ this.getMessageBody() == null)
             return false;
         if (other.getMessageBody() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateGcmChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateGcmChannelRequest.java
index 2be299fdad..6293d647ec 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateGcmChannelRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateGcmChannelRequest.java
@@ -23,54 +23,16 @@
  * Use to update the GCM channel for an app.
  */
 public class UpdateGcmChannelRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
     private String applicationId;
 
     /**
-     * The new value for the gCMChannelRequest property for this object.
+     * Google Cloud Messaging credentials
      */
     private GCMChannelRequest gCMChannelRequest;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public UpdateGcmChannelRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -107,32 +69,30 @@ public UpdateGcmChannelRequest withApplicationId(String applicationId) {
     }
 
     /**
-     * Returns the value of the gCMChannelRequest property for this object.
+     * Google Cloud Messaging credentials
      *
-     * @return The value of the gCMChannelRequest property for this object.
+     * @return Google Cloud Messaging credentials
      */
     public GCMChannelRequest getGCMChannelRequest() {
         return gCMChannelRequest;
     }
 
     /**
-     * Sets the value of gCMChannelRequest
+     * Google Cloud Messaging credentials
      *
-     * @param gCMChannelRequest The new value for the gCMChannelRequest property
-     *            for this object.
+     * @param gCMChannelRequest Google Cloud Messaging credentials
      */
     public void setGCMChannelRequest(GCMChannelRequest gCMChannelRequest) {
         this.gCMChannelRequest = gCMChannelRequest;
     }
 
     /**
-     * Sets the value of the gCMChannelRequest property for this object.
+     * Google Cloud Messaging credentials
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param gCMChannelRequest The new value for the gCMChannelRequest property
-     *            for this object.
+     * @param gCMChannelRequest Google Cloud Messaging credentials
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -152,8 +112,6 @@ public UpdateGcmChannelRequest withGCMChannelRequest(GCMChannelRequest gCMChanne
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getGCMChannelRequest() != null)
@@ -167,7 +125,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode
@@ -186,10 +143,6 @@ public boolean equals(Object obj) {
             return false;
         UpdateGcmChannelRequest other = (UpdateGcmChannelRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateGcmChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateGcmChannelResult.java
index b4d7506c88..ff13ceff8c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateGcmChannelResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateGcmChannelResult.java
@@ -19,79 +19,35 @@
 
 public class UpdateGcmChannelResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the gCMChannelResponse property for this object.
+     * Google Cloud Messaging channel definition
      */
     private GCMChannelResponse gCMChannelResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Google Cloud Messaging channel definition
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public UpdateGcmChannelResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the gCMChannelResponse property for this object.
-     *
-     * @return The value of the gCMChannelResponse property for this object.
+     * @return Google Cloud Messaging channel definition
      */
     public GCMChannelResponse getGCMChannelResponse() {
         return gCMChannelResponse;
     }
 
     /**
-     * Sets the value of gCMChannelResponse
+     * Google Cloud Messaging channel definition
      *
-     * @param gCMChannelResponse The new value for the gCMChannelResponse
-     *            property for this object.
+     * @param gCMChannelResponse Google Cloud Messaging channel definition
      */
     public void setGCMChannelResponse(GCMChannelResponse gCMChannelResponse) {
         this.gCMChannelResponse = gCMChannelResponse;
     }
 
     /**
-     * Sets the value of the gCMChannelResponse property for this object.
+     * Google Cloud Messaging channel definition
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param gCMChannelResponse The new value for the gCMChannelResponse
-     *            property for this object.
+     * @param gCMChannelResponse Google Cloud Messaging channel definition
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public UpdateGcmChannelResult withGCMChannelResponse(GCMChannelResponse gCMChann
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getGCMChannelResponse() != null)
             sb.append("GCMChannelResponse: " + getGCMChannelResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getGCMChannelResponse() == null) ? 0 : getGCMChannelResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         UpdateGcmChannelResult other = (UpdateGcmChannelResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getGCMChannelResponse() == null ^ this.getGCMChannelResponse() == null)
             return false;
         if (other.getGCMChannelResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateSegmentRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateSegmentRequest.java
index cb11b0a918..3715147646 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateSegmentRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateSegmentRequest.java
@@ -23,11 +23,6 @@
  * Use to update a segment.
  */
 public class UpdateSegmentRequest extends AmazonWebServiceRequest implements Serializable {
-    /**
-     * The new value for the accept property for this object.
-     */
-    private String accept;
-
     /**
      * The new value for the applicationId property for this object.
      */
@@ -39,43 +34,10 @@
     private String segmentId;
 
     /**
-     * The new value for the writeSegmentRequest property for this object.
+     * Segment definition.
      */
     private WriteSegmentRequest writeSegmentRequest;
 
-    /**
-     * Returns the value of the accept property for this object.
-     *
-     * @return The value of the accept property for this object.
-     */
-    public String getAccept() {
-        return accept;
-    }
-
-    /**
-     * Sets the value of accept
-     *
-     * @param accept The new value for the accept property for this object.
-     */
-    public void setAccept(String accept) {
-        this.accept = accept;
-    }
-
-    /**
-     * Sets the value of the accept property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
-     *
-     * @param accept The new value for the accept property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public UpdateSegmentRequest withAccept(String accept) {
-        this.accept = accept;
-        return this;
-    }
-
     /**
      * Returns the value of the applicationId property for this object.
      *
@@ -147,32 +109,30 @@ public UpdateSegmentRequest withSegmentId(String segmentId) {
     }
 
     /**
-     * Returns the value of the writeSegmentRequest property for this object.
+     * Segment definition.
      *
-     * @return The value of the writeSegmentRequest property for this object.
+     * @return Segment definition.
      */
     public WriteSegmentRequest getWriteSegmentRequest() {
         return writeSegmentRequest;
     }
 
     /**
-     * Sets the value of writeSegmentRequest
+     * Segment definition.
      *
-     * @param writeSegmentRequest The new value for the writeSegmentRequest
-     *            property for this object.
+     * @param writeSegmentRequest Segment definition.
      */
     public void setWriteSegmentRequest(WriteSegmentRequest writeSegmentRequest) {
         this.writeSegmentRequest = writeSegmentRequest;
     }
 
     /**
-     * Sets the value of the writeSegmentRequest property for this object.
+     * Segment definition.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param writeSegmentRequest The new value for the writeSegmentRequest
-     *            property for this object.
+     * @param writeSegmentRequest Segment definition.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -192,8 +152,6 @@ public UpdateSegmentRequest withWriteSegmentRequest(WriteSegmentRequest writeSeg
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccept() != null)
-            sb.append("Accept: " + getAccept() + ",");
         if (getApplicationId() != null)
             sb.append("ApplicationId: " + getApplicationId() + ",");
         if (getSegmentId() != null)
@@ -209,7 +167,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         hashCode = prime * hashCode
                 + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
         hashCode = prime * hashCode + ((getSegmentId() == null) ? 0 : getSegmentId().hashCode());
@@ -229,10 +186,6 @@ public boolean equals(Object obj) {
             return false;
         UpdateSegmentRequest other = (UpdateSegmentRequest) obj;
 
-        if (other.getAccept() == null ^ this.getAccept() == null)
-            return false;
-        if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
-            return false;
         if (other.getApplicationId() == null ^ this.getApplicationId() == null)
             return false;
         if (other.getApplicationId() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateSegmentResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateSegmentResult.java
index d288d00256..c78d8c1c1a 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateSegmentResult.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateSegmentResult.java
@@ -19,79 +19,35 @@
 
 public class UpdateSegmentResult implements Serializable {
     /**
-     * The new value for the accessControlAllowOrigin property for this object.
-     */
-    private String accessControlAllowOrigin;
-
-    /**
-     * The new value for the segmentResponse property for this object.
+     * Segment definition.
      */
     private SegmentResponse segmentResponse;
 
     /**
-     * Returns the value of the accessControlAllowOrigin property for this
-     * object.
-     *
-     * @return The value of the accessControlAllowOrigin property for this
-     *         object.
-     */
-    public String getAccessControlAllowOrigin() {
-        return accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of accessControlAllowOrigin
-     *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     */
-    public void setAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-    }
-
-    /**
-     * Sets the value of the accessControlAllowOrigin property for this object.
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
+     * Segment definition.
      *
-     * @param accessControlAllowOrigin The new value for the
-     *            accessControlAllowOrigin property for this object.
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
-     */
-    public UpdateSegmentResult withAccessControlAllowOrigin(String accessControlAllowOrigin) {
-        this.accessControlAllowOrigin = accessControlAllowOrigin;
-        return this;
-    }
-
-    /**
-     * Returns the value of the segmentResponse property for this object.
-     *
-     * @return The value of the segmentResponse property for this object.
+     * @return Segment definition.
      */
     public SegmentResponse getSegmentResponse() {
         return segmentResponse;
     }
 
     /**
-     * Sets the value of segmentResponse
+     * Segment definition.
      *
-     * @param segmentResponse The new value for the segmentResponse property for
-     *            this object.
+     * @param segmentResponse Segment definition.
      */
     public void setSegmentResponse(SegmentResponse segmentResponse) {
         this.segmentResponse = segmentResponse;
     }
 
     /**
-     * Sets the value of the segmentResponse property for this object.
+     * Segment definition.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param segmentResponse The new value for the segmentResponse property for
-     *            this object.
+     * @param segmentResponse Segment definition.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -111,8 +67,6 @@ public UpdateSegmentResult withSegmentResponse(SegmentResponse segmentResponse)
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-        if (getAccessControlAllowOrigin() != null)
-            sb.append("AccessControlAllowOrigin: " + getAccessControlAllowOrigin() + ",");
         if (getSegmentResponse() != null)
             sb.append("SegmentResponse: " + getSegmentResponse());
         sb.append("}");
@@ -124,10 +78,6 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
-        hashCode = prime
-                * hashCode
-                + ((getAccessControlAllowOrigin() == null) ? 0 : getAccessControlAllowOrigin()
-                        .hashCode());
         hashCode = prime * hashCode
                 + ((getSegmentResponse() == null) ? 0 : getSegmentResponse().hashCode());
         return hashCode;
@@ -144,12 +94,6 @@ public boolean equals(Object obj) {
             return false;
         UpdateSegmentResult other = (UpdateSegmentResult) obj;
 
-        if (other.getAccessControlAllowOrigin() == null
-                ^ this.getAccessControlAllowOrigin() == null)
-            return false;
-        if (other.getAccessControlAllowOrigin() != null
-                && other.getAccessControlAllowOrigin().equals(this.getAccessControlAllowOrigin()) == false)
-            return false;
         if (other.getSegmentResponse() == null ^ this.getSegmentResponse() == null)
             return false;
         if (other.getSegmentResponse() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateSmsChannelRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateSmsChannelRequest.java
new file mode 100644
index 0000000000..71edfe1f9b
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateSmsChannelRequest.java
@@ -0,0 +1,158 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * Update an SMS channel
+ */
+public class UpdateSmsChannelRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * The new value for the applicationId property for this object.
+     */
+    private String applicationId;
+
+    /**
+     * SMS Channel Request
+     */
+    private SMSChannelRequest sMSChannelRequest;
+
+    /**
+     * Returns the value of the applicationId property for this object.
+     *
+     * @return The value of the applicationId property for this object.
+     */
+    public String getApplicationId() {
+        return applicationId;
+    }
+
+    /**
+     * Sets the value of applicationId
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     */
+    public void setApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+    }
+
+    /**
+     * Sets the value of the applicationId property for this object.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param applicationId The new value for the applicationId property for
+     *            this object.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateSmsChannelRequest withApplicationId(String applicationId) {
+        this.applicationId = applicationId;
+        return this;
+    }
+
+    /**
+     * SMS Channel Request
+     *
+     * @return SMS Channel Request
+     */
+    public SMSChannelRequest getSMSChannelRequest() {
+        return sMSChannelRequest;
+    }
+
+    /**
+     * SMS Channel Request
+     *
+     * @param sMSChannelRequest SMS Channel Request
+     */
+    public void setSMSChannelRequest(SMSChannelRequest sMSChannelRequest) {
+        this.sMSChannelRequest = sMSChannelRequest;
+    }
+
+    /**
+     * SMS Channel Request
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param sMSChannelRequest SMS Channel Request
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateSmsChannelRequest withSMSChannelRequest(SMSChannelRequest sMSChannelRequest) {
+        this.sMSChannelRequest = sMSChannelRequest;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getApplicationId() != null)
+            sb.append("ApplicationId: " + getApplicationId() + ",");
+        if (getSMSChannelRequest() != null)
+            sb.append("SMSChannelRequest: " + getSMSChannelRequest());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getApplicationId() == null) ? 0 : getApplicationId().hashCode());
+        hashCode = prime * hashCode
+                + ((getSMSChannelRequest() == null) ? 0 : getSMSChannelRequest().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateSmsChannelRequest == false)
+            return false;
+        UpdateSmsChannelRequest other = (UpdateSmsChannelRequest) obj;
+
+        if (other.getApplicationId() == null ^ this.getApplicationId() == null)
+            return false;
+        if (other.getApplicationId() != null
+                && other.getApplicationId().equals(this.getApplicationId()) == false)
+            return false;
+        if (other.getSMSChannelRequest() == null ^ this.getSMSChannelRequest() == null)
+            return false;
+        if (other.getSMSChannelRequest() != null
+                && other.getSMSChannelRequest().equals(this.getSMSChannelRequest()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateSmsChannelResult.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateSmsChannelResult.java
new file mode 100644
index 0000000000..aa278b0137
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/UpdateSmsChannelResult.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+public class UpdateSmsChannelResult implements Serializable {
+    /**
+     * SMS Channel Response.
+     */
+    private SMSChannelResponse sMSChannelResponse;
+
+    /**
+     * SMS Channel Response.
+     *
+     * @return SMS Channel Response.
+     */
+    public SMSChannelResponse getSMSChannelResponse() {
+        return sMSChannelResponse;
+    }
+
+    /**
+     * SMS Channel Response.
+     *
+     * @param sMSChannelResponse SMS Channel Response.
+     */
+    public void setSMSChannelResponse(SMSChannelResponse sMSChannelResponse) {
+        this.sMSChannelResponse = sMSChannelResponse;
+    }
+
+    /**
+     * SMS Channel Response.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param sMSChannelResponse SMS Channel Response.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateSmsChannelResult withSMSChannelResponse(SMSChannelResponse sMSChannelResponse) {
+        this.sMSChannelResponse = sMSChannelResponse;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getSMSChannelResponse() != null)
+            sb.append("SMSChannelResponse: " + getSMSChannelResponse());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getSMSChannelResponse() == null) ? 0 : getSMSChannelResponse().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateSmsChannelResult == false)
+            return false;
+        UpdateSmsChannelResult other = (UpdateSmsChannelResult) obj;
+
+        if (other.getSMSChannelResponse() == null ^ this.getSMSChannelResponse() == null)
+            return false;
+        if (other.getSMSChannelResponse() != null
+                && other.getSMSChannelResponse().equals(this.getSMSChannelResponse()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteApplicationSettingsRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteApplicationSettingsRequest.java
index db85651634..f21a2387bc 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteApplicationSettingsRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteApplicationSettingsRequest.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Creating application setting request
+ */
 public class WriteApplicationSettingsRequest implements Serializable {
     /**
      * The default campaign limits for the app. These limits apply to each
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteCampaignRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteCampaignRequest.java
index f3ff1bb2d2..efc0ad61d7 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteCampaignRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteCampaignRequest.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Used to create a campaign.
+ */
 public class WriteCampaignRequest implements Serializable {
     /**
      * Treatments that are defined in addition to the default treatment.
@@ -70,6 +73,11 @@
      */
     private Integer segmentVersion;
 
+    /**
+     * Whether or not to enable trace logging for the campaign. Undocumented
+     */
+    private Boolean trace;
+
     /**
      * A custom description for the treatment.
      */
@@ -474,6 +482,52 @@ public WriteCampaignRequest withSegmentVersion(Integer segmentVersion) {
         return this;
     }
 
+    /**
+     * Whether or not to enable trace logging for the campaign. Undocumented
+     *
+     * @return Whether or not to enable trace logging for the campaign.
+     *         Undocumented
+     */
+    public Boolean isTrace() {
+        return trace;
+    }
+
+    /**
+     * Whether or not to enable trace logging for the campaign. Undocumented
+     *
+     * @return Whether or not to enable trace logging for the campaign.
+     *         Undocumented
+     */
+    public Boolean getTrace() {
+        return trace;
+    }
+
+    /**
+     * Whether or not to enable trace logging for the campaign. Undocumented
+     *
+     * @param trace Whether or not to enable trace logging for the campaign.
+     *            Undocumented
+     */
+    public void setTrace(Boolean trace) {
+        this.trace = trace;
+    }
+
+    /**
+     * Whether or not to enable trace logging for the campaign. Undocumented
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param trace Whether or not to enable trace logging for the campaign.
+     *            Undocumented
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public WriteCampaignRequest withTrace(Boolean trace) {
+        this.trace = trace;
+        return this;
+    }
+
     /**
      * A custom description for the treatment.
      *
@@ -574,6 +628,8 @@ public String toString() {
             sb.append("SegmentId: " + getSegmentId() + ",");
         if (getSegmentVersion() != null)
             sb.append("SegmentVersion: " + getSegmentVersion() + ",");
+        if (getTrace() != null)
+            sb.append("Trace: " + getTrace() + ",");
         if (getTreatmentDescription() != null)
             sb.append("TreatmentDescription: " + getTreatmentDescription() + ",");
         if (getTreatmentName() != null)
@@ -602,6 +658,7 @@ public int hashCode() {
         hashCode = prime * hashCode + ((getSegmentId() == null) ? 0 : getSegmentId().hashCode());
         hashCode = prime * hashCode
                 + ((getSegmentVersion() == null) ? 0 : getSegmentVersion().hashCode());
+        hashCode = prime * hashCode + ((getTrace() == null) ? 0 : getTrace().hashCode());
         hashCode = prime * hashCode
                 + ((getTreatmentDescription() == null) ? 0 : getTreatmentDescription().hashCode());
         hashCode = prime * hashCode
@@ -666,6 +723,10 @@ public boolean equals(Object obj) {
         if (other.getSegmentVersion() != null
                 && other.getSegmentVersion().equals(this.getSegmentVersion()) == false)
             return false;
+        if (other.getTrace() == null ^ this.getTrace() == null)
+            return false;
+        if (other.getTrace() != null && other.getTrace().equals(this.getTrace()) == false)
+            return false;
         if (other.getTreatmentDescription() == null ^ this.getTreatmentDescription() == null)
             return false;
         if (other.getTreatmentDescription() != null
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteEventStream.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteEventStream.java
new file mode 100644
index 0000000000..b30c12e1d6
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteEventStream.java
@@ -0,0 +1,185 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model;
+
+import java.io.Serializable;
+
+/**
+ * Request to save an EventStream.
+ */
+public class WriteEventStream implements Serializable {
+    /**
+     * The Amazon Resource Name (ARN) of the Amazon Kinesis stream or Firehose
+     * delivery stream to which you want to publish events. Firehose ARN:
+     * arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME Kinesis
+     * ARN: arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME
+     */
+    private String destinationStreamArn;
+
+    /**
+     * The IAM role that authorizes Amazon Pinpoint to publish events to the
+     * stream in your account.
+     */
+    private String roleArn;
+
+    /**
+     * The Amazon Resource Name (ARN) of the Amazon Kinesis stream or Firehose
+     * delivery stream to which you want to publish events. Firehose ARN:
+     * arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME Kinesis
+     * ARN: arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME
+     *
+     * @return The Amazon Resource Name (ARN) of the Amazon Kinesis stream or
+     *         Firehose delivery stream to which you want to publish events.
+     *         Firehose ARN:
+     *         arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME
+     *         Kinesis ARN: arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME
+     */
+    public String getDestinationStreamArn() {
+        return destinationStreamArn;
+    }
+
+    /**
+     * The Amazon Resource Name (ARN) of the Amazon Kinesis stream or Firehose
+     * delivery stream to which you want to publish events. Firehose ARN:
+     * arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME Kinesis
+     * ARN: arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME
+     *
+     * @param destinationStreamArn The Amazon Resource Name (ARN) of the Amazon
+     *            Kinesis stream or Firehose delivery stream to which you want
+     *            to publish events. Firehose ARN:
+     *            arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME
+     *            Kinesis ARN:
+     *            arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME
+     */
+    public void setDestinationStreamArn(String destinationStreamArn) {
+        this.destinationStreamArn = destinationStreamArn;
+    }
+
+    /**
+     * The Amazon Resource Name (ARN) of the Amazon Kinesis stream or Firehose
+     * delivery stream to which you want to publish events. Firehose ARN:
+     * arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME Kinesis
+     * ARN: arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param destinationStreamArn The Amazon Resource Name (ARN) of the Amazon
+     *            Kinesis stream or Firehose delivery stream to which you want
+     *            to publish events. Firehose ARN:
+     *            arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME
+     *            Kinesis ARN:
+     *            arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public WriteEventStream withDestinationStreamArn(String destinationStreamArn) {
+        this.destinationStreamArn = destinationStreamArn;
+        return this;
+    }
+
+    /**
+     * The IAM role that authorizes Amazon Pinpoint to publish events to the
+     * stream in your account.
+     *
+     * @return The IAM role that authorizes Amazon Pinpoint to publish events to
+     *         the stream in your account.
+     */
+    public String getRoleArn() {
+        return roleArn;
+    }
+
+    /**
+     * The IAM role that authorizes Amazon Pinpoint to publish events to the
+     * stream in your account.
+     *
+     * @param roleArn The IAM role that authorizes Amazon Pinpoint to publish
+     *            events to the stream in your account.
+     */
+    public void setRoleArn(String roleArn) {
+        this.roleArn = roleArn;
+    }
+
+    /**
+     * The IAM role that authorizes Amazon Pinpoint to publish events to the
+     * stream in your account.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param roleArn The IAM role that authorizes Amazon Pinpoint to publish
+     *            events to the stream in your account.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public WriteEventStream withRoleArn(String roleArn) {
+        this.roleArn = roleArn;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getDestinationStreamArn() != null)
+            sb.append("DestinationStreamArn: " + getDestinationStreamArn() + ",");
+        if (getRoleArn() != null)
+            sb.append("RoleArn: " + getRoleArn());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getDestinationStreamArn() == null) ? 0 : getDestinationStreamArn().hashCode());
+        hashCode = prime * hashCode + ((getRoleArn() == null) ? 0 : getRoleArn().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof WriteEventStream == false)
+            return false;
+        WriteEventStream other = (WriteEventStream) obj;
+
+        if (other.getDestinationStreamArn() == null ^ this.getDestinationStreamArn() == null)
+            return false;
+        if (other.getDestinationStreamArn() != null
+                && other.getDestinationStreamArn().equals(this.getDestinationStreamArn()) == false)
+            return false;
+        if (other.getRoleArn() == null ^ this.getRoleArn() == null)
+            return false;
+        if (other.getRoleArn() != null && other.getRoleArn().equals(this.getRoleArn()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteSegmentRequest.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteSegmentRequest.java
index 0d52409d5e..67e7502ef9 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteSegmentRequest.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteSegmentRequest.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Segment definition.
+ */
 public class WriteSegmentRequest implements Serializable {
     /**
      * The segment dimensions attributes.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteTreatmentResource.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteTreatmentResource.java
index 5732626f80..e72ed454dc 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteTreatmentResource.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/WriteTreatmentResource.java
@@ -17,6 +17,9 @@
 
 import java.io.Serializable;
 
+/**
+ * Used to create a campaign treatment.
+ */
 public class WriteTreatmentResource implements Serializable {
     /**
      * The message configuration settings.
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelRequestJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelRequestJsonMarshaller.java
new file mode 100644
index 0000000000..e36580915e
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelRequestJsonMarshaller.java
@@ -0,0 +1,54 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO ADMChannelRequest
+ */
+class ADMChannelRequestJsonMarshaller {
+
+    public void marshall(ADMChannelRequest aDMChannelRequest, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (aDMChannelRequest.getClientId() != null) {
+            String clientId = aDMChannelRequest.getClientId();
+            jsonWriter.name("ClientId");
+            jsonWriter.value(clientId);
+        }
+        if (aDMChannelRequest.getClientSecret() != null) {
+            String clientSecret = aDMChannelRequest.getClientSecret();
+            jsonWriter.name("ClientSecret");
+            jsonWriter.value(clientSecret);
+        }
+        if (aDMChannelRequest.getEnabled() != null) {
+            Boolean enabled = aDMChannelRequest.getEnabled();
+            jsonWriter.name("Enabled");
+            jsonWriter.value(enabled);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static ADMChannelRequestJsonMarshaller instance;
+
+    public static ADMChannelRequestJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new ADMChannelRequestJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelRequestJsonUnmarshaller.java
new file mode 100644
index 0000000000..2496a8f9b0
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelRequestJsonUnmarshaller.java
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO ADMChannelRequest
+ */
+class ADMChannelRequestJsonUnmarshaller implements
+        Unmarshaller<ADMChannelRequest, JsonUnmarshallerContext> {
+
+    public ADMChannelRequest unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        ADMChannelRequest aDMChannelRequest = new ADMChannelRequest();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("ClientId")) {
+                aDMChannelRequest.setClientId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ClientSecret")) {
+                aDMChannelRequest.setClientSecret(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Enabled")) {
+                aDMChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return aDMChannelRequest;
+    }
+
+    private static ADMChannelRequestJsonUnmarshaller instance;
+
+    public static ADMChannelRequestJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new ADMChannelRequestJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelResponseJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelResponseJsonMarshaller.java
new file mode 100644
index 0000000000..f2c1568ee9
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelResponseJsonMarshaller.java
@@ -0,0 +1,84 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO ADMChannelResponse
+ */
+class ADMChannelResponseJsonMarshaller {
+
+    public void marshall(ADMChannelResponse aDMChannelResponse, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (aDMChannelResponse.getApplicationId() != null) {
+            String applicationId = aDMChannelResponse.getApplicationId();
+            jsonWriter.name("ApplicationId");
+            jsonWriter.value(applicationId);
+        }
+        if (aDMChannelResponse.getCreationDate() != null) {
+            String creationDate = aDMChannelResponse.getCreationDate();
+            jsonWriter.name("CreationDate");
+            jsonWriter.value(creationDate);
+        }
+        if (aDMChannelResponse.getEnabled() != null) {
+            Boolean enabled = aDMChannelResponse.getEnabled();
+            jsonWriter.name("Enabled");
+            jsonWriter.value(enabled);
+        }
+        if (aDMChannelResponse.getId() != null) {
+            String id = aDMChannelResponse.getId();
+            jsonWriter.name("Id");
+            jsonWriter.value(id);
+        }
+        if (aDMChannelResponse.getIsArchived() != null) {
+            Boolean isArchived = aDMChannelResponse.getIsArchived();
+            jsonWriter.name("IsArchived");
+            jsonWriter.value(isArchived);
+        }
+        if (aDMChannelResponse.getLastModifiedBy() != null) {
+            String lastModifiedBy = aDMChannelResponse.getLastModifiedBy();
+            jsonWriter.name("LastModifiedBy");
+            jsonWriter.value(lastModifiedBy);
+        }
+        if (aDMChannelResponse.getLastModifiedDate() != null) {
+            String lastModifiedDate = aDMChannelResponse.getLastModifiedDate();
+            jsonWriter.name("LastModifiedDate");
+            jsonWriter.value(lastModifiedDate);
+        }
+        if (aDMChannelResponse.getPlatform() != null) {
+            String platform = aDMChannelResponse.getPlatform();
+            jsonWriter.name("Platform");
+            jsonWriter.value(platform);
+        }
+        if (aDMChannelResponse.getVersion() != null) {
+            Integer version = aDMChannelResponse.getVersion();
+            jsonWriter.name("Version");
+            jsonWriter.value(version);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static ADMChannelResponseJsonMarshaller instance;
+
+    public static ADMChannelResponseJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new ADMChannelResponseJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelResponseJsonUnmarshaller.java
new file mode 100644
index 0000000000..233a524078
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMChannelResponseJsonUnmarshaller.java
@@ -0,0 +1,81 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO ADMChannelResponse
+ */
+class ADMChannelResponseJsonUnmarshaller implements
+        Unmarshaller<ADMChannelResponse, JsonUnmarshallerContext> {
+
+    public ADMChannelResponse unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        ADMChannelResponse aDMChannelResponse = new ADMChannelResponse();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("ApplicationId")) {
+                aDMChannelResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("CreationDate")) {
+                aDMChannelResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Enabled")) {
+                aDMChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Id")) {
+                aDMChannelResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("IsArchived")) {
+                aDMChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LastModifiedBy")) {
+                aDMChannelResponse.setLastModifiedBy(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LastModifiedDate")) {
+                aDMChannelResponse.setLastModifiedDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Platform")) {
+                aDMChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Version")) {
+                aDMChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return aDMChannelResponse;
+    }
+
+    private static ADMChannelResponseJsonUnmarshaller instance;
+
+    public static ADMChannelResponseJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new ADMChannelResponseJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMMessageJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMMessageJsonMarshaller.java
new file mode 100644
index 0000000000..66a8a98718
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMMessageJsonMarshaller.java
@@ -0,0 +1,147 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO ADMMessage
+ */
+class ADMMessageJsonMarshaller {
+
+    public void marshall(ADMMessage aDMMessage, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (aDMMessage.getAction() != null) {
+            String action = aDMMessage.getAction();
+            jsonWriter.name("Action");
+            jsonWriter.value(action);
+        }
+        if (aDMMessage.getBody() != null) {
+            String body = aDMMessage.getBody();
+            jsonWriter.name("Body");
+            jsonWriter.value(body);
+        }
+        if (aDMMessage.getConsolidationKey() != null) {
+            String consolidationKey = aDMMessage.getConsolidationKey();
+            jsonWriter.name("ConsolidationKey");
+            jsonWriter.value(consolidationKey);
+        }
+        if (aDMMessage.getData() != null) {
+            java.util.Map<String, String> data = aDMMessage.getData();
+            jsonWriter.name("Data");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, String> dataEntry : data.entrySet()) {
+                String dataValue = dataEntry.getValue();
+                if (dataValue != null) {
+                    jsonWriter.name(dataEntry.getKey());
+                    jsonWriter.value(dataValue);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (aDMMessage.getExpiresAfter() != null) {
+            String expiresAfter = aDMMessage.getExpiresAfter();
+            jsonWriter.name("ExpiresAfter");
+            jsonWriter.value(expiresAfter);
+        }
+        if (aDMMessage.getIconReference() != null) {
+            String iconReference = aDMMessage.getIconReference();
+            jsonWriter.name("IconReference");
+            jsonWriter.value(iconReference);
+        }
+        if (aDMMessage.getImageIconUrl() != null) {
+            String imageIconUrl = aDMMessage.getImageIconUrl();
+            jsonWriter.name("ImageIconUrl");
+            jsonWriter.value(imageIconUrl);
+        }
+        if (aDMMessage.getImageUrl() != null) {
+            String imageUrl = aDMMessage.getImageUrl();
+            jsonWriter.name("ImageUrl");
+            jsonWriter.value(imageUrl);
+        }
+        if (aDMMessage.getJsonData() != null) {
+            String jsonData = aDMMessage.getJsonData();
+            jsonWriter.name("JsonData");
+            jsonWriter.value(jsonData);
+        }
+        if (aDMMessage.getMD5() != null) {
+            String mD5 = aDMMessage.getMD5();
+            jsonWriter.name("MD5");
+            jsonWriter.value(mD5);
+        }
+        if (aDMMessage.getRawContent() != null) {
+            String rawContent = aDMMessage.getRawContent();
+            jsonWriter.name("RawContent");
+            jsonWriter.value(rawContent);
+        }
+        if (aDMMessage.getSilentPush() != null) {
+            Boolean silentPush = aDMMessage.getSilentPush();
+            jsonWriter.name("SilentPush");
+            jsonWriter.value(silentPush);
+        }
+        if (aDMMessage.getSmallImageIconUrl() != null) {
+            String smallImageIconUrl = aDMMessage.getSmallImageIconUrl();
+            jsonWriter.name("SmallImageIconUrl");
+            jsonWriter.value(smallImageIconUrl);
+        }
+        if (aDMMessage.getSound() != null) {
+            String sound = aDMMessage.getSound();
+            jsonWriter.name("Sound");
+            jsonWriter.value(sound);
+        }
+        if (aDMMessage.getSubstitutions() != null) {
+            java.util.Map<String, java.util.List<String>> substitutions = aDMMessage
+                    .getSubstitutions();
+            jsonWriter.name("Substitutions");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, java.util.List<String>> substitutionsEntry : substitutions
+                    .entrySet()) {
+                java.util.List<String> substitutionsValue = substitutionsEntry.getValue();
+                if (substitutionsValue != null) {
+                    jsonWriter.name(substitutionsEntry.getKey());
+                    jsonWriter.beginArray();
+                    for (String substitutionsValueItem : substitutionsValue) {
+                        if (substitutionsValueItem != null) {
+                            jsonWriter.value(substitutionsValueItem);
+                        }
+                    }
+                    jsonWriter.endArray();
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (aDMMessage.getTitle() != null) {
+            String title = aDMMessage.getTitle();
+            jsonWriter.name("Title");
+            jsonWriter.value(title);
+        }
+        if (aDMMessage.getUrl() != null) {
+            String url = aDMMessage.getUrl();
+            jsonWriter.name("Url");
+            jsonWriter.value(url);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static ADMMessageJsonMarshaller instance;
+
+    public static ADMMessageJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new ADMMessageJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMMessageJsonUnmarshaller.java
new file mode 100644
index 0000000000..d69eb0f8cf
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ADMMessageJsonUnmarshaller.java
@@ -0,0 +1,108 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO ADMMessage
+ */
+class ADMMessageJsonUnmarshaller implements Unmarshaller<ADMMessage, JsonUnmarshallerContext> {
+
+    public ADMMessage unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        ADMMessage aDMMessage = new ADMMessage();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Action")) {
+                aDMMessage.setAction(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Body")) {
+                aDMMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ConsolidationKey")) {
+                aDMMessage.setConsolidationKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Data")) {
+                aDMMessage.setData(new MapUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("ExpiresAfter")) {
+                aDMMessage.setExpiresAfter(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("IconReference")) {
+                aDMMessage.setIconReference(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ImageIconUrl")) {
+                aDMMessage.setImageIconUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ImageUrl")) {
+                aDMMessage.setImageUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("JsonData")) {
+                aDMMessage.setJsonData(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("MD5")) {
+                aDMMessage.setMD5(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("RawContent")) {
+                aDMMessage.setRawContent(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SilentPush")) {
+                aDMMessage.setSilentPush(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SmallImageIconUrl")) {
+                aDMMessage.setSmallImageIconUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Sound")) {
+                aDMMessage.setSound(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Substitutions")) {
+                aDMMessage.setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("Title")) {
+                aDMMessage.setTitle(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Url")) {
+                aDMMessage.setUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return aDMMessage;
+    }
+
+    private static ADMMessageJsonUnmarshaller instance;
+
+    public static ADMMessageJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new ADMMessageJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelRequestJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelRequestJsonMarshaller.java
index e20b537b50..026fd0a6c2 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelRequestJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelRequestJsonMarshaller.java
@@ -31,6 +31,11 @@ public void marshall(APNSChannelRequest aPNSChannelRequest, AwsJsonWriter jsonWr
             jsonWriter.name("Certificate");
             jsonWriter.value(certificate);
         }
+        if (aPNSChannelRequest.getEnabled() != null) {
+            Boolean enabled = aPNSChannelRequest.getEnabled();
+            jsonWriter.name("Enabled");
+            jsonWriter.value(enabled);
+        }
         if (aPNSChannelRequest.getPrivateKey() != null) {
             String privateKey = aPNSChannelRequest.getPrivateKey();
             jsonWriter.name("PrivateKey");
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelRequestJsonUnmarshaller.java
index b58472dc55..836d9ab2bb 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelRequestJsonUnmarshaller.java
@@ -39,6 +39,9 @@ public APNSChannelRequest unmarshall(JsonUnmarshallerContext context) throws Exc
             if (name.equals("Certificate")) {
                 aPNSChannelRequest.setCertificate(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("Enabled")) {
+                aPNSChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("PrivateKey")) {
                 aPNSChannelRequest.setPrivateKey(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelResponseJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelResponseJsonMarshaller.java
index 1dcab294be..293eb7ab47 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelResponseJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelResponseJsonMarshaller.java
@@ -36,6 +36,11 @@ public void marshall(APNSChannelResponse aPNSChannelResponse, AwsJsonWriter json
             jsonWriter.name("CreationDate");
             jsonWriter.value(creationDate);
         }
+        if (aPNSChannelResponse.getEnabled() != null) {
+            Boolean enabled = aPNSChannelResponse.getEnabled();
+            jsonWriter.name("Enabled");
+            jsonWriter.value(enabled);
+        }
         if (aPNSChannelResponse.getId() != null) {
             String id = aPNSChannelResponse.getId();
             jsonWriter.name("Id");
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelResponseJsonUnmarshaller.java
index 8a84895533..6711b58d4d 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSChannelResponseJsonUnmarshaller.java
@@ -42,6 +42,9 @@ public APNSChannelResponse unmarshall(JsonUnmarshallerContext context) throws Ex
             } else if (name.equals("CreationDate")) {
                 aPNSChannelResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("Enabled")) {
+                aPNSChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Id")) {
                 aPNSChannelResponse.setId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSMessageJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSMessageJsonMarshaller.java
new file mode 100644
index 0000000000..7ef24d4b4e
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSMessageJsonMarshaller.java
@@ -0,0 +1,132 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO APNSMessage
+ */
+class APNSMessageJsonMarshaller {
+
+    public void marshall(APNSMessage aPNSMessage, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (aPNSMessage.getAction() != null) {
+            String action = aPNSMessage.getAction();
+            jsonWriter.name("Action");
+            jsonWriter.value(action);
+        }
+        if (aPNSMessage.getBadge() != null) {
+            Integer badge = aPNSMessage.getBadge();
+            jsonWriter.name("Badge");
+            jsonWriter.value(badge);
+        }
+        if (aPNSMessage.getBody() != null) {
+            String body = aPNSMessage.getBody();
+            jsonWriter.name("Body");
+            jsonWriter.value(body);
+        }
+        if (aPNSMessage.getCategory() != null) {
+            String category = aPNSMessage.getCategory();
+            jsonWriter.name("Category");
+            jsonWriter.value(category);
+        }
+        if (aPNSMessage.getData() != null) {
+            java.util.Map<String, String> data = aPNSMessage.getData();
+            jsonWriter.name("Data");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, String> dataEntry : data.entrySet()) {
+                String dataValue = dataEntry.getValue();
+                if (dataValue != null) {
+                    jsonWriter.name(dataEntry.getKey());
+                    jsonWriter.value(dataValue);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (aPNSMessage.getJsonData() != null) {
+            String jsonData = aPNSMessage.getJsonData();
+            jsonWriter.name("JsonData");
+            jsonWriter.value(jsonData);
+        }
+        if (aPNSMessage.getMediaUrl() != null) {
+            String mediaUrl = aPNSMessage.getMediaUrl();
+            jsonWriter.name("MediaUrl");
+            jsonWriter.value(mediaUrl);
+        }
+        if (aPNSMessage.getRawContent() != null) {
+            String rawContent = aPNSMessage.getRawContent();
+            jsonWriter.name("RawContent");
+            jsonWriter.value(rawContent);
+        }
+        if (aPNSMessage.getSilentPush() != null) {
+            Boolean silentPush = aPNSMessage.getSilentPush();
+            jsonWriter.name("SilentPush");
+            jsonWriter.value(silentPush);
+        }
+        if (aPNSMessage.getSound() != null) {
+            String sound = aPNSMessage.getSound();
+            jsonWriter.name("Sound");
+            jsonWriter.value(sound);
+        }
+        if (aPNSMessage.getSubstitutions() != null) {
+            java.util.Map<String, java.util.List<String>> substitutions = aPNSMessage
+                    .getSubstitutions();
+            jsonWriter.name("Substitutions");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, java.util.List<String>> substitutionsEntry : substitutions
+                    .entrySet()) {
+                java.util.List<String> substitutionsValue = substitutionsEntry.getValue();
+                if (substitutionsValue != null) {
+                    jsonWriter.name(substitutionsEntry.getKey());
+                    jsonWriter.beginArray();
+                    for (String substitutionsValueItem : substitutionsValue) {
+                        if (substitutionsValueItem != null) {
+                            jsonWriter.value(substitutionsValueItem);
+                        }
+                    }
+                    jsonWriter.endArray();
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (aPNSMessage.getThreadId() != null) {
+            String threadId = aPNSMessage.getThreadId();
+            jsonWriter.name("ThreadId");
+            jsonWriter.value(threadId);
+        }
+        if (aPNSMessage.getTitle() != null) {
+            String title = aPNSMessage.getTitle();
+            jsonWriter.name("Title");
+            jsonWriter.value(title);
+        }
+        if (aPNSMessage.getUrl() != null) {
+            String url = aPNSMessage.getUrl();
+            jsonWriter.name("Url");
+            jsonWriter.value(url);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static APNSMessageJsonMarshaller instance;
+
+    public static APNSMessageJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new APNSMessageJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSMessageJsonUnmarshaller.java
new file mode 100644
index 0000000000..e7388d378a
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSMessageJsonUnmarshaller.java
@@ -0,0 +1,100 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO APNSMessage
+ */
+class APNSMessageJsonUnmarshaller implements Unmarshaller<APNSMessage, JsonUnmarshallerContext> {
+
+    public APNSMessage unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        APNSMessage aPNSMessage = new APNSMessage();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Action")) {
+                aPNSMessage.setAction(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Badge")) {
+                aPNSMessage.setBadge(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Body")) {
+                aPNSMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Category")) {
+                aPNSMessage.setCategory(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Data")) {
+                aPNSMessage.setData(new MapUnmarshaller<String>(StringJsonUnmarshaller
+                        .getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("JsonData")) {
+                aPNSMessage.setJsonData(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("MediaUrl")) {
+                aPNSMessage.setMediaUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("RawContent")) {
+                aPNSMessage.setRawContent(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SilentPush")) {
+                aPNSMessage.setSilentPush(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Sound")) {
+                aPNSMessage.setSound(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Substitutions")) {
+                aPNSMessage.setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("ThreadId")) {
+                aPNSMessage.setThreadId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Title")) {
+                aPNSMessage.setTitle(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Url")) {
+                aPNSMessage.setUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return aPNSMessage;
+    }
+
+    private static APNSMessageJsonUnmarshaller instance;
+
+    public static APNSMessageJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new APNSMessageJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelRequestJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelRequestJsonMarshaller.java
new file mode 100644
index 0000000000..e0053f59c4
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelRequestJsonMarshaller.java
@@ -0,0 +1,54 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO APNSSandboxChannelRequest
+ */
+class APNSSandboxChannelRequestJsonMarshaller {
+
+    public void marshall(APNSSandboxChannelRequest aPNSSandboxChannelRequest,
+            AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (aPNSSandboxChannelRequest.getCertificate() != null) {
+            String certificate = aPNSSandboxChannelRequest.getCertificate();
+            jsonWriter.name("Certificate");
+            jsonWriter.value(certificate);
+        }
+        if (aPNSSandboxChannelRequest.getEnabled() != null) {
+            Boolean enabled = aPNSSandboxChannelRequest.getEnabled();
+            jsonWriter.name("Enabled");
+            jsonWriter.value(enabled);
+        }
+        if (aPNSSandboxChannelRequest.getPrivateKey() != null) {
+            String privateKey = aPNSSandboxChannelRequest.getPrivateKey();
+            jsonWriter.name("PrivateKey");
+            jsonWriter.value(privateKey);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static APNSSandboxChannelRequestJsonMarshaller instance;
+
+    public static APNSSandboxChannelRequestJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new APNSSandboxChannelRequestJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelRequestJsonUnmarshaller.java
new file mode 100644
index 0000000000..013009d9cd
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelRequestJsonUnmarshaller.java
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO APNSSandboxChannelRequest
+ */
+class APNSSandboxChannelRequestJsonUnmarshaller implements
+        Unmarshaller<APNSSandboxChannelRequest, JsonUnmarshallerContext> {
+
+    public APNSSandboxChannelRequest unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        APNSSandboxChannelRequest aPNSSandboxChannelRequest = new APNSSandboxChannelRequest();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Certificate")) {
+                aPNSSandboxChannelRequest.setCertificate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Enabled")) {
+                aPNSSandboxChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("PrivateKey")) {
+                aPNSSandboxChannelRequest.setPrivateKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return aPNSSandboxChannelRequest;
+    }
+
+    private static APNSSandboxChannelRequestJsonUnmarshaller instance;
+
+    public static APNSSandboxChannelRequestJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new APNSSandboxChannelRequestJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelResponseJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelResponseJsonMarshaller.java
new file mode 100644
index 0000000000..03623c4ae5
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelResponseJsonMarshaller.java
@@ -0,0 +1,84 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO APNSSandboxChannelResponse
+ */
+class APNSSandboxChannelResponseJsonMarshaller {
+
+    public void marshall(APNSSandboxChannelResponse aPNSSandboxChannelResponse,
+            AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (aPNSSandboxChannelResponse.getApplicationId() != null) {
+            String applicationId = aPNSSandboxChannelResponse.getApplicationId();
+            jsonWriter.name("ApplicationId");
+            jsonWriter.value(applicationId);
+        }
+        if (aPNSSandboxChannelResponse.getCreationDate() != null) {
+            String creationDate = aPNSSandboxChannelResponse.getCreationDate();
+            jsonWriter.name("CreationDate");
+            jsonWriter.value(creationDate);
+        }
+        if (aPNSSandboxChannelResponse.getEnabled() != null) {
+            Boolean enabled = aPNSSandboxChannelResponse.getEnabled();
+            jsonWriter.name("Enabled");
+            jsonWriter.value(enabled);
+        }
+        if (aPNSSandboxChannelResponse.getId() != null) {
+            String id = aPNSSandboxChannelResponse.getId();
+            jsonWriter.name("Id");
+            jsonWriter.value(id);
+        }
+        if (aPNSSandboxChannelResponse.getIsArchived() != null) {
+            Boolean isArchived = aPNSSandboxChannelResponse.getIsArchived();
+            jsonWriter.name("IsArchived");
+            jsonWriter.value(isArchived);
+        }
+        if (aPNSSandboxChannelResponse.getLastModifiedBy() != null) {
+            String lastModifiedBy = aPNSSandboxChannelResponse.getLastModifiedBy();
+            jsonWriter.name("LastModifiedBy");
+            jsonWriter.value(lastModifiedBy);
+        }
+        if (aPNSSandboxChannelResponse.getLastModifiedDate() != null) {
+            String lastModifiedDate = aPNSSandboxChannelResponse.getLastModifiedDate();
+            jsonWriter.name("LastModifiedDate");
+            jsonWriter.value(lastModifiedDate);
+        }
+        if (aPNSSandboxChannelResponse.getPlatform() != null) {
+            String platform = aPNSSandboxChannelResponse.getPlatform();
+            jsonWriter.name("Platform");
+            jsonWriter.value(platform);
+        }
+        if (aPNSSandboxChannelResponse.getVersion() != null) {
+            Integer version = aPNSSandboxChannelResponse.getVersion();
+            jsonWriter.name("Version");
+            jsonWriter.value(version);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static APNSSandboxChannelResponseJsonMarshaller instance;
+
+    public static APNSSandboxChannelResponseJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new APNSSandboxChannelResponseJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelResponseJsonUnmarshaller.java
new file mode 100644
index 0000000000..923d23def0
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/APNSSandboxChannelResponseJsonUnmarshaller.java
@@ -0,0 +1,81 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO APNSSandboxChannelResponse
+ */
+class APNSSandboxChannelResponseJsonUnmarshaller implements
+        Unmarshaller<APNSSandboxChannelResponse, JsonUnmarshallerContext> {
+
+    public APNSSandboxChannelResponse unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        APNSSandboxChannelResponse aPNSSandboxChannelResponse = new APNSSandboxChannelResponse();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("ApplicationId")) {
+                aPNSSandboxChannelResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("CreationDate")) {
+                aPNSSandboxChannelResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Enabled")) {
+                aPNSSandboxChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Id")) {
+                aPNSSandboxChannelResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("IsArchived")) {
+                aPNSSandboxChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LastModifiedBy")) {
+                aPNSSandboxChannelResponse.setLastModifiedBy(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LastModifiedDate")) {
+                aPNSSandboxChannelResponse.setLastModifiedDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Platform")) {
+                aPNSSandboxChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Version")) {
+                aPNSSandboxChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return aPNSSandboxChannelResponse;
+    }
+
+    private static APNSSandboxChannelResponseJsonUnmarshaller instance;
+
+    public static APNSSandboxChannelResponseJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new APNSSandboxChannelResponseJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ActivityResponseJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ActivityResponseJsonMarshaller.java
index 8c46734aa7..fb76007022 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ActivityResponseJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ActivityResponseJsonMarshaller.java
@@ -71,6 +71,16 @@ public void marshall(ActivityResponse activityResponse, AwsJsonWriter jsonWriter
             jsonWriter.name("SuccessfulEndpointCount");
             jsonWriter.value(successfulEndpointCount);
         }
+        if (activityResponse.getTimezonesCompletedCount() != null) {
+            Integer timezonesCompletedCount = activityResponse.getTimezonesCompletedCount();
+            jsonWriter.name("TimezonesCompletedCount");
+            jsonWriter.value(timezonesCompletedCount);
+        }
+        if (activityResponse.getTimezonesTotalCount() != null) {
+            Integer timezonesTotalCount = activityResponse.getTimezonesTotalCount();
+            jsonWriter.name("TimezonesTotalCount");
+            jsonWriter.value(timezonesTotalCount);
+        }
         if (activityResponse.getTotalEndpointCount() != null) {
             Integer totalEndpointCount = activityResponse.getTotalEndpointCount();
             jsonWriter.name("TotalEndpointCount");
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ActivityResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ActivityResponseJsonUnmarshaller.java
index 2b0b14f736..21dcc4efc3 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ActivityResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ActivityResponseJsonUnmarshaller.java
@@ -63,6 +63,12 @@ public ActivityResponse unmarshall(JsonUnmarshallerContext context) throws Excep
             } else if (name.equals("SuccessfulEndpointCount")) {
                 activityResponse.setSuccessfulEndpointCount(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("TimezonesCompletedCount")) {
+                activityResponse.setTimezonesCompletedCount(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("TimezonesTotalCount")) {
+                activityResponse.setTimezonesTotalCount(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TotalEndpointCount")) {
                 activityResponse.setTotalEndpointCount(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AddressConfigurationJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AddressConfigurationJsonMarshaller.java
new file mode 100644
index 0000000000..2088508c97
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AddressConfigurationJsonMarshaller.java
@@ -0,0 +1,93 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO AddressConfiguration
+ */
+class AddressConfigurationJsonMarshaller {
+
+    public void marshall(AddressConfiguration addressConfiguration, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (addressConfiguration.getBodyOverride() != null) {
+            String bodyOverride = addressConfiguration.getBodyOverride();
+            jsonWriter.name("BodyOverride");
+            jsonWriter.value(bodyOverride);
+        }
+        if (addressConfiguration.getChannelType() != null) {
+            String channelType = addressConfiguration.getChannelType();
+            jsonWriter.name("ChannelType");
+            jsonWriter.value(channelType);
+        }
+        if (addressConfiguration.getContext() != null) {
+            java.util.Map<String, String> context = addressConfiguration.getContext();
+            jsonWriter.name("Context");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, String> contextEntry : context.entrySet()) {
+                String contextValue = contextEntry.getValue();
+                if (contextValue != null) {
+                    jsonWriter.name(contextEntry.getKey());
+                    jsonWriter.value(contextValue);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (addressConfiguration.getRawContent() != null) {
+            String rawContent = addressConfiguration.getRawContent();
+            jsonWriter.name("RawContent");
+            jsonWriter.value(rawContent);
+        }
+        if (addressConfiguration.getSubstitutions() != null) {
+            java.util.Map<String, java.util.List<String>> substitutions = addressConfiguration
+                    .getSubstitutions();
+            jsonWriter.name("Substitutions");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, java.util.List<String>> substitutionsEntry : substitutions
+                    .entrySet()) {
+                java.util.List<String> substitutionsValue = substitutionsEntry.getValue();
+                if (substitutionsValue != null) {
+                    jsonWriter.name(substitutionsEntry.getKey());
+                    jsonWriter.beginArray();
+                    for (String substitutionsValueItem : substitutionsValue) {
+                        if (substitutionsValueItem != null) {
+                            jsonWriter.value(substitutionsValueItem);
+                        }
+                    }
+                    jsonWriter.endArray();
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (addressConfiguration.getTitleOverride() != null) {
+            String titleOverride = addressConfiguration.getTitleOverride();
+            jsonWriter.name("TitleOverride");
+            jsonWriter.value(titleOverride);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static AddressConfigurationJsonMarshaller instance;
+
+    public static AddressConfigurationJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new AddressConfigurationJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AddressConfigurationJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AddressConfigurationJsonUnmarshaller.java
new file mode 100644
index 0000000000..1acf835af3
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/AddressConfigurationJsonUnmarshaller.java
@@ -0,0 +1,77 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO AddressConfiguration
+ */
+class AddressConfigurationJsonUnmarshaller implements
+        Unmarshaller<AddressConfiguration, JsonUnmarshallerContext> {
+
+    public AddressConfiguration unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        AddressConfiguration addressConfiguration = new AddressConfiguration();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("BodyOverride")) {
+                addressConfiguration.setBodyOverride(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ChannelType")) {
+                addressConfiguration.setChannelType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Context")) {
+                addressConfiguration.setContext(new MapUnmarshaller<String>(StringJsonUnmarshaller
+                        .getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("RawContent")) {
+                addressConfiguration.setRawContent(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Substitutions")) {
+                addressConfiguration.setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("TitleOverride")) {
+                addressConfiguration.setTitleOverride(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return addressConfiguration;
+    }
+
+    private static AddressConfigurationJsonUnmarshaller instance;
+
+    public static AddressConfigurationJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new AddressConfigurationJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationResponseJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationResponseJsonMarshaller.java
new file mode 100644
index 0000000000..f13643d0e7
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationResponseJsonMarshaller.java
@@ -0,0 +1,49 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO ApplicationResponse
+ */
+class ApplicationResponseJsonMarshaller {
+
+    public void marshall(ApplicationResponse applicationResponse, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (applicationResponse.getId() != null) {
+            String id = applicationResponse.getId();
+            jsonWriter.name("Id");
+            jsonWriter.value(id);
+        }
+        if (applicationResponse.getName() != null) {
+            String name = applicationResponse.getName();
+            jsonWriter.name("Name");
+            jsonWriter.value(name);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static ApplicationResponseJsonMarshaller instance;
+
+    public static ApplicationResponseJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new ApplicationResponseJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationResponseJsonUnmarshaller.java
new file mode 100644
index 0000000000..92b7722635
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationResponseJsonUnmarshaller.java
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO ApplicationResponse
+ */
+class ApplicationResponseJsonUnmarshaller implements
+        Unmarshaller<ApplicationResponse, JsonUnmarshallerContext> {
+
+    public ApplicationResponse unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        ApplicationResponse applicationResponse = new ApplicationResponse();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Id")) {
+                applicationResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Name")) {
+                applicationResponse.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return applicationResponse;
+    }
+
+    private static ApplicationResponseJsonUnmarshaller instance;
+
+    public static ApplicationResponseJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new ApplicationResponseJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationsResponseJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationsResponseJsonMarshaller.java
new file mode 100644
index 0000000000..d050ebb89b
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationsResponseJsonMarshaller.java
@@ -0,0 +1,55 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO ApplicationsResponse
+ */
+class ApplicationsResponseJsonMarshaller {
+
+    public void marshall(ApplicationsResponse applicationsResponse, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (applicationsResponse.getItem() != null) {
+            java.util.List<ApplicationResponse> item = applicationsResponse.getItem();
+            jsonWriter.name("Item");
+            jsonWriter.beginArray();
+            for (ApplicationResponse itemItem : item) {
+                if (itemItem != null) {
+                    ApplicationResponseJsonMarshaller.getInstance().marshall(itemItem, jsonWriter);
+                }
+            }
+            jsonWriter.endArray();
+        }
+        if (applicationsResponse.getNextToken() != null) {
+            String nextToken = applicationsResponse.getNextToken();
+            jsonWriter.name("NextToken");
+            jsonWriter.value(nextToken);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static ApplicationsResponseJsonMarshaller instance;
+
+    public static ApplicationsResponseJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new ApplicationsResponseJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationsResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationsResponseJsonUnmarshaller.java
new file mode 100644
index 0000000000..5e5b0b2a30
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ApplicationsResponseJsonUnmarshaller.java
@@ -0,0 +1,62 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO ApplicationsResponse
+ */
+class ApplicationsResponseJsonUnmarshaller implements
+        Unmarshaller<ApplicationsResponse, JsonUnmarshallerContext> {
+
+    public ApplicationsResponse unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        ApplicationsResponse applicationsResponse = new ApplicationsResponse();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Item")) {
+                applicationsResponse.setItem(new ListUnmarshaller<ApplicationResponse>(
+                        ApplicationResponseJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("NextToken")) {
+                applicationsResponse.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return applicationsResponse;
+    }
+
+    private static ApplicationsResponseJsonUnmarshaller instance;
+
+    public static ApplicationsResponseJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new ApplicationsResponseJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BadRequestExceptionUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BadRequestExceptionUnmarshaller.java
index 5d3b60b298..990e2ba72a 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BadRequestExceptionUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BadRequestExceptionUnmarshaller.java
@@ -20,8 +20,6 @@
 import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.pinpoint.model.BadRequestException;
 
-import com.amazonaws.services.pinpoint.model.MessageBody;
-
 public class BadRequestExceptionUnmarshaller extends JsonErrorUnmarshaller {
 
     public BadRequestExceptionUnmarshaller() {
@@ -35,12 +33,10 @@ public boolean match(JsonErrorResponse error) throws Exception {
 
     @Override
     public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
-        final com.google.gson.Gson gson = new com.google.gson.Gson();
+
         BadRequestException e = (BadRequestException) super.unmarshall(error);
         e.setErrorCode("BadRequestException");
-        e.setAccessControlAllowOrigin(String.valueOf(error.get("AccessControlAllowOrigin")));
-
-        e.setMessageBody(gson.fromJson(error.get("MessageBody"), MessageBody.class));
+        e.setRequestID(String.valueOf(error.get("RequestID")));
 
         return e;
     }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelRequestJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelRequestJsonMarshaller.java
new file mode 100644
index 0000000000..f6e0571b57
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelRequestJsonMarshaller.java
@@ -0,0 +1,54 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO BaiduChannelRequest
+ */
+class BaiduChannelRequestJsonMarshaller {
+
+    public void marshall(BaiduChannelRequest baiduChannelRequest, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (baiduChannelRequest.getApiKey() != null) {
+            String apiKey = baiduChannelRequest.getApiKey();
+            jsonWriter.name("ApiKey");
+            jsonWriter.value(apiKey);
+        }
+        if (baiduChannelRequest.getEnabled() != null) {
+            Boolean enabled = baiduChannelRequest.getEnabled();
+            jsonWriter.name("Enabled");
+            jsonWriter.value(enabled);
+        }
+        if (baiduChannelRequest.getSecretKey() != null) {
+            String secretKey = baiduChannelRequest.getSecretKey();
+            jsonWriter.name("SecretKey");
+            jsonWriter.value(secretKey);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static BaiduChannelRequestJsonMarshaller instance;
+
+    public static BaiduChannelRequestJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new BaiduChannelRequestJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelRequestJsonUnmarshaller.java
new file mode 100644
index 0000000000..7eea267924
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelRequestJsonUnmarshaller.java
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO BaiduChannelRequest
+ */
+class BaiduChannelRequestJsonUnmarshaller implements
+        Unmarshaller<BaiduChannelRequest, JsonUnmarshallerContext> {
+
+    public BaiduChannelRequest unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        BaiduChannelRequest baiduChannelRequest = new BaiduChannelRequest();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("ApiKey")) {
+                baiduChannelRequest.setApiKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Enabled")) {
+                baiduChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SecretKey")) {
+                baiduChannelRequest.setSecretKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return baiduChannelRequest;
+    }
+
+    private static BaiduChannelRequestJsonUnmarshaller instance;
+
+    public static BaiduChannelRequestJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new BaiduChannelRequestJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelResponseJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelResponseJsonMarshaller.java
new file mode 100644
index 0000000000..fe0fa5fb6d
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelResponseJsonMarshaller.java
@@ -0,0 +1,89 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO BaiduChannelResponse
+ */
+class BaiduChannelResponseJsonMarshaller {
+
+    public void marshall(BaiduChannelResponse baiduChannelResponse, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (baiduChannelResponse.getApplicationId() != null) {
+            String applicationId = baiduChannelResponse.getApplicationId();
+            jsonWriter.name("ApplicationId");
+            jsonWriter.value(applicationId);
+        }
+        if (baiduChannelResponse.getCreationDate() != null) {
+            String creationDate = baiduChannelResponse.getCreationDate();
+            jsonWriter.name("CreationDate");
+            jsonWriter.value(creationDate);
+        }
+        if (baiduChannelResponse.getCredential() != null) {
+            String credential = baiduChannelResponse.getCredential();
+            jsonWriter.name("Credential");
+            jsonWriter.value(credential);
+        }
+        if (baiduChannelResponse.getEnabled() != null) {
+            Boolean enabled = baiduChannelResponse.getEnabled();
+            jsonWriter.name("Enabled");
+            jsonWriter.value(enabled);
+        }
+        if (baiduChannelResponse.getId() != null) {
+            String id = baiduChannelResponse.getId();
+            jsonWriter.name("Id");
+            jsonWriter.value(id);
+        }
+        if (baiduChannelResponse.getIsArchived() != null) {
+            Boolean isArchived = baiduChannelResponse.getIsArchived();
+            jsonWriter.name("IsArchived");
+            jsonWriter.value(isArchived);
+        }
+        if (baiduChannelResponse.getLastModifiedBy() != null) {
+            String lastModifiedBy = baiduChannelResponse.getLastModifiedBy();
+            jsonWriter.name("LastModifiedBy");
+            jsonWriter.value(lastModifiedBy);
+        }
+        if (baiduChannelResponse.getLastModifiedDate() != null) {
+            String lastModifiedDate = baiduChannelResponse.getLastModifiedDate();
+            jsonWriter.name("LastModifiedDate");
+            jsonWriter.value(lastModifiedDate);
+        }
+        if (baiduChannelResponse.getPlatform() != null) {
+            String platform = baiduChannelResponse.getPlatform();
+            jsonWriter.name("Platform");
+            jsonWriter.value(platform);
+        }
+        if (baiduChannelResponse.getVersion() != null) {
+            Integer version = baiduChannelResponse.getVersion();
+            jsonWriter.name("Version");
+            jsonWriter.value(version);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static BaiduChannelResponseJsonMarshaller instance;
+
+    public static BaiduChannelResponseJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new BaiduChannelResponseJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelResponseJsonUnmarshaller.java
new file mode 100644
index 0000000000..66cc34e515
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduChannelResponseJsonUnmarshaller.java
@@ -0,0 +1,84 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO BaiduChannelResponse
+ */
+class BaiduChannelResponseJsonUnmarshaller implements
+        Unmarshaller<BaiduChannelResponse, JsonUnmarshallerContext> {
+
+    public BaiduChannelResponse unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        BaiduChannelResponse baiduChannelResponse = new BaiduChannelResponse();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("ApplicationId")) {
+                baiduChannelResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("CreationDate")) {
+                baiduChannelResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Credential")) {
+                baiduChannelResponse.setCredential(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Enabled")) {
+                baiduChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Id")) {
+                baiduChannelResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("IsArchived")) {
+                baiduChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LastModifiedBy")) {
+                baiduChannelResponse.setLastModifiedBy(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LastModifiedDate")) {
+                baiduChannelResponse.setLastModifiedDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Platform")) {
+                baiduChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Version")) {
+                baiduChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return baiduChannelResponse;
+    }
+
+    private static BaiduChannelResponseJsonUnmarshaller instance;
+
+    public static BaiduChannelResponseJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new BaiduChannelResponseJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduMessageJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduMessageJsonMarshaller.java
new file mode 100644
index 0000000000..305d526f77
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduMessageJsonMarshaller.java
@@ -0,0 +1,132 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO BaiduMessage
+ */
+class BaiduMessageJsonMarshaller {
+
+    public void marshall(BaiduMessage baiduMessage, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (baiduMessage.getAction() != null) {
+            String action = baiduMessage.getAction();
+            jsonWriter.name("Action");
+            jsonWriter.value(action);
+        }
+        if (baiduMessage.getBody() != null) {
+            String body = baiduMessage.getBody();
+            jsonWriter.name("Body");
+            jsonWriter.value(body);
+        }
+        if (baiduMessage.getData() != null) {
+            java.util.Map<String, String> data = baiduMessage.getData();
+            jsonWriter.name("Data");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, String> dataEntry : data.entrySet()) {
+                String dataValue = dataEntry.getValue();
+                if (dataValue != null) {
+                    jsonWriter.name(dataEntry.getKey());
+                    jsonWriter.value(dataValue);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (baiduMessage.getIconReference() != null) {
+            String iconReference = baiduMessage.getIconReference();
+            jsonWriter.name("IconReference");
+            jsonWriter.value(iconReference);
+        }
+        if (baiduMessage.getImageIconUrl() != null) {
+            String imageIconUrl = baiduMessage.getImageIconUrl();
+            jsonWriter.name("ImageIconUrl");
+            jsonWriter.value(imageIconUrl);
+        }
+        if (baiduMessage.getImageUrl() != null) {
+            String imageUrl = baiduMessage.getImageUrl();
+            jsonWriter.name("ImageUrl");
+            jsonWriter.value(imageUrl);
+        }
+        if (baiduMessage.getJsonData() != null) {
+            String jsonData = baiduMessage.getJsonData();
+            jsonWriter.name("JsonData");
+            jsonWriter.value(jsonData);
+        }
+        if (baiduMessage.getRawContent() != null) {
+            String rawContent = baiduMessage.getRawContent();
+            jsonWriter.name("RawContent");
+            jsonWriter.value(rawContent);
+        }
+        if (baiduMessage.getSilentPush() != null) {
+            Boolean silentPush = baiduMessage.getSilentPush();
+            jsonWriter.name("SilentPush");
+            jsonWriter.value(silentPush);
+        }
+        if (baiduMessage.getSmallImageIconUrl() != null) {
+            String smallImageIconUrl = baiduMessage.getSmallImageIconUrl();
+            jsonWriter.name("SmallImageIconUrl");
+            jsonWriter.value(smallImageIconUrl);
+        }
+        if (baiduMessage.getSound() != null) {
+            String sound = baiduMessage.getSound();
+            jsonWriter.name("Sound");
+            jsonWriter.value(sound);
+        }
+        if (baiduMessage.getSubstitutions() != null) {
+            java.util.Map<String, java.util.List<String>> substitutions = baiduMessage
+                    .getSubstitutions();
+            jsonWriter.name("Substitutions");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, java.util.List<String>> substitutionsEntry : substitutions
+                    .entrySet()) {
+                java.util.List<String> substitutionsValue = substitutionsEntry.getValue();
+                if (substitutionsValue != null) {
+                    jsonWriter.name(substitutionsEntry.getKey());
+                    jsonWriter.beginArray();
+                    for (String substitutionsValueItem : substitutionsValue) {
+                        if (substitutionsValueItem != null) {
+                            jsonWriter.value(substitutionsValueItem);
+                        }
+                    }
+                    jsonWriter.endArray();
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (baiduMessage.getTitle() != null) {
+            String title = baiduMessage.getTitle();
+            jsonWriter.name("Title");
+            jsonWriter.value(title);
+        }
+        if (baiduMessage.getUrl() != null) {
+            String url = baiduMessage.getUrl();
+            jsonWriter.name("Url");
+            jsonWriter.value(url);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static BaiduMessageJsonMarshaller instance;
+
+    public static BaiduMessageJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new BaiduMessageJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduMessageJsonUnmarshaller.java
new file mode 100644
index 0000000000..fa8a06ba2d
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/BaiduMessageJsonUnmarshaller.java
@@ -0,0 +1,100 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO BaiduMessage
+ */
+class BaiduMessageJsonUnmarshaller implements Unmarshaller<BaiduMessage, JsonUnmarshallerContext> {
+
+    public BaiduMessage unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        BaiduMessage baiduMessage = new BaiduMessage();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Action")) {
+                baiduMessage.setAction(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Body")) {
+                baiduMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Data")) {
+                baiduMessage.setData(new MapUnmarshaller<String>(StringJsonUnmarshaller
+                        .getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("IconReference")) {
+                baiduMessage.setIconReference(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ImageIconUrl")) {
+                baiduMessage.setImageIconUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ImageUrl")) {
+                baiduMessage.setImageUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("JsonData")) {
+                baiduMessage.setJsonData(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("RawContent")) {
+                baiduMessage.setRawContent(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SilentPush")) {
+                baiduMessage.setSilentPush(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SmallImageIconUrl")) {
+                baiduMessage.setSmallImageIconUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Sound")) {
+                baiduMessage.setSound(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Substitutions")) {
+                baiduMessage.setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("Title")) {
+                baiduMessage.setTitle(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Url")) {
+                baiduMessage.setUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return baiduMessage;
+    }
+
+    private static BaiduMessageJsonUnmarshaller instance;
+
+    public static BaiduMessageJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new BaiduMessageJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignEmailMessageJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignEmailMessageJsonMarshaller.java
new file mode 100644
index 0000000000..a87934ca9b
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignEmailMessageJsonMarshaller.java
@@ -0,0 +1,59 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO CampaignEmailMessage
+ */
+class CampaignEmailMessageJsonMarshaller {
+
+    public void marshall(CampaignEmailMessage campaignEmailMessage, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (campaignEmailMessage.getBody() != null) {
+            String body = campaignEmailMessage.getBody();
+            jsonWriter.name("Body");
+            jsonWriter.value(body);
+        }
+        if (campaignEmailMessage.getFromAddress() != null) {
+            String fromAddress = campaignEmailMessage.getFromAddress();
+            jsonWriter.name("FromAddress");
+            jsonWriter.value(fromAddress);
+        }
+        if (campaignEmailMessage.getHtmlBody() != null) {
+            String htmlBody = campaignEmailMessage.getHtmlBody();
+            jsonWriter.name("HtmlBody");
+            jsonWriter.value(htmlBody);
+        }
+        if (campaignEmailMessage.getTitle() != null) {
+            String title = campaignEmailMessage.getTitle();
+            jsonWriter.name("Title");
+            jsonWriter.value(title);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static CampaignEmailMessageJsonMarshaller instance;
+
+    public static CampaignEmailMessageJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new CampaignEmailMessageJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignEmailMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignEmailMessageJsonUnmarshaller.java
new file mode 100644
index 0000000000..e4af8f3e5c
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignEmailMessageJsonUnmarshaller.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO CampaignEmailMessage
+ */
+class CampaignEmailMessageJsonUnmarshaller implements
+        Unmarshaller<CampaignEmailMessage, JsonUnmarshallerContext> {
+
+    public CampaignEmailMessage unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        CampaignEmailMessage campaignEmailMessage = new CampaignEmailMessage();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Body")) {
+                campaignEmailMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("FromAddress")) {
+                campaignEmailMessage.setFromAddress(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("HtmlBody")) {
+                campaignEmailMessage.setHtmlBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Title")) {
+                campaignEmailMessage.setTitle(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return campaignEmailMessage;
+    }
+
+    private static CampaignEmailMessageJsonUnmarshaller instance;
+
+    public static CampaignEmailMessageJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new CampaignEmailMessageJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignLimitsJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignLimitsJsonMarshaller.java
index 1315da5bbf..75d640d0af 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignLimitsJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignLimitsJsonMarshaller.java
@@ -30,6 +30,16 @@ public void marshall(CampaignLimits campaignLimits, AwsJsonWriter jsonWriter) th
             jsonWriter.name("Daily");
             jsonWriter.value(daily);
         }
+        if (campaignLimits.getMaximumDuration() != null) {
+            Integer maximumDuration = campaignLimits.getMaximumDuration();
+            jsonWriter.name("MaximumDuration");
+            jsonWriter.value(maximumDuration);
+        }
+        if (campaignLimits.getMessagesPerSecond() != null) {
+            Integer messagesPerSecond = campaignLimits.getMessagesPerSecond();
+            jsonWriter.name("MessagesPerSecond");
+            jsonWriter.value(messagesPerSecond);
+        }
         if (campaignLimits.getTotal() != null) {
             Integer total = campaignLimits.getTotal();
             jsonWriter.name("Total");
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignLimitsJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignLimitsJsonUnmarshaller.java
index 2a1a5c7150..1077e06940 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignLimitsJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignLimitsJsonUnmarshaller.java
@@ -39,6 +39,12 @@ public CampaignLimits unmarshall(JsonUnmarshallerContext context) throws Excepti
             if (name.equals("Daily")) {
                 campaignLimits.setDaily(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("MaximumDuration")) {
+                campaignLimits.setMaximumDuration(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("MessagesPerSecond")) {
+                campaignLimits.setMessagesPerSecond(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Total")) {
                 campaignLimits.setTotal(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignSmsMessageJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignSmsMessageJsonMarshaller.java
new file mode 100644
index 0000000000..057d207d2f
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignSmsMessageJsonMarshaller.java
@@ -0,0 +1,54 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO CampaignSmsMessage
+ */
+class CampaignSmsMessageJsonMarshaller {
+
+    public void marshall(CampaignSmsMessage campaignSmsMessage, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (campaignSmsMessage.getBody() != null) {
+            String body = campaignSmsMessage.getBody();
+            jsonWriter.name("Body");
+            jsonWriter.value(body);
+        }
+        if (campaignSmsMessage.getMessageType() != null) {
+            String messageType = campaignSmsMessage.getMessageType();
+            jsonWriter.name("MessageType");
+            jsonWriter.value(messageType);
+        }
+        if (campaignSmsMessage.getSenderId() != null) {
+            String senderId = campaignSmsMessage.getSenderId();
+            jsonWriter.name("SenderId");
+            jsonWriter.value(senderId);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static CampaignSmsMessageJsonMarshaller instance;
+
+    public static CampaignSmsMessageJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new CampaignSmsMessageJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignSmsMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignSmsMessageJsonUnmarshaller.java
new file mode 100644
index 0000000000..70cf625e9a
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CampaignSmsMessageJsonUnmarshaller.java
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO CampaignSmsMessage
+ */
+class CampaignSmsMessageJsonUnmarshaller implements
+        Unmarshaller<CampaignSmsMessage, JsonUnmarshallerContext> {
+
+    public CampaignSmsMessage unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        CampaignSmsMessage campaignSmsMessage = new CampaignSmsMessage();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Body")) {
+                campaignSmsMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("MessageType")) {
+                campaignSmsMessage.setMessageType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SenderId")) {
+                campaignSmsMessage.setSenderId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return campaignSmsMessage;
+    }
+
+    private static CampaignSmsMessageJsonUnmarshaller instance;
+
+    public static CampaignSmsMessageJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new CampaignSmsMessageJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateAppRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateAppRequestMarshaller.java
new file mode 100644
index 0000000000..1082754d87
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateAppRequestMarshaller.java
@@ -0,0 +1,78 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for CreateAppRequest
+ */
+public class CreateAppRequestMarshaller implements
+        Marshaller<Request<CreateAppRequest>, CreateAppRequest> {
+
+    public Request<CreateAppRequest> marshall(CreateAppRequest createAppRequest) {
+        if (createAppRequest == null) {
+            throw new AmazonClientException("Invalid argument passed to marshall(CreateAppRequest)");
+        }
+
+        Request<CreateAppRequest> request = new DefaultRequest<CreateAppRequest>(createAppRequest,
+                "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/v1/apps";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            if (createAppRequest.getCreateApplicationRequest() != null) {
+                CreateApplicationRequest createApplicationRequest = createAppRequest
+                        .getCreateApplicationRequest();
+                CreateApplicationRequestJsonMarshaller.getInstance().marshall(
+                        createApplicationRequest, jsonWriter);
+            }
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateAppResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateAppResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..b8ba5e2b3e
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateAppResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response CreateAppResult
+ */
+public class CreateAppResultJsonUnmarshaller implements
+        Unmarshaller<CreateAppResult, JsonUnmarshallerContext> {
+
+    public CreateAppResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        CreateAppResult createAppResult = new CreateAppResult();
+
+        return createAppResult;
+    }
+
+    private static CreateAppResultJsonUnmarshaller instance;
+
+    public static CreateAppResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new CreateAppResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateApplicationRequestJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateApplicationRequestJsonMarshaller.java
new file mode 100644
index 0000000000..caa3385d15
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateApplicationRequestJsonMarshaller.java
@@ -0,0 +1,44 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO CreateApplicationRequest
+ */
+class CreateApplicationRequestJsonMarshaller {
+
+    public void marshall(CreateApplicationRequest createApplicationRequest, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (createApplicationRequest.getName() != null) {
+            String name = createApplicationRequest.getName();
+            jsonWriter.name("Name");
+            jsonWriter.value(name);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static CreateApplicationRequestJsonMarshaller instance;
+
+    public static CreateApplicationRequestJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new CreateApplicationRequestJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateApplicationRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateApplicationRequestJsonUnmarshaller.java
new file mode 100644
index 0000000000..e5ab9d50aa
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateApplicationRequestJsonUnmarshaller.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO CreateApplicationRequest
+ */
+class CreateApplicationRequestJsonUnmarshaller implements
+        Unmarshaller<CreateApplicationRequest, JsonUnmarshallerContext> {
+
+    public CreateApplicationRequest unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        CreateApplicationRequest createApplicationRequest = new CreateApplicationRequest();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Name")) {
+                createApplicationRequest.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return createApplicationRequest;
+    }
+
+    private static CreateApplicationRequestJsonUnmarshaller instance;
+
+    public static CreateApplicationRequestJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new CreateApplicationRequestJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateCampaignRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateCampaignRequestMarshaller.java
index 00ddd9d870..5912c5e59c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateCampaignRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateCampaignRequestMarshaller.java
@@ -50,9 +50,6 @@
                 createCampaignRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.POST);
 
-        if (createCampaignRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(createCampaignRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/campaigns";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateCampaignResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateCampaignResultJsonUnmarshaller.java
index 4134eb8939..75fb776bca 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateCampaignResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateCampaignResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public CreateCampaignResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         CreateCampaignResult createCampaignResult = new CreateCampaignResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            createCampaignResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return createCampaignResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateImportJobRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateImportJobRequestMarshaller.java
index f2ee7535b7..b1b42c9f89 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateImportJobRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateImportJobRequestMarshaller.java
@@ -50,9 +50,6 @@
                 createImportJobRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.POST);
 
-        if (createImportJobRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(createImportJobRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/jobs/import";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateImportJobResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateImportJobResultJsonUnmarshaller.java
index 2274e96036..ae8b50e447 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateImportJobResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateImportJobResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public CreateImportJobResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         CreateImportJobResult createImportJobResult = new CreateImportJobResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            createImportJobResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return createImportJobResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateSegmentRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateSegmentRequestMarshaller.java
index d3bfaeb276..1a6e53d6e1 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateSegmentRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateSegmentRequestMarshaller.java
@@ -50,9 +50,6 @@
                 createSegmentRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.POST);
 
-        if (createSegmentRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(createSegmentRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/segments";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateSegmentResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateSegmentResultJsonUnmarshaller.java
index 90d26a4645..4aae9c207e 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateSegmentResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/CreateSegmentResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public CreateSegmentResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         CreateSegmentResult createSegmentResult = new CreateSegmentResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            createSegmentResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return createSegmentResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultMessageJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultMessageJsonMarshaller.java
new file mode 100644
index 0000000000..aa4d28ca46
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultMessageJsonMarshaller.java
@@ -0,0 +1,64 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO DefaultMessage
+ */
+class DefaultMessageJsonMarshaller {
+
+    public void marshall(DefaultMessage defaultMessage, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (defaultMessage.getBody() != null) {
+            String body = defaultMessage.getBody();
+            jsonWriter.name("Body");
+            jsonWriter.value(body);
+        }
+        if (defaultMessage.getSubstitutions() != null) {
+            java.util.Map<String, java.util.List<String>> substitutions = defaultMessage
+                    .getSubstitutions();
+            jsonWriter.name("Substitutions");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, java.util.List<String>> substitutionsEntry : substitutions
+                    .entrySet()) {
+                java.util.List<String> substitutionsValue = substitutionsEntry.getValue();
+                if (substitutionsValue != null) {
+                    jsonWriter.name(substitutionsEntry.getKey());
+                    jsonWriter.beginArray();
+                    for (String substitutionsValueItem : substitutionsValue) {
+                        if (substitutionsValueItem != null) {
+                            jsonWriter.value(substitutionsValueItem);
+                        }
+                    }
+                    jsonWriter.endArray();
+                }
+            }
+            jsonWriter.endObject();
+        }
+        jsonWriter.endObject();
+    }
+
+    private static DefaultMessageJsonMarshaller instance;
+
+    public static DefaultMessageJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new DefaultMessageJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultMessageJsonUnmarshaller.java
new file mode 100644
index 0000000000..bf0e336df2
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultMessageJsonUnmarshaller.java
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO DefaultMessage
+ */
+class DefaultMessageJsonUnmarshaller implements
+        Unmarshaller<DefaultMessage, JsonUnmarshallerContext> {
+
+    public DefaultMessage unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        DefaultMessage defaultMessage = new DefaultMessage();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Body")) {
+                defaultMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Substitutions")) {
+                defaultMessage.setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return defaultMessage;
+    }
+
+    private static DefaultMessageJsonUnmarshaller instance;
+
+    public static DefaultMessageJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DefaultMessageJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultPushNotificationMessageJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultPushNotificationMessageJsonMarshaller.java
new file mode 100644
index 0000000000..968f645aca
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultPushNotificationMessageJsonMarshaller.java
@@ -0,0 +1,103 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO DefaultPushNotificationMessage
+ */
+class DefaultPushNotificationMessageJsonMarshaller {
+
+    public void marshall(DefaultPushNotificationMessage defaultPushNotificationMessage,
+            AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (defaultPushNotificationMessage.getAction() != null) {
+            String action = defaultPushNotificationMessage.getAction();
+            jsonWriter.name("Action");
+            jsonWriter.value(action);
+        }
+        if (defaultPushNotificationMessage.getBody() != null) {
+            String body = defaultPushNotificationMessage.getBody();
+            jsonWriter.name("Body");
+            jsonWriter.value(body);
+        }
+        if (defaultPushNotificationMessage.getData() != null) {
+            java.util.Map<String, String> data = defaultPushNotificationMessage.getData();
+            jsonWriter.name("Data");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, String> dataEntry : data.entrySet()) {
+                String dataValue = dataEntry.getValue();
+                if (dataValue != null) {
+                    jsonWriter.name(dataEntry.getKey());
+                    jsonWriter.value(dataValue);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (defaultPushNotificationMessage.getJsonData() != null) {
+            String jsonData = defaultPushNotificationMessage.getJsonData();
+            jsonWriter.name("JsonData");
+            jsonWriter.value(jsonData);
+        }
+        if (defaultPushNotificationMessage.getSilentPush() != null) {
+            Boolean silentPush = defaultPushNotificationMessage.getSilentPush();
+            jsonWriter.name("SilentPush");
+            jsonWriter.value(silentPush);
+        }
+        if (defaultPushNotificationMessage.getSubstitutions() != null) {
+            java.util.Map<String, java.util.List<String>> substitutions = defaultPushNotificationMessage
+                    .getSubstitutions();
+            jsonWriter.name("Substitutions");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, java.util.List<String>> substitutionsEntry : substitutions
+                    .entrySet()) {
+                java.util.List<String> substitutionsValue = substitutionsEntry.getValue();
+                if (substitutionsValue != null) {
+                    jsonWriter.name(substitutionsEntry.getKey());
+                    jsonWriter.beginArray();
+                    for (String substitutionsValueItem : substitutionsValue) {
+                        if (substitutionsValueItem != null) {
+                            jsonWriter.value(substitutionsValueItem);
+                        }
+                    }
+                    jsonWriter.endArray();
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (defaultPushNotificationMessage.getTitle() != null) {
+            String title = defaultPushNotificationMessage.getTitle();
+            jsonWriter.name("Title");
+            jsonWriter.value(title);
+        }
+        if (defaultPushNotificationMessage.getUrl() != null) {
+            String url = defaultPushNotificationMessage.getUrl();
+            jsonWriter.name("Url");
+            jsonWriter.value(url);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static DefaultPushNotificationMessageJsonMarshaller instance;
+
+    public static DefaultPushNotificationMessageJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new DefaultPushNotificationMessageJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultPushNotificationMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultPushNotificationMessageJsonUnmarshaller.java
new file mode 100644
index 0000000000..a8f8ad5f61
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DefaultPushNotificationMessageJsonUnmarshaller.java
@@ -0,0 +1,85 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO DefaultPushNotificationMessage
+ */
+class DefaultPushNotificationMessageJsonUnmarshaller implements
+        Unmarshaller<DefaultPushNotificationMessage, JsonUnmarshallerContext> {
+
+    public DefaultPushNotificationMessage unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        DefaultPushNotificationMessage defaultPushNotificationMessage = new DefaultPushNotificationMessage();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Action")) {
+                defaultPushNotificationMessage.setAction(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Body")) {
+                defaultPushNotificationMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Data")) {
+                defaultPushNotificationMessage.setData(new MapUnmarshaller<String>(
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("JsonData")) {
+                defaultPushNotificationMessage.setJsonData(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SilentPush")) {
+                defaultPushNotificationMessage.setSilentPush(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Substitutions")) {
+                defaultPushNotificationMessage
+                        .setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
+                                new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                                )
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("Title")) {
+                defaultPushNotificationMessage.setTitle(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Url")) {
+                defaultPushNotificationMessage.setUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return defaultPushNotificationMessage;
+    }
+
+    private static DefaultPushNotificationMessageJsonUnmarshaller instance;
+
+    public static DefaultPushNotificationMessageJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DefaultPushNotificationMessageJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteAdmChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteAdmChannelRequestMarshaller.java
new file mode 100644
index 0000000000..6b38078384
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteAdmChannelRequestMarshaller.java
@@ -0,0 +1,65 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DeleteAdmChannelRequest
+ */
+public class DeleteAdmChannelRequestMarshaller implements
+        Marshaller<Request<DeleteAdmChannelRequest>, DeleteAdmChannelRequest> {
+
+    public Request<DeleteAdmChannelRequest> marshall(DeleteAdmChannelRequest deleteAdmChannelRequest) {
+        if (deleteAdmChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DeleteAdmChannelRequest)");
+        }
+
+        Request<DeleteAdmChannelRequest> request = new DefaultRequest<DeleteAdmChannelRequest>(
+                deleteAdmChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.DELETE);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/adm";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (deleteAdmChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(deleteAdmChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteAdmChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteAdmChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..ef2da04ac7
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteAdmChannelResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DeleteAdmChannelResult
+ */
+public class DeleteAdmChannelResultJsonUnmarshaller implements
+        Unmarshaller<DeleteAdmChannelResult, JsonUnmarshallerContext> {
+
+    public DeleteAdmChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        DeleteAdmChannelResult deleteAdmChannelResult = new DeleteAdmChannelResult();
+
+        return deleteAdmChannelResult;
+    }
+
+    private static DeleteAdmChannelResultJsonUnmarshaller instance;
+
+    public static DeleteAdmChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DeleteAdmChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteApnsChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteApnsChannelRequestMarshaller.java
index a4d797e721..5ebba04386 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteApnsChannelRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteApnsChannelRequestMarshaller.java
@@ -51,10 +51,6 @@
                 deleteApnsChannelRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.DELETE);
 
-        if (deleteApnsChannelRequest.getAccept() != null) {
-            request.addHeader("accept",
-                    StringUtils.fromString(deleteApnsChannelRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/channels/apns";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteApnsChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteApnsChannelResultJsonUnmarshaller.java
index 60d78932eb..3e7d827d3e 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteApnsChannelResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteApnsChannelResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public DeleteApnsChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         DeleteApnsChannelResult deleteApnsChannelResult = new DeleteApnsChannelResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            deleteApnsChannelResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return deleteApnsChannelResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteApnsSandboxChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteApnsSandboxChannelRequestMarshaller.java
new file mode 100644
index 0000000000..4cefd8aa82
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteApnsSandboxChannelRequestMarshaller.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DeleteApnsSandboxChannelRequest
+ */
+public class DeleteApnsSandboxChannelRequestMarshaller implements
+        Marshaller<Request<DeleteApnsSandboxChannelRequest>, DeleteApnsSandboxChannelRequest> {
+
+    public Request<DeleteApnsSandboxChannelRequest> marshall(
+            DeleteApnsSandboxChannelRequest deleteApnsSandboxChannelRequest) {
+        if (deleteApnsSandboxChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DeleteApnsSandboxChannelRequest)");
+        }
+
+        Request<DeleteApnsSandboxChannelRequest> request = new DefaultRequest<DeleteApnsSandboxChannelRequest>(
+                deleteApnsSandboxChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.DELETE);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/apns_sandbox";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (deleteApnsSandboxChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(deleteApnsSandboxChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteApnsSandboxChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteApnsSandboxChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..2272d82ba9
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteApnsSandboxChannelResultJsonUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DeleteApnsSandboxChannelResult
+ */
+public class DeleteApnsSandboxChannelResultJsonUnmarshaller implements
+        Unmarshaller<DeleteApnsSandboxChannelResult, JsonUnmarshallerContext> {
+
+    public DeleteApnsSandboxChannelResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        DeleteApnsSandboxChannelResult deleteApnsSandboxChannelResult = new DeleteApnsSandboxChannelResult();
+
+        return deleteApnsSandboxChannelResult;
+    }
+
+    private static DeleteApnsSandboxChannelResultJsonUnmarshaller instance;
+
+    public static DeleteApnsSandboxChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DeleteApnsSandboxChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteAppRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteAppRequestMarshaller.java
new file mode 100644
index 0000000000..76a376f01e
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteAppRequestMarshaller.java
@@ -0,0 +1,64 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DeleteAppRequest
+ */
+public class DeleteAppRequestMarshaller implements
+        Marshaller<Request<DeleteAppRequest>, DeleteAppRequest> {
+
+    public Request<DeleteAppRequest> marshall(DeleteAppRequest deleteAppRequest) {
+        if (deleteAppRequest == null) {
+            throw new AmazonClientException("Invalid argument passed to marshall(DeleteAppRequest)");
+        }
+
+        Request<DeleteAppRequest> request = new DefaultRequest<DeleteAppRequest>(deleteAppRequest,
+                "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.DELETE);
+
+        String uriResourcePath = "/v1/apps/{application-id}";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (deleteAppRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(deleteAppRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteAppResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteAppResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..a9454ec851
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteAppResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DeleteAppResult
+ */
+public class DeleteAppResultJsonUnmarshaller implements
+        Unmarshaller<DeleteAppResult, JsonUnmarshallerContext> {
+
+    public DeleteAppResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        DeleteAppResult deleteAppResult = new DeleteAppResult();
+
+        return deleteAppResult;
+    }
+
+    private static DeleteAppResultJsonUnmarshaller instance;
+
+    public static DeleteAppResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DeleteAppResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteBaiduChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteBaiduChannelRequestMarshaller.java
new file mode 100644
index 0000000000..83dfb825ab
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteBaiduChannelRequestMarshaller.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DeleteBaiduChannelRequest
+ */
+public class DeleteBaiduChannelRequestMarshaller implements
+        Marshaller<Request<DeleteBaiduChannelRequest>, DeleteBaiduChannelRequest> {
+
+    public Request<DeleteBaiduChannelRequest> marshall(
+            DeleteBaiduChannelRequest deleteBaiduChannelRequest) {
+        if (deleteBaiduChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DeleteBaiduChannelRequest)");
+        }
+
+        Request<DeleteBaiduChannelRequest> request = new DefaultRequest<DeleteBaiduChannelRequest>(
+                deleteBaiduChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.DELETE);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/baidu";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (deleteBaiduChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(deleteBaiduChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteBaiduChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteBaiduChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..6cc57f661e
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteBaiduChannelResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DeleteBaiduChannelResult
+ */
+public class DeleteBaiduChannelResultJsonUnmarshaller implements
+        Unmarshaller<DeleteBaiduChannelResult, JsonUnmarshallerContext> {
+
+    public DeleteBaiduChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        DeleteBaiduChannelResult deleteBaiduChannelResult = new DeleteBaiduChannelResult();
+
+        return deleteBaiduChannelResult;
+    }
+
+    private static DeleteBaiduChannelResultJsonUnmarshaller instance;
+
+    public static DeleteBaiduChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DeleteBaiduChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteCampaignRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteCampaignRequestMarshaller.java
index 858bf591ea..3a21483c18 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteCampaignRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteCampaignRequestMarshaller.java
@@ -50,9 +50,6 @@
                 deleteCampaignRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.DELETE);
 
-        if (deleteCampaignRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(deleteCampaignRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/campaigns/{campaign-id}";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteCampaignResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteCampaignResultJsonUnmarshaller.java
index 8c29c82a51..2098692f03 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteCampaignResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteCampaignResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public DeleteCampaignResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         DeleteCampaignResult deleteCampaignResult = new DeleteCampaignResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            deleteCampaignResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return deleteCampaignResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteEmailChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteEmailChannelRequestMarshaller.java
new file mode 100644
index 0000000000..c8278a47c1
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteEmailChannelRequestMarshaller.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DeleteEmailChannelRequest
+ */
+public class DeleteEmailChannelRequestMarshaller implements
+        Marshaller<Request<DeleteEmailChannelRequest>, DeleteEmailChannelRequest> {
+
+    public Request<DeleteEmailChannelRequest> marshall(
+            DeleteEmailChannelRequest deleteEmailChannelRequest) {
+        if (deleteEmailChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DeleteEmailChannelRequest)");
+        }
+
+        Request<DeleteEmailChannelRequest> request = new DefaultRequest<DeleteEmailChannelRequest>(
+                deleteEmailChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.DELETE);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/email";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (deleteEmailChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(deleteEmailChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteEmailChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteEmailChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..d263280e47
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteEmailChannelResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DeleteEmailChannelResult
+ */
+public class DeleteEmailChannelResultJsonUnmarshaller implements
+        Unmarshaller<DeleteEmailChannelResult, JsonUnmarshallerContext> {
+
+    public DeleteEmailChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        DeleteEmailChannelResult deleteEmailChannelResult = new DeleteEmailChannelResult();
+
+        return deleteEmailChannelResult;
+    }
+
+    private static DeleteEmailChannelResultJsonUnmarshaller instance;
+
+    public static DeleteEmailChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DeleteEmailChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteEventStreamRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteEventStreamRequestMarshaller.java
new file mode 100644
index 0000000000..106141c799
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteEventStreamRequestMarshaller.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DeleteEventStreamRequest
+ */
+public class DeleteEventStreamRequestMarshaller implements
+        Marshaller<Request<DeleteEventStreamRequest>, DeleteEventStreamRequest> {
+
+    public Request<DeleteEventStreamRequest> marshall(
+            DeleteEventStreamRequest deleteEventStreamRequest) {
+        if (deleteEventStreamRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DeleteEventStreamRequest)");
+        }
+
+        Request<DeleteEventStreamRequest> request = new DefaultRequest<DeleteEventStreamRequest>(
+                deleteEventStreamRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.DELETE);
+
+        String uriResourcePath = "/v1/apps/{application-id}/eventstream";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (deleteEventStreamRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(deleteEventStreamRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteEventStreamResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteEventStreamResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..122868f67b
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteEventStreamResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DeleteEventStreamResult
+ */
+public class DeleteEventStreamResultJsonUnmarshaller implements
+        Unmarshaller<DeleteEventStreamResult, JsonUnmarshallerContext> {
+
+    public DeleteEventStreamResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        DeleteEventStreamResult deleteEventStreamResult = new DeleteEventStreamResult();
+
+        return deleteEventStreamResult;
+    }
+
+    private static DeleteEventStreamResultJsonUnmarshaller instance;
+
+    public static DeleteEventStreamResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DeleteEventStreamResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteGcmChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteGcmChannelRequestMarshaller.java
index 9d34284356..0b26fda7e5 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteGcmChannelRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteGcmChannelRequestMarshaller.java
@@ -50,9 +50,6 @@
                 deleteGcmChannelRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.DELETE);
 
-        if (deleteGcmChannelRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(deleteGcmChannelRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/channels/gcm";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteGcmChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteGcmChannelResultJsonUnmarshaller.java
index 8b149e8dac..1c2e6d3028 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteGcmChannelResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteGcmChannelResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public DeleteGcmChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         DeleteGcmChannelResult deleteGcmChannelResult = new DeleteGcmChannelResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            deleteGcmChannelResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return deleteGcmChannelResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteSegmentRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteSegmentRequestMarshaller.java
index f5756feafb..93bde4a083 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteSegmentRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteSegmentRequestMarshaller.java
@@ -50,9 +50,6 @@
                 deleteSegmentRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.DELETE);
 
-        if (deleteSegmentRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(deleteSegmentRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/segments/{segment-id}";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteSegmentResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteSegmentResultJsonUnmarshaller.java
index 5666cbcbf9..e702086124 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteSegmentResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteSegmentResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public DeleteSegmentResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         DeleteSegmentResult deleteSegmentResult = new DeleteSegmentResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            deleteSegmentResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return deleteSegmentResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteSmsChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteSmsChannelRequestMarshaller.java
new file mode 100644
index 0000000000..1595ad037d
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteSmsChannelRequestMarshaller.java
@@ -0,0 +1,65 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DeleteSmsChannelRequest
+ */
+public class DeleteSmsChannelRequestMarshaller implements
+        Marshaller<Request<DeleteSmsChannelRequest>, DeleteSmsChannelRequest> {
+
+    public Request<DeleteSmsChannelRequest> marshall(DeleteSmsChannelRequest deleteSmsChannelRequest) {
+        if (deleteSmsChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DeleteSmsChannelRequest)");
+        }
+
+        Request<DeleteSmsChannelRequest> request = new DefaultRequest<DeleteSmsChannelRequest>(
+                deleteSmsChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.DELETE);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/sms";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (deleteSmsChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(deleteSmsChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteSmsChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteSmsChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..a93632b957
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DeleteSmsChannelResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DeleteSmsChannelResult
+ */
+public class DeleteSmsChannelResultJsonUnmarshaller implements
+        Unmarshaller<DeleteSmsChannelResult, JsonUnmarshallerContext> {
+
+    public DeleteSmsChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        DeleteSmsChannelResult deleteSmsChannelResult = new DeleteSmsChannelResult();
+
+        return deleteSmsChannelResult;
+    }
+
+    private static DeleteSmsChannelResultJsonUnmarshaller instance;
+
+    public static DeleteSmsChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DeleteSmsChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DirectMessageConfigurationJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DirectMessageConfigurationJsonMarshaller.java
new file mode 100644
index 0000000000..4aff35e4e0
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DirectMessageConfigurationJsonMarshaller.java
@@ -0,0 +1,81 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO DirectMessageConfiguration
+ */
+class DirectMessageConfigurationJsonMarshaller {
+
+    public void marshall(DirectMessageConfiguration directMessageConfiguration,
+            AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (directMessageConfiguration.getADMMessage() != null) {
+            ADMMessage aDMMessage = directMessageConfiguration.getADMMessage();
+            jsonWriter.name("ADMMessage");
+            ADMMessageJsonMarshaller.getInstance().marshall(aDMMessage, jsonWriter);
+        }
+        if (directMessageConfiguration.getAPNSMessage() != null) {
+            APNSMessage aPNSMessage = directMessageConfiguration.getAPNSMessage();
+            jsonWriter.name("APNSMessage");
+            APNSMessageJsonMarshaller.getInstance().marshall(aPNSMessage, jsonWriter);
+        }
+        if (directMessageConfiguration.getBaiduMessage() != null) {
+            BaiduMessage baiduMessage = directMessageConfiguration.getBaiduMessage();
+            jsonWriter.name("BaiduMessage");
+            BaiduMessageJsonMarshaller.getInstance().marshall(baiduMessage, jsonWriter);
+        }
+        if (directMessageConfiguration.getDefaultMessage() != null) {
+            DefaultMessage defaultMessage = directMessageConfiguration.getDefaultMessage();
+            jsonWriter.name("DefaultMessage");
+            DefaultMessageJsonMarshaller.getInstance().marshall(defaultMessage, jsonWriter);
+        }
+        if (directMessageConfiguration.getDefaultPushNotificationMessage() != null) {
+            DefaultPushNotificationMessage defaultPushNotificationMessage = directMessageConfiguration
+                    .getDefaultPushNotificationMessage();
+            jsonWriter.name("DefaultPushNotificationMessage");
+            DefaultPushNotificationMessageJsonMarshaller.getInstance().marshall(
+                    defaultPushNotificationMessage, jsonWriter);
+        }
+        if (directMessageConfiguration.getEmailMessage() != null) {
+            EmailMessage emailMessage = directMessageConfiguration.getEmailMessage();
+            jsonWriter.name("EmailMessage");
+            EmailMessageJsonMarshaller.getInstance().marshall(emailMessage, jsonWriter);
+        }
+        if (directMessageConfiguration.getGCMMessage() != null) {
+            GCMMessage gCMMessage = directMessageConfiguration.getGCMMessage();
+            jsonWriter.name("GCMMessage");
+            GCMMessageJsonMarshaller.getInstance().marshall(gCMMessage, jsonWriter);
+        }
+        if (directMessageConfiguration.getSMSMessage() != null) {
+            SMSMessage sMSMessage = directMessageConfiguration.getSMSMessage();
+            jsonWriter.name("SMSMessage");
+            SMSMessageJsonMarshaller.getInstance().marshall(sMSMessage, jsonWriter);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static DirectMessageConfigurationJsonMarshaller instance;
+
+    public static DirectMessageConfigurationJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new DirectMessageConfigurationJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DirectMessageConfigurationJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DirectMessageConfigurationJsonUnmarshaller.java
new file mode 100644
index 0000000000..df8822c75a
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/DirectMessageConfigurationJsonUnmarshaller.java
@@ -0,0 +1,83 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO DirectMessageConfiguration
+ */
+class DirectMessageConfigurationJsonUnmarshaller implements
+        Unmarshaller<DirectMessageConfiguration, JsonUnmarshallerContext> {
+
+    public DirectMessageConfiguration unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        DirectMessageConfiguration directMessageConfiguration = new DirectMessageConfiguration();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("ADMMessage")) {
+                directMessageConfiguration.setADMMessage(ADMMessageJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("APNSMessage")) {
+                directMessageConfiguration.setAPNSMessage(APNSMessageJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("BaiduMessage")) {
+                directMessageConfiguration.setBaiduMessage(BaiduMessageJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("DefaultMessage")) {
+                directMessageConfiguration.setDefaultMessage(DefaultMessageJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("DefaultPushNotificationMessage")) {
+                directMessageConfiguration
+                        .setDefaultPushNotificationMessage(DefaultPushNotificationMessageJsonUnmarshaller
+                                .getInstance()
+                                .unmarshall(context));
+            } else if (name.equals("EmailMessage")) {
+                directMessageConfiguration.setEmailMessage(EmailMessageJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("GCMMessage")) {
+                directMessageConfiguration.setGCMMessage(GCMMessageJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SMSMessage")) {
+                directMessageConfiguration.setSMSMessage(SMSMessageJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return directMessageConfiguration;
+    }
+
+    private static DirectMessageConfigurationJsonUnmarshaller instance;
+
+    public static DirectMessageConfigurationJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DirectMessageConfigurationJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelRequestJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelRequestJsonMarshaller.java
new file mode 100644
index 0000000000..5dc0529fea
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelRequestJsonMarshaller.java
@@ -0,0 +1,59 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO EmailChannelRequest
+ */
+class EmailChannelRequestJsonMarshaller {
+
+    public void marshall(EmailChannelRequest emailChannelRequest, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (emailChannelRequest.getEnabled() != null) {
+            Boolean enabled = emailChannelRequest.getEnabled();
+            jsonWriter.name("Enabled");
+            jsonWriter.value(enabled);
+        }
+        if (emailChannelRequest.getFromAddress() != null) {
+            String fromAddress = emailChannelRequest.getFromAddress();
+            jsonWriter.name("FromAddress");
+            jsonWriter.value(fromAddress);
+        }
+        if (emailChannelRequest.getIdentity() != null) {
+            String identity = emailChannelRequest.getIdentity();
+            jsonWriter.name("Identity");
+            jsonWriter.value(identity);
+        }
+        if (emailChannelRequest.getRoleArn() != null) {
+            String roleArn = emailChannelRequest.getRoleArn();
+            jsonWriter.name("RoleArn");
+            jsonWriter.value(roleArn);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static EmailChannelRequestJsonMarshaller instance;
+
+    public static EmailChannelRequestJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new EmailChannelRequestJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelRequestJsonUnmarshaller.java
new file mode 100644
index 0000000000..1ad2482a40
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelRequestJsonUnmarshaller.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO EmailChannelRequest
+ */
+class EmailChannelRequestJsonUnmarshaller implements
+        Unmarshaller<EmailChannelRequest, JsonUnmarshallerContext> {
+
+    public EmailChannelRequest unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        EmailChannelRequest emailChannelRequest = new EmailChannelRequest();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Enabled")) {
+                emailChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("FromAddress")) {
+                emailChannelRequest.setFromAddress(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Identity")) {
+                emailChannelRequest.setIdentity(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("RoleArn")) {
+                emailChannelRequest.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return emailChannelRequest;
+    }
+
+    private static EmailChannelRequestJsonUnmarshaller instance;
+
+    public static EmailChannelRequestJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new EmailChannelRequestJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelResponseJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelResponseJsonMarshaller.java
new file mode 100644
index 0000000000..b61470f9c7
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelResponseJsonMarshaller.java
@@ -0,0 +1,99 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO EmailChannelResponse
+ */
+class EmailChannelResponseJsonMarshaller {
+
+    public void marshall(EmailChannelResponse emailChannelResponse, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (emailChannelResponse.getApplicationId() != null) {
+            String applicationId = emailChannelResponse.getApplicationId();
+            jsonWriter.name("ApplicationId");
+            jsonWriter.value(applicationId);
+        }
+        if (emailChannelResponse.getCreationDate() != null) {
+            String creationDate = emailChannelResponse.getCreationDate();
+            jsonWriter.name("CreationDate");
+            jsonWriter.value(creationDate);
+        }
+        if (emailChannelResponse.getEnabled() != null) {
+            Boolean enabled = emailChannelResponse.getEnabled();
+            jsonWriter.name("Enabled");
+            jsonWriter.value(enabled);
+        }
+        if (emailChannelResponse.getFromAddress() != null) {
+            String fromAddress = emailChannelResponse.getFromAddress();
+            jsonWriter.name("FromAddress");
+            jsonWriter.value(fromAddress);
+        }
+        if (emailChannelResponse.getId() != null) {
+            String id = emailChannelResponse.getId();
+            jsonWriter.name("Id");
+            jsonWriter.value(id);
+        }
+        if (emailChannelResponse.getIdentity() != null) {
+            String identity = emailChannelResponse.getIdentity();
+            jsonWriter.name("Identity");
+            jsonWriter.value(identity);
+        }
+        if (emailChannelResponse.getIsArchived() != null) {
+            Boolean isArchived = emailChannelResponse.getIsArchived();
+            jsonWriter.name("IsArchived");
+            jsonWriter.value(isArchived);
+        }
+        if (emailChannelResponse.getLastModifiedBy() != null) {
+            String lastModifiedBy = emailChannelResponse.getLastModifiedBy();
+            jsonWriter.name("LastModifiedBy");
+            jsonWriter.value(lastModifiedBy);
+        }
+        if (emailChannelResponse.getLastModifiedDate() != null) {
+            String lastModifiedDate = emailChannelResponse.getLastModifiedDate();
+            jsonWriter.name("LastModifiedDate");
+            jsonWriter.value(lastModifiedDate);
+        }
+        if (emailChannelResponse.getPlatform() != null) {
+            String platform = emailChannelResponse.getPlatform();
+            jsonWriter.name("Platform");
+            jsonWriter.value(platform);
+        }
+        if (emailChannelResponse.getRoleArn() != null) {
+            String roleArn = emailChannelResponse.getRoleArn();
+            jsonWriter.name("RoleArn");
+            jsonWriter.value(roleArn);
+        }
+        if (emailChannelResponse.getVersion() != null) {
+            Integer version = emailChannelResponse.getVersion();
+            jsonWriter.name("Version");
+            jsonWriter.value(version);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static EmailChannelResponseJsonMarshaller instance;
+
+    public static EmailChannelResponseJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new EmailChannelResponseJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelResponseJsonUnmarshaller.java
new file mode 100644
index 0000000000..4c12c2b54d
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailChannelResponseJsonUnmarshaller.java
@@ -0,0 +1,90 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO EmailChannelResponse
+ */
+class EmailChannelResponseJsonUnmarshaller implements
+        Unmarshaller<EmailChannelResponse, JsonUnmarshallerContext> {
+
+    public EmailChannelResponse unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        EmailChannelResponse emailChannelResponse = new EmailChannelResponse();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("ApplicationId")) {
+                emailChannelResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("CreationDate")) {
+                emailChannelResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Enabled")) {
+                emailChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("FromAddress")) {
+                emailChannelResponse.setFromAddress(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Id")) {
+                emailChannelResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Identity")) {
+                emailChannelResponse.setIdentity(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("IsArchived")) {
+                emailChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LastModifiedBy")) {
+                emailChannelResponse.setLastModifiedBy(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LastModifiedDate")) {
+                emailChannelResponse.setLastModifiedDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Platform")) {
+                emailChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("RoleArn")) {
+                emailChannelResponse.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Version")) {
+                emailChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return emailChannelResponse;
+    }
+
+    private static EmailChannelResponseJsonUnmarshaller instance;
+
+    public static EmailChannelResponseJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new EmailChannelResponseJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailMessageJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailMessageJsonMarshaller.java
new file mode 100644
index 0000000000..85606bf96d
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailMessageJsonMarshaller.java
@@ -0,0 +1,84 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO EmailMessage
+ */
+class EmailMessageJsonMarshaller {
+
+    public void marshall(EmailMessage emailMessage, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (emailMessage.getBody() != null) {
+            String body = emailMessage.getBody();
+            jsonWriter.name("Body");
+            jsonWriter.value(body);
+        }
+        if (emailMessage.getFromAddress() != null) {
+            String fromAddress = emailMessage.getFromAddress();
+            jsonWriter.name("FromAddress");
+            jsonWriter.value(fromAddress);
+        }
+        if (emailMessage.getHtmlBody() != null) {
+            String htmlBody = emailMessage.getHtmlBody();
+            jsonWriter.name("HtmlBody");
+            jsonWriter.value(htmlBody);
+        }
+        if (emailMessage.getSubstitutions() != null) {
+            java.util.Map<String, java.util.List<String>> substitutions = emailMessage
+                    .getSubstitutions();
+            jsonWriter.name("Substitutions");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, java.util.List<String>> substitutionsEntry : substitutions
+                    .entrySet()) {
+                java.util.List<String> substitutionsValue = substitutionsEntry.getValue();
+                if (substitutionsValue != null) {
+                    jsonWriter.name(substitutionsEntry.getKey());
+                    jsonWriter.beginArray();
+                    for (String substitutionsValueItem : substitutionsValue) {
+                        if (substitutionsValueItem != null) {
+                            jsonWriter.value(substitutionsValueItem);
+                        }
+                    }
+                    jsonWriter.endArray();
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (emailMessage.getTemplateArn() != null) {
+            String templateArn = emailMessage.getTemplateArn();
+            jsonWriter.name("TemplateArn");
+            jsonWriter.value(templateArn);
+        }
+        if (emailMessage.getTitle() != null) {
+            String title = emailMessage.getTitle();
+            jsonWriter.name("Title");
+            jsonWriter.value(title);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static EmailMessageJsonMarshaller instance;
+
+    public static EmailMessageJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new EmailMessageJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailMessageJsonUnmarshaller.java
new file mode 100644
index 0000000000..7ebe79fcaf
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EmailMessageJsonUnmarshaller.java
@@ -0,0 +1,74 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO EmailMessage
+ */
+class EmailMessageJsonUnmarshaller implements Unmarshaller<EmailMessage, JsonUnmarshallerContext> {
+
+    public EmailMessage unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        EmailMessage emailMessage = new EmailMessage();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Body")) {
+                emailMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("FromAddress")) {
+                emailMessage.setFromAddress(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("HtmlBody")) {
+                emailMessage.setHtmlBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Substitutions")) {
+                emailMessage.setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("TemplateArn")) {
+                emailMessage.setTemplateArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Title")) {
+                emailMessage.setTitle(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return emailMessage;
+    }
+
+    private static EmailMessageJsonUnmarshaller instance;
+
+    public static EmailMessageJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new EmailMessageJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointMessageResultJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointMessageResultJsonMarshaller.java
new file mode 100644
index 0000000000..c99c15a48b
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointMessageResultJsonMarshaller.java
@@ -0,0 +1,64 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO EndpointMessageResult
+ */
+class EndpointMessageResultJsonMarshaller {
+
+    public void marshall(EndpointMessageResult endpointMessageResult, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (endpointMessageResult.getAddress() != null) {
+            String address = endpointMessageResult.getAddress();
+            jsonWriter.name("Address");
+            jsonWriter.value(address);
+        }
+        if (endpointMessageResult.getDeliveryStatus() != null) {
+            String deliveryStatus = endpointMessageResult.getDeliveryStatus();
+            jsonWriter.name("DeliveryStatus");
+            jsonWriter.value(deliveryStatus);
+        }
+        if (endpointMessageResult.getStatusCode() != null) {
+            Integer statusCode = endpointMessageResult.getStatusCode();
+            jsonWriter.name("StatusCode");
+            jsonWriter.value(statusCode);
+        }
+        if (endpointMessageResult.getStatusMessage() != null) {
+            String statusMessage = endpointMessageResult.getStatusMessage();
+            jsonWriter.name("StatusMessage");
+            jsonWriter.value(statusMessage);
+        }
+        if (endpointMessageResult.getUpdatedToken() != null) {
+            String updatedToken = endpointMessageResult.getUpdatedToken();
+            jsonWriter.name("UpdatedToken");
+            jsonWriter.value(updatedToken);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static EndpointMessageResultJsonMarshaller instance;
+
+    public static EndpointMessageResultJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new EndpointMessageResultJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointMessageResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointMessageResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..953eae4899
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointMessageResultJsonUnmarshaller.java
@@ -0,0 +1,69 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO EndpointMessageResult
+ */
+class EndpointMessageResultJsonUnmarshaller implements
+        Unmarshaller<EndpointMessageResult, JsonUnmarshallerContext> {
+
+    public EndpointMessageResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        EndpointMessageResult endpointMessageResult = new EndpointMessageResult();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Address")) {
+                endpointMessageResult.setAddress(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("DeliveryStatus")) {
+                endpointMessageResult.setDeliveryStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("StatusCode")) {
+                endpointMessageResult.setStatusCode(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("StatusMessage")) {
+                endpointMessageResult.setStatusMessage(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("UpdatedToken")) {
+                endpointMessageResult.setUpdatedToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return endpointMessageResult;
+    }
+
+    private static EndpointMessageResultJsonUnmarshaller instance;
+
+    public static EndpointMessageResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new EndpointMessageResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointResponseJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointResponseJsonMarshaller.java
index 2d03ddcf4c..df06545151 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointResponseJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointResponseJsonMarshaller.java
@@ -120,11 +120,6 @@ public void marshall(EndpointResponse endpointResponse, AwsJsonWriter jsonWriter
             jsonWriter.name("RequestId");
             jsonWriter.value(requestId);
         }
-        if (endpointResponse.getShardId() != null) {
-            String shardId = endpointResponse.getShardId();
-            jsonWriter.name("ShardId");
-            jsonWriter.value(shardId);
-        }
         if (endpointResponse.getUser() != null) {
             EndpointUser user = endpointResponse.getUser();
             jsonWriter.name("User");
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointResponseJsonUnmarshaller.java
index 729da288dd..82596dbcc3 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointResponseJsonUnmarshaller.java
@@ -83,9 +83,6 @@ public EndpointResponse unmarshall(JsonUnmarshallerContext context) throws Excep
             } else if (name.equals("RequestId")) {
                 endpointResponse.setRequestId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
-            } else if (name.equals("ShardId")) {
-                endpointResponse.setShardId(StringJsonUnmarshaller.getInstance()
-                        .unmarshall(context));
             } else if (name.equals("User")) {
                 endpointResponse.setUser(EndpointUserJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointSendConfigurationJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointSendConfigurationJsonMarshaller.java
new file mode 100644
index 0000000000..7f020872be
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointSendConfigurationJsonMarshaller.java
@@ -0,0 +1,88 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO EndpointSendConfiguration
+ */
+class EndpointSendConfigurationJsonMarshaller {
+
+    public void marshall(EndpointSendConfiguration endpointSendConfiguration,
+            AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (endpointSendConfiguration.getBodyOverride() != null) {
+            String bodyOverride = endpointSendConfiguration.getBodyOverride();
+            jsonWriter.name("BodyOverride");
+            jsonWriter.value(bodyOverride);
+        }
+        if (endpointSendConfiguration.getContext() != null) {
+            java.util.Map<String, String> context = endpointSendConfiguration.getContext();
+            jsonWriter.name("Context");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, String> contextEntry : context.entrySet()) {
+                String contextValue = contextEntry.getValue();
+                if (contextValue != null) {
+                    jsonWriter.name(contextEntry.getKey());
+                    jsonWriter.value(contextValue);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (endpointSendConfiguration.getRawContent() != null) {
+            String rawContent = endpointSendConfiguration.getRawContent();
+            jsonWriter.name("RawContent");
+            jsonWriter.value(rawContent);
+        }
+        if (endpointSendConfiguration.getSubstitutions() != null) {
+            java.util.Map<String, java.util.List<String>> substitutions = endpointSendConfiguration
+                    .getSubstitutions();
+            jsonWriter.name("Substitutions");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, java.util.List<String>> substitutionsEntry : substitutions
+                    .entrySet()) {
+                java.util.List<String> substitutionsValue = substitutionsEntry.getValue();
+                if (substitutionsValue != null) {
+                    jsonWriter.name(substitutionsEntry.getKey());
+                    jsonWriter.beginArray();
+                    for (String substitutionsValueItem : substitutionsValue) {
+                        if (substitutionsValueItem != null) {
+                            jsonWriter.value(substitutionsValueItem);
+                        }
+                    }
+                    jsonWriter.endArray();
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (endpointSendConfiguration.getTitleOverride() != null) {
+            String titleOverride = endpointSendConfiguration.getTitleOverride();
+            jsonWriter.name("TitleOverride");
+            jsonWriter.value(titleOverride);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static EndpointSendConfigurationJsonMarshaller instance;
+
+    public static EndpointSendConfigurationJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new EndpointSendConfigurationJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointSendConfigurationJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointSendConfigurationJsonUnmarshaller.java
new file mode 100644
index 0000000000..d103205842
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EndpointSendConfigurationJsonUnmarshaller.java
@@ -0,0 +1,75 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO EndpointSendConfiguration
+ */
+class EndpointSendConfigurationJsonUnmarshaller implements
+        Unmarshaller<EndpointSendConfiguration, JsonUnmarshallerContext> {
+
+    public EndpointSendConfiguration unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        EndpointSendConfiguration endpointSendConfiguration = new EndpointSendConfiguration();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("BodyOverride")) {
+                endpointSendConfiguration.setBodyOverride(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Context")) {
+                endpointSendConfiguration.setContext(new MapUnmarshaller<String>(
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("RawContent")) {
+                endpointSendConfiguration.setRawContent(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Substitutions")) {
+                endpointSendConfiguration
+                        .setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
+                                new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                                )
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("TitleOverride")) {
+                endpointSendConfiguration.setTitleOverride(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return endpointSendConfiguration;
+    }
+
+    private static EndpointSendConfigurationJsonUnmarshaller instance;
+
+    public static EndpointSendConfigurationJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new EndpointSendConfigurationJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventStreamJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventStreamJsonMarshaller.java
new file mode 100644
index 0000000000..8b07e0981d
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventStreamJsonMarshaller.java
@@ -0,0 +1,68 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO EventStream
+ */
+class EventStreamJsonMarshaller {
+
+    public void marshall(EventStream eventStream, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (eventStream.getApplicationId() != null) {
+            String applicationId = eventStream.getApplicationId();
+            jsonWriter.name("ApplicationId");
+            jsonWriter.value(applicationId);
+        }
+        if (eventStream.getDestinationStreamArn() != null) {
+            String destinationStreamArn = eventStream.getDestinationStreamArn();
+            jsonWriter.name("DestinationStreamArn");
+            jsonWriter.value(destinationStreamArn);
+        }
+        if (eventStream.getExternalId() != null) {
+            String externalId = eventStream.getExternalId();
+            jsonWriter.name("ExternalId");
+            jsonWriter.value(externalId);
+        }
+        if (eventStream.getLastModifiedDate() != null) {
+            String lastModifiedDate = eventStream.getLastModifiedDate();
+            jsonWriter.name("LastModifiedDate");
+            jsonWriter.value(lastModifiedDate);
+        }
+        if (eventStream.getLastUpdatedBy() != null) {
+            String lastUpdatedBy = eventStream.getLastUpdatedBy();
+            jsonWriter.name("LastUpdatedBy");
+            jsonWriter.value(lastUpdatedBy);
+        }
+        if (eventStream.getRoleArn() != null) {
+            String roleArn = eventStream.getRoleArn();
+            jsonWriter.name("RoleArn");
+            jsonWriter.value(roleArn);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static EventStreamJsonMarshaller instance;
+
+    public static EventStreamJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new EventStreamJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventStreamJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventStreamJsonUnmarshaller.java
new file mode 100644
index 0000000000..5cdea8c5db
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/EventStreamJsonUnmarshaller.java
@@ -0,0 +1,71 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO EventStream
+ */
+class EventStreamJsonUnmarshaller implements Unmarshaller<EventStream, JsonUnmarshallerContext> {
+
+    public EventStream unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        EventStream eventStream = new EventStream();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("ApplicationId")) {
+                eventStream.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("DestinationStreamArn")) {
+                eventStream.setDestinationStreamArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ExternalId")) {
+                eventStream.setExternalId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LastModifiedDate")) {
+                eventStream.setLastModifiedDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LastUpdatedBy")) {
+                eventStream.setLastUpdatedBy(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("RoleArn")) {
+                eventStream.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return eventStream;
+    }
+
+    private static EventStreamJsonUnmarshaller instance;
+
+    public static EventStreamJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new EventStreamJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ForbiddenExceptionUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ForbiddenExceptionUnmarshaller.java
index 04fa93aed2..fb8e7f7a81 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ForbiddenExceptionUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/ForbiddenExceptionUnmarshaller.java
@@ -20,8 +20,6 @@
 import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.pinpoint.model.ForbiddenException;
 
-import com.amazonaws.services.pinpoint.model.MessageBody;
-
 public class ForbiddenExceptionUnmarshaller extends JsonErrorUnmarshaller {
 
     public ForbiddenExceptionUnmarshaller() {
@@ -35,12 +33,10 @@ public boolean match(JsonErrorResponse error) throws Exception {
 
     @Override
     public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
-        final com.google.gson.Gson gson = new com.google.gson.Gson();
+
         ForbiddenException e = (ForbiddenException) super.unmarshall(error);
         e.setErrorCode("ForbiddenException");
-        e.setAccessControlAllowOrigin(String.valueOf(error.get("AccessControlAllowOrigin")));
-
-        e.setMessageBody(gson.fromJson(error.get("MessageBody"), MessageBody.class));
+        e.setRequestID(String.valueOf(error.get("RequestID")));
 
         return e;
     }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelRequestJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelRequestJsonMarshaller.java
index 0749d19530..6f82b5bd92 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelRequestJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelRequestJsonMarshaller.java
@@ -31,6 +31,11 @@ public void marshall(GCMChannelRequest gCMChannelRequest, AwsJsonWriter jsonWrit
             jsonWriter.name("ApiKey");
             jsonWriter.value(apiKey);
         }
+        if (gCMChannelRequest.getEnabled() != null) {
+            Boolean enabled = gCMChannelRequest.getEnabled();
+            jsonWriter.name("Enabled");
+            jsonWriter.value(enabled);
+        }
         jsonWriter.endObject();
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelRequestJsonUnmarshaller.java
index 88002e7977..bfec230c0f 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelRequestJsonUnmarshaller.java
@@ -39,6 +39,9 @@ public GCMChannelRequest unmarshall(JsonUnmarshallerContext context) throws Exce
             if (name.equals("ApiKey")) {
                 gCMChannelRequest.setApiKey(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("Enabled")) {
+                gCMChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelResponseJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelResponseJsonMarshaller.java
index 14e716275c..3729385c1a 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelResponseJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelResponseJsonMarshaller.java
@@ -41,6 +41,11 @@ public void marshall(GCMChannelResponse gCMChannelResponse, AwsJsonWriter jsonWr
             jsonWriter.name("Credential");
             jsonWriter.value(credential);
         }
+        if (gCMChannelResponse.getEnabled() != null) {
+            Boolean enabled = gCMChannelResponse.getEnabled();
+            jsonWriter.name("Enabled");
+            jsonWriter.value(enabled);
+        }
         if (gCMChannelResponse.getId() != null) {
             String id = gCMChannelResponse.getId();
             jsonWriter.name("Id");
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelResponseJsonUnmarshaller.java
index 62b8a94036..3a1236746a 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelResponseJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMChannelResponseJsonUnmarshaller.java
@@ -45,6 +45,9 @@ public GCMChannelResponse unmarshall(JsonUnmarshallerContext context) throws Exc
             } else if (name.equals("Credential")) {
                 gCMChannelResponse.setCredential(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("Enabled")) {
+                gCMChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("Id")) {
                 gCMChannelResponse.setId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMMessageJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMMessageJsonMarshaller.java
new file mode 100644
index 0000000000..4b52c1f524
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMMessageJsonMarshaller.java
@@ -0,0 +1,142 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO GCMMessage
+ */
+class GCMMessageJsonMarshaller {
+
+    public void marshall(GCMMessage gCMMessage, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (gCMMessage.getAction() != null) {
+            String action = gCMMessage.getAction();
+            jsonWriter.name("Action");
+            jsonWriter.value(action);
+        }
+        if (gCMMessage.getBody() != null) {
+            String body = gCMMessage.getBody();
+            jsonWriter.name("Body");
+            jsonWriter.value(body);
+        }
+        if (gCMMessage.getCollapseKey() != null) {
+            String collapseKey = gCMMessage.getCollapseKey();
+            jsonWriter.name("CollapseKey");
+            jsonWriter.value(collapseKey);
+        }
+        if (gCMMessage.getData() != null) {
+            java.util.Map<String, String> data = gCMMessage.getData();
+            jsonWriter.name("Data");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, String> dataEntry : data.entrySet()) {
+                String dataValue = dataEntry.getValue();
+                if (dataValue != null) {
+                    jsonWriter.name(dataEntry.getKey());
+                    jsonWriter.value(dataValue);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (gCMMessage.getIconReference() != null) {
+            String iconReference = gCMMessage.getIconReference();
+            jsonWriter.name("IconReference");
+            jsonWriter.value(iconReference);
+        }
+        if (gCMMessage.getImageIconUrl() != null) {
+            String imageIconUrl = gCMMessage.getImageIconUrl();
+            jsonWriter.name("ImageIconUrl");
+            jsonWriter.value(imageIconUrl);
+        }
+        if (gCMMessage.getImageUrl() != null) {
+            String imageUrl = gCMMessage.getImageUrl();
+            jsonWriter.name("ImageUrl");
+            jsonWriter.value(imageUrl);
+        }
+        if (gCMMessage.getJsonData() != null) {
+            String jsonData = gCMMessage.getJsonData();
+            jsonWriter.name("JsonData");
+            jsonWriter.value(jsonData);
+        }
+        if (gCMMessage.getRawContent() != null) {
+            String rawContent = gCMMessage.getRawContent();
+            jsonWriter.name("RawContent");
+            jsonWriter.value(rawContent);
+        }
+        if (gCMMessage.getRestrictedPackageName() != null) {
+            String restrictedPackageName = gCMMessage.getRestrictedPackageName();
+            jsonWriter.name("RestrictedPackageName");
+            jsonWriter.value(restrictedPackageName);
+        }
+        if (gCMMessage.getSilentPush() != null) {
+            Boolean silentPush = gCMMessage.getSilentPush();
+            jsonWriter.name("SilentPush");
+            jsonWriter.value(silentPush);
+        }
+        if (gCMMessage.getSmallImageIconUrl() != null) {
+            String smallImageIconUrl = gCMMessage.getSmallImageIconUrl();
+            jsonWriter.name("SmallImageIconUrl");
+            jsonWriter.value(smallImageIconUrl);
+        }
+        if (gCMMessage.getSound() != null) {
+            String sound = gCMMessage.getSound();
+            jsonWriter.name("Sound");
+            jsonWriter.value(sound);
+        }
+        if (gCMMessage.getSubstitutions() != null) {
+            java.util.Map<String, java.util.List<String>> substitutions = gCMMessage
+                    .getSubstitutions();
+            jsonWriter.name("Substitutions");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, java.util.List<String>> substitutionsEntry : substitutions
+                    .entrySet()) {
+                java.util.List<String> substitutionsValue = substitutionsEntry.getValue();
+                if (substitutionsValue != null) {
+                    jsonWriter.name(substitutionsEntry.getKey());
+                    jsonWriter.beginArray();
+                    for (String substitutionsValueItem : substitutionsValue) {
+                        if (substitutionsValueItem != null) {
+                            jsonWriter.value(substitutionsValueItem);
+                        }
+                    }
+                    jsonWriter.endArray();
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (gCMMessage.getTitle() != null) {
+            String title = gCMMessage.getTitle();
+            jsonWriter.name("Title");
+            jsonWriter.value(title);
+        }
+        if (gCMMessage.getUrl() != null) {
+            String url = gCMMessage.getUrl();
+            jsonWriter.name("Url");
+            jsonWriter.value(url);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static GCMMessageJsonMarshaller instance;
+
+    public static GCMMessageJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new GCMMessageJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMMessageJsonUnmarshaller.java
new file mode 100644
index 0000000000..b8845c1467
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GCMMessageJsonUnmarshaller.java
@@ -0,0 +1,105 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO GCMMessage
+ */
+class GCMMessageJsonUnmarshaller implements Unmarshaller<GCMMessage, JsonUnmarshallerContext> {
+
+    public GCMMessage unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        GCMMessage gCMMessage = new GCMMessage();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Action")) {
+                gCMMessage.setAction(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Body")) {
+                gCMMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("CollapseKey")) {
+                gCMMessage.setCollapseKey(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Data")) {
+                gCMMessage.setData(new MapUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("IconReference")) {
+                gCMMessage.setIconReference(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ImageIconUrl")) {
+                gCMMessage.setImageIconUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ImageUrl")) {
+                gCMMessage.setImageUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("JsonData")) {
+                gCMMessage.setJsonData(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("RawContent")) {
+                gCMMessage.setRawContent(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("RestrictedPackageName")) {
+                gCMMessage.setRestrictedPackageName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SilentPush")) {
+                gCMMessage.setSilentPush(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SmallImageIconUrl")) {
+                gCMMessage.setSmallImageIconUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Sound")) {
+                gCMMessage.setSound(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Substitutions")) {
+                gCMMessage.setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("Title")) {
+                gCMMessage.setTitle(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Url")) {
+                gCMMessage.setUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return gCMMessage;
+    }
+
+    private static GCMMessageJsonUnmarshaller instance;
+
+    public static GCMMessageJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GCMMessageJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAdmChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAdmChannelRequestMarshaller.java
new file mode 100644
index 0000000000..5c2e88ee5f
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAdmChannelRequestMarshaller.java
@@ -0,0 +1,65 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetAdmChannelRequest
+ */
+public class GetAdmChannelRequestMarshaller implements
+        Marshaller<Request<GetAdmChannelRequest>, GetAdmChannelRequest> {
+
+    public Request<GetAdmChannelRequest> marshall(GetAdmChannelRequest getAdmChannelRequest) {
+        if (getAdmChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(GetAdmChannelRequest)");
+        }
+
+        Request<GetAdmChannelRequest> request = new DefaultRequest<GetAdmChannelRequest>(
+                getAdmChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/adm";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (getAdmChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(getAdmChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAdmChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAdmChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..649e52ec96
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAdmChannelResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetAdmChannelResult
+ */
+public class GetAdmChannelResultJsonUnmarshaller implements
+        Unmarshaller<GetAdmChannelResult, JsonUnmarshallerContext> {
+
+    public GetAdmChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        GetAdmChannelResult getAdmChannelResult = new GetAdmChannelResult();
+
+        return getAdmChannelResult;
+    }
+
+    private static GetAdmChannelResultJsonUnmarshaller instance;
+
+    public static GetAdmChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetAdmChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApiRootRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApiRootRequestMarshaller.java
new file mode 100644
index 0000000000..8868321e6f
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApiRootRequestMarshaller.java
@@ -0,0 +1,61 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetApiRootRequest
+ */
+public class GetApiRootRequestMarshaller implements
+        Marshaller<Request<GetApiRootRequest>, GetApiRootRequest> {
+
+    public Request<GetApiRootRequest> marshall(GetApiRootRequest getApiRootRequest) {
+        if (getApiRootRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(GetApiRootRequest)");
+        }
+
+        Request<GetApiRootRequest> request = new DefaultRequest<GetApiRootRequest>(
+                getApiRootRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/v1/";
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApiRootResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApiRootResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..4d8479731c
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApiRootResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetApiRootResult
+ */
+public class GetApiRootResultJsonUnmarshaller implements
+        Unmarshaller<GetApiRootResult, JsonUnmarshallerContext> {
+
+    public GetApiRootResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        GetApiRootResult getApiRootResult = new GetApiRootResult();
+
+        return getApiRootResult;
+    }
+
+    private static GetApiRootResultJsonUnmarshaller instance;
+
+    public static GetApiRootResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetApiRootResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApnsChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApnsChannelRequestMarshaller.java
index 5487267948..f1e47c6068 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApnsChannelRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApnsChannelRequestMarshaller.java
@@ -50,9 +50,6 @@
                 getApnsChannelRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.GET);
 
-        if (getApnsChannelRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(getApnsChannelRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/channels/apns";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApnsChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApnsChannelResultJsonUnmarshaller.java
index 3244b724d1..06a731db74 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApnsChannelResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApnsChannelResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public GetApnsChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         GetApnsChannelResult getApnsChannelResult = new GetApnsChannelResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            getApnsChannelResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return getApnsChannelResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApnsSandboxChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApnsSandboxChannelRequestMarshaller.java
new file mode 100644
index 0000000000..58785ab9be
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApnsSandboxChannelRequestMarshaller.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetApnsSandboxChannelRequest
+ */
+public class GetApnsSandboxChannelRequestMarshaller implements
+        Marshaller<Request<GetApnsSandboxChannelRequest>, GetApnsSandboxChannelRequest> {
+
+    public Request<GetApnsSandboxChannelRequest> marshall(
+            GetApnsSandboxChannelRequest getApnsSandboxChannelRequest) {
+        if (getApnsSandboxChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(GetApnsSandboxChannelRequest)");
+        }
+
+        Request<GetApnsSandboxChannelRequest> request = new DefaultRequest<GetApnsSandboxChannelRequest>(
+                getApnsSandboxChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/apns_sandbox";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (getApnsSandboxChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(getApnsSandboxChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApnsSandboxChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApnsSandboxChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..e1180e8d16
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApnsSandboxChannelResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetApnsSandboxChannelResult
+ */
+public class GetApnsSandboxChannelResultJsonUnmarshaller implements
+        Unmarshaller<GetApnsSandboxChannelResult, JsonUnmarshallerContext> {
+
+    public GetApnsSandboxChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        GetApnsSandboxChannelResult getApnsSandboxChannelResult = new GetApnsSandboxChannelResult();
+
+        return getApnsSandboxChannelResult;
+    }
+
+    private static GetApnsSandboxChannelResultJsonUnmarshaller instance;
+
+    public static GetApnsSandboxChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetApnsSandboxChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppRequestMarshaller.java
new file mode 100644
index 0000000000..e91b3a3f26
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppRequestMarshaller.java
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetAppRequest
+ */
+public class GetAppRequestMarshaller implements Marshaller<Request<GetAppRequest>, GetAppRequest> {
+
+    public Request<GetAppRequest> marshall(GetAppRequest getAppRequest) {
+        if (getAppRequest == null) {
+            throw new AmazonClientException("Invalid argument passed to marshall(GetAppRequest)");
+        }
+
+        Request<GetAppRequest> request = new DefaultRequest<GetAppRequest>(getAppRequest,
+                "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/v1/apps/{application-id}";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (getAppRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(getAppRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..cbf44a3fe0
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetAppResult
+ */
+public class GetAppResultJsonUnmarshaller implements
+        Unmarshaller<GetAppResult, JsonUnmarshallerContext> {
+
+    public GetAppResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        GetAppResult getAppResult = new GetAppResult();
+
+        return getAppResult;
+    }
+
+    private static GetAppResultJsonUnmarshaller instance;
+
+    public static GetAppResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetAppResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApplicationSettingsRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApplicationSettingsRequestMarshaller.java
index c3a7d8ae3f..ae5003716d 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApplicationSettingsRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApplicationSettingsRequestMarshaller.java
@@ -51,10 +51,6 @@
                 getApplicationSettingsRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.GET);
 
-        if (getApplicationSettingsRequest.getAccept() != null) {
-            request.addHeader("accept",
-                    StringUtils.fromString(getApplicationSettingsRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/settings";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApplicationSettingsResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApplicationSettingsResultJsonUnmarshaller.java
index 69300d7108..6b5375d3cb 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApplicationSettingsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetApplicationSettingsResultJsonUnmarshaller.java
@@ -30,9 +30,6 @@ public GetApplicationSettingsResult unmarshall(JsonUnmarshallerContext context)
             throws Exception {
         GetApplicationSettingsResult getApplicationSettingsResult = new GetApplicationSettingsResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            getApplicationSettingsResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return getApplicationSettingsResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdChannelsRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdChannelsRequestMarshaller.java
new file mode 100644
index 0000000000..3295ad0116
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdChannelsRequestMarshaller.java
@@ -0,0 +1,67 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetAppsApplicationIdChannelsRequest
+ */
+public class GetAppsApplicationIdChannelsRequestMarshaller
+        implements
+        Marshaller<Request<GetAppsApplicationIdChannelsRequest>, GetAppsApplicationIdChannelsRequest> {
+
+    public Request<GetAppsApplicationIdChannelsRequest> marshall(
+            GetAppsApplicationIdChannelsRequest getAppsApplicationIdChannelsRequest) {
+        if (getAppsApplicationIdChannelsRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(GetAppsApplicationIdChannelsRequest)");
+        }
+
+        Request<GetAppsApplicationIdChannelsRequest> request = new DefaultRequest<GetAppsApplicationIdChannelsRequest>(
+                getAppsApplicationIdChannelsRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (getAppsApplicationIdChannelsRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(getAppsApplicationIdChannelsRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdChannelsResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdChannelsResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..73840393fb
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdChannelsResultJsonUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetAppsApplicationIdChannelsResult
+ */
+public class GetAppsApplicationIdChannelsResultJsonUnmarshaller implements
+        Unmarshaller<GetAppsApplicationIdChannelsResult, JsonUnmarshallerContext> {
+
+    public GetAppsApplicationIdChannelsResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        GetAppsApplicationIdChannelsResult getAppsApplicationIdChannelsResult = new GetAppsApplicationIdChannelsResult();
+
+        return getAppsApplicationIdChannelsResult;
+    }
+
+    private static GetAppsApplicationIdChannelsResultJsonUnmarshaller instance;
+
+    public static GetAppsApplicationIdChannelsResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetAppsApplicationIdChannelsResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdEndpointsRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdEndpointsRequestMarshaller.java
new file mode 100644
index 0000000000..bb0a186841
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdEndpointsRequestMarshaller.java
@@ -0,0 +1,68 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetAppsApplicationIdEndpointsRequest
+ */
+public class GetAppsApplicationIdEndpointsRequestMarshaller
+        implements
+        Marshaller<Request<GetAppsApplicationIdEndpointsRequest>, GetAppsApplicationIdEndpointsRequest> {
+
+    public Request<GetAppsApplicationIdEndpointsRequest> marshall(
+            GetAppsApplicationIdEndpointsRequest getAppsApplicationIdEndpointsRequest) {
+        if (getAppsApplicationIdEndpointsRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(GetAppsApplicationIdEndpointsRequest)");
+        }
+
+        Request<GetAppsApplicationIdEndpointsRequest> request = new DefaultRequest<GetAppsApplicationIdEndpointsRequest>(
+                getAppsApplicationIdEndpointsRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/v1/apps/{application-id}/endpoints";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (getAppsApplicationIdEndpointsRequest.getApplicationId() == null) ? ""
+                        : StringUtils.fromString(getAppsApplicationIdEndpointsRequest
+                                .getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdEndpointsResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdEndpointsResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..5c87ae1c4d
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdEndpointsResultJsonUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetAppsApplicationIdEndpointsResult
+ */
+public class GetAppsApplicationIdEndpointsResultJsonUnmarshaller implements
+        Unmarshaller<GetAppsApplicationIdEndpointsResult, JsonUnmarshallerContext> {
+
+    public GetAppsApplicationIdEndpointsResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        GetAppsApplicationIdEndpointsResult getAppsApplicationIdEndpointsResult = new GetAppsApplicationIdEndpointsResult();
+
+        return getAppsApplicationIdEndpointsResult;
+    }
+
+    private static GetAppsApplicationIdEndpointsResultJsonUnmarshaller instance;
+
+    public static GetAppsApplicationIdEndpointsResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetAppsApplicationIdEndpointsResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdJobsRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdJobsRequestMarshaller.java
new file mode 100644
index 0000000000..3b6ae7bb78
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdJobsRequestMarshaller.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetAppsApplicationIdJobsRequest
+ */
+public class GetAppsApplicationIdJobsRequestMarshaller implements
+        Marshaller<Request<GetAppsApplicationIdJobsRequest>, GetAppsApplicationIdJobsRequest> {
+
+    public Request<GetAppsApplicationIdJobsRequest> marshall(
+            GetAppsApplicationIdJobsRequest getAppsApplicationIdJobsRequest) {
+        if (getAppsApplicationIdJobsRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(GetAppsApplicationIdJobsRequest)");
+        }
+
+        Request<GetAppsApplicationIdJobsRequest> request = new DefaultRequest<GetAppsApplicationIdJobsRequest>(
+                getAppsApplicationIdJobsRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/v1/apps/{application-id}/jobs";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (getAppsApplicationIdJobsRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(getAppsApplicationIdJobsRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdJobsResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdJobsResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..71fd66c310
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdJobsResultJsonUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetAppsApplicationIdJobsResult
+ */
+public class GetAppsApplicationIdJobsResultJsonUnmarshaller implements
+        Unmarshaller<GetAppsApplicationIdJobsResult, JsonUnmarshallerContext> {
+
+    public GetAppsApplicationIdJobsResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        GetAppsApplicationIdJobsResult getAppsApplicationIdJobsResult = new GetAppsApplicationIdJobsResult();
+
+        return getAppsApplicationIdJobsResult;
+    }
+
+    private static GetAppsApplicationIdJobsResultJsonUnmarshaller instance;
+
+    public static GetAppsApplicationIdJobsResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetAppsApplicationIdJobsResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdMessagesRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdMessagesRequestMarshaller.java
new file mode 100644
index 0000000000..973cb2ca07
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdMessagesRequestMarshaller.java
@@ -0,0 +1,67 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetAppsApplicationIdMessagesRequest
+ */
+public class GetAppsApplicationIdMessagesRequestMarshaller
+        implements
+        Marshaller<Request<GetAppsApplicationIdMessagesRequest>, GetAppsApplicationIdMessagesRequest> {
+
+    public Request<GetAppsApplicationIdMessagesRequest> marshall(
+            GetAppsApplicationIdMessagesRequest getAppsApplicationIdMessagesRequest) {
+        if (getAppsApplicationIdMessagesRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(GetAppsApplicationIdMessagesRequest)");
+        }
+
+        Request<GetAppsApplicationIdMessagesRequest> request = new DefaultRequest<GetAppsApplicationIdMessagesRequest>(
+                getAppsApplicationIdMessagesRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/v1/apps/{application-id}/messages";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (getAppsApplicationIdMessagesRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(getAppsApplicationIdMessagesRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdMessagesResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdMessagesResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..427a121fcd
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdMessagesResultJsonUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetAppsApplicationIdMessagesResult
+ */
+public class GetAppsApplicationIdMessagesResultJsonUnmarshaller implements
+        Unmarshaller<GetAppsApplicationIdMessagesResult, JsonUnmarshallerContext> {
+
+    public GetAppsApplicationIdMessagesResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        GetAppsApplicationIdMessagesResult getAppsApplicationIdMessagesResult = new GetAppsApplicationIdMessagesResult();
+
+        return getAppsApplicationIdMessagesResult;
+    }
+
+    private static GetAppsApplicationIdMessagesResultJsonUnmarshaller instance;
+
+    public static GetAppsApplicationIdMessagesResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetAppsApplicationIdMessagesResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdSegmentsSegmentIdJobsRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdSegmentsSegmentIdJobsRequestMarshaller.java
new file mode 100644
index 0000000000..06c7c15d36
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdSegmentsSegmentIdJobsRequestMarshaller.java
@@ -0,0 +1,73 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetAppsApplicationIdSegmentsSegmentIdJobsRequest
+ */
+public class GetAppsApplicationIdSegmentsSegmentIdJobsRequestMarshaller
+        implements
+        Marshaller<Request<GetAppsApplicationIdSegmentsSegmentIdJobsRequest>, GetAppsApplicationIdSegmentsSegmentIdJobsRequest> {
+
+    public Request<GetAppsApplicationIdSegmentsSegmentIdJobsRequest> marshall(
+            GetAppsApplicationIdSegmentsSegmentIdJobsRequest getAppsApplicationIdSegmentsSegmentIdJobsRequest) {
+        if (getAppsApplicationIdSegmentsSegmentIdJobsRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(GetAppsApplicationIdSegmentsSegmentIdJobsRequest)");
+        }
+
+        Request<GetAppsApplicationIdSegmentsSegmentIdJobsRequest> request = new DefaultRequest<GetAppsApplicationIdSegmentsSegmentIdJobsRequest>(
+                getAppsApplicationIdSegmentsSegmentIdJobsRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/v1/apps/{application-id}/segments/{segment-id}/jobs";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (getAppsApplicationIdSegmentsSegmentIdJobsRequest.getApplicationId() == null) ? ""
+                        : StringUtils.fromString(getAppsApplicationIdSegmentsSegmentIdJobsRequest
+                                .getApplicationId()));
+        uriResourcePath = uriResourcePath.replace(
+                "{segment-id}",
+                (getAppsApplicationIdSegmentsSegmentIdJobsRequest.getSegmentId() == null) ? ""
+                        : StringUtils.fromString(getAppsApplicationIdSegmentsSegmentIdJobsRequest
+                                .getSegmentId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdSegmentsSegmentIdJobsResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdSegmentsSegmentIdJobsResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..d971f1f86c
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdSegmentsSegmentIdJobsResultJsonUnmarshaller.java
@@ -0,0 +1,44 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response
+ * GetAppsApplicationIdSegmentsSegmentIdJobsResult
+ */
+public class GetAppsApplicationIdSegmentsSegmentIdJobsResultJsonUnmarshaller implements
+        Unmarshaller<GetAppsApplicationIdSegmentsSegmentIdJobsResult, JsonUnmarshallerContext> {
+
+    public GetAppsApplicationIdSegmentsSegmentIdJobsResult unmarshall(
+            JsonUnmarshallerContext context) throws Exception {
+        GetAppsApplicationIdSegmentsSegmentIdJobsResult getAppsApplicationIdSegmentsSegmentIdJobsResult = new GetAppsApplicationIdSegmentsSegmentIdJobsResult();
+
+        return getAppsApplicationIdSegmentsSegmentIdJobsResult;
+    }
+
+    private static GetAppsApplicationIdSegmentsSegmentIdJobsResultJsonUnmarshaller instance;
+
+    public static GetAppsApplicationIdSegmentsSegmentIdJobsResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetAppsApplicationIdSegmentsSegmentIdJobsResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdUsersMessagesRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdUsersMessagesRequestMarshaller.java
new file mode 100644
index 0000000000..6f880ec877
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdUsersMessagesRequestMarshaller.java
@@ -0,0 +1,68 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetAppsApplicationIdUsersMessagesRequest
+ */
+public class GetAppsApplicationIdUsersMessagesRequestMarshaller
+        implements
+        Marshaller<Request<GetAppsApplicationIdUsersMessagesRequest>, GetAppsApplicationIdUsersMessagesRequest> {
+
+    public Request<GetAppsApplicationIdUsersMessagesRequest> marshall(
+            GetAppsApplicationIdUsersMessagesRequest getAppsApplicationIdUsersMessagesRequest) {
+        if (getAppsApplicationIdUsersMessagesRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(GetAppsApplicationIdUsersMessagesRequest)");
+        }
+
+        Request<GetAppsApplicationIdUsersMessagesRequest> request = new DefaultRequest<GetAppsApplicationIdUsersMessagesRequest>(
+                getAppsApplicationIdUsersMessagesRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/v1/apps/{application-id}/users-messages";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (getAppsApplicationIdUsersMessagesRequest.getApplicationId() == null) ? ""
+                        : StringUtils.fromString(getAppsApplicationIdUsersMessagesRequest
+                                .getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdUsersMessagesResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdUsersMessagesResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..4ec7f684a5
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsApplicationIdUsersMessagesResultJsonUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetAppsApplicationIdUsersMessagesResult
+ */
+public class GetAppsApplicationIdUsersMessagesResultJsonUnmarshaller implements
+        Unmarshaller<GetAppsApplicationIdUsersMessagesResult, JsonUnmarshallerContext> {
+
+    public GetAppsApplicationIdUsersMessagesResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        GetAppsApplicationIdUsersMessagesResult getAppsApplicationIdUsersMessagesResult = new GetAppsApplicationIdUsersMessagesResult();
+
+        return getAppsApplicationIdUsersMessagesResult;
+    }
+
+    private static GetAppsApplicationIdUsersMessagesResultJsonUnmarshaller instance;
+
+    public static GetAppsApplicationIdUsersMessagesResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetAppsApplicationIdUsersMessagesResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsRequestMarshaller.java
new file mode 100644
index 0000000000..cd09ff5064
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsRequestMarshaller.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetAppsRequest
+ */
+public class GetAppsRequestMarshaller implements
+        Marshaller<Request<GetAppsRequest>, GetAppsRequest> {
+
+    public Request<GetAppsRequest> marshall(GetAppsRequest getAppsRequest) {
+        if (getAppsRequest == null) {
+            throw new AmazonClientException("Invalid argument passed to marshall(GetAppsRequest)");
+        }
+
+        Request<GetAppsRequest> request = new DefaultRequest<GetAppsRequest>(getAppsRequest,
+                "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/v1/apps";
+        if (getAppsRequest.getPageSize() != null) {
+            request.addParameter("page-size", StringUtils.fromString(getAppsRequest.getPageSize()));
+        }
+        if (getAppsRequest.getToken() != null) {
+            request.addParameter("token", StringUtils.fromString(getAppsRequest.getToken()));
+        }
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..04ce251e8e
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetAppsResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetAppsResult
+ */
+public class GetAppsResultJsonUnmarshaller implements
+        Unmarshaller<GetAppsResult, JsonUnmarshallerContext> {
+
+    public GetAppsResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        GetAppsResult getAppsResult = new GetAppsResult();
+
+        return getAppsResult;
+    }
+
+    private static GetAppsResultJsonUnmarshaller instance;
+
+    public static GetAppsResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetAppsResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetBaiduChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetBaiduChannelRequestMarshaller.java
new file mode 100644
index 0000000000..78cb54e6ab
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetBaiduChannelRequestMarshaller.java
@@ -0,0 +1,65 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetBaiduChannelRequest
+ */
+public class GetBaiduChannelRequestMarshaller implements
+        Marshaller<Request<GetBaiduChannelRequest>, GetBaiduChannelRequest> {
+
+    public Request<GetBaiduChannelRequest> marshall(GetBaiduChannelRequest getBaiduChannelRequest) {
+        if (getBaiduChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(GetBaiduChannelRequest)");
+        }
+
+        Request<GetBaiduChannelRequest> request = new DefaultRequest<GetBaiduChannelRequest>(
+                getBaiduChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/baidu";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (getBaiduChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(getBaiduChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetBaiduChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetBaiduChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..b5e93ff920
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetBaiduChannelResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetBaiduChannelResult
+ */
+public class GetBaiduChannelResultJsonUnmarshaller implements
+        Unmarshaller<GetBaiduChannelResult, JsonUnmarshallerContext> {
+
+    public GetBaiduChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        GetBaiduChannelResult getBaiduChannelResult = new GetBaiduChannelResult();
+
+        return getBaiduChannelResult;
+    }
+
+    private static GetBaiduChannelResultJsonUnmarshaller instance;
+
+    public static GetBaiduChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetBaiduChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignActivitiesRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignActivitiesRequestMarshaller.java
index 4843a1e21d..967bd18602 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignActivitiesRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignActivitiesRequestMarshaller.java
@@ -51,10 +51,6 @@
                 getCampaignActivitiesRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.GET);
 
-        if (getCampaignActivitiesRequest.getAccept() != null) {
-            request.addHeader("accept",
-                    StringUtils.fromString(getCampaignActivitiesRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/campaigns/{campaign-id}/activities";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignActivitiesResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignActivitiesResultJsonUnmarshaller.java
index 9c1231c197..6103a5bb73 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignActivitiesResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignActivitiesResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public GetCampaignActivitiesResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         GetCampaignActivitiesResult getCampaignActivitiesResult = new GetCampaignActivitiesResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            getCampaignActivitiesResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return getCampaignActivitiesResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignRequestMarshaller.java
index fc51f716b1..952723ddc0 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignRequestMarshaller.java
@@ -50,9 +50,6 @@
                 getCampaignRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.GET);
 
-        if (getCampaignRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(getCampaignRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/campaigns/{campaign-id}";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignResultJsonUnmarshaller.java
index 8296902949..6768fdb3d8 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public GetCampaignResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         GetCampaignResult getCampaignResult = new GetCampaignResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            getCampaignResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return getCampaignResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignVersionRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignVersionRequestMarshaller.java
index 85e3857215..4d03b7e8b8 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignVersionRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignVersionRequestMarshaller.java
@@ -51,10 +51,6 @@
                 getCampaignVersionRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.GET);
 
-        if (getCampaignVersionRequest.getAccept() != null) {
-            request.addHeader("accept",
-                    StringUtils.fromString(getCampaignVersionRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/campaigns/{campaign-id}/versions/{version}";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignVersionResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignVersionResultJsonUnmarshaller.java
index 8c0b89709e..c8d682c785 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignVersionResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignVersionResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public GetCampaignVersionResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         GetCampaignVersionResult getCampaignVersionResult = new GetCampaignVersionResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            getCampaignVersionResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return getCampaignVersionResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignVersionsRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignVersionsRequestMarshaller.java
index f11de260ac..c9d36582ce 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignVersionsRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignVersionsRequestMarshaller.java
@@ -51,10 +51,6 @@
                 getCampaignVersionsRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.GET);
 
-        if (getCampaignVersionsRequest.getAccept() != null) {
-            request.addHeader("accept",
-                    StringUtils.fromString(getCampaignVersionsRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/campaigns/{campaign-id}/versions";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignVersionsResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignVersionsResultJsonUnmarshaller.java
index c9ae9ab4cc..20a992a953 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignVersionsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignVersionsResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public GetCampaignVersionsResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         GetCampaignVersionsResult getCampaignVersionsResult = new GetCampaignVersionsResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            getCampaignVersionsResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return getCampaignVersionsResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignsRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignsRequestMarshaller.java
index 3e23d55544..30d4d2c7c0 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignsRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignsRequestMarshaller.java
@@ -50,9 +50,6 @@
                 getCampaignsRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.GET);
 
-        if (getCampaignsRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(getCampaignsRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/campaigns";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignsResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignsResultJsonUnmarshaller.java
index 6a0f5e0a28..5516bb2cd1 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetCampaignsResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public GetCampaignsResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         GetCampaignsResult getCampaignsResult = new GetCampaignsResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            getCampaignsResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return getCampaignsResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEmailChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEmailChannelRequestMarshaller.java
new file mode 100644
index 0000000000..2695047af5
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEmailChannelRequestMarshaller.java
@@ -0,0 +1,65 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetEmailChannelRequest
+ */
+public class GetEmailChannelRequestMarshaller implements
+        Marshaller<Request<GetEmailChannelRequest>, GetEmailChannelRequest> {
+
+    public Request<GetEmailChannelRequest> marshall(GetEmailChannelRequest getEmailChannelRequest) {
+        if (getEmailChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(GetEmailChannelRequest)");
+        }
+
+        Request<GetEmailChannelRequest> request = new DefaultRequest<GetEmailChannelRequest>(
+                getEmailChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/email";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (getEmailChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(getEmailChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEmailChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEmailChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..0cf6fa8aa6
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEmailChannelResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetEmailChannelResult
+ */
+public class GetEmailChannelResultJsonUnmarshaller implements
+        Unmarshaller<GetEmailChannelResult, JsonUnmarshallerContext> {
+
+    public GetEmailChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        GetEmailChannelResult getEmailChannelResult = new GetEmailChannelResult();
+
+        return getEmailChannelResult;
+    }
+
+    private static GetEmailChannelResultJsonUnmarshaller instance;
+
+    public static GetEmailChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetEmailChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEndpointRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEndpointRequestMarshaller.java
index 00aee3fddd..f195eaaa1c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEndpointRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEndpointRequestMarshaller.java
@@ -50,9 +50,6 @@
                 getEndpointRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.GET);
 
-        if (getEndpointRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(getEndpointRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/endpoints/{endpoint-id}";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEndpointResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEndpointResultJsonUnmarshaller.java
index f1c7d6f732..5f00aa7e97 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEndpointResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEndpointResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public GetEndpointResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         GetEndpointResult getEndpointResult = new GetEndpointResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            getEndpointResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return getEndpointResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEventStreamRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEventStreamRequestMarshaller.java
new file mode 100644
index 0000000000..c6abc9edff
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEventStreamRequestMarshaller.java
@@ -0,0 +1,65 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetEventStreamRequest
+ */
+public class GetEventStreamRequestMarshaller implements
+        Marshaller<Request<GetEventStreamRequest>, GetEventStreamRequest> {
+
+    public Request<GetEventStreamRequest> marshall(GetEventStreamRequest getEventStreamRequest) {
+        if (getEventStreamRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(GetEventStreamRequest)");
+        }
+
+        Request<GetEventStreamRequest> request = new DefaultRequest<GetEventStreamRequest>(
+                getEventStreamRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/v1/apps/{application-id}/eventstream";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (getEventStreamRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(getEventStreamRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEventStreamResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEventStreamResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..5a15b1a2d9
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetEventStreamResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetEventStreamResult
+ */
+public class GetEventStreamResultJsonUnmarshaller implements
+        Unmarshaller<GetEventStreamResult, JsonUnmarshallerContext> {
+
+    public GetEventStreamResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        GetEventStreamResult getEventStreamResult = new GetEventStreamResult();
+
+        return getEventStreamResult;
+    }
+
+    private static GetEventStreamResultJsonUnmarshaller instance;
+
+    public static GetEventStreamResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetEventStreamResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetGcmChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetGcmChannelRequestMarshaller.java
index 8c4cad5718..ed81552721 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetGcmChannelRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetGcmChannelRequestMarshaller.java
@@ -50,9 +50,6 @@
                 getGcmChannelRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.GET);
 
-        if (getGcmChannelRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(getGcmChannelRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/channels/gcm";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetGcmChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetGcmChannelResultJsonUnmarshaller.java
index 5a1683b9d5..7da3a43025 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetGcmChannelResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetGcmChannelResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public GetGcmChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         GetGcmChannelResult getGcmChannelResult = new GetGcmChannelResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            getGcmChannelResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return getGcmChannelResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetImportJobRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetImportJobRequestMarshaller.java
index 12a0ad7328..1482136b7f 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetImportJobRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetImportJobRequestMarshaller.java
@@ -50,9 +50,6 @@
                 getImportJobRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.GET);
 
-        if (getImportJobRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(getImportJobRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/jobs/import/{job-id}";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetImportJobResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetImportJobResultJsonUnmarshaller.java
index 98ba82cf64..db34fdccfa 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetImportJobResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetImportJobResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public GetImportJobResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         GetImportJobResult getImportJobResult = new GetImportJobResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            getImportJobResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return getImportJobResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetImportJobsRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetImportJobsRequestMarshaller.java
index 73a31b83af..f6e9a95d19 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetImportJobsRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetImportJobsRequestMarshaller.java
@@ -50,9 +50,6 @@
                 getImportJobsRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.GET);
 
-        if (getImportJobsRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(getImportJobsRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/jobs/import";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetImportJobsResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetImportJobsResultJsonUnmarshaller.java
index cc87414670..f1bce5f509 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetImportJobsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetImportJobsResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public GetImportJobsResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         GetImportJobsResult getImportJobsResult = new GetImportJobsResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            getImportJobsResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return getImportJobsResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentImportJobsRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentImportJobsRequestMarshaller.java
index cd0f3f8214..7fd6bf91dd 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentImportJobsRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentImportJobsRequestMarshaller.java
@@ -51,10 +51,6 @@
                 getSegmentImportJobsRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.GET);
 
-        if (getSegmentImportJobsRequest.getAccept() != null) {
-            request.addHeader("accept",
-                    StringUtils.fromString(getSegmentImportJobsRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/segments/{segment-id}/jobs/import";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentImportJobsResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentImportJobsResultJsonUnmarshaller.java
index 11acf99dc8..157b700dd2 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentImportJobsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentImportJobsResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public GetSegmentImportJobsResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         GetSegmentImportJobsResult getSegmentImportJobsResult = new GetSegmentImportJobsResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            getSegmentImportJobsResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return getSegmentImportJobsResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentRequestMarshaller.java
index fabb68cbbf..d6a206e94a 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentRequestMarshaller.java
@@ -50,9 +50,6 @@
                 getSegmentRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.GET);
 
-        if (getSegmentRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(getSegmentRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/segments/{segment-id}";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentResultJsonUnmarshaller.java
index f2f443b3a7..6ac4b85623 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public GetSegmentResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         GetSegmentResult getSegmentResult = new GetSegmentResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            getSegmentResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return getSegmentResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentVersionRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentVersionRequestMarshaller.java
index dca0b0a5be..a68bc25e3c 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentVersionRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentVersionRequestMarshaller.java
@@ -51,10 +51,6 @@
                 getSegmentVersionRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.GET);
 
-        if (getSegmentVersionRequest.getAccept() != null) {
-            request.addHeader("accept",
-                    StringUtils.fromString(getSegmentVersionRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/segments/{segment-id}/versions/{version}";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentVersionResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentVersionResultJsonUnmarshaller.java
index 2da49523fc..6e4d93a780 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentVersionResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentVersionResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public GetSegmentVersionResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         GetSegmentVersionResult getSegmentVersionResult = new GetSegmentVersionResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            getSegmentVersionResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return getSegmentVersionResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentVersionsRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentVersionsRequestMarshaller.java
index 4952120865..aefcb38284 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentVersionsRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentVersionsRequestMarshaller.java
@@ -51,10 +51,6 @@
                 getSegmentVersionsRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.GET);
 
-        if (getSegmentVersionsRequest.getAccept() != null) {
-            request.addHeader("accept",
-                    StringUtils.fromString(getSegmentVersionsRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/segments/{segment-id}/versions";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentVersionsResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentVersionsResultJsonUnmarshaller.java
index 14959b3e34..05a1bac560 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentVersionsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentVersionsResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public GetSegmentVersionsResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         GetSegmentVersionsResult getSegmentVersionsResult = new GetSegmentVersionsResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            getSegmentVersionsResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return getSegmentVersionsResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentsRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentsRequestMarshaller.java
index 1295a3e192..ef9478f703 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentsRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentsRequestMarshaller.java
@@ -50,9 +50,6 @@
                 getSegmentsRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.GET);
 
-        if (getSegmentsRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(getSegmentsRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/segments";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentsResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentsResultJsonUnmarshaller.java
index 40f40c7da4..5e59f2c3c5 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSegmentsResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public GetSegmentsResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         GetSegmentsResult getSegmentsResult = new GetSegmentsResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            getSegmentsResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return getSegmentsResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSmsChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSmsChannelRequestMarshaller.java
new file mode 100644
index 0000000000..77e87bd62d
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSmsChannelRequestMarshaller.java
@@ -0,0 +1,65 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetSmsChannelRequest
+ */
+public class GetSmsChannelRequestMarshaller implements
+        Marshaller<Request<GetSmsChannelRequest>, GetSmsChannelRequest> {
+
+    public Request<GetSmsChannelRequest> marshall(GetSmsChannelRequest getSmsChannelRequest) {
+        if (getSmsChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(GetSmsChannelRequest)");
+        }
+
+        Request<GetSmsChannelRequest> request = new DefaultRequest<GetSmsChannelRequest>(
+                getSmsChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/sms";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (getSmsChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(getSmsChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSmsChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSmsChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..e43335ab91
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/GetSmsChannelResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetSmsChannelResult
+ */
+public class GetSmsChannelResultJsonUnmarshaller implements
+        Unmarshaller<GetSmsChannelResult, JsonUnmarshallerContext> {
+
+    public GetSmsChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        GetSmsChannelResult getSmsChannelResult = new GetSmsChannelResult();
+
+        return getSmsChannelResult;
+    }
+
+    private static GetSmsChannelResultJsonUnmarshaller instance;
+
+    public static GetSmsChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetSmsChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/InternalServerErrorExceptionUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/InternalServerErrorExceptionUnmarshaller.java
index 210c04de43..7d23d83515 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/InternalServerErrorExceptionUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/InternalServerErrorExceptionUnmarshaller.java
@@ -20,8 +20,6 @@
 import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.pinpoint.model.InternalServerErrorException;
 
-import com.amazonaws.services.pinpoint.model.MessageBody;
-
 public class InternalServerErrorExceptionUnmarshaller extends JsonErrorUnmarshaller {
 
     public InternalServerErrorExceptionUnmarshaller() {
@@ -35,12 +33,10 @@ public boolean match(JsonErrorResponse error) throws Exception {
 
     @Override
     public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
-        final com.google.gson.Gson gson = new com.google.gson.Gson();
+
         InternalServerErrorException e = (InternalServerErrorException) super.unmarshall(error);
         e.setErrorCode("InternalServerErrorException");
-        e.setAccessControlAllowOrigin(String.valueOf(error.get("AccessControlAllowOrigin")));
-
-        e.setMessageBody(gson.fromJson(error.get("MessageBody"), MessageBody.class));
+        e.setRequestID(String.valueOf(error.get("RequestID")));
 
         return e;
     }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageConfigurationJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageConfigurationJsonMarshaller.java
index f9b91889f6..a950040eba 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageConfigurationJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageConfigurationJsonMarshaller.java
@@ -36,11 +36,21 @@ public void marshall(MessageConfiguration messageConfiguration, AwsJsonWriter js
             jsonWriter.name("DefaultMessage");
             MessageJsonMarshaller.getInstance().marshall(defaultMessage, jsonWriter);
         }
+        if (messageConfiguration.getEmailMessage() != null) {
+            CampaignEmailMessage emailMessage = messageConfiguration.getEmailMessage();
+            jsonWriter.name("EmailMessage");
+            CampaignEmailMessageJsonMarshaller.getInstance().marshall(emailMessage, jsonWriter);
+        }
         if (messageConfiguration.getGCMMessage() != null) {
             Message gCMMessage = messageConfiguration.getGCMMessage();
             jsonWriter.name("GCMMessage");
             MessageJsonMarshaller.getInstance().marshall(gCMMessage, jsonWriter);
         }
+        if (messageConfiguration.getSMSMessage() != null) {
+            CampaignSmsMessage sMSMessage = messageConfiguration.getSMSMessage();
+            jsonWriter.name("SMSMessage");
+            CampaignSmsMessageJsonMarshaller.getInstance().marshall(sMSMessage, jsonWriter);
+        }
         jsonWriter.endObject();
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageConfigurationJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageConfigurationJsonUnmarshaller.java
index ccdf1b871c..024061d27e 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageConfigurationJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageConfigurationJsonUnmarshaller.java
@@ -42,9 +42,16 @@ public MessageConfiguration unmarshall(JsonUnmarshallerContext context) throws E
             } else if (name.equals("DefaultMessage")) {
                 messageConfiguration.setDefaultMessage(MessageJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("EmailMessage")) {
+                messageConfiguration.setEmailMessage(CampaignEmailMessageJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
             } else if (name.equals("GCMMessage")) {
                 messageConfiguration.setGCMMessage(MessageJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("SMSMessage")) {
+                messageConfiguration.setSMSMessage(CampaignSmsMessageJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageJsonMarshaller.java
index c45f6967fe..7befdb64ec 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageJsonMarshaller.java
@@ -40,6 +40,11 @@ public void marshall(Message message, AwsJsonWriter jsonWriter) throws Exception
             jsonWriter.name("ImageIconUrl");
             jsonWriter.value(imageIconUrl);
         }
+        if (message.getImageSmallIconUrl() != null) {
+            String imageSmallIconUrl = message.getImageSmallIconUrl();
+            jsonWriter.name("ImageSmallIconUrl");
+            jsonWriter.value(imageSmallIconUrl);
+        }
         if (message.getImageUrl() != null) {
             String imageUrl = message.getImageUrl();
             jsonWriter.name("ImageUrl");
@@ -55,6 +60,11 @@ public void marshall(Message message, AwsJsonWriter jsonWriter) throws Exception
             jsonWriter.name("MediaUrl");
             jsonWriter.value(mediaUrl);
         }
+        if (message.getRawContent() != null) {
+            String rawContent = message.getRawContent();
+            jsonWriter.name("RawContent");
+            jsonWriter.value(rawContent);
+        }
         if (message.getSilentPush() != null) {
             Boolean silentPush = message.getSilentPush();
             jsonWriter.name("SilentPush");
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageJsonUnmarshaller.java
index 813118fbca..f4a3790b81 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageJsonUnmarshaller.java
@@ -44,6 +44,9 @@ public Message unmarshall(JsonUnmarshallerContext context) throws Exception {
             } else if (name.equals("ImageIconUrl")) {
                 message.setImageIconUrl(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("ImageSmallIconUrl")) {
+                message.setImageSmallIconUrl(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("ImageUrl")) {
                 message.setImageUrl(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
@@ -53,6 +56,9 @@ public Message unmarshall(JsonUnmarshallerContext context) throws Exception {
             } else if (name.equals("MediaUrl")) {
                 message.setMediaUrl(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("RawContent")) {
+                message.setRawContent(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("SilentPush")) {
                 message.setSilentPush(BooleanJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageRequestJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageRequestJsonMarshaller.java
new file mode 100644
index 0000000000..8ee483b3b4
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageRequestJsonMarshaller.java
@@ -0,0 +1,107 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO MessageRequest
+ */
+class MessageRequestJsonMarshaller {
+
+    public void marshall(MessageRequest messageRequest, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (messageRequest.getAddresses() != null) {
+            java.util.Map<String, AddressConfiguration> addresses = messageRequest.getAddresses();
+            jsonWriter.name("Addresses");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, AddressConfiguration> addressesEntry : addresses
+                    .entrySet()) {
+                AddressConfiguration addressesValue = addressesEntry.getValue();
+                if (addressesValue != null) {
+                    jsonWriter.name(addressesEntry.getKey());
+                    AddressConfigurationJsonMarshaller.getInstance().marshall(addressesValue,
+                            jsonWriter);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (messageRequest.getCampaign() != null) {
+            java.util.Map<String, String> campaign = messageRequest.getCampaign();
+            jsonWriter.name("Campaign");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, String> campaignEntry : campaign.entrySet()) {
+                String campaignValue = campaignEntry.getValue();
+                if (campaignValue != null) {
+                    jsonWriter.name(campaignEntry.getKey());
+                    jsonWriter.value(campaignValue);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (messageRequest.getContext() != null) {
+            java.util.Map<String, String> context = messageRequest.getContext();
+            jsonWriter.name("Context");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, String> contextEntry : context.entrySet()) {
+                String contextValue = contextEntry.getValue();
+                if (contextValue != null) {
+                    jsonWriter.name(contextEntry.getKey());
+                    jsonWriter.value(contextValue);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (messageRequest.getEndpoints() != null) {
+            java.util.Map<String, EndpointSendConfiguration> endpoints = messageRequest
+                    .getEndpoints();
+            jsonWriter.name("Endpoints");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, EndpointSendConfiguration> endpointsEntry : endpoints
+                    .entrySet()) {
+                EndpointSendConfiguration endpointsValue = endpointsEntry.getValue();
+                if (endpointsValue != null) {
+                    jsonWriter.name(endpointsEntry.getKey());
+                    EndpointSendConfigurationJsonMarshaller.getInstance().marshall(endpointsValue,
+                            jsonWriter);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (messageRequest.getMessageConfiguration() != null) {
+            DirectMessageConfiguration messageConfiguration = messageRequest
+                    .getMessageConfiguration();
+            jsonWriter.name("MessageConfiguration");
+            DirectMessageConfigurationJsonMarshaller.getInstance().marshall(messageConfiguration,
+                    jsonWriter);
+        }
+        if (messageRequest.getRequestId() != null) {
+            String requestId = messageRequest.getRequestId();
+            jsonWriter.name("RequestId");
+            jsonWriter.value(requestId);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static MessageRequestJsonMarshaller instance;
+
+    public static MessageRequestJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new MessageRequestJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageRequestJsonUnmarshaller.java
new file mode 100644
index 0000000000..7a7e92db7d
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageRequestJsonUnmarshaller.java
@@ -0,0 +1,81 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO MessageRequest
+ */
+class MessageRequestJsonUnmarshaller implements
+        Unmarshaller<MessageRequest, JsonUnmarshallerContext> {
+
+    public MessageRequest unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        MessageRequest messageRequest = new MessageRequest();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Addresses")) {
+                messageRequest.setAddresses(new MapUnmarshaller<AddressConfiguration>(
+                        AddressConfigurationJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("Campaign")) {
+                messageRequest.setCampaign(new MapUnmarshaller<String>(StringJsonUnmarshaller
+                        .getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("Context")) {
+                messageRequest.setContext(new MapUnmarshaller<String>(StringJsonUnmarshaller
+                        .getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("Endpoints")) {
+                messageRequest.setEndpoints(new MapUnmarshaller<EndpointSendConfiguration>(
+                        EndpointSendConfigurationJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("MessageConfiguration")) {
+                messageRequest.setMessageConfiguration(DirectMessageConfigurationJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("RequestId")) {
+                messageRequest.setRequestId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return messageRequest;
+    }
+
+    private static MessageRequestJsonUnmarshaller instance;
+
+    public static MessageRequestJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new MessageRequestJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResponseJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResponseJsonMarshaller.java
new file mode 100644
index 0000000000..4aa8ea65b7
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResponseJsonMarshaller.java
@@ -0,0 +1,78 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO MessageResponse
+ */
+class MessageResponseJsonMarshaller {
+
+    public void marshall(MessageResponse messageResponse, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (messageResponse.getApplicationId() != null) {
+            String applicationId = messageResponse.getApplicationId();
+            jsonWriter.name("ApplicationId");
+            jsonWriter.value(applicationId);
+        }
+        if (messageResponse.getEndpointResult() != null) {
+            java.util.Map<String, EndpointMessageResult> endpointResult = messageResponse
+                    .getEndpointResult();
+            jsonWriter.name("EndpointResult");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, EndpointMessageResult> endpointResultEntry : endpointResult
+                    .entrySet()) {
+                EndpointMessageResult endpointResultValue = endpointResultEntry.getValue();
+                if (endpointResultValue != null) {
+                    jsonWriter.name(endpointResultEntry.getKey());
+                    EndpointMessageResultJsonMarshaller.getInstance().marshall(endpointResultValue,
+                            jsonWriter);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (messageResponse.getRequestId() != null) {
+            String requestId = messageResponse.getRequestId();
+            jsonWriter.name("RequestId");
+            jsonWriter.value(requestId);
+        }
+        if (messageResponse.getResult() != null) {
+            java.util.Map<String, MessageResult> result = messageResponse.getResult();
+            jsonWriter.name("Result");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, MessageResult> resultEntry : result.entrySet()) {
+                MessageResult resultValue = resultEntry.getValue();
+                if (resultValue != null) {
+                    jsonWriter.name(resultEntry.getKey());
+                    MessageResultJsonMarshaller.getInstance().marshall(resultValue, jsonWriter);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        jsonWriter.endObject();
+    }
+
+    private static MessageResponseJsonMarshaller instance;
+
+    public static MessageResponseJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new MessageResponseJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResponseJsonUnmarshaller.java
new file mode 100644
index 0000000000..e9312b9a69
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResponseJsonUnmarshaller.java
@@ -0,0 +1,70 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO MessageResponse
+ */
+class MessageResponseJsonUnmarshaller implements
+        Unmarshaller<MessageResponse, JsonUnmarshallerContext> {
+
+    public MessageResponse unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        MessageResponse messageResponse = new MessageResponse();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("ApplicationId")) {
+                messageResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("EndpointResult")) {
+                messageResponse.setEndpointResult(new MapUnmarshaller<EndpointMessageResult>(
+                        EndpointMessageResultJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("RequestId")) {
+                messageResponse.setRequestId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Result")) {
+                messageResponse.setResult(new MapUnmarshaller<MessageResult>(
+                        MessageResultJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return messageResponse;
+    }
+
+    private static MessageResponseJsonUnmarshaller instance;
+
+    public static MessageResponseJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new MessageResponseJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResultJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResultJsonMarshaller.java
new file mode 100644
index 0000000000..5c7ec0f792
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResultJsonMarshaller.java
@@ -0,0 +1,58 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO MessageResult
+ */
+class MessageResultJsonMarshaller {
+
+    public void marshall(MessageResult messageResult, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (messageResult.getDeliveryStatus() != null) {
+            String deliveryStatus = messageResult.getDeliveryStatus();
+            jsonWriter.name("DeliveryStatus");
+            jsonWriter.value(deliveryStatus);
+        }
+        if (messageResult.getStatusCode() != null) {
+            Integer statusCode = messageResult.getStatusCode();
+            jsonWriter.name("StatusCode");
+            jsonWriter.value(statusCode);
+        }
+        if (messageResult.getStatusMessage() != null) {
+            String statusMessage = messageResult.getStatusMessage();
+            jsonWriter.name("StatusMessage");
+            jsonWriter.value(statusMessage);
+        }
+        if (messageResult.getUpdatedToken() != null) {
+            String updatedToken = messageResult.getUpdatedToken();
+            jsonWriter.name("UpdatedToken");
+            jsonWriter.value(updatedToken);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static MessageResultJsonMarshaller instance;
+
+    public static MessageResultJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new MessageResultJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..70d19e3aec
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MessageResultJsonUnmarshaller.java
@@ -0,0 +1,65 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO MessageResult
+ */
+class MessageResultJsonUnmarshaller implements Unmarshaller<MessageResult, JsonUnmarshallerContext> {
+
+    public MessageResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        MessageResult messageResult = new MessageResult();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("DeliveryStatus")) {
+                messageResult.setDeliveryStatus(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("StatusCode")) {
+                messageResult.setStatusCode(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("StatusMessage")) {
+                messageResult.setStatusMessage(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("UpdatedToken")) {
+                messageResult.setUpdatedToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return messageResult;
+    }
+
+    private static MessageResultJsonUnmarshaller instance;
+
+    public static MessageResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new MessageResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MethodNotAllowedExceptionUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MethodNotAllowedExceptionUnmarshaller.java
index 7b3c125da8..e06a667197 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MethodNotAllowedExceptionUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/MethodNotAllowedExceptionUnmarshaller.java
@@ -20,8 +20,6 @@
 import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.pinpoint.model.MethodNotAllowedException;
 
-import com.amazonaws.services.pinpoint.model.MessageBody;
-
 public class MethodNotAllowedExceptionUnmarshaller extends JsonErrorUnmarshaller {
 
     public MethodNotAllowedExceptionUnmarshaller() {
@@ -35,12 +33,10 @@ public boolean match(JsonErrorResponse error) throws Exception {
 
     @Override
     public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
-        final com.google.gson.Gson gson = new com.google.gson.Gson();
+
         MethodNotAllowedException e = (MethodNotAllowedException) super.unmarshall(error);
         e.setErrorCode("MethodNotAllowedException");
-        e.setAccessControlAllowOrigin(String.valueOf(error.get("AccessControlAllowOrigin")));
-
-        e.setMessageBody(gson.fromJson(error.get("MessageBody"), MessageBody.class));
+        e.setRequestID(String.valueOf(error.get("RequestID")));
 
         return e;
     }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/NotFoundExceptionUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/NotFoundExceptionUnmarshaller.java
index da0f47b4cb..bec5d691f3 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/NotFoundExceptionUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/NotFoundExceptionUnmarshaller.java
@@ -20,8 +20,6 @@
 import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.pinpoint.model.NotFoundException;
 
-import com.amazonaws.services.pinpoint.model.MessageBody;
-
 public class NotFoundExceptionUnmarshaller extends JsonErrorUnmarshaller {
 
     public NotFoundExceptionUnmarshaller() {
@@ -35,12 +33,10 @@ public boolean match(JsonErrorResponse error) throws Exception {
 
     @Override
     public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
-        final com.google.gson.Gson gson = new com.google.gson.Gson();
+
         NotFoundException e = (NotFoundException) super.unmarshall(error);
         e.setErrorCode("NotFoundException");
-        e.setAccessControlAllowOrigin(String.valueOf(error.get("AccessControlAllowOrigin")));
-
-        e.setMessageBody(gson.fromJson(error.get("MessageBody"), MessageBody.class));
+        e.setRequestID(String.valueOf(error.get("RequestID")));
 
         return e;
     }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PutEventStreamRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PutEventStreamRequestMarshaller.java
new file mode 100644
index 0000000000..db38feb5ad
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PutEventStreamRequestMarshaller.java
@@ -0,0 +1,81 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for PutEventStreamRequest
+ */
+public class PutEventStreamRequestMarshaller implements
+        Marshaller<Request<PutEventStreamRequest>, PutEventStreamRequest> {
+
+    public Request<PutEventStreamRequest> marshall(PutEventStreamRequest putEventStreamRequest) {
+        if (putEventStreamRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(PutEventStreamRequest)");
+        }
+
+        Request<PutEventStreamRequest> request = new DefaultRequest<PutEventStreamRequest>(
+                putEventStreamRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/v1/apps/{application-id}/eventstream";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (putEventStreamRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(putEventStreamRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            if (putEventStreamRequest.getWriteEventStream() != null) {
+                WriteEventStream writeEventStream = putEventStreamRequest.getWriteEventStream();
+                WriteEventStreamJsonMarshaller.getInstance().marshall(writeEventStream, jsonWriter);
+            }
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PutEventStreamResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PutEventStreamResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..86c3f603a7
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/PutEventStreamResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response PutEventStreamResult
+ */
+public class PutEventStreamResultJsonUnmarshaller implements
+        Unmarshaller<PutEventStreamResult, JsonUnmarshallerContext> {
+
+    public PutEventStreamResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        PutEventStreamResult putEventStreamResult = new PutEventStreamResult();
+
+        return putEventStreamResult;
+    }
+
+    private static PutEventStreamResultJsonUnmarshaller instance;
+
+    public static PutEventStreamResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new PutEventStreamResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelRequestJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelRequestJsonMarshaller.java
new file mode 100644
index 0000000000..e2834ecb7d
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelRequestJsonMarshaller.java
@@ -0,0 +1,54 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO SMSChannelRequest
+ */
+class SMSChannelRequestJsonMarshaller {
+
+    public void marshall(SMSChannelRequest sMSChannelRequest, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (sMSChannelRequest.getEnabled() != null) {
+            Boolean enabled = sMSChannelRequest.getEnabled();
+            jsonWriter.name("Enabled");
+            jsonWriter.value(enabled);
+        }
+        if (sMSChannelRequest.getSenderId() != null) {
+            String senderId = sMSChannelRequest.getSenderId();
+            jsonWriter.name("SenderId");
+            jsonWriter.value(senderId);
+        }
+        if (sMSChannelRequest.getShortCode() != null) {
+            String shortCode = sMSChannelRequest.getShortCode();
+            jsonWriter.name("ShortCode");
+            jsonWriter.value(shortCode);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static SMSChannelRequestJsonMarshaller instance;
+
+    public static SMSChannelRequestJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new SMSChannelRequestJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelRequestJsonUnmarshaller.java
new file mode 100644
index 0000000000..372b0ee7ca
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelRequestJsonUnmarshaller.java
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO SMSChannelRequest
+ */
+class SMSChannelRequestJsonUnmarshaller implements
+        Unmarshaller<SMSChannelRequest, JsonUnmarshallerContext> {
+
+    public SMSChannelRequest unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        SMSChannelRequest sMSChannelRequest = new SMSChannelRequest();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Enabled")) {
+                sMSChannelRequest.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SenderId")) {
+                sMSChannelRequest.setSenderId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ShortCode")) {
+                sMSChannelRequest.setShortCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return sMSChannelRequest;
+    }
+
+    private static SMSChannelRequestJsonUnmarshaller instance;
+
+    public static SMSChannelRequestJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new SMSChannelRequestJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelResponseJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelResponseJsonMarshaller.java
new file mode 100644
index 0000000000..7f29b58e8e
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelResponseJsonMarshaller.java
@@ -0,0 +1,94 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO SMSChannelResponse
+ */
+class SMSChannelResponseJsonMarshaller {
+
+    public void marshall(SMSChannelResponse sMSChannelResponse, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (sMSChannelResponse.getApplicationId() != null) {
+            String applicationId = sMSChannelResponse.getApplicationId();
+            jsonWriter.name("ApplicationId");
+            jsonWriter.value(applicationId);
+        }
+        if (sMSChannelResponse.getCreationDate() != null) {
+            String creationDate = sMSChannelResponse.getCreationDate();
+            jsonWriter.name("CreationDate");
+            jsonWriter.value(creationDate);
+        }
+        if (sMSChannelResponse.getEnabled() != null) {
+            Boolean enabled = sMSChannelResponse.getEnabled();
+            jsonWriter.name("Enabled");
+            jsonWriter.value(enabled);
+        }
+        if (sMSChannelResponse.getId() != null) {
+            String id = sMSChannelResponse.getId();
+            jsonWriter.name("Id");
+            jsonWriter.value(id);
+        }
+        if (sMSChannelResponse.getIsArchived() != null) {
+            Boolean isArchived = sMSChannelResponse.getIsArchived();
+            jsonWriter.name("IsArchived");
+            jsonWriter.value(isArchived);
+        }
+        if (sMSChannelResponse.getLastModifiedBy() != null) {
+            String lastModifiedBy = sMSChannelResponse.getLastModifiedBy();
+            jsonWriter.name("LastModifiedBy");
+            jsonWriter.value(lastModifiedBy);
+        }
+        if (sMSChannelResponse.getLastModifiedDate() != null) {
+            String lastModifiedDate = sMSChannelResponse.getLastModifiedDate();
+            jsonWriter.name("LastModifiedDate");
+            jsonWriter.value(lastModifiedDate);
+        }
+        if (sMSChannelResponse.getPlatform() != null) {
+            String platform = sMSChannelResponse.getPlatform();
+            jsonWriter.name("Platform");
+            jsonWriter.value(platform);
+        }
+        if (sMSChannelResponse.getSenderId() != null) {
+            String senderId = sMSChannelResponse.getSenderId();
+            jsonWriter.name("SenderId");
+            jsonWriter.value(senderId);
+        }
+        if (sMSChannelResponse.getShortCode() != null) {
+            String shortCode = sMSChannelResponse.getShortCode();
+            jsonWriter.name("ShortCode");
+            jsonWriter.value(shortCode);
+        }
+        if (sMSChannelResponse.getVersion() != null) {
+            Integer version = sMSChannelResponse.getVersion();
+            jsonWriter.name("Version");
+            jsonWriter.value(version);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static SMSChannelResponseJsonMarshaller instance;
+
+    public static SMSChannelResponseJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new SMSChannelResponseJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelResponseJsonUnmarshaller.java
new file mode 100644
index 0000000000..58938a6a76
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSChannelResponseJsonUnmarshaller.java
@@ -0,0 +1,87 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO SMSChannelResponse
+ */
+class SMSChannelResponseJsonUnmarshaller implements
+        Unmarshaller<SMSChannelResponse, JsonUnmarshallerContext> {
+
+    public SMSChannelResponse unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        SMSChannelResponse sMSChannelResponse = new SMSChannelResponse();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("ApplicationId")) {
+                sMSChannelResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("CreationDate")) {
+                sMSChannelResponse.setCreationDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Enabled")) {
+                sMSChannelResponse.setEnabled(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Id")) {
+                sMSChannelResponse.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("IsArchived")) {
+                sMSChannelResponse.setIsArchived(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LastModifiedBy")) {
+                sMSChannelResponse.setLastModifiedBy(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LastModifiedDate")) {
+                sMSChannelResponse.setLastModifiedDate(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Platform")) {
+                sMSChannelResponse.setPlatform(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SenderId")) {
+                sMSChannelResponse.setSenderId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ShortCode")) {
+                sMSChannelResponse.setShortCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Version")) {
+                sMSChannelResponse.setVersion(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return sMSChannelResponse;
+    }
+
+    private static SMSChannelResponseJsonUnmarshaller instance;
+
+    public static SMSChannelResponseJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new SMSChannelResponseJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSMessageJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSMessageJsonMarshaller.java
new file mode 100644
index 0000000000..7483a683e5
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSMessageJsonMarshaller.java
@@ -0,0 +1,74 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO SMSMessage
+ */
+class SMSMessageJsonMarshaller {
+
+    public void marshall(SMSMessage sMSMessage, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (sMSMessage.getBody() != null) {
+            String body = sMSMessage.getBody();
+            jsonWriter.name("Body");
+            jsonWriter.value(body);
+        }
+        if (sMSMessage.getMessageType() != null) {
+            String messageType = sMSMessage.getMessageType();
+            jsonWriter.name("MessageType");
+            jsonWriter.value(messageType);
+        }
+        if (sMSMessage.getSenderId() != null) {
+            String senderId = sMSMessage.getSenderId();
+            jsonWriter.name("SenderId");
+            jsonWriter.value(senderId);
+        }
+        if (sMSMessage.getSubstitutions() != null) {
+            java.util.Map<String, java.util.List<String>> substitutions = sMSMessage
+                    .getSubstitutions();
+            jsonWriter.name("Substitutions");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, java.util.List<String>> substitutionsEntry : substitutions
+                    .entrySet()) {
+                java.util.List<String> substitutionsValue = substitutionsEntry.getValue();
+                if (substitutionsValue != null) {
+                    jsonWriter.name(substitutionsEntry.getKey());
+                    jsonWriter.beginArray();
+                    for (String substitutionsValueItem : substitutionsValue) {
+                        if (substitutionsValueItem != null) {
+                            jsonWriter.value(substitutionsValueItem);
+                        }
+                    }
+                    jsonWriter.endArray();
+                }
+            }
+            jsonWriter.endObject();
+        }
+        jsonWriter.endObject();
+    }
+
+    private static SMSMessageJsonMarshaller instance;
+
+    public static SMSMessageJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new SMSMessageJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSMessageJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSMessageJsonUnmarshaller.java
new file mode 100644
index 0000000000..fde45d383f
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SMSMessageJsonUnmarshaller.java
@@ -0,0 +1,68 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO SMSMessage
+ */
+class SMSMessageJsonUnmarshaller implements Unmarshaller<SMSMessage, JsonUnmarshallerContext> {
+
+    public SMSMessage unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        SMSMessage sMSMessage = new SMSMessage();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Body")) {
+                sMSMessage.setBody(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("MessageType")) {
+                sMSMessage.setMessageType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SenderId")) {
+                sMSMessage.setSenderId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Substitutions")) {
+                sMSMessage.setSubstitutions(new MapUnmarshaller<java.util.List<String>>(
+                        new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                        )
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return sMSMessage;
+    }
+
+    private static SMSMessageJsonUnmarshaller instance;
+
+    public static SMSMessageJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new SMSMessageJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDemographicsJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDemographicsJsonMarshaller.java
index 941f7a618b..409f94f540 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDemographicsJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDemographicsJsonMarshaller.java
@@ -31,6 +31,11 @@ public void marshall(SegmentDemographics segmentDemographics, AwsJsonWriter json
             jsonWriter.name("AppVersion");
             SetDimensionJsonMarshaller.getInstance().marshall(appVersion, jsonWriter);
         }
+        if (segmentDemographics.getChannel() != null) {
+            SetDimension channel = segmentDemographics.getChannel();
+            jsonWriter.name("Channel");
+            SetDimensionJsonMarshaller.getInstance().marshall(channel, jsonWriter);
+        }
         if (segmentDemographics.getDeviceType() != null) {
             SetDimension deviceType = segmentDemographics.getDeviceType();
             jsonWriter.name("DeviceType");
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDemographicsJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDemographicsJsonUnmarshaller.java
index 169977a13f..96bd3b63b6 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDemographicsJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDemographicsJsonUnmarshaller.java
@@ -39,6 +39,9 @@ public SegmentDemographics unmarshall(JsonUnmarshallerContext context) throws Ex
             if (name.equals("AppVersion")) {
                 segmentDemographics.setAppVersion(SetDimensionJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("Channel")) {
+                segmentDemographics.setChannel(SetDimensionJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("DeviceType")) {
                 segmentDemographics.setDeviceType(SetDimensionJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDimensionsJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDimensionsJsonMarshaller.java
index 0dd5070c1a..6a2fad9a0e 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDimensionsJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDimensionsJsonMarshaller.java
@@ -57,6 +57,22 @@ public void marshall(SegmentDimensions segmentDimensions, AwsJsonWriter jsonWrit
             jsonWriter.name("Location");
             SegmentLocationJsonMarshaller.getInstance().marshall(location, jsonWriter);
         }
+        if (segmentDimensions.getUserAttributes() != null) {
+            java.util.Map<String, AttributeDimension> userAttributes = segmentDimensions
+                    .getUserAttributes();
+            jsonWriter.name("UserAttributes");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, AttributeDimension> userAttributesEntry : userAttributes
+                    .entrySet()) {
+                AttributeDimension userAttributesValue = userAttributesEntry.getValue();
+                if (userAttributesValue != null) {
+                    jsonWriter.name(userAttributesEntry.getKey());
+                    AttributeDimensionJsonMarshaller.getInstance().marshall(userAttributesValue,
+                            jsonWriter);
+                }
+            }
+            jsonWriter.endObject();
+        }
         jsonWriter.endObject();
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDimensionsJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDimensionsJsonUnmarshaller.java
index d7a2a6bab5..c74c870de9 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDimensionsJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentDimensionsJsonUnmarshaller.java
@@ -50,6 +50,11 @@ public SegmentDimensions unmarshall(JsonUnmarshallerContext context) throws Exce
             } else if (name.equals("Location")) {
                 segmentDimensions.setLocation(SegmentLocationJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("UserAttributes")) {
+                segmentDimensions.setUserAttributes(new MapUnmarshaller<AttributeDimension>(
+                        AttributeDimensionJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentImportResourceJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentImportResourceJsonMarshaller.java
index 774072a473..1f31b2c715 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentImportResourceJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentImportResourceJsonMarshaller.java
@@ -26,6 +26,19 @@
     public void marshall(SegmentImportResource segmentImportResource, AwsJsonWriter jsonWriter)
             throws Exception {
         jsonWriter.beginObject();
+        if (segmentImportResource.getChannelCounts() != null) {
+            java.util.Map<String, Integer> channelCounts = segmentImportResource.getChannelCounts();
+            jsonWriter.name("ChannelCounts");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, Integer> channelCountsEntry : channelCounts.entrySet()) {
+                Integer channelCountsValue = channelCountsEntry.getValue();
+                if (channelCountsValue != null) {
+                    jsonWriter.name(channelCountsEntry.getKey());
+                    jsonWriter.value(channelCountsValue);
+                }
+            }
+            jsonWriter.endObject();
+        }
         if (segmentImportResource.getExternalId() != null) {
             String externalId = segmentImportResource.getExternalId();
             jsonWriter.name("ExternalId");
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentImportResourceJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentImportResourceJsonUnmarshaller.java
index a568ceaae0..214bbf137f 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentImportResourceJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SegmentImportResourceJsonUnmarshaller.java
@@ -36,7 +36,12 @@ public SegmentImportResource unmarshall(JsonUnmarshallerContext context) throws
         reader.beginObject();
         while (reader.hasNext()) {
             String name = reader.nextName();
-            if (name.equals("ExternalId")) {
+            if (name.equals("ChannelCounts")) {
+                segmentImportResource.setChannelCounts(new MapUnmarshaller<Integer>(
+                        IntegerJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("ExternalId")) {
                 segmentImportResource.setExternalId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("Format")) {
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendMessagesRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendMessagesRequestMarshaller.java
new file mode 100644
index 0000000000..f6d8bcfdcc
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendMessagesRequestMarshaller.java
@@ -0,0 +1,81 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for SendMessagesRequest
+ */
+public class SendMessagesRequestMarshaller implements
+        Marshaller<Request<SendMessagesRequest>, SendMessagesRequest> {
+
+    public Request<SendMessagesRequest> marshall(SendMessagesRequest sendMessagesRequest) {
+        if (sendMessagesRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(SendMessagesRequest)");
+        }
+
+        Request<SendMessagesRequest> request = new DefaultRequest<SendMessagesRequest>(
+                sendMessagesRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/v1/apps/{application-id}/messages";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (sendMessagesRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(sendMessagesRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            if (sendMessagesRequest.getMessageRequest() != null) {
+                MessageRequest messageRequest = sendMessagesRequest.getMessageRequest();
+                MessageRequestJsonMarshaller.getInstance().marshall(messageRequest, jsonWriter);
+            }
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendMessagesResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendMessagesResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..bcb7e82746
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendMessagesResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response SendMessagesResult
+ */
+public class SendMessagesResultJsonUnmarshaller implements
+        Unmarshaller<SendMessagesResult, JsonUnmarshallerContext> {
+
+    public SendMessagesResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        SendMessagesResult sendMessagesResult = new SendMessagesResult();
+
+        return sendMessagesResult;
+    }
+
+    private static SendMessagesResultJsonUnmarshaller instance;
+
+    public static SendMessagesResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new SendMessagesResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageRequestJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageRequestJsonMarshaller.java
new file mode 100644
index 0000000000..6425b0910a
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageRequestJsonMarshaller.java
@@ -0,0 +1,80 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO SendUsersMessageRequest
+ */
+class SendUsersMessageRequestJsonMarshaller {
+
+    public void marshall(SendUsersMessageRequest sendUsersMessageRequest, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (sendUsersMessageRequest.getContext() != null) {
+            java.util.Map<String, String> context = sendUsersMessageRequest.getContext();
+            jsonWriter.name("Context");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, String> contextEntry : context.entrySet()) {
+                String contextValue = contextEntry.getValue();
+                if (contextValue != null) {
+                    jsonWriter.name(contextEntry.getKey());
+                    jsonWriter.value(contextValue);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        if (sendUsersMessageRequest.getMessageConfiguration() != null) {
+            DirectMessageConfiguration messageConfiguration = sendUsersMessageRequest
+                    .getMessageConfiguration();
+            jsonWriter.name("MessageConfiguration");
+            DirectMessageConfigurationJsonMarshaller.getInstance().marshall(messageConfiguration,
+                    jsonWriter);
+        }
+        if (sendUsersMessageRequest.getRequestId() != null) {
+            String requestId = sendUsersMessageRequest.getRequestId();
+            jsonWriter.name("RequestId");
+            jsonWriter.value(requestId);
+        }
+        if (sendUsersMessageRequest.getUsers() != null) {
+            java.util.Map<String, EndpointSendConfiguration> users = sendUsersMessageRequest
+                    .getUsers();
+            jsonWriter.name("Users");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, EndpointSendConfiguration> usersEntry : users
+                    .entrySet()) {
+                EndpointSendConfiguration usersValue = usersEntry.getValue();
+                if (usersValue != null) {
+                    jsonWriter.name(usersEntry.getKey());
+                    EndpointSendConfigurationJsonMarshaller.getInstance().marshall(usersValue,
+                            jsonWriter);
+                }
+            }
+            jsonWriter.endObject();
+        }
+        jsonWriter.endObject();
+    }
+
+    private static SendUsersMessageRequestJsonMarshaller instance;
+
+    public static SendUsersMessageRequestJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new SendUsersMessageRequestJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageRequestJsonUnmarshaller.java
new file mode 100644
index 0000000000..bb2dbe581b
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageRequestJsonUnmarshaller.java
@@ -0,0 +1,72 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO SendUsersMessageRequest
+ */
+class SendUsersMessageRequestJsonUnmarshaller implements
+        Unmarshaller<SendUsersMessageRequest, JsonUnmarshallerContext> {
+
+    public SendUsersMessageRequest unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        SendUsersMessageRequest sendUsersMessageRequest = new SendUsersMessageRequest();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Context")) {
+                sendUsersMessageRequest.setContext(new MapUnmarshaller<String>(
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("MessageConfiguration")) {
+                sendUsersMessageRequest
+                        .setMessageConfiguration(DirectMessageConfigurationJsonUnmarshaller
+                                .getInstance()
+                                .unmarshall(context));
+            } else if (name.equals("RequestId")) {
+                sendUsersMessageRequest.setRequestId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Users")) {
+                sendUsersMessageRequest.setUsers(new MapUnmarshaller<EndpointSendConfiguration>(
+                        EndpointSendConfigurationJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return sendUsersMessageRequest;
+    }
+
+    private static SendUsersMessageRequestJsonUnmarshaller instance;
+
+    public static SendUsersMessageRequestJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new SendUsersMessageRequestJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageResponseJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageResponseJsonMarshaller.java
new file mode 100644
index 0000000000..9fd6db4e2b
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageResponseJsonMarshaller.java
@@ -0,0 +1,74 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO SendUsersMessageResponse
+ */
+class SendUsersMessageResponseJsonMarshaller {
+
+    public void marshall(SendUsersMessageResponse sendUsersMessageResponse, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (sendUsersMessageResponse.getApplicationId() != null) {
+            String applicationId = sendUsersMessageResponse.getApplicationId();
+            jsonWriter.name("ApplicationId");
+            jsonWriter.value(applicationId);
+        }
+        if (sendUsersMessageResponse.getRequestId() != null) {
+            String requestId = sendUsersMessageResponse.getRequestId();
+            jsonWriter.name("RequestId");
+            jsonWriter.value(requestId);
+        }
+        if (sendUsersMessageResponse.getResult() != null) {
+            java.util.Map<String, java.util.Map<String, EndpointMessageResult>> result = sendUsersMessageResponse
+                    .getResult();
+            jsonWriter.name("Result");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, java.util.Map<String, EndpointMessageResult>> resultEntry : result
+                    .entrySet()) {
+                java.util.Map<String, EndpointMessageResult> resultValue = resultEntry.getValue();
+                if (resultValue != null) {
+                    jsonWriter.name(resultEntry.getKey());
+                    jsonWriter.beginObject();
+                    for (java.util.Map.Entry<String, EndpointMessageResult> resultValueEntry : resultValue
+                            .entrySet()) {
+                        EndpointMessageResult resultValueValue = resultValueEntry.getValue();
+                        if (resultValueValue != null) {
+                            jsonWriter.name(resultValueEntry.getKey());
+                            EndpointMessageResultJsonMarshaller.getInstance().marshall(
+                                    resultValueValue, jsonWriter);
+                        }
+                    }
+                    jsonWriter.endObject();
+                }
+            }
+            jsonWriter.endObject();
+        }
+        jsonWriter.endObject();
+    }
+
+    private static SendUsersMessageResponseJsonMarshaller instance;
+
+    public static SendUsersMessageResponseJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new SendUsersMessageResponseJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageResponseJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageResponseJsonUnmarshaller.java
new file mode 100644
index 0000000000..ada87aafe1
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessageResponseJsonUnmarshaller.java
@@ -0,0 +1,68 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO SendUsersMessageResponse
+ */
+class SendUsersMessageResponseJsonUnmarshaller implements
+        Unmarshaller<SendUsersMessageResponse, JsonUnmarshallerContext> {
+
+    public SendUsersMessageResponse unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        SendUsersMessageResponse sendUsersMessageResponse = new SendUsersMessageResponse();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("ApplicationId")) {
+                sendUsersMessageResponse.setApplicationId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("RequestId")) {
+                sendUsersMessageResponse.setRequestId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Result")) {
+                sendUsersMessageResponse
+                        .setResult(new MapUnmarshaller<java.util.Map<String, EndpointMessageResult>>(
+                                new MapUnmarshaller<EndpointMessageResult>(
+                                        EndpointMessageResultJsonUnmarshaller.getInstance()
+                                )
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return sendUsersMessageResponse;
+    }
+
+    private static SendUsersMessageResponseJsonUnmarshaller instance;
+
+    public static SendUsersMessageResponseJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new SendUsersMessageResponseJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessagesRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessagesRequestMarshaller.java
new file mode 100644
index 0000000000..34403a8f2c
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessagesRequestMarshaller.java
@@ -0,0 +1,84 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for SendUsersMessagesRequest
+ */
+public class SendUsersMessagesRequestMarshaller implements
+        Marshaller<Request<SendUsersMessagesRequest>, SendUsersMessagesRequest> {
+
+    public Request<SendUsersMessagesRequest> marshall(
+            SendUsersMessagesRequest sendUsersMessagesRequest) {
+        if (sendUsersMessagesRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(SendUsersMessagesRequest)");
+        }
+
+        Request<SendUsersMessagesRequest> request = new DefaultRequest<SendUsersMessagesRequest>(
+                sendUsersMessagesRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/v1/apps/{application-id}/users-messages";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (sendUsersMessagesRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(sendUsersMessagesRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            if (sendUsersMessagesRequest.getSendUsersMessageRequest() != null) {
+                SendUsersMessageRequest sendUsersMessageRequest = sendUsersMessagesRequest
+                        .getSendUsersMessageRequest();
+                SendUsersMessageRequestJsonMarshaller.getInstance().marshall(
+                        sendUsersMessageRequest, jsonWriter);
+            }
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessagesResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessagesResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..5a5a3bb312
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/SendUsersMessagesResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response SendUsersMessagesResult
+ */
+public class SendUsersMessagesResultJsonUnmarshaller implements
+        Unmarshaller<SendUsersMessagesResult, JsonUnmarshallerContext> {
+
+    public SendUsersMessagesResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        SendUsersMessagesResult sendUsersMessagesResult = new SendUsersMessagesResult();
+
+        return sendUsersMessagesResult;
+    }
+
+    private static SendUsersMessagesResultJsonUnmarshaller instance;
+
+    public static SendUsersMessagesResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new SendUsersMessagesResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/TooManyRequestsExceptionUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/TooManyRequestsExceptionUnmarshaller.java
index ef274ae5e1..f26a4b7779 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/TooManyRequestsExceptionUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/TooManyRequestsExceptionUnmarshaller.java
@@ -20,8 +20,6 @@
 import com.amazonaws.transform.JsonErrorUnmarshaller;
 import com.amazonaws.services.pinpoint.model.TooManyRequestsException;
 
-import com.amazonaws.services.pinpoint.model.MessageBody;
-
 public class TooManyRequestsExceptionUnmarshaller extends JsonErrorUnmarshaller {
 
     public TooManyRequestsExceptionUnmarshaller() {
@@ -35,12 +33,10 @@ public boolean match(JsonErrorResponse error) throws Exception {
 
     @Override
     public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
-        final com.google.gson.Gson gson = new com.google.gson.Gson();
+
         TooManyRequestsException e = (TooManyRequestsException) super.unmarshall(error);
         e.setErrorCode("TooManyRequestsException");
-        e.setAccessControlAllowOrigin(String.valueOf(error.get("AccessControlAllowOrigin")));
-
-        e.setMessageBody(gson.fromJson(error.get("MessageBody"), MessageBody.class));
+        e.setRequestID(String.valueOf(error.get("RequestID")));
 
         return e;
     }
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateAdmChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateAdmChannelRequestMarshaller.java
new file mode 100644
index 0000000000..6361eca4da
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateAdmChannelRequestMarshaller.java
@@ -0,0 +1,83 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for UpdateAdmChannelRequest
+ */
+public class UpdateAdmChannelRequestMarshaller implements
+        Marshaller<Request<UpdateAdmChannelRequest>, UpdateAdmChannelRequest> {
+
+    public Request<UpdateAdmChannelRequest> marshall(UpdateAdmChannelRequest updateAdmChannelRequest) {
+        if (updateAdmChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(UpdateAdmChannelRequest)");
+        }
+
+        Request<UpdateAdmChannelRequest> request = new DefaultRequest<UpdateAdmChannelRequest>(
+                updateAdmChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.PUT);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/adm";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (updateAdmChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(updateAdmChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            if (updateAdmChannelRequest.getADMChannelRequest() != null) {
+                ADMChannelRequest aDMChannelRequest = updateAdmChannelRequest
+                        .getADMChannelRequest();
+                ADMChannelRequestJsonMarshaller.getInstance().marshall(aDMChannelRequest,
+                        jsonWriter);
+            }
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateAdmChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateAdmChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..81dfaaa2e7
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateAdmChannelResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response UpdateAdmChannelResult
+ */
+public class UpdateAdmChannelResultJsonUnmarshaller implements
+        Unmarshaller<UpdateAdmChannelResult, JsonUnmarshallerContext> {
+
+    public UpdateAdmChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        UpdateAdmChannelResult updateAdmChannelResult = new UpdateAdmChannelResult();
+
+        return updateAdmChannelResult;
+    }
+
+    private static UpdateAdmChannelResultJsonUnmarshaller instance;
+
+    public static UpdateAdmChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new UpdateAdmChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApnsChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApnsChannelRequestMarshaller.java
index c29014c6be..9d5859393f 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApnsChannelRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApnsChannelRequestMarshaller.java
@@ -51,10 +51,6 @@
                 updateApnsChannelRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.PUT);
 
-        if (updateApnsChannelRequest.getAccept() != null) {
-            request.addHeader("accept",
-                    StringUtils.fromString(updateApnsChannelRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/channels/apns";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApnsChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApnsChannelResultJsonUnmarshaller.java
index 01a09ef918..bac48d65ed 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApnsChannelResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApnsChannelResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public UpdateApnsChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         UpdateApnsChannelResult updateApnsChannelResult = new UpdateApnsChannelResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            updateApnsChannelResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return updateApnsChannelResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApnsSandboxChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApnsSandboxChannelRequestMarshaller.java
new file mode 100644
index 0000000000..948a254b47
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApnsSandboxChannelRequestMarshaller.java
@@ -0,0 +1,84 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for UpdateApnsSandboxChannelRequest
+ */
+public class UpdateApnsSandboxChannelRequestMarshaller implements
+        Marshaller<Request<UpdateApnsSandboxChannelRequest>, UpdateApnsSandboxChannelRequest> {
+
+    public Request<UpdateApnsSandboxChannelRequest> marshall(
+            UpdateApnsSandboxChannelRequest updateApnsSandboxChannelRequest) {
+        if (updateApnsSandboxChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(UpdateApnsSandboxChannelRequest)");
+        }
+
+        Request<UpdateApnsSandboxChannelRequest> request = new DefaultRequest<UpdateApnsSandboxChannelRequest>(
+                updateApnsSandboxChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.PUT);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/apns_sandbox";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (updateApnsSandboxChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(updateApnsSandboxChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            if (updateApnsSandboxChannelRequest.getAPNSSandboxChannelRequest() != null) {
+                APNSSandboxChannelRequest aPNSSandboxChannelRequest = updateApnsSandboxChannelRequest
+                        .getAPNSSandboxChannelRequest();
+                APNSSandboxChannelRequestJsonMarshaller.getInstance().marshall(
+                        aPNSSandboxChannelRequest, jsonWriter);
+            }
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApnsSandboxChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApnsSandboxChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..52d8870076
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApnsSandboxChannelResultJsonUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response UpdateApnsSandboxChannelResult
+ */
+public class UpdateApnsSandboxChannelResultJsonUnmarshaller implements
+        Unmarshaller<UpdateApnsSandboxChannelResult, JsonUnmarshallerContext> {
+
+    public UpdateApnsSandboxChannelResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        UpdateApnsSandboxChannelResult updateApnsSandboxChannelResult = new UpdateApnsSandboxChannelResult();
+
+        return updateApnsSandboxChannelResult;
+    }
+
+    private static UpdateApnsSandboxChannelResultJsonUnmarshaller instance;
+
+    public static UpdateApnsSandboxChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new UpdateApnsSandboxChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApplicationSettingsRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApplicationSettingsRequestMarshaller.java
index 384e76bac0..385576235f 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApplicationSettingsRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApplicationSettingsRequestMarshaller.java
@@ -51,10 +51,6 @@
                 updateApplicationSettingsRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.PUT);
 
-        if (updateApplicationSettingsRequest.getAccept() != null) {
-            request.addHeader("accept",
-                    StringUtils.fromString(updateApplicationSettingsRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/settings";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApplicationSettingsResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApplicationSettingsResultJsonUnmarshaller.java
index 1028b044c8..e27a4f9653 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApplicationSettingsResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateApplicationSettingsResultJsonUnmarshaller.java
@@ -30,9 +30,6 @@ public UpdateApplicationSettingsResult unmarshall(JsonUnmarshallerContext contex
             throws Exception {
         UpdateApplicationSettingsResult updateApplicationSettingsResult = new UpdateApplicationSettingsResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            updateApplicationSettingsResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return updateApplicationSettingsResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateBaiduChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateBaiduChannelRequestMarshaller.java
new file mode 100644
index 0000000000..19dfbc2826
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateBaiduChannelRequestMarshaller.java
@@ -0,0 +1,84 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for UpdateBaiduChannelRequest
+ */
+public class UpdateBaiduChannelRequestMarshaller implements
+        Marshaller<Request<UpdateBaiduChannelRequest>, UpdateBaiduChannelRequest> {
+
+    public Request<UpdateBaiduChannelRequest> marshall(
+            UpdateBaiduChannelRequest updateBaiduChannelRequest) {
+        if (updateBaiduChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(UpdateBaiduChannelRequest)");
+        }
+
+        Request<UpdateBaiduChannelRequest> request = new DefaultRequest<UpdateBaiduChannelRequest>(
+                updateBaiduChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.PUT);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/baidu";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (updateBaiduChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(updateBaiduChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            if (updateBaiduChannelRequest.getBaiduChannelRequest() != null) {
+                BaiduChannelRequest baiduChannelRequest = updateBaiduChannelRequest
+                        .getBaiduChannelRequest();
+                BaiduChannelRequestJsonMarshaller.getInstance().marshall(baiduChannelRequest,
+                        jsonWriter);
+            }
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateBaiduChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateBaiduChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..7e2fb9526c
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateBaiduChannelResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response UpdateBaiduChannelResult
+ */
+public class UpdateBaiduChannelResultJsonUnmarshaller implements
+        Unmarshaller<UpdateBaiduChannelResult, JsonUnmarshallerContext> {
+
+    public UpdateBaiduChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        UpdateBaiduChannelResult updateBaiduChannelResult = new UpdateBaiduChannelResult();
+
+        return updateBaiduChannelResult;
+    }
+
+    private static UpdateBaiduChannelResultJsonUnmarshaller instance;
+
+    public static UpdateBaiduChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new UpdateBaiduChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateCampaignRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateCampaignRequestMarshaller.java
index 1ec3766594..3fad71a222 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateCampaignRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateCampaignRequestMarshaller.java
@@ -50,9 +50,6 @@
                 updateCampaignRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.PUT);
 
-        if (updateCampaignRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(updateCampaignRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/campaigns/{campaign-id}";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateCampaignResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateCampaignResultJsonUnmarshaller.java
index 5112fa059e..846112bcf8 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateCampaignResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateCampaignResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public UpdateCampaignResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         UpdateCampaignResult updateCampaignResult = new UpdateCampaignResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            updateCampaignResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return updateCampaignResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEmailChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEmailChannelRequestMarshaller.java
new file mode 100644
index 0000000000..981b0ca293
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEmailChannelRequestMarshaller.java
@@ -0,0 +1,84 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for UpdateEmailChannelRequest
+ */
+public class UpdateEmailChannelRequestMarshaller implements
+        Marshaller<Request<UpdateEmailChannelRequest>, UpdateEmailChannelRequest> {
+
+    public Request<UpdateEmailChannelRequest> marshall(
+            UpdateEmailChannelRequest updateEmailChannelRequest) {
+        if (updateEmailChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(UpdateEmailChannelRequest)");
+        }
+
+        Request<UpdateEmailChannelRequest> request = new DefaultRequest<UpdateEmailChannelRequest>(
+                updateEmailChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.PUT);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/email";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (updateEmailChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(updateEmailChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            if (updateEmailChannelRequest.getEmailChannelRequest() != null) {
+                EmailChannelRequest emailChannelRequest = updateEmailChannelRequest
+                        .getEmailChannelRequest();
+                EmailChannelRequestJsonMarshaller.getInstance().marshall(emailChannelRequest,
+                        jsonWriter);
+            }
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEmailChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEmailChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..bd119ba422
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEmailChannelResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response UpdateEmailChannelResult
+ */
+public class UpdateEmailChannelResultJsonUnmarshaller implements
+        Unmarshaller<UpdateEmailChannelResult, JsonUnmarshallerContext> {
+
+    public UpdateEmailChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        UpdateEmailChannelResult updateEmailChannelResult = new UpdateEmailChannelResult();
+
+        return updateEmailChannelResult;
+    }
+
+    private static UpdateEmailChannelResultJsonUnmarshaller instance;
+
+    public static UpdateEmailChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new UpdateEmailChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEndpointRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEndpointRequestMarshaller.java
index 5c7cd70a47..0819602418 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEndpointRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEndpointRequestMarshaller.java
@@ -50,9 +50,6 @@
                 updateEndpointRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.PUT);
 
-        if (updateEndpointRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(updateEndpointRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/endpoints/{endpoint-id}";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEndpointResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEndpointResultJsonUnmarshaller.java
index 835ee4ab93..8ee57e728f 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEndpointResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEndpointResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public UpdateEndpointResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         UpdateEndpointResult updateEndpointResult = new UpdateEndpointResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            updateEndpointResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return updateEndpointResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEndpointsBatchRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEndpointsBatchRequestMarshaller.java
index 4db321fee7..03fed07fa3 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEndpointsBatchRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEndpointsBatchRequestMarshaller.java
@@ -51,10 +51,6 @@
                 updateEndpointsBatchRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.PUT);
 
-        if (updateEndpointsBatchRequest.getAccept() != null) {
-            request.addHeader("accept",
-                    StringUtils.fromString(updateEndpointsBatchRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/endpoints";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEndpointsBatchResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEndpointsBatchResultJsonUnmarshaller.java
index 123b51feb4..2dcce9a80e 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEndpointsBatchResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateEndpointsBatchResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public UpdateEndpointsBatchResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         UpdateEndpointsBatchResult updateEndpointsBatchResult = new UpdateEndpointsBatchResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            updateEndpointsBatchResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return updateEndpointsBatchResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateGcmChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateGcmChannelRequestMarshaller.java
index 3192a5f7ab..56e3cd761a 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateGcmChannelRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateGcmChannelRequestMarshaller.java
@@ -50,9 +50,6 @@
                 updateGcmChannelRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.PUT);
 
-        if (updateGcmChannelRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(updateGcmChannelRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/channels/gcm";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateGcmChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateGcmChannelResultJsonUnmarshaller.java
index 9d12022d87..8f6e4c87f0 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateGcmChannelResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateGcmChannelResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public UpdateGcmChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         UpdateGcmChannelResult updateGcmChannelResult = new UpdateGcmChannelResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            updateGcmChannelResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return updateGcmChannelResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateSegmentRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateSegmentRequestMarshaller.java
index 690afe21d1..48d3f6e6b5 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateSegmentRequestMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateSegmentRequestMarshaller.java
@@ -50,9 +50,6 @@
                 updateSegmentRequest, "AmazonPinpoint");
         request.setHttpMethod(HttpMethodName.PUT);
 
-        if (updateSegmentRequest.getAccept() != null) {
-            request.addHeader("accept", StringUtils.fromString(updateSegmentRequest.getAccept()));
-        }
         String uriResourcePath = "/v1/apps/{application-id}/segments/{segment-id}";
         uriResourcePath = uriResourcePath.replace(
                 "{application-id}",
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateSegmentResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateSegmentResultJsonUnmarshaller.java
index ec59f66730..2e63d4b50e 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateSegmentResultJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateSegmentResultJsonUnmarshaller.java
@@ -29,9 +29,6 @@
     public UpdateSegmentResult unmarshall(JsonUnmarshallerContext context) throws Exception {
         UpdateSegmentResult updateSegmentResult = new UpdateSegmentResult();
 
-        if (context.getHeader("Access-Control-Allow-Origin") != null)
-            updateSegmentResult.setAccessControlAllowOrigin(context
-                    .getHeader("Access-Control-Allow-Origin"));
         return updateSegmentResult;
     }
 
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateSmsChannelRequestMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateSmsChannelRequestMarshaller.java
new file mode 100644
index 0000000000..d0780243dc
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateSmsChannelRequestMarshaller.java
@@ -0,0 +1,83 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for UpdateSmsChannelRequest
+ */
+public class UpdateSmsChannelRequestMarshaller implements
+        Marshaller<Request<UpdateSmsChannelRequest>, UpdateSmsChannelRequest> {
+
+    public Request<UpdateSmsChannelRequest> marshall(UpdateSmsChannelRequest updateSmsChannelRequest) {
+        if (updateSmsChannelRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(UpdateSmsChannelRequest)");
+        }
+
+        Request<UpdateSmsChannelRequest> request = new DefaultRequest<UpdateSmsChannelRequest>(
+                updateSmsChannelRequest, "AmazonPinpoint");
+        request.setHttpMethod(HttpMethodName.PUT);
+
+        String uriResourcePath = "/v1/apps/{application-id}/channels/sms";
+        uriResourcePath = uriResourcePath.replace(
+                "{application-id}",
+                (updateSmsChannelRequest.getApplicationId() == null) ? "" : StringUtils
+                        .fromString(updateSmsChannelRequest.getApplicationId()));
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            if (updateSmsChannelRequest.getSMSChannelRequest() != null) {
+                SMSChannelRequest sMSChannelRequest = updateSmsChannelRequest
+                        .getSMSChannelRequest();
+                SMSChannelRequestJsonMarshaller.getInstance().marshall(sMSChannelRequest,
+                        jsonWriter);
+            }
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateSmsChannelResultJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateSmsChannelResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..a7553ac32c
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/UpdateSmsChannelResultJsonUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response UpdateSmsChannelResult
+ */
+public class UpdateSmsChannelResultJsonUnmarshaller implements
+        Unmarshaller<UpdateSmsChannelResult, JsonUnmarshallerContext> {
+
+    public UpdateSmsChannelResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        UpdateSmsChannelResult updateSmsChannelResult = new UpdateSmsChannelResult();
+
+        return updateSmsChannelResult;
+    }
+
+    private static UpdateSmsChannelResultJsonUnmarshaller instance;
+
+    public static UpdateSmsChannelResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new UpdateSmsChannelResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteCampaignRequestJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteCampaignRequestJsonMarshaller.java
index e8fa31ba95..8f53177fd5 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteCampaignRequestJsonMarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteCampaignRequestJsonMarshaller.java
@@ -86,6 +86,11 @@ public void marshall(WriteCampaignRequest writeCampaignRequest, AwsJsonWriter js
             jsonWriter.name("SegmentVersion");
             jsonWriter.value(segmentVersion);
         }
+        if (writeCampaignRequest.getTrace() != null) {
+            Boolean trace = writeCampaignRequest.getTrace();
+            jsonWriter.name("Trace");
+            jsonWriter.value(trace);
+        }
         if (writeCampaignRequest.getTreatmentDescription() != null) {
             String treatmentDescription = writeCampaignRequest.getTreatmentDescription();
             jsonWriter.name("TreatmentDescription");
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteCampaignRequestJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteCampaignRequestJsonUnmarshaller.java
index fe4613a2ff..a3f9e7efca 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteCampaignRequestJsonUnmarshaller.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteCampaignRequestJsonUnmarshaller.java
@@ -70,6 +70,9 @@ public WriteCampaignRequest unmarshall(JsonUnmarshallerContext context) throws E
             } else if (name.equals("SegmentVersion")) {
                 writeCampaignRequest.setSegmentVersion(IntegerJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("Trace")) {
+                writeCampaignRequest.setTrace(BooleanJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("TreatmentDescription")) {
                 writeCampaignRequest.setTreatmentDescription(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteEventStreamJsonMarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteEventStreamJsonMarshaller.java
new file mode 100644
index 0000000000..8d24204c0d
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteEventStreamJsonMarshaller.java
@@ -0,0 +1,49 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO WriteEventStream
+ */
+class WriteEventStreamJsonMarshaller {
+
+    public void marshall(WriteEventStream writeEventStream, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (writeEventStream.getDestinationStreamArn() != null) {
+            String destinationStreamArn = writeEventStream.getDestinationStreamArn();
+            jsonWriter.name("DestinationStreamArn");
+            jsonWriter.value(destinationStreamArn);
+        }
+        if (writeEventStream.getRoleArn() != null) {
+            String roleArn = writeEventStream.getRoleArn();
+            jsonWriter.name("RoleArn");
+            jsonWriter.value(roleArn);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static WriteEventStreamJsonMarshaller instance;
+
+    public static WriteEventStreamJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new WriteEventStreamJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteEventStreamJsonUnmarshaller.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteEventStreamJsonUnmarshaller.java
new file mode 100644
index 0000000000..f80edc1a5b
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/transform/WriteEventStreamJsonUnmarshaller.java
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.pinpoint.model.transform;
+
+import com.amazonaws.services.pinpoint.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO WriteEventStream
+ */
+class WriteEventStreamJsonUnmarshaller implements
+        Unmarshaller<WriteEventStream, JsonUnmarshallerContext> {
+
+    public WriteEventStream unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        WriteEventStream writeEventStream = new WriteEventStream();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("DestinationStreamArn")) {
+                writeEventStream.setDestinationStreamArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("RoleArn")) {
+                writeEventStream.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return writeEventStream;
+    }
+
+    private static WriteEventStreamJsonUnmarshaller instance;
+
+    public static WriteEventStreamJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new WriteEventStreamJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/AWSErsLocaleTestBase.java b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/AWSErsLocaleTestBase.java
index b10224e2a1..1c2242b097 100644
--- a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/AWSErsLocaleTestBase.java
+++ b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/AWSErsLocaleTestBase.java
@@ -36,6 +36,8 @@
 import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.MockSystem;
 import com.amazonaws.mobileconnectors.pinpoint.targeting.TargetingClient;
 import com.amazonaws.regions.Regions;
+import com.amazonaws.services.pinpoint.model.ChannelType;
+
 import android.app.Activity;
 import android.content.Context;
 
@@ -89,6 +91,7 @@ public void refresh() {
         PinpointConfiguration options = new PinpointConfiguration(mockAndroidContext,
                                                                          UNIQUE_ID,
                                                                          Regions.US_EAST_1,
+                                                                         ChannelType.GCM,
                                                                          provider);
         context = new AnalyticsContextBuilder()
                           .withSdkInfo(SDK_NAME, SDK_VERSION)
@@ -107,6 +110,7 @@ public void refresh() {
         PinpointConfiguration config = new PinpointConfiguration(mockAndroidContext,
                                                                         UNIQUE_ID,
                                                                         Regions.US_EAST_1,
+                                                                        ChannelType.GCM,
                                                                         provider);
 
         instance = new PinpointManager(config);
diff --git a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/analytics/PinpointManagerTest.java b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/analytics/PinpointManagerTest.java
index 9cf7517868..b5751eab64 100644
--- a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/analytics/PinpointManagerTest.java
+++ b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/analytics/PinpointManagerTest.java
@@ -28,6 +28,8 @@
 import com.amazonaws.mobileconnectors.pinpoint.PinpointManager;
 import com.amazonaws.mobileconnectors.pinpoint.analytics.utils.ContextWithPermissions;
 import com.amazonaws.regions.Regions;
+import com.amazonaws.services.pinpoint.model.ChannelType;
+
 import android.app.Activity;
 
 import static org.junit.Assert.assertNotNull;
@@ -48,6 +50,7 @@ private PinpointConfiguration createConfig(String appId) {
                                                                                    .getApplicationContext()),
                                                 appId,
                                                 Regions.US_EAST_1,
+                                                ChannelType.GCM,
                                                 provider);
     }
 
diff --git a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/analytics/utils/AnalyticsContextBuilder.java b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/analytics/utils/AnalyticsContextBuilder.java
index 002c37d710..c2c862fff6 100644
--- a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/analytics/utils/AnalyticsContextBuilder.java
+++ b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/analytics/utils/AnalyticsContextBuilder.java
@@ -16,6 +16,8 @@
 package com.amazonaws.mobileconnectors.pinpoint.analytics.utils;
 
 import org.mockito.internal.util.MockUtil;
+
+import com.amazonaws.mobileconnectors.pinpoint.PinpointConfiguration;
 import com.amazonaws.mobileconnectors.pinpoint.internal.core.PinpointContext;
 import com.amazonaws.mobileconnectors.pinpoint.internal.core.configuration.AndroidPreferencesConfiguration;
 import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.AndroidAppDetails;
@@ -38,8 +40,9 @@
 
 public class AnalyticsContextBuilder {
 
-    private final NotificationClient mockNotificationClient = mock(NotificationClient.class);
+    private NotificationClient mockNotificationClient;
     private final TargetingClient mockTargetingClient = mock(TargetingClient.class);
+    private final PinpointConfiguration mockPinpointConfig = mock(PinpointConfiguration.class);
     private String sdkName = "";
     private String sdkVersion = "";
     private String mockUniqueIdValue = "";
@@ -50,8 +53,7 @@
     private AndroidConnectivity mockConnectivity = mock(AndroidConnectivity.class);
     private AndroidDeviceDetails mockDeviceDetails = new MockDeviceDetails();
     private AmazonPinpointAnalyticsClient mockERS = mock(AmazonPinpointAnalyticsClient.class);
-    private AndroidSystem mockSystem
-            = mock(AndroidSystem.class);
+    private AndroidSystem mockSystem = mock(AndroidSystem.class);
     private AmazonPinpointClient mockPinpointService = mock(AmazonPinpointClient.class);
 
     public PinpointContext build() {
@@ -60,7 +62,8 @@ public PinpointContext build() {
         when(mockSDKInfo.getName()).thenReturn(sdkName);
         when(mockSDKInfo.getVersion()).thenReturn(sdkVersion);
 
-        if (new MockUtil().isMock(mockSystem)) {
+        final MockUtil mockUtil = new MockUtil();
+        if (mockUtil.isMock(mockSystem)) {
             when(mockSystem.getPreferences()).thenReturn(mockPreferences);
             when(mockSystem.getConnectivity()).thenReturn(mockConnectivity);
             final AndroidAppDetails mockAppDetails = new MockAppDetails();
@@ -77,12 +80,16 @@ public PinpointContext build() {
         when(mockContext.getPinpointServiceClient())
                 .thenReturn(mockPinpointService);
         when(mockContext.getSystem()).thenReturn(mockSystem);
+        // Notification client must be constructed after mock system is set
+        mockNotificationClient = new NotificationClient(mockContext);
         when(mockContext.getNotificationClient())
                 .thenReturn(mockNotificationClient);
         when(mockContext.getApplicationContext()).thenReturn(context);
         when(mockContext.getConfiguration()).thenReturn(mockConfig);
         when(mockContext.getNetworkType()).thenCallRealMethod();
         when(mockContext.getTargetingClient()).thenReturn(mockTargetingClient);
+        when(mockContext.getPinpointConfiguration()).thenReturn(mockPinpointConfig);
+
 
         return mockContext;
     }
diff --git a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/internal/core/MockPinpointContext.java b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/internal/core/MockPinpointContext.java
index fb9ac846e0..67e184724e 100644
--- a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/internal/core/MockPinpointContext.java
+++ b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/internal/core/MockPinpointContext.java
@@ -34,6 +34,7 @@
 import com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClient;
 import com.amazonaws.regions.Regions;
 import com.amazonaws.services.pinpoint.AmazonPinpointClient;
+import com.amazonaws.services.pinpoint.model.ChannelType;
 import com.amazonaws.services.pinpointanalytics.AmazonPinpointAnalyticsClient;
 import android.app.Activity;
 import android.content.Context;
@@ -102,6 +103,7 @@ public void refresh() {
                                                                                                   .getApplicationContext()),
                                                                       getUniqueId(),
                                                                       Regions.US_EAST_1,
+                                                                      ChannelType.GCM,
                                                                       provider);
         this.system = new MockSystem(id);
         this.system.getPreferences().putString("UniqueId", id);
@@ -120,7 +122,7 @@ public void refresh() {
 
         this.configuration = AndroidPreferencesConfiguration.newInstance(this);
 
-        this.notificationClient = new NotificationClient(this);
+        this.notificationClient = NotificationClient.createClient(this, ChannelType.GCM);
     }
 
     @Override
diff --git a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/internal/core/idresolver/SharedPrefsUniqueIdServiceTest.java b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/internal/core/idresolver/SharedPrefsUniqueIdServiceTest.java
index 2172d63aae..2aa21f0b6c 100644
--- a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/internal/core/idresolver/SharedPrefsUniqueIdServiceTest.java
+++ b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/internal/core/idresolver/SharedPrefsUniqueIdServiceTest.java
@@ -28,6 +28,8 @@
 import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.AndroidPreferences;
 import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.AndroidSystem;
 import com.amazonaws.regions.Regions;
+import com.amazonaws.services.pinpoint.model.ChannelType;
+
 import android.app.Activity;
 import android.content.Context;
 
@@ -62,6 +64,7 @@ public void setup() {
         when(mockPinpointContext.getPinpointConfiguration())
                 .thenReturn(new PinpointConfiguration(mockAppContext, appId,
                                                              Regions.US_EAST_1,
+                                                             ChannelType.GCM,
                                                              credentialsProvider));
         when(mockSystem.getPreferences()).thenReturn(mockPreferences);
 
diff --git a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/EndpointProfileTest.java b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/EndpointProfileTest.java
index 2ebacc6ca8..0523de23f9 100644
--- a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/EndpointProfileTest.java
+++ b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/EndpointProfileTest.java
@@ -1,26 +1,23 @@
 /**
  * Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
  *
- * Licensed under the Apache License, Version 2.0 (the "License").
- * You may not use this file except in compliance with the License.
- * A copy of the License is located at
+ * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with the License. A copy of the License is
+ * located at
  *
  * http://aws.amazon.com/apache2.0
  *
- * or in the "license" file accompanying this file. This file is distributed
- * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
- * express or implied. See the License for the specific language governing
- * permissions and limitations under the License.
+ * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under the License.
  */
 
 package com.amazonaws.mobileconnectors.pinpoint.targeting;
 
 import java.util.Arrays;
 import java.util.Locale;
+import java.util.MissingResourceException;
 import java.util.TimeZone;
 import java.util.concurrent.ThreadPoolExecutor;
 import java.util.concurrent.atomic.AtomicInteger;
-
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -35,16 +32,12 @@
 import com.amazonaws.mobileconnectors.pinpoint.analytics.MobileAnalyticsTestBase;
 import com.amazonaws.mobileconnectors.pinpoint.analytics.utils.AnalyticsContextBuilder;
 import com.amazonaws.mobileconnectors.pinpoint.internal.core.PinpointContext;
-import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.AndroidAppDetails;
-import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.AndroidDeviceDetails;
-import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.AndroidPreferences;
-import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.AndroidSystem;
 import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.MockDeviceDetails;
 import com.amazonaws.mobileconnectors.pinpoint.internal.core.util.DateUtil;
 import com.amazonaws.mobileconnectors.pinpoint.targeting.endpointProfile.EndpointProfile;
 import com.amazonaws.mobileconnectors.pinpoint.targeting.endpointProfile.EndpointProfileDemographic;
 import com.amazonaws.mobileconnectors.pinpoint.targeting.endpointProfile.EndpointProfileLocation;
-import com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClient;
+import android.content.Context;
 import android.os.Build;
 
 import static org.junit.Assert.assertEquals;
@@ -72,12 +65,12 @@ public void setup() {
         testDeviceDetails = new MockDeviceDetails();
 
         mockContext = new AnalyticsContextBuilder()
-                              .withSdkInfo(SDK_NAME, SDK_VERSION)
-                              .withUniqueIdValue(UNIQUE_ID)
-                              .withDeviceDetails(testDeviceDetails)
-                              .withContext(Robolectric.application
-                                                   .getApplicationContext())
-                              .build();
+            .withSdkInfo(SDK_NAME, SDK_VERSION)
+            .withUniqueIdValue(UNIQUE_ID)
+            .withDeviceDetails(testDeviceDetails)
+            .withContext(Robolectric.application
+                             .getApplicationContext())
+            .build();
 
         target = new EndpointProfile(mockContext);
     }
@@ -91,19 +84,19 @@ public void cleanup() {
     public void testProfile() {
         assertTrue(target.getAllAttributes().isEmpty());
         assertEquals(mockContext.getSystem().getAppDetails().getAppId(),
-                            target.getApplicationId());
+                     target.getApplicationId());
         assertEquals(UNIQUE_ID, target.getEndpointId());
         assertEquals(mockContext.getSystem().getAppDetails().versionName(),
-                            target.getDemographic().getAppVersion());
-        assertEquals(Locale.getDefault(), target.getDemographic().getLocale());
+                     target.getDemographic().getAppVersion());
+        assertEquals(mockContext.getApplicationContext().getResources().getConfiguration().locale.toString(), target.getDemographic().getLocale().toString());
         assertEquals(mockContext.getSystem().getDeviceDetails().manufacturer(),
-                            target.getDemographic().getMake());
+                     target.getDemographic().getMake());
         assertEquals(Build.MODEL, target.getDemographic().getModel());
         assertEquals("ANDROID", target.getDemographic().getPlatform());
         assertEquals(Build.VERSION.RELEASE,
-                            target.getDemographic().getPlatformVersion());
+                     target.getDemographic().getPlatformVersion());
         assertEquals(TimeZone.getDefault().getID(),
-                            target.getDemographic().getTimezone());
+                     target.getDemographic().getTimezone());
         assertNotNull(target.getEffectiveDate());
         assertNotNull(target.getLocation());
         assertEquals(target.getOptOut(), "ALL");
@@ -126,13 +119,13 @@ public void testProfile() {
         demographic.setMake("test");
         demographic.setModel("test");
         demographic.setTimezone("test");
-        demographic.setLocale(null);
+        demographic.setLocale(new Locale("en", "US"));
         demographic.setAppVersion("test");
         demographic.setPlatform("test");
         demographic.setPlatformVersion("test");
         target.setDemographic(demographic);
         assertEquals(demographic, target.getDemographic());
-        final EndpointProfileLocation location = new EndpointProfileLocation();
+        final EndpointProfileLocation location = new EndpointProfileLocation(mockContext);
         location.setLatitude(0.0);
         location.setLongitude(0.0);
         location.setPostalCode("test");
@@ -150,14 +143,14 @@ public void testEndpointAttribute() {
         assertNull(target.getAttribute(null));
         assertFalse(target.hasAttribute(null));
         target.addAttribute("key1", Arrays.asList(new String[] { "attr1",
-                                                                       "attr2"
+                                                                 "attr2"
         }));
         assertEquals(((AtomicInteger) Whitebox.getInternalState(target, "currentNumOfAttributesAndMetrics")).get(), 1);
         assertFalse(target.getAllAttributes().isEmpty());
         assertNotNull(target.getAttribute("key1"));
         assertTrue(target.hasAttribute("key1"));
         target.addAttribute("key1", Arrays.asList(new String[] { "attr1",
-            "attr2", "attr3"
+                                                                 "attr2", "attr3"
         }));
         assertFalse(target.getAllAttributes().isEmpty());
         assertNotNull(target.getAttribute("key1"));
@@ -167,7 +160,7 @@ public void testEndpointAttribute() {
         assertTrue(target.getAllAttributes().isEmpty());
         assertEquals(((AtomicInteger) Whitebox.getInternalState(target, "currentNumOfAttributesAndMetrics")).get(), 0);
         target.withAttribute("key2", Arrays.asList(new String[] { "attr3",
-                                                                        "attr4"
+                                                                  "attr4"
         }));
         assertNotNull(target.getAttribute("key2"));
         assertTrue(target.hasAttribute("key2"));
@@ -201,22 +194,22 @@ public void testEndpointSerialization() throws JSONException {
         target.setEffectiveDate(date);
         target.addMetric("key1", 0.0);
         target.addAttribute("key1", Arrays.asList(new String[] { "attr1",
-                                                                       "attr2"
+                                                                 "attr2"
         }));
         assertFalse(target.getAllMetrics().isEmpty());
         assertFalse(target.getAllAttributes().isEmpty());
         assertNotNull(target.getEffectiveDate());
         JSONObject jsonEndpoint = target.toJSONObject();
         assertTrue(jsonEndpoint.getString("ApplicationId")
-                           .equalsIgnoreCase(target.getApplicationId()));
+                               .equalsIgnoreCase(target.getApplicationId()));
         assertTrue(jsonEndpoint.getString("EndpointId")
-                           .equalsIgnoreCase(target.getEndpointId()));
+                               .equalsIgnoreCase(target.getEndpointId()));
         assertTrue(jsonEndpoint.getString("ChannelType")
-                           .equalsIgnoreCase(target.getChannelType()));
+                               .equalsIgnoreCase(target.getChannelType()));
         assertTrue(jsonEndpoint.getString("EffectiveDate")
-                           .equalsIgnoreCase(DateUtil.isoDateFromMillis(date)));
+                               .equalsIgnoreCase(DateUtil.isoDateFromMillis(date)));
         assertTrue(jsonEndpoint.getString("OptOut")
-                           .equalsIgnoreCase(target.getOptOut()));
+                               .equalsIgnoreCase(target.getOptOut()));
 
         JSONObject metrics = jsonEndpoint.getJSONObject("Metrics");
         assertEquals(metrics.getDouble("key1"), 0.0, 0.0);
@@ -229,60 +222,77 @@ public void testEndpointSerialization() throws JSONException {
         JSONObject location = jsonEndpoint.getJSONObject("Location");
         assertTrue(location.getString("PostalCode")
                            .equalsIgnoreCase(target.getLocation()
-                                                     .getPostalCode()));
+                                                   .getPostalCode()));
         assertTrue(location.getString("Region")
                            .equalsIgnoreCase(target.getLocation().getRegion()));
         assertTrue(location.getString("Country")
                            .equalsIgnoreCase(target.getLocation()
-                                                     .getCountry()));
+                                                   .getCountry()));
         assertTrue(location.getString("City")
                            .equalsIgnoreCase(target.getLocation().getCity()));
 
         JSONObject demographic = jsonEndpoint.getJSONObject("Demographic");
         assertTrue(demographic.getString("Timezone")
-                           .equalsIgnoreCase(target.getDemographic()
-                                                     .getTimezone()));
+                              .equalsIgnoreCase(target.getDemographic()
+                                                      .getTimezone()));
         assertTrue(demographic.getString("Locale")
-                           .equalsIgnoreCase(target.getDemographic().getLocale()
-                                                     .toString()));
+                              .equalsIgnoreCase(target.getDemographic().getLocale()
+                                                      .toString()));
         assertTrue(demographic.getString("AppVersion")
-                           .equalsIgnoreCase(target.getDemographic()
-                                                     .getAppVersion()));
+                              .equalsIgnoreCase(target.getDemographic()
+                                                      .getAppVersion()));
         assertTrue(demographic.getString("PlatformVersion")
-                           .equalsIgnoreCase(target.getDemographic()
-                                                     .getPlatformVersion()));
+                              .equalsIgnoreCase(target.getDemographic()
+                                                      .getPlatformVersion()));
         assertTrue(demographic.getString("Platform")
-                           .equalsIgnoreCase(target.getDemographic()
-                                                     .getPlatform()));
+                              .equalsIgnoreCase(target.getDemographic()
+                                                      .getPlatform()));
         assertTrue(demographic.getString("Model")
-                           .equalsIgnoreCase(target.getDemographic()
-                                                     .getModel()));
+                              .equalsIgnoreCase(target.getDemographic()
+                                                      .getModel()));
         assertTrue(demographic.getString("Make")
-                           .equalsIgnoreCase(target.getDemographic()
-                                                     .getMake()));
+                              .equalsIgnoreCase(target.getDemographic()
+                                                      .getMake()));
     }
 
     @Test
     public void testLocaleWithInvalidISO3Code() {
-        final PinpointContext context = mock(PinpointContext.class);
-        final AndroidSystem androidSystem = mock(AndroidSystem.class);
-        final NotificationClient notificationClient = mock(NotificationClient.class);
-
-        when(notificationClient.getGCMDeviceToken()).thenReturn("TEST_ADDRESS");
-        when(androidSystem.getDeviceDetails()).thenReturn(mock(AndroidDeviceDetails.class));
-        when(androidSystem.getAppDetails()).thenReturn(mock(AndroidAppDetails.class));
-        when(androidSystem.getPreferences()).thenReturn(mock(AndroidPreferences.class));
-        when(context.getSystem()).thenReturn(androidSystem);
-
-        final TargetingClient targetingClient = new TargetingClient(context, mock(ThreadPoolExecutor.class));
+        final TargetingClient targetingClient = new TargetingClient(mockContext, mock(ThreadPoolExecutor.class));
         final EndpointProfile endpointProfile = targetingClient.currentEndpoint();
-        when(context.getNotificationClient()).thenReturn(notificationClient);
 
         final EndpointProfileDemographic demographic = endpointProfile.getDemographic();
         // Old country code for Serbia and Montenegro that has no ISO3 equivalent.
         // See https://en.wikipedia.org/wiki/ISO_3166-2:CS  for more info
-        demographic.setLocale(new Locale("en", "CS"));
+        Locale locale = new Locale("en", "CS");
+        demographic.setLocale(locale);
+        assertTrue(demographic.getLocale().toString().equalsIgnoreCase(locale.toString()));
+        targetingClient.updateEndpointProfile(endpointProfile);
+    }
+
+    @Test
+    public void testCountryWithInvalidISO3Code() {
+        Context mockApplicationContext = mock(Context.class);
+        android.content.res.Resources mockResources = mock(android.content.res.Resources.class);
+        android.content.res.Configuration mockConfiguration = mock(android.content.res.Configuration.class);
+        mockConfiguration.locale = new Locale("en", "CS");
+        when(mockResources.getConfiguration()).thenReturn(mockConfiguration);
+        when(mockApplicationContext.getResources()).thenReturn(mockResources);
+        when(mockContext.getApplicationContext()).thenReturn(mockApplicationContext);
+
+        final TargetingClient targetingClient = new TargetingClient(mockContext, mock(ThreadPoolExecutor.class));
+        final EndpointProfile endpointProfile = targetingClient.currentEndpoint();
+        String localeCountry;
+        // Old country code for Serbia and Montenegro that has no ISO3 equivalent.
+        // See https://en.wikipedia.org/wiki/ISO_3166-2:CS  for more info
 
+        try {
+            localeCountry = mockContext.getApplicationContext().getResources().getConfiguration().locale.getISO3Country();
+        } catch (final MissingResourceException exception) {
+            localeCountry = mockContext.getApplicationContext().getResources().getConfiguration().locale.getCountry();
+        }
+        final EndpointProfileLocation location = endpointProfile.getLocation();
+        assertTrue(location.getCountry().equalsIgnoreCase(localeCountry));
         targetingClient.updateEndpointProfile(endpointProfile);
     }
+
 }
diff --git a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/TargetingClientTest.java b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/TargetingClientTest.java
index be90fda13f..59118d8609 100644
--- a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/TargetingClientTest.java
+++ b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/TargetingClientTest.java
@@ -155,4 +155,26 @@ private void verifyAndRunExecutorService(int numExpectedRunnables) {
             enqueueRunnable.run();
         }
     }
+
+    @Test
+    public void updateEndpointCallNullSetters() {
+        //Verify null checks on setters should not throw a null pointer exception
+        EndpointProfile profile = new EndpointProfile(mockContext);
+        profile.getDemographic().setLocale(null);
+        profile.getDemographic().setAppVersion(null);
+        profile.getDemographic().setMake(null);
+        profile.getDemographic().setModel(null);
+        profile.getDemographic().setPlatform(null);
+        profile.getDemographic().setPlatformVersion(null);
+        profile.getDemographic().setTimezone(null);
+
+        profile.getLocation().setCountry(null);
+        profile.getLocation().setCity(null);
+        profile.getLocation().setLatitude(null);
+        profile.getLocation().setLongitude(null);
+        profile.getLocation().setPostalCode(null);
+        profile.getLocation().setRegion(null);
+
+        targetingClient.updateEndpointProfile(profile);
+    }
 }
diff --git a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/ADMNotificationClientTest.java b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/ADMNotificationClientTest.java
new file mode 100644
index 0000000000..fd9690f888
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/ADMNotificationClientTest.java
@@ -0,0 +1,369 @@
+/**
+ * Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ * http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.mobileconnectors.pinpoint.targeting.notification;
+
+import android.app.Service;
+import android.content.Context;
+import android.content.Intent;
+
+import com.amazonaws.mobileconnectors.pinpoint.PinpointConfiguration;
+import com.amazonaws.mobileconnectors.pinpoint.analytics.AnalyticsClient;
+import com.amazonaws.mobileconnectors.pinpoint.analytics.AnalyticsEvent;
+import com.amazonaws.mobileconnectors.pinpoint.analytics.MobileAnalyticsTestBase;
+import com.amazonaws.mobileconnectors.pinpoint.analytics.utils.AnalyticsContextBuilder;
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.PinpointContext;
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.configuration.AndroidPreferencesConfiguration;
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.MockSystem;
+import com.amazonaws.mobileconnectors.pinpoint.internal.event.EventRecorder;
+import com.amazonaws.mobileconnectors.pinpoint.targeting.TargetingClient;
+import com.amazonaws.services.pinpoint.model.ChannelType;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.mockito.ArgumentCaptor;
+import org.mockito.Mock;
+import org.mockito.Mockito;
+import org.mockito.MockitoAnnotations;
+import org.mockito.internal.util.reflection.Whitebox;
+import org.robolectric.Robolectric;
+import org.robolectric.RobolectricTestRunner;
+import org.robolectric.annotation.Config;
+
+import java.util.Map;
+
+import static junit.framework.Assert.assertTrue;
+import static org.hamcrest.Matchers.is;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNotEquals;
+import static org.junit.Assert.assertThat;
+import static org.mockito.Mockito.CALLS_REAL_METHODS;
+import static org.mockito.Mockito.times;
+import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.when;
+import static org.mockito.Mockito.withSettings;
+
+@RunWith(RobolectricTestRunner.class)
+@Config(manifest = Config.NONE)
+public class ADMNotificationClientTest extends MobileAnalyticsTestBase {
+
+    @Mock
+    AndroidPreferencesConfiguration mockConfiguration;
+    private NotificationClient target;
+    private AnalyticsClient analyticsClient;
+    @Mock
+    private EventRecorder mockEventRecorder;
+    @Mock
+    private TargetingClient mockTargetingClient;
+    @Mock
+    private PinpointConfiguration mockPinpointConfiguration;
+    @Mock
+    private PinpointContext mockPinpointContext;
+    @Mock
+    private Context spiedRoboContext;
+
+    @Before
+    public void setup() {
+        MockitoAnnotations.initMocks(this);
+
+        final Context roboContext = Robolectric.application
+            .getApplicationContext();
+        spiedRoboContext = Mockito.spy(roboContext);
+        mockPinpointContext = new AnalyticsContextBuilder()
+                                                      .withSystem(new MockSystem("JIMMY_CRACKED_CORN.and"))
+                                                      .withConfiguration(mockConfiguration)
+                                                      .withContext(spiedRoboContext)
+                                                      .build();
+
+        analyticsClient =  new AnalyticsClient(mockPinpointContext);
+        Whitebox.setInternalState(analyticsClient, "eventRecorder", mockEventRecorder);
+
+        when(mockConfiguration.optBoolean("isAnalyticsEnabled", true))
+                .thenReturn(true);
+
+        when(mockPinpointContext.getAnalyticsClient())
+            .thenReturn(analyticsClient);
+        //target.setSessionClient(new SessionClient(mockContext, mockEventClient, mockTargetingClient,
+        //    new TestSessionStore(), false));
+        when(mockPinpointContext.getTargetingClient())
+                .thenReturn(mockTargetingClient);
+        when(mockPinpointContext.getConfiguration())
+                .thenReturn(mockConfiguration);
+        when(mockPinpointContext.getPinpointConfiguration())
+                .thenReturn(mockPinpointConfiguration);
+
+        target = NotificationClient.createClient(mockPinpointContext, ChannelType.ADM);
+    }
+
+    @Test
+    public void testRegisterADMDeviceToken() {
+        final String testDeviceToken = "bla-bla-bla";
+
+        target.registerDeviceToken(testDeviceToken);
+        assertEquals(target.getDeviceToken(), testDeviceToken);
+    }
+
+    private NotificationDetails buildNotificationDetails() throws JSONException {
+        return buildNotificationDetails(null);
+    }
+
+    private NotificationDetails buildNotificationDetails(String from) throws JSONException {
+        Intent pushIntent = new Intent();
+        if (from != null)
+            pushIntent.putExtra(NotificationClient.INTENT_SNS_NOTIFICATION_FROM, from);
+        pushIntent.putExtra("pinpoint.campaign.campaign_id", "Customers rule");
+        pushIntent.putExtra("pinpoint.campaign.treatment_id", "Treat Me well please");
+        pushIntent.putExtra("pinpoint.campaign.campaign_activity_id", "the brink of dawn");
+        pushIntent.putExtra("pinpoint.notification.title", "Robots are Red");
+        pushIntent.putExtra("pinpoint.notification.body", "My Class is New");
+        pushIntent.putExtra("pinpoint.notification.color", "#FF0000");
+        JSONObject campaignJson = new JSONObject();
+        campaignJson.put("campaign_id", "Customers rule");
+        campaignJson.put("campaign_activity_id", "the brink of dawn");
+        JSONObject engageJson = new JSONObject();
+        engageJson.put("openApp", "true");
+        engageJson.put("url", "http://amazon.com");
+        engageJson.put("deeplink", "http://amazon.com");
+        engageJson.put("campaign", campaignJson);
+        pushIntent.putExtra("pinpoint", engageJson.toString());
+
+        NotificationDetails.NotificationDetailsBuilder notificationDetailsBuilder =
+                NotificationDetails.builder()
+                .intent(pushIntent)
+                .serviceClass(Service.class)
+                .intentAction(NotificationClient.ADM_INTENT_ACTION);
+        return notificationDetailsBuilder.build();
+    }
+
+    @Test
+    public void testADMMessageReceivedDefaultDoNotPostNotificationInForeground() throws JSONException {
+        // by default AppUtil will return that the app is not in the background
+
+        NotificationClient.CampaignPushResult pushResult
+            = target.handleCampaignPush(buildNotificationDetails());
+        ArgumentCaptor<AnalyticsEvent> eventCaptor = ArgumentCaptor.forClass(AnalyticsEvent.class);
+        verify(mockEventRecorder, times(1)).recordEvent(eventCaptor.capture());
+
+        final AnalyticsEvent receivedEvent = eventCaptor.getAllValues().get(0);
+        assertThat(receivedEvent.getEventType(), is("_campaign.received_background"));
+        assertTrue(receivedEvent.getEventTimestamp() > 0);
+        for (Map.Entry<String, String> entry : receivedEvent.getAllAttributes().entrySet()) {
+            System.out.println(entry.getKey() + ":" + entry.getValue());
+        }
+        assertThat(receivedEvent.getAllAttributes().size(), is(5));
+        assertThat(receivedEvent.getAttribute("isOptedOut"), is("true"));
+        assertThat(receivedEvent.getAttribute("isAppInForeground"), is("false"));
+        assertThat(receivedEvent.getAttribute("campaign_id"), is("Customers rule"));
+        assertThat(receivedEvent.getAttribute("treatment_id"), is("Treat Me well please"));
+        assertThat(receivedEvent.getAttribute("campaign_activity_id"), is("the brink of dawn"));
+        // optOut is true because this test can't get the app icon resource id.
+        assertThat(receivedEvent.getAllMetrics().size(), is(0));
+
+        assertTrue(pushResult.equals(NotificationClient.CampaignPushResult.OPTED_OUT));
+
+        // Verify isAooInForeground method is called by verifying a call to getSystemService.
+        verify(spiedRoboContext, times(1))
+            .getSystemService(Mockito.eq(Context.ACTIVITY_SERVICE));
+    }
+
+
+    @Test
+    public void testADMMessageReceivedInForegroundDefaultConfig() throws JSONException {
+        // Force the app to be in the foreground.
+        final AppUtil appUtil = Mockito.mock(AppUtil.class);
+        Whitebox.setInternalState(target.notificationClientBase, "appUtil", appUtil);
+        Mockito.when(appUtil.isAppInForeground()).thenReturn(true);
+
+        NotificationClient.CampaignPushResult pushResult
+            = target.handleCampaignPush(buildNotificationDetails());
+        ArgumentCaptor<AnalyticsEvent> eventCaptor = ArgumentCaptor.forClass(AnalyticsEvent.class);
+        verify(mockEventRecorder, times(1)).recordEvent(eventCaptor.capture());
+
+        final AnalyticsEvent receivedEvent = eventCaptor.getAllValues().get(0);
+        assertThat(receivedEvent.getEventType(), is("_campaign.received_foreground"));
+        assertTrue(receivedEvent.getEventTimestamp() > 0);
+        for (Map.Entry<String, String> entry : receivedEvent.getAllAttributes().entrySet()) {
+            System.out.println(entry.getKey() + ":" + entry.getValue());
+        }
+        assertThat(receivedEvent.getAllAttributes().size(), is(4));
+        assertThat(receivedEvent.getAttribute("isAppInForeground"), is("true"));
+        assertThat(receivedEvent.getAttribute("campaign_id"), is("Customers rule"));
+        assertThat(receivedEvent.getAttribute("treatment_id"), is("Treat Me well please"));
+        assertThat(receivedEvent.getAttribute("campaign_activity_id"), is("the brink of dawn"));
+        // optOut is true because this test can't get the app icon resource id.
+        assertThat(receivedEvent.getAllMetrics().size(), is(0));
+
+        // Verify the notification is not posted and instead we get the result that the app was in the foreground.
+        assertTrue(pushResult.equals(NotificationClient.CampaignPushResult.APP_IN_FOREGROUND));
+    }
+
+    @Test
+    public void testADMMessageReceivedInForegroundExplicitDoNotPostNotificationInForeground() throws JSONException {
+        // Setting this false should be the same as the default config, since default is false.
+        when(mockPinpointConfiguration.getShouldPostNotificationsInForeground()).thenReturn(false);
+
+        testADMMessageReceivedInForegroundDefaultConfig();
+    }
+
+    @Test
+    public void testADMMessageReceivedInForegroundWithConfigShouldPostNotificationsInForegroundSet() throws JSONException {
+        when(mockPinpointConfiguration.getShouldPostNotificationsInForeground()).thenReturn(true);
+
+        // Force the app to be in the foreground.
+        final AppUtil appUtil = Mockito.mock(AppUtil.class);
+        Whitebox.setInternalState(target.notificationClientBase, "appUtil", appUtil);
+        Mockito.when(appUtil.isAppInForeground()).thenReturn(true);
+
+        NotificationClient.CampaignPushResult pushResult
+            = target.handleCampaignPush(buildNotificationDetails());
+        ArgumentCaptor<AnalyticsEvent> eventCaptor = ArgumentCaptor.forClass(AnalyticsEvent.class);
+        verify(mockEventRecorder, times(1)).recordEvent(eventCaptor.capture());
+
+        final AnalyticsEvent receivedEvent = eventCaptor.getAllValues().get(0);
+        assertThat(receivedEvent.getEventType(), is("_campaign.received_foreground"));
+        assertTrue(receivedEvent.getEventTimestamp() > 0);
+        for (Map.Entry<String, String> entry : receivedEvent.getAllAttributes().entrySet()) {
+            System.out.println(entry.getKey() + ":" + entry.getValue());
+        }
+        assertThat(receivedEvent.getAllAttributes().size(), is(5));
+        assertThat(receivedEvent.getAttribute("isOptedOut"), is("true"));
+        assertThat(receivedEvent.getAttribute("isAppInForeground"), is("true"));
+        assertThat(receivedEvent.getAttribute("campaign_id"), is("Customers rule"));
+        assertThat(receivedEvent.getAttribute("treatment_id"), is("Treat Me well please"));
+        assertThat(receivedEvent.getAttribute("campaign_activity_id"), is("the brink of dawn"));
+        // optOut is true because this test can't get the app icon resource id.
+        assertThat(receivedEvent.getAllMetrics().size(), is(0));
+
+        // verify that the notification is posted even though the app is in the foreground, will actually
+        // be OPTED_OUT, since the test can't get the app icon id.
+        assertTrue(pushResult.equals(NotificationClient.CampaignPushResult.OPTED_OUT));
+    }
+
+    @Test
+    public void testADMMessageReceivedInBackgroundWithConfigShouldPostNotificationsInForegroundSet() throws JSONException {
+        when(mockPinpointConfiguration.getShouldPostNotificationsInForeground()).thenReturn(true);
+
+        // Force the app to be in the foreground.
+        final AppUtil appUtil = Mockito.mock(AppUtil.class);
+        Whitebox.setInternalState(target.notificationClientBase, "appUtil", appUtil);
+        Mockito.when(appUtil.isAppInForeground()).thenReturn(false);
+
+        NotificationClient.CampaignPushResult pushResult
+            = target.handleCampaignPush(buildNotificationDetails());
+        ArgumentCaptor<AnalyticsEvent> eventCaptor = ArgumentCaptor.forClass(AnalyticsEvent.class);
+        verify(mockEventRecorder, times(1)).recordEvent(eventCaptor.capture());
+
+        final AnalyticsEvent receivedEvent = eventCaptor.getAllValues().get(0);
+        assertThat(receivedEvent.getEventType(), is("_campaign.received_background"));
+        assertTrue(receivedEvent.getEventTimestamp() > 0);
+        for (Map.Entry<String, String> entry : receivedEvent.getAllAttributes().entrySet()) {
+            System.out.println(entry.getKey() + ":" + entry.getValue());
+        }
+        assertThat(receivedEvent.getAllAttributes().size(), is(5));
+        assertThat(receivedEvent.getAttribute("isOptedOut"), is("true"));
+        assertThat(receivedEvent.getAttribute("isAppInForeground"), is("false"));
+        assertThat(receivedEvent.getAttribute("campaign_id"), is("Customers rule"));
+        assertThat(receivedEvent.getAttribute("treatment_id"), is("Treat Me well please"));
+        assertThat(receivedEvent.getAttribute("campaign_activity_id"), is("the brink of dawn"));
+        // optOut is true because this test can't get the app icon resource id.
+        assertThat(receivedEvent.getAllMetrics().size(), is(0));
+
+        // verify that the notification is posted even though the app is in the foreground, will actually
+        // be OPTED_OUT, since the test can't get the app icon id.
+        assertTrue(pushResult.equals(NotificationClient.CampaignPushResult.OPTED_OUT));
+    }
+
+    @Test
+    public void testHandleADMPinpointMessageOpened() throws JSONException {
+        NotificationClient.CampaignPushResult result
+            = target.handleCampaignPush(buildNotificationDetails("_campaign.opened_notification"));
+        assertEquals(NotificationClient.CampaignPushResult.NOTIFICATION_OPENED, result);
+
+        ArgumentCaptor<AnalyticsEvent> eventCaptor = ArgumentCaptor.forClass(AnalyticsEvent.class);
+        verify(mockEventRecorder, times(1)).recordEvent(eventCaptor.capture());
+
+        final AnalyticsEvent receivedEvent = eventCaptor.getAllValues().get(0);
+        assertThat(receivedEvent.getEventType(), is("_campaign.opened_notification"));
+        assertTrue(receivedEvent.getEventTimestamp() > 0);
+        assertThat(receivedEvent.getAllAttributes().size(), is(3));
+        assertThat(receivedEvent.getAttribute("campaign_id"), is("Customers rule"));
+        assertThat(receivedEvent.getAttribute("campaign_activity_id"), is("the brink of dawn"));
+        assertThat(receivedEvent.getAttribute("treatment_id"), is("Treat Me well please"));
+        assertThat(receivedEvent.getAllMetrics().size(), is(0));
+    }
+
+    @Test
+    public void testEmptyIntent() {
+        Intent pushIntent = new Intent();
+        NotificationDetails.NotificationDetailsBuilder notificationDetailsBuilder
+                = NotificationDetails.builder()
+                .intent(pushIntent)
+                .serviceClass(Service.class)
+                .intentAction(NotificationClient.ADM_INTENT_ACTION);;
+
+        NotificationClient.CampaignPushResult result =
+                target.handleCampaignPush(notificationDetailsBuilder.build());
+        assertEquals(NotificationClient.CampaignPushResult.NOT_HANDLED, result);
+    }
+
+    @Test
+    public void verifyNotificationRequestIdIsTheSameForTheSameCampaignIdandActivityId() {
+        assertEquals(target.getNotificationRequestId("abc","123"),
+            target.getNotificationRequestId("abc","123"));
+    }
+
+    @Test
+    public void verifyNotificationRequestIdIsDifferentForDifferingCampignIdOrActivityId() {
+        assertNotEquals(target.getNotificationRequestId("abc","123"),
+            target.getNotificationRequestId("abc","567"));
+
+        assertNotEquals(target.getNotificationRequestId("abc","123"),
+            target.getNotificationRequestId("efg","123"));
+    }
+
+    @Test
+    public void testAreAppNotificationsEnabled_returnsFalse_whenOptOutProviderReturnsTrue() {
+        mockAppLevelOptOutProvider(true);
+        assertEquals(false, target.areAppNotificationsEnabled());
+    }
+
+    @Test
+    public void testAreAppNotificationsEnabled_callsPlatformMethod_whenOptOutProviderReturnsFalse() {
+        mockAppLevelOptOutProvider(false);
+
+        final NotificationClientBase notificationClient = Mockito.mock(NotificationClientBase.class,
+                withSettings().defaultAnswer(CALLS_REAL_METHODS));
+
+        Whitebox.setInternalState(notificationClient, "pinpointContext", mockPinpointContext);
+
+        notificationClient.areAppNotificationsEnabled();
+
+        verify(notificationClient).areAppNotificationsEnabledOnPlatform();
+    }
+
+    private void mockAppLevelOptOutProvider(final boolean returnValue) {
+        when(mockPinpointConfiguration.getAppLevelOptOutProvider()).thenReturn(
+            new AppLevelOptOutProvider() {
+                public boolean isOptedOut() {
+                    return returnValue;
+                }
+            }
+        );
+    }
+
+}
diff --git a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/BaiduNotificationClientTest.java b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/BaiduNotificationClientTest.java
new file mode 100644
index 0000000000..e3cad4df8c
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/BaiduNotificationClientTest.java
@@ -0,0 +1,367 @@
+/**
+ * Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ * http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.mobileconnectors.pinpoint.targeting.notification;
+
+import android.content.Context;
+
+import com.amazonaws.mobileconnectors.pinpoint.PinpointConfiguration;
+import com.amazonaws.mobileconnectors.pinpoint.analytics.AnalyticsClient;
+import com.amazonaws.mobileconnectors.pinpoint.analytics.AnalyticsEvent;
+import com.amazonaws.mobileconnectors.pinpoint.analytics.MobileAnalyticsTestBase;
+import com.amazonaws.mobileconnectors.pinpoint.analytics.utils.AnalyticsContextBuilder;
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.PinpointContext;
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.configuration.AndroidPreferencesConfiguration;
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.MockSystem;
+import com.amazonaws.mobileconnectors.pinpoint.internal.event.EventRecorder;
+import com.amazonaws.mobileconnectors.pinpoint.targeting.TargetingClient;
+import com.amazonaws.services.pinpoint.model.ChannelType;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.mockito.ArgumentCaptor;
+import org.mockito.Mock;
+import org.mockito.Mockito;
+import org.mockito.MockitoAnnotations;
+import org.mockito.internal.util.reflection.Whitebox;
+import org.robolectric.Robolectric;
+import org.robolectric.RobolectricTestRunner;
+import org.robolectric.annotation.Config;
+
+import java.util.Map;
+
+import static junit.framework.Assert.assertTrue;
+import static org.hamcrest.Matchers.is;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNotEquals;
+import static org.junit.Assert.assertThat;
+import static org.mockito.Mockito.CALLS_REAL_METHODS;
+import static org.mockito.Mockito.times;
+import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.when;
+import static org.mockito.Mockito.withSettings;
+
+@RunWith(RobolectricTestRunner.class)
+@Config(manifest = Config.NONE)
+public class BaiduNotificationClientTest extends MobileAnalyticsTestBase {
+
+    @Mock
+    AndroidPreferencesConfiguration mockConfiguration;
+    private NotificationClient target;
+    private AnalyticsClient analyticsClient;
+    @Mock
+    private EventRecorder mockEventRecorder;
+    @Mock
+    private TargetingClient mockTargetingClient;
+    @Mock
+    private PinpointConfiguration mockPinpointConfiguration;
+    @Mock
+    private PinpointContext mockPinpointContext;
+    @Mock
+    private Context spiedRoboContext;
+
+    @Before
+    public void setup() {
+        MockitoAnnotations.initMocks(this);
+
+        final Context roboContext = Robolectric.application
+            .getApplicationContext();
+        spiedRoboContext = Mockito.spy(roboContext);
+        mockPinpointContext = new AnalyticsContextBuilder()
+                                                      .withSystem(new MockSystem("JIMMY_CRACKED_CORN.and"))
+                                                      .withConfiguration(mockConfiguration)
+                                                      .withContext(spiedRoboContext)
+                                                      .build();
+
+        analyticsClient =  new AnalyticsClient(mockPinpointContext);
+        Whitebox.setInternalState(analyticsClient, "eventRecorder", mockEventRecorder);
+
+        when(mockConfiguration.optBoolean("isAnalyticsEnabled", true))
+                .thenReturn(true);
+
+        when(mockPinpointContext.getAnalyticsClient())
+            .thenReturn(analyticsClient);
+        //target.setSessionClient(new SessionClient(mockContext, mockEventClient, mockTargetingClient,
+        //    new TestSessionStore(), false));
+        when(mockPinpointContext.getTargetingClient())
+                .thenReturn(mockTargetingClient);
+        when(mockPinpointContext.getConfiguration())
+                .thenReturn(mockConfiguration);
+        when(mockPinpointContext.getPinpointConfiguration())
+                .thenReturn(mockPinpointConfiguration);
+
+        target = NotificationClient.createClient(mockPinpointContext, ChannelType.BAIDU);
+    }
+
+    @Test
+    public void testRegisterBaiduDeviceToken() {
+        final String testDeviceToken = "userid:channelid";
+
+        target.registerDeviceToken(testDeviceToken);
+        assertEquals(target.getDeviceToken(), testDeviceToken);
+    }
+
+    private NotificationDetails buildNotificationDetails() throws JSONException {
+        return buildNotificationDetails(null);
+    }
+
+    private NotificationDetails buildNotificationDetails(String from) throws JSONException {
+        JSONObject campaignJson = new JSONObject();
+        campaignJson.put("campaign_id", "Customers rule");
+        campaignJson.put("campaign_activity_id", "the brink of dawn");
+        JSONObject engageJson = new JSONObject();
+        engageJson.put("openApp", "true");
+        engageJson.put("url", "http://amazon.com");
+        engageJson.put("deeplink", "http://amazon.com");
+        engageJson.put("campaign", campaignJson);
+        String insertFrom = "";
+        if (from != null)
+            insertFrom = NotificationClient.INTENT_SNS_NOTIFICATION_FROM + ":" + from + ",";
+        String message = "{" + insertFrom +
+                "\"pinpoint.campaign.campaign_id\":\"Customers rule\"," +
+                "\"pinpoint.campaign.treatment_id\":\"Treat Me well please\"," +
+                "\"pinpoint.campaign.campaign_activity_id\":\"the brink of dawn\"," +
+                "\"pinpoint.notification.silentPush\":0," +
+                "\"pinpoint.notification.title\":\"Robots are Red\"," +
+                "\"pinpoint.notification.body\":\"My Class is New\"," +
+                "\"pinpoint.notification.color\":\"#FF0000\"," +
+                "\"pinpoint\":" + engageJson.toString() +
+                "}";
+
+        NotificationDetails.NotificationDetailsBuilder notificationDetailsBuilder
+                = NotificationDetails.builder()
+                .message(message)
+                .intentAction(NotificationClient.BAIDU_INTENT_ACTION);;
+
+        return notificationDetailsBuilder.build();
+    }
+
+    @Test
+    public void testBaiduMessageReceivedDefaultDoNotPostNotificationInForeground() throws JSONException {
+        // by default AppUtil will return that the app is not in the background
+
+        NotificationClient.CampaignPushResult pushResult
+            = target.handleCampaignPush(buildNotificationDetails());
+        ArgumentCaptor<AnalyticsEvent> eventCaptor = ArgumentCaptor.forClass(AnalyticsEvent.class);
+        verify(mockEventRecorder, times(1)).recordEvent(eventCaptor.capture());
+
+        final AnalyticsEvent receivedEvent = eventCaptor.getAllValues().get(0);
+        assertThat(receivedEvent.getEventType(), is("_campaign.received_background"));
+        assertTrue(receivedEvent.getEventTimestamp() > 0);
+        for (Map.Entry<String, String> entry : receivedEvent.getAllAttributes().entrySet()) {
+            System.out.println(entry.getKey() + ":" + entry.getValue());
+        }
+        assertThat(receivedEvent.getAllAttributes().size(), is(5));
+        assertThat(receivedEvent.getAttribute("isOptedOut"), is("true"));
+        assertThat(receivedEvent.getAttribute("isAppInForeground"), is("false"));
+        assertThat(receivedEvent.getAttribute("campaign_id"), is("Customers rule"));
+        assertThat(receivedEvent.getAttribute("treatment_id"), is("Treat Me well please"));
+        assertThat(receivedEvent.getAttribute("campaign_activity_id"), is("the brink of dawn"));
+        // optOut is true because this test can't get the app icon resource id.
+        assertThat(receivedEvent.getAllMetrics().size(), is(0));
+
+        assertTrue(pushResult.equals(NotificationClient.CampaignPushResult.OPTED_OUT));
+
+        // Verify isAooInForeground method is called by verifying a call to getSystemService.
+        verify(spiedRoboContext, times(1))
+            .getSystemService(Mockito.eq(Context.ACTIVITY_SERVICE));
+    }
+
+
+    @Test
+    public void testBaiduMessageReceivedInForegroundDefaultConfig() throws JSONException {
+        // Force the app to be in the foreground.
+        final AppUtil appUtil = Mockito.mock(AppUtil.class);
+        Whitebox.setInternalState(target.notificationClientBase, "appUtil", appUtil);
+        Mockito.when(appUtil.isAppInForeground()).thenReturn(true);
+
+        NotificationClient.CampaignPushResult pushResult
+            = target.handleCampaignPush(buildNotificationDetails());
+        ArgumentCaptor<AnalyticsEvent> eventCaptor = ArgumentCaptor.forClass(AnalyticsEvent.class);
+        verify(mockEventRecorder, times(1)).recordEvent(eventCaptor.capture());
+
+        final AnalyticsEvent receivedEvent = eventCaptor.getAllValues().get(0);
+        assertThat(receivedEvent.getEventType(), is("_campaign.received_foreground"));
+        assertTrue(receivedEvent.getEventTimestamp() > 0);
+        for (Map.Entry<String, String> entry : receivedEvent.getAllAttributes().entrySet()) {
+            System.out.println(entry.getKey() + ":" + entry.getValue());
+        }
+        assertThat(receivedEvent.getAllAttributes().size(), is(4));
+        assertThat(receivedEvent.getAttribute("isAppInForeground"), is("true"));
+        assertThat(receivedEvent.getAttribute("campaign_id"), is("Customers rule"));
+        assertThat(receivedEvent.getAttribute("treatment_id"), is("Treat Me well please"));
+        assertThat(receivedEvent.getAttribute("campaign_activity_id"), is("the brink of dawn"));
+        // optOut is true because this test can't get the app icon resource id.
+        assertThat(receivedEvent.getAllMetrics().size(), is(0));
+
+        // Verify the notification is not posted and instead we get the result that the app was in the foreground.
+        assertTrue(pushResult.equals(NotificationClient.CampaignPushResult.APP_IN_FOREGROUND));
+    }
+
+    @Test
+    public void testBaiduMessageReceivedInForegroundExplicitDoNotPostNotificationInForeground() throws JSONException {
+        // Setting this false should be the same as the default config, since default is false.
+        when(mockPinpointConfiguration.getShouldPostNotificationsInForeground()).thenReturn(false);
+
+        testBaiduMessageReceivedInForegroundDefaultConfig();
+    }
+
+    @Test
+    public void testBaiduMessageReceivedInForegroundWithConfigShouldPostNotificationsInForegroundSet() throws JSONException {
+        when(mockPinpointConfiguration.getShouldPostNotificationsInForeground()).thenReturn(true);
+
+        // Force the app to be in the foreground.
+        final AppUtil appUtil = Mockito.mock(AppUtil.class);
+        Whitebox.setInternalState(target.notificationClientBase, "appUtil", appUtil);
+        Mockito.when(appUtil.isAppInForeground()).thenReturn(true);
+
+        NotificationClient.CampaignPushResult pushResult
+            = target.handleCampaignPush(buildNotificationDetails());
+        ArgumentCaptor<AnalyticsEvent> eventCaptor = ArgumentCaptor.forClass(AnalyticsEvent.class);
+        verify(mockEventRecorder, times(1)).recordEvent(eventCaptor.capture());
+
+        final AnalyticsEvent receivedEvent = eventCaptor.getAllValues().get(0);
+        assertThat(receivedEvent.getEventType(), is("_campaign.received_foreground"));
+        assertTrue(receivedEvent.getEventTimestamp() > 0);
+        for (Map.Entry<String, String> entry : receivedEvent.getAllAttributes().entrySet()) {
+            System.out.println(entry.getKey() + ":" + entry.getValue());
+        }
+        assertThat(receivedEvent.getAllAttributes().size(), is(5));
+        assertThat(receivedEvent.getAttribute("isOptedOut"), is("true"));
+        assertThat(receivedEvent.getAttribute("isAppInForeground"), is("true"));
+        assertThat(receivedEvent.getAttribute("campaign_id"), is("Customers rule"));
+        assertThat(receivedEvent.getAttribute("treatment_id"), is("Treat Me well please"));
+        assertThat(receivedEvent.getAttribute("campaign_activity_id"), is("the brink of dawn"));
+        // optOut is true because this test can't get the app icon resource id.
+        assertThat(receivedEvent.getAllMetrics().size(), is(0));
+
+        // verify that the notification is posted even though the app is in the foreground, will actually
+        // be OPTED_OUT, since the test can't get the app icon id.
+        assertTrue(pushResult.equals(NotificationClient.CampaignPushResult.OPTED_OUT));
+    }
+
+    @Test
+    public void testBaiduMessageReceivedInBackgroundWithConfigShouldPostNotificationsInForegroundSet() throws JSONException {
+        when(mockPinpointConfiguration.getShouldPostNotificationsInForeground()).thenReturn(true);
+
+        // Force the app to be in the foreground.
+        final AppUtil appUtil = Mockito.mock(AppUtil.class);
+        Whitebox.setInternalState(target.notificationClientBase, "appUtil", appUtil);
+        Mockito.when(appUtil.isAppInForeground()).thenReturn(false);
+
+        NotificationClient.CampaignPushResult pushResult
+            = target.handleCampaignPush(buildNotificationDetails());
+        ArgumentCaptor<AnalyticsEvent> eventCaptor = ArgumentCaptor.forClass(AnalyticsEvent.class);
+        verify(mockEventRecorder, times(1)).recordEvent(eventCaptor.capture());
+
+        final AnalyticsEvent receivedEvent = eventCaptor.getAllValues().get(0);
+        assertThat(receivedEvent.getEventType(), is("_campaign.received_background"));
+        assertTrue(receivedEvent.getEventTimestamp() > 0);
+        for (Map.Entry<String, String> entry : receivedEvent.getAllAttributes().entrySet()) {
+            System.out.println(entry.getKey() + ":" + entry.getValue());
+        }
+        assertThat(receivedEvent.getAllAttributes().size(), is(5));
+        assertThat(receivedEvent.getAttribute("isOptedOut"), is("true"));
+        assertThat(receivedEvent.getAttribute("isAppInForeground"), is("false"));
+        assertThat(receivedEvent.getAttribute("campaign_id"), is("Customers rule"));
+        assertThat(receivedEvent.getAttribute("treatment_id"), is("Treat Me well please"));
+        assertThat(receivedEvent.getAttribute("campaign_activity_id"), is("the brink of dawn"));
+        // optOut is true because this test can't get the app icon resource id.
+        assertThat(receivedEvent.getAllMetrics().size(), is(0));
+
+        // verify that the notification is posted even though the app is in the foreground, will actually
+        // be OPTED_OUT, since the test can't get the app icon id.
+        assertTrue(pushResult.equals(NotificationClient.CampaignPushResult.OPTED_OUT));
+    }
+
+    @Test
+    public void testHandleBaiduPinpointMessageOpened() throws JSONException {
+        NotificationClient.CampaignPushResult result
+            = target.handleCampaignPush(buildNotificationDetails("_campaign.opened_notification"));
+        assertEquals(NotificationClient.CampaignPushResult.NOTIFICATION_OPENED, result);
+
+        ArgumentCaptor<AnalyticsEvent> eventCaptor = ArgumentCaptor.forClass(AnalyticsEvent.class);
+        verify(mockEventRecorder, times(1)).recordEvent(eventCaptor.capture());
+
+        final AnalyticsEvent receivedEvent = eventCaptor.getAllValues().get(0);
+        assertThat(receivedEvent.getEventType(), is("_campaign.opened_notification"));
+        assertTrue(receivedEvent.getEventTimestamp() > 0);
+        assertThat(receivedEvent.getAllAttributes().size(), is(3));
+        assertThat(receivedEvent.getAttribute("campaign_id"), is("Customers rule"));
+        assertThat(receivedEvent.getAttribute("campaign_activity_id"), is("the brink of dawn"));
+        assertThat(receivedEvent.getAttribute("treatment_id"), is("Treat Me well please"));
+        assertThat(receivedEvent.getAllMetrics().size(), is(0));
+    }
+
+    @Test
+    public void testEmptyMessage() {
+        NotificationDetails.NotificationDetailsBuilder notificationDetailsBuilder
+                = NotificationDetails.builder()
+                .message("")
+                .intentAction(NotificationClient.BAIDU_INTENT_ACTION);
+
+        NotificationClient.CampaignPushResult result = target.handleCampaignPush(notificationDetailsBuilder.build());
+        assertEquals(NotificationClient.CampaignPushResult.NOT_HANDLED, result);
+    }
+
+    @Test
+    public void verifyNotificationRequestIdIsTheSameForTheSameCampaignIdandActivityId() {
+        assertEquals(target.getNotificationRequestId("abc","123"),
+            target.getNotificationRequestId("abc","123"));
+    }
+
+    @Test
+    public void verifyNotificationRequestIdIsDifferentForDifferingCampignIdOrActivityId() {
+        assertNotEquals(target.getNotificationRequestId("abc","123"),
+            target.getNotificationRequestId("abc","567"));
+
+        assertNotEquals(target.getNotificationRequestId("abc","123"),
+            target.getNotificationRequestId("efg","123"));
+    }
+
+    @Test
+    public void testAreAppNotificationsEnabled_returnsFalse_whenOptOutProviderReturnsTrue() {
+        mockAppLevelOptOutProvider(true);
+        assertEquals(false, target.areAppNotificationsEnabled());
+    }
+
+    @Test
+    public void testAreAppNotificationsEnabled_callsPlatformMethod_whenOptOutProviderReturnsFalse() {
+        mockAppLevelOptOutProvider(false);
+
+        final NotificationClientBase notificationClient = Mockito.mock(NotificationClientBase.class,
+                withSettings().defaultAnswer(CALLS_REAL_METHODS));
+
+        Whitebox.setInternalState(notificationClient, "pinpointContext", mockPinpointContext);
+
+        notificationClient.areAppNotificationsEnabled();
+
+        verify(notificationClient).areAppNotificationsEnabledOnPlatform();
+    }
+
+    private void mockAppLevelOptOutProvider(final boolean returnValue) {
+        when(mockPinpointConfiguration.getAppLevelOptOutProvider()).thenReturn(
+            new AppLevelOptOutProvider() {
+                public boolean isOptedOut() {
+                    return returnValue;
+                }
+            }
+        );
+    }
+
+}
diff --git a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/FCMNotificationClientTest.java b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/FCMNotificationClientTest.java
new file mode 100644
index 0000000000..8db58769e6
--- /dev/null
+++ b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/FCMNotificationClientTest.java
@@ -0,0 +1,362 @@
+/**
+ * Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ * http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.mobileconnectors.pinpoint.targeting.notification;
+
+import android.content.Context;
+
+import com.amazonaws.mobileconnectors.pinpoint.PinpointConfiguration;
+import com.amazonaws.mobileconnectors.pinpoint.analytics.AnalyticsClient;
+import com.amazonaws.mobileconnectors.pinpoint.analytics.AnalyticsEvent;
+import com.amazonaws.mobileconnectors.pinpoint.analytics.MobileAnalyticsTestBase;
+import com.amazonaws.mobileconnectors.pinpoint.analytics.utils.AnalyticsContextBuilder;
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.PinpointContext;
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.configuration.AndroidPreferencesConfiguration;
+import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.MockSystem;
+import com.amazonaws.mobileconnectors.pinpoint.internal.event.EventRecorder;
+import com.amazonaws.mobileconnectors.pinpoint.targeting.TargetingClient;
+import com.amazonaws.services.pinpoint.model.ChannelType;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.mockito.ArgumentCaptor;
+import org.mockito.Mock;
+import org.mockito.Mockito;
+import org.mockito.MockitoAnnotations;
+import org.mockito.internal.util.reflection.Whitebox;
+import org.robolectric.Robolectric;
+import org.robolectric.RobolectricTestRunner;
+import org.robolectric.annotation.Config;
+
+import java.util.HashMap;
+import java.util.Map;
+
+import static junit.framework.Assert.assertTrue;
+import static org.hamcrest.Matchers.is;
+import static org.hamcrest.Matchers.not;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNotEquals;
+import static org.junit.Assert.assertThat;
+import static org.mockito.Mockito.CALLS_REAL_METHODS;
+import static org.mockito.Mockito.times;
+import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.when;
+import static org.mockito.Mockito.withSettings;
+
+@RunWith(RobolectricTestRunner.class)
+@Config(manifest = Config.NONE)
+public class FCMNotificationClientTest extends MobileAnalyticsTestBase {
+
+    @Mock
+    AndroidPreferencesConfiguration mockConfiguration;
+    private NotificationClient target;
+    private AnalyticsClient analyticsClient;
+    @Mock
+    private EventRecorder mockEventRecorder;
+    @Mock
+    private TargetingClient mockTargetingClient;
+    @Mock
+    private PinpointConfiguration mockPinpointConfiguration;
+    @Mock
+    private PinpointContext mockPinpointContext;
+    @Mock
+    private Context spiedRoboContext;
+
+    @Before
+    public void setup() {
+        MockitoAnnotations.initMocks(this);
+
+        final Context roboContext = Robolectric.application
+            .getApplicationContext();
+        spiedRoboContext = Mockito.spy(roboContext);
+        mockPinpointContext = new AnalyticsContextBuilder()
+                                                      .withSystem(new MockSystem("JIMMY_CRACKED_CORN.and"))
+                                                      .withConfiguration(mockConfiguration)
+                                                      .withContext(spiedRoboContext)
+                                                      .build();
+
+        analyticsClient =  new AnalyticsClient(mockPinpointContext);
+        Whitebox.setInternalState(analyticsClient, "eventRecorder", mockEventRecorder);
+
+        when(mockConfiguration.optBoolean("isAnalyticsEnabled", true))
+                .thenReturn(true);
+
+        when(mockPinpointContext.getAnalyticsClient())
+            .thenReturn(analyticsClient);
+        //target.setSessionClient(new SessionClient(mockContext, mockEventClient, mockTargetingClient,
+        //    new TestSessionStore(), false));
+        when(mockPinpointContext.getTargetingClient())
+                .thenReturn(mockTargetingClient);
+        when(mockPinpointContext.getConfiguration())
+                .thenReturn(mockConfiguration);
+        when(mockPinpointContext.getPinpointConfiguration())
+                .thenReturn(mockPinpointConfiguration);
+
+        target = NotificationClient.createClient(mockPinpointContext, ChannelType.GCM);
+    }
+
+    @Test
+    public void testRegisterFCMDeviceToken() {
+        final String testDeviceToken = "bla-bla-bla";
+
+        target.registerDeviceToken(testDeviceToken);
+        assertEquals(target.getDeviceToken(), testDeviceToken);
+    }
+
+    private NotificationDetails buildNotificationDetails(String from) throws JSONException {
+        Map<String, String> pushData = new HashMap<String, String>();
+        pushData.put("pinpoint.campaign.campaign_id", "Customers rule");
+        pushData.put("pinpoint.campaign.treatment_id", "Treat Me well please");
+        pushData.put("pinpoint.campaign.campaign_activity_id", "the brink of dawn");
+        pushData.put("gcm.notification.title", "Robots are Red");
+        pushData.put("gcm.notification.body", "My Class is New");
+        pushData.put("gcm.notification.color", "#FF0000");
+        JSONObject campaignJson = new JSONObject();
+        campaignJson.put("campaign_id", "Customers rule");
+        campaignJson.put("campaign_activity_id", "the brink of dawn");
+        JSONObject engageJson = new JSONObject();
+        engageJson.put("openApp", "true");
+        engageJson.put("url", "http://amazon.com");
+        engageJson.put("deeplink", "http://amazon.com");
+        engageJson.put("campaign", campaignJson);
+        pushData.put("pinpoint", engageJson.toString());
+
+        NotificationDetails.NotificationDetailsBuilder notificationDetailsBuilder
+                = NotificationDetails.builder()
+                .from(from)
+                .mapData(pushData)
+                .intentAction(NotificationClient.FCM_INTENT_ACTION);
+        return notificationDetailsBuilder.build();
+    }
+
+    @Test
+    public void testFCMMessageReceivedDefaultDoNotPostNotificationInForeground() throws JSONException {
+        // by default AppUtil will return that the app is not in the background
+
+        NotificationClient.CampaignPushResult pushResult
+            = target.handleCampaignPush(buildNotificationDetails("12345"));
+        ArgumentCaptor<AnalyticsEvent> eventCaptor = ArgumentCaptor.forClass(AnalyticsEvent.class);
+        verify(mockEventRecorder, times(1)).recordEvent(eventCaptor.capture());
+
+        final AnalyticsEvent receivedEvent = eventCaptor.getAllValues().get(0);
+        assertThat(receivedEvent.getEventType(), is("_campaign.received_background"));
+        assertTrue(receivedEvent.getEventTimestamp() > 0);
+        for (Map.Entry<String, String> entry : receivedEvent.getAllAttributes().entrySet()) {
+            System.out.println(entry.getKey() + ":" + entry.getValue());
+        }
+        assertThat(receivedEvent.getAllAttributes().size(), is(5));
+        assertThat(receivedEvent.getAttribute("isOptedOut"), is("true"));
+        assertThat(receivedEvent.getAttribute("isAppInForeground"), is("false"));
+        assertThat(receivedEvent.getAttribute("campaign_id"), is("Customers rule"));
+        assertThat(receivedEvent.getAttribute("treatment_id"), is("Treat Me well please"));
+        assertThat(receivedEvent.getAttribute("campaign_activity_id"), is("the brink of dawn"));
+        // optOut is true because this test can't get the app icon resource id.
+        assertThat(receivedEvent.getAllMetrics().size(), is(0));
+
+        assertTrue(pushResult.equals(NotificationClient.CampaignPushResult.OPTED_OUT));
+
+        // Verify isAooInForeground method is called by verifying a call to getSystemService.
+        verify(spiedRoboContext, times(1))
+            .getSystemService(Mockito.eq(Context.ACTIVITY_SERVICE));
+    }
+
+
+    @Test
+    public void testFCMMessageReceivedInForegroundDefaultConfig() throws JSONException {
+        // Force the app to be in the foreground.
+        final AppUtil appUtil = Mockito.mock(AppUtil.class);
+        Whitebox.setInternalState(target.notificationClientBase, "appUtil", appUtil);
+        Mockito.when(appUtil.isAppInForeground()).thenReturn(true);
+
+        NotificationClient.CampaignPushResult pushResult
+            = target.handleCampaignPush(buildNotificationDetails("12345"));
+        ArgumentCaptor<AnalyticsEvent> eventCaptor = ArgumentCaptor.forClass(AnalyticsEvent.class);
+        verify(mockEventRecorder, times(1)).recordEvent(eventCaptor.capture());
+
+        final AnalyticsEvent receivedEvent = eventCaptor.getAllValues().get(0);
+        assertThat(receivedEvent.getEventType(), is("_campaign.received_foreground"));
+        assertTrue(receivedEvent.getEventTimestamp() > 0);
+        for (Map.Entry<String, String> entry : receivedEvent.getAllAttributes().entrySet()) {
+            System.out.println(entry.getKey() + ":" + entry.getValue());
+        }
+        assertThat(receivedEvent.getAllAttributes().size(), is(4));
+        assertThat(receivedEvent.getAttribute("isAppInForeground"), is("true"));
+        assertThat(receivedEvent.getAttribute("campaign_id"), is("Customers rule"));
+        assertThat(receivedEvent.getAttribute("treatment_id"), is("Treat Me well please"));
+        assertThat(receivedEvent.getAttribute("campaign_activity_id"), is("the brink of dawn"));
+        // optOut is true because this test can't get the app icon resource id.
+        assertThat(receivedEvent.getAllMetrics().size(), is(0));
+
+        // Verify the notification is not posted and instead we get the result that the app was in the foreground.
+        assertTrue(pushResult.equals(NotificationClient.CampaignPushResult.APP_IN_FOREGROUND));
+    }
+
+    @Test
+    public void testFCMMessageReceivedInForegroundExplicitDoNotPostNotificationInForeground() throws JSONException {
+        // Setting this false should be the same as the default config, since default is false.
+        when(mockPinpointConfiguration.getShouldPostNotificationsInForeground()).thenReturn(false);
+
+        testFCMMessageReceivedInForegroundDefaultConfig();
+    }
+
+    @Test
+    public void testFCMMessageReceivedInForegroundWithConfigShouldPostNotificationsInForegroundSet() throws JSONException {
+        when(mockPinpointConfiguration.getShouldPostNotificationsInForeground()).thenReturn(true);
+
+        // Force the app to be in the foreground.
+        final AppUtil appUtil = Mockito.mock(AppUtil.class);
+        Whitebox.setInternalState(target.notificationClientBase, "appUtil", appUtil);
+        Mockito.when(appUtil.isAppInForeground()).thenReturn(true);
+
+        NotificationClient.CampaignPushResult pushResult
+            = target.handleCampaignPush(buildNotificationDetails("12345"));
+        ArgumentCaptor<AnalyticsEvent> eventCaptor = ArgumentCaptor.forClass(AnalyticsEvent.class);
+        verify(mockEventRecorder, times(1)).recordEvent(eventCaptor.capture());
+
+        final AnalyticsEvent receivedEvent = eventCaptor.getAllValues().get(0);
+        assertThat(receivedEvent.getEventType(), is("_campaign.received_foreground"));
+        assertTrue(receivedEvent.getEventTimestamp() > 0);
+        for (Map.Entry<String, String> entry : receivedEvent.getAllAttributes().entrySet()) {
+            System.out.println(entry.getKey() + ":" + entry.getValue());
+        }
+        assertThat(receivedEvent.getAllAttributes().size(), is(5));
+        assertThat(receivedEvent.getAttribute("isOptedOut"), is("true"));
+        assertThat(receivedEvent.getAttribute("isAppInForeground"), is("true"));
+        assertThat(receivedEvent.getAttribute("campaign_id"), is("Customers rule"));
+        assertThat(receivedEvent.getAttribute("treatment_id"), is("Treat Me well please"));
+        assertThat(receivedEvent.getAttribute("campaign_activity_id"), is("the brink of dawn"));
+        // optOut is true because this test can't get the app icon resource id.
+        assertThat(receivedEvent.getAllMetrics().size(), is(0));
+
+        // verify that the notification is posted even though the app is in the foreground, will actually
+        // be OPTED_OUT, since the test can't get the app icon id.
+        assertTrue(pushResult.equals(NotificationClient.CampaignPushResult.OPTED_OUT));
+    }
+
+    @Test
+    public void testFCMMessageReceivedInBackgroundWithConfigShouldPostNotificationsInForegroundSet() throws JSONException {
+        when(mockPinpointConfiguration.getShouldPostNotificationsInForeground()).thenReturn(true);
+
+        // Force the app to be in the foreground.
+        final AppUtil appUtil = Mockito.mock(AppUtil.class);
+        Whitebox.setInternalState(target.notificationClientBase, "appUtil", appUtil);
+        Mockito.when(appUtil.isAppInForeground()).thenReturn(false);
+
+        NotificationClient.CampaignPushResult pushResult
+            = target.handleCampaignPush(buildNotificationDetails("12345"));
+        ArgumentCaptor<AnalyticsEvent> eventCaptor = ArgumentCaptor.forClass(AnalyticsEvent.class);
+        verify(mockEventRecorder, times(1)).recordEvent(eventCaptor.capture());
+
+        final AnalyticsEvent receivedEvent = eventCaptor.getAllValues().get(0);
+        assertThat(receivedEvent.getEventType(), is("_campaign.received_background"));
+        assertTrue(receivedEvent.getEventTimestamp() > 0);
+        for (Map.Entry<String, String> entry : receivedEvent.getAllAttributes().entrySet()) {
+            System.out.println(entry.getKey() + ":" + entry.getValue());
+        }
+        assertThat(receivedEvent.getAllAttributes().size(), is(5));
+        assertThat(receivedEvent.getAttribute("isOptedOut"), is("true"));
+        assertThat(receivedEvent.getAttribute("isAppInForeground"), is("false"));
+        assertThat(receivedEvent.getAttribute("campaign_id"), is("Customers rule"));
+        assertThat(receivedEvent.getAttribute("treatment_id"), is("Treat Me well please"));
+        assertThat(receivedEvent.getAttribute("campaign_activity_id"), is("the brink of dawn"));
+        // optOut is true because this test can't get the app icon resource id.
+        assertThat(receivedEvent.getAllMetrics().size(), is(0));
+
+        // verify that the notification is posted even though the app is in the foreground, will actually
+        // be OPTED_OUT, since the test can't get the app icon id.
+        assertTrue(pushResult.equals(NotificationClient.CampaignPushResult.OPTED_OUT));
+    }
+
+    @Test
+    public void testHandleFCMPinpointMessageOpened() throws JSONException {
+        NotificationClient.CampaignPushResult result
+            = target.handleCampaignPush(buildNotificationDetails("_campaign.opened_notification"));
+        assertEquals(NotificationClient.CampaignPushResult.NOTIFICATION_OPENED, result);
+
+        ArgumentCaptor<AnalyticsEvent> eventCaptor = ArgumentCaptor.forClass(AnalyticsEvent.class);
+        verify(mockEventRecorder, times(1)).recordEvent(eventCaptor.capture());
+
+        final AnalyticsEvent receivedEvent = eventCaptor.getAllValues().get(0);
+        assertThat(receivedEvent.getEventType(), is("_campaign.opened_notification"));
+        assertTrue(receivedEvent.getEventTimestamp() > 0);
+        assertThat(receivedEvent.getAllAttributes().size(), is(3));
+        assertThat(receivedEvent.getAttribute("campaign_id"), is("Customers rule"));
+        assertThat(receivedEvent.getAttribute("campaign_activity_id"), is("the brink of dawn"));
+        assertThat(receivedEvent.getAttribute("treatment_id"), is("Treat Me well please"));
+        assertThat(receivedEvent.getAllMetrics().size(), is(0));
+    }
+
+    @Test
+    public void testEmptyMap() {
+        Map<String, String> map = new HashMap<String, String>();
+        NotificationDetails.NotificationDetailsBuilder notificationDetailsBuilder =
+                NotificationDetails.builder()
+                .from("_campaign.opened")
+                .mapData(map)
+                .intentAction(NotificationClient.FCM_INTENT_ACTION);
+        NotificationClient.CampaignPushResult result =
+                target.handleCampaignPush(notificationDetailsBuilder.build());
+        assertEquals(NotificationClient.CampaignPushResult.NOT_HANDLED, result);
+    }
+
+    @Test
+    public void verifyNotificationRequestIdIsTheSameForTheSameCampaignIdandActivityId() {
+        assertEquals(target.getNotificationRequestId("abc","123"),
+            target.getNotificationRequestId("abc","123"));
+    }
+
+    @Test
+    public void verifyNotificationRequestIdIsDifferentForDifferingCampignIdOrActivityId() {
+        assertNotEquals(target.getNotificationRequestId("abc","123"),
+            target.getNotificationRequestId("abc","567"));
+
+        assertNotEquals(target.getNotificationRequestId("abc","123"),
+            target.getNotificationRequestId("efg","123"));
+    }
+
+    @Test
+    public void testAreAppNotificationsEnabled_returnsFalse_whenOptOutProviderReturnsTrue() {
+        mockAppLevelOptOutProvider(true);
+        assertEquals(false, target.areAppNotificationsEnabled());
+    }
+
+    @Test
+    public void testAreAppNotificationsEnabled_callsPlatformMethod_whenOptOutProviderReturnsFalse() {
+        mockAppLevelOptOutProvider(false);
+
+        final NotificationClientBase notificationClient = Mockito.mock(NotificationClientBase.class,
+                withSettings().defaultAnswer(CALLS_REAL_METHODS));
+
+        Whitebox.setInternalState(notificationClient, "pinpointContext", mockPinpointContext);
+
+        notificationClient.areAppNotificationsEnabled();
+
+        verify(notificationClient).areAppNotificationsEnabledOnPlatform();
+    }
+
+    private void mockAppLevelOptOutProvider(final boolean returnValue) {
+        when(mockPinpointConfiguration.getAppLevelOptOutProvider()).thenReturn(
+            new AppLevelOptOutProvider() {
+                public boolean isOptedOut() {
+                    return returnValue;
+                }
+            }
+        );
+    }
+
+}
diff --git a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationClientTest.java b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/GCMNotificationClientTest.java
similarity index 94%
rename from aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationClientTest.java
rename to aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/GCMNotificationClientTest.java
index 4d5da1bceb..06c6056543 100644
--- a/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/NotificationClientTest.java
+++ b/aws-android-sdk-pinpoint/src/test/java/com/amazonaws/mobileconnectors/pinpoint/targeting/notification/GCMNotificationClientTest.java
@@ -41,6 +41,8 @@
 import com.amazonaws.mobileconnectors.pinpoint.internal.core.configuration.AndroidPreferencesConfiguration;
 import com.amazonaws.mobileconnectors.pinpoint.internal.core.system.MockSystem;
 import com.amazonaws.mobileconnectors.pinpoint.targeting.TargetingClient;
+import com.amazonaws.services.pinpoint.model.ChannelType;
+
 import android.app.Service;
 import android.os.Bundle;
 import org.robolectric.shadows.ShadowBitmap;
@@ -50,6 +52,7 @@
 import static junit.framework.Assert.assertTrue;
 import static org.hamcrest.Matchers.is;
 import static org.junit.Assert.assertEquals;
+import static org.mockito.Mockito.CALLS_REAL_METHODS;
 import static org.junit.Assert.assertNotEquals;
 import static org.junit.Assert.assertThat;
 import static org.mockito.Matchers.anyString;
@@ -57,10 +60,11 @@
 import static org.mockito.Mockito.when;
 import static org.mockito.Mockito.spy;
 import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.withSettings;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(manifest = Config.NONE)
-public class NotificationClientTest extends MobileAnalyticsTestBase {
+public class GCMNotificationClientTest extends MobileAnalyticsTestBase {
 
     @Mock
     AndroidPreferencesConfiguration mockConfiguration;
@@ -72,9 +76,9 @@
     private TargetingClient mockTargetingClient;
     @Mock
     private PinpointConfiguration mockPinpointConfiguration;
-
+    @Mock
     private PinpointContext mockPinpointContext;
-
+    @Mock
     private Context spiedRoboContext;
 
     @Before
@@ -107,7 +111,7 @@ public void setup() {
         when(mockPinpointContext.getPinpointConfiguration())
                 .thenReturn(mockPinpointConfiguration);
 
-        target = new NotificationClient(mockPinpointContext);
+        target = NotificationClient.createClient(mockPinpointContext, ChannelType.GCM);
     }
 
     @Test
@@ -174,7 +178,7 @@ public void testGCMMessageReceivedDefaultDoNotPostNotificationInForeground() thr
     public void testGCMMessageReceivedInForegroundDefaultConfig() throws JSONException {
         // Force the app to be in the foreground.
         final AppUtil appUtil = Mockito.mock(AppUtil.class);
-        Whitebox.setInternalState(target, "appUtil", appUtil);
+        Whitebox.setInternalState(target.notificationClientBase, "appUtil", appUtil);
         Mockito.when(appUtil.isAppInForeground()).thenReturn(true);
 
         NotificationClient.CampaignPushResult pushResult
@@ -214,7 +218,7 @@ public void testGCMMessageReceivedInForegroundWithConfigShouldPostNotificationsI
 
         // Force the app to be in the foreground.
         final AppUtil appUtil = Mockito.mock(AppUtil.class);
-        Whitebox.setInternalState(target, "appUtil", appUtil);
+        Whitebox.setInternalState(target.notificationClientBase, "appUtil", appUtil);
         Mockito.when(appUtil.isAppInForeground()).thenReturn(true);
 
         NotificationClient.CampaignPushResult pushResult
@@ -248,7 +252,7 @@ public void testGCMMessageReceivedInBackgroundWithConfigShouldPostNotificationsI
 
         // Force the app to be in the foreground.
         final AppUtil appUtil = Mockito.mock(AppUtil.class);
-        Whitebox.setInternalState(target, "appUtil", appUtil);
+        Whitebox.setInternalState(target.notificationClientBase, "appUtil", appUtil);
         Mockito.when(appUtil.isAppInForeground()).thenReturn(false);
 
         NotificationClient.CampaignPushResult pushResult
@@ -329,7 +333,11 @@ public void testAreAppNotificationsEnabled_returnsFalse_whenOptOutProviderReturn
     public void testAreAppNotificationsEnabled_callsPlatformMethod_whenOptOutProviderReturnsFalse() {
         mockAppLevelOptOutProvider(false);
 
-        final NotificationClient notificationClient = spy(target);
+        final NotificationClientBase notificationClient = Mockito.mock(NotificationClientBase.class,
+                withSettings().defaultAnswer(CALLS_REAL_METHODS));
+
+        Whitebox.setInternalState(notificationClient, "pinpointContext", mockPinpointContext);
+
         notificationClient.areAppNotificationsEnabled();
 
         verify(notificationClient).areAppNotificationsEnabledOnPlatform();
@@ -364,7 +372,7 @@ public void testConvertBitmapToAlphaGrayscale() {
 
         final Bitmap inputBitmap = Bitmap.createBitmap(inputPixels, 255, 255, Bitmap.Config.ARGB_8888);
 
-        final Bitmap outputBitmap = NotificationClient.convertBitmapToAlphaGreyscale(inputBitmap);
+        final Bitmap outputBitmap = NotificationClientBase.convertBitmapToAlphaGreyscale(inputBitmap);
         // Verify the output is white with greyscale in the alpha channel.
         for (int x = 0; x < 255; x++) {
             for (int y = 0; y < 255; y++) {
@@ -384,7 +392,7 @@ public void testConvertBitmapToAlphaGrayscale() {
         }
 
         // call the method again with the converted image, it should leave the bitmap unchanged.
-        final Bitmap dupOutput = NotificationClient.convertBitmapToAlphaGreyscale(outputBitmap);
+        final Bitmap dupOutput = NotificationClientBase.convertBitmapToAlphaGreyscale(outputBitmap);
 
         for (int x = 0; x < 255; x++) {
             for (int y = 0; y < 255; y++) {
diff --git a/aws-android-sdk-polly/pom.xml b/aws-android-sdk-polly/pom.xml
index 633b13d8c7..b745a7b45f 100644
--- a/aws-android-sdk-polly/pom.xml
+++ b/aws-android-sdk-polly/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/SynthesizeSpeechPresignRequest.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/SynthesizeSpeechPresignRequest.java
index acfd599481..956ca6f11f 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/SynthesizeSpeechPresignRequest.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/SynthesizeSpeechPresignRequest.java
@@ -119,10 +119,10 @@
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
      * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte, Ruben,
      * Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Tatyana, Astrid, Filiz, Vicki, Takumi
      */
     private String voiceId;
 
@@ -775,10 +775,10 @@ public SynthesizeSpeechPresignRequest withTextType(TextType textType) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
      * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte, Ruben,
      * Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Tatyana, Astrid, Filiz, Vicki, Takumi
      *
      * @return <p>
      *         Voice ID to use for the synthesis. You can get a list of
@@ -803,10 +803,10 @@ public String getVoiceId() {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
      * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte, Ruben,
      * Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Tatyana, Astrid, Filiz, Vicki, Takumi
      *
      * @param voiceId <p>
      *            Voice ID to use for the synthesis. You can get a list of
@@ -834,10 +834,10 @@ public void setVoiceId(String voiceId) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
      * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Liv, Lotte, Ruben, Ewa,
      * Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Tatyana, Astrid, Filiz, Vicki, Takumi
      *
      * @param voiceId <p>
      *            Voice ID to use for the synthesis. You can get a list of
@@ -865,10 +865,10 @@ public SynthesizeSpeechPresignRequest withVoiceId(String voiceId) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
      * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte, Ruben,
      * Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Tatyana, Astrid, Filiz, Vicki, Takumi
      *
      * @param voiceId <p>
      *            Voice ID to use for the synthesis. You can get a list of
@@ -896,10 +896,10 @@ public void setVoiceId(VoiceId voiceId) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
      * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Liv, Lotte, Ruben, Ewa,
      * Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Tatyana, Astrid, Filiz, Vicki, Takumi
      *
      * @param voiceId <p>
      *            Voice ID to use for the synthesis. You can get a list of
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/SynthesizeSpeechRequest.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/SynthesizeSpeechRequest.java
index 8d413850e8..67a875a104 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/SynthesizeSpeechRequest.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/SynthesizeSpeechRequest.java
@@ -108,10 +108,10 @@
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
-     * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte, Ruben,
-     * Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope,
+     * Chantal, Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte,
+     * Ruben, Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen,
+     * Maxim, Tatyana, Astrid, Filiz, Vicki, Takumi
      */
     private String voiceId;
 
@@ -713,10 +713,10 @@ public SynthesizeSpeechRequest withTextType(TextType textType) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
-     * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte, Ruben,
-     * Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope,
+     * Chantal, Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte,
+     * Ruben, Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen,
+     * Maxim, Tatyana, Astrid, Filiz, Vicki, Takumi
      *
      * @return <p>
      *         Voice ID to use for the synthesis. You can get a list of
@@ -741,10 +741,10 @@ public String getVoiceId() {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
-     * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte, Ruben,
-     * Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope,
+     * Chantal, Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte,
+     * Ruben, Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen,
+     * Maxim, Tatyana, Astrid, Filiz, Vicki, Takumi
      *
      * @param voiceId <p>
      *            Voice ID to use for the synthesis. You can get a list of
@@ -772,10 +772,10 @@ public void setVoiceId(String voiceId) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
-     * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte, Ruben,
-     * Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope,
+     * Chantal, Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte,
+     * Ruben, Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen,
+     * Maxim, Tatyana, Astrid, Filiz, Vicki, Takumi
      *
      * @param voiceId <p>
      *            Voice ID to use for the synthesis. You can get a list of
@@ -803,10 +803,10 @@ public SynthesizeSpeechRequest withVoiceId(String voiceId) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
-     * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte, Ruben,
-     * Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope,
+     * Chantal, Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte,
+     * Ruben, Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen,
+     * Maxim, Tatyana, Astrid, Filiz, Vicki, Takumi
      *
      * @param voiceId <p>
      *            Voice ID to use for the synthesis. You can get a list of
@@ -834,10 +834,10 @@ public void setVoiceId(VoiceId voiceId) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
-     * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte, Ruben,
-     * Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope,
+     * Chantal, Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte,
+     * Ruben, Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen,
+     * Maxim, Tatyana, Astrid, Filiz, Vicki, Takumi
      *
      * @param voiceId <p>
      *            Voice ID to use for the synthesis. You can get a list of
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/Voice.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/Voice.java
index 5a1e583bcb..a0174a48e7 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/Voice.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/Voice.java
@@ -42,10 +42,10 @@
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
-     * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte, Ruben,
-     * Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope,
+     * Chantal, Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte,
+     * Ruben, Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen,
+     * Maxim, Tatyana, Astrid, Filiz, Vicki, Takumi
      */
     private String id;
 
@@ -182,10 +182,10 @@ public Voice withGender(Gender gender) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
-     * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte, Ruben,
-     * Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope,
+     * Chantal, Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte,
+     * Ruben, Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen,
+     * Maxim, Tatyana, Astrid, Filiz, Vicki, Takumi
      *
      * @return <p>
      *         Amazon Polly assigned voice ID. This is the ID that you specify
@@ -206,10 +206,10 @@ public String getId() {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
-     * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte, Ruben,
-     * Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope,
+     * Chantal, Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte,
+     * Ruben, Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen,
+     * Maxim, Tatyana, Astrid, Filiz, Vicki, Takumi
      *
      * @param id <p>
      *            Amazon Polly assigned voice ID. This is the ID that you
@@ -234,10 +234,10 @@ public void setId(String id) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
-     * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte, Ruben,
-     * Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope,
+     * Chantal, Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte,
+     * Ruben, Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen,
+     * Maxim, Tatyana, Astrid, Filiz, Vicki, Takumi
      *
      * @param id <p>
      *            Amazon Polly assigned voice ID. This is the ID that you
@@ -262,10 +262,10 @@ public Voice withId(String id) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
-     * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte, Ruben,
-     * Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope,
+     * Chantal, Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte,
+     * Ruben, Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen,
+     * Maxim, Tatyana, Astrid, Filiz, Vicki, Takumi
      *
      * @param id <p>
      *            Amazon Polly assigned voice ID. This is the ID that you
@@ -290,10 +290,10 @@ public void setId(VoiceId id) {
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>Geraint, Gwyneth, Mads, Naja, Hans, Marlene,
      * Nicole, Russell, Amy, Brian, Emma, Raveena, Ivy, Joanna, Joey, Justin,
-     * Kendra, Kimberly, Salli, Conchita, Enrique, Miguel, Penelope, Chantal,
-     * Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte, Ruben,
-     * Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen, Maxim,
-     * Tatyana, Astrid, Filiz, Vicki
+     * Kendra, Kimberly, Matthew, Salli, Conchita, Enrique, Miguel, Penelope,
+     * Chantal, Celine, Mathieu, Dora, Karl, Carla, Giorgio, Mizuki, Liv, Lotte,
+     * Ruben, Ewa, Jacek, Jan, Maja, Ricardo, Vitoria, Cristiano, Ines, Carmen,
+     * Maxim, Tatyana, Astrid, Filiz, Vicki, Takumi
      *
      * @param id <p>
      *            Amazon Polly assigned voice ID. This is the ID that you
diff --git a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/VoiceId.java b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/VoiceId.java
index 1b9cc523b8..520868fd5c 100644
--- a/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/VoiceId.java
+++ b/aws-android-sdk-polly/src/main/java/com/amazonaws/services/polly/model/VoiceId.java
@@ -41,6 +41,7 @@
     Justin("Justin"),
     Kendra("Kendra"),
     Kimberly("Kimberly"),
+    Matthew("Matthew"),
     Salli("Salli"),
     Conchita("Conchita"),
     Enrique("Enrique"),
@@ -70,7 +71,8 @@
     Tatyana("Tatyana"),
     Astrid("Astrid"),
     Filiz("Filiz"),
-    Vicki("Vicki");
+    Vicki("Vicki"),
+    Takumi("Takumi");
 
     private String value;
 
@@ -104,6 +106,7 @@ public String toString() {
         enumMap.put("Justin", Justin);
         enumMap.put("Kendra", Kendra);
         enumMap.put("Kimberly", Kimberly);
+        enumMap.put("Matthew", Matthew);
         enumMap.put("Salli", Salli);
         enumMap.put("Conchita", Conchita);
         enumMap.put("Enrique", Enrique);
@@ -134,6 +137,7 @@ public String toString() {
         enumMap.put("Astrid", Astrid);
         enumMap.put("Filiz", Filiz);
         enumMap.put("Vicki", Vicki);
+        enumMap.put("Takumi", Takumi);
     }
 
     /**
diff --git a/aws-android-sdk-rekognition/pom.xml b/aws-android-sdk-rekognition/pom.xml
index dce2e66e0b..19b5e64c92 100644
--- a/aws-android-sdk-rekognition/pom.xml
+++ b/aws-android-sdk-rekognition/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-s3/pom.xml b/aws-android-sdk-s3/pom.xml
index 14f78bc30a..9aa31e3655 100644
--- a/aws-android-sdk-s3/pom.xml
+++ b/aws-android-sdk-s3/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,13 +20,13 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-kms</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferObserver.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferObserver.java
index 33887eab3b..26845d882a 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferObserver.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferObserver.java
@@ -104,7 +104,6 @@
      *
      * @param id The transfer id of the transfer to be observed.
      * @param dbUtil an instance of database utility
-     * @param c a cursor to read the state of the transfer from
      */
     TransferObserver(int id, TransferDBUtil dbUtil) {
         this.id = id;
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/package-info.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/package-info.java
index c0dbcf5b6f..cbe1c628ed 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/package-info.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/package-info.java
@@ -1,6 +1,6 @@
 /**
  * This package contains helper classes for managing upload and download tasks and a public
- * class {@link com.amazonaws.mobileconnectors.s3.transferservice.transferUtility}
+ * class {@link com.amazonaws.mobileconnectors.s3.transferutility.TransferUtility}
  * which is a high level client that provides methods to control users' upload and download tasks.
  *
  * For starting transfer tasks, here is a sample usage.
@@ -8,6 +8,7 @@
  * <pre>
  * // Initializes TransferUtility
  * TransferUtility transferUtility = new TransferUtility(s3, getApplicationContext());
+ *
  * // Starts a download
  * TransferObserver observer = transferUtility.download("bucket_name", "key", file);
  * observer.setTransferListener(new TransferListener() {
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/AmazonS3Client.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/AmazonS3Client.java
index fd1efd0ea7..185c2729c5 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/AmazonS3Client.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/AmazonS3Client.java
@@ -213,6 +213,9 @@
      */
     volatile String clientRegion;
 
+    // Number of Kbytes that needs to be written before status updates are called
+    private int notificationThreshold = 1024;
+
     private static final int BUCKET_REGION_CACHE_SIZE = 300;
 
     private static final Map<String, String> bucketRegionCache = Collections.synchronizedMap(
@@ -432,6 +435,20 @@ private void init() {
                 "/com/amazonaws/services/s3/request.handler2s"));
     }
 
+
+    /**
+     * Sets the number of Kbytes that need to be written before updates to the
+     * listener occur.
+     *
+     * @param threshold Number of Kbytes that needs to be written before
+     *            write update notification occurs.
+     */
+    public void setNotificationThreshold(final int threshold) {
+        this.notificationThreshold = threshold;
+    }
+
+
+
     @Override
     public void setEndpoint(String endpoint) {
         if (endpoint.endsWith(Constants.S3_ACCELERATE_HOSTNAME)) {
@@ -1393,6 +1410,7 @@ public S3Object getObject(GetObjectRequest getObjectRequest)
                 ProgressReportingInputStream progressReportingInputStream = new ProgressReportingInputStream(
                         input, progressListenerCallbackExecutor);
                 progressReportingInputStream.setFireCompletedEvent(true);
+                progressReportingInputStream.setNotificationThreshold(this.notificationThreshold);
                 input = progressReportingInputStream;
                 fireProgressEvent(progressListenerCallbackExecutor,
                         ProgressEvent.STARTED_EVENT_CODE);
@@ -1684,6 +1702,7 @@ public PutObjectResult putObject(PutObjectRequest putObjectRequest)
 
         if (progressListenerCallbackExecutor != null) {
             input = new ProgressReportingInputStream(input, progressListenerCallbackExecutor);
+            ((ProgressReportingInputStream)input).setNotificationThreshold(this.notificationThreshold);
             fireProgressEvent(progressListenerCallbackExecutor, ProgressEvent.STARTED_EVENT_CODE);
         }
 
@@ -3631,10 +3650,9 @@ public UploadPartResult uploadPart(UploadPartRequest uploadPartRequest)
                 .wrapListener(progressListener);
 
         if (progressListenerCallbackExecutor != null) {
-            inputStream = new ProgressReportingInputStream(inputStream,
-                    progressListenerCallbackExecutor);
-            fireProgressEvent(progressListenerCallbackExecutor,
-                    ProgressEvent.PART_STARTED_EVENT_CODE);
+            inputStream = new ProgressReportingInputStream(inputStream, progressListenerCallbackExecutor);
+            ((ProgressReportingInputStream)inputStream).setNotificationThreshold(this.notificationThreshold);
+            fireProgressEvent(progressListenerCallbackExecutor, ProgressEvent.PART_STARTED_EVENT_CODE);
         }
 
         try {
diff --git a/aws-android-sdk-sdb/pom.xml b/aws-android-sdk-sdb/pom.xml
index a124018d3a..0b893051a8 100644
--- a/aws-android-sdk-sdb/pom.xml
+++ b/aws-android-sdk-sdb/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
         <dependency>
         <groupId>junit</groupId>
diff --git a/aws-android-sdk-ses/pom.xml b/aws-android-sdk-ses/pom.xml
index e7f8d6408e..9f3f12e2b5 100644
--- a/aws-android-sdk-ses/pom.xml
+++ b/aws-android-sdk-ses/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-sns/pom.xml b/aws-android-sdk-sns/pom.xml
index 501d3be828..a4a54f4301 100644
--- a/aws-android-sdk-sns/pom.xml
+++ b/aws-android-sdk-sns/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,13 +20,13 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-sqs</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-sqs/pom.xml b/aws-android-sdk-sqs/pom.xml
index 25af75bed9..ae634de5b1 100644
--- a/aws-android-sdk-sqs/pom.xml
+++ b/aws-android-sdk-sqs/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.2</version>
+    <version>2.6.6</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.2</version>
+      <version>2.6.6</version>
     </dependency>
   </dependencies>
 
diff --git a/pom.xml b/pom.xml
index 2d9216251f..65b0ca4484 100644
--- a/pom.xml
+++ b/pom.xml
@@ -6,7 +6,7 @@
   <artifactId>aws-android-sdk-pom</artifactId>
   <packaging>pom</packaging>
   <name>AWS SDK for Android</name>
-  <version>2.6.2</version>
+  <version>2.6.6</version>
   <description>The Amazon Web Services SDK for Android provides Android APIs for building software on AWS’ cost-effective, scalable, and reliable infrastructure products. The AWS SDK for Android allows developers to code against APIs for all of Amazon's infrastructure web services (Amazon S3, Amazon EC2, Amazon SQS, Auto Scaling, etc).</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
