diff --git a/CHANGELOG.md b/CHANGELOG.md
index 9e2c9671ff..d8c03eda12 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,17 @@
 # Change Log - AWS SDK for Android
 
+## [Release 2.8.1](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.8.1)
+
+### New Features
+
+* **AWS Core Runtime**
+  * Added support for GovCloud US East region `us-gov-east-1`.
+
+### Enhancements
+
+* **AWS Mobile Client**
+  * General improvements to synchronization, null checking, and state management.
+
 ## [Release 2.8.0](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.8.0)
 
 ### New Features
diff --git a/README.md b/README.md
index 5f62ec4b14..569b82447a 100644
--- a/README.md
+++ b/README.md
@@ -1,40 +1,31 @@
 # AWS SDK for Android 
 
-[![Build Status](https://travis-ci.org/aws/aws-sdk-android.png?branch=master)](https://travis-ci.org/aws/aws-sdk-android)
-[![GitHub release](https://img.shields.io/github/release/aws/aws-sdk-android.svg)](https://github.com/aws/aws-sdk-android/releases)
-[![Maven Central](https://img.shields.io/maven-central/v/com.amazonaws/aws-android-sdk-pom.svg)]()
-[![Twitter Follow](https://img.shields.io/twitter/follow/awsformobile.svg?style=social&label=Follow)]()
+[![GitHub release](https://img.shields.io/github/release/aws-amplify/aws-sdk-android.svg)](https://github.com/aws-amplify/aws-sdk-android/releases)
+[![Maven Central](https://img.shields.io/maven-central/v/com.amazonaws/aws-android-sdk-pom.svg)](https://search.maven.org/search?q=a:aws-android-sdk-pom)
 
-The [AWS SDK for Android](https://aws.amazon.com/mobile/resources/) provides a library and documentation for developers to build connected mobile applications using AWS.
+The AWS SDK for Android provides a library and documentation for developers to build connected mobile applications using AWS.
 
-## Resources
+### Features / APIs
 
-* **[Developer Guide](https://docs.aws.amazon.com/aws-mobile/latest/developerguide/getting-started.html)** - For in-depth getting started and usage information.
-* **[Code Samples](https://github.com/awslabs/aws-sdk-android-samples)** - Repository of example projects using the SDK.
-* **[Javadoc](http://docs.aws.amazon.com/AWSAndroidSDK/latest/javadoc/)** - For operations, parameters, responses, and examples
-* **[AWS Mobile Developer Blog](http://mobile.awsblog.com/)** - For updates and guidance on using the AWS SDK for Android
-* **[Changelog](https://github.com/aws/aws-sdk-android/blob/master/CHANGELOG.md)** - To see the latest features, bug fixes, and changes in the SDK
-* **[Issues](https://github.com/aws/aws-sdk-android/issues)** - Report issues and submit pull requests (see [Apache 2.0 License](http://aws.amazon.com/apache-2-0/))
-* **[@awsformobile](https://twitter.com/awsformobile)** - Follow us on Twitter
+- [__Authentication__](https://aws-amplify.github.io/docs/android/authentication): APIs and building blocks for developers who want to create user authentication experiences.  
+- [__Analytics__](https://aws-amplify.github.io/docs/android/analytics): Easily collect analytics data for your app. Analytics data includes user sessions and other custom events that you want to track in your app.  
+- [__API__](https://aws-amplify.github.io/docs/android/api): Provides a simple solution when making HTTP requests. It provides an automatic, lightweight signing process which complies with AWS Signature Version 4.
+- [__Storage__](https://aws-amplify.github.io/docs/android/storage): Provides a simple mechanism for managing user content for your app in public, protected or private storage buckets.  
+- [__Push Notifications__](https://aws-amplify.github.io/docs/android/push-notifications): Allows you to integrate push notifications in your app with Amazon Pinpoint targeting and campaign management support.
+- [__PubSub__](https://aws-amplify.github.io/docs/android/pubsub): Provides connectivity with cloud-based message-oriented middleware.  
+- [__Generated AWS Service Interfaces__](https://aws-amplify.github.io/docs/android/manualsetup): Provides direct interaction with any AWS service. 
 
-## Getting Started using the SDK
+#### Visit our [Web Site](https://aws-amplify.github.io) to learn more about Amplify Framework.
 
-Please note the AWS SDK for Android supports Android API level 10+ and newer libraries may require higher API level 21+ and 23+.
-
-### Sign up for AWS
-Before you begin, you need to sign up for an AWS account [here](http://aws.amazon.com/), click 'Sign In to the Console', and select new user.
-
-### Create an Amazon Cognito Identity pool 
-Amazon Cognito Identity allows you to authenticate users to access your AWS resources without having to place your credentials within the applicaiton itself (which is *very* insecure).
+* [Documentation](https://aws-amplify.github.io/docs)
+* [Setup](#setup)
+* [Samples](https://github.com/awslabs/aws-sdk-android-samples)
 
-To create an Identity Pool
+## Setup
 
-1.  Log into the [Cognito Console](https://console.aws.amazon.com/cognito/home) and click the Get Started button (or the **Manage Federated Identities** button if your account already has an identity pool).
-2.  Give your Identity Pool a unique name and either enable access to unauthenticated identities or follow the guides presented in the console to setup an authentication provider (Such as Amazon, Facebook, Google, Twitter, or be your own authentication provider).  Then click create pool.
-3.  You will need to create a role associated with your Identity Pool.  This role specifies the actions that users in the identity pool are allowed to make.  By default the console provides you with a role that allows the synchronization of user data from Cognito Sync and recording user events using Amazon Mobile Analytics.  For some example ways to allow other services, or to revoke the permission for these default services see the [Getting Started Guide](http://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/getting-started-android.html) and navigate to the service you are interested in to see an example of how to create an appropriate role.
-4.  The Cognito console will then present you with a code snippet for getting AWS Credentials to your application.  Keep this open as you may find it useful once you are ready to start coding with the SDK.
+Please note the AWS SDK for Android supports Android API level 10+ and newer libraries may require higher API level 21+ and 23+.
 
-### Depend on the AWS SDK for Android in your application
+### Include the SDK for Android in an Existing Application
 
 The following 3 sections describe how you can depend on the SDK in your application using Gradle with Android Studio, Maven, or by downloading the Jar files from our website.
 If you use Maven or Gradle you can automatically get new versions of the SDK when they are released.
@@ -113,7 +104,7 @@ Here's an example pom.xml showing how you can add Amazon Cognito Identity, Amazo
 
 #### Including the Jars
 
-You can also download the .zip file containing the jars files of the SDK [here](http://aws.amazon.com/mobile/sdk/).
+You can also download the .zip file containing the jars files of the SDK [here](https://sdk-for-android.amazonwebservices.com/latest/aws-android-sdk.zip).
 How you include these in your project will depend on the editor you are using.
 
 For an Eclipse project, add the jar files to a folder in your project called 'libs' (create one if it doesn't already exist).  The Eclipse Android plug-in will usually add this to your classpath by default. If it does not right click your project --> properties --> Java build path (Libraries tab), add Jar and select the Jars you want to add
@@ -165,69 +156,11 @@ private class S3Example extends AsyncTask<Void,Void,Void>{
 ### SDK Fundamentals
 There are only a few fundamentals that are helpful to know when developing against the AWS SDK for Android.
 
-* Never embed credentrials in an Android application.  It is trivially easy to decompile applications and steal embedded credentials.  Always use temporarily vended credentials from services such as [Amazon Cognito Identity](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html).
+* Never embed credentrials in an Android application.  It is trivially easy to decompile applications and steal embedded credentials.  Always use temporarily vended credentials from services such as Amazon Cognito Identity.
 * Unless explicitly stated, calls are synchronous and must be taken off of the main thread.
 * Unless explicitly stated, calls can always throw an AmazonServiceException or an AmazonClientException (depending on if the exception is generated by the client or the service).
 * The SDK will handle re-trying requests automatically, but unless explicitly stated will throw an exception if it cannot contact AWS.
-* We are always looking to help, please feel free to open an [issue](https://github.com/aws/aws-sdk-android/issues).
-
-### Basic Service API Calls
-
-The SDK provides access to many AWS Services.  At the most basic level the SDK provides a request/response model for many of the various service methods.  At this level, for a given service, you will have a client that accepts request objects and will pass back a response object, or throw an error.  This basic model is shown in the above example.  Looking at the [Javadoc](http://docs.aws.amazon.com/AWSAndroidSDK/latest/javadoc/) you will notice that services typically have a com.amazonaws.services.*servicename* package and com.amazonaws.services.*servicename*.model package .  This *servicename* package contains the client that you will pass request/response objects to in order to make service calls.  The *servicename*.model package contains classes that model the request and response parameters of calls to and from AWS services.
-
-### Mobile Connectors  
-
-The SDK also provides a higher level experience for many services.
-
-### S3 Transfer Utility
-
-The TransferUtility adds convenience and reliability on top of using the standard `AmazonS3Client` when uploading and downloading data to S3:
-
-* Enhances performance by automatically converting  upload transfers > 5MB to multi-part uploads, using multiple threads.
-* Provides the ability to pause/resume/cancel upload/download transfers, which is useful if the app is being killed or loses internet connectivity.
-* Automatically pauses/resumes upload/download transfers when network connectivity changes.
-
-### S3 Transfer Manager (Deprecated)
-
-Please use S3 Transfer Utility
-
-### DynamoDB Object Mapper
-
-DynamoDB Object Mapper lets you map client-side classes to DynamoDB tables similar to standard ORM techniques.  With it you can:
-
-* Perform various create, read, update, and delete (CRUD) operations, as well as execute queries which automatically return the classes you specify.  
-* Use S3 link if the class you are mapping contains large blob data.  With S3 Links you can store large chunks of bytes, such as avatar images, in S3 while storing the rest of the class data, such as primitives and strings in DynamoDB.
-
-Note:  The DynamoDB Mapper is in a separate jar (and Maven package), but requires the DynamoDB jar to be on the classpath.  If you want to use S3 Links, you will also need the Amazon S3 jar on the classpath.
-
-### Lambda Invoker
-The Lambda Invoker helps calling code in the cloud via AWS Lambda by:
-
-* Automatically providing your Lambda functions with data about the device, app, and end user identity for personalized responses.
-* Allowing you to annotate Java interfaces, denoting them as proxies to Lambda fuctions, letting you stay in the Java paradigm.
-
-### Amazon Cognito
-
-The Amazon Cognito mobile connector provides the ability to:
-
-* Authenticate users from login providers such Amazon, Facebook, Google, Twitter, or your own custom identity provider.
-* Synchronize user profile data, app preferences or game state across devices and across login providers.
-* Record and update user data while offline.
-
-**Note**: The Amazon Cognito Federated Identities classes are part of `AWS SDK for Android - Core` (`aws-android-sdk-core` Maven package) and can be found [here](https://github.com/aws/aws-sdk-android/tree/master/aws-android-sdk-core). The Amazon Cognito Sync code can be found [here](https://github.com/aws/aws-sdk-android/tree/master/aws-android-sdk-cognito).
-
-### Amazon Pinpoint
-Using Amazon Pinpoint, you can:
-
-* Record custom events
-* Automatically track customer behaviors, aggregate metrics, and generate data visualizations.
-* Record events to disk, and select when to send batches of recorded events to AWS.  (This allows saving of events while offline, and saves battery life by infrequently waking up the network.)
-* Specify the maximum amount of storage space you want to dedicate to event storage.
-
-### Kinesis Recorder
-Amazon Kinesis allows for real-time processing of streaming data at massive scale.  Unlike Amazon Mobile Analytics, using Amazon Kinesis developers write server side code to process data sent to Kinesis.  An example would be recording click stream data.  
-
-* The Kinesis Recorder allows developers to save PutRecordRequests to disk and send them in batches.  (This allows saving of records while offline, and saves battery life by infrequently waking up the network.)
+* We are always looking to help, please feel free to open an [issue](https://github.com/aws-amplify/aws-sdk-android/issues).
 
 ## Building the SDK
 This section describes how you can compile the SDK source code on your own.
@@ -239,10 +172,6 @@ After installing Gradle, clone this repository and run
 
 Otherwise, use Android Studio to open the project and build the sub-project(s) of your choice and check the `build` folder for `libs` or `output/aar`.
 
-#### Developing
-
-The recommended IDE is Android Studio, but you should be able to use your favorite IDE as long as it supports Gradle.
-
 #### Issues with unit tests on Windows
 
 If you are using a Windows machine, unit tests that involve file deletion can fail because the filesystem does not respond well to `file.delete()`.
@@ -251,36 +180,14 @@ If you are using a Windows machine, unit tests that involve file deletion can fa
 
 For more information on Android development, see the Android developer site at: [developer.android.com](http://developer.android.com/index.html)
 
-### Supported AWS Services
-
-The AWS SDK for Android supports the following AWS services:
-
-* [Amazon API Gateway](https://aws.amazon.com/api-gateway/)
-* [Amazon Auto Scaling](https://aws.amazon.com/autoscaling/)
-* [Amazon CloudWatch](https://aws.amazon.com/cloudwatch/)
-* [Amazon CloudWatch Logs](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_GettingStarted.html)
-* [Amazon Cognito](https://aws.amazon.com/cognito/)
-* [Amazon Cognito Auth](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-userpools-server-contract-reference.html)
-* [Amazon DynamoDB](https://aws.amazon.com/dynamodb/)
-* [Amazon Elastic Compute Cloud (EC2)](https://aws.amazon.com/ec2/)
-* [Amazon Elastic Load Balancing (ELB)](https://aws.amazon.com/elasticloadbalancing/)
-* [AWS IoT](https://aws.amazon.com/iot/)
-* [AWS Key Management Service (KMS)](https://aws.amazon.com/kms/)
-* [Amazon Kinesis Firehose](https://aws.amazon.com/kinesis/firehose/)
-* [Amazon Kinesis Streams](https://aws.amazon.com/kinesis/streams/)
-* [Amazon Kinesis Video Streams](https://aws.amazon.com/kinesis/video-streams/)
-* [AWS Lambda](https://aws.amazon.com/lambda/)
-* [Amazon Lex](https://aws.amazon.com/lex)
-* [Amazon Machine Learning](https://aws.amazon.com/machine-learning/)
-* [Amazon Mobile Analytics](https://aws.amazon.com/mobileanalytics/)
-* [Amazon Pinpoint](https://aws.amazon.com/pinpoint/)
-* [Amazon Polly](https://aws.amazon.com/polly/)
-* [Amazon Rekoginiton](https://aws.amazon.com/rekognition/)
-* [Amazon S3](https://aws.amazon.com/s3/)
-* [Amazon Security Token Service (STS)](https://docs.aws.amazon.com/STS/latest/APIReference/Welcome.html)
-* [Amazon Simple Email Service (SES)](https://aws.amazon.com/ses/)
-* [Amazon Simple Notification Service (SNS)](https://aws.amazon.com/sns/)
-* [Amazon Simple Queue Service (SQS)](https://aws.amazon.com/sqs/)
-* [Amazon SimpleDB](https://aws.amazon.com/simpledb/)
-* [Amazon Transcribe](https://aws.amazon.com/transcribe/)
-* [Amazon Comprehend](https://aws.amazon.com/comprehend)
+## Talk to Us
+
+Visit our GitHub [Issues](https://github.com/aws-amplify/aws-sdk-android/issues) to leave feedback and to connect with other users of the SDK.
+
+## Author
+
+Amazon Web Services
+
+## License
+
+See the **LICENSE** file for more info.
diff --git a/aws-android-sdk-apigateway-core/pom.xml b/aws-android-sdk-apigateway-core/pom.xml
index e552bfc0c6..a7fcf28f6e 100644
--- a/aws-android-sdk-apigateway-core/pom.xml
+++ b/aws-android-sdk-apigateway-core/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-auth-core/pom.xml b/aws-android-sdk-auth-core/pom.xml
index add85c2311..b4402696a4 100644
--- a/aws-android-sdk-auth-core/pom.xml
+++ b/aws-android-sdk-auth-core/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -29,7 +29,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
 
     <dependency>
diff --git a/aws-android-sdk-auth-facebook/pom.xml b/aws-android-sdk-auth-facebook/pom.xml
index 59c0e71edf..5bf062ff27 100644
--- a/aws-android-sdk-auth-facebook/pom.xml
+++ b/aws-android-sdk-auth-facebook/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <repositories>
@@ -36,7 +36,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
       <type>aar</type>
     </dependency>
     <dependency>
diff --git a/aws-android-sdk-auth-google/pom.xml b/aws-android-sdk-auth-google/pom.xml
index af07dc9fcd..be7237a5a1 100644
--- a/aws-android-sdk-auth-google/pom.xml
+++ b/aws-android-sdk-auth-google/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <repositories>
@@ -40,7 +40,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
       <type>aar</type>
     </dependency>
     
diff --git a/aws-android-sdk-auth-ui/pom.xml b/aws-android-sdk-auth-ui/pom.xml
index d9ecd00a00..5bdde40fe1 100644
--- a/aws-android-sdk-auth-ui/pom.xml
+++ b/aws-android-sdk-auth-ui/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <repositories>
@@ -36,28 +36,28 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
       <type>aar</type>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-google</artifactId>
       <optional>true</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
       <type>aar</type>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-facebook</artifactId>
       <optional>true</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
       <type>aar</type>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-userpools</artifactId>
       <optional>true</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
       <type>aar</type>
     </dependency>
     <dependency>
diff --git a/aws-android-sdk-auth-userpools/pom.xml b/aws-android-sdk-auth-userpools/pom.xml
index 7d45f61606..1d80822785 100644
--- a/aws-android-sdk-auth-userpools/pom.xml
+++ b/aws-android-sdk-auth-userpools/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <repositories>
@@ -36,14 +36,14 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-cognitoidentityprovider</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
     
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
       <type>aar</type>
     </dependency>
 
diff --git a/aws-android-sdk-autoscaling/pom.xml b/aws-android-sdk-autoscaling/pom.xml
index d1239d3679..cb21eb281a 100644
--- a/aws-android-sdk-autoscaling/pom.xml
+++ b/aws-android-sdk-autoscaling/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-cloudwatch/pom.xml b/aws-android-sdk-cloudwatch/pom.xml
index 05360a26f0..73d160cf1f 100644
--- a/aws-android-sdk-cloudwatch/pom.xml
+++ b/aws-android-sdk-cloudwatch/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-cognito/pom.xml b/aws-android-sdk-cognito/pom.xml
index 2f47225528..32ad9c8004 100644
--- a/aws-android-sdk-cognito/pom.xml
+++ b/aws-android-sdk-cognito/pom.xml
@@ -6,14 +6,14 @@
   <artifactId>aws-android-sdk-cognito</artifactId>
   <packaging>jar</packaging>
   <name>AWS SDK for Android - Amazon Cognito Sync</name>
-  <version>2.8.0</version>
+  <version>2.8.1</version>
   <description>The AWS Android SDK for Amazon Cognito Sync module holds the client classes that are used for communicating with Amazon Cognito Sync Service</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <licenses>
@@ -29,7 +29,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
     <dependency>
       <groupId>com.google.android</groupId>
diff --git a/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties b/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties
index 8824d9fd18..4431bdb21b 100644
--- a/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties
+++ b/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties
@@ -1,3 +1,3 @@
 fabric-identifier=com.amazonaws.aws-android-sdk-cognito
-fabric-version=2.8.0
+fabric-version=2.8.1
 fabric-build-type=binary
diff --git a/aws-android-sdk-cognitoauth/pom.xml b/aws-android-sdk-cognitoauth/pom.xml
index 4930d4d382..b30451f456 100644
--- a/aws-android-sdk-cognitoauth/pom.xml
+++ b/aws-android-sdk-cognitoauth/pom.xml
@@ -6,14 +6,14 @@
   <artifactId>aws-android-sdk-cognitoauth</artifactId>
   <packaging>aar</packaging>
   <name>AWS SDK for Android - Amazon Cognito Auth</name>
-  <version>2.8.0</version>
+  <version>2.8.1</version>
   <description>The AWS Android SDK with app integration for Amazon Cognito Your User Pools Service</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <repositories>
diff --git a/aws-android-sdk-cognitoidentityprovider/pom.xml b/aws-android-sdk-cognitoidentityprovider/pom.xml
index 58f27106cb..750dd3c88b 100644
--- a/aws-android-sdk-cognitoidentityprovider/pom.xml
+++ b/aws-android-sdk-cognitoidentityprovider/pom.xml
@@ -6,14 +6,14 @@
   <artifactId>aws-android-sdk-cognitoidentityprovider</artifactId>
   <packaging>jar</packaging>
   <name>AWS SDK for Android - Amazon Cognito Identity Provider</name>
-  <version>2.8.0</version>
+  <version>2.8.1</version>
   <description>The AWS Android SDK for Amazon Cognito Identity Provider module holds the client classes that are used for communicating with Amazon Cognito Identity Provider Service</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <licenses>
@@ -29,7 +29,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
diff --git a/aws-android-sdk-comprehend/pom.xml b/aws-android-sdk-comprehend/pom.xml
index 522afd2bca..eef84638c4 100644
--- a/aws-android-sdk-comprehend/pom.xml
+++ b/aws-android-sdk-comprehend/pom.xml
@@ -11,14 +11,14 @@
     <parent>
         <groupId>com.amazonaws</groupId>
         <artifactId>aws-android-sdk-pom</artifactId>
-        <version>2.8.0</version>
+        <version>2.8.1</version>
     </parent>
     <dependencies>
         <dependency>
             <groupId>com.amazonaws</groupId>
             <artifactId>aws-android-sdk-core</artifactId>
             <optional>false</optional>
-            <version>2.8.0</version>
+            <version>2.8.1</version>
         </dependency>
     </dependencies>
     <build>
diff --git a/aws-android-sdk-core/pom.xml b/aws-android-sdk-core/pom.xml
index 7f418f320e..101024a4b2 100644
--- a/aws-android-sdk-core/pom.xml
+++ b/aws-android-sdk-core/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/regions/Regions.java b/aws-android-sdk-core/src/main/java/com/amazonaws/regions/Regions.java
index bb0f6e4bb7..4927e821c9 100644
--- a/aws-android-sdk-core/src/main/java/com/amazonaws/regions/Regions.java
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/regions/Regions.java
@@ -23,6 +23,9 @@
     /** us-gov-west-1. */
     GovCloud("us-gov-west-1"),
 
+    /** us-gov-east-1. */
+    US_GOV_EAST_1("us-gov-east-1"),
+
     /** us-east-1. */
     US_EAST_1("us-east-1"),
 
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java b/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java
index e4684264cb..f4eac03154 100644
--- a/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java
@@ -26,7 +26,7 @@
     private static final int DEFAULT_STRING_LENGTH = 128;
 
     /** SDK version info */
-    private static volatile String version = "2.8.0";
+    private static volatile String version = "2.8.1";
                                                                 // changed build
                                                                 // logic
 
diff --git a/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java b/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java
index da9c214009..8bcf05db96 100644
--- a/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java
+++ b/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java
@@ -24,7 +24,7 @@
 
     @Test
     public void getVersion() {
-        assertEquals("2.8.0", VersionInfoUtils.getVersion());
+        assertEquals("2.8.1", VersionInfoUtils.getVersion());
     }
 
     @Test
diff --git a/aws-android-sdk-ddb-document/pom.xml b/aws-android-sdk-ddb-document/pom.xml
index 1cdfaaa669..629f57fd96 100644
--- a/aws-android-sdk-ddb-document/pom.xml
+++ b/aws-android-sdk-ddb-document/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,13 +20,13 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-ddb</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
     <dependency>
       <groupId>com.google.guava</groupId>
diff --git a/aws-android-sdk-ddb-mapper/pom.xml b/aws-android-sdk-ddb-mapper/pom.xml
index 52fd887006..c377cd12ec 100644
--- a/aws-android-sdk-ddb-mapper/pom.xml
+++ b/aws-android-sdk-ddb-mapper/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,19 +20,19 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-ddb</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-s3</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
         <dependency>
         <groupId>junit</groupId>
diff --git a/aws-android-sdk-ddb/pom.xml b/aws-android-sdk-ddb/pom.xml
index 5bc8b571bc..4d0dce28f5 100644
--- a/aws-android-sdk-ddb/pom.xml
+++ b/aws-android-sdk-ddb/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
         <dependency>
         <groupId>junit</groupId>
diff --git a/aws-android-sdk-ec2/pom.xml b/aws-android-sdk-ec2/pom.xml
index fbc027dc15..e5590e6e3a 100644
--- a/aws-android-sdk-ec2/pom.xml
+++ b/aws-android-sdk-ec2/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-elb/pom.xml b/aws-android-sdk-elb/pom.xml
index 7f45ee07a2..8f121b78ee 100644
--- a/aws-android-sdk-elb/pom.xml
+++ b/aws-android-sdk-elb/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-iot/pom.xml b/aws-android-sdk-iot/pom.xml
index 792a4c4d50..fd4c24a794 100644
--- a/aws-android-sdk-iot/pom.xml
+++ b/aws-android-sdk-iot/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
     <dependency>
       <groupId>org.eclipse.paho</groupId>
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java
index 505507eabd..cd3f66da2f 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java
@@ -160,6 +160,9 @@
     private boolean userDisconnect;
     /** Do we need to resubscribe upon reconnecting? */
     private boolean needResubscribe;
+
+    /** Is this a clean Session with no state being persisted from a prior session */
+    private boolean cleanSession = true;
     /**
      * Indicates whether metrics collection is enabled.
      * When it is enabled, the sdk name and version is sent with the mqtt connect message to server.
@@ -540,6 +543,16 @@ public void setAutoResubscribe(boolean enabled) {
         needResubscribe = enabled;
     }
 
+
+    /**
+     * Set to true if the connection should be established with a clean session, false otherwise.
+     * By default, this is set to true.
+     * @param cleanSession flag to establish a clean session
+     */
+    public void setCleanSession(boolean cleanSession) {
+        this.cleanSession = cleanSession;
+    }
+
     /**
      * Constructs a new AWSIotMqttManager.
      *
@@ -764,8 +777,7 @@ private void mqttConnect(MqttConnectOptions options,
             final AWSIotMqttClientStatusCallback statusCallback) {
         LOGGER.debug("ready to do mqtt connect");
 
-        // AWS IoT does not currently support persistent sessions
-        options.setCleanSession(true);
+        options.setCleanSession(cleanSession);
         options.setKeepAliveInterval(userKeepAlive);
 
         if (isMetricsEnabled()) {
@@ -884,7 +896,7 @@ void reconnectToSession() {
 
             final MqttConnectOptions options = new MqttConnectOptions();
 
-            options.setCleanSession(true);
+            options.setCleanSession(false);
             options.setKeepAliveInterval(userKeepAlive);
 
             if (mqttLWT != null) {
diff --git a/aws-android-sdk-kinesis/pom.xml b/aws-android-sdk-kinesis/pom.xml
index 5775f64569..4091718eb2 100644
--- a/aws-android-sdk-kinesis/pom.xml
+++ b/aws-android-sdk-kinesis/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-kinesisvideo-archivedmedia/pom.xml b/aws-android-sdk-kinesisvideo-archivedmedia/pom.xml
index a5ea305cc4..2a27ad8fe0 100644
--- a/aws-android-sdk-kinesisvideo-archivedmedia/pom.xml
+++ b/aws-android-sdk-kinesisvideo-archivedmedia/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-kinesisvideo/pom.xml b/aws-android-sdk-kinesisvideo/pom.xml
index ffe2daacc3..55107050f5 100644
--- a/aws-android-sdk-kinesisvideo/pom.xml
+++ b/aws-android-sdk-kinesisvideo/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <licenses>
@@ -43,7 +43,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
 
     <dependency>
diff --git a/aws-android-sdk-kms/pom.xml b/aws-android-sdk-kms/pom.xml
index 82a96a2942..31a903a144 100644
--- a/aws-android-sdk-kms/pom.xml
+++ b/aws-android-sdk-kms/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-lambda/pom.xml b/aws-android-sdk-lambda/pom.xml
index 1ef7b35d73..c7d0c58b06 100644
--- a/aws-android-sdk-lambda/pom.xml
+++ b/aws-android-sdk-lambda/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-lex/pom.xml b/aws-android-sdk-lex/pom.xml
index 6fe22a33d1..9692a4f90c 100644
--- a/aws-android-sdk-lex/pom.xml
+++ b/aws-android-sdk-lex/pom.xml
@@ -12,7 +12,7 @@
     <parent>
         <groupId>com.amazonaws</groupId>
         <artifactId>aws-android-sdk-pom</artifactId>
-        <version>2.8.0</version>
+        <version>2.8.1</version>
     </parent>
 
    <!-- Component includes software under each of these licenses; this is not a choice of license -->
@@ -33,7 +33,7 @@
             <groupId>com.amazonaws</groupId>
             <artifactId>aws-android-sdk-core</artifactId>
             <optional>false</optional>
-            <version>2.8.0</version>
+            <version>2.8.1</version>
         </dependency>
         <dependency>
             <groupId>com.google.android</groupId>
diff --git a/aws-android-sdk-logs/pom.xml b/aws-android-sdk-logs/pom.xml
index 8e06c8d126..6ca474f42b 100644
--- a/aws-android-sdk-logs/pom.xml
+++ b/aws-android-sdk-logs/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-machinelearning/pom.xml b/aws-android-sdk-machinelearning/pom.xml
index 804ccce1ba..7a69e6a4b4 100644
--- a/aws-android-sdk-machinelearning/pom.xml
+++ b/aws-android-sdk-machinelearning/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-mobile-client/build.gradle b/aws-android-sdk-mobile-client/build.gradle
index 38fd03440c..06e906f191 100644
--- a/aws-android-sdk-mobile-client/build.gradle
+++ b/aws-android-sdk-mobile-client/build.gradle
@@ -65,9 +65,9 @@ dependencies {
 //    androidTestImplementation(project(':aws-android-sdk-auth-userpools')) {
 //        exclude group: "com.google.android", module: "android"
 //    }
-    api "com.amazonaws:aws-android-sdk-auth-core:2.7.7"
-    api "com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.7.7"
-    androidTestImplementation "com.amazonaws:aws-android-sdk-auth-userpools:2.7.7"
+    api "com.amazonaws:aws-android-sdk-auth-core:2.8.0"
+    api "com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.8.0"
+    androidTestImplementation "com.amazonaws:aws-android-sdk-auth-userpools:2.8.0"
 
     // Optional dependencies
     compileOnly project(':aws-android-sdk-auth-ui')
diff --git a/aws-android-sdk-mobile-client/pom.xml b/aws-android-sdk-mobile-client/pom.xml
index f1ce038a30..eb5e746758 100644
--- a/aws-android-sdk-mobile-client/pom.xml
+++ b/aws-android-sdk-mobile-client/pom.xml
@@ -28,7 +28,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -36,7 +36,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
       <type>aar</type>
     </dependency>
 
@@ -44,14 +44,14 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-cognitoidentityprovider</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
 
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-ui</artifactId>
       <optional>true</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
       <type>aar</type>
     </dependency>
 
@@ -67,7 +67,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-google</artifactId>
       <optional>true</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
       <type>aar</type>
     </dependency>
 
@@ -75,7 +75,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-facebook</artifactId>
       <optional>true</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
       <type>aar</type>
     </dependency>
 
@@ -83,7 +83,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-userpools</artifactId>
       <optional>true</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
       <type>aar</type>
     </dependency>
 
diff --git a/aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java b/aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java
index 3e685c300f..893f9c44b4 100644
--- a/aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java
+++ b/aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.support.test.InstrumentationRegistry;
+import android.util.Log;
 
 import com.amazonaws.auth.AWSCredentials;
 import com.amazonaws.mobile.client.results.SignInResult;
@@ -18,12 +19,15 @@
 import org.junit.BeforeClass;
 import org.junit.Test;
 
+import java.util.ArrayList;
 import java.util.Date;
 import java.util.HashMap;
 import java.util.Map;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicReference;
+import java.util.concurrent.locks.Lock;
+import java.util.concurrent.locks.ReentrantLock;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
@@ -37,6 +41,8 @@
  * Userpool and identity pool were create with Amplify CLI 0.1.23 Default configuration
  */
 public class AWSMobileClientTest extends AWSMobileClientTestBase {
+    private static final String TAG = AWSMobileClientTest.class.getSimpleName();
+
     public static final String EMAIL = "somebody@email.com";
     public static final String BLURRED_EMAIL = "b***@a***.com";
     public static final String USERNAME = "somebody";
@@ -283,7 +289,7 @@ public void testSignOut() throws Exception {
         // Check credentials need to be fetched
         try {
             AWSCredentials credentials = auth.getCredentials();
-            fail("Unauthenticated access is not supported for this identity pool in this test\n" + credentials.getAWSAccessKeyId() + "n" + credentials1.getAWSAccessKeyId());
+            fail("Unauthenticated access is not supported for this identity pool in this test\n" + credentials.getAWSAccessKeyId() + "\n" + credentials1.getAWSAccessKeyId());
         } catch (RuntimeException e) {
             assertTrue(e.getCause() instanceof com.amazonaws.services.cognitoidentity.model.NotAuthorizedException);
         }
@@ -292,7 +298,7 @@ public void testSignOut() throws Exception {
         try {
             assertNull(auth.getTokens());
         } catch (Exception e) {
-            assertEquals("getTokens does not support retrieving tokens for federated sign-in", e.getMessage());
+            assertEquals("getTokens does not support retrieving tokens while signed-out", e.getMessage());
         }
     }
 
@@ -348,4 +354,107 @@ public void onUserStateChanged(UserStateDetails details) {
         assertFalse(triggered.get());
     }
 
+    @Test
+    public void testGetTokensStress() throws Exception {
+        final SignInResult signInResult = auth.signIn(USERNAME, PASSWORD, null);
+        if (signInResult.getSignInState() == SignInState.DONE) {
+            // Done
+        } else {
+            fail("Cannot support MFA in tests");
+        }
+        auth.addUserStateListener(new UserStateListener() {
+            @Override
+            public void onUserStateChanged(UserStateDetails details) {
+                Log.d(TAG, "onUserStateChanged: " + details.getUserState());
+            }
+        });
+
+        ArrayList<Thread> threads = new ArrayList<Thread>(10);
+        final AtomicReference<Boolean> stop = new AtomicReference<Boolean>(false);
+        for (int i = 0; i < 10; ++i) {
+            Thread thread = new Thread(new Runnable() {
+                @Override
+                public void run() {
+                    String lastMessage = "";
+                    while (!stop.get()) {
+                        try {
+                            auth.getTokens();
+                        } catch (Exception e) {
+                            if (!lastMessage.equals(e.getMessage())) {
+                                lastMessage = e.getMessage();
+
+                                if (!lastMessage.equals("No cached session.")
+                                        && !lastMessage.equals("getTokens does not support retrieving tokens while signed-out")) {
+                                    fail("Unexpected error message: " + lastMessage);
+                                }
+                            }
+                        }
+                    }
+                }
+            });
+            thread.start();
+            threads.add(thread);
+        }
+
+        Thread.sleep(2 * 1000);
+        Log.d(TAG, "testStress: signOut");
+        auth.signOut();
+        Thread.sleep(1 * 1000);
+        stop.set(true);
+        for (Thread t : threads) {
+            t.join();
+        }
+    }
+
+    @Test
+    public void testGetCredentialsStress() throws Exception {
+        final SignInResult signInResult = auth.signIn(USERNAME, PASSWORD, null);
+        if (signInResult.getSignInState() == SignInState.DONE) {
+            // Done
+        } else {
+            fail("Cannot support MFA in tests");
+        }
+        auth.addUserStateListener(new UserStateListener() {
+            @Override
+            public void onUserStateChanged(UserStateDetails details) {
+                Log.d(TAG, "onUserStateChanged: " + details.getUserState());
+            }
+        });
+
+        ArrayList<Thread> threads = new ArrayList<Thread>(10);
+        final AtomicReference<Boolean> stop = new AtomicReference<Boolean>(false);
+        for (int i = 0; i < 10; ++i) {
+            Thread thread = new Thread(new Runnable() {
+                @Override
+                public void run() {
+                    String lastMessage = "";
+                    while (!stop.get()) {
+                        try {
+                            auth.getCredentials();
+                        } catch (Exception e) {
+                            if (!lastMessage.equals(e.getMessage())) {
+                                lastMessage = e.getMessage();
+
+                                if (!lastMessage.equals("Failed to get credentials from Cognito Identity")) {
+                                    fail("Unexpected error message: " + lastMessage);
+                                }
+                            }
+                        }
+                    }
+                }
+            });
+            thread.start();
+            threads.add(thread);
+        }
+
+        Thread.sleep(2 * 1000);
+        Log.d(TAG, "testStress: signOut");
+        auth.signOut();
+        Thread.sleep(1 * 1000);
+        stop.set(true);
+        for (Thread t : threads) {
+            t.join();
+        }
+    }
+
 }
diff --git a/aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java b/aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java
index a52db92ec9..3a8c91287c 100644
--- a/aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java
+++ b/aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java
@@ -74,9 +74,6 @@
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.SignUpHandler;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.UpdateAttributesHandler;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.VerificationHandler;
-import com.amazonaws.mobileconnectors.cognitoidentityprovider.tokens.CognitoAccessToken;
-import com.amazonaws.mobileconnectors.cognitoidentityprovider.tokens.CognitoIdToken;
-import com.amazonaws.mobileconnectors.cognitoidentityprovider.tokens.CognitoRefreshToken;
 import com.amazonaws.services.cognitoidentity.model.NotAuthorizedException;
 
 import org.json.JSONObject;
@@ -89,7 +86,9 @@
 import java.util.Map;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.locks.Lock;
+import java.util.concurrent.locks.ReadWriteLock;
 import java.util.concurrent.locks.ReentrantLock;
+import java.util.concurrent.locks.ReentrantReadWriteLock;
 
 /**
  * {@code AWSMobileClient} is a high-level SDK client that
@@ -146,19 +145,15 @@
     /**
      * Federation into this identity pool
      */
-    private CognitoCachingCredentialsProvider cognitoIdentity;
+    CognitoCachingCredentialsProvider cognitoIdentity;
     private CognitoUserPool userpool;
-    private String loginKey;
-    private SharedPreferences sharedPreferences;
-    private Context mContext;
-    private String mIdentityId;
-    private Map<String, String> mLoginsMap;
+    private String userpoolsLoginKey;
+    Context mContext;
+    Map<String, String> mFederatedLoginsMap;
     private UserStateDetails userStateDetails;
     private Lock mWaitForSignInLock;
     private volatile CountDownLatch mSignedOutWaitLatch;
-    private CognitoAccessToken mCognitoAccessToken;
-    private CognitoRefreshToken mCognitoRefreshToken;
-    private CognitoIdToken mCognitoIdToken;
+    CognitoUserSession mCognitoUserSession;
     // Sign-in continuation callbacks given by customer
     private Callback<SignInResult> signInCallback;
     // Internal tracking continuation
@@ -202,6 +197,7 @@
     private volatile CountDownLatch showSignInWaitLatch;
     private Object federateWithCognitoIdentityLockObject;
     private Object initLockObject;
+    AWSMobileClientStore mStore;
 
     /**
      * Constructor invoked by getInstance.
@@ -213,9 +209,9 @@ private AWSMobileClient() {
             throw new AssertionError();
         }
         this.clientMap = new LinkedHashMap<Class<? extends AWSConfigurable>, AWSConfigurable>();
-        loginKey = "";
+        userpoolsLoginKey = "";
         mWaitForSignInLock = new ReentrantLock();
-        mLoginsMap = new HashMap<String, String>();
+        mFederatedLoginsMap = new HashMap<String, String>();
         listeners = new ArrayList<UserStateListener>();
         showSignInLockObject = new Object();
         federateWithCognitoIdentityLockObject = new Object();
@@ -261,8 +257,6 @@ public AWSCredentials getCredentials() {
             }
 
             AWSSessionCredentials credentials = cognitoIdentity.getCredentials();
-            Log.e(TAG, "getCredentials: " + getUserStateDetails(false).getUserState() + " " + credentials.getAWSAccessKeyId());
-            Log.d(TAG, "getCredentials: " + cognitoIdentity.getLogins());
             return credentials;
         } catch (NotAuthorizedException e) {
             Log.w(TAG, "getCredentials: Failed to getCredentials from Cognito Identity", e);
@@ -327,7 +321,7 @@ public String getIdentityId() {
 
         final String cachedIdentityId = cognitoIdentity.getCachedIdentityId();
         if (cachedIdentityId == null) {
-            return mIdentityId;
+            return mStore.get(IDENTITY_ID_KEY);
         }
 
         return cachedIdentityId;
@@ -357,7 +351,7 @@ public void run() {
                             return;
                         }
                         mContext = context.getApplicationContext();
-                        sharedPreferences = mContext.getSharedPreferences(SHARED_PREFERENCES_KEY, Context.MODE_PRIVATE);
+                        mStore = new AWSMobileClientStore(AWSMobileClient.this);
                         awsConfiguration = awsConfig;
 
                         final IdentityManager identityManager = new IdentityManager(mContext, awsConfiguration);
@@ -366,22 +360,31 @@ public void run() {
                         identityManager.addSignInStateChangeListener(new SignInStateChangeListener() {
                             @Override
                             public void onUserSignedIn() {
+                                Log.d(TAG, "onUserSignedIn: Updating user state from drop-in UI");
                                 signInState = SignInState.DONE;
                                 com.amazonaws.mobile.auth.core.IdentityProvider currentIdentityProvider = identityManager.getCurrentIdentityProvider();
                                 String token = currentIdentityProvider.getToken();
                                 String providerKey = currentIdentityProvider.getCognitoLoginKey();
-                                Log.d(TAG, "onUserSignedIn: token: " + token);
-                                sharedPreferences.edit()
-                                        .putString(TOKEN_KEY, token)
-                                        .putString(PROVIDER_KEY, providerKey)
-                                        .commit();
-                                setSignInState(getUserStateDetails(false));
-                                showSignInWaitLatch.countDown();
+                                federatedSignInWithoutAssigningState(providerKey, token, new Callback<UserStateDetails>() {
+                                    @Override
+                                    public void onResult(UserStateDetails result) {
+                                        setUserState(getUserStateDetails(false));
+                                        showSignInWaitLatch.countDown();
+                                    }
+
+                                    @Override
+                                    public void onError(Exception e) {
+                                        Log.w(TAG, "onError: User sign-in had errors from drop-in UI", e);
+                                        setUserState(getUserStateDetails(false));
+                                        showSignInWaitLatch.countDown();
+                                    }
+                                });
                             }
 
                             @Override
                             public void onUserSignedOut() {
-                                setSignInState(getUserStateDetails(false));
+                                Log.d(TAG, "onUserSignedOut: Updating user state from drop-in UI");
+                                setUserState(getUserStateDetails(false));
                                 showSignInWaitLatch.countDown();
                             }
                         });
@@ -398,7 +401,7 @@ public void onUserSignedOut() {
                         final JSONObject userPoolJSON = awsConfiguration.optJsonObject("CognitoUserPool");
                         if (userPoolJSON != null) {
                             try {
-                                loginKey = String.format("cognito-idp.%s.amazonaws.com/%s", userPoolJSON.getString("Region"), userPoolJSON.getString("PoolId"));
+                                userpoolsLoginKey = String.format("cognito-idp.%s.amazonaws.com/%s", userPoolJSON.getString("Region"), userPoolJSON.getString("PoolId"));
                                 userpool = new CognitoUserPool(mContext, awsConfiguration);
                             } catch (Exception e) {
                                 throw new RuntimeException("Failed to initialize Cognito Userpool; please check your awsconfiguration.json", e);
@@ -412,7 +415,7 @@ public void onUserSignedOut() {
 
                         final UserStateDetails userStateDetails = getUserStateDetails(true);
                         callback.onResult(userStateDetails);
-                        setSignInState(userStateDetails);
+                        setUserState(userStateDetails);
                     }
                 } catch (RuntimeException e) {
                     callback.onError(e);
@@ -432,18 +435,20 @@ public void releaseSignInWait() {
         }
     }
 
-    protected void setSignInState(final UserStateDetails details) {
+    protected void setUserState(final UserStateDetails details) {
         final boolean hasChanged = !details.equals(this.userStateDetails);
         this.userStateDetails = details;
 
         if (hasChanged) {
-            for (final UserStateListener listener : listeners) {
-                new Thread(new Runnable() {
-                    @Override
-                    public void run() {
-                        listener.onUserStateChanged(details);
-                    }
-                }).start();
+            synchronized (listeners) {
+                for (final UserStateListener listener : listeners) {
+                    new Thread(new Runnable() {
+                        @Override
+                        public void run() {
+                            listener.onUserStateChanged(details);
+                        }
+                    }).start();
+                }
             }
         }
     }
@@ -481,24 +486,34 @@ protected boolean isNetworkAvailable(final Context context) {
         return false;
     }
 
+    boolean isUserpoolsSignedIn() {
+        return userpoolsLoginKey.equals(mStore.get(PROVIDER_KEY));
+    }
+
     /**
      * Returns the signed-in user's username obtained from the access token.
      * @return signed-in user's username
      */
     public String getUsername() {
         try {
-            return mCognitoAccessToken.getUsername();
+            return mCognitoUserSession.getUsername();
         } catch (Exception e) {
             return null;
         }
     }
 
+    public UserStateDetails currentUserState() {
+        return getUserStateDetails(false);
+    }
+
     /**
      * Adds a listener to be notified of state changes
      * @param listener
      */
     public void addUserStateListener(final UserStateListener listener) {
-        this.listeners.add(listener);
+        synchronized (listeners) {
+            listeners.add(listener);
+        }
     }
 
     /**
@@ -508,16 +523,18 @@ public void addUserStateListener(final UserStateListener listener) {
      * @return true if removed
      */
     public boolean removeUserStateListener(final UserStateListener listener) {
-        int index = listeners.indexOf(listener);
-        if (index != -1) {
-            this.listeners.remove(index);
-            return true;
+        synchronized (listeners) {
+            int index = listeners.indexOf(listener);
+            if (index != -1) {
+                this.listeners.remove(index);
+                return true;
+            }
+            return false;
         }
-        return false;
     }
 
     String getLoginKey() {
-        return loginKey;
+        return userpoolsLoginKey;
     }
 
     public boolean isSignedIn() {
@@ -541,7 +558,7 @@ protected boolean waitForSignIn() {
             mSignedOutWaitLatch = new CountDownLatch(1);
             final UserStateDetails userStateDetails = getUserStateDetails(false);
             Log.d(TAG, "waitForSignIn: userState:" + userStateDetails.getUserState());
-            setSignInState(userStateDetails);
+            setUserState(userStateDetails);
             switch (userStateDetails.getUserState()) {
                 case SIGNED_IN:
                     return true;
@@ -562,14 +579,11 @@ protected boolean waitForSignIn() {
     }
 
     Map<String, String> getSignInDetailsMap() {
-        final HashMap<String, String> details = new HashMap<String, String>();
-        details.put(PROVIDER_KEY, sharedPreferences.getString(PROVIDER_KEY, null));
-        details.put(TOKEN_KEY, sharedPreferences.getString(TOKEN_KEY, null));
-        return details;
+        return mStore.get(PROVIDER_KEY, TOKEN_KEY);
     }
 
     String _getCachedIdentityId() {
-        return sharedPreferences.getString(IDENTITY_ID_KEY, null);
+        return mStore.get(IDENTITY_ID_KEY);
     }
 
     /**
@@ -584,6 +598,7 @@ protected UserStateDetails getUserStateDetails(final boolean offlineCheck) {
         final String providerKey = details.get(PROVIDER_KEY);
         final String token = details.get(TOKEN_KEY);
         final String identityId = _getCachedIdentityId();
+        Log.d(TAG, "Inspecting user state details");
 
         final boolean hasUsefulToken = providerKey != null && token != null;
 
@@ -601,7 +616,7 @@ protected UserStateDetails getUserStateDetails(final boolean offlineCheck) {
         }
 
         // Online state detection
-        if (hasUsefulToken && !loginKey.equals(providerKey)) {
+        if (hasUsefulToken && !userpoolsLoginKey.equals(providerKey)) {
             // TODO enhancement: check if token is expired
             try {
                 // If token has already been federated
@@ -628,7 +643,7 @@ protected UserStateDetails getUserStateDetails(final boolean offlineCheck) {
             try {
                 tokens = getTokens(false);
                 idToken = tokens.getIdToken().getTokenString();
-                details.put("tokens", idToken);
+                details.put(TOKEN_KEY, idToken);
                 // If token has already been federated
                 if (hasFederatedToken(providerKey, idToken)) {
                     try {
@@ -669,7 +684,7 @@ private boolean hasFederatedToken(final String providerKey,
         if (token == null || token.isEmpty()) {
             return false;
         }
-        boolean hasFederatedToken = token.equals(mLoginsMap.get(providerKey));
+        boolean hasFederatedToken = token.equals(mFederatedLoginsMap.get(providerKey));
         Log.d(TAG, "hasFederatedToken: " + hasFederatedToken + " provider: " + providerKey);
         return hasFederatedToken;
     }
@@ -708,10 +723,7 @@ public void run() {
                         @Override
                         public void onSuccess(CognitoUserSession userSession, CognitoDevice newDevice) {
                             try {
-                                mCognitoAccessToken = userSession.getAccessToken();
-                                mCognitoRefreshToken = userSession.getRefreshToken();
-                                mCognitoIdToken = userSession.getIdToken();
-
+                                mCognitoUserSession = userSession;
                                 signInState = SignInState.DONE;
                             } catch (Exception e) {
                                 signInCallback.onError(e);
@@ -719,7 +731,7 @@ public void onSuccess(CognitoUserSession userSession, CognitoDevice newDevice) {
                             }
 
                             try {
-                                federatedSignInWithoutAssigningState(loginKey, mCognitoIdToken.getJWTToken(), new Callback<UserStateDetails>() {
+                                federatedSignInWithoutAssigningState(userpoolsLoginKey, mCognitoUserSession.getIdToken().getJWTToken(), new Callback<UserStateDetails>() {
                                     @Override
                                     public void onResult(UserStateDetails result) {
                                         // Ignore because the result does not matter until getAWSCredentials is called
@@ -730,13 +742,12 @@ public void onError(Exception e) {
                                         // Ignore because the result does not matter until getAWSCredentials is called
                                     }
                                 });
-                                if (mWaitForSignInLock != null) {
-                                    releaseSignInWait();
-                                }
+
+                                releaseSignInWait();
                             } catch (Exception e) {
                                 Log.w(TAG, "Failed to federate tokens during sign-in", e);
                             } finally {
-                                setSignInState(new UserStateDetails(UserState.SIGNED_IN, getSignInDetailsMap()));
+                                setUserState(new UserStateDetails(UserState.SIGNED_IN, getSignInDetailsMap()));
                             }
 
                             signInCallback.onResult(SignInResult.DONE);
@@ -793,18 +804,19 @@ public void onFailure(Exception exception) {
     }
 
     public void signOut() {
-        mCognitoAccessToken = null;
-        mCognitoIdToken = null;
-        mCognitoRefreshToken = null;
-        mIdentityId = null;
+        mCognitoUserSession = null;
         if (userpool != null) {
             userpool.getCurrentUser().signOut();
         }
         if (cognitoIdentity != null) {
             cognitoIdentity.clear();
         }
-        sharedPreferences.edit().clear().commit();
-        setSignInState(getUserStateDetails(false));
+        if (IdentityManager.getDefaultIdentityManager() != null) {
+            IdentityManager.getDefaultIdentityManager().signOut();
+        }
+        mStore.clear();
+        setUserState(getUserStateDetails(false));
+        releaseSignInWait();
     }
 
     /**
@@ -844,7 +856,7 @@ protected void federatedSignInWithoutAssigningState(final String providerKey, fi
 
     protected void federatedSignInWithoutAssigningState(final String providerKey,
                                                         final String token,
-                                                        final Callback<UserStateDetails> callback) throws Exception {
+                                                        final Callback<UserStateDetails> callback) {
         InternalCallback<UserStateDetails> internalCallback = new InternalCallback<UserStateDetails>(callback);
         internalCallback.async(_federatedSignIn(providerKey, token, internalCallback, false));
     }
@@ -857,11 +869,11 @@ private Runnable _federatedSignIn(final String providerKey,
         final Map<String, String> loginsMap = new HashMap<String, String>();
         loginsMap.put(providerKey, token);
 
-        Log.d(TAG, String.format("_federatedSignIn: putting token %s for provider %s", token, providerKey));
-        sharedPreferences.edit()
-                .putString(PROVIDER_KEY, providerKey)
-                .putString(TOKEN_KEY, token)
-                .commit();
+        Log.d(TAG, String.format("_federatedSignIn: Putting provider and token in store"));
+        HashMap<String, String> details = new HashMap<String, String>();
+        details.put(PROVIDER_KEY, providerKey);
+        details.put(TOKEN_KEY, token);
+        mStore.set(details);
 
         return new Runnable() {
             @Override
@@ -873,7 +885,7 @@ public void run() {
                         return;
                     }
 
-                    if (!token.equals(mLoginsMap.get(providerKey))) {
+                    if (!token.equals(mFederatedLoginsMap.get(providerKey))) {
                         cognitoIdentity.clear();
                         cognitoIdentity.setLogins(loginsMap);
                     }
@@ -900,7 +912,7 @@ public void run() {
 
             private void end(final UserStateDetails details) {
                 if (assignState) {
-                    setSignInState(details);
+                    setUserState(details);
                 }
             }
         };
@@ -909,16 +921,15 @@ private void end(final UserStateDetails details) {
     protected void federateWithCognitoIdentity(final String providerKey,
                                                final String token) {
         synchronized (federateWithCognitoIdentityLockObject) {
-            HashMap<String, String> logins = new HashMap<String, String>();
-            logins.put(providerKey, token);
-            cognitoIdentity.setLogins(logins);
-            cognitoIdentity.refresh();
-            // Ensure identityId and credentials can be retrieved.
-            mIdentityId = cognitoIdentity.getIdentityId();
-            sharedPreferences.edit()
-                    .putString(IDENTITY_ID_KEY, mIdentityId)
-                    .commit();
-            mLoginsMap = cognitoIdentity.getLogins();
+            if (!hasFederatedToken(providerKey, token)) {
+                HashMap<String, String> logins = new HashMap<String, String>();
+                logins.put(providerKey, token);
+                cognitoIdentity.setLogins(logins);
+                cognitoIdentity.refresh();
+                // Ensure identityId and credentials can be retrieved.
+                mStore.set(IDENTITY_ID_KEY, cognitoIdentity.getIdentityId());
+                mFederatedLoginsMap = cognitoIdentity.getLogins();
+            }
         }
     }
 
@@ -956,14 +967,21 @@ private Runnable _getTokens(final Callback<Tokens> callback, final boolean waitF
         return new Runnable() {
             @Override
             public void run() {
-                Map<String, String> signInDetailsMap = getSignInDetailsMap();
-                if (!loginKey.equals(signInDetailsMap.get(PROVIDER_KEY))) {
+                String providerKey = getSignInDetailsMap().get(PROVIDER_KEY);
+                if (providerKey == null) {
+                } else if (!userpoolsLoginKey.equals(providerKey)) {
                     callback.onError(new Exception("getTokens does not support retrieving tokens for federated sign-in"));
                     return;
                 }
 
                 if (waitForSignIn) {
-                    waitForSignIn();
+                    if (!waitForSignIn()) {
+                        callback.onError(new Exception("getTokens does not support retrieving tokens while signed-out"));
+                        return;
+                    }
+                }
+                if (!isUserpoolsSignedIn()) {
+                    callback.onError(new Exception("You must be signed-in with Cognito Userpools to be able to use getTokens"));
                 }
 
                 try {
@@ -1532,6 +1550,11 @@ private Runnable _updateUserAttributes(final Map<String, String> userAttributes,
         return new Runnable() {
             @Override
             public void run() {
+                if (!waitForSignIn()) {
+                    callback.onError(new Exception("Operation requires a signed-in state"));
+                    return;
+                }
+
                 final CognitoUserAttributes cognitoUserAttributes = new CognitoUserAttributes();
                 if (userAttributes != null) {
                     for (final String key : userAttributes.keySet()) {
@@ -1597,6 +1620,11 @@ private Runnable _verifyUserAttribute(final String attributeName,
             @Override
             public void run() {
                 try {
+                    if (!waitForSignIn()) {
+                        callback.onError(new Exception("Operation requires a signed-in state"));
+                        return;
+                    }
+
                     userpool.getCurrentUser().getAttributeVerificationCodeInBackground(
                             attributeName,
                             new VerificationHandler() {
@@ -1870,6 +1898,27 @@ public void onFailure(Exception exception) {
 //        };
 //    }
 
+    /**
+     * Shows a sign-in UI for user's to sign-in, sign-up, forgot password, create account
+     * @param callingActivity The activity that the sign-in screen will be shown on top of.
+     * @param callback callback with UserStateDetails at end of operation
+     */
+    public void showSignIn(final Activity callingActivity,
+                           final Callback<UserStateDetails> callback) { //SignInUIOptions
+
+        InternalCallback internalCallback = new InternalCallback(callback);
+        internalCallback.async(_showSignIn(callingActivity, SignInUIOptions.builder().build(), internalCallback));
+    }
+
+    /**
+     * Shows a sign-in UI for user's to sign-in, sign-up, forgot password, create account
+     * @param callingActivity The activity that the sign-in screen will be shown on top of.
+     */
+    public UserStateDetails showSignIn(final Activity callingActivity) throws Exception {
+
+        InternalCallback<UserStateDetails> internalCallback = new InternalCallback<UserStateDetails>();
+        return internalCallback.await(_showSignIn(callingActivity, SignInUIOptions.builder().build(), internalCallback));
+    }
     /**
      * Shows a sign-in UI for user's to sign-in, sign-up, forgot password, create account
      * @param callingActivity The activity that the sign-in screen will be shown on top of.
@@ -1890,7 +1939,7 @@ public void showSignIn(final Activity callingActivity,
      * @param signInUIOptions Override any default configuration with your preferences.
      */
     public UserStateDetails showSignIn(final Activity callingActivity,
-                           final SignInUIOptions signInUIOptions) throws Exception {
+                                       final SignInUIOptions signInUIOptions) throws Exception {
 
         InternalCallback<UserStateDetails> internalCallback = new InternalCallback<UserStateDetails>();
         return internalCallback.await(_showSignIn(callingActivity, signInUIOptions, internalCallback));
@@ -1910,11 +1959,16 @@ public void run() {
                     }
 
                     final AuthUIConfiguration.Builder authUIConfigBuilder = new AuthUIConfiguration.Builder()
-                            .logoResId(signInUIOptions.getLogo())
-                            .backgroundColor(signInUIOptions.getBackgroundColor())
                             .canCancel(signInUIOptions.canCancel())
                             .isBackgroundColorFullScreen(false);
 
+                    if (signInUIOptions.getLogo() != null) {
+                        authUIConfigBuilder.logoResId(signInUIOptions.getLogo());
+                    }
+                    if (signInUIOptions.getBackgroundColor() != null) {
+                        authUIConfigBuilder.backgroundColor(signInUIOptions.getBackgroundColor());
+                    }
+
                     final IdentityManager identityManager = IdentityManager.getDefaultIdentityManager();
 
                     if (isConfigurationKeyPresent(USER_POOLS)) {
@@ -2415,3 +2469,62 @@ public SignInProviderConfig(final Class<? extends SignInProvider> signInProvider
         }
     }
 }
+
+class AWSMobileClientStore {
+    private final SharedPreferences mSharedPreferences;
+    ReadWriteLock mReadWriteLock = new ReentrantReadWriteLock();
+
+    AWSMobileClientStore(AWSMobileClient client) {
+        mSharedPreferences = client.mContext.getSharedPreferences(AWSMobileClient.SHARED_PREFERENCES_KEY, Context.MODE_PRIVATE);
+    }
+
+    Map<String, String> get(final String... keys) {
+        try {
+            mReadWriteLock.readLock().lock();
+            HashMap<String, String> attributes = new HashMap<String, String>();
+            for (String key : keys) {
+                attributes.put(key, mSharedPreferences.getString(key, null));
+            }
+            return attributes;
+        } finally {
+            mReadWriteLock.readLock().unlock();
+        }
+    }
+
+    String get(final String key) {
+        try {
+            mReadWriteLock.readLock().lock();
+            return mSharedPreferences.getString(key, null);
+        } finally {
+            mReadWriteLock.readLock().unlock();
+        }
+    }
+
+    void set(final Map<String, String> attributes) {
+        try {
+            mReadWriteLock.writeLock().lock();
+            SharedPreferences.Editor editor = mSharedPreferences.edit();
+            for (String key : attributes.keySet()) {
+                editor.putString(key, attributes.get(key));
+            }
+            editor.commit();
+        } finally {
+            mReadWriteLock.writeLock().unlock();
+        }
+    }
+
+    void set(final String key, final String value) {
+        try {
+            mReadWriteLock.writeLock().lock();
+            SharedPreferences.Editor editor = mSharedPreferences.edit();
+            editor.putString(key, value);
+            editor.commit();
+        } finally {
+            mReadWriteLock.writeLock().unlock();
+        }
+    }
+
+    void clear() {
+        mSharedPreferences.edit().clear().commit();
+    }
+}
\ No newline at end of file
diff --git a/aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/SignInUIOptions.java b/aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/SignInUIOptions.java
index e1b6f47d29..5bee7b4a69 100644
--- a/aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/SignInUIOptions.java
+++ b/aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/SignInUIOptions.java
@@ -40,8 +40,7 @@ public static Builder builder() {
         private boolean canCancel;
         private Class<? extends Activity> nextActivityClass;
 
-        public Builder() {
-        }
+        public Builder() { }
 
         public Builder logo(final Integer logoResourceId) {
             logo = logoResourceId;
diff --git a/aws-android-sdk-mobileanalytics/pom.xml b/aws-android-sdk-mobileanalytics/pom.xml
index 003f0133dc..b2bf35b991 100644
--- a/aws-android-sdk-mobileanalytics/pom.xml
+++ b/aws-android-sdk-mobileanalytics/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-pinpoint/pom.xml b/aws-android-sdk-pinpoint/pom.xml
index e33e688a7f..6b13266489 100644
--- a/aws-android-sdk-pinpoint/pom.xml
+++ b/aws-android-sdk-pinpoint/pom.xml
@@ -12,7 +12,7 @@
     <parent>
         <groupId>com.amazonaws</groupId>
         <artifactId>aws-android-sdk-pom</artifactId>
-        <version>2.8.0</version>
+        <version>2.8.1</version>
     </parent>
 
     <dependencies>
@@ -20,7 +20,7 @@
             <groupId>com.amazonaws</groupId>
             <artifactId>aws-android-sdk-core</artifactId>
             <optional>false</optional>
-            <version>2.8.0</version>
+            <version>2.8.1</version>
         </dependency>
         <dependency>
             <groupId>junit</groupId>
diff --git a/aws-android-sdk-polly/pom.xml b/aws-android-sdk-polly/pom.xml
index 36f6d631ba..70727c1448 100644
--- a/aws-android-sdk-polly/pom.xml
+++ b/aws-android-sdk-polly/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-rekognition/pom.xml b/aws-android-sdk-rekognition/pom.xml
index 20af395e8b..81846272ec 100644
--- a/aws-android-sdk-rekognition/pom.xml
+++ b/aws-android-sdk-rekognition/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-s3/pom.xml b/aws-android-sdk-s3/pom.xml
index 7165394dfb..c53911a43e 100644
--- a/aws-android-sdk-s3/pom.xml
+++ b/aws-android-sdk-s3/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,13 +20,13 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-kms</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/model/Region.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/model/Region.java
index 0df6f80e29..30be1085bb 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/model/Region.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/model/Region.java
@@ -102,6 +102,12 @@
      */
     US_GovCloud("s3-us-gov-west-1"),
 
+    /**
+     * The US GovCloud Region. This region uses Amazon S3 servers located in the
+     * Eastern region of the United States.
+     */
+    US_Gov_East_1("s3-us-gov-east-1"),
+
     /**
      * The EU (Ireland) Amazon S3 Region. This region uses Amazon S3 servers
      * located in Ireland.
diff --git a/aws-android-sdk-sdb/pom.xml b/aws-android-sdk-sdb/pom.xml
index 1934a948c8..7ea2939f0c 100644
--- a/aws-android-sdk-sdb/pom.xml
+++ b/aws-android-sdk-sdb/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
         <dependency>
         <groupId>junit</groupId>
diff --git a/aws-android-sdk-ses/pom.xml b/aws-android-sdk-ses/pom.xml
index 368dbb6b64..8ca4fcf3b7 100644
--- a/aws-android-sdk-ses/pom.xml
+++ b/aws-android-sdk-ses/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-sns/pom.xml b/aws-android-sdk-sns/pom.xml
index 42879ef054..ce6043a9ab 100644
--- a/aws-android-sdk-sns/pom.xml
+++ b/aws-android-sdk-sns/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,13 +20,13 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-sqs</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-sqs/pom.xml b/aws-android-sdk-sqs/pom.xml
index f144c37f05..eb92009418 100644
--- a/aws-android-sdk-sqs/pom.xml
+++ b/aws-android-sdk-sqs/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-transcribe/pom.xml b/aws-android-sdk-transcribe/pom.xml
index dc3cb29cc1..1f25c91b9d 100644
--- a/aws-android-sdk-transcribe/pom.xml
+++ b/aws-android-sdk-transcribe/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-translate/pom.xml b/aws-android-sdk-translate/pom.xml
index 0327ca4aa0..036310cba3 100644
--- a/aws-android-sdk-translate/pom.xml
+++ b/aws-android-sdk-translate/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.8.0</version>
+    <version>2.8.1</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.8.0</version>
+      <version>2.8.1</version>
     </dependency>
   </dependencies>
 
diff --git a/pom.xml b/pom.xml
index 5fe5b1263d..c141a77ca4 100644
--- a/pom.xml
+++ b/pom.xml
@@ -6,7 +6,7 @@
   <artifactId>aws-android-sdk-pom</artifactId>
   <packaging>pom</packaging>
   <name>AWS SDK for Android</name>
-  <version>2.8.0</version>
+  <version>2.8.1</version>
   <description>The Amazon Web Services SDK for Android provides Android APIs for building software on AWS’ cost-effective, scalable, and reliable infrastructure products. The AWS SDK for Android allows developers to code against APIs for all of Amazon's infrastructure web services (Amazon S3, Amazon EC2, Amazon SQS, Auto Scaling, etc).</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
