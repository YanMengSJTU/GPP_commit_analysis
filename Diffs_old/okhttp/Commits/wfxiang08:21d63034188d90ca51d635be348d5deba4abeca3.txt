diff --git a/okhttp-android-support/src/test/java/okhttp3/android/HttpResponseCacheTest.java b/okhttp-android-support/src/test/java/okhttp3/android/HttpResponseCacheTest.java
index eec8682202..dcb1c01815 100644
--- a/okhttp-android-support/src/test/java/okhttp3/android/HttpResponseCacheTest.java
+++ b/okhttp-android-support/src/test/java/okhttp3/android/HttpResponseCacheTest.java
@@ -56,7 +56,7 @@
 
   @Before public void setUp() throws Exception {
     cacheDir = cacheRule.getRoot();
-    urlFactory = new OkUrlFactory(new OkHttpClient.Builder().build());
+    urlFactory = new OkUrlFactory(new OkHttpClient());
   }
 
   @After public void tearDown() throws Exception {
diff --git a/okhttp-android-support/src/test/java/okhttp3/internal/huc/CacheAdapterTest.java b/okhttp-android-support/src/test/java/okhttp3/internal/huc/CacheAdapterTest.java
index b556330ba0..ac50cef322 100644
--- a/okhttp-android-support/src/test/java/okhttp3/internal/huc/CacheAdapterTest.java
+++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/CacheAdapterTest.java
@@ -67,7 +67,7 @@
 
   @Before public void setUp() throws Exception {
     server = new MockWebServer();
-    client = new OkHttpClient.Builder().build();
+    client = new OkHttpClient();
   }
 
   @After public void tearDown() throws Exception {
diff --git a/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java
index 9f0928c627..0048212f82 100644
--- a/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java
+++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java
@@ -105,7 +105,7 @@
     server.setProtocolNegotiationEnabled(false);
 
     cache = AndroidShimResponseCache.create(cacheRule.getRoot(), 10 * 1024 * 1024);
-    urlFactory = new OkUrlFactory(new OkHttpClient.Builder().build());
+    urlFactory = new OkUrlFactory(new OkHttpClient());
     AndroidInternal.setResponseCache(urlFactory, cache);
 
     cookieManager = new CookieManager();
diff --git a/okhttp-apache/src/main/java/okhttp3/apache/OkApacheClient.java b/okhttp-apache/src/main/java/okhttp3/apache/OkApacheClient.java
index db7a140246..a1af89f867 100644
--- a/okhttp-apache/src/main/java/okhttp3/apache/OkApacheClient.java
+++ b/okhttp-apache/src/main/java/okhttp3/apache/OkApacheClient.java
@@ -138,7 +138,7 @@ private static HttpResponse transformResponse(Response response) throws IOExcept
   private OkHttpClient client;
 
   public OkApacheClient() {
-    this(new OkHttpClient.Builder().build());
+    this(new OkHttpClient());
   }
 
   public OkApacheClient(OkHttpClient client) {
diff --git a/okhttp-urlconnection/src/test/java/okhttp3/UrlConnectionCacheTest.java b/okhttp-urlconnection/src/test/java/okhttp3/UrlConnectionCacheTest.java
index 768d5a2be7..3959eaa9d0 100644
--- a/okhttp-urlconnection/src/test/java/okhttp3/UrlConnectionCacheTest.java
+++ b/okhttp-urlconnection/src/test/java/okhttp3/UrlConnectionCacheTest.java
@@ -81,7 +81,7 @@
   @Rule public InMemoryFileSystem fileSystem = new InMemoryFileSystem();
 
   private final SSLContext sslContext = SslContextBuilder.localhost();
-  private OkUrlFactory urlFactory = new OkUrlFactory(new OkHttpClient.Builder().build());
+  private OkUrlFactory urlFactory = new OkUrlFactory(new OkHttpClient());
   private Cache cache;
   private final CookieManager cookieManager = new CookieManager();
 
diff --git a/okhttp-ws-tests/src/main/java/okhttp3/ws/AutobahnTester.java b/okhttp-ws-tests/src/main/java/okhttp3/ws/AutobahnTester.java
index c5a4746ab2..3d809b3e24 100644
--- a/okhttp-ws-tests/src/main/java/okhttp3/ws/AutobahnTester.java
+++ b/okhttp-ws-tests/src/main/java/okhttp3/ws/AutobahnTester.java
@@ -45,7 +45,7 @@ public static void main(String... args) throws IOException {
     new AutobahnTester().run();
   }
 
-  final OkHttpClient client = new OkHttpClient.Builder().build();
+  final OkHttpClient client = new OkHttpClient();
 
   private WebSocketCall newWebSocket(String path) {
     Request request = new Request.Builder().url(HOST + path).build();
diff --git a/okhttp-ws-tests/src/test/java/okhttp3/ws/WebSocketCallTest.java b/okhttp-ws-tests/src/test/java/okhttp3/ws/WebSocketCallTest.java
index 87ae0d7495..c6d77c4598 100644
--- a/okhttp-ws-tests/src/test/java/okhttp3/ws/WebSocketCallTest.java
+++ b/okhttp-ws-tests/src/test/java/okhttp3/ws/WebSocketCallTest.java
@@ -44,7 +44,7 @@
   private final SSLContext sslContext = SslContextBuilder.localhost();
   private final WebSocketRecorder listener = new WebSocketRecorder();
   private final Random random = new Random(0);
-  private OkHttpClient client = new OkHttpClient.Builder().build();
+  private OkHttpClient client = new OkHttpClient();
 
   @After public void tearDown() {
     listener.assertExhausted();
diff --git a/okhttp/src/main/java/okhttp3/OkHttpClient.java b/okhttp/src/main/java/okhttp3/OkHttpClient.java
index e9ddcff0dc..121839f3e6 100644
--- a/okhttp/src/main/java/okhttp3/OkHttpClient.java
+++ b/okhttp/src/main/java/okhttp3/OkHttpClient.java
@@ -110,30 +110,34 @@ public void apply(ConnectionSpec tlsConfiguration, SSLSocket sslSocket, boolean
     };
   }
 
-  private final Dispatcher dispatcher;
-  private final Proxy proxy;
-  private final List<Protocol> protocols;
-  private final List<ConnectionSpec> connectionSpecs;
-  private final List<Interceptor> interceptors;
-  private final List<Interceptor> networkInterceptors;
-  private final ProxySelector proxySelector;
-  private final CookieJar cookieJar;
-  private final Cache cache;
-  private final InternalCache internalCache;
-  private final SocketFactory socketFactory;
-  private final SSLSocketFactory sslSocketFactory;
-  private final HostnameVerifier hostnameVerifier;
-  private final CertificatePinner certificatePinner;
-  private final Authenticator proxyAuthenticator;
-  private final Authenticator authenticator;
-  private final ConnectionPool connectionPool;
-  private final Dns dns;
-  private final boolean followSslRedirects;
-  private final boolean followRedirects;
-  private final boolean retryOnConnectionFailure;
-  private final int connectTimeout;
-  private final int readTimeout;
-  private final int writeTimeout;
+  final Dispatcher dispatcher;
+  final Proxy proxy;
+  final List<Protocol> protocols;
+  final List<ConnectionSpec> connectionSpecs;
+  final List<Interceptor> interceptors;
+  final List<Interceptor> networkInterceptors;
+  final ProxySelector proxySelector;
+  final CookieJar cookieJar;
+  final Cache cache;
+  final InternalCache internalCache;
+  final SocketFactory socketFactory;
+  final SSLSocketFactory sslSocketFactory;
+  final HostnameVerifier hostnameVerifier;
+  final CertificatePinner certificatePinner;
+  final Authenticator proxyAuthenticator;
+  final Authenticator authenticator;
+  final ConnectionPool connectionPool;
+  final Dns dns;
+  final boolean followSslRedirects;
+  final boolean followRedirects;
+  final boolean retryOnConnectionFailure;
+  final int connectTimeout;
+  final int readTimeout;
+  final int writeTimeout;
+
+  public OkHttpClient() {
+    this(new Builder());
+  }
 
   private OkHttpClient(Builder builder) {
     this.dispatcher = builder.dispatcher;
@@ -302,30 +306,30 @@ public Builder newBuilder() {
   }
 
   public static final class Builder {
-    private Dispatcher dispatcher;
-    private Proxy proxy;
-    private List<Protocol> protocols;
-    private List<ConnectionSpec> connectionSpecs;
-    private final List<Interceptor> interceptors = new ArrayList<>();
-    private final List<Interceptor> networkInterceptors = new ArrayList<>();
-    private ProxySelector proxySelector;
-    private CookieJar cookieJar;
-    private Cache cache;
-    private InternalCache internalCache;
-    private SocketFactory socketFactory;
-    private SSLSocketFactory sslSocketFactory;
-    private HostnameVerifier hostnameVerifier;
-    private CertificatePinner certificatePinner;
-    private Authenticator proxyAuthenticator;
-    private Authenticator authenticator;
-    private ConnectionPool connectionPool;
-    private Dns dns;
-    private boolean followSslRedirects;
-    private boolean followRedirects;
-    private boolean retryOnConnectionFailure;
-    private int connectTimeout;
-    private int readTimeout;
-    private int writeTimeout;
+    Dispatcher dispatcher;
+    Proxy proxy;
+    List<Protocol> protocols;
+    List<ConnectionSpec> connectionSpecs;
+    final List<Interceptor> interceptors = new ArrayList<>();
+    final List<Interceptor> networkInterceptors = new ArrayList<>();
+    ProxySelector proxySelector;
+    CookieJar cookieJar;
+    Cache cache;
+    InternalCache internalCache;
+    SocketFactory socketFactory;
+    SSLSocketFactory sslSocketFactory;
+    HostnameVerifier hostnameVerifier;
+    CertificatePinner certificatePinner;
+    Authenticator proxyAuthenticator;
+    Authenticator authenticator;
+    ConnectionPool connectionPool;
+    Dns dns;
+    boolean followSslRedirects;
+    boolean followRedirects;
+    boolean retryOnConnectionFailure;
+    int connectTimeout;
+    int readTimeout;
+    int writeTimeout;
 
     public Builder() {
       dispatcher = new Dispatcher();
diff --git a/okhttp/src/main/java/okhttp3/internal/Internal.java b/okhttp/src/main/java/okhttp3/internal/Internal.java
index 394e18843f..54252084fb 100644
--- a/okhttp/src/main/java/okhttp3/internal/Internal.java
+++ b/okhttp/src/main/java/okhttp3/internal/Internal.java
@@ -39,7 +39,7 @@
 
   public static void initializeInstanceForTests() {
     // Needed in tests to ensure that the instance is actually pointing to something.
-    new OkHttpClient.Builder().build();
+    new OkHttpClient();
   }
 
   public static Internal instance;
diff --git a/samples/guide/src/main/java/okhttp3/guide/GetExample.java b/samples/guide/src/main/java/okhttp3/guide/GetExample.java
index 70a2eb86a4..19ef73bf2e 100644
--- a/samples/guide/src/main/java/okhttp3/guide/GetExample.java
+++ b/samples/guide/src/main/java/okhttp3/guide/GetExample.java
@@ -6,7 +6,7 @@
 import okhttp3.Response;
 
 public class GetExample {
-  OkHttpClient client = new OkHttpClient.Builder().build();
+  OkHttpClient client = new OkHttpClient();
 
   String run(String url) throws IOException {
     Request request = new Request.Builder()
diff --git a/samples/guide/src/main/java/okhttp3/guide/PostExample.java b/samples/guide/src/main/java/okhttp3/guide/PostExample.java
index 7dcf83ca0a..74ddc56127 100644
--- a/samples/guide/src/main/java/okhttp3/guide/PostExample.java
+++ b/samples/guide/src/main/java/okhttp3/guide/PostExample.java
@@ -11,7 +11,7 @@
   public static final MediaType JSON
       = MediaType.parse("application/json; charset=utf-8");
 
-  OkHttpClient client = new OkHttpClient.Builder().build();
+  OkHttpClient client = new OkHttpClient();
 
   String post(String url, String json) throws IOException {
     RequestBody body = RequestBody.create(JSON, json);
diff --git a/samples/guide/src/main/java/okhttp3/recipes/AccessHeaders.java b/samples/guide/src/main/java/okhttp3/recipes/AccessHeaders.java
index 311f5d1ca7..fe4d2f521f 100644
--- a/samples/guide/src/main/java/okhttp3/recipes/AccessHeaders.java
+++ b/samples/guide/src/main/java/okhttp3/recipes/AccessHeaders.java
@@ -21,7 +21,7 @@
 import okhttp3.Response;
 
 public final class AccessHeaders {
-  private final OkHttpClient client = new OkHttpClient.Builder().build();
+  private final OkHttpClient client = new OkHttpClient();
 
   public void run() throws Exception {
     Request request = new Request.Builder()
diff --git a/samples/guide/src/main/java/okhttp3/recipes/AsynchronousGet.java b/samples/guide/src/main/java/okhttp3/recipes/AsynchronousGet.java
index 3d77c062ba..f4c3a8712d 100644
--- a/samples/guide/src/main/java/okhttp3/recipes/AsynchronousGet.java
+++ b/samples/guide/src/main/java/okhttp3/recipes/AsynchronousGet.java
@@ -23,7 +23,7 @@
 import okhttp3.Response;
 
 public final class AsynchronousGet {
-  private final OkHttpClient client = new OkHttpClient.Builder().build();
+  private final OkHttpClient client = new OkHttpClient();
 
   public void run() throws Exception {
     Request request = new Request.Builder()
diff --git a/samples/guide/src/main/java/okhttp3/recipes/CancelCall.java b/samples/guide/src/main/java/okhttp3/recipes/CancelCall.java
index 56547c7739..c3551f78be 100644
--- a/samples/guide/src/main/java/okhttp3/recipes/CancelCall.java
+++ b/samples/guide/src/main/java/okhttp3/recipes/CancelCall.java
@@ -26,7 +26,7 @@
 
 public class CancelCall {
   private final ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);
-  private final OkHttpClient client = new OkHttpClient.Builder().build();
+  private final OkHttpClient client = new OkHttpClient();
 
   public void run() throws Exception {
     Request request = new Request.Builder()
diff --git a/samples/guide/src/main/java/okhttp3/recipes/ParseResponseWithGson.java b/samples/guide/src/main/java/okhttp3/recipes/ParseResponseWithGson.java
index 9ea18e2fdf..2629060fb2 100644
--- a/samples/guide/src/main/java/okhttp3/recipes/ParseResponseWithGson.java
+++ b/samples/guide/src/main/java/okhttp3/recipes/ParseResponseWithGson.java
@@ -23,7 +23,7 @@
 import okhttp3.Response;
 
 public final class ParseResponseWithGson {
-  private final OkHttpClient client = new OkHttpClient.Builder().build();
+  private final OkHttpClient client = new OkHttpClient();
   private final Gson gson = new Gson();
 
   public void run() throws Exception {
diff --git a/samples/guide/src/main/java/okhttp3/recipes/PerCallSettings.java b/samples/guide/src/main/java/okhttp3/recipes/PerCallSettings.java
index 9efeecc820..9f82d1efae 100644
--- a/samples/guide/src/main/java/okhttp3/recipes/PerCallSettings.java
+++ b/samples/guide/src/main/java/okhttp3/recipes/PerCallSettings.java
@@ -22,7 +22,7 @@
 import okhttp3.Response;
 
 public final class PerCallSettings {
-  private final OkHttpClient client = new OkHttpClient.Builder().build();
+  private final OkHttpClient client = new OkHttpClient();
 
   public void run() throws Exception {
     Request request = new Request.Builder()
diff --git a/samples/guide/src/main/java/okhttp3/recipes/PostFile.java b/samples/guide/src/main/java/okhttp3/recipes/PostFile.java
index 9accbfc901..4d69844a7a 100644
--- a/samples/guide/src/main/java/okhttp3/recipes/PostFile.java
+++ b/samples/guide/src/main/java/okhttp3/recipes/PostFile.java
@@ -27,7 +27,7 @@
   public static final MediaType MEDIA_TYPE_MARKDOWN
       = MediaType.parse("text/x-markdown; charset=utf-8");
 
-  private final OkHttpClient client = new OkHttpClient.Builder().build();
+  private final OkHttpClient client = new OkHttpClient();
 
   public void run() throws Exception {
     File file = new File("README.md");
diff --git a/samples/guide/src/main/java/okhttp3/recipes/PostForm.java b/samples/guide/src/main/java/okhttp3/recipes/PostForm.java
index 624d63b36b..f2f05def19 100644
--- a/samples/guide/src/main/java/okhttp3/recipes/PostForm.java
+++ b/samples/guide/src/main/java/okhttp3/recipes/PostForm.java
@@ -23,7 +23,7 @@
 import okhttp3.Response;
 
 public final class PostForm {
-  private final OkHttpClient client = new OkHttpClient.Builder().build();
+  private final OkHttpClient client = new OkHttpClient();
 
   public void run() throws Exception {
     RequestBody formBody = new FormBody.Builder()
diff --git a/samples/guide/src/main/java/okhttp3/recipes/PostMultipart.java b/samples/guide/src/main/java/okhttp3/recipes/PostMultipart.java
index e7fa0e3a99..ab3708fab5 100644
--- a/samples/guide/src/main/java/okhttp3/recipes/PostMultipart.java
+++ b/samples/guide/src/main/java/okhttp3/recipes/PostMultipart.java
@@ -32,7 +32,7 @@
   private static final String IMGUR_CLIENT_ID = "9199fdef135c122";
   private static final MediaType MEDIA_TYPE_PNG = MediaType.parse("image/png");
 
-  private final OkHttpClient client = new OkHttpClient.Builder().build();
+  private final OkHttpClient client = new OkHttpClient();
 
   public void run() throws Exception {
     // Use the imgur image upload API as documented at https://api.imgur.com/endpoints/image
diff --git a/samples/guide/src/main/java/okhttp3/recipes/PostStreaming.java b/samples/guide/src/main/java/okhttp3/recipes/PostStreaming.java
index 3cc63750f6..4651240d67 100644
--- a/samples/guide/src/main/java/okhttp3/recipes/PostStreaming.java
+++ b/samples/guide/src/main/java/okhttp3/recipes/PostStreaming.java
@@ -27,7 +27,7 @@
   public static final MediaType MEDIA_TYPE_MARKDOWN
       = MediaType.parse("text/x-markdown; charset=utf-8");
 
-  private final OkHttpClient client = new OkHttpClient.Builder().build();
+  private final OkHttpClient client = new OkHttpClient();
 
   public void run() throws Exception {
     RequestBody requestBody = new RequestBody() {
diff --git a/samples/guide/src/main/java/okhttp3/recipes/PostString.java b/samples/guide/src/main/java/okhttp3/recipes/PostString.java
index d354e57a79..f956f97f1f 100644
--- a/samples/guide/src/main/java/okhttp3/recipes/PostString.java
+++ b/samples/guide/src/main/java/okhttp3/recipes/PostString.java
@@ -26,7 +26,7 @@
   public static final MediaType MEDIA_TYPE_MARKDOWN
       = MediaType.parse("text/x-markdown; charset=utf-8");
 
-  private final OkHttpClient client = new OkHttpClient.Builder().build();
+  private final OkHttpClient client = new OkHttpClient();
 
   public void run() throws Exception {
     String postBody = ""
diff --git a/samples/guide/src/main/java/okhttp3/recipes/SynchronousGet.java b/samples/guide/src/main/java/okhttp3/recipes/SynchronousGet.java
index 33d047ab2d..ab8d48e3d2 100644
--- a/samples/guide/src/main/java/okhttp3/recipes/SynchronousGet.java
+++ b/samples/guide/src/main/java/okhttp3/recipes/SynchronousGet.java
@@ -22,7 +22,7 @@
 import okhttp3.Response;
 
 public final class SynchronousGet {
-  private final OkHttpClient client = new OkHttpClient.Builder().build();
+  private final OkHttpClient client = new OkHttpClient();
 
   public void run() throws Exception {
     Request request = new Request.Builder()
diff --git a/samples/guide/src/main/java/okhttp3/recipes/WebSocketEcho.java b/samples/guide/src/main/java/okhttp3/recipes/WebSocketEcho.java
index 3fb7758725..82999b638a 100644
--- a/samples/guide/src/main/java/okhttp3/recipes/WebSocketEcho.java
+++ b/samples/guide/src/main/java/okhttp3/recipes/WebSocketEcho.java
@@ -21,7 +21,7 @@
   private final Executor writeExecutor = Executors.newSingleThreadExecutor();
 
   private void run() throws IOException {
-    OkHttpClient client = new OkHttpClient.Builder().build();
+    OkHttpClient client = new OkHttpClient();
 
     Request request = new Request.Builder()
         .url("ws://echo.websocket.org")
diff --git a/samples/simple-client/src/main/java/okhttp3/sample/OkHttpContributors.java b/samples/simple-client/src/main/java/okhttp3/sample/OkHttpContributors.java
index c1fad1d8a7..bbd5755dec 100644
--- a/samples/simple-client/src/main/java/okhttp3/sample/OkHttpContributors.java
+++ b/samples/simple-client/src/main/java/okhttp3/sample/OkHttpContributors.java
@@ -24,7 +24,7 @@
   }
 
   public static void main(String... args) throws Exception {
-    OkHttpClient client = new OkHttpClient.Builder().build();
+    OkHttpClient client = new OkHttpClient();
 
     // Create request for remote resource.
     Request request = new Request.Builder()
