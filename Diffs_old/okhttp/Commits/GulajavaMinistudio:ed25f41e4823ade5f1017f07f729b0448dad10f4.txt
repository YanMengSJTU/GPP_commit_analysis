diff --git a/android-test/build.gradle b/android-test/build.gradle
new file mode 100644
index 0000000000..f31cca5f56
--- /dev/null
+++ b/android-test/build.gradle
@@ -0,0 +1,28 @@
+apply plugin: 'com.android.library'
+apply plugin: 'org.jetbrains.kotlin.android'
+
+android {
+  compileOptions {
+    sourceCompatibility JavaVersion.VERSION_1_8
+    targetCompatibility JavaVersion.VERSION_1_8
+  }
+
+  compileSdkVersion 29
+
+  defaultConfig {
+    minSdkVersion 21
+    targetSdkVersion 29
+    versionCode 1
+    versionName "1.0"
+
+    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
+  }
+}
+
+dependencies {
+  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
+  implementation project(':okhttp')
+  testImplementation 'junit:junit:4.12'
+  androidTestImplementation 'com.android.support.test:runner:1.0.2'
+  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
+}
diff --git a/android-test/settings.gradle b/android-test/settings.gradle
new file mode 100644
index 0000000000..fa80fbee19
--- /dev/null
+++ b/android-test/settings.gradle
@@ -0,0 +1 @@
+project.name = 'android-test'
\ No newline at end of file
diff --git a/android-test/src/androidTest/java/okhttp/android/test/OkHttpTest.kt b/android-test/src/androidTest/java/okhttp/android/test/OkHttpTest.kt
new file mode 100644
index 0000000000..79b542364c
--- /dev/null
+++ b/android-test/src/androidTest/java/okhttp/android/test/OkHttpTest.kt
@@ -0,0 +1,118 @@
+/*
+ * Copyright (C) 2019 Square, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package okhttp.android.test
+
+import android.os.Build
+import android.support.test.runner.AndroidJUnit4
+import okhttp3.Call
+import okhttp3.Connection
+import okhttp3.EventListener
+import okhttp3.OkHttpClient
+import okhttp3.Protocol
+import okhttp3.Request
+import okhttp3.TlsVersion
+import org.junit.After
+import org.junit.Assert.assertEquals
+import org.junit.Assert.fail
+import org.junit.Assume
+import org.junit.Before
+import org.junit.Test
+import org.junit.runner.RunWith
+import java.net.InetAddress
+import java.net.UnknownHostException
+
+/**
+ * Run with "./gradlew :android-test:connectedCheck" and make sure ANDROID_SDK_ROOT is set.
+ */
+@RunWith(AndroidJUnit4::class)
+class OkHttpTest {
+  private lateinit var client: OkHttpClient
+
+  @Before
+  fun createClient() {
+    client = OkHttpClient.Builder()
+        .build()
+  }
+
+  @After
+  fun cleanup() {
+    client.dispatcher.executorService.shutdownNow()
+  }
+
+  @Test
+  fun testRequest() {
+    assumeNetwork()
+
+    val request = Request.Builder().url("https://api.twitter.com/robots.txt").build()
+
+    val response = client.newCall(request).execute()
+
+    response.use {
+      assertEquals(200, response.code)
+    }
+  }
+
+  @Test
+  fun testRequestUsesAndroidConscrypt() {
+    assumeNetwork()
+
+    val request = Request.Builder().url("https://facebook.com/robots.txt").build()
+
+    var socketClass: String? = null
+
+    val client2 = client.newBuilder()
+        .eventListener(object : EventListener() {
+          override fun connectionAcquired(call: Call, connection: Connection) {
+            socketClass = connection.socket().javaClass.name
+          }
+        })
+        .build()
+
+    val response = client2.newCall(request).execute()
+
+    response.use {
+      assertEquals(Protocol.HTTP_2, response.protocol)
+      if (Build.VERSION.SDK_INT >= 29) {
+        assertEquals(TlsVersion.TLS_1_3, response.handshake?.tlsVersion)
+      } else {
+        assertEquals(TlsVersion.TLS_1_2, response.handshake?.tlsVersion)
+      }
+      assertEquals(200, response.code)
+      assertEquals("com.android.org.conscrypt.Java8FileDescriptorSocket", socketClass)
+    }
+  }
+
+  @Test
+  fun testHttpRequestBlocked() {
+    Assume.assumeTrue(Build.VERSION.SDK_INT >= 23)
+
+    val request = Request.Builder().url("http://api.twitter.com/robots.txt").build()
+
+    try {
+      client.newCall(request).execute()
+      fail("expected cleartext blocking")
+    } catch (_: java.net.UnknownServiceException) {
+    }
+  }
+
+  private fun assumeNetwork() {
+    try {
+      InetAddress.getByName("www.google.com")
+    } catch (uhe: UnknownHostException) {
+      Assume.assumeNoException(uhe)
+    }
+  }
+}
diff --git a/android-test/src/main/AndroidManifest.xml b/android-test/src/main/AndroidManifest.xml
new file mode 100644
index 0000000000..b1a394fecc
--- /dev/null
+++ b/android-test/src/main/AndroidManifest.xml
@@ -0,0 +1,4 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="okhttp.android.test">
+  <uses-permission android:name="android.permission.INTERNET" />
+</manifest>
diff --git a/android-test/src/main/res/values/strings.xml b/android-test/src/main/res/values/strings.xml
new file mode 100644
index 0000000000..3f2b0bb232
--- /dev/null
+++ b/android-test/src/main/res/values/strings.xml
@@ -0,0 +1,3 @@
+<resources>
+  <string name="app_name">android-test</string>
+</resources>
diff --git a/android-test/src/main/res/xml/network_security_config.xml b/android-test/src/main/res/xml/network_security_config.xml
new file mode 100644
index 0000000000..786dddecc7
--- /dev/null
+++ b/android-test/src/main/res/xml/network_security_config.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<network-security-config>
+  <base-config cleartextTrafficPermitted="false">
+  </base-config>
+</network-security-config>
\ No newline at end of file
diff --git a/build.gradle b/build.gradle
index a6a88d3f49..07b1b009fe 100644
--- a/build.gradle
+++ b/build.gradle
@@ -47,11 +47,13 @@ buildscript {
     classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
     classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.18"
     classpath 'com.diffplug.spotless:spotless-plugin-gradle:3.21.1'
+    classpath 'com.android.tools.build:gradle:3.4.1'
   }
 
   repositories {
     mavenCentral()
     gradlePluginPortal()
+    google()
   }
 }
 
@@ -70,6 +72,7 @@ allprojects {
     maven {
       url 'https://dl.bintray.com/kotlin/dokka'
     }
+    google()
   }
 
   task downloadDependencies() {
@@ -81,6 +84,9 @@ allprojects {
 }
 
 subprojects { project ->
+  if (project.name == 'android-test')
+    return
+
   apply plugin: 'java'
   apply plugin: 'java-library'
   apply plugin: 'org.jetbrains.kotlin.platform.jvm'
diff --git a/okhttp/src/test/java/okhttp3/ConscryptTest.kt b/okhttp/src/test/java/okhttp3/ConscryptTest.kt
index 54b9af9fc6..c36e0186c3 100644
--- a/okhttp/src/test/java/okhttp3/ConscryptTest.kt
+++ b/okhttp/src/test/java/okhttp3/ConscryptTest.kt
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014 Square, Inc.
+ * Copyright (C) 2018 Square, Inc.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
diff --git a/settings.gradle b/settings.gradle
index 17da3db548..c5e67317de 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -1,4 +1,11 @@
+rootProject.name = 'okhttp-parent'
+
 include ':mockwebserver'
+if (!properties.containsKey('android.injected.invoked.from.ide') && System.getenv(
+        'ANDROID_SDK_ROOT') != null) {
+  // Currently incompatible with Intellij
+  include ':android-test'
+}
 include ':okcurl'
 include ':okhttp'
 include ':okhttp-brotli'
