diff --git a/okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java b/okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java
index e4072033df..40eb1ef4f3 100644
--- a/okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java
+++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java
@@ -34,8 +34,10 @@
 import okhttp3.Cache;
 import okhttp3.Call;
 import okhttp3.Callback;
+import okhttp3.Connection;
 import okhttp3.Cookie;
 import okhttp3.Credentials;
+import okhttp3.EventListener;
 import okhttp3.Headers;
 import okhttp3.Interceptor;
 import okhttp3.MediaType;
@@ -1500,4 +1502,39 @@ private Buffer gzip(String bytes) throws IOException {
       }
     }
   }
+
+  /** https://github.com/square/okhttp/issues/4875 */
+  @Test
+  public void shutdownAfterLateCoalescing() throws Exception {
+    CountDownLatch latch = new CountDownLatch(2);
+
+    Callback callback = new Callback() {
+      @Override public void onResponse(Call call, Response response) {
+        fail();
+      }
+
+      @Override public void onFailure(Call call, IOException e) {
+        latch.countDown();
+      }
+    };
+
+    client = client.newBuilder().eventListener(new EventListener() {
+      int callCount;
+
+      @Override public void connectionAcquired(Call call, Connection connection) {
+        try {
+          if (callCount++ == 1) {
+            server.shutdown();
+          }
+        } catch(IOException e) {
+          fail();
+        }
+      }
+    }).build();
+
+    client.newCall(new Request.Builder().url(server.url("")).build()).enqueue(callback);
+    client.newCall(new Request.Builder().url(server.url("")).build()).enqueue(callback);
+
+    latch.await();
+  }
 }
