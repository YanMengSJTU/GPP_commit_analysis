diff --git a/android-test/src/androidTest/java/okhttp/android/test/OkHttpTest.kt b/android-test/src/androidTest/java/okhttp/android/test/OkHttpTest.kt
index e3b2fbb316..24db91b753 100644
--- a/android-test/src/androidTest/java/okhttp/android/test/OkHttpTest.kt
+++ b/android-test/src/androidTest/java/okhttp/android/test/OkHttpTest.kt
@@ -128,7 +128,12 @@ class OkHttpTest {
         assertEquals(Protocol.HTTP_2, response.protocol)
         assertEquals(TlsVersion.TLS_1_3, response.handshake?.tlsVersion)
         assertEquals(200, response.code)
-        assertEquals("org.conscrypt.Java8FileDescriptorSocket", socketClass)
+        // see https://github.com/google/conscrypt/blob/b9463b2f74df42d85c73715a5f19e005dfb7b802/android/src/main/java/org/conscrypt/Platform.java#L613
+        if (Build.VERSION.SDK_INT >= 24) {
+          assertEquals("org.conscrypt.Java8FileDescriptorSocket", socketClass)
+        } else {
+          assertEquals("org.conscrypt.ConscryptFileDescriptorSocket", socketClass)
+        }
       }
     } finally {
       Security.removeProvider("Conscrypt")
diff --git a/okhttp/src/main/java/okhttp3/internal/platform/Android10Platform.kt b/okhttp/src/main/java/okhttp3/internal/platform/Android10Platform.kt
new file mode 100644
index 0000000000..501699d6f3
--- /dev/null
+++ b/okhttp/src/main/java/okhttp3/internal/platform/Android10Platform.kt
@@ -0,0 +1,69 @@
+/*
+ * Copyright (C) 2016 Square, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package okhttp3.internal.platform
+
+import android.os.Build
+import android.security.NetworkSecurityPolicy
+import okhttp3.Protocol
+import okhttp3.internal.platform.AndroidPlatform.Companion.isAndroid
+import okhttp3.internal.platform.android.Android10CertificateChainCleaner
+import okhttp3.internal.platform.android.Android10SocketAdapter
+import okhttp3.internal.platform.android.ConscryptSocketAdapter
+import okhttp3.internal.platform.android.DeferredSocketAdapter
+import okhttp3.internal.platform.android.androidLog
+import okhttp3.internal.tls.CertificateChainCleaner
+import javax.net.ssl.SSLSocket
+import javax.net.ssl.SSLSocketFactory
+import javax.net.ssl.X509TrustManager
+
+/** Android 29+. */
+class Android10Platform : Platform() {
+  private val socketAdapters = listOfNotNull(
+      Android10SocketAdapter.buildIfSupported(),
+      ConscryptSocketAdapter.buildIfSupported(),
+      DeferredSocketAdapter("com.google.android.gms.org.conscrypt")
+  ).filter { it.isSupported() }
+
+  override fun trustManager(sslSocketFactory: SSLSocketFactory): X509TrustManager? =
+      socketAdapters.find { it.matchesSocketFactory(sslSocketFactory) }
+          ?.trustManager(sslSocketFactory)
+
+  override fun configureTlsExtensions(sslSocket: SSLSocket, protocols: List<Protocol>) {
+    // No TLS extensions if the socket class is custom.
+    socketAdapters.find { it.matchesSocket(sslSocket) }
+        ?.configureTlsExtensions(sslSocket, protocols)
+  }
+
+  override fun getSelectedProtocol(sslSocket: SSLSocket) =
+      // No TLS extensions if the socket class is custom.
+      socketAdapters.find { it.matchesSocket(sslSocket) }?.getSelectedProtocol(sslSocket)
+
+  override fun log(level: Int, message: String, t: Throwable?) {
+    androidLog(level, message, t)
+  }
+
+  override fun isCleartextTrafficPermitted(hostname: String): Boolean =
+      NetworkSecurityPolicy.getInstance().isCleartextTrafficPermitted(hostname)
+
+  override fun buildCertificateChainCleaner(trustManager: X509TrustManager): CertificateChainCleaner =
+      Android10CertificateChainCleaner(trustManager)
+
+  companion object {
+    val isSupported: Boolean = isAndroid && Build.VERSION.SDK_INT >= 29
+
+    fun buildIfSupported(): Platform? = if (isSupported) Android10Platform() else null
+  }
+}
diff --git a/okhttp/src/main/java/okhttp3/internal/platform/AndroidQPlatform.kt b/okhttp/src/main/java/okhttp3/internal/platform/AndroidQPlatform.kt
deleted file mode 100644
index 490f06d9f7..0000000000
--- a/okhttp/src/main/java/okhttp3/internal/platform/AndroidQPlatform.kt
+++ /dev/null
@@ -1,38 +0,0 @@
-/*
- * Copyright (C) 2016 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package okhttp3.internal.platform
-
-import android.os.Build
-import android.security.NetworkSecurityPolicy
-import okhttp3.internal.platform.AndroidPlatform.Companion.isAndroid
-import okhttp3.internal.platform.android.AndroidQCertificateChainCleaner
-import okhttp3.internal.tls.CertificateChainCleaner
-import javax.net.ssl.X509TrustManager
-
-/** Android 29+. */
-class AndroidQPlatform : Jdk9Platform() {
-  override fun isCleartextTrafficPermitted(hostname: String): Boolean =
-      NetworkSecurityPolicy.getInstance().isCleartextTrafficPermitted(hostname)
-
-  override fun buildCertificateChainCleaner(trustManager: X509TrustManager): CertificateChainCleaner =
-      AndroidQCertificateChainCleaner(trustManager)
-
-  companion object {
-    val isSupported: Boolean = isAndroid && Build.VERSION.SDK_INT >= 29
-
-    fun buildIfSupported(): Platform? = if (isSupported) AndroidQPlatform() else null
-  }
-}
diff --git a/okhttp/src/main/java/okhttp3/internal/platform/Platform.kt b/okhttp/src/main/java/okhttp3/internal/platform/Platform.kt
index 265094906f..2102d5b308 100644
--- a/okhttp/src/main/java/okhttp3/internal/platform/Platform.kt
+++ b/okhttp/src/main/java/okhttp3/internal/platform/Platform.kt
@@ -197,10 +197,10 @@ open class Platform {
 
     /** Attempt to match the host runtime to a capable Platform implementation. */
     private fun findPlatform(): Platform {
-      val androidQ = AndroidQPlatform.buildIfSupported()
+      val android10 = Android10Platform.buildIfSupported()
 
-      if (androidQ != null) {
-        return androidQ
+      if (android10 != null) {
+        return android10
       }
 
       val android = AndroidPlatform.buildIfSupported()
diff --git a/okhttp/src/main/java/okhttp3/internal/platform/android/AndroidQCertificateChainCleaner.kt b/okhttp/src/main/java/okhttp3/internal/platform/android/Android10CertificateChainCleaner.kt
similarity index 93%
rename from okhttp/src/main/java/okhttp3/internal/platform/android/AndroidQCertificateChainCleaner.kt
rename to okhttp/src/main/java/okhttp3/internal/platform/android/Android10CertificateChainCleaner.kt
index 5462c44c26..87249b3ef9 100644
--- a/okhttp/src/main/java/okhttp3/internal/platform/android/AndroidQCertificateChainCleaner.kt
+++ b/okhttp/src/main/java/okhttp3/internal/platform/android/Android10CertificateChainCleaner.kt
@@ -30,7 +30,7 @@ import javax.net.ssl.X509TrustManager
  * This is the best way to get a clean chain on Android because it uses the same code as the TLS
  * handshake.
  */
-internal class AndroidQCertificateChainCleaner(
+internal class Android10CertificateChainCleaner(
   trustManager: X509TrustManager
 ) : CertificateChainCleaner() {
   val extensions = X509TrustManagerExtensions(trustManager)
@@ -48,7 +48,7 @@ internal class AndroidQCertificateChainCleaner(
   }
 
   override fun equals(other: Any?): Boolean =
-      other is AndroidQCertificateChainCleaner // All instances are equivalent.
+      other is Android10CertificateChainCleaner // All instances are equivalent.
 
   override fun hashCode(): Int = 1
 }
\ No newline at end of file
diff --git a/okhttp/src/main/java/okhttp3/internal/platform/android/Android10SocketAdapter.kt b/okhttp/src/main/java/okhttp3/internal/platform/android/Android10SocketAdapter.kt
new file mode 100644
index 0000000000..5837a7843a
--- /dev/null
+++ b/okhttp/src/main/java/okhttp3/internal/platform/android/Android10SocketAdapter.kt
@@ -0,0 +1,69 @@
+/*
+ * Copyright (C) 2019 Square, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package okhttp3.internal.platform.android
+
+import android.net.SSLCertificateSocketFactory
+import android.os.Build
+import okhttp3.Protocol
+import okhttp3.internal.platform.AndroidPlatform.Companion.isAndroid
+import okhttp3.internal.platform.Platform
+import javax.net.ssl.SSLSocket
+import javax.net.ssl.SSLSocketFactory
+import javax.net.ssl.X509TrustManager
+
+/**
+ * Simple non-reflection SocketAdapter for Android Q.
+ */
+class Android10SocketAdapter : SocketAdapter {
+  private val socketFactory =
+      SSLCertificateSocketFactory.getDefault(10000) as SSLCertificateSocketFactory
+
+  override fun trustManager(sslSocketFactory: SSLSocketFactory): X509TrustManager? = null
+
+  override fun matchesSocketFactory(sslSocketFactory: SSLSocketFactory): Boolean = false
+
+  override fun matchesSocket(sslSocket: SSLSocket): Boolean = sslSocket.javaClass.name.startsWith(
+      "com.android.org.conscrypt")
+
+  override fun isSupported(): Boolean = Companion.isSupported()
+
+  override fun getSelectedProtocol(sslSocket: SSLSocket): String? =
+      when (val protocol = sslSocket.applicationProtocol) {
+        null, "" -> null
+        else -> protocol
+      }
+
+  override fun configureTlsExtensions(
+    sslSocket: SSLSocket,
+    protocols: List<Protocol>
+  ) {
+    socketFactory.setUseSessionTickets(sslSocket, true)
+
+    val sslParameters = sslSocket.sslParameters
+
+    // Enable ALPN.
+    sslParameters.applicationProtocols = Platform.alpnProtocolNames(protocols).toTypedArray()
+
+    sslSocket.sslParameters = sslParameters
+  }
+
+  companion object {
+    fun buildIfSupported(): SocketAdapter? =
+        if (isSupported()) Android10SocketAdapter() else null
+
+    fun isSupported() = isAndroid && Build.VERSION.SDK_INT >= 29
+  }
+}
diff --git a/okhttp/src/main/java/okhttp3/internal/platform/android/ConscryptSocketAdapter.kt b/okhttp/src/main/java/okhttp3/internal/platform/android/ConscryptSocketAdapter.kt
index 4f23c881ae..21b311d8a7 100644
--- a/okhttp/src/main/java/okhttp3/internal/platform/android/ConscryptSocketAdapter.kt
+++ b/okhttp/src/main/java/okhttp3/internal/platform/android/ConscryptSocketAdapter.kt
@@ -26,7 +26,7 @@ import javax.net.ssl.X509TrustManager
 /**
  * Simple non-reflection SocketAdapter for Conscrypt.
  */
-object ConscryptSocketAdapter : SocketAdapter {
+class ConscryptSocketAdapter : SocketAdapter {
   override fun trustManager(sslSocketFactory: SSLSocketFactory): X509TrustManager? = null
 
   override fun matchesSocketFactory(sslSocketFactory: SSLSocketFactory): Boolean = false
@@ -56,6 +56,8 @@ object ConscryptSocketAdapter : SocketAdapter {
     }
   }
 
-  fun buildIfSupported(): SocketAdapter? =
-      if (ConscryptPlatform.isSupported) ConscryptSocketAdapter else null
+  companion object {
+    fun buildIfSupported(): SocketAdapter? =
+        if (ConscryptPlatform.isSupported) ConscryptSocketAdapter() else null
+  }
 }
diff --git a/okhttp/src/test/java/okhttp3/internal/platform/android/AndroidSocketAdapterTest.kt b/okhttp/src/test/java/okhttp3/internal/platform/android/AndroidSocketAdapterTest.kt
index f79644a12c..534d413f6a 100644
--- a/okhttp/src/test/java/okhttp3/internal/platform/android/AndroidSocketAdapterTest.kt
+++ b/okhttp/src/test/java/okhttp3/internal/platform/android/AndroidSocketAdapterTest.kt
@@ -97,11 +97,11 @@ class AndroidSocketAdapterTest(private val adapter: SocketAdapter) {
     @JvmStatic
     @Parameterized.Parameters(name = "{0}")
     fun data(): Collection<SocketAdapter> {
-      return listOf(
-          ConscryptSocketAdapter,
+      return listOfNotNull(
+          ConscryptSocketAdapter.buildIfSupported(),
           DeferredSocketAdapter("org.conscrypt"),
-          AndroidSocketAdapter.buildIfSupported("org.conscrypt")!!,
-          StandardAndroidSocketAdapter.buildIfSupported("org.conscrypt")!!
+          AndroidSocketAdapter.buildIfSupported("org.conscrypt"),
+          StandardAndroidSocketAdapter.buildIfSupported("org.conscrypt")
       )
     }
   }
