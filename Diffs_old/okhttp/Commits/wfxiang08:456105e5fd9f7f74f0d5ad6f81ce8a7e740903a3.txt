diff --git a/okhttp/src/main/java/okhttp3/HttpUrl.java b/okhttp/src/main/java/okhttp3/HttpUrl.java
index 39741176d3..deadf39ba0 100644
--- a/okhttp/src/main/java/okhttp3/HttpUrl.java
+++ b/okhttp/src/main/java/okhttp3/HttpUrl.java
@@ -365,7 +365,7 @@ public URL url() {
    *     <li>Whitespace and control characters in the fragment will be stripped.
    * </ul>
    *
-   * <p>These differences may have a significant consequence when the URI is interpretted by a
+   * <p>These differences may have a significant consequence when the URI is interpreted by a
    * webserver. For this reason the {@linkplain URI URI class} and this method should be avoided.
    */
   public URI uri() {
diff --git a/okhttp/src/main/java/okhttp3/internal/http2/Http2Writer.java b/okhttp/src/main/java/okhttp3/internal/http2/Http2Writer.java
index e23d8c9996..7490b09ba0 100644
--- a/okhttp/src/main/java/okhttp3/internal/http2/Http2Writer.java
+++ b/okhttp/src/main/java/okhttp3/internal/http2/Http2Writer.java
@@ -98,7 +98,7 @@ public synchronized void applyAndAckSettings(Settings peerSettings) throws IOExc
    * @param streamId client-initiated stream ID.  Must be an odd number.
    * @param promisedStreamId server-initiated stream ID.  Must be an even number.
    * @param requestHeaders minimally includes {@code :method}, {@code :scheme}, {@code :authority},
-   * and (@code :path}.
+   * and {@code :path}.
    */
   public synchronized void pushPromise(int streamId, int promisedStreamId,
       List<Header> requestHeaders) throws IOException {
@@ -162,7 +162,7 @@ public int maxDataLength() {
    * Implementations must send multiple frames as necessary.
    *
    * @param source the buffer to draw bytes from. May be null if byteCount is 0.
-   * @param byteCount must be between 0 and the minimum of {code source.length} and {@link
+   * @param byteCount must be between 0 and the minimum of {@code source.length} and {@link
    * #maxDataLength}.
    */
   public synchronized void data(boolean outFinished, int streamId, Buffer source, int byteCount)
diff --git a/okhttp/src/main/java/okhttp3/internal/http2/PushObserver.java b/okhttp/src/main/java/okhttp3/internal/http2/PushObserver.java
index 126908a0a9..8c08ddb56a 100644
--- a/okhttp/src/main/java/okhttp3/internal/http2/PushObserver.java
+++ b/okhttp/src/main/java/okhttp3/internal/http2/PushObserver.java
@@ -44,7 +44,7 @@
    *
    * @param streamId server-initiated stream ID: an even number.
    * @param requestHeaders minimally includes {@code :method}, {@code :scheme}, {@code :authority},
-   * and (@code :path}.
+   * and {@code :path}.
    */
   boolean onRequest(int streamId, List<Header> requestHeaders);
 
diff --git a/samples/slack/src/main/java/okhttp3/slack/OAuthSessionFactory.java b/samples/slack/src/main/java/okhttp3/slack/OAuthSessionFactory.java
index 4b2cda21d5..04ba201c96 100644
--- a/samples/slack/src/main/java/okhttp3/slack/OAuthSessionFactory.java
+++ b/samples/slack/src/main/java/okhttp3/slack/OAuthSessionFactory.java
@@ -75,7 +75,7 @@ private HttpUrl redirectUrl() {
     return mockWebServer.url("/oauth/");
   }
 
-  /** When the browser hits the redirect URL, use the provied code to ask Slack for a session. */
+  /** When the browser hits the redirect URL, use the provided code to ask Slack for a session. */
   @Override public MockResponse dispatch(RecordedRequest request) throws InterruptedException {
     HttpUrl requestUrl = mockWebServer.url(request.getPath());
     String code = requestUrl.queryParameter("code");
