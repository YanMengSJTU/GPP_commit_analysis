diff --git a/okhttp/src/main/java/com/squareup/okhttp/Call.java b/okhttp/src/main/java/com/squareup/okhttp/Call.java
index 17fe541b1a..d5f901ede9 100644
--- a/okhttp/src/main/java/com/squareup/okhttp/Call.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java
@@ -23,7 +23,6 @@
 import java.io.IOException;
 import java.net.ProtocolException;
 import okio.BufferedSink;
-import okio.BufferedSource;
 
 import static com.squareup.okhttp.internal.http.HttpEngine.MAX_REDIRECTS;
 
diff --git a/okhttp/src/main/java/com/squareup/okhttp/PushObserver.java b/okhttp/src/main/java/com/squareup/okhttp/PushObserver.java
index 8b25707465..48fd7a9f37 100644
--- a/okhttp/src/main/java/com/squareup/okhttp/PushObserver.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/PushObserver.java
@@ -15,35 +15,22 @@
  */
 package com.squareup.okhttp;
 
-import okio.BufferedSource;
-
 /**
- * {@link com.squareup.okhttp.Protocol#HTTP_2 HTTP/2} only.
+ * {@link com.squareup.okhttp.Protocol#HTTP_2 HTTP/2} and {@link com.squareup.okhttp.Protocol#SPDY_3 SPDY/3} only.
  * Processes server-initiated HTTP requests on the client. Implementations must
  * quickly dispatch callbacks to avoid creating a bottleneck.
  *
- * <p>While {@link #onReset} may occur at any time, the following callbacks are
- * expected in order, correlated by stream ID.
- * <ul>
- *   <li>{@link #onRequest}</li>
- *   <li>{@link #onHeaders} (unless canceled)</li>
- *   <li>{@link #onData} (optional sequence of data frames)</li>
- * </ul>
- *
- * <p>As a stream ID is scoped to a single HTTP/2 connection, implementations
- * which target multiple connections should expect repetition of stream IDs.
- *
  * <p>Return true to request cancellation of a pushed stream.  Note that this
  * does not guarantee future frames won't arrive on the stream ID.
  */
 public interface PushObserver {
   /**
-   * The response headers corresponding to a pushed request.  When {@code last}
-   * is true, there are no data frames to follow.
+   * Receive a push initiated by the server. The push is in the form of
+   * an http response, where the request is either a previous client response
+   * (SPDY) or a push promise "request" from the server (HTTP/2).
    *
-   * @param streamId server-initiated stream ID: an even number.
-   * @param responseHeaders minimally includes {@code :status}.
-   * @param last when true, there is no response data.
+   * @param response The push from the server
+   * @return true to cancel the push stream
    */
   boolean onPush(Response response);
 }
diff --git a/okhttp/src/main/java/com/squareup/okhttp/Request.java b/okhttp/src/main/java/com/squareup/okhttp/Request.java
index 4964e8e345..bd0ecfa687 100644
--- a/okhttp/src/main/java/com/squareup/okhttp/Request.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/Request.java
@@ -218,7 +218,7 @@ public Builder method(String method, RequestBody body) {
       return this;
     }
 
-    Builder pushObserver(PushObserver pushObserver) {
+    public Builder pushObserver(PushObserver pushObserver) {
       this.pushObserver = pushObserver;
       return this;
     }
diff --git a/okhttp/src/main/java/com/squareup/okhttp/Response.java b/okhttp/src/main/java/com/squareup/okhttp/Response.java
index 710d9b075c..1afc5bf66a 100644
--- a/okhttp/src/main/java/com/squareup/okhttp/Response.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/Response.java
@@ -308,7 +308,7 @@ public Builder body(BufferedSource source) {
       private final long contentLength;
 
       RealResponseBody(BufferedSource source) {
-        if(headers == null) {
+        if (headers == null) {
           throw new IllegalStateException("Set headers before setting the body");
         }
         String contentType = headers.get("Content-Type");
diff --git a/okhttp/src/main/java/com/squareup/okhttp/internal/http/SpdyTransport.java b/okhttp/src/main/java/com/squareup/okhttp/internal/http/SpdyTransport.java
index d64c92e627..e356204e8f 100644
--- a/okhttp/src/main/java/com/squareup/okhttp/internal/http/SpdyTransport.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/SpdyTransport.java
@@ -16,7 +16,11 @@
 
 package com.squareup.okhttp.internal.http;
 
-import com.squareup.okhttp.*;
+import com.squareup.okhttp.Protocol;
+import com.squareup.okhttp.PushObserver;
+import com.squareup.okhttp.Request;
+import com.squareup.okhttp.Response;
+import com.squareup.okhttp.Headers;
 import com.squareup.okhttp.internal.Util;
 import com.squareup.okhttp.internal.spdy.ErrorCode;
 import com.squareup.okhttp.internal.spdy.Header;
