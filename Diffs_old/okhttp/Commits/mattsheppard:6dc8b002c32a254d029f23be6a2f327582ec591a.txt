diff --git a/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java
index b3921691ed..5a0421da58 100644
--- a/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java
+++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java
@@ -244,12 +244,18 @@ public Level getLevel() {
         Long gzippedLength = null;
         if ("gzip".equalsIgnoreCase(headers.get("Content-Encoding"))) {
             gzippedLength = buffer.size();
-            try (GzipSource gzippedResponseBody = new GzipSource(buffer.clone())) {
+            GzipSource gzippedResponseBody = null;
+            try {
+                gzippedResponseBody = new GzipSource(buffer.clone());
                 buffer = new Buffer();
                 gzippedResponseBody.read(buffer, Long.MAX_VALUE);
+            } finally {
+                if (gzippedResponseBody != null) {
+                    gzippedResponseBody.close();
+                }
             }
         }
-        
+
         Charset charset = UTF8;
         MediaType contentType = responseBody.contentType();
         if (contentType != null) {
@@ -268,7 +274,8 @@ public Level getLevel() {
         }
 
         if (gzippedLength != null) {
-            logger.log("<-- END HTTP (" + buffer.size() + "-byte " + gzippedLength + "-gzipped-byte body)");            
+            logger.log("<-- END HTTP (" + buffer.size() + "-byte "
+                + gzippedLength + "-gzipped-byte body)");
         } else {
             logger.log("<-- END HTTP (" + buffer.size() + "-byte body)");
         }
@@ -304,6 +311,8 @@ static boolean isPlaintext(Buffer buffer) {
 
   private boolean bodyHasUnknownEncofing(Headers headers) {
     String contentEncoding = headers.get("Content-Encoding");
-    return contentEncoding != null && !contentEncoding.equalsIgnoreCase("identity")  && !contentEncoding.equalsIgnoreCase("gzip");
+    return contentEncoding != null
+        && !contentEncoding.equalsIgnoreCase("identity")
+        && !contentEncoding.equalsIgnoreCase("gzip");
   }
 }
