diff --git a/okhttp/src/main/java/okhttp3/OkHttpClient.java b/okhttp/src/main/java/okhttp3/OkHttpClient.java
index afb388a748..0e29b25609 100644
--- a/okhttp/src/main/java/okhttp3/OkHttpClient.java
+++ b/okhttp/src/main/java/okhttp3/OkHttpClient.java
@@ -223,6 +223,7 @@ public OkHttpClient() {
   }
 
   OkHttpClient(Builder builder) {
+    //重要的成员 分发器
     this.dispatcher = builder.dispatcher;
     this.proxy = builder.proxy;
     this.protocols = builder.protocols;
@@ -425,6 +426,10 @@ public Builder newBuilder() {
     return new Builder(this);
   }
 
+  /**
+   * 内部类
+   * 用于构建client对象
+   */
   public static final class Builder {
     Dispatcher dispatcher;
     @Nullable Proxy proxy;
@@ -924,6 +929,7 @@ public Builder eventListenerFactory(EventListener.Factory eventListenerFactory)
       return this;
     }
 
+    //最后调用这个方法，返回一个client对象
     public OkHttpClient build() {
       return new OkHttpClient(this);
     }
diff --git a/okhttp/src/main/java/okhttp3/RealCall.java b/okhttp/src/main/java/okhttp3/RealCall.java
index 808b3dc7ba..474d9f5053 100644
--- a/okhttp/src/main/java/okhttp3/RealCall.java
+++ b/okhttp/src/main/java/okhttp3/RealCall.java
@@ -65,8 +65,12 @@ static RealCall newRealCall(OkHttpClient client, Request originalRequest, boolea
     return originalRequest;
   }
 
+  /**
+   * 同步执行
+   */
   @Override public Response execute() throws IOException {
     synchronized (this) {
+      //如果这个call已经执行过一次，则抛出异常
       if (executed) throw new IllegalStateException("Already Executed");
       executed = true;
     }
@@ -90,6 +94,9 @@ private void captureCallStackTrace() {
     retryAndFollowUpInterceptor.setCallStackTrace(callStackTrace);
   }
 
+  /**
+   * 异步执行
+   */
   @Override public void enqueue(Callback responseCallback) {
     synchronized (this) {
       if (executed) throw new IllegalStateException("Already Executed");
diff --git a/samples/guide/src/main/java/okhttp3/guide/GetExample.java b/samples/guide/src/main/java/okhttp3/guide/GetExample.java
index 35a1cc658c..8ef4172c7c 100644
--- a/samples/guide/src/main/java/okhttp3/guide/GetExample.java
+++ b/samples/guide/src/main/java/okhttp3/guide/GetExample.java
@@ -6,13 +6,16 @@
 import okhttp3.Response;
 
 public class GetExample {
+  //1.创建client客户端
   OkHttpClient client = new OkHttpClient();
 
   String run(String url) throws IOException {
+    //2.创建request
     Request request = new Request.Builder()
         .url(url)
         .build();
-
+    //3.创建call对象
+    //4.执行
     try (Response response = client.newCall(request).execute()) {
       return response.body().string();
     }
