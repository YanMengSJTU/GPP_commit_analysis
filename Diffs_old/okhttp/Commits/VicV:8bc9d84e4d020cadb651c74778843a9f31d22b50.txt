diff --git a/.gitignore b/.gitignore
deleted file mode 100644
index 796b96d1c4..0000000000
--- a/.gitignore
+++ /dev/null
@@ -1 +0,0 @@
-/build
diff --git a/.gitmodules b/.gitmodules
deleted file mode 100644
index d29f0b1218..0000000000
--- a/.gitmodules
+++ /dev/null
@@ -1,3 +0,0 @@
-[submodule "okhttp-hpacktests/src/test/resources/hpack-test-case"]
-	path = okhttp-hpacktests/src/test/resources/hpack-test-case
-	url = git://github.com/http2jp/hpack-test-case.git
diff --git a/CHANGELOG.md b/CHANGELOG.md
deleted file mode 100644
index e64155601c..0000000000
--- a/CHANGELOG.md
+++ /dev/null
@@ -1,345 +0,0 @@
-Change Log
-==========
-
-## Version 2.0.0
-
-This release commits to a stable 2.0 API. Read the 2.0.0-RC1 changes for advice
-on upgrading from 1.x to 2.x.
-
-_2014-06-21_
-
- *  **API Change**: Use `IOException` in `Callback.onFailure()`. This is
-    a source-incompatible change, and is different from OkHttp 2.0.0-RC2 which
-    used `Throwable`.
- *  Fix: Fixed a caching bug where we weren't storing rewritten request headers
-    like `Accept-Encoding`.
- *  Fix: Fixed bugs in handling the SPDY window size. This was stalling certain
-    large downloads
- *  Update the language level to Java 7. (OkHttp requires Android 2.3+ or Java 7+.)
-
-## Version 2.0.0-RC2
-
-_2014-06-11_
-
-This update fixes problems in 2.0.0-RC1. Read the 2.0.0-RC1 changes for
-advice on upgrading from 1.x to 2.x.
-
- *  Fix: Don't leak connections! There was a regression in 2.0.0-RC1 where
-    connections were neither closed nor pooled.
- *  Fix: Revert builder-style return types from OkHttpClient's timeout methods
-    for binary compatibility with OkHttp 1.x.
- *  Fix: Don't skip client stream 1 on SPDY/3.1. This fixes SPDY connectivity to
-    `https://google.com`, which doesn't follow the SPDY/3.1 spec!
- *  Fix: Always configure NPN headers. This fixes connectivity to
-    `https://facebook.com` when SPDY and HTTP/2 are both disabled. Otherwise an
-    unexpected NPN response is received and OkHttp crashes.
- *  Fix: Write continuation frames when HPACK data is larger than 16383 bytes.
- *  Fix: Don't drop uncaught exceptions thrown in async calls.
- *  Fix: Throw an exception eagerly when a request body is not legal. Previously
-    we ignored the problem at request-building time, only to crash later with a
-    `NullPointerException`.
- *  Fix: Include a backwards-compatible `OkHttp-Response-Source` header with
-    `OkUrlFactory `responses.
- *  Fix: Don't include a default User-Agent header in requests made with the Call
-    API. Requests made with OkUrlFactory will continue to have a default user
-    agent.
- *  New: Guava-like API to create headers:
-
-    ```
-    Headers headers = Headers.of(name1, value1, name2, value2, ...).
-    ```
-
- *  New: Make the content-type header optional for request bodies.
- *  New: `Response.isSuccessful()` is a convenient API to check response codes.
- *  New: The response body can now be read outside of the callback. Response
-    bodies must always be closed, otherwise they will leak connections!
- *  New: APIs to create multipart request bodies (`MultipartBuilder`) and form
-    encoding bodies (`FormEncodingBuilder`).
-
-## Version 2.0.0-RC1
-
-_2014-05-23_
-
-OkHttp 2 is designed around a new API that is true to HTTP, with classes for
-requests, responses, headers, and calls. It uses modern Java patterns like
-immutability and chained builders. The API now offers asynchronous callbacks
-in addition to synchronous blocking calls.
-
-#### API Changes
-
- *  **New Request and Response types,** each with their own builder. There's also
-    a `RequestBody` class to write the request body to the network and a
-    `ResponseBody` to read the response body from the network. The standalone
-    `Headers` class offers full access to the HTTP headers.
-
- *  **Okio dependency added.** OkHttp now depends on
-    [Okio](https://github.com/square/okio), an I/O library that makes it easier
-    to access, store and process data. Using this library internally makes OkHttp
-    faster while consuming less memory. You can write a `RequestBody` as an Okio
-    `BufferedSink` and a `ResponseBody` as an Okio `BufferedSource`. Standard
-    `InputStream` and `OutputStream` access is also available.
-
- *  **New Call and Callback types** execute requests and receive their
-    responses. Both types of calls can be canceled via the `Call` or the
-    `OkHttpClient`.
-
- *  **URLConnection support has moved to the okhttp-urlconnection module.**
-    If you're upgrading from 1.x, this change will impact you. You will need to
-    add the `okhttp-urlconnection` module to your project and use the
-    `OkUrlFactory` to create new instances of `HttpURLConnection`:
-
-    ```
-    // OkHttp 1.x:
-    HttpURLConnection connection = client.open(url);
-
-    // OkHttp 2.x:
-    HttpURLConnection connection = new OkUrlFactory(client).open(url);
-    ```
-
- *  **Custom caches are no longer supported.** In OkHttp 1.x it was possible to
-    define your own response cache with the `java.net.ResponseCache` and OkHttp's
-    `OkResponseCache` interfaces. Both of these APIs have been dropped. In
-    OkHttp 2 the built-in disk cache is the only supported response cache.
-
- *  **HttpResponseCache has been renamed to Cache.** Install it with
-    `OkHttpClient.setCache(...)` instead of `OkHttpClient.setResponseCache(...)`.
-
- *  **OkAuthenticator has been replaced with Authenticator.** This new
-    authenticator has access to the full incoming response and can respond with
-    whichever followup request is appropriate. The `Challenge` class is now a
-    top-level class and `Credential` is replaced with a utility class called
-    `Credentials`.
-
- *  **OkHttpClient.getFollowProtocolRedirects() renamed to
-    getFollowSslRedirects()**. We reserve the word _protocol_ for the HTTP
-    version being used (HTTP/1.1, HTTP/2). The old name of this method was
-    misleading; it was always used to configure redirects between `https://` and
-    `http://` schemes.
-
- *  **RouteDatabase is no longer public API.** OkHttp continues to track which
-    routes have failed but this is no exposed in the API.
-
- *  **ResponseSource is gone.** This enum exposed whether a response came from
-    the cache, network, or both. OkHttp 2 offers more detail with raw access to
-    the cache and network responses in the new `Response` class.
-
- *  **TunnelRequest is gone.** It specified how to connect to an HTTP proxy.
-    OkHttp 2 uses the new `Request` class for this.
-
- *  **Dispatcher** is a new class to manages the queue of asynchronous calls. It
-    implements limits on total in-flight calls and in-flight calls per host.
-
-#### Implementation changes
-
- * Support Android `TrafficStats` socket tagging.
- * Drop authentication headers on redirect.
- * Added support for compressed data frames.
- * Process push promise callbacks in order.
- * Update to http/2 draft 12.
- * Update to HPACK draft 07.
- * Add ALPN support. Maven will use ALPN on OpenJDK 8.
- * Update NPN dependency to target `jdk7u60-b13` and `Oracle jdk7u55-b13`.
- * Ensure SPDY variants support zero-length DELETE and POST.
- * Prevent leaking a cache item's InputStreams when metadata read fails.
- * Use a string to identify TLS versions in routes.
- * Add frame logger for HTTP/2.
- * Replacing `httpMinorVersion` with `Protocol`. Expose HTTP/1.0 as a potential protocol.
- * Use `Protocol` to describe framing.
- * Implement write timeouts for HTTP/1.1 streams.
- * Avoid use of SPDY stream ID 1, as that's typically used for UPGRADE.
- * Support OAuth in `Authenticator`.
- * Permit a dangling semicolon in media type parsing.
-
-## Version 1.6.0
-
-_2014-05-23_
-
- * Offer bridges to make it easier to migrate from OkHttp 1.x to OkHttp 2.0.
-   This adds `OkUrlFactory`, `Cache`, and `@Deprecated` annotations for APIs
-   dropped in 2.0.
-
-## Version 1.5.4
-
-_2014-04-14_
-
- * Drop ALPN support in Android. There's a concurrency bug in all
-   currently-shipping versions.
- * Support asynchronous disconnects by breaking the socket only. This should
-   prevent flakiness from multiple threads concurrently accessing a stream.
-
-## Version 1.5.3
-
-_2014-03-29_
-
- * Fix bug where the Content-Length header was not always dropped when
-   following a redirect from a POST to a GET.
- * Implement basic support for `Thread.interrupt()`. OkHttp now checks
-   for an interruption before doing a blocking call. If it is interrupted,
-   it throws an `InterruptedIOException`.
-
-## Version 1.5.2
-
-_2014-03-17_
-
- * Fix bug where deleting a file that was absent from the `HttpResponseCache`
-   caused an IOException.
- * Fix bug in HTTP/2 where our HPACK decoder wasn't emitting entries in
-   certain eviction scenarios, leading to dropped response headers.
-
-## Version 1.5.1
-
-_2014-03-11_
-
- * Fix 1.5.0 regression where connections should not have been recycled.
- * Fix 1.5.0 regression where transparent Gzip was broken by attempting to
-   recover from another I/O failure.
- * Fix problems where spdy/3.1 headers may not have been compressed properly.
- * Fix problems with spdy/3.1 and http/2 where the wrong window size was being
-   used.
- * Fix 1.5.0 regression where conditional cache responses could corrupt the
-   connection pool.
-
-
-## Version 1.5.0
-
-_2014-03-07_
-
-
-##### OkHttp no longer uses the default SSL context.
-
-Applications that want to use the global SSL context with OkHttp should configure their
-OkHttpClient instances with the following:
-
-```java
-okHttpClient.setSslSocketFactory(HttpsURLConnection.getDefaultSSLSocketFactory());
-```
-
-A simpler solution is to avoid the shared default SSL socket factory. Instead, if you
-need to customize SSL, do so for your specific OkHttpClient instance only.
-
-##### Synthetic headers have changed
-
-Previously OkHttp added a synthetic response header, `OkHttp-Selected-Transport`. It
-has been replaced with a new synthetic header, `OkHttp-Selected-Protocol`.
-
-##### Changes
-
- * New: Support for `HTTP-draft-09/2.0`.
- * New: Support for `spdy/3.1`. Dropped support for `spdy/3`.
- * New: Use ALPN on Android platforms that support it (4.4+)
- * New: CacheControl model and parser.
- * New: Protocol selection in MockWebServer.
- * Fix: Route selection shouldn't use TLS modes that we know will fail.
- * Fix: Cache SPDY responses even if the response body is closed prematurely.
- * Fix: Use strict timeouts when aborting a download.
- * Fix: Support Shoutcast HTTP responses like `ICY 200 OK`.
- * Fix: Don't unzip if there isn't a response body.
- * Fix: Don't leak gzip streams on redirects.
- * Fix: Don't do DNS lookups on invalid hosts.
- * Fix: Exhaust the underlying stream when reading gzip streams.
- * Fix: Support the `PATCH` method.
- * Fix: Support request bodies on `DELETE` method.
- * Fix: Drop the `okhttp-protocols` module.
- * Internal: Replaced internal byte array buffers with pooled buffers ("OkBuffer").
-
-
-## Version 1.3.0
-
-_2014-01-11_
-
- * New: Support for "PATCH" HTTP method in client and MockWebServer.
- * Fix: Drop `Content-Length` header when redirected from POST to GET.
- * Fix: Correctly read cached header entries with malformed header names.
- * Fix: Do not directly support any authentication schemes other than "Basic".
- * Fix: Respect read timeouts on recycled connections.
- * Fix: Transmit multiple cookie values as a single header with delimiter.
- * Fix: Ensure `null` is never returned from a connection's `getHeaderFields()`.
- * Fix: Persist proper `Content-Encoding` header to cache for GZip responses.
- * Fix: Eliminate rare race condition in SPDY streams that would prevent connection reuse.
- * Fix: Change HTTP date formats to UTC to conform to RFC2616 section 3.3.
- * Fix: Support SPDY header blocks with trailing bytes.
- * Fix: Allow `;` as separator for `Cache-Control` header.
- * Fix: Correct bug where HTTPS POST requests were always automatically buffered.
- * Fix: Honor read timeout when parsing SPDY headers.
-
-
-## Version 1.2.1
-
-_2013-08-23_
-
- * Resolve issue with 'jar-with-dependencies' artifact creation.
- * Fix: Support empty SPDY header values.
-
-
-## Version 1.2.0
-
-_2013-08-11_
-
- *  New APIs on OkHttpClient to set default timeouts for connect and read.
- *  Fix bug when caching SPDY responses.
- *  Fix a bug with SPDY plus half-closed streams. (thanks kwuollett)
- *  Fix a bug in `Content-Length` reporting for gzipped streams in the Apache
-    HTTP client adapter. (thanks kwuollett)
- *  Work around the Alcatel `getByInetAddress` bug (thanks k.kocel)
- *  Be more aggressive about testing pooled sockets before reuse. (thanks
-    warpspin)
- *  Include `Content-Type` and `Content-Encoding` in the Apache HTTP client
-    adapter. (thanks kwuollett)
- *  Add a media type class to OkHttp.
- *  Change custom header prefix:
-
-    ```
-    X-Android-Sent-Millis is now OkHttp-Sent-Millis
-    X-Android-Received-Millis is now OkHttp-Received-Millis
-    X-Android-Response-Source is now OkHttp-Response-Source
-    X-Android-Selected-Transport is now OkHttp-Selected-Transport
-    ```
- *  Improve cache invalidation for POST-like requests.
- *  Bring MockWebServer into OkHttp and teach it SPDY.
-
-
-## Version 1.1.1
-
-_2013-06-23_
-
- * Fix: ClassCastException when caching responses that were redirected from
-   HTTP to HTTPS.
-
-
-## Version 1.1.0
-
-_2013-06-15_
-
- * Fix: Connection reuse was broken for most HTTPS connections due to a bug in
-   the way the hostname verifier was selected.
- * Fix: Locking bug in SpdyConnection.
- * Fix: Ignore null header values (for compatibility with HttpURLConnection).
- * Add URLStreamHandlerFactory support so that `URL.openConnection()` uses
-   OkHttp.
- * Expose the transport ("http/1.1", "spdy/3", etc.) via magic request headers.
-   Use `X-Android-Transports` to write the preferred transports and
-   `X-Android-Selected-Transport` to read the negotiated transport.
-
-
-## Version 1.0.2
-
-_2013-05-11_
-
- * Fix: Remove use of Java 6-only APIs.
- * Fix: Properly handle exceptions from `NetworkInterface` when querying MTU.
- * Fix: Ensure MTU has a reasonable default and upper-bound.
-
-
-## Version 1.0.1
-
-_2013-05-06_
-
- * Correct casing of SSL in method names (`getSslSocketFactory`/`setSslSocketFactory`).
-
-
-## Version 1.0.0
-
-_2013-05-06_
-
-Initial release.
-
diff --git a/build.gradle b/build.gradle
deleted file mode 100644
index 1020c0b6d0..0000000000
--- a/build.gradle
+++ /dev/null
@@ -1,14 +0,0 @@
-apply plugin: 'java'
-
-sourceSets {
-    main.java.srcDirs += 'okhttp/src/main/java'
-    main.java.srcDirs += 'okhttp/src/main/java-templates'
-
-    main.java.srcDirs += 'okhttp-urlconnection/src/main/java'
-
-}
-
-dependencies {
-    compile fileTree(dir: 'libs', include: ['*.jar'])
-    compile project(':okio')
-}
\ No newline at end of file
diff --git a/checkstyle.xml b/checkstyle.xml
deleted file mode 100644
index f725be3381..0000000000
--- a/checkstyle.xml
+++ /dev/null
@@ -1,133 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE module PUBLIC
-    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
-    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
-
-<module name="Checker">
-  <module name="NewlineAtEndOfFile"/>
-  <module name="FileLength"/>
-  <module name="FileTabCharacter"/>
-
-  <!-- Trailing spaces -->
-  <module name="RegexpSingleline">
-    <property name="format" value="\s+$"/>
-    <property name="message" value="Line has trailing spaces."/>
-  </module>
-
-  <!-- Space after 'for' and 'if' -->
-  <module name="RegexpSingleline">
-    <property name="format" value="^\s*(for|if)\b[^ ]"/>
-    <property name="message" value="Space needed before opening parenthesis."/>
-  </module>
-
-  <!-- For each spacing -->
-  <module name="RegexpSingleline">
-    <property name="format" value="^\s*for \(.*?([^ ]:|:[^ ])"/>
-    <property name="message" value="Space needed around ':' character."/>
-  </module>
-
-  <module name="TreeWalker">
-    <property name="cacheFile" value="${checkstyle.cache.file}"/>
-
-    <!-- Checks for Javadoc comments.                     -->
-    <!-- See http://checkstyle.sf.net/config_javadoc.html -->
-    <!--module name="JavadocMethod"/-->
-    <!--module name="JavadocType"/-->
-    <!--module name="JavadocVariable"/-->
-    <module name="JavadocStyle"/>
-
-
-    <!-- Checks for Naming Conventions.                  -->
-    <!-- See http://checkstyle.sf.net/config_naming.html -->
-    <!--<module name="ConstantName"/>-->
-    <module name="LocalFinalVariableName"/>
-    <module name="LocalVariableName"/>
-    <module name="MemberName"/>
-    <module name="MethodName"/>
-    <module name="PackageName"/>
-    <module name="ParameterName"/>
-    <module name="StaticVariableName"/>
-    <module name="TypeName"/>
-
-
-    <!-- Checks for imports                              -->
-    <!-- See http://checkstyle.sf.net/config_import.html -->
-    <module name="AvoidStarImport"/>
-    <module name="IllegalImport"/>
-    <!-- defaults to sun.* packages -->
-    <module name="RedundantImport"/>
-    <module name="UnusedImports">
-      <property name="processJavadoc" value="true"/>
-    </module>
-
-
-    <!-- Checks for Size Violations.                    -->
-    <!-- See http://checkstyle.sf.net/config_sizes.html -->
-    <module name="LineLength">
-      <property name="max" value="100"/>
-    </module>
-    <module name="MethodLength"/>
-
-
-    <!-- Checks for whitespace                               -->
-    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
-    <module name="GenericWhitespace"/>
-    <!--<module name="EmptyForIteratorPad"/>-->
-    <module name="MethodParamPad"/>
-    <!--<module name="NoWhitespaceAfter"/>-->
-    <!--<module name="NoWhitespaceBefore"/>-->
-    <module name="OperatorWrap"/>
-    <module name="ParenPad"/>
-    <module name="TypecastParenPad"/>
-    <module name="WhitespaceAfter"/>
-    <module name="WhitespaceAround"/>
-
-
-    <!-- Modifier Checks                                    -->
-    <!-- See http://checkstyle.sf.net/config_modifiers.html -->
-    <module name="ModifierOrder"/>
-    <module name="RedundantModifier"/>
-
-
-    <!-- Checks for blocks. You know, those {}'s         -->
-    <!-- See http://checkstyle.sf.net/config_blocks.html -->
-    <module name="AvoidNestedBlocks"/>
-    <!--module name="EmptyBlock"/-->
-    <module name="LeftCurly"/>
-    <!--<module name="NeedBraces"/>-->
-    <module name="RightCurly"/>
-
-
-    <!-- Checks for common coding problems               -->
-    <!-- See http://checkstyle.sf.net/config_coding.html -->
-    <!--module name="AvoidInlineConditionals"/-->
-    <module name="CovariantEquals"/>
-    <module name="EmptyStatement"/>
-    <!--<module name="EqualsAvoidNull"/>-->
-    <module name="EqualsHashCode"/>
-    <!--module name="HiddenField"/-->
-    <module name="IllegalInstantiation"/>
-    <!--module name="InnerAssignment"/-->
-    <!--module name="MagicNumber"/-->
-    <!--module name="MissingSwitchDefault"/-->
-    <module name="RedundantThrows"/>
-    <module name="SimplifyBooleanExpression"/>
-    <module name="SimplifyBooleanReturn"/>
-
-    <!-- Checks for class design                         -->
-    <!-- See http://checkstyle.sf.net/config_design.html -->
-    <!--module name="DesignForExtension"/-->
-    <!--<module name="FinalClass"/>-->
-    <module name="HideUtilityClassConstructor"/>
-    <module name="InterfaceIsType"/>
-    <!--module name="VisibilityModifier"/-->
-
-
-    <!-- Miscellaneous other checks.                   -->
-    <!-- See http://checkstyle.sf.net/config_misc.html -->
-    <module name="ArrayTypeStyle"/>
-    <!--module name="FinalParameters"/-->
-    <!--module name="TodoComment"/-->
-    <module name="UpperEll"/>
-  </module>
-</module>
diff --git a/okhttp.iml b/okhttp.iml
deleted file mode 100644
index 2b2f6daa9d..0000000000
--- a/okhttp.iml
+++ /dev/null
@@ -1,35 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module external.linked.project.path="$MODULE_DIR$" external.root.project.path="$MODULE_DIR$/.." external.system.id="GRADLE" external.system.module.group="Taplytics" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
-  <component name="FacetManager">
-    <facet type="android-gradle" name="Android-Gradle">
-      <configuration>
-        <option name="GRADLE_PROJECT_PATH" value=":okhttp" />
-      </configuration>
-    </facet>
-    <facet type="java-gradle" name="Java-Gradle">
-      <configuration>
-        <option name="BUILD_FOLDER_PATH" />
-      </configuration>
-    </facet>
-  </component>
-  <component name="NewModuleRootManager" inherit-compiler-output="false">
-    <output url="file://$MODULE_DIR$/build/classes/main" />
-    <output-test url="file://$MODULE_DIR$/build/classes/test" />
-    <exclude-output />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/okhttp/src/main/java-templates" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/okhttp/src/main/java" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/okhttp-urlconnection/src/main/java" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
-      <excludeFolder url="file://$MODULE_DIR$/.gradle" />
-      <excludeFolder url="file://$MODULE_DIR$/build" />
-    </content>
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="module" module-name="okio" exported="" />
-  </component>
-</module>
-
