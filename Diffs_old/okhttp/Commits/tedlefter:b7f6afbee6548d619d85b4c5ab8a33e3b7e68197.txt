diff --git a/okhttp/src/main/java/okhttp3/PingPayloadProvider.java b/okhttp/src/main/java/okhttp3/PingPayloadProvider.java
index a3cd08f396..e69f89ef79 100644
--- a/okhttp/src/main/java/okhttp3/PingPayloadProvider.java
+++ b/okhttp/src/main/java/okhttp3/PingPayloadProvider.java
@@ -1,4 +1,6 @@
 /*
+ * Copyright (C) 2014 Square, Inc.
+ *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
@@ -19,6 +21,13 @@
  * Provides payload data to be sent with the ping message.
  */
 public interface PingPayloadProvider {
+
+    PingPayloadProvider EMPTY = new PingPayloadProvider() {
+        @java.lang.Override
+        public ByteString getPayload() {
+            return ByteString.EMPTY;
+        }
+    };
+
     ByteString getPayload();
 }
-
diff --git a/okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.java b/okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.java
index 2e83f9c8df..69c1f8287a 100644
--- a/okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.java
+++ b/okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.java
@@ -150,13 +150,8 @@ public RealWebSocket(Request request, WebSocketListener listener, Random random,
     this.listener = listener;
     this.random = random;
     this.pingIntervalMillis = pingIntervalMillis;
-    if(pingPayloadProvider == null) {
-      this.pingPayloadProvider = new PingPayloadProvider() {
-        @Override
-        public ByteString getPayload() {
-          return ByteString.EMPTY;
-        }
-      };
+    if (pingPayloadProvider == null) {
+      this.pingPayloadProvider = PingPayloadProvider.EMPTY;
     } else {
       this.pingPayloadProvider = pingPayloadProvider;
     }
