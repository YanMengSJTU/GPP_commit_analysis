diff --git a/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java
index bfa53ecc71..dc635137ea 100644
--- a/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java
@@ -342,19 +342,25 @@ private static Response stripBody(Response response) {
 
   /** Connect to the origin server either directly or via a proxy. */
   private void connect() throws RequestException, RouteException {
-    if (connection != null) throw new IllegalStateException();
+    if (connection != null) throw new IllegalStateException("Error, connection should be null");
 
-    if (routeSelector == null) {
-      address = createAddress(client, networkRequest);
-      try {
-        routeSelector = RouteSelector.get(address, networkRequest, client);
-      } catch (IOException e) {
-        throw new RequestException(e);
+    // Block other threads so that one connection will be created per address (AND-185)
+    synchronized (client.getConnectionPool()) {
+      if (routeSelector == null) {
+        address = createAddress(client, networkRequest);
+        try {
+          routeSelector = RouteSelector.get(address, networkRequest, client);
+        } catch (IOException e) {
+          throw new RequestException(e);
+        }
+      } else {
+        // Set the address from the existing route selector
+        address = routeSelector.getAddress();
       }
-    }
 
-    connection = nextConnection();
-    route = connection.getRoute();
+      connection = nextConnection();
+      route = connection.getRoute();
+    }
   }
 
   /**
diff --git a/okhttp/src/main/java/com/squareup/okhttp/internal/http/RouteSelector.java b/okhttp/src/main/java/com/squareup/okhttp/internal/http/RouteSelector.java
index 16448e4dea..c924715141 100644
--- a/okhttp/src/main/java/com/squareup/okhttp/internal/http/RouteSelector.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/RouteSelector.java
@@ -15,6 +15,8 @@
  */
 package com.squareup.okhttp.internal.http;
 
+import static com.squareup.okhttp.internal.Util.getEffectivePort;
+
 import com.squareup.okhttp.Address;
 import com.squareup.okhttp.OkHttpClient;
 import com.squareup.okhttp.Request;
@@ -22,6 +24,7 @@
 import com.squareup.okhttp.internal.Internal;
 import com.squareup.okhttp.internal.Network;
 import com.squareup.okhttp.internal.RouteDatabase;
+
 import java.io.IOException;
 import java.net.InetAddress;
 import java.net.InetSocketAddress;
@@ -34,8 +37,6 @@
 import java.util.List;
 import java.util.NoSuchElementException;
 
-import static com.squareup.okhttp.internal.Util.getEffectivePort;
-
 /**
  * Selects routes to connect to an origin server. Each connection requires a
  * choice of proxy server, IP address, and TLS mode. Connections may also be
@@ -233,4 +234,8 @@ private boolean hasNextPostponed() {
   private Route nextPostponed() {
     return postponedRoutes.remove(0);
   }
+
+  public Address getAddress() {
+    return address;
+  }
 }
