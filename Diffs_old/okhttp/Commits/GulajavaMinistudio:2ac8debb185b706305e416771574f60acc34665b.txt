diff --git a/okhttp/src/main/java/okhttp3/EventListener.kt b/okhttp/src/main/java/okhttp3/EventListener.kt
index f52fa00af2..17a55dc0a4 100644
--- a/okhttp/src/main/java/okhttp3/EventListener.kt
+++ b/okhttp/src/main/java/okhttp3/EventListener.kt
@@ -329,7 +329,7 @@ abstract class EventListener {
    * Will only be invoked for requests having a response body e.g. won't be invoked for a web socket
    * upgrade.
    *
-   * This method is always invoked after [requestBodyStart].
+   * This method is always invoked after [responseBodyStart].
    */
   open fun responseBodyEnd(
     call: Call,
diff --git a/okhttp/src/test/java/okhttp3/CacheTest.java b/okhttp/src/test/java/okhttp3/CacheTest.java
index 29090ec1a2..ca14c71cd4 100644
--- a/okhttp/src/test/java/okhttp3/CacheTest.java
+++ b/okhttp/src/test/java/okhttp3/CacheTest.java
@@ -1931,7 +1931,8 @@ private RecordedRequest assertClientSuppliedCondition(MockResponse seed, String
     assertThat(response2.code()).isEqualTo(HttpURLConnection.HTTP_OK);
     assertThat(response2.body().string()).isEqualTo("A");
     assertThat(response2.header("Allow")).isEqualTo("GET, HEAD");
-    assertThat((double) (response2.receivedResponseAtMillis() - t1)).isCloseTo(
+    Long originalTimestamp = response2.receivedResponseAtMillis();
+    assertThat((double) (originalTimestamp - t1)).isCloseTo(
         (double) 0, offset(250.0));
 
     // A full cache hit reads the cache.
@@ -1940,8 +1941,7 @@ private RecordedRequest assertClientSuppliedCondition(MockResponse seed, String
     Response response3 = get(server.url("/a"));
     assertThat(response3.body().string()).isEqualTo("A");
     assertThat(response3.header("Allow")).isEqualTo("GET, HEAD");
-    assertThat((double) (response3.receivedResponseAtMillis() - t1)).isCloseTo(
-        (double) 0, offset(250.0));
+    assertThat(response3.receivedResponseAtMillis()).isEqualTo(originalTimestamp);
 
     assertThat(server.getRequestCount()).isEqualTo(2);
   }
diff --git a/okhttp/src/test/java/okhttp3/CallTest.java b/okhttp/src/test/java/okhttp3/CallTest.java
index b0eb67dffb..767d74045b 100644
--- a/okhttp/src/test/java/okhttp3/CallTest.java
+++ b/okhttp/src/test/java/okhttp3/CallTest.java
@@ -3309,7 +3309,7 @@ public void cancelWhileRequestHeadersAreSent_HTTP_2() throws Exception {
         .build();
 
     try {
-      Response response = client.newCall(request).execute();
+      client.newCall(request).execute();
       fail();
     } catch (IOException expected) {
     }
diff --git a/okhttp/src/test/java/okhttp3/ConnectionSpecTest.java b/okhttp/src/test/java/okhttp3/ConnectionSpecTest.java
index 6663416032..bc705d321d 100644
--- a/okhttp/src/test/java/okhttp3/ConnectionSpecTest.java
+++ b/okhttp/src/test/java/okhttp3/ConnectionSpecTest.java
@@ -176,7 +176,7 @@
   @Test public void tls_stringCiphersAndVersions() throws Exception {
     // Supporting arbitrary input strings allows users to enable suites and versions that are not
     // yet known to the library, but are supported by the platform.
-    ConnectionSpec tlsSpec = new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)
+    new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)
         .cipherSuites("MAGIC-CIPHER")
         .tlsVersions("TLS9k")
         .build();
diff --git a/okhttp/src/test/java/okhttp3/EventListenerTest.java b/okhttp/src/test/java/okhttp3/EventListenerTest.java
index f5a8fb3ae9..655891b743 100644
--- a/okhttp/src/test/java/okhttp3/EventListenerTest.java
+++ b/okhttp/src/test/java/okhttp3/EventListenerTest.java
@@ -309,18 +309,6 @@ private void assertBytesReadWritten(RecordingEventListener listener,
     };
   }
 
-  private Matcher<Long> lessThan(final long value) {
-    return new BaseMatcher<Long>() {
-      @Override public void describeTo(Description description) {
-        description.appendText("< " + value);
-      }
-
-      @Override public boolean matches(Object o) {
-        return ((Long) o) < value;
-      }
-    };
-  }
-
   private Matcher<Response> matchesProtocol(final Protocol protocol) {
     return new BaseMatcher<Response>() {
       @Override public void describeTo(Description description) {
diff --git a/okhttp/src/test/java/okhttp3/HeadersTest.java b/okhttp/src/test/java/okhttp3/HeadersTest.java
index 4e10c46c12..6ada63c491 100644
--- a/okhttp/src/test/java/okhttp3/HeadersTest.java
+++ b/okhttp/src/test/java/okhttp3/HeadersTest.java
@@ -133,7 +133,7 @@
 
   @Test public void addUnsafeNonAsciiRejectsUnicodeName() {
     try {
-      Headers headers = new Headers.Builder()
+      new Headers.Builder()
           .addUnsafeNonAscii("h√©ader1", "value1")
           .build();
       fail("Should have complained about invalid value");
diff --git a/okhttp/src/test/java/okhttp3/internal/connection/ConnectionPoolTest.java b/okhttp/src/test/java/okhttp3/internal/connection/ConnectionPoolTest.java
index 06e92889c5..cd2b4cbba1 100644
--- a/okhttp/src/test/java/okhttp3/internal/connection/ConnectionPoolTest.java
+++ b/okhttp/src/test/java/okhttp3/internal/connection/ConnectionPoolTest.java
@@ -187,7 +187,7 @@
     TaskRunner realTaskRunner = TaskRunner.INSTANCE;
     RealConnectionPool pool = new RealConnectionPool(
         realTaskRunner, 2, 100L, TimeUnit.NANOSECONDS);
-    RealConnection c1 = newConnection(pool, routeA1, Long.MAX_VALUE);
+    newConnection(pool, routeA1, Long.MAX_VALUE);
 
     assertThat(realTaskRunner.activeQueues()).isNotEmpty();
 
diff --git a/okhttp/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java b/okhttp/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java
index 06daebc53f..ef6e5a6da9 100644
--- a/okhttp/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java
+++ b/okhttp/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java
@@ -1817,11 +1817,6 @@ private void assertStreamData(String expected, Source source) throws IOException
     assertThat(actual).isEqualTo(expected);
   }
 
-  /** Reads {@code prefix} from {@code source}. */
-  private void assertStreamPrefix(String prefix, BufferedSource source) throws IOException {
-    assertThat(source.readUtf8(Utf8.size(prefix))).isEqualTo(prefix);
-  }
-
   /**
    * Returns true when all work currently in progress by the watchdog have completed. This method
    * creates more work for the watchdog and waits for that work to be executed. When it is, we know
