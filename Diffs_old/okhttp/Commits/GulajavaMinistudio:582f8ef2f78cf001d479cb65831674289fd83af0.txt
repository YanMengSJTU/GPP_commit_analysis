diff --git a/CHANGELOG.md b/CHANGELOG.md
index 887bbc5e04..7b2d918116 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,6 +1,47 @@
 Change Log
 ==========
 
+## Version 4.2.0
+
+_2019-09-10_
+
+ *  New: API to decode a certificate and private key to create a `HeldCertificate`. This accepts a
+    string containing both a certificate and PKCS #8-encoded private key.
+
+    ```
+    val heldCertificate = HeldCertificate.decode("""
+        |-----BEGIN CERTIFICATE-----
+        |MIIBYTCCAQegAwIBAgIBKjAKBggqhkjOPQQDAjApMRQwEgYDVQQLEwtlbmdpbmVl
+        |cmluZzERMA8GA1UEAxMIY2FzaC5hcHAwHhcNNzAwMTAxMDAwMDA1WhcNNzAwMTAx
+        |MDAwMDEwWjApMRQwEgYDVQQLEwtlbmdpbmVlcmluZzERMA8GA1UEAxMIY2FzaC5h
+        |cHAwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASda8ChkQXxGELnrV/oBnIAx3dD
+        |ocUOJfdz4pOJTP6dVQB9U3UBiW5uSX/MoOD0LL5zG3bVyL3Y6pDwKuYvfLNhoyAw
+        |HjAcBgNVHREBAf8EEjAQhwQBAQEBgghjYXNoLmFwcDAKBggqhkjOPQQDAgNIADBF
+        |AiAyHHg1N6YDDQiY920+cnI5XSZwEGhAtb9PYWO8bLmkcQIhAI2CfEZf3V/obmdT
+        |yyaoEufLKVXhrTQhRfodTeigi4RX
+        |-----END CERTIFICATE-----
+        |-----BEGIN PRIVATE KEY-----
+        |MEECAQAwEwYHKoZIzj0CAQYIKoZIzj0DAQcEJzAlAgEBBCA7ODT0xhGSNn4ESj6J
+        |lu/GJQZoU9lDrCPeUcQ28tzOWw==
+        |-----END PRIVATE KEY-----
+        """.trimMargin())
+    val handshakeCertificates = HandshakeCertificates.Builder()
+        .heldCertificate(heldCertificate)
+        .build()
+    val server = MockWebServer()
+    server.useHttps(handshakeCertificates.sslSocketFactory(), false)
+    ```
+
+    Get these strings with `HeldCertificate.certificatePem()` and `privateKeyPkcs8Pem()`.
+ *  Fix: Handshake now returns peer certificates in canonical order: each certificate is signed by
+    the certificate that follows and the last certificate is signed by a trusted root.
+ *  Fix: Don't lose HTTP/2 flow control bytes when incoming data races with a stream close. If this
+    happened enough then eventually the connection would stall.
+ *  Fix: Acknowledge and apply inbound HTTP/2 settings atomically. Previously we had a race where we
+    could use new flow control capacity before acknowledging it, causing strict HTTP/2 servers to
+    fail the call.
+
+
 ## Version 4.1.1
 
 _2019-09-05_
diff --git a/README.md b/README.md
index 4077be843d..b8d8c802cf 100644
--- a/README.md
+++ b/README.md
@@ -100,7 +100,7 @@ Releases
 Our [change log][changelog] has release history.
 
 ```kotlin
-implementation("com.squareup.okhttp3:okhttp:4.1.1")
+implementation("com.squareup.okhttp3:okhttp:4.2.0")
 ```
 
 Snapshot builds are [available][snap].
@@ -120,7 +120,7 @@ MockWebServer
 OkHttp includes a library for testing HTTP, HTTPS, and HTTP/2 clients.
 
 ```kotlin
-testImplementation("com.squareup.okhttp3:mockwebserver:4.1.1")
+testImplementation("com.squareup.okhttp3:mockwebserver:4.2.0")
 ```
 
 
diff --git a/gradle.properties b/gradle.properties
index 1a261d695b..d2bd5bf843 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,7 +1,7 @@
 org.gradle.jvmargs='-Dfile.encoding=UTF-8'
 
 GROUP=com.squareup.okhttp3
-VERSION_NAME=4.2.0-SNAPSHOT
+VERSION_NAME=4.2.0
 
 POM_URL=https://github.com/square/okhttp
 POM_SCM_URL=https://github.com/square/okhttp
diff --git a/mockwebserver/README.md b/mockwebserver/README.md
index 5843aa1558..454b760a0e 100644
--- a/mockwebserver/README.md
+++ b/mockwebserver/README.md
@@ -142,7 +142,7 @@ server.setDispatcher(dispatcher);
 ### Download
 
 ```kotlin
-testImplementation("com.squareup.okhttp3:mockwebserver:4.1.1")
+testImplementation("com.squareup.okhttp3:mockwebserver:4.2.0")
 ```
 
 ### License
diff --git a/okhttp-brotli/README.md b/okhttp-brotli/README.md
index 95d73f722e..27bdc13619 100644
--- a/okhttp-brotli/README.md
+++ b/okhttp-brotli/README.md
@@ -14,7 +14,7 @@ OkHttpClient client = new OkHttpClient.Builder()
 ```
 
 ```kotlin
-implementation("com.squareup.okhttp3:okhttp-brotli:4.1.1")
+implementation("com.squareup.okhttp3:okhttp-brotli:4.2.0")
 ```
 
  [1]: https://github.com/google/brotli
diff --git a/okhttp-dnsoverhttps/README.md b/okhttp-dnsoverhttps/README.md
index bd9c0ea601..92e3cc0df8 100644
--- a/okhttp-dnsoverhttps/README.md
+++ b/okhttp-dnsoverhttps/README.md
@@ -7,5 +7,5 @@ API is not considered stable and may change at any time.
 ### Download
 
 ```kotlin
-testImplementation("com.squareup.okhttp3:okhttp-dnsoverhttps:4.1.1")
+testImplementation("com.squareup.okhttp3:okhttp-dnsoverhttps:4.2.0")
 ```
diff --git a/okhttp-logging-interceptor/README.md b/okhttp-logging-interceptor/README.md
index e09ca8fd50..358938ed2d 100644
--- a/okhttp-logging-interceptor/README.md
+++ b/okhttp-logging-interceptor/README.md
@@ -37,7 +37,7 @@ Download
 --------
 
 ```kotlin
-implementation("com.squareup.okhttp3:logging-interceptor:4.1.1")
+implementation("com.squareup.okhttp3:logging-interceptor:4.2.0")
 ```
 
 
diff --git a/okhttp-sse/README.md b/okhttp-sse/README.md
index a8d7227903..18168bcf09 100644
--- a/okhttp-sse/README.md
+++ b/okhttp-sse/README.md
@@ -7,5 +7,5 @@ API is not considered stable and may change at any time.
 ### Download
 
 ```kotlin
-testImplementation("com.squareup.okhttp3:okhttp-sse:4.1.1")
+testImplementation("com.squareup.okhttp3:okhttp-sse:4.2.0")
 ```
diff --git a/okhttp-tls/README.md b/okhttp-tls/README.md
index ec3f7857dd..ecdcc38137 100644
--- a/okhttp-tls/README.md
+++ b/okhttp-tls/README.md
@@ -227,7 +227,7 @@ Download
 --------
 
 ```kotlin
-implementation("com.squareup.okhttp3:okhttp-tls:4.1.1")
+implementation("com.squareup.okhttp3:okhttp-tls:4.2.0")
 ```
 
  [held_certificate]: http://square.github.io/okhttp/4.x/okhttp-tls/okhttp3.tls/-held-certificate/
diff --git a/okhttp-urlconnection/README.md b/okhttp-urlconnection/README.md
index fffe6dbd9c..74dac40dc0 100644
--- a/okhttp-urlconnection/README.md
+++ b/okhttp-urlconnection/README.md
@@ -6,5 +6,5 @@ This module integrates OkHttp with `Authenticator` and `CookieHandler` from `jav
 ### Download
 
 ```kotlin
-testImplementation("com.squareup.okhttp3:okhttp-urlconnection:4.1.1")
+testImplementation("com.squareup.okhttp3:okhttp-urlconnection:4.2.0")
 ```
