diff --git a/okhttp/src/main/java/com/squareup/okhttp/Connection.java b/okhttp/src/main/java/com/squareup/okhttp/Connection.java
index 80c50a51cd..4e0414ea11 100644
--- a/okhttp/src/main/java/com/squareup/okhttp/Connection.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java
@@ -63,7 +63,7 @@
   private final ConnectionPool pool;
   private final Route route;
 
-    private final ConnectionObserver connectionObserver;
+  private final ConnectionObserver connectionObserver;
   private Socket socket;
   private boolean connected = false;
   private HttpConnection httpConnection;
@@ -83,7 +83,7 @@
   public Connection(ConnectionPool pool, Route route) {
     this.pool = pool;
     this.route = route;
-      this.connectionObserver = pool.getConnectionObserver();
+    this.connectionObserver = pool.getConnectionObserver();
   }
 
   Object getOwner() {
@@ -201,9 +201,10 @@ private void upgradeToTls(Request tunnelRequest, int readTimeout, int writeTimeo
     if (protocol == Protocol.SPDY_3 || protocol == Protocol.HTTP_2) {
       sslSocket.setSoTimeout(0); // SPDY timeouts are set per-stream.
       spdyConnection = new SpdyConnection.Builder(route.address.getUriHost(), true, socket)
-              .connection(this)
-              .connectionObserver(connectionObserver)
-          .protocol(protocol).build();
+          .connection(this)
+          .connectionObserver(connectionObserver)
+          .protocol(protocol)
+          .build();
       spdyConnection.sendConnectionPreface();
     } else {
       httpConnection = new HttpConnection(pool, this, socket);
diff --git a/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java
index 369f70b6b1..9d9b17ffc0 100644
--- a/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java
@@ -76,7 +76,7 @@
   private final int maxIdleConnections;
   private final long keepAliveDurationNs;
 
-    private final ConnectionObserver connectionObserver;
+  private final ConnectionObserver connectionObserver;
   private final LinkedList<Connection> connections = new LinkedList<Connection>();
 
   /** We use a single background thread to cleanup expired connections. */
@@ -121,10 +121,10 @@ public ConnectionPool(int maxIdleConnections, long keepAliveDurationMs) {
     this(maxIdleConnections, keepAliveDurationMs, null);
   }
 
-    public ConnectionPool(int maxIdleConnections, long keepAliveDurationMs, ConnectionObserver connectionObserver) {
+  public ConnectionPool(int maxIdleConnections, long keepAliveDurationMs, ConnectionObserver connectionObserver) {
     this.maxIdleConnections = maxIdleConnections;
     this.keepAliveDurationNs = keepAliveDurationMs * 1000 * 1000;
-        this.connectionObserver = connectionObserver;
+    this.connectionObserver = connectionObserver;
   }
 
   /**
@@ -157,7 +157,7 @@ public static ConnectionPool getDefault() {
     return systemDefault;
   }
 
-    protected ConnectionObserver getConnectionObserver() {
+  protected ConnectionObserver getConnectionObserver() {
         return connectionObserver;
     }
 
