diff --git a/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java
index 9769b68f88..0161da4ba1 100644
--- a/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java
+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java
@@ -1202,6 +1202,20 @@ private void testClientConfiguredGzipContentEncodingAndConnectionReuse(TransferK
     assertEquals(0, server.takeRequest().getSequenceNumber()); // Connection is not pooled.
   }
 
+  @Test public void disableTransparentGzip() throws Exception {
+    client.setTransparentGzip(false);
+
+    server.enqueue(new MockResponse()
+        .setBody("a"));
+    server.play();
+
+    assertContent("a", client.open(server.getUrl("/")));
+
+    // no encoding header
+    RecordedRequest get = server.takeRequest();
+    assertContainsNoneMatching(get.getHeaders(), "Accept-Encoding.*");
+  }
+
   @Test public void endOfStreamResponseIsNotPooled() throws Exception {
     server.enqueue(new MockResponse()
         .setBody("{}")
diff --git a/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java
index cdb350007c..dc730ec53c 100644
--- a/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java
@@ -150,6 +150,7 @@
   private int connectTimeout;
   private int readTimeout;
   private int writeTimeout;
+  private boolean enabledTransparentGzip = true;
 
   public OkHttpClient() {
     routeDatabase = new RouteDatabase();
@@ -362,6 +363,21 @@ public ConnectionPool getConnectionPool() {
     return connectionPool;
   }
 
+  /**
+   * Allows transparent GZIP to be turned off to save extra bytes for
+   * small requests.
+   *
+   * <p>If unset, transparent GZIP compression is on.
+   */
+  public boolean hasTransparentGzip() {
+    return enabledTransparentGzip;
+  }
+
+  public OkHttpClient setTransparentGzip(boolean enabledTransparentGzip) {
+    this.enabledTransparentGzip = enabledTransparentGzip;
+    return this;
+  }
+
   /**
    * Configure this client to follow redirects from HTTPS to HTTP and from HTTP
    * to HTTPS.
diff --git a/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java
index fd74c5b8c6..b19fb1aa94 100644
--- a/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java
@@ -556,7 +556,7 @@ private void prepareRawRequestHeaders() throws IOException {
       result.header("Connection", "Keep-Alive");
     }
 
-    if (request.header("Accept-Encoding") == null) {
+    if (client.hasTransparentGzip() && request.header("Accept-Encoding") == null) {
       transparentGzip = true;
       result.header("Accept-Encoding", "gzip");
     }
