diff --git a/build.gradle b/build.gradle
index b8370febb5..d5e92e6fef 100644
--- a/build.gradle
+++ b/build.gradle
@@ -46,7 +46,6 @@ buildscript {
     classpath 'com.vanniktech:gradle-maven-publish-plugin:0.8.0'
     classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.7.1'
     classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
-    classpath 'com.jaredsburrows:gradle-checker-framework-plugin:0.2.3-SNAPSHOT'    
   }
 }
 
@@ -54,6 +53,7 @@ plugins {
   id 'ru.vyarus.animalsniffer' version '1.5.0'
   id 'com.github.johnrengelman.shadow' version '4.0.1'
   id 'me.champeau.gradle.japicmp' version '0.2.6'
+  id 'org.checkerframework' version '0.3.4'
 }
 
 allprojects {
@@ -80,9 +80,7 @@ subprojects { project ->
   sourceCompatibility = JavaVersion.VERSION_1_8
   targetCompatibility = JavaVersion.VERSION_1_8
 
-  
-  apply plugin: 'com.jaredsburrows.checkerframework'
-
+  apply plugin: 'org.checkerframework'
   apply plugin: 'checkstyle'
   checkstyleMain.exclude '**/CipherSuite.java'
   afterEvaluate {
@@ -123,8 +121,10 @@ subprojects { project ->
   checkerFramework {
     checkers = [
              'com.amazon.checkerframework.compliance.kms.ComplianceChecker',
-             'com.amazon.checkerframework.cryptopolicy.CryptoPolicyComplianceChecker'
+             'com.amazon.checkerframework.cryptopolicy.CryptoPolicyComplianceChecker',
+             'org.checkerframework.checker.https.HTTPSChecker'
     ]
+    excludeTests = true
     extraJavacArgs = ['-Xmaxerrs', '1000', '-AsuppressWarnings=cast.unsafe', "-Astubs=$rootProject.projectDir/stubs"]
   }
 
@@ -132,12 +132,14 @@ subprojects { project ->
   dependencies {
 //    errorproneJavac 'com.google.errorprone:javac:9+181-r4173-1'
 //    errorprone 'com.google.errorprone:error_prone_core:2.3.3'
-    
-    checkerFramework 'com.amazonaws:kms-compliance-checker:1.0'
-    checkerFramework 'com.amazonaws:aws-crypto-compliance-checker:1.0'
-    implementation 'com.amazonaws:aws-crypto-compliance-checker:1.0'  
+
+    checkerFramework 'software.amazon.checkerframework:aws-kms-compliance-checker:1.0.2'
+    checkerFramework 'software.amazon.checkerframework:aws-crypto-compliance-checker:1.0'
+    implementation 'software.amazon.checkerframework:aws-crypto-compliance-checker:1.0'
     checkerFramework 'org.checkerframework:checker:2.+'
     checkerFramework 'org.checkerframework:checker-qual:2.+'
+    checkerFramework 'org.checkerframework:HTTPSChecker:0.1-SNAPSHOT'
+    implementation 'org.checkerframework:HTTPSChecker:0.1-SNAPSHOT'
   }
 }
 
@@ -183,7 +185,7 @@ def alpnBootVersionForPatchVersion(String javaVersion, int patchVersion) {
       return '8.1.11.v20170118'
     case 161..181:
       return '8.1.12.v20180117'
-    case 191..202:
+    case 191..212:
       return '8.1.13.v20181017'
     default:
       throw new IllegalStateException("Unexpected Java version: ${javaVersion}")
diff --git a/okhttp/src/main/java/okhttp3/internal/Util.java b/okhttp/src/main/java/okhttp3/internal/Util.java
index fd15c72554..3c93a800ac 100644
--- a/okhttp/src/main/java/okhttp3/internal/Util.java
+++ b/okhttp/src/main/java/okhttp3/internal/Util.java
@@ -233,7 +233,10 @@ public static ThreadFactory threadFactory(String name, boolean daemon) {
     List<String> result = new ArrayList<>();
     for (String a : first) {
       for (String b : second) {
-        if (comparator.compare(a, b) == 0) {
+        @SuppressWarnings("https") int value = comparator.compare(a, b);
+        //FALSE POSITIVE: this code manifestly is generic over https, but the checker
+        //                issues a warning related to generics
+        if (value == 0) {
           result.add(a);
           break;
         }
