diff --git a/okhttp/pom.xml b/okhttp/pom.xml
index 09015c18e0..c8e55ce8a5 100644
--- a/okhttp/pom.xml
+++ b/okhttp/pom.xml
@@ -36,11 +36,6 @@
         <artifactId>templating-maven-plugin</artifactId>
         <version>1.0-alpha-3</version>
         <executions>
-          <execution>
-            <goals>
-              <goal>filter-sources</goal>
-            </goals>
-          </execution>
         </executions>
       </plugin>
       <plugin>
diff --git a/okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java b/okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java
index f1d0738598..98197950e4 100644
--- a/okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java
+++ b/okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java
@@ -50,7 +50,7 @@
 import okhttp3.Route;
 import okhttp3.internal.Internal;
 import okhttp3.internal.Util;
-import okhttp3.internal.Version;
+//import okhttp3.internal.Version;
 import okhttp3.internal.http.HttpCodec;
 import okhttp3.internal.http.HttpHeaders;
 import okhttp3.internal.http1.Http1Codec;
@@ -407,7 +407,7 @@ private Request createTunnelRequest() {
         .url(route.address().url())
         .header("Host", Util.hostHeader(route.address().url(), true))
         .header("Proxy-Connection", "Keep-Alive") // For HTTP/1.0 proxies like Squid.
-        .header("User-Agent", Version.userAgent())
+        //.header("User-Agent", Version.userAgent())
         .build();
   }
 
diff --git a/okhttp/src/main/java/okhttp3/internal/http/BridgeInterceptor.java b/okhttp/src/main/java/okhttp3/internal/http/BridgeInterceptor.java
index c10dc34cdc..344c26f309 100644
--- a/okhttp/src/main/java/okhttp3/internal/http/BridgeInterceptor.java
+++ b/okhttp/src/main/java/okhttp3/internal/http/BridgeInterceptor.java
@@ -26,7 +26,7 @@
 import okhttp3.Request;
 import okhttp3.RequestBody;
 import okhttp3.Response;
-import okhttp3.internal.Version;
+//import okhttp3.internal.Version;
 import okio.GzipSource;
 import okio.Okio;
 
@@ -86,9 +86,9 @@ public BridgeInterceptor(CookieJar cookieJar) {
       requestBuilder.header("Cookie", cookieHeader(cookies));
     }
 
-    if (userRequest.header("User-Agent") == null) {
-      requestBuilder.header("User-Agent", Version.userAgent());
-    }
+//    if (userRequest.header("User-Agent") == null) {
+//      requestBuilder.header("User-Agent", Version.userAgent());
+//    }
 
     Response networkResponse = chain.proceed(requestBuilder.build());
 
diff --git a/okhttp/src/main/java/okhttp3/internal/tls/OkHostnameVerifier.java b/okhttp/src/main/java/okhttp3/internal/tls/OkHostnameVerifier.java
index 7441abadad..46234ef98e 100644
--- a/okhttp/src/main/java/okhttp3/internal/tls/OkHostnameVerifier.java
+++ b/okhttp/src/main/java/okhttp3/internal/tls/OkHostnameVerifier.java
@@ -36,12 +36,17 @@
  */
 public final class OkHostnameVerifier implements HostnameVerifier {
   public static final OkHostnameVerifier INSTANCE = new OkHostnameVerifier();
+  private String[] ipVerifed;
 
   private static final int ALT_DNS_NAME = 2;
   private static final int ALT_IPA_NAME = 7;
 
   private OkHostnameVerifier() {
   }
+  
+  public void setIpVeryfed(String[] ips) {
+	  ipVerifed = ips;
+  }
 
   @Override
   public boolean verify(String host, SSLSession session) {
@@ -67,6 +72,13 @@ private boolean verifyIpAddress(String ipAddress, X509Certificate certificate) {
         return true;
       }
     }
+    
+    for (String ip : ipVerifed) {
+		if (ipAddress.equalsIgnoreCase(ip)) {
+			return true;
+		}
+	}
+    
     return false;
   }
 
