diff --git a/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java
index 4f02f9c0a5..8701af033b 100644
--- a/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java
+++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java
@@ -474,10 +474,9 @@ static String extractStatusLine(Map<String, List<String>> javaResponseHeaders)
    * Creates an OkHttp Response.Body containing the supplied information.
    */
   private static ResponseBody createOkBody(final Headers okHeaders,
-      final CacheResponse cacheResponse) {
+      final CacheResponse cacheResponse) throws IOException {
+    final BufferedSource body = Okio.buffer(Okio.source(cacheResponse.getBody()));
     return new ResponseBody() {
-      private BufferedSource body;
-
       @Override
       public MediaType contentType() {
         String contentTypeHeader = okHeaders.get("Content-Type");
@@ -488,11 +487,7 @@ public MediaType contentType() {
       public long contentLength() {
         return OkHeaders.contentLength(okHeaders);
       }
-      @Override public BufferedSource source() throws IOException {
-        if (body == null) {
-          InputStream is = cacheResponse.getBody();
-          body = Okio.buffer(Okio.source(is));
-        }
+      @Override public BufferedSource source() {
         return body;
       }
     };
@@ -501,13 +496,13 @@ public long contentLength() {
   /**
    * Creates an OkHttp Response.Body containing the supplied information.
    */
-  private static ResponseBody createOkBody(final URLConnection urlConnection) {
+  private static ResponseBody createOkBody(final URLConnection urlConnection) throws IOException {
     if (!urlConnection.getDoInput()) {
       return null;
     }
-    return new ResponseBody() {
-      private BufferedSource body;
 
+    final BufferedSource body = Okio.buffer(Okio.source(urlConnection.getInputStream()));
+    return new ResponseBody() {
       @Override public MediaType contentType() {
         String contentTypeHeader = urlConnection.getContentType();
         return contentTypeHeader == null ? null : MediaType.parse(contentTypeHeader);
@@ -516,11 +511,7 @@ private static ResponseBody createOkBody(final URLConnection urlConnection) {
         String s = urlConnection.getHeaderField("Content-Length");
         return stringToLong(s);
       }
-      @Override public BufferedSource source() throws IOException {
-        if (body == null) {
-          InputStream is = urlConnection.getInputStream();
-          body = Okio.buffer(Okio.source(is));
-        }
+      @Override public BufferedSource source() {
         return body;
       }
     };
@@ -727,7 +718,11 @@ public Object getContent(Class[] classes) throws IOException {
 
     @Override
     public InputStream getInputStream() throws IOException {
-      throw throwResponseBodyAccessException();
+      return new InputStream() {
+        @Override public int read() throws IOException {
+          throw throwResponseBodyAccessException();
+        }
+      };
     }
 
     @Override
diff --git a/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java
index fae9764623..20ee8d66b4 100644
--- a/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java
+++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java
@@ -319,8 +319,9 @@
         JavaApiConverter.createJavaUrlConnectionForCachePut(okResponse);
     // Check an arbitrary (not complete) set of methods that can be used to access the response
     // body.
+    InputStream is = httpUrlConnection.getInputStream();
     try {
-      httpUrlConnection.getInputStream();
+      is.read();
       fail();
     } catch (UnsupportedOperationException expected) {
     }
diff --git a/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/ResponseCacheTest.java b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/ResponseCacheTest.java
index 5e0d58770b..a9be7d5c2a 100644
--- a/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/ResponseCacheTest.java
+++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/ResponseCacheTest.java
@@ -1866,8 +1866,9 @@ private void assertGatewayTimeout(HttpURLConnection connection) throws IOExcepti
         HttpURLConnection httpURLConnection = (HttpURLConnection) connection;
         assertEquals(server.url("/").url(), uri.toURL());
         assertEquals(200, httpURLConnection.getResponseCode());
+        InputStream is = httpURLConnection.getInputStream();
         try {
-          httpURLConnection.getInputStream();
+          is.read();
           fail();
         } catch (UnsupportedOperationException expected) {
         }
diff --git a/okhttp-ws/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java b/okhttp-ws/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
index d81785aa80..70110e9db1 100644
--- a/okhttp-ws/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
+++ b/okhttp-ws/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
@@ -233,7 +233,7 @@ private void readMessageFrame() throws IOException {
         return -1;
       }
 
-      @Override public BufferedSource source() throws IOException {
+      @Override public BufferedSource source() {
         return source;
       }
     };
diff --git a/okhttp/src/main/java/com/squareup/okhttp/ResponseBody.java b/okhttp/src/main/java/com/squareup/okhttp/ResponseBody.java
index bdd98b4c69..1f3aae3d42 100644
--- a/okhttp/src/main/java/com/squareup/okhttp/ResponseBody.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/ResponseBody.java
@@ -39,11 +39,11 @@
    */
   public abstract long contentLength() throws IOException;
 
-  public final InputStream byteStream() throws IOException {
+  public final InputStream byteStream() {
     return source().inputStream();
   }
 
-  public abstract BufferedSource source() throws IOException;
+  public abstract BufferedSource source();
 
   public final byte[] bytes() throws IOException {
     long contentLength = contentLength();
@@ -69,7 +69,7 @@ public final InputStream byteStream() throws IOException {
    * of the Content-Type header. If that header is either absent or lacks a
    * charset, this will attempt to decode the response body as UTF-8.
    */
-  public final Reader charStream() throws IOException {
+  public final Reader charStream() {
     Reader r = reader;
     return r != null ? r : (reader = new InputStreamReader(byteStream(), charset()));
   }
diff --git a/samples/guide/src/main/java/com/squareup/okhttp/recipes/Progress.java b/samples/guide/src/main/java/com/squareup/okhttp/recipes/Progress.java
index 9d329fa16e..06f0a2c407 100644
--- a/samples/guide/src/main/java/com/squareup/okhttp/recipes/Progress.java
+++ b/samples/guide/src/main/java/com/squareup/okhttp/recipes/Progress.java
@@ -84,7 +84,7 @@ public ProgressResponseBody(ResponseBody responseBody, ProgressListener progress
       return responseBody.contentLength();
     }
 
-    @Override public BufferedSource source() throws IOException {
+    @Override public BufferedSource source() {
       if (bufferedSource == null) {
         bufferedSource = Okio.buffer(source(responseBody.source()));
       }
