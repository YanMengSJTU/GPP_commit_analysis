diff --git a/okhttp-brotli/src/main/java/okhttp3/brotli/BrotliInterceptor.kt b/okhttp-brotli/src/main/java/okhttp3/brotli/BrotliInterceptor.kt
index 0dac0fd21a..ab4e18220e 100644
--- a/okhttp-brotli/src/main/java/okhttp3/brotli/BrotliInterceptor.kt
+++ b/okhttp-brotli/src/main/java/okhttp3/brotli/BrotliInterceptor.kt
@@ -27,7 +27,7 @@ import org.brotli.dec.BrotliInputStream
  * Transparent Brotli response support.
  *
  * Adds Accept-Encoding: br to request and checks (and strips) for Content-Encoding: br in
- * responses.  n.b. this replaces the transparent gzip compression InBridgeInterceptor.
+ * responses.  n.b. this replaces the transparent gzip compression in BridgeInterceptor.
  */
 object BrotliInterceptor : Interceptor {
   override fun intercept(chain: Interceptor.Chain): Response =
diff --git a/okhttp-brotli/src/test/java/okhttp3/brotli/BrotliInterceptorTest.kt b/okhttp-brotli/src/test/java/okhttp3/brotli/BrotliInterceptorTest.kt
index 8290a1999e..c4e16e6b9d 100644
--- a/okhttp-brotli/src/test/java/okhttp3/brotli/BrotliInterceptorTest.kt
+++ b/okhttp-brotli/src/test/java/okhttp3/brotli/BrotliInterceptorTest.kt
@@ -48,6 +48,26 @@ class BrotliInterceptorTest {
     assertThat(responseString).contains("\"Accept-Encoding\": \"br\"")
   }
 
+  @Test
+  fun testUncompressGzip() {
+    val s =
+        "1f8b0800968f215d02ff558ec10e82301044ef7c45b3e75269d0c478e340e4a426e007086c4a636c9bb65e" +
+            "24fcbb5b484c3cec61deccecee9c3106eaa39dc3114e2cfa377296d8848f117d20369324500d03ba98" +
+            "d766b0a3368a0ce83d4f55581b14696c88894f31ba5e1b61bdfa79f7803eaf149a35619f29b3db0b29" +
+            "8abcbd54b7b6b97640c965bbfec238d9f4109ceb6edb01d66ba54d6247296441531e445970f627215b" +
+            "b22f1017320dd5000000"
+
+    val response = response("https://httpbin.org/gzip", s.decodeHex()) {
+      header("Content-Encoding", "gzip")
+    }
+
+    val uncompressed = BrotliInterceptor.uncompress(response)
+
+    val responseString = uncompressed.body?.string()
+    assertThat(responseString).contains("\"gzipped\": true,")
+    assertThat(responseString).contains("\"Accept-Encoding\": \"br,gzip\"")
+  }
+
   @Test
   fun testNoUncompress() {
     val response = response("https://httpbin.org/brotli", "XXXX".encodeUtf8())
@@ -89,4 +109,4 @@ class BrotliInterceptorTest {
         .apply(fn)
         .build()
   }
-}
\ No newline at end of file
+}
diff --git a/okhttp-brotli/src/test/java/okhttp3/brotli/BrotliTestMain.kt b/okhttp-brotli/src/test/java/okhttp3/brotli/BrotliTestMain.kt
index 4c3bce5736..bfae423ee1 100644
--- a/okhttp-brotli/src/test/java/okhttp3/brotli/BrotliTestMain.kt
+++ b/okhttp-brotli/src/test/java/okhttp3/brotli/BrotliTestMain.kt
@@ -23,9 +23,12 @@ fun main() {
       .addInterceptor(BrotliInterceptor)
       .build()
 
-  val req = Request.Builder()
-      .url("https://httpbin.org/brotli")
-      .build()
+  sendRequest("https://httpbin.org/brotli", client)
+  sendRequest("https://httpbin.org/gzip", client)
+}
+
+private fun sendRequest(url: String, client: OkHttpClient) {
+  val req = Request.Builder().url(url).build()
 
   client.newCall(req).execute().use {
     println(it.body?.string())
