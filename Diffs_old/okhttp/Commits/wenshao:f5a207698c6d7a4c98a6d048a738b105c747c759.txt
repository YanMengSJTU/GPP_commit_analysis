diff --git a/pom.xml b/pom.xml
index 52c283ed13..8b19b5404c 100644
--- a/pom.xml
+++ b/pom.xml
@@ -51,6 +51,7 @@
     <alpn.jdk8.version>8.1.2.v20141202</alpn.jdk8.version>
     <bouncycastle.version>1.50</bouncycastle.version>
     <gson.version>2.2.3</gson.version>
+    <fastjson.version>1.2.9</fastjson.version>
     <apache.http.version>4.2.2</apache.http.version>
     <airlift.version>0.7</airlift.version>
     <guava.version>16.0</guava.version>
@@ -101,6 +102,11 @@
         <artifactId>gson</artifactId>
         <version>${gson.version}</version>
       </dependency>
+      <dependency>
+        <groupId>com.alibaba</groupId>
+        <artifactId>fastjson</artifactId>
+        <version>${fastjson.version}</version>
+      </dependency>
       <dependency>
         <groupId>org.apache.httpcomponents</groupId>
         <artifactId>httpclient</artifactId>
diff --git a/samples/guide/pom.xml b/samples/guide/pom.xml
index cb497502f2..4a5ddb6461 100644
--- a/samples/guide/pom.xml
+++ b/samples/guide/pom.xml
@@ -27,5 +27,9 @@
       <groupId>com.google.code.gson</groupId>
       <artifactId>gson</artifactId>
     </dependency>
+    <dependency>
+      <groupId>com.alibaba</groupId>
+      <artifactId>fastjson</artifactId>
+    </dependency>
   </dependencies>
 </project>
diff --git a/samples/guide/src/main/java/okhttp3/recipes/ParseResponseWithFastjson.java b/samples/guide/src/main/java/okhttp3/recipes/ParseResponseWithFastjson.java
new file mode 100644
index 0000000000..2fe492cec8
--- /dev/null
+++ b/samples/guide/src/main/java/okhttp3/recipes/ParseResponseWithFastjson.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright (C) 2014 Square, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package okhttp3.recipes;
+
+import java.io.IOException;
+import java.util.Map;
+
+import com.alibaba.fastjson.JSON;
+
+import okhttp3.OkHttpClient;
+import okhttp3.Request;
+import okhttp3.Response;
+
+public final class ParseResponseWithFastjson {
+  private final OkHttpClient client = new OkHttpClient();
+
+  public void run() throws Exception {
+    Request request = new Request.Builder()
+        .url("https://api.github.com/gists/c2a7c39532239ff261be")
+        .build();
+    Response response = client.newCall(request).execute();
+    if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);
+
+    Gist gist = JSON.parseObject(response.body().string(), Gist.class);
+    response.body().close();
+
+    for (Map.Entry<String, GistFile> entry : gist.files.entrySet()) {
+      System.out.println(entry.getKey());
+      System.out.println(entry.getValue().content);
+    }
+  }
+
+  public static class Gist {
+    public Map<String, GistFile> files;
+  }
+
+  public static class GistFile {
+    public String content;
+  }
+
+  public static void main(String... args) throws Exception {
+    new ParseResponseWithFastjson().run();
+  }
+}
diff --git a/samples/simple-client/pom.xml b/samples/simple-client/pom.xml
index 1e40e2ea19..05f7fc1580 100644
--- a/samples/simple-client/pom.xml
+++ b/samples/simple-client/pom.xml
@@ -23,5 +23,9 @@
       <groupId>com.google.code.gson</groupId>
       <artifactId>gson</artifactId>
     </dependency>
+    <dependency>
+      <groupId>com.alibaba</groupId>
+      <artifactId>fastjson</artifactId>
+    </dependency>
   </dependencies>
 </project>
diff --git a/samples/simple-client/src/main/java/okhttp3/sample/OkHttpContributorsFastjson.java b/samples/simple-client/src/main/java/okhttp3/sample/OkHttpContributorsFastjson.java
new file mode 100644
index 0000000000..d146889875
--- /dev/null
+++ b/samples/simple-client/src/main/java/okhttp3/sample/OkHttpContributorsFastjson.java
@@ -0,0 +1,60 @@
+package okhttp3.sample;
+
+
+import java.io.Reader;
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.List;
+
+import com.alibaba.fastjson.JSON;
+import com.alibaba.fastjson.TypeReference;
+
+import okhttp3.OkHttpClient;
+import okhttp3.Request;
+import okhttp3.Response;
+import okhttp3.ResponseBody;
+
+public class OkHttpContributorsFastjson {
+  private static final String ENDPOINT = "https://api.github.com/repos/square/okhttp/contributors";
+  private static final TypeReference<List<Contributor>> CONTRIBUTORS =
+      new TypeReference<List<Contributor>>() {
+      };
+
+  public static class Contributor {
+    public String login;
+    public int contributions;
+  }
+
+  public static void main(String... args) throws Exception {
+    OkHttpClient client = new OkHttpClient();
+
+    // Create request for remote resource.
+    Request request = new Request.Builder()
+        .url(ENDPOINT)
+        .build();
+
+    // Execute the request and retrieve the response.
+    Response response = client.newCall(request).execute();
+
+    // Deserialize HTTP response to concrete type.
+    ResponseBody body = response.body();
+    List<Contributor> contributors = JSON.parseObject(body.string(), CONTRIBUTORS.getType());
+    body.close();
+
+    // Sort list by the most contributions.
+    Collections.sort(contributors, new Comparator<Contributor>() {
+      @Override public int compare(Contributor c1, Contributor c2) {
+        return c2.contributions - c1.contributions;
+      }
+    });
+
+    // Output list of contributors.
+    for (Contributor contributor : contributors) {
+      System.out.println(contributor.login + ": " + contributor.contributions);
+    }
+  }
+
+  private OkHttpContributorsFastjson() {
+    // No instances.
+  }
+}
