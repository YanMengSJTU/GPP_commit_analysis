diff --git a/okhttp/src/main/java/okhttp3/FormBody.kt b/okhttp/src/main/java/okhttp3/FormBody.kt
index 2c184f7eb8..7217b404cd 100644
--- a/okhttp/src/main/java/okhttp3/FormBody.kt
+++ b/okhttp/src/main/java/okhttp3/FormBody.kt
@@ -23,6 +23,7 @@ import okio.BufferedSink
 import java.io.IOException
 import java.nio.charset.Charset
 
+/** 构造函数中的参数并没有先固定是可变还是不可变，提高兼容性；在代码中将这些参数变为不可变#Util.immutableList */
 class FormBody internal constructor(
   encodedNames: List<String>,
   encodedValues: List<String>
diff --git a/okhttp/src/main/java/okhttp3/Headers.java b/okhttp/src/main/java/okhttp3/Headers.java
index f110425887..b677ae200d 100644
--- a/okhttp/src/main/java/okhttp3/Headers.java
+++ b/okhttp/src/main/java/okhttp3/Headers.java
@@ -396,6 +396,7 @@ Builder addLenient(String name, String value) {
     }
 
     public Builder removeAll(String name) {
+      /** list可以同时删除和遍历。。。 */
       for (int i = 0; i < namesAndValues.size(); i += 2) {
         if (name.equalsIgnoreCase(namesAndValues.get(i))) {
           namesAndValues.remove(i); // name
diff --git a/samples/simple-client/src/main/java/okhttp3/sample/OkHttpContributors.java b/samples/simple-client/src/main/java/okhttp3/sample/OkHttpContributors.java
index cfd8632cb8..448e1ff9c4 100644
--- a/samples/simple-client/src/main/java/okhttp3/sample/OkHttpContributors.java
+++ b/samples/simple-client/src/main/java/okhttp3/sample/OkHttpContributors.java
@@ -3,8 +3,16 @@
 import com.squareup.moshi.JsonAdapter;
 import com.squareup.moshi.Moshi;
 import com.squareup.moshi.Types;
+
+import org.jetbrains.annotations.NotNull;
+
 import java.util.Collections;
 import java.util.List;
+import java.util.concurrent.TimeUnit;
+
+import okhttp3.Cookie;
+import okhttp3.CookieJar;
+import okhttp3.HttpUrl;
 import okhttp3.OkHttpClient;
 import okhttp3.Request;
 import okhttp3.Response;
@@ -22,7 +30,22 @@
   }
 
   public static void main(String... args) throws Exception {
-    OkHttpClient client = new OkHttpClient();
+    OkHttpClient.Builder builder = new OkHttpClient.Builder().callTimeout(15, TimeUnit.SECONDS)
+            .writeTimeout(15, TimeUnit.SECONDS)
+            .readTimeout(15,TimeUnit.SECONDS)
+            .cookieJar(new CookieJar() {
+              @Override
+              public void saveFromResponse(@NotNull HttpUrl url, @NotNull List<Cookie> cookies) {
+
+              }
+
+              @NotNull
+              @Override
+              public List<Cookie> loadForRequest(@NotNull HttpUrl url) {
+                return null;
+              }
+            });
+    OkHttpClient client = builder.build();
 
     // Create request for remote resource.
     Request request = new Request.Builder()
