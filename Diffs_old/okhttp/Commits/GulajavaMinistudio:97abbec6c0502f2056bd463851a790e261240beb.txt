diff --git a/okhttp/src/main/java/okhttp3/internal/http/HttpHeaders.kt b/okhttp/src/main/java/okhttp3/internal/http/HttpHeaders.kt
index 5f1b787c8f..b9cf66e682 100644
--- a/okhttp/src/main/java/okhttp3/internal/http/HttpHeaders.kt
+++ b/okhttp/src/main/java/okhttp3/internal/http/HttpHeaders.kt
@@ -14,6 +14,7 @@
  * limitations under the License.
  */
 @file:JvmName("HttpHeaders")
+
 package okhttp3.internal.http
 
 import okhttp3.Challenge
@@ -232,3 +233,11 @@ fun Response.promisesBody(): Boolean {
 
   return false
 }
+
+@Deprecated(
+    message = "No longer supported",
+    level = DeprecationLevel.ERROR,
+    replaceWith = ReplaceWith(expression = "response.promisesBody()"))
+fun hasBody(response: Response): Boolean {
+  return response.promisesBody()
+}
diff --git a/okhttp/src/test/java/okhttp3/HeadersTest.java b/okhttp/src/test/java/okhttp3/HeadersTest.java
index 38756be337..4e10c46c12 100644
--- a/okhttp/src/test/java/okhttp3/HeadersTest.java
+++ b/okhttp/src/test/java/okhttp3/HeadersTest.java
@@ -39,7 +39,7 @@
 import static org.junit.Assert.fail;
 
 public final class HeadersTest {
-  @Test public void readNameValueBlockDropsForbiddenHeadersHttp2() throws IOException {
+  @Test public void readNameValueBlockDropsForbiddenHeadersHttp2() {
     Headers headerBlock = Headers.of(
         ":status", "200 OK",
         ":version", "HTTP/1.1",
diff --git a/okhttp/src/test/java/okhttp3/PublicInternalApiTest.java b/okhttp/src/test/java/okhttp3/PublicInternalApiTest.java
new file mode 100644
index 0000000000..7421931867
--- /dev/null
+++ b/okhttp/src/test/java/okhttp3/PublicInternalApiTest.java
@@ -0,0 +1,45 @@
+/*
+ * Copyright (C) 2019 Square, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package okhttp3;
+
+import okhttp3.internal.http.HttpHeaders;
+import okhttp3.internal.http.HttpMethod;
+import org.junit.Test;
+
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
+
+@SuppressWarnings("ALL") public class PublicInternalApiTest {
+  @Test public void permitsRequestBody() {
+    assertTrue(HttpMethod.permitsRequestBody("POST"));
+    assertFalse(HttpMethod.permitsRequestBody("GET"));
+  }
+
+  @Test public void requiresRequestBody() {
+    assertTrue(HttpMethod.requiresRequestBody("PUT"));
+    assertFalse(HttpMethod.requiresRequestBody("GET"));
+  }
+
+  @Test public void hasBody() {
+    Request request = new Request.Builder().url("http://example.com").build();
+    Response response = new Response.Builder().code(200)
+        .message("OK")
+        .request(request)
+        .protocol(Protocol.HTTP_2)
+        .build();
+    assertTrue(HttpHeaders.hasBody(response));
+  }
+}
