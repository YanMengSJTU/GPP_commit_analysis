diff --git a/ion/src/com/koushikdutta/ion/conscrypt/ConscryptMiddleware.java b/ion/src/com/koushikdutta/ion/conscrypt/ConscryptMiddleware.java
index b907504c..3a7e5131 100644
--- a/ion/src/com/koushikdutta/ion/conscrypt/ConscryptMiddleware.java
+++ b/ion/src/com/koushikdutta/ion/conscrypt/ConscryptMiddleware.java
@@ -32,7 +32,7 @@ public void enable(boolean enabled) {
         }
     }
 
-    static void initialize(Context context) {
+    public static void initialize(Context context) {
         try {
             synchronized (lock) {
                 if (initialized)
@@ -82,7 +82,8 @@ public void initialize() {
                 if (sslContext == null)
                     sslContext = SSLContext.getInstance("TLS");
                 sslContext.init(null, null, null);
-                if (middleware.getSSLContext() != AsyncSSLSocketWrapper.getDefaultSSLContext())
+                // only set the SSL context if it is the default SSL context
+                if (middleware.getSSLContext() == AsyncSSLSocketWrapper.getDefaultSSLContext())
                     middleware.setSSLContext(sslContext);
             }
             catch (Exception e) {
diff --git a/ion/test/res/raw/keystore.bks b/ion/test/res/raw/keystore.bks
new file mode 100644
index 00000000..acf703c7
Binary files /dev/null and b/ion/test/res/raw/keystore.bks differ
diff --git a/ion/test/src/com/koushikdutta/ion/test/SelfSignedCertificateTests.java b/ion/test/src/com/koushikdutta/ion/test/SelfSignedCertificateTests.java
new file mode 100644
index 00000000..5bae289f
--- /dev/null
+++ b/ion/test/src/com/koushikdutta/ion/test/SelfSignedCertificateTests.java
@@ -0,0 +1,58 @@
+package com.koushikdutta.ion.test;
+
+import android.test.AndroidTestCase;
+
+import com.koushikdutta.async.http.server.AsyncHttpServer;
+import com.koushikdutta.async.http.server.AsyncHttpServerRequest;
+import com.koushikdutta.async.http.server.AsyncHttpServerResponse;
+import com.koushikdutta.async.http.server.HttpServerRequestCallback;
+import com.koushikdutta.ion.Ion;
+
+import java.security.KeyStore;
+
+import javax.net.ssl.KeyManagerFactory;
+import javax.net.ssl.SSLContext;
+import javax.net.ssl.TrustManagerFactory;
+
+/**
+ * Created by koush on 11/21/14.
+ */
+public class SelfSignedCertificateTests extends AndroidTestCase {
+    public void testKeys() throws Exception {
+        KeyManagerFactory kmf = KeyManagerFactory.getInstance("X509");
+        KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType());
+
+        ks.load(getContext().getResources().openRawResource(R.raw.keystore), "storepass".toCharArray());
+        kmf.init(ks, "storepass".toCharArray());
+
+
+        TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
+        KeyStore ts = KeyStore.getInstance(KeyStore.getDefaultType());
+        ts.load(getContext().getResources().openRawResource(R.raw.keystore), "storepass".toCharArray());
+        tmf.init(ts);
+
+        SSLContext sslContext = SSLContext.getInstance("TLS");
+        sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);
+
+        AsyncHttpServer httpServer = new AsyncHttpServer();
+        httpServer.listenSecure(8888, sslContext);
+        httpServer.get("/", new HttpServerRequestCallback() {
+            @Override
+            public void onRequest(AsyncHttpServerRequest request, AsyncHttpServerResponse response) {
+                response.send("hello");
+            }
+        });
+
+        Thread.sleep(1000);
+
+        Ion ion = Ion.getInstance(getContext(), "CustomSSL");
+        ion.getHttpClient().getSSLSocketMiddleware().setSSLContext(sslContext);
+        ion.getHttpClient().getSSLSocketMiddleware().setTrustManagers(tmf.getTrustManagers());
+
+        ion.build(getContext())
+        .load("https://localhost:8888/")
+        .asString()
+        .get();
+    }
+
+}
