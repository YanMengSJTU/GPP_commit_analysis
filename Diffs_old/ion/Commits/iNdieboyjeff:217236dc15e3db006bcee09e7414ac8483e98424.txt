diff --git a/ion-test/src/com/koushikdutta/ion/test/HttpTests.java b/ion-test/src/com/koushikdutta/ion/test/HttpTests.java
index 9946c36c..b64fd9de 100644
--- a/ion-test/src/com/koushikdutta/ion/test/HttpTests.java
+++ b/ion-test/src/com/koushikdutta/ion/test/HttpTests.java
@@ -12,6 +12,7 @@
 import com.koushikdutta.async.future.Future;
 import com.koushikdutta.async.future.FutureCallback;
 import com.koushikdutta.async.http.AsyncHttpClient;
+import com.koushikdutta.async.http.AsyncHttpGet;
 import com.koushikdutta.async.http.AsyncHttpResponse;
 import com.koushikdutta.async.http.Multimap;
 import com.koushikdutta.async.http.body.FilePart;
@@ -220,7 +221,7 @@ public void onRequest(AsyncHttpServerRequest request, final AsyncHttpServerRespo
                     AsyncHttpClient proxying = new AsyncHttpClient(proxyServer);
 
                     String url = request.getPath();
-                    proxying.get(url, new AsyncHttpClient.StringCallback() {
+                    proxying.executeString(new AsyncHttpGet(url), new AsyncHttpClient.StringCallback() {
                         @Override
                         public void onCompleted(Exception e, AsyncHttpResponse source, String result) {
                             response.send(result);
diff --git a/ion/src/com/koushikdutta/ion/Ion.java b/ion/src/com/koushikdutta/ion/Ion.java
index 44ab6896..5317024c 100644
--- a/ion/src/com/koushikdutta/ion/Ion.java
+++ b/ion/src/com/koushikdutta/ion/Ion.java
@@ -1,6 +1,7 @@
 package com.koushikdutta.ion;
 
 import java.io.File;
+import java.io.IOException;
 import java.net.URI;
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -28,6 +29,7 @@
 import com.koushikdutta.async.http.ResponseCacheMiddleware;
 import com.koushikdutta.async.http.libcore.DiskLruCache;
 import com.koushikdutta.async.http.libcore.RawHeaders;
+import com.koushikdutta.async.util.FileUtility;
 import com.koushikdutta.async.util.HashList;
 import com.koushikdutta.ion.bitmap.BitmapInfo;
 import com.koushikdutta.ion.bitmap.IonBitmapCache;
@@ -140,16 +142,25 @@ private Ion(Context context, String name) {
         this.context = context = context.getApplicationContext();
         this.name = name;
 
+        File ionCacheDir = new File(context.getCacheDir(), name);
         try {
-            responseCache = ResponseCacheMiddleware.addCache(httpClient, new File(context.getCacheDir(), name), 10L * 1024L * 1024L);
+            responseCache = ResponseCacheMiddleware.addCache(httpClient, ionCacheDir, 10L * 1024L * 1024L);
         }
-        catch (Exception e) {
-            IonLog.w("unable to set up response cache", e);
+        catch (IOException e) {
+            IonLog.w("unable to set up response cache, clearing", e);
+            FileUtility.deleteDirectory(ionCacheDir);
+            try {
+                responseCache = ResponseCacheMiddleware.addCache(httpClient, ionCacheDir, 10L * 1024L * 1024L);
+            }
+            catch (IOException ex) {
+                IonLog.w("unable to set up response cache, failing", e);
+            }
         }
+
         try {
             storeCache = DiskLruCache.open(new File(context.getFilesDir(), name), 1, 1, Long.MAX_VALUE);
         }
-        catch (Exception e) {
+        catch (IOException e) {
         }
 
         // TODO: Support pre GB?
