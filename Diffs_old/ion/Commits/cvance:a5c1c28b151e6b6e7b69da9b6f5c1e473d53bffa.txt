diff --git a/ion/src/com/koushikdutta/ion/HeaderException.java b/ion/src/com/koushikdutta/ion/HeaderException.java
new file mode 100644
index 00000000..2b70a7b9
--- /dev/null
+++ b/ion/src/com/koushikdutta/ion/HeaderException.java
@@ -0,0 +1,18 @@
+package com.koushikdutta.ion;
+
+/**
+  * Created by collin on 3/5/15.
+  */
+ public class HeaderException extends Exception {
+
+    private HeadersResponse response;
+
+    public HeaderException(HeadersResponse headersResponse) {
+        response = headersResponse;
+    }
+
+    public int getCode() {
+        return response != null ? response.code() : -1;
+    }
+
+ }
diff --git a/ion/src/com/koushikdutta/ion/LoadBitmap.java b/ion/src/com/koushikdutta/ion/LoadBitmap.java
index 5f16b52a..cb173be4 100644
--- a/ion/src/com/koushikdutta/ion/LoadBitmap.java
+++ b/ion/src/com/koushikdutta/ion/LoadBitmap.java
@@ -33,6 +33,13 @@ public void onCompleted(Exception e, final ByteBufferList result) {
             return;
         }
 
+        if (emitterTransform != null && emitterTransform.headers != null) {
+            if (emitterTransform.headers.code() == 410) {
+                report(new HeaderException(emitterTransform.headers), null);
+                return;
+            }
+        }
+
         if (ion.bitmapsPending.tag(key) != this) {
             result.recycle();
             return;
