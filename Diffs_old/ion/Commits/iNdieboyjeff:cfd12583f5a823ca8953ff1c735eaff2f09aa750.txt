diff --git a/ion/src/com/koushikdutta/ion/bitmap/BitmapInfo.java b/ion/src/com/koushikdutta/ion/bitmap/BitmapInfo.java
index 1a71e566..088028ab 100644
--- a/ion/src/com/koushikdutta/ion/bitmap/BitmapInfo.java
+++ b/ion/src/com/koushikdutta/ion/bitmap/BitmapInfo.java
@@ -15,7 +15,7 @@
     public Bitmap[] bitmaps;
     public int[] delays;
     public Exception exception;
-    public WeakReference<Bitmap[]> bitmapsRef;
+    public WeakReference<Bitmap> bitmapRef;
 
     public int sizeOf() {
         if (bitmaps == null)
diff --git a/ion/src/com/koushikdutta/ion/bitmap/IonBitmapCache.java b/ion/src/com/koushikdutta/ion/bitmap/IonBitmapCache.java
index aadace82..4488ec88 100644
--- a/ion/src/com/koushikdutta/ion/bitmap/IonBitmapCache.java
+++ b/ion/src/com/koushikdutta/ion/bitmap/IonBitmapCache.java
@@ -68,13 +68,13 @@ public BitmapInfo get(String key) {
             return ret;
 
         // see if the the bitmap got evicted and put into a weak ref
-        if (ret.bitmapsRef != null) {
-            Bitmap[] bitmaps = ret.bitmapsRef.get();
+        if (ret.bitmapRef != null) {
+            Bitmap bitmap = ret.bitmapRef.get();
             // see if we successfully repopulated from the weak ref
             if (ret.bitmaps != null) {
                 cache.remove(key);
-                ret.bitmaps = bitmaps;
-                ret.bitmapsRef = null;
+                ret.bitmaps = new Bitmap[] { bitmap };
+                ret.bitmapRef = null;
                 cache.put(key, ret);
                 System.out.println("===== SUCCESSFULLY GRABBED FROM WEAK REF CACHE! ====");
                 return ret;
diff --git a/ion/src/com/koushikdutta/ion/bitmap/LruBitmapCache.java b/ion/src/com/koushikdutta/ion/bitmap/LruBitmapCache.java
index 132b3419..3b804341 100644
--- a/ion/src/com/koushikdutta/ion/bitmap/LruBitmapCache.java
+++ b/ion/src/com/koushikdutta/ion/bitmap/LruBitmapCache.java
@@ -18,6 +18,10 @@ protected int sizeOf(String key, BitmapInfo info) {
     protected void entryRemoved(boolean evicted, String key, BitmapInfo oldValue, BitmapInfo newValue) {
         super.entryRemoved(evicted, key, oldValue, newValue);
 
+        // this shit is broken
+        if (true)
+            return;
+
         // on eviction, put the bitmaps into a weak ref
         if (!evicted)
             return;
@@ -27,8 +31,12 @@ protected void entryRemoved(boolean evicted, String key, BitmapInfo oldValue, Bi
             return;
         if (oldValue.bitmaps == null)
             return;
+        // don't try to weak ref on gifs, because only one bitmap
+        // ref total will be held.
+        if (oldValue.bitmaps.length > 1)
+            return;
 
-        oldValue.bitmapsRef = new WeakReference<Bitmap[]>(oldValue.bitmaps);
+        oldValue.bitmapRef = new WeakReference<Bitmap>(oldValue.bitmaps[0]);
         oldValue.bitmaps = null;
         put(key, oldValue);
     }
