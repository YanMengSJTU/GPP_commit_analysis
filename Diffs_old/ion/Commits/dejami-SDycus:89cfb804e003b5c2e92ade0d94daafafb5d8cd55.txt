diff --git a/ion/src/com/koushikdutta/ion/Ion.java b/ion/src/com/koushikdutta/ion/Ion.java
index e0c15fd1..553f124a 100644
--- a/ion/src/com/koushikdutta/ion/Ion.java
+++ b/ion/src/com/koushikdutta/ion/Ion.java
@@ -175,7 +175,7 @@ private Ion(Context context, String name) {
         storeCache = new FileCache(new File(context.getFilesDir(), name), Long.MAX_VALUE, false);
 
         // TODO: Support pre GB?
-        if (Build.VERSION.SDK_INT >= 9)
+//        if (Build.VERSION.SDK_INT >= 9)
             addCookieMiddleware();
 
         httpClient.getSocketMiddleware().setConnectAllAddresses(true);
@@ -265,6 +265,18 @@ public int compare(DeferredLoadBitmap lhs, DeferredLoadBitmap rhs) {
         }
     };
 
+    private static Comparator<DeferredLoadBitmap> DEFERRED_COMPARATOR_REVERSED = new Comparator<DeferredLoadBitmap>() {
+        @Override
+        public int compare(DeferredLoadBitmap lhs, DeferredLoadBitmap rhs) {
+            // higher is least recent
+            if (lhs.priority == rhs.priority)
+                return 0;
+            if (lhs.priority > rhs.priority)
+                return 1;
+            return -1;
+        }
+    };
+
     private Runnable processDeferred = new Runnable() {
         @Override
         public void run() {
@@ -284,7 +296,7 @@ public void run() {
             if (deferred == null)
                 return;
             int count = 0;
-            Collections.sort(deferred, DEFERRED_COMPARATOR);
+            Collections.sort(deferred, configure().isReversePriority() ? DEFERRED_COMPARATOR_REVERSED :  DEFERRED_COMPARATOR);
             for (DeferredLoadBitmap deferredLoadBitmap: deferred) {
                 bitmapsPending.tag(deferredLoadBitmap.key, null);
                 bitmapsPending.tag(deferredLoadBitmap.fetcher.bitmapKey, null);
@@ -596,6 +608,18 @@ public Config addLoader(Loader loader) {
         public List<Loader> getLoaders() {
             return loaders;
         }
+        
+        boolean reversePriority = false;
+
+		public boolean isReversePriority() {
+			return reversePriority;
+		}
+
+		public void setReversePriority(boolean reversePriority) {
+			this.reversePriority = reversePriority;
+		}
+        
+        
     }
 
     public Config configure() {
