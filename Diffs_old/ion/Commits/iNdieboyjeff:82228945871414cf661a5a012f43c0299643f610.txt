diff --git a/.gitignore b/.gitignore
index 5d4269e9..672a70a9 100644
--- a/.gitignore
+++ b/.gitignore
@@ -9,3 +9,4 @@ gradle
 gradlew
 gradlew.bat
 
+ion.iml
diff --git a/README.md b/README.md
index 23e803a4..7b992a2c 100644
--- a/README.md
+++ b/README.md
@@ -382,7 +382,7 @@ Ion.with(getContext())
 ##### Gradle
 ```groovy
 dependencies {
-   compile 'com.koushikdutta.ion:ion:1.+'
+    compile 'com.koushikdutta.ion:ion:1.+'
 }
 ````
 
diff --git a/ion-sample/AndroidManifest.xml b/ion-sample/AndroidManifest.xml
index 19d4ed09..09287d8e 100644
--- a/ion-sample/AndroidManifest.xml
+++ b/ion-sample/AndroidManifest.xml
@@ -10,7 +10,6 @@
     <uses-permission android:name="android.permission.INTERNET"/>
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
     <application
-            android:debuggable="true"
             android:hardwareAccelerated="true"
             android:label="@string/app_name"
             android:icon="@drawable/ic_launcher"
diff --git a/ion-sample/build.gradle b/ion-sample/build.gradle
index f34c62a6..0f91959c 100644
--- a/ion-sample/build.gradle
+++ b/ion-sample/build.gradle
@@ -18,8 +18,11 @@ repositories {
 
 dependencies {
     compile 'com.github.chrisbanes.photoview:library:+'
-    compile project(':ion:ion')
-//    compile 'com.koushikdutta.ion:ion:+'
+//    compile project(':ion:ion')
+//    compile 'com.android.support:support-v4:20.+'
+    compile 'com.koushikdutta.ion:ion:1.3.7'
+//    compile 'com.koushikdutta.async:androidasync:1.3.5@jar'
+//    compile 'com.google.code.gson:gson:+'
 }
 
 android {
diff --git a/ion-sample/ion-sample.iml b/ion-sample/ion-sample.iml
index 42cfd27c..1eedb51a 100644
--- a/ion-sample/ion-sample.iml
+++ b/ion-sample/ion-sample.iml
@@ -65,10 +65,10 @@
     <orderEntry type="jdk" jdkName="Android API 19 Platform" jdkType="Android SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" exported="" name="gson-2.2.4" level="project" />
+    <orderEntry type="library" exported="" name="ion-1.3.7" level="project" />
+    <orderEntry type="library" exported="" name="androidasync-1.3.7" level="project" />
     <orderEntry type="library" exported="" name="library-1.2.3" level="project" />
-    <orderEntry type="library" exported="" name="support-annotations-20.0.0" level="project" />
-    <orderEntry type="library" exported="" name="support-v4-20.0.0" level="project" />
-    <orderEntry type="module" module-name="ion-ion" exported="" />
+    <orderEntry type="library" exported="" name="support-v4-19.1.0" level="project" />
   </component>
 </module>
 
diff --git a/ion-sample/src/com/koushikdutta/ion/sample/DeepZoomSample.java b/ion-sample/src/com/koushikdutta/ion/sample/DeepZoomSample.java
index 7a9453ec..57216e9a 100644
--- a/ion-sample/src/com/koushikdutta/ion/sample/DeepZoomSample.java
+++ b/ion-sample/src/com/koushikdutta/ion/sample/DeepZoomSample.java
@@ -1,7 +1,6 @@
 package com.koushikdutta.ion.sample;
 
 import android.app.Activity;
-import android.app.AlertDialog;
 import android.app.ProgressDialog;
 import android.os.Bundle;
 import android.util.Log;
diff --git a/ion/AndroidManifest.xml b/ion/AndroidManifest.xml
index 2462b98f..d8c53c1e 100644
--- a/ion/AndroidManifest.xml
+++ b/ion/AndroidManifest.xml
@@ -2,8 +2,8 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
           xmlns:tools="http://schemas.android.com/tools"
           package="com.koushikdutta.ion"
-          android:versionCode="131"
-          android:versionName="1.3.1">
+          android:versionCode="137"
+          android:versionName="1.3.7">
     <uses-sdk
             tools:node="replace" />
     <application />
diff --git a/ion/build.gradle b/ion/build.gradle
index 014ae385..01608e3d 100644
--- a/ion/build.gradle
+++ b/ion/build.gradle
@@ -36,11 +36,34 @@ android {
         androidTest.assets.srcDirs=['test/assets/']
     }
 
+    android {
+        lintOptions {
+            abortOnError false
+        }
+    }
+
     compileSdkVersion 19
     buildToolsVersion '20.0.0'
+
+    publishNonDefault true
 }
 
 // upload to maven task
 if (System.getenv().I_AM_KOUSH == 'true') {
-  apply from: 'https://raw.githubusercontent.com/koush/mvn-repo/master/maven.gradle'
+    apply from: 'https://raw.githubusercontent.com/koush/mvn-repo/master/maven.gradle'
+
+    apply plugin: 'maven'
+    apply plugin: 'signing'
+
+    afterEvaluate { project ->
+        uploadArchives {
+            repositories {
+                mavenDeployer {
+                    pom*.whenConfigured { pom ->
+                        pom.dependencies.removeAll { dep -> dep.artifactId == 'support-v4' }
+                    }
+                }
+            }
+        }
+    }
 }
diff --git a/ion/ion-ion.iml b/ion/ion-ion.iml
index 63f64af0..08ec8a14 100644
--- a/ion/ion-ion.iml
+++ b/ion/ion-ion.iml
@@ -58,9 +58,7 @@
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/jni" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates" />
-      <excludeFolder url="file://$MODULE_DIR$/build/libs" />
       <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
-      <excludeFolder url="file://$MODULE_DIR$/build/poms" />
       <excludeFolder url="file://$MODULE_DIR$/build/tmp" />
     </content>
     <orderEntry type="jdk" jdkName="Android API 19 Platform" jdkType="Android SDK" />
diff --git a/ion/src/com/koushikdutta/ion/Ion.java b/ion/src/com/koushikdutta/ion/Ion.java
index 2eba7bb3..05a616a3 100644
--- a/ion/src/com/koushikdutta/ion/Ion.java
+++ b/ion/src/com/koushikdutta/ion/Ion.java
@@ -27,6 +27,7 @@
 import com.koushikdutta.ion.builder.Builders;
 import com.koushikdutta.ion.builder.FutureBuilder;
 import com.koushikdutta.ion.builder.LoadBuilder;
+import com.koushikdutta.ion.conscrypt.ConscryptMiddleware;
 import com.koushikdutta.ion.cookie.CookieMiddleware;
 import com.koushikdutta.ion.loader.AssetLoader;
 import com.koushikdutta.ion.loader.AsyncHttpRequestFactory;
@@ -41,7 +42,6 @@
 
 import java.io.File;
 import java.io.IOException;
-import java.net.URI;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
@@ -145,6 +145,7 @@ public static Ion getInstance(Context context, String name) {
     }
 
     AsyncHttpClient httpClient;
+    ConscryptMiddleware conscryptMiddleware;
     CookieMiddleware cookieMiddleware;
     ResponseCacheMiddleware responseCache;
     FileCache storeCache;
@@ -168,11 +169,13 @@ public static Ion getInstance(Context context, String name) {
     IonImageViewRequestBuilder bitmapBuilder = new IonImageViewRequestBuilder(this);
 
     private Ion(Context context, String name) {
-        httpClient = new AsyncHttpClient(new AsyncServer("ion-" + name));
-        httpClient.getSSLSocketMiddleware().setHostnameVerifier(new BrowserCompatHostnameVerifier());
         this.context = context = context.getApplicationContext();
         this.name = name;
 
+        httpClient = new AsyncHttpClient(new AsyncServer("ion-" + name));
+        httpClient.getSSLSocketMiddleware().setHostnameVerifier(new BrowserCompatHostnameVerifier());
+        httpClient.insertMiddleware(conscryptMiddleware = new ConscryptMiddleware(context, httpClient.getSSLSocketMiddleware()));
+
         File ionCacheDir = new File(context.getCacheDir(), name);
         try {
             responseCache = ResponseCacheMiddleware.addCache(httpClient, ionCacheDir, 10L * 1024L * 1024L);
@@ -460,6 +463,10 @@ public CookieMiddleware getCookieMiddleware() {
         return cookieMiddleware;
     }
 
+    public ConscryptMiddleware getConscryptMiddleware() {
+        return conscryptMiddleware;
+    }
+
     /**
      * Get the AsyncHttpClient object in use by this Ion instance
      * @return
diff --git a/ion/src/com/koushikdutta/ion/conscrypt/ConscryptMiddleware.java b/ion/src/com/koushikdutta/ion/conscrypt/ConscryptMiddleware.java
new file mode 100644
index 00000000..d5943c7f
--- /dev/null
+++ b/ion/src/com/koushikdutta/ion/conscrypt/ConscryptMiddleware.java
@@ -0,0 +1,75 @@
+package com.koushikdutta.ion.conscrypt;
+
+import android.content.Context;
+
+import com.koushikdutta.async.future.Cancellable;
+import com.koushikdutta.async.http.AsyncSSLSocketMiddleware;
+import com.koushikdutta.async.http.SimpleMiddleware;
+
+import java.security.Provider;
+import java.security.Security;
+
+import javax.net.ssl.SSLContext;
+
+/**
+ * Created by koush on 7/13/14.
+ */
+public class ConscryptMiddleware extends SimpleMiddleware {
+    final static Object lock = new Object();
+    static boolean initialized;
+    static boolean success;
+    boolean instanceInitialized;
+    boolean enabled = true;
+
+    public void enable(boolean enabled) {
+        this.enabled = enabled;
+        if (!enabled) {
+            instanceInitialized = false;
+            middleware.setSSLContext(null);
+        }
+    }
+
+    static void initialize(Context context) {
+        try {
+            synchronized (lock) {
+                if (initialized)
+                    return;
+                initialized = true;
+                Context gms = context.createPackageContext("com.google.android.gms", Context.CONTEXT_INCLUDE_CODE | Context.CONTEXT_IGNORE_SECURITY);
+                Class clazz = gms.getClassLoader().loadClass("com.google.android.gms.common.security.ProviderInstallerImpl");
+                clazz.getMethod("insertProvider", Context.class).invoke(null, context);
+                success = true;
+            }
+        }
+        catch (Exception e) {
+        }
+    }
+
+    private void initialize() {
+        initialize(context);
+        if (success && !instanceInitialized && enabled) {
+            instanceInitialized = true;
+            try {
+                SSLContext sslContext = SSLContext.getInstance("TLS");
+                sslContext.init(null, null, null);
+                middleware.setSSLContext(sslContext);
+            }
+            catch (Exception e) {
+            }
+        }
+    }
+
+    AsyncSSLSocketMiddleware middleware;
+    Context context;
+    public ConscryptMiddleware(Context context, AsyncSSLSocketMiddleware middleware) {
+        this.middleware = middleware;
+        this.context = context.getApplicationContext();
+    }
+
+    @Override
+    public Cancellable getSocket(GetSocketData data) {
+        // initialize here vs the constructor, or this will potentially block the ui thread.
+        initialize();
+        return super.getSocket(data);
+    }
+}
