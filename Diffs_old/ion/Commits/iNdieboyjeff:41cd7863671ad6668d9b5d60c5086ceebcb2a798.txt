diff --git a/ion-sample/project.properties b/ion-sample/project.properties
index 5f8422a2..3f0d02a9 100644
--- a/ion-sample/project.properties
+++ b/ion-sample/project.properties
@@ -11,6 +11,6 @@
 #proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
 
 # Project target.
-target=android-17
+target=android-18
 android.library.reference.1=../ion
 
diff --git a/ion/ion.iml b/ion/ion.iml
index 35929d9c..c18c5d55 100644
--- a/ion/ion.iml
+++ b/ion/ion.iml
@@ -20,7 +20,7 @@
       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/gen" isTestSource="false" />
     </content>
-    <orderEntry type="jdk" jdkName="Android 4.3 Platform" jdkType="Android SDK" />
+    <orderEntry type="jdk" jdkName="Android API 19 Platform" jdkType="Android SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="module-library" exported="">
       <library>
diff --git a/ion/project.properties b/ion/project.properties
index 546e5eb3..22cd8d31 100644
--- a/ion/project.properties
+++ b/ion/project.properties
@@ -11,7 +11,7 @@
 #proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
 
 # Project target.
-target=android-18
+target=android-19
 android.library=true
 
 
diff --git a/ion/src/com/koushikdutta/ion/Ion.java b/ion/src/com/koushikdutta/ion/Ion.java
index 54f59b0b..db6339bd 100644
--- a/ion/src/com/koushikdutta/ion/Ion.java
+++ b/ion/src/com/koushikdutta/ion/Ion.java
@@ -3,6 +3,7 @@
 import java.io.File;
 import java.net.URI;
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 import java.util.WeakHashMap;
 import java.util.concurrent.ExecutorService;
@@ -102,8 +103,21 @@ public FutureBuilder build(Context context, File file) {
      * @return
      */
     public static Ion getDefault(Context context) {
+        return getInstance(context, "ion");
+    }
+
+    private static HashMap<String, Ion> instances = new HashMap<String, Ion>();
+
+    /**
+     * Get the given Ion instance by name
+     * @param context
+     * @param name
+     * @return
+     */
+    public static Ion getInstance(Context context, String name) {
+        Ion instance = instances.get(name);
         if (instance == null)
-            instance = new Ion(context, "ion");
+            instances.put(name, instance = new Ion(context, name));
         return instance;
     }
 
@@ -462,6 +476,4 @@ public Config configure() {
     public IonBitmapCache getBitmapCache() {
         return bitmapCache;
     }
-
-    static Ion instance;
 }
diff --git a/ion/src/com/koushikdutta/ion/IonBitmapRequestBuilder.java b/ion/src/com/koushikdutta/ion/IonBitmapRequestBuilder.java
index 0ed4ae93..f0431aa9 100644
--- a/ion/src/com/koushikdutta/ion/IonBitmapRequestBuilder.java
+++ b/ion/src/com/koushikdutta/ion/IonBitmapRequestBuilder.java
@@ -178,6 +178,7 @@ public void run() {
     private IonDrawable setIonDrawable(ImageView imageView, BitmapInfo info, int loadedFrom) {
         IonDrawable ret = IonDrawable.getOrCreateIonDrawable(imageView);
         ret.setBitmap(info, loadedFrom);
+        ret.setSize(resizeWidth, resizeHeight);
         ret.setError(errorResource, errorDrawable);
         ret.setPlaceholder(placeholderResource, placeholderDrawable);
         ret.setInAnimation(inAnimation, inAnimationResource);
diff --git a/ion/src/com/koushikdutta/ion/IonDrawable.java b/ion/src/com/koushikdutta/ion/IonDrawable.java
index a4add3f4..857b0f17 100644
--- a/ion/src/com/koushikdutta/ion/IonDrawable.java
+++ b/ion/src/com/koushikdutta/ion/IonDrawable.java
@@ -33,6 +33,8 @@
     private int loadedFrom;
     private IonDrawableCallback callback;
     private boolean disableFadeIn;
+    private int resizeWidth;
+    private int resizeHeight;
 
     public IonDrawable cancel() {
         requestCount++;
@@ -148,6 +150,15 @@ public IonDrawable setBitmap(BitmapInfo info, int loadedFrom) {
         return this;
     }
 
+    public IonDrawable setSize(int resizeWidth, int resizeHeight) {
+        if (this.resizeWidth == resizeWidth && this.resizeHeight == resizeHeight)
+            return this;
+        this.resizeWidth = resizeWidth;
+        this.resizeHeight = resizeHeight;
+        invalidateSelf();
+        return this;
+    }
+
     public IonDrawable setError(int resource, Drawable drawable) {
         if ((drawable != null && drawable == this.error) || (resource != 0 && resource == errorResource))
             return this;
@@ -185,6 +196,8 @@ public void setDither(boolean dither) {
     public int getIntrinsicWidth() {
         if (info != null && info.bitmaps != null)
             return info.bitmaps[0].getScaledWidth(resources.getDisplayMetrics().densityDpi);
+        if (resizeWidth > 0)
+            return resizeWidth;
         if (error != null)
             return error.getIntrinsicWidth();
         if (placeholder != null)
@@ -196,6 +209,8 @@ public int getIntrinsicWidth() {
     public int getIntrinsicHeight() {
         if (info != null && info.bitmaps != null)
             return info.bitmaps[0].getScaledHeight(resources.getDisplayMetrics().densityDpi);
+        if (resizeHeight > 0)
+            return resizeHeight;
         if (error != null)
             return error.getIntrinsicHeight();
         if (placeholder != null)
