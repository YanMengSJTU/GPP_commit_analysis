diff --git a/ion-sample/ion-sample.iml b/ion-sample/ion-sample.iml
index 489f627d..998798d3 100644
--- a/ion-sample/ion-sample.iml
+++ b/ion-sample/ion-sample.iml
@@ -13,7 +13,9 @@
       </configuration>
     </facet>
   </component>
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
+  <component name="NewModuleRootManager" inherit-compiler-output="false">
+    <output url="file://$MODULE_DIR$/build/classes/main" />
+    <output-test url="file://$MODULE_DIR$/build/classes/test" />
     <exclude-output />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
diff --git a/ion-test/ion-test.iml b/ion-test/ion-test.iml
index d91d4670..31ab5ad4 100644
--- a/ion-test/ion-test.iml
+++ b/ion-test/ion-test.iml
@@ -13,7 +13,9 @@
       </configuration>
     </facet>
   </component>
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
+  <component name="NewModuleRootManager" inherit-compiler-output="false">
+    <output url="file://$MODULE_DIR$/build/classes/main" />
+    <output-test url="file://$MODULE_DIR$/build/classes/test" />
     <exclude-output />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
diff --git a/ion/ion.iml b/ion/ion.iml
index 2494382d..f3f837b5 100644
--- a/ion/ion.iml
+++ b/ion/ion.iml
@@ -14,7 +14,9 @@
       </configuration>
     </facet>
   </component>
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
+  <component name="NewModuleRootManager" inherit-compiler-output="false">
+    <output url="file://$MODULE_DIR$/build/classes/main" />
+    <output-test url="file://$MODULE_DIR$/build/classes/test" />
     <exclude-output />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
diff --git a/ion/src/com/koushikdutta/ion/Ion.java b/ion/src/com/koushikdutta/ion/Ion.java
index 1519db8e..c74a6380 100644
--- a/ion/src/com/koushikdutta/ion/Ion.java
+++ b/ion/src/com/koushikdutta/ion/Ion.java
@@ -109,7 +109,7 @@ public static Ion getInstance(Context context, String name) {
      * @param imageView
      * @return
      */
-    public static Builders.ImageView.F<? extends Builders.ImageView.F<?>> with(ImageView imageView) {
+    public static Builders.IV.F<? extends Builders.IV.F<?>> with(ImageView imageView) {
         Ion ion = getDefault(imageView.getContext());
         return ion.build(imageView);
     }
@@ -211,7 +211,7 @@ public FutureBuilder build(Context context, File file) {
      * @param imageView
      * @return
      */
-    public Builders.ImageView.F<? extends Builders.ImageView.F<?>> build(ImageView imageView) {
+    public Builders.IV.F<? extends Builders.IV.F<?>> build(ImageView imageView) {
         if (Thread.currentThread() != Looper.getMainLooper().getThread())
             throw new IllegalStateException("must be called from UI thread");
         bitmapBuilder.reset();
diff --git a/ion/src/com/koushikdutta/ion/IonBitmapRequestBuilder.java b/ion/src/com/koushikdutta/ion/IonBitmapRequestBuilder.java
index e93cfcbb..09e7c460 100644
--- a/ion/src/com/koushikdutta/ion/IonBitmapRequestBuilder.java
+++ b/ion/src/com/koushikdutta/ion/IonBitmapRequestBuilder.java
@@ -25,7 +25,7 @@
 /**
  * Created by koush on 5/23/13.
  */
-class IonBitmapRequestBuilder implements Builders.ImageView.F, ImageViewFutureBuilder, BitmapFutureBuilder, Builders.Any.BF {
+class IonBitmapRequestBuilder implements Builders.IV.F, ImageViewFutureBuilder, BitmapFutureBuilder, Builders.Any.BF {
     private static final SimpleFuture<ImageView> FUTURE_IMAGEVIEW_NULL_URI = new SimpleFuture<ImageView>() {
         {
             setComplete(new NullPointerException("uri"));
diff --git a/ion/src/com/koushikdutta/ion/builder/Builders.java b/ion/src/com/koushikdutta/ion/builder/Builders.java
index 9c1592af..e389cda8 100644
--- a/ion/src/com/koushikdutta/ion/builder/Builders.java
+++ b/ion/src/com/koushikdutta/ion/builder/Builders.java
@@ -5,7 +5,7 @@
  */
 public interface Builders {
 
-    public interface ImageView {
+    public interface IV {
         public interface F<A extends F<?>> extends ImageViewBuilder<A>, BitmapBuilder<A>, LoadImageViewFutureBuilder {
         }
     }
