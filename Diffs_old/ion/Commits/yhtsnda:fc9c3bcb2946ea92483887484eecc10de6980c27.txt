diff --git a/ion-sample/ion-sample.iml b/ion-sample/ion-sample.iml
index 93508f60..8bfb1919 100644
--- a/ion-sample/ion-sample.iml
+++ b/ion-sample/ion-sample.iml
@@ -18,6 +18,7 @@
         <option name="COMPILE_JAVA_TASK_NAME" value="compileDebugJava" />
         <option name="ASSEMBLE_TEST_TASK_NAME" value="assembleDebugTest" />
         <option name="SOURCE_GEN_TASK_NAME" value="generateDebugSources" />
+        <option name="TEST_SOURCE_GEN_TASK_NAME" value="generateDebugTestSources" />
         <option name="ALLOW_USER_CONFIGURATION" value="false" />
         <option name="RES_FOLDERS_RELATIVE_PATH" value="file://$MODULE_DIR$/res" />
         <option name="ASSETS_FOLDER_RELATIVE_PATH" value="/src/main/assets" />
diff --git a/ion/ion-ion.iml b/ion/ion-ion.iml
index 90891c73..ae26ea85 100644
--- a/ion/ion-ion.iml
+++ b/ion/ion-ion.iml
@@ -13,6 +13,7 @@
         <option name="COMPILE_JAVA_TASK_NAME" value="compileDebugJava" />
         <option name="ASSEMBLE_TEST_TASK_NAME" value="assembleDebugTest" />
         <option name="SOURCE_GEN_TASK_NAME" value="generateDebugSources" />
+        <option name="TEST_SOURCE_GEN_TASK_NAME" value="generateDebugTestSources" />
         <option name="ALLOW_USER_CONFIGURATION" value="false" />
         <option name="RES_FOLDER_RELATIVE_PATH" value="/src/main/res" />
         <option name="RES_FOLDERS_RELATIVE_PATH" value="" />
diff --git a/ion/src/com/koushikdutta/ion/IonDrawable.java b/ion/src/com/koushikdutta/ion/IonDrawable.java
index 7b2411b6..d8a37053 100644
--- a/ion/src/com/koushikdutta/ion/IonDrawable.java
+++ b/ion/src/com/koushikdutta/ion/IonDrawable.java
@@ -44,6 +44,7 @@
     private int resizeWidth;
     private int resizeHeight;
     private Ion ion;
+    private BitmapFetcher bitmapFetcher;
 
     public IonDrawable ion(Ion ion) {
         this.ion = ion;
@@ -94,12 +95,17 @@ public void onCompleted(Exception e, ImageView result) {
     public ImageViewFutureImpl getFuture() {
         return callback.imageViewFuture;
     }
-    
+
     public IonDrawable setDisableFadeIn(boolean disableFadeIn) {
         this.disableFadeIn = disableFadeIn;
         return this;
     }
 
+    public IonDrawable setBitmapFetcher(BitmapFetcher bitmapFetcher) {
+        this.bitmapFetcher = bitmapFetcher;
+        return this;
+    }
+
     public IonDrawable setInAnimation(Animation inAnimation, int inAnimationResource) {
         callback.inAnimation = inAnimation;
         callback.inAnimationResource = inAnimationResource;
@@ -446,7 +452,21 @@ else if (false) {
     @Override
     public void draw(Canvas canvas) {
         // TODO: handle animated drawables
+        // check if we have a bitmap, otherwise do the placeholder and bail
         if (info == null) {
+            // check if we can fetch the bitmap
+            if (bitmapFetcher != null) {
+                // check to see if there's too many imageview loads
+                // already in progress
+                if (BitmapFetcher.shouldDeferImageView(ion)) {
+                    bitmapFetcher.defer();
+                }
+                else {
+                    bitmapFetcher.execute();
+                }
+                bitmapFetcher = null;
+            }
+
             drawDrawable(canvas, tryGetPlaceholderResource());
             return;
         }
diff --git a/ion/src/com/koushikdutta/ion/IonImageViewRequestBuilder.java b/ion/src/com/koushikdutta/ion/IonImageViewRequestBuilder.java
index 389a8c0b..b57b4cb4 100644
--- a/ion/src/com/koushikdutta/ion/IonImageViewRequestBuilder.java
+++ b/ion/src/com/koushikdutta/ion/IonImageViewRequestBuilder.java
@@ -82,10 +82,15 @@ IonImageViewRequestBuilder withImageView(ImageView imageView) {
         return this;
     }
 
-    private IonDrawable setIonDrawable(ImageView imageView, BitmapInfo info, int loadedFrom) {
+    private IonDrawable setIonDrawable(ImageView imageView, BitmapFetcher bitmapFetcher, int loadedFrom) {
+        BitmapInfo info = bitmapFetcher.info;
+        if (info != null)
+            bitmapFetcher = null;
+
         IonDrawable ret = IonDrawable.getOrCreateIonDrawable(imageView)
         .ion(ion)
         .setBitmap(info, loadedFrom)
+        .setBitmapFetcher(bitmapFetcher)
         .setSize(resizeWidth, resizeHeight)
         .setError(errorResource, errorDrawable)
         .setPlaceholder(placeholderResource, placeholderDrawable)
@@ -113,7 +118,7 @@ public ImageViewFuture intoImageView(ImageView imageView) {
         BitmapFetcher bitmapFetcher = executeCache();
         if (bitmapFetcher.info != null) {
             doAnimation(imageView, null, 0);
-            IonDrawable drawable = setIonDrawable(imageView, bitmapFetcher.info, Loader.LoaderEmitter.LOADED_FROM_MEMORY);
+            IonDrawable drawable = setIonDrawable(imageView, bitmapFetcher, Loader.LoaderEmitter.LOADED_FROM_MEMORY);
             drawable.cancel();
             IonDrawable.ImageViewFutureImpl imageViewFuture = drawable.getFuture();
             imageViewFuture.reset();
@@ -121,21 +126,12 @@ public ImageViewFuture intoImageView(ImageView imageView) {
             return imageViewFuture;
         }
 
-        IonDrawable drawable = setIonDrawable(imageView, null, 0);
+        IonDrawable drawable = setIonDrawable(imageView, bitmapFetcher, 0);
         doAnimation(imageView, loadAnimation, loadAnimationResource);
         IonDrawable.ImageViewFutureImpl imageViewFuture = drawable.getFuture();
         imageViewFuture.reset();
         drawable.register(ion, bitmapFetcher.bitmapKey);
 
-        // nothing from cache, check to see if there's too many imageview loads
-        // already in progress
-        if (BitmapFetcher.shouldDeferImageView(ion)) {
-            bitmapFetcher.defer();
-        }
-        else {
-            bitmapFetcher.execute();
-        }
-
         return imageViewFuture;
     }
 
diff --git a/ion/src/com/koushikdutta/ion/builder/AnimateGifMode.java b/ion/src/com/koushikdutta/ion/builder/AnimateGifMode.java
new file mode 100644
index 00000000..65fe5c12
--- /dev/null
+++ b/ion/src/com/koushikdutta/ion/builder/AnimateGifMode.java
@@ -0,0 +1,19 @@
+package com.koushikdutta.ion.builder;
+
+/**
+* Created by koush on 8/26/14.
+*/
+public enum AnimateGifMode {
+    /**
+     * Do not animate this gif
+     */
+    NO_ANIMATE,
+    /**
+     * Animate this gif and repeat the animation
+     */
+    ANIMATE,
+    /**
+     * Animate this gif, but do not repeat the animation
+     */
+    ANIMATE_ONCE
+}
