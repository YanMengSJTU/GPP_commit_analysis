diff --git a/ion-test/src/com/koushikdutta/ion/test/CookieTests.java b/ion-test/src/com/koushikdutta/ion/test/CookieTests.java
new file mode 100644
index 00000000..8c9d2069
--- /dev/null
+++ b/ion-test/src/com/koushikdutta/ion/test/CookieTests.java
@@ -0,0 +1,48 @@
+package com.koushikdutta.ion.test;
+
+import android.os.SystemClock;
+import android.test.AndroidTestCase;
+
+import com.koushikdutta.async.http.libcore.RawHeaders;
+import com.koushikdutta.async.http.libcore.RequestHeaders;
+import com.koushikdutta.ion.Ion;
+
+import java.net.CookieManager;
+import java.net.URI;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * Created by koush on 12/1/13.
+ */
+public class CookieTests extends AndroidTestCase {
+    public void testCookies() throws Exception {
+        Ion ion = Ion.getDefault(getContext());
+
+        ion.getCookieMiddleware().clear();
+
+        CookieManager manager = new CookieManager(null, null);
+
+        RawHeaders headers = new RawHeaders();
+        headers.setStatusLine("HTTP/1.1 200 OK");
+        headers.set("Set-Cookie", "foo=bar");
+
+        URI uri = URI.create("http://example.com");
+        manager.put(uri, headers.toMultimap());
+
+        headers.set("Set-Cookie", "poop=scoop");
+        manager.put(uri, headers.toMultimap());
+
+        headers.set("Set-Cookie", "foo=goop");
+        manager.put(uri, headers.toMultimap());
+
+        RawHeaders newHeaders = new RawHeaders();
+        RequestHeaders requestHeaders = new RequestHeaders(uri, newHeaders);
+        Map<String, List<String>> cookies = manager.get(uri, newHeaders.toMultimap());
+        manager.get(uri, cookies);
+        requestHeaders.addCookies(cookies);
+        assertTrue(newHeaders.get("Cookie").contains("foo=goop"));
+        assertTrue(newHeaders.get("Cookie").contains("poop=scoop"));
+        assertFalse(newHeaders.get("Cookie").contains("bar"));
+    }
+}
diff --git a/ion/src/com/koushikdutta/ion/IonDrawable.java b/ion/src/com/koushikdutta/ion/IonDrawable.java
index 857b0f17..fd61a795 100644
--- a/ion/src/com/koushikdutta/ion/IonDrawable.java
+++ b/ion/src/com/koushikdutta/ion/IonDrawable.java
@@ -98,7 +98,6 @@ public void onCompleted(Exception e, BitmapInfo result) {
             imageView.setImageDrawable(drawable);
             IonBitmapRequestBuilder.doAnimation(imageView, inAnimation, inAnimationResource);
             imageViewFuture.setComplete(e, imageView);
-
         }
     }
 
diff --git a/ion/src/com/koushikdutta/ion/cookie/CookieMiddleware.java b/ion/src/com/koushikdutta/ion/cookie/CookieMiddleware.java
index ea6281dd..e8b8ff24 100644
--- a/ion/src/com/koushikdutta/ion/cookie/CookieMiddleware.java
+++ b/ion/src/com/koushikdutta/ion/cookie/CookieMiddleware.java
@@ -67,7 +67,7 @@ else if (!TextUtils.isEmpty(line)) {
     @Override
     public void onSocket(OnSocketData data) {
         try {
-            Map<String, List<String>> cookies =  manager.get (data.request.getUri(), data.request.getHeaders().getHeaders().toMultimap());
+            Map<String, List<String>> cookies = manager.get (data.request.getUri(), data.request.getHeaders().getHeaders().toMultimap());
             data.request.getHeaders().addCookies(cookies);
         }
         catch (Exception e) {
diff --git a/ion/src/com/koushikdutta/ion/loader/PackageIconLoader.java b/ion/src/com/koushikdutta/ion/loader/PackageIconLoader.java
index 8b914b83..0f9a0930 100644
--- a/ion/src/com/koushikdutta/ion/loader/PackageIconLoader.java
+++ b/ion/src/com/koushikdutta/ion/loader/PackageIconLoader.java
@@ -35,7 +35,7 @@
     @Override
     public Future<BitmapInfo> loadBitmap(final Ion ion, final String uri) {
         final URI request = URI.create(uri);
-        if (!request.getScheme().startsWith("package"))
+        if (request == null || request.getScheme() == null || !request.getScheme().startsWith("package"))
             return null;
 
         final SimpleFuture<BitmapInfo> ret = new SimpleFuture<BitmapInfo>();
