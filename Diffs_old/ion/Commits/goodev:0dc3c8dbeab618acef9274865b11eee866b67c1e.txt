diff --git a/ion/src/com/koushikdutta/ion/bitmap/IonBitmapCache.java b/ion/src/com/koushikdutta/ion/bitmap/IonBitmapCache.java
index afcf02d7..19d4afbc 100644
--- a/ion/src/com/koushikdutta/ion/bitmap/IonBitmapCache.java
+++ b/ion/src/com/koushikdutta/ion/bitmap/IonBitmapCache.java
@@ -53,7 +53,7 @@ public IonBitmapCache(Ion ion) {
                 .getDefaultDisplay().getMetrics(metrics);
         final AssetManager mgr = context.getAssets();
         resources = new Resources(mgr, metrics, context.getResources().getConfiguration());
-        cache = new LruBitmapCache(getHeapSize(context) / 7);
+        cache = new LruBitmapCache(getHeapSize(context) / 8);
     }
 
     public BitmapInfo remove(String key) {
diff --git a/ion/src/com/koushikdutta/ion/font/IonTypefaceCache.java b/ion/src/com/koushikdutta/ion/font/IonTypefaceCache.java
index 2211b2c9..b4edad77 100644
--- a/ion/src/com/koushikdutta/ion/font/IonTypefaceCache.java
+++ b/ion/src/com/koushikdutta/ion/font/IonTypefaceCache.java
@@ -30,7 +30,7 @@ public void setErrorCacheDuration(long errorCacheDuration) {
     public IonTypefaceCache(Ion ion) {
         Context context = ion.getContext();
         this.ion = ion;
-        cache = new LruTypefaceCache(getHeapSize(context) / 10);
+        cache = new LruTypefaceCache(getHeapSize(context) / 7);
     }
 
     public TypefaceInfo remove(String key) {
diff --git a/ion/src/com/koushikdutta/ion/font/LruTypefaceCache.java b/ion/src/com/koushikdutta/ion/font/LruTypefaceCache.java
index 728cfa63..9559cade 100644
--- a/ion/src/com/koushikdutta/ion/font/LruTypefaceCache.java
+++ b/ion/src/com/koushikdutta/ion/font/LruTypefaceCache.java
@@ -2,7 +2,6 @@
 package com.koushikdutta.ion.font;
 
 import com.koushikdutta.async.util.LruCache;
-import com.koushikdutta.ion.L;
 import com.koushikdutta.ion.bitmap.SoftReferenceHashtable;
 
 public class LruTypefaceCache extends LruCache<String, TypefaceInfo> {
@@ -19,7 +18,6 @@ protected long sizeOf(String key, TypefaceInfo info) {
 
     public TypefaceInfo getTypefaceInfo(String key) {
         TypefaceInfo ret = get(key);
-        L.d("... "+ key+" ... "+ ret);
         if (ret != null)
             return ret;
 
diff --git a/ion/src/com/koushikdutta/ion/font/TypefaceFetcher.java b/ion/src/com/koushikdutta/ion/font/TypefaceFetcher.java
index 8fb4890c..0a370b2f 100644
--- a/ion/src/com/koushikdutta/ion/font/TypefaceFetcher.java
+++ b/ion/src/com/koushikdutta/ion/font/TypefaceFetcher.java
@@ -32,6 +32,7 @@
     IonRequestBuilder builder;
 
     private boolean fastLoad(String uri) {
+        if(true) return false;
         Ion ion = builder.ion;
 
         for (Loader loader : ion.configure().getLoaders()) {
@@ -53,7 +54,7 @@ public void onCompleted(Exception e, TypefaceInfo result) {
         return false;
     }
 
-    public static final int MAX_TYPEFACE_LOAD = 2;
+    public static final int MAX_TYPEFACE_LOAD = 6;
 
     public static boolean shouldDeferTextView(Ion ion) {
         int size = ion.typefacesPending.keySet().size();
@@ -186,10 +187,11 @@ public void run() {
     public void execute() {
         final Ion ion = builder.ion;
 
-        final File file = getFileFromUri(builder.uri);
-        final File ttf = new File(file.getAbsolutePath().replace(".zip", ".ttf"));
+        final File ttf = getTtfFileFromUri(builder.uri);
+        if(ttf == null) {
+            return;
+        }
         if (!builder.noCache && (/*file.exists() ||*/ ttf.exists())) {
-            L.d("get font from file " + ttf.getAbsolutePath());
             getTypefaceFromFile(ion, typefaceKey, ttf.getAbsolutePath());
             return;
         }
@@ -198,20 +200,19 @@ public void execute() {
         // subsequent retransformation. See if we can retrieve the bitmap from
         // the disk cache.
         // See TransformBitmap for where the cache is populated.
-        FileCache fileCache = ion.getCache();
-        L.d("cache..............||| " + fileCache);
-        if (!builder.noCache && fileCache.exists(typefaceKey)) {
-            getTypefaceFromHttpCache(ion, typefaceKey, ttf);
-            return;
-        }
+//        FileCache fileCache = ion.getCache();
+//        L.d("cache..............||| " + fileCache);
+//        if (!builder.noCache && fileCache.exists(typefaceKey)) {
+//            getTypefaceFromHttpCache(ion, typefaceKey, ttf);
+//            return;
+//        }
 
-        L.d("cache..............11" + fileCache);
+//        L.d("cache..............11" + fileCache);
         // Perform a download as necessary.
         if (ion.typefacesPending.tag(downloadKey) == null && !fastLoad(builder.uri)) {
             builder.setHandler(null);
             builder.loadRequestCallback = this;
 
-            L.d("http excute...." + file.getAbsolutePath());
             L.d("http excute uri --- ...." +builder.uri);
 
             SimpleFuture<File> ff = builder.execute(new InputStreamParser(), new Runnable() {
@@ -228,6 +229,7 @@ public void run() {
 
                 @Override
                 protected void transform(InputStream result) throws Exception {
+                    //TODO 这个是不是也在UI线程执行的？？？
                     try {
                         L.d("------------===");
                         ZipInputStream zis = new ZipInputStream(result);
@@ -272,13 +274,33 @@ protected void transform(InputStream result) throws Exception {
     }
 
     private File getFileFromUri(String uri) {
-        int index = uri.lastIndexOf("/");
-        String name = uri.substring(index, uri.length());
-        File dir = builder.contextReference.getContext().getFilesDir();
-        dir = new File(dir, "prettf");
-        if(!dir.exists()) {
-            dir.mkdirs();
+        try {
+            int index = uri.lastIndexOf("/");
+            String name = uri.substring(index, uri.length());
+            File dir = builder.contextReference.getContext().getFilesDir();
+            dir = new File(dir, "prettf");
+            if(!dir.exists()) {
+                dir.mkdirs();
+            }
+            return new File(dir, name);
+        } catch (Exception e) {
+            //builder.contextReference 可能为null
+            return null;
+        }
+    }
+    private File getTtfFileFromUri(String uri) {
+        try {
+            int index = uri.lastIndexOf("/");
+            String name = uri.substring(index, uri.length()).replace(".zip", ".ttf");
+            File dir = builder.contextReference.getContext().getFilesDir();
+            dir = new File(dir, "prettf");
+            if(!dir.exists()) {
+                dir.mkdirs();
+            }
+            return new File(dir, name);
+        } catch (Exception e) {
+            //builder.contextReference 可能为null
+            return null;
         }
-        return new File(dir, name);
     }
 }
