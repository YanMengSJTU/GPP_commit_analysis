diff --git a/ion-sample/ion-sample.iml b/ion-sample/ion-sample.iml
index 93508f60..ada06135 100644
--- a/ion-sample/ion-sample.iml
+++ b/ion-sample/ion-sample.iml
@@ -59,16 +59,34 @@
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/jni" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/assets" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/bundles" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/coverage-instrumented-classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dependency-cache" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dex" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dex-cache" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jacoco" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/javaResources" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/libs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/lint" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/ndk" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/pre-dexed" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/proguard" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
       <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
     </content>
     <orderEntry type="jdk" jdkName="Android API 19 Platform" jdkType="Android SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" exported="" name="gson-2.2.4" level="project" />
     <orderEntry type="library" exported="" name="ion-1.3.7" level="project" />
     <orderEntry type="library" exported="" name="androidasync-1.3.7" level="project" />
     <orderEntry type="library" exported="" name="library-1.2.3" level="project" />
     <orderEntry type="library" exported="" name="support-v4-19.1.0" level="project" />
+    <orderEntry type="library" exported="" name="gson-2.3" level="project" />
   </component>
 </module>
 
diff --git a/ion/ion-ion.iml b/ion/ion-ion.iml
index 90891c73..0bb3da3d 100644
--- a/ion/ion-ion.iml
+++ b/ion/ion-ion.iml
@@ -57,15 +57,35 @@
       <sourceFolder url="file://$MODULE_DIR$/test/src" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/jni" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/assets" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/bundles" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/coverage-instrumented-classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dependency-cache" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dex" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dex-cache" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jacoco" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/javaResources" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/libs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/lint" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/ndk" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/pre-dexed" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/proguard" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
+      <excludeFolder url="file://$MODULE_DIR$/build/libs" />
       <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/poms" />
       <excludeFolder url="file://$MODULE_DIR$/build/tmp" />
     </content>
     <orderEntry type="jdk" jdkName="Android API 19 Platform" jdkType="Android SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" exported="" name="gson-2.2.4" level="project" />
     <orderEntry type="library" exported="" name="support-annotations-20.0.0" level="project" />
     <orderEntry type="library" exported="" name="support-v4-20.0.0" level="project" />
+    <orderEntry type="library" exported="" name="gson-2.3" level="project" />
     <orderEntry type="module" module-name="AndroidAsync-AndroidAsync" exported="" />
   </component>
 </module>
diff --git a/ion/src/com/koushikdutta/ion/Ion.java b/ion/src/com/koushikdutta/ion/Ion.java
index 927f0294..2c04dd26 100644
--- a/ion/src/com/koushikdutta/ion/Ion.java
+++ b/ion/src/com/koushikdutta/ion/Ion.java
@@ -46,6 +46,7 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.security.NoSuchAlgorithmException;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
@@ -53,6 +54,8 @@
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
 
+import javax.net.ssl.SSLContext;
+
 /**
  * Created by koush on 5/21/13.
  */
@@ -554,6 +557,11 @@ public ResponseCacheMiddleware getResponseCache() {
             return responseCache;
         }
 
+        public SSLContext createSSLContext(String algorithm) throws NoSuchAlgorithmException {
+            conscryptMiddleware.initialize();
+            return SSLContext.getInstance(algorithm);
+        }
+
         /**
          * Get the Gson object in use by this Ion instance.
          * This can be used to customize serialization and deserialization
diff --git a/ion/src/com/koushikdutta/ion/LoadBitmap.java b/ion/src/com/koushikdutta/ion/LoadBitmap.java
index 9d21b154..7a426e5c 100644
--- a/ion/src/com/koushikdutta/ion/LoadBitmap.java
+++ b/ion/src/com/koushikdutta/ion/LoadBitmap.java
@@ -56,8 +56,6 @@ public void run() {
                     Bitmap[] bitmaps;
                     int[] delays;
                     BitmapFactory.Options options = ion.bitmapCache.prepareBitmapOptions(bb.array(), bb.arrayOffset() + bb.position(), bb.remaining(), resizeWidth, resizeHeight);
-                    if (options == null)
-                        throw new Exception("BitmapFactory.Options failed to load");
                     final Point size = new Point(options.outWidth, options.outHeight);
                     if (animateGif && TextUtils.equals("image/gif", options.outMimeType)) {
                         GifDecoder decoder = new GifDecoder(bb.array(), bb.arrayOffset() + bb.position(), bb.remaining(), new GifAction() {
diff --git a/ion/src/com/koushikdutta/ion/LoadDeepZoom.java b/ion/src/com/koushikdutta/ion/LoadDeepZoom.java
index f74f38e1..f68c5b59 100644
--- a/ion/src/com/koushikdutta/ion/LoadDeepZoom.java
+++ b/ion/src/com/koushikdutta/ion/LoadDeepZoom.java
@@ -58,8 +58,6 @@ public void run() {
                         file = tempFile;
                     }
                     BitmapFactory.Options options = ion.getBitmapCache().prepareBitmapOptions(file, 0, 0);
-                    if (options == null)
-                        throw new Exception("BitmapFactory.Options failed to load");
                     final Point size = new Point(options.outWidth, options.outHeight);
                     if (animateGif && TextUtils.equals("image/gif", options.outMimeType)) {
                         fin = fileCache.get(key);
diff --git a/ion/src/com/koushikdutta/ion/bitmap/BitmapDecodeException.java b/ion/src/com/koushikdutta/ion/bitmap/BitmapDecodeException.java
new file mode 100644
index 00000000..aaa45b0c
--- /dev/null
+++ b/ion/src/com/koushikdutta/ion/bitmap/BitmapDecodeException.java
@@ -0,0 +1,19 @@
+package com.koushikdutta.ion.bitmap;
+
+/**
+* Created by robUx4 on 28/08/2014.
+*/
+public class BitmapDecodeException extends Exception {
+	public final int width;
+	public final int height;
+
+	public BitmapDecodeException(int width, int height) {
+		this.width = width;
+		this.height = height;
+	}
+
+	@Override
+	public String toString() {
+		return super.toString() + " size="+width+'x'+height;
+	}
+}
diff --git a/ion/src/com/koushikdutta/ion/bitmap/IonBitmapCache.java b/ion/src/com/koushikdutta/ion/bitmap/IonBitmapCache.java
index fd48041d..afcf02d7 100644
--- a/ion/src/com/koushikdutta/ion/bitmap/IonBitmapCache.java
+++ b/ion/src/com/koushikdutta/ion/bitmap/IonBitmapCache.java
@@ -11,7 +11,6 @@
 import android.graphics.Matrix;
 import android.graphics.Point;
 import android.graphics.Rect;
-import android.net.Uri;
 import android.os.Build;
 import android.os.Looper;
 import android.util.DisplayMetrics;
@@ -22,7 +21,6 @@
 import com.koushikdutta.ion.Ion;
 
 import java.io.File;
-import java.io.FileDescriptor;
 import java.io.FileInputStream;
 import java.io.IOException;
 import java.io.InputStream;
@@ -121,9 +119,9 @@ private Point computeTarget(int minx, int miny) {
         return new Point(targetWidth, targetHeight);
     }
 
-    private BitmapFactory.Options prepareBitmapOptions(BitmapFactory.Options o, int minx, int miny) {
+	private BitmapFactory.Options prepareBitmapOptions(BitmapFactory.Options o, int minx, int miny) throws BitmapDecodeException {
         if (o.outWidth < 0 || o.outHeight < 0)
-            return null;
+            throw new BitmapDecodeException(o.outWidth, o.outHeight);
         Point target = computeTarget(minx, miny);
         int scale = Math.max(o.outWidth / target.x, o.outHeight / target.y);
         BitmapFactory.Options ret = new BitmapFactory.Options();
@@ -134,28 +132,28 @@ private Point computeTarget(int minx, int miny) {
         return ret;
     }
 
-    public BitmapFactory.Options prepareBitmapOptions(File file, int minx, int miny) {
+    public BitmapFactory.Options prepareBitmapOptions(File file, int minx, int miny) throws BitmapDecodeException {
         BitmapFactory.Options o = new BitmapFactory.Options();
         o.inJustDecodeBounds = true;
         BitmapFactory.decodeFile(file.toString(), o);
         return prepareBitmapOptions(o, minx, miny);
     }
 
-    public BitmapFactory.Options prepareBitmapOptions(byte[] bytes, int offset, int length, int minx, int miny) {
+    public BitmapFactory.Options prepareBitmapOptions(byte[] bytes, int offset, int length, int minx, int miny) throws BitmapDecodeException {
         BitmapFactory.Options o = new BitmapFactory.Options();
         o.inJustDecodeBounds = true;
         BitmapFactory.decodeByteArray(bytes, offset, length, o);
         return prepareBitmapOptions(o, minx, miny);
     }
 
-    public BitmapFactory.Options prepareBitmapOptions(Resources res, int id, int minx, int miny) {
+    public BitmapFactory.Options prepareBitmapOptions(Resources res, int id, int minx, int miny) throws BitmapDecodeException {
         BitmapFactory.Options o = new BitmapFactory.Options();
         o.inJustDecodeBounds = true;
         BitmapFactory.decodeResource(res, id, o);
         return prepareBitmapOptions(o, minx, miny);
     }
 
-    public BitmapFactory.Options prepareBitmapOptions(InputStream in, int minx, int miny) {
+    public BitmapFactory.Options prepareBitmapOptions(InputStream in, int minx, int miny) throws BitmapDecodeException {
         BitmapFactory.Options o = new BitmapFactory.Options();
         o.inJustDecodeBounds = true;
         BitmapFactory.decodeStream(in, null, o);
diff --git a/ion/src/com/koushikdutta/ion/conscrypt/ConscryptMiddleware.java b/ion/src/com/koushikdutta/ion/conscrypt/ConscryptMiddleware.java
index da08c0f2..c3406435 100644
--- a/ion/src/com/koushikdutta/ion/conscrypt/ConscryptMiddleware.java
+++ b/ion/src/com/koushikdutta/ion/conscrypt/ConscryptMiddleware.java
@@ -2,13 +2,11 @@
 
 import android.content.Context;
 
+import com.koushikdutta.async.AsyncSSLSocketWrapper;
 import com.koushikdutta.async.future.Cancellable;
 import com.koushikdutta.async.http.AsyncSSLSocketMiddleware;
 import com.koushikdutta.async.http.SimpleMiddleware;
 
-import java.security.Provider;
-import java.security.Security;
-
 import javax.net.ssl.SSLContext;
 
 /**
@@ -45,14 +43,15 @@ static void initialize(Context context) {
         }
     }
 
-    private void initialize() {
+    public void initialize() {
         initialize(context);
         if (success && !instanceInitialized && enabled) {
             instanceInitialized = true;
             try {
                 SSLContext sslContext = SSLContext.getInstance("TLS");
                 sslContext.init(null, null, null);
-                middleware.setSSLContext(sslContext);
+                if (middleware.getSSLContext() != AsyncSSLSocketWrapper.getDefaultSSLContext())
+                    middleware.setSSLContext(sslContext);
             }
             catch (Exception e) {
             }
diff --git a/ion/src/com/koushikdutta/ion/loader/FileLoader.java b/ion/src/com/koushikdutta/ion/loader/FileLoader.java
index 263db818..7db7c4e3 100644
--- a/ion/src/com/koushikdutta/ion/loader/FileLoader.java
+++ b/ion/src/com/koushikdutta/ion/loader/FileLoader.java
@@ -86,8 +86,6 @@ public void run() {
                 try {
                     File file = new File(URI.create(uri));
                     BitmapFactory.Options options = ion.getBitmapCache().prepareBitmapOptions(file, resizeWidth, resizeHeight);
-                    if (options == null)
-                        throw new Exception("BitmapFactory.Options failed to load");
                     Point size = new Point(options.outWidth, options.outHeight);
                     BitmapInfo info;
                     if (animateGif && TextUtils.equals("image/gif", options.outMimeType)) {
diff --git a/ion/src/com/koushikdutta/ion/loader/ResourceLoader.java b/ion/src/com/koushikdutta/ion/loader/ResourceLoader.java
index f0752c8d..34b54930 100644
--- a/ion/src/com/koushikdutta/ion/loader/ResourceLoader.java
+++ b/ion/src/com/koushikdutta/ion/loader/ResourceLoader.java
@@ -75,8 +75,6 @@ public void run() {
                 try {
                     Resource res = lookupResource(context, uri);
                     BitmapFactory.Options options = ion.getBitmapCache().prepareBitmapOptions(res.res, res.id, resizeWidth, resizeHeight);
-                    if (options == null)
-                        throw new Exception("BitmapFactory.Options failed to load");
                     Point size = new Point(options.outWidth, options.outHeight);
                     BitmapInfo info;
                     if (animateGif && TextUtils.equals("image/gif", options.outMimeType)) {
diff --git a/ion/src/com/koushikdutta/ion/loader/StreamLoader.java b/ion/src/com/koushikdutta/ion/loader/StreamLoader.java
index e49fabd7..d566567d 100644
--- a/ion/src/com/koushikdutta/ion/loader/StreamLoader.java
+++ b/ion/src/com/koushikdutta/ion/loader/StreamLoader.java
@@ -63,8 +63,6 @@ public void run() {
                 try {
                     in = getInputStream(context, uri);
                     BitmapFactory.Options options = ion.getBitmapCache().prepareBitmapOptions(in, resizeWidth, resizeHeight);
-                    if (options == null)
-                        throw new Exception("BitmapFactory.Options failed to load");
                     StreamUtility.closeQuietly(in);
                     Point size = new Point(options.outWidth, options.outHeight);
                     BitmapInfo info;
