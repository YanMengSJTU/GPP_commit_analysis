diff --git a/ion-sample/.classpath b/ion-sample/.classpath
deleted file mode 100644
index 7bc01d9a..00000000
--- a/ion-sample/.classpath
+++ /dev/null
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="src" path="src"/>
-	<classpathentry kind="src" path="gen"/>
-	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
-	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
-	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.DEPENDENCIES"/>
-	<classpathentry kind="output" path="bin/classes"/>
-</classpath>
diff --git a/ion-sample/.project b/ion-sample/.project
deleted file mode 100644
index d0e821b3..00000000
--- a/ion-sample/.project
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>ion-samples</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.ResourceManagerBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.PreCompilerBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.ApkBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>com.android.ide.eclipse.adt.AndroidNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-	</natures>
-</projectDescription>
diff --git a/ion-sample/AndroidManifest.xml b/ion-sample/AndroidManifest.xml
deleted file mode 100644
index 734050f9..00000000
--- a/ion-sample/AndroidManifest.xml
+++ /dev/null
@@ -1,61 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          package="com.koushikdutta.ion.sample"
-          android:versionCode="1"
-          android:versionName="1.0">
-
-    <uses-sdk
-            android:minSdkVersion="11"
-            android:targetSdkVersion="17"/>
-
-    <uses-permission android:name="android.permission.INTERNET"/>
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
-
-    <application
-            android:name=".SampleApplication"
-            android:hardwareAccelerated="true"
-            android:label="@string/app_name"
-            android:icon="@drawable/ic_launcher"
-            android:theme="@style/Theme">
-        <activity
-                android:name=".Twitter"
-                android:label="Twitter Client Sample"/>
-        <activity
-                android:name=".TwitterGson"
-                android:label="Twitter Gson Client Sample"/>
-        <activity
-                android:name=".ProgressBarDownload"
-                android:label="Progress Bar Download"/>
-        <activity
-                android:name=".ProgressBarUpload"
-                android:label="Progress Bar Upload"/>
-        <activity
-                android:name=".GoogleImageSearch"
-                android:label="Google Image Search"/>
-        <activity
-                android:name=".GallerySample"
-                android:label="Gallery Sample"/>
-        <activity
-                android:name=".ImageViewSample"
-                android:label="ImageView Sample"/>
-        <activity
-                android:name=".DeepZoomSample"
-                android:label="DeepZoom Sample"/>
-        <activity
-                android:theme="@android:style/Theme.Material.Light"
-                android:name=".LollipopTransition"
-                android:label="Lollipop Transition"/>
-        <activity
-                android:theme="@android:style/Theme.Material.Light"
-                android:name=".LollipopTransitionFullscreen"
-                android:label="Lollipop Transition"/>
-        <activity
-                android:name=".Samples"
-                android:label="ion samples">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN"/>
-                <category android:name="android.intent.category.LAUNCHER"/>
-            </intent-filter>
-        </activity>
-    </application>
-</manifest>
diff --git a/ion-sample/ant.properties b/ion-sample/ant.properties
deleted file mode 100644
index b0971e89..00000000
--- a/ion-sample/ant.properties
+++ /dev/null
@@ -1,17 +0,0 @@
-# This file is used to override default values used by the Ant build system.
-#
-# This file must be checked into Version Control Systems, as it is
-# integral to the build system of your project.
-
-# This file is only used by the Ant script.
-
-# You can use this to override default values such as
-#  'source.dir' for the location of your java source folder and
-#  'out.dir' for the location of your output folder.
-
-# You can also use it define how the release builds are signed by declaring
-# the following properties:
-#  'key.store' for the location of your keystore and
-#  'key.alias' for the name of the key to use.
-# The password will be asked during the build when you use the 'release' target.
-
diff --git a/ion-sample/build.gradle b/ion-sample/build.gradle
deleted file mode 100644
index ef26cdd9..00000000
--- a/ion-sample/build.gradle
+++ /dev/null
@@ -1,41 +0,0 @@
-task wrapper(type: Wrapper) {
-    gradleVersion = '1.6'
-}
-
-buildscript {
-    repositories {
-        mavenCentral()
-    }
-    dependencies {
-        classpath 'com.android.tools.build:gradle:+'
-    }
-}
-apply plugin: 'com.android.application'
-
-repositories {
-    mavenCentral()
-}
-
-dependencies {
-    compile 'com.github.chrisbanes.photoview:library:+'
-    compile project(':ion:ion')
-}
-
-android {
-    sourceSets {
-        main {
-            manifest.srcFile 'AndroidManifest.xml'
-            res.srcDirs = ['res/']
-            java.srcDirs = ['src/']
-        }
-    }
-
-    defaultConfig {
-        targetSdkVersion 21
-        minSdkVersion 9
-    }
-
-    compileSdkVersion 21
-    buildToolsVersion "21.1.0"
-}
-
diff --git a/ion-sample/build.xml b/ion-sample/build.xml
deleted file mode 100644
index aa7ff9ac..00000000
--- a/ion-sample/build.xml
+++ /dev/null
@@ -1,92 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project name="ion_sample" default="help">
-
-    <!-- The local.properties file is created and updated by the 'android' tool.
-         It contains the path to the SDK. It should *NOT* be checked into
-         Version Control Systems. -->
-    <property file="local.properties"/>
-
-    <!-- The ant.properties file can be created by you. It is only edited by the
-         'android' tool to add properties to it.
-         This is the place to change some Ant specific build properties.
-         Here are some properties you may want to change/update:
-
-         source.dir
-             The name of the source directory. Default is 'src'.
-         out.dir
-             The name of the output directory. Default is 'bin'.
-
-         For other overridable properties, look at the beginning of the rules
-         files in the SDK, at tools/ant/build.xml
-
-         Properties related to the SDK location or the project target should
-         be updated using the 'android' tool with the 'update' action.
-
-         This file is an integral part of the build system for your
-         application and should be checked into Version Control Systems.
-
-         -->
-    <property file="ant.properties"/>
-
-    <!-- if sdk.dir was not set from one of the property file, then
-         get it from the ANDROID_HOME env var.
-         This must be done before we load project.properties since
-         the proguard config can use sdk.dir -->
-    <property environment="env"/>
-    <condition property="sdk.dir" value="${env.ANDROID_HOME}">
-        <isset property="env.ANDROID_HOME"/>
-    </condition>
-
-    <!-- The project.properties file is created and updated by the 'android'
-         tool, as well as ADT.
-
-         This contains project specific properties such as project target, and library
-         dependencies. Lower level build properties are stored in ant.properties
-         (or in .classpath for Eclipse projects).
-
-         This file is an integral part of the build system for your
-         application and should be checked into Version Control Systems. -->
-    <loadproperties srcFile="project.properties"/>
-
-    <!-- quick check on sdk.dir -->
-    <fail
-            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable."
-            unless="sdk.dir"
-            />
-
-    <!--
-        Import per project custom build rules if present at the root of the project.
-        This is the place to put custom intermediary targets such as:
-            -pre-build
-            -pre-compile
-            -post-compile (This is typically used for code obfuscation.
-                           Compiled code location: ${out.classes.absolute.dir}
-                           If this is not done in place, override ${out.dex.input.absolute.dir})
-            -post-package
-            -post-build
-            -pre-clean
-    -->
-    <import file="custom_rules.xml" optional="true"/>
-
-    <!-- Import the actual build file.
-
-         To customize existing targets, there are two options:
-         - Customize only one target:
-             - copy/paste the target into this file, *before* the
-               <import> task.
-             - customize it to your needs.
-         - Customize the whole content of build.xml
-             - copy/paste the content of the rules files (minus the top node)
-               into this file, replacing the <import> task.
-             - customize to your needs.
-
-         ***********************
-         ****** IMPORTANT ******
-         ***********************
-         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,
-         in order to avoid having your file be overridden by tools such as "android update project"
-    -->
-    <!-- version-tag: 1 -->
-    <import file="${sdk.dir}/tools/ant/build.xml"/>
-
-</project>
diff --git a/ion-sample/charles.png b/ion-sample/charles.png
deleted file mode 100644
index 23bc97cc..00000000
Binary files a/ion-sample/charles.png and /dev/null differ
diff --git a/ion-sample/ion-sample.iml b/ion-sample/ion-sample.iml
deleted file mode 100644
index 775d51ae..00000000
--- a/ion-sample/ion-sample.iml
+++ /dev/null
@@ -1,93 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module external.linked.project.path="$MODULE_DIR$" external.root.project.path="$MODULE_DIR$/../.." external.system.id="GRADLE" external.system.module.group="Gradle.ion" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
-  <component name="FacetManager">
-    <facet type="android-gradle" name="Android-Gradle">
-      <configuration>
-        <option name="GRADLE_PROJECT_PATH" value=":ion:ion-sample" />
-      </configuration>
-    </facet>
-    <facet type="android" name="Android">
-      <configuration>
-        <option name="SELECTED_BUILD_VARIANT" value="debug" />
-        <option name="SELECTED_TEST_ARTIFACT" value="_android_test_" />
-        <option name="ASSEMBLE_TASK_NAME" value="assembleDebug" />
-        <option name="COMPILE_JAVA_TASK_NAME" value="compileDebugSources" />
-        <option name="ASSEMBLE_TEST_TASK_NAME" value="assembleDebugAndroidTest" />
-        <option name="SOURCE_GEN_TASK_NAME" value="generateDebugSources" />
-        <option name="TEST_SOURCE_GEN_TASK_NAME" value="generateDebugAndroidTestSources" />
-        <option name="ALLOW_USER_CONFIGURATION" value="false" />
-        <option name="RES_FOLDERS_RELATIVE_PATH" value="file://$MODULE_DIR$/res" />
-        <option name="ASSETS_FOLDER_RELATIVE_PATH" value="/src/main/assets" />
-      </configuration>
-    </facet>
-  </component>
-  <component name="NewModuleRootManager" inherit-compiler-output="false">
-    <output url="file://$MODULE_DIR$/build/intermediates/classes/debug" />
-    <output-test url="file://$MODULE_DIR$/build/intermediates/classes/androidTest/debug" />
-    <exclude-output />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/debug" isTestSource="false" generated="true" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/debug" isTestSource="false" generated="true" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/debug" isTestSource="false" generated="true" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/debug" isTestSource="false" generated="true" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/debug" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/generated/debug" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/androidTest/debug" isTestSource="true" generated="true" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/androidTest/debug" isTestSource="true" generated="true" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/androidTest/debug" isTestSource="true" generated="true" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/androidTest/debug" isTestSource="true" generated="true" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/androidTest/debug" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/generated/androidTest/debug" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/debug/res" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/debug/resources" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/debug/assets" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/debug/aidl" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/debug/java" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/debug/jni" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/debug/rs" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/res" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/main/assets" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/main/aidl" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/main/jni" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/main/rs" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/res" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/resources" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/assets" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/aidl" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/jni" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/assets" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/bundles" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/coverage-instrumented-classes" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dependency-cache" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dex" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dex-cache" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jacoco" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/javaResources" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/libs" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/lint" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/ndk" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/pre-dexed" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/proguard" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
-      <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
-      <excludeFolder url="file://$MODULE_DIR$/build/tmp" />
-    </content>
-    <orderEntry type="jdk" jdkName="Android API 21 Platform" jdkType="Android SDK" />
-    <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" exported="" name="support-annotations-21.0.3" level="project" />
-    <orderEntry type="library" exported="" name="support-v4-21.0.3" level="project" />
-    <orderEntry type="library" exported="" name="library-1.2.3" level="project" />
-    <orderEntry type="library" exported="" name="gson-2.3" level="project" />
-    <orderEntry type="module" module-name="ion-ion" exported="" />
-  </component>
-</module>
-
diff --git a/ion-sample/ion-sample.png b/ion-sample/ion-sample.png
deleted file mode 100644
index a225f5a9..00000000
Binary files a/ion-sample/ion-sample.png and /dev/null differ
diff --git a/ion-sample/libs/photo-view.jar b/ion-sample/libs/photo-view.jar
deleted file mode 100755
index 4f5519c3..00000000
Binary files a/ion-sample/libs/photo-view.jar and /dev/null differ
diff --git a/ion-sample/mark.gif b/ion-sample/mark.gif
deleted file mode 100644
index 0b963ef2..00000000
Binary files a/ion-sample/mark.gif and /dev/null differ
diff --git a/ion-sample/proguard-project.txt b/ion-sample/proguard-project.txt
deleted file mode 100644
index f2fe1559..00000000
--- a/ion-sample/proguard-project.txt
+++ /dev/null
@@ -1,20 +0,0 @@
-# To enable ProGuard in your project, edit project.properties
-# to define the proguard.config property as described in that file.
-#
-# Add project specific ProGuard rules here.
-# By default, the flags in this file are appended to flags specified
-# in ${sdk.dir}/tools/proguard/proguard-android.txt
-# You can edit the include path and order by changing the ProGuard
-# include property in project.properties.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
diff --git a/ion-sample/project.properties b/ion-sample/project.properties
deleted file mode 100644
index bda53d0d..00000000
--- a/ion-sample/project.properties
+++ /dev/null
@@ -1,16 +0,0 @@
-# This file is automatically generated by Android Tools.
-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
-#
-# This file must be checked in Version Control Systems.
-#
-# To customize properties used by the Ant build system edit
-# "ant.properties", and override values to adapt the script to your
-# project structure.
-#
-# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):
-#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
-
-# Project target.
-target=android-L
-android.library.reference.1=../../../../AndroidStudio/ion/ion
-
diff --git a/ion-sample/res/drawable-hdpi/ic_launcher.png b/ion-sample/res/drawable-hdpi/ic_launcher.png
deleted file mode 100644
index 96a442e5..00000000
Binary files a/ion-sample/res/drawable-hdpi/ic_launcher.png and /dev/null differ
diff --git a/ion-sample/res/drawable-ldpi/ic_launcher.png b/ion-sample/res/drawable-ldpi/ic_launcher.png
deleted file mode 100644
index 99238729..00000000
Binary files a/ion-sample/res/drawable-ldpi/ic_launcher.png and /dev/null differ
diff --git a/ion-sample/res/drawable-mdpi/ic_launcher.png b/ion-sample/res/drawable-mdpi/ic_launcher.png
deleted file mode 100644
index 359047df..00000000
Binary files a/ion-sample/res/drawable-mdpi/ic_launcher.png and /dev/null differ
diff --git a/ion-sample/res/drawable-xhdpi/ic_launcher.png b/ion-sample/res/drawable-xhdpi/ic_launcher.png
deleted file mode 100644
index 71c6d760..00000000
Binary files a/ion-sample/res/drawable-xhdpi/ic_launcher.png and /dev/null differ
diff --git a/ion-sample/res/drawable/borg.gif b/ion-sample/res/drawable/borg.gif
deleted file mode 100644
index f67922be..00000000
Binary files a/ion-sample/res/drawable/borg.gif and /dev/null differ
diff --git a/ion-sample/res/drawable/error.jpg b/ion-sample/res/drawable/error.jpg
deleted file mode 100644
index c953fbcd..00000000
Binary files a/ion-sample/res/drawable/error.jpg and /dev/null differ
diff --git a/ion-sample/res/drawable/placeholder.jpg b/ion-sample/res/drawable/placeholder.jpg
deleted file mode 100644
index eff9e9e1..00000000
Binary files a/ion-sample/res/drawable/placeholder.jpg and /dev/null differ
diff --git a/ion-sample/res/drawable/twitter.png b/ion-sample/res/drawable/twitter.png
deleted file mode 100644
index b4924756..00000000
Binary files a/ion-sample/res/drawable/twitter.png and /dev/null differ
diff --git a/ion-sample/res/layout/gallery.xml b/ion-sample/res/layout/gallery.xml
deleted file mode 100644
index fa655a85..00000000
--- a/ion-sample/res/layout/gallery.xml
+++ /dev/null
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical" >
-
-    <GridView
-        android:listSelector="@null"
-        android:id="@+id/results"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" />
-
-</LinearLayout>
\ No newline at end of file
diff --git a/ion-sample/res/layout/gallery_image.xml b/ion-sample/res/layout/gallery_image.xml
deleted file mode 100644
index fc9d042b..00000000
--- a/ion-sample/res/layout/gallery_image.xml
+++ /dev/null
@@ -1,16 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:layout_gravity="center"
-    android:gravity="center" >
-
-    <com.koushikdutta.ion.sample.SquaredImageView
-        android:id="@+id/image"
-        android:scaleType="fitCenter"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center"
-        android:gravity="center" />
-
-</FrameLayout>
\ No newline at end of file
diff --git a/ion-sample/res/layout/google_image_search.xml b/ion-sample/res/layout/google_image_search.xml
deleted file mode 100644
index b8cfaf32..00000000
--- a/ion-sample/res/layout/google_image_search.xml
+++ /dev/null
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical" >
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <EditText
-            android:text="Van Gogh"
-            android:id="@+id/search_text"
-            android:layout_width="0dp"
-            android:layout_height="match_parent"
-            android:layout_weight="1" />
-
-        <Button
-            android:id="@+id/search"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="Search" />
-    </LinearLayout>
-
-    <GridView
-        android:listSelector="@null"
-        android:id="@+id/results"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" />
-
-</LinearLayout>
\ No newline at end of file
diff --git a/ion-sample/res/layout/image.xml b/ion-sample/res/layout/image.xml
deleted file mode 100644
index fc9d042b..00000000
--- a/ion-sample/res/layout/image.xml
+++ /dev/null
@@ -1,16 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:layout_gravity="center"
-    android:gravity="center" >
-
-    <com.koushikdutta.ion.sample.SquaredImageView
-        android:id="@+id/image"
-        android:scaleType="fitCenter"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center"
-        android:gravity="center" />
-
-</FrameLayout>
\ No newline at end of file
diff --git a/ion-sample/res/layout/image_view.xml b/ion-sample/res/layout/image_view.xml
deleted file mode 100644
index 19b16780..00000000
--- a/ion-sample/res/layout/image_view.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-
-    <Spinner
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:id="@+id/fit_choices"
-            />
-
-    <ImageView
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:id="@+id/image"
-            />
-
-</LinearLayout>
\ No newline at end of file
diff --git a/ion-sample/res/layout/lollipop_fullscreen.xml b/ion-sample/res/layout/lollipop_fullscreen.xml
deleted file mode 100644
index 07340452..00000000
--- a/ion-sample/res/layout/lollipop_fullscreen.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-    <ImageView
-            android:id="@+id/image"
-            android:transitionName="photo_hero"
-            android:layout_width="fill_parent"
-            android:layout_height="fill_parent"/>
-</FrameLayout>
\ No newline at end of file
diff --git a/ion-sample/res/layout/lollipop_list.xml b/ion-sample/res/layout/lollipop_list.xml
deleted file mode 100644
index 42237d26..00000000
--- a/ion-sample/res/layout/lollipop_list.xml
+++ /dev/null
@@ -1,43 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-             android:layout_gravity="center"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-
-    <LinearLayout
-            android:padding="40dp"
-            android:orientation="vertical"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content">
-        <LinearLayout
-                android:orientation="horizontal"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content">
-            <com.koushikdutta.ion.sample.SquaredImageView
-                    android:id="@+id/one"
-                    android:layout_weight="1"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"/>
-            <com.koushikdutta.ion.sample.SquaredImageView
-                    android:id="@+id/two"
-                    android:layout_weight="1"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"/>
-        </LinearLayout>
-        <LinearLayout
-                android:orientation="horizontal"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content">
-            <com.koushikdutta.ion.sample.SquaredImageView
-                    android:id="@+id/three"
-                    android:layout_weight="1"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"/>
-            <com.koushikdutta.ion.sample.SquaredImageView
-                    android:id="@+id/four"
-                    android:layout_weight="1"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"/>
-        </LinearLayout>
-    </LinearLayout>
-</FrameLayout>
\ No newline at end of file
diff --git a/ion-sample/res/layout/progress.xml b/ion-sample/res/layout/progress.xml
deleted file mode 100644
index 7819fb3f..00000000
--- a/ion-sample/res/layout/progress.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:gravity="center"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-
-    <TextView
-            style="@android:style/TextAppearance.Large"
-            android:layout_gravity="center"
-            android:text="File Download"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            />
-
-    <ProgressBar
-            android:minHeight="20dp"
-            android:maxHeight="20dp"
-            android:id="@+id/progress"
-            style="?android:attr/progressBarStyleHorizontal"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center"/>
-
-    <TextView
-            android:layout_gravity="center"
-            android:id="@+id/download_count"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            />
-
-    <Button
-            android:layout_gravity="center"
-            android:id="@+id/download"
-            android:text="Download"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            />
-</LinearLayout>
\ No newline at end of file
diff --git a/ion-sample/res/layout/progress_upload.xml b/ion-sample/res/layout/progress_upload.xml
deleted file mode 100644
index c85b0d48..00000000
--- a/ion-sample/res/layout/progress_upload.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:gravity="center"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-
-    <TextView
-            style="@android:style/TextAppearance.Large"
-            android:layout_gravity="center"
-            android:text="File Upload"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            />
-
-    <ProgressBar
-            android:minHeight="20dp"
-            android:maxHeight="20dp"
-            android:id="@+id/progress"
-            style="?android:attr/progressBarStyleHorizontal"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center"/>
-
-    <TextView
-            android:layout_gravity="center"
-            android:id="@+id/upload_count"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            />
-
-    <Button
-            android:layout_gravity="center"
-            android:id="@+id/upload"
-            android:text="Upload"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            />
-</LinearLayout>
\ No newline at end of file
diff --git a/ion-sample/res/layout/samples.xml b/ion-sample/res/layout/samples.xml
deleted file mode 100644
index 5693ae9c..00000000
--- a/ion-sample/res/layout/samples.xml
+++ /dev/null
@@ -1,72 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:gravity="center"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-
-    <Button
-            android:id="@+id/twitter"
-            android:layout_width="240dp"
-            android:layout_height="wrap_content"
-            android:text="Twitter Client Sample"
-            />
-
-    <Button
-            android:id="@+id/twitter_gson"
-            android:layout_width="240dp"
-            android:layout_height="wrap_content"
-            android:text="Twitter Gson Client Sample"
-            />
-
-    <Button
-            android:id="@+id/download"
-            android:layout_width="240dp"
-            android:layout_height="wrap_content"
-            android:text="Progress Bar Download"
-            />
-
-    <Button
-            android:id="@+id/upload"
-            android:layout_width="240dp"
-            android:layout_height="wrap_content"
-            android:text="Progress Bar Upload"
-            />
-
-    <Button
-            android:id="@+id/image_view"
-            android:layout_width="240dp"
-            android:layout_height="wrap_content"
-            android:text="ImageView Sample"
-            />
-
-    <Button
-            android:id="@+id/google_image_search"
-            android:layout_width="240dp"
-            android:layout_height="wrap_content"
-            android:text="Google Image Search"
-            />
-
-    <Button
-            android:id="@+id/gallery"
-            android:layout_width="240dp"
-            android:layout_height="wrap_content"
-            android:text="Gallery"
-            />
-
-    <Button
-            android:id="@+id/deepzoom"
-            android:layout_width="240dp"
-            android:layout_height="wrap_content"
-            android:text="DeepZoom"
-            />
-
-    <Button
-            android:id="@+id/lollipop_transition"
-            android:layout_width="240dp"
-            android:layout_height="wrap_content"
-            android:text="Lollipop Transition Sample"
-            />
-
-</LinearLayout>
\ No newline at end of file
diff --git a/ion-sample/res/layout/tweet.xml b/ion-sample/res/layout/tweet.xml
deleted file mode 100644
index 34accfd8..00000000
--- a/ion-sample/res/layout/tweet.xml
+++ /dev/null
@@ -1,37 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:padding="4dp"
-              android:orientation="horizontal"
-              android:layout_width="match_parent"
-              android:layout_height="wrap_content">
-
-    <ImageView
-            android:id="@+id/image"
-            android:layout_width="64dp"
-            android:layout_height="64dp"
-            android:src="@drawable/twitter"/>
-
-    <LinearLayout
-            android:paddingLeft="4dp"
-            android:paddingRight="4dp"
-            android:layout_weight="1"
-            android:orientation="vertical"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content">
-
-        <TextView
-                style="@android:style/TextAppearance.Medium"
-                android:id="@+id/handle"
-                android:layout_width="match_parent"
-                android:layout_height="0dp"
-                android:layout_weight="1"/>
-
-        <TextView
-                android:id="@+id/tweet"
-                style="@android:style/TextAppearance.Small"
-                android:layout_width="match_parent"
-                android:layout_height="0dp"
-                android:layout_weight="1"/>
-    </LinearLayout>
-</LinearLayout>
\ No newline at end of file
diff --git a/ion-sample/res/layout/twitter.xml b/ion-sample/res/layout/twitter.xml
deleted file mode 100644
index 21675ead..00000000
--- a/ion-sample/res/layout/twitter.xml
+++ /dev/null
@@ -1,16 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:layout_width="fill_parent"
-              android:layout_height="fill_parent"
-        >
-
-
-    <ListView
-            android:id="@+id/list"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-
-            />
-</LinearLayout>
-
diff --git a/ion-sample/res/values-v14/style.xml b/ion-sample/res/values-v14/style.xml
deleted file mode 100644
index 5f200ffe..00000000
--- a/ion-sample/res/values-v14/style.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <style name="Theme" parent="android:Theme.Holo.Light.DarkActionBar" />
-</resources>
\ No newline at end of file
diff --git a/ion-sample/res/values/strings.xml b/ion-sample/res/values/strings.xml
deleted file mode 100644
index ba88db4d..00000000
--- a/ion-sample/res/values/strings.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <string name="app_name">ion-sample</string>
-</resources>
diff --git a/ion-sample/res/values/style.xml b/ion-sample/res/values/style.xml
deleted file mode 100644
index 8a76b49d..00000000
--- a/ion-sample/res/values/style.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <style name="Theme" parent="android:Theme.Light" />
-</resources>
\ No newline at end of file
diff --git a/ion-sample/src/com/koushikdutta/ion/sample/DeepZoomSample.java b/ion-sample/src/com/koushikdutta/ion/sample/DeepZoomSample.java
deleted file mode 100644
index 57216e9a..00000000
--- a/ion-sample/src/com/koushikdutta/ion/sample/DeepZoomSample.java
+++ /dev/null
@@ -1,46 +0,0 @@
-package com.koushikdutta.ion.sample;
-
-import android.app.Activity;
-import android.app.ProgressDialog;
-import android.os.Bundle;
-import android.util.Log;
-import android.widget.ImageView;
-
-import com.koushikdutta.async.future.FutureCallback;
-import com.koushikdutta.ion.Ion;
-
-import uk.co.senab.photoview.PhotoView;
-
-/**
- * Created by koush on 2/1/14.
- */
-public class DeepZoomSample extends Activity {
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        PhotoView photoView = new PhotoView(this);
-        photoView.setMaximumScale(16);
-        setContentView(photoView);
-
-        final ProgressDialog dlg = new ProgressDialog(this);
-        dlg.setTitle("Loading...");
-        dlg.setIndeterminate(false);
-        dlg.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
-        dlg.show();
-
-        // this is going to load a 30mb download...
-        Ion.with(this)
-        .load("https://raw2.github.com/koush/ion/master/ion-sample/telescope.jpg")
-        .progressDialog(dlg)
-        .setLogging("DeepZoom", Log.VERBOSE)
-        .withBitmap()
-        .deepZoom()
-        .intoImageView(photoView)
-        .setCallback(new FutureCallback<ImageView>() {
-            @Override
-            public void onCompleted(Exception e, ImageView result) {
-                dlg.cancel();
-            }
-        });
-    }
-}
diff --git a/ion-sample/src/com/koushikdutta/ion/sample/GallerySample.java b/ion-sample/src/com/koushikdutta/ion/sample/GallerySample.java
deleted file mode 100644
index 7d486f1a..00000000
--- a/ion-sample/src/com/koushikdutta/ion/sample/GallerySample.java
+++ /dev/null
@@ -1,97 +0,0 @@
-package com.koushikdutta.ion.sample;
-
-import android.app.Activity;
-import android.content.Context;
-import android.database.Cursor;
-import android.os.Bundle;
-import android.provider.MediaStore;
-import android.util.Log;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ArrayAdapter;
-import android.widget.GridView;
-import android.widget.ImageView;
-
-import com.koushikdutta.ion.Ion;
-
-import java.io.File;
-
-/**
- * Created by koush on 9/4/13.
- */
-public class GallerySample extends Activity {
-    private MyAdapter mAdapter;
-
-    // Adapter to populate and imageview from an url contained in the array adapter
-    private class MyAdapter extends ArrayAdapter<String> {
-        public MyAdapter(Context context) {
-            super(context, 0);
-        }
-
-        @Override
-        public View getView(int position, View convertView, ViewGroup parent) {
-            // see if we need to load more to get 40, otherwise populate the adapter
-            if (position > getCount() - 4)
-                loadMore();
-
-            if (convertView == null)
-                convertView = getLayoutInflater().inflate(R.layout.image, null);
-
-            // find the image view
-            final ImageView iv = (ImageView) convertView.findViewById(R.id.image);
-
-            // select the image view
-            Ion.with(iv)
-            .centerCrop()
-            .placeholder(R.drawable.placeholder)
-            .error(R.drawable.error)
-            .load(getItem(position));
-
-            return convertView;
-        }
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        Ion.getDefault(this).configure().setLogging("ion-sample", Log.DEBUG);
-
-        setContentView(R.layout.gallery);
-
-        int cols = getResources().getDisplayMetrics().widthPixels / getResources().getDisplayMetrics().densityDpi * 2;
-        GridView view = (GridView) findViewById(R.id.results);
-        view.setNumColumns(cols);
-        mAdapter = new MyAdapter(this);
-        view.setAdapter(mAdapter);
-
-        loadMore();
-    }
-
-    Cursor mediaCursor;
-    public void loadMore() {
-        if (mediaCursor == null) {
-            mediaCursor = getContentResolver().query(MediaStore.Files.getContentUri("external"), null, null, null, null);
-        }
-
-        int loaded = 0;
-        while (mediaCursor.moveToNext() && loaded < 10) {
-            // get the media type. ion can show images for both regular images AND video.
-            int mediaType = mediaCursor.getInt(mediaCursor.getColumnIndex(MediaStore.Files.FileColumns.MEDIA_TYPE));
-            if (mediaType != MediaStore.Files.FileColumns.MEDIA_TYPE_IMAGE
-                && mediaType != MediaStore.Files.FileColumns.MEDIA_TYPE_VIDEO) {
-                continue;
-            }
-
-            loaded++;
-
-            String uri = mediaCursor.getString(mediaCursor.getColumnIndex(MediaStore.Files.FileColumns.DATA));
-            File file = new File(uri);
-            // turn this into a file uri if necessary/possible
-            if (file.exists())
-                mAdapter.add(file.toURI().toString());
-            else
-                mAdapter.add(uri);
-        }
-    }
-}
diff --git a/ion-sample/src/com/koushikdutta/ion/sample/GoogleImageSearch.java b/ion-sample/src/com/koushikdutta/ion/sample/GoogleImageSearch.java
deleted file mode 100644
index 6a1e3714..00000000
--- a/ion-sample/src/com/koushikdutta/ion/sample/GoogleImageSearch.java
+++ /dev/null
@@ -1,125 +0,0 @@
-package com.koushikdutta.ion.sample;
-
-import android.app.Activity;
-import android.content.Context;
-import android.net.Uri;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.view.ViewGroup;
-import android.view.inputmethod.InputMethodManager;
-import android.widget.ArrayAdapter;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.GridView;
-import android.widget.ImageView;
-
-import com.google.gson.JsonArray;
-import com.google.gson.JsonObject;
-import com.koushikdutta.async.future.Future;
-import com.koushikdutta.async.future.FutureCallback;
-import com.koushikdutta.ion.Ion;
-
-/**
- * Created by koush on 6/4/13.
- */
-public class GoogleImageSearch extends Activity {
-    private MyAdapter mAdapter;
-
-    // Adapter to populate and imageview from an url contained in the array adapter
-    private class MyAdapter extends ArrayAdapter<String> {
-        public MyAdapter(Context context) {
-            super(context, 0);
-        }
-
-        @Override
-        public View getView(int position, View convertView, ViewGroup parent) {
-            // see if we need to load more to get 40, otherwise populate the adapter
-            if (position > getCount() - 4)
-                loadMore();
-
-            if (convertView == null)
-                convertView = getLayoutInflater().inflate(R.layout.image, null);
-
-            // find the image view
-            final ImageView iv = (ImageView) convertView.findViewById(R.id.image);
-
-            // select the image view
-            Ion.with(iv)
-            .centerCrop()
-            .placeholder(R.drawable.placeholder)
-            .error(R.drawable.error)
-            .load(getItem(position));
-
-            return convertView;
-        }
-    }
-
-    Future<JsonObject> loading;
-    void loadMore() {
-        if (loading != null && !loading.isDone() && !loading.isCancelled())
-            return;
-
-        // query googles image search api
-        loading = Ion.with(GoogleImageSearch.this)
-        .load(String.format("https://ajax.googleapis.com/ajax/services/search/images?v=1.0&q=%s&start=%d&imgsz=medium", Uri.encode(searchText.getText().toString()), mAdapter.getCount()))
-        // get the results as json
-        .asJsonObject()
-        .setCallback(new FutureCallback<JsonObject>() {
-            @Override
-            public void onCompleted(Exception e, JsonObject result) {
-                try {
-                    if (e != null)
-                        throw e;
-                    // find the results and populate
-                    JsonArray results = result.getAsJsonObject("responseData").getAsJsonArray("results");
-                    for (int i = 0; i < results.size(); i++) {
-                        mAdapter.add(results.get(i).getAsJsonObject().get("url").getAsString());
-                    }
-                }
-                catch (Exception ex) {
-                    // toast any error we encounter (google image search has an API throttling limit that sometimes gets hit)
-//                    Toast.makeText(GoogleImageSearch.this, ex.toString(), Toast.LENGTH_LONG).show();
-                }
-
-            }
-        });
-    }
-
-    EditText searchText;
-    /**
-     * Called when the activity is first created.
-     */
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        Ion.getDefault(this).configure().setLogging("ion-sample", Log.DEBUG);
-
-        setContentView(R.layout.google_image_search);
-
-        final Button search = (Button) findViewById(R.id.search);
-        searchText = (EditText) findViewById(R.id.search_text);
-        search.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                search();
-            }
-        });
-
-        int cols = getResources().getDisplayMetrics().widthPixels / getResources().getDisplayMetrics().densityDpi;
-        GridView view = (GridView) findViewById(R.id.results);
-        view.setNumColumns(cols);
-        mAdapter = new MyAdapter(this);
-        view.setAdapter(mAdapter);
-
-        search();
-    }
-
-    private void search() {
-        mAdapter.clear();
-        loadMore();
-        InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
-        imm.hideSoftInputFromWindow(searchText.getWindowToken(), 0);
-    }
-}
diff --git a/ion-sample/src/com/koushikdutta/ion/sample/ImageViewSample.java b/ion-sample/src/com/koushikdutta/ion/sample/ImageViewSample.java
deleted file mode 100644
index fa5d5768..00000000
--- a/ion-sample/src/com/koushikdutta/ion/sample/ImageViewSample.java
+++ /dev/null
@@ -1,126 +0,0 @@
-package com.koushikdutta.ion.sample;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.ArrayAdapter;
-import android.widget.ImageView;
-import android.widget.Spinner;
-
-import com.koushikdutta.ion.Ion;
-
-/**
- * Created by koush on 6/9/13.
- */
-public class ImageViewSample extends Activity {
-    public void loadCenterCrop() {
-        Ion.with(this)
-        .load("http://media.salon.com/2013/05/original.jpg")
-        .withBitmap()
-        .centerCrop()
-        .intoImageView(imageView);
-    }
-
-    public void loadCenterInside() {
-        Ion.with(this)
-        .load("http://media.salon.com/2013/05/original.jpg")
-        .withBitmap()
-        .centerInside()
-        .intoImageView(imageView);
-    }
-
-    public void loadFitCenter() {
-        Ion.with(this)
-        .load("http://media.salon.com/2013/05/original.jpg")
-        .withBitmap()
-        .fitCenter()
-        .intoImageView(imageView);
-    }
-
-    public void loadGifCenterCrop() {
-        Ion.with(this)
-        .load("https://raw.githubusercontent.com/koush/ion/master/ion-sample/mark.gif")
-        .withBitmap()
-        .centerCrop()
-        .intoImageView(imageView);
-    }
-
-    public void loadGifFitCenter() {
-        Ion.with(this)
-        .load("https://raw.githubusercontent.com/koush/ion/master/ion-sample/mark.gif")
-        .withBitmap()
-        .fitCenter()
-        .intoImageView(imageView);
-    }
-
-    public void loadGifResource() {
-        Ion.with(this)
-        .load("android.resource://" + getPackageName() + "/" + R.drawable.borg)
-        .withBitmap()
-        .fitCenter()
-        .intoImageView(imageView);
-    }
-
-    public void loadExifRotated() {
-        Ion.with(this)
-        .load("https://raw.githubusercontent.com/koush/ion/master/ion/test/assets/exif.jpg")
-        .intoImageView(imageView);
-    }
-
-    public void loadTwitterResource() {
-        Ion.with(this)
-        .load("android.resource://" + getPackageName() + "/drawable/twitter")
-        .intoImageView(imageView);
-    }
-
-    Spinner fitChoices;
-    ImageView imageView;
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.image_view);
-
-        imageView = (ImageView)findViewById(R.id.image);
-//        imageView.setScaleType(ImageView.ScaleType.CENTER_INSIDE);
-//        imageView.setImageResource(R.drawable.charles);
-//        if (true) return;
-        fitChoices = (Spinner)findViewById(R.id.fit_choices);
-
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_dropdown_item);
-        adapter.add("centerCrop");
-        adapter.add("fitCenter");
-        adapter.add("centerInside");
-        adapter.add("gif centerCrop");
-        adapter.add("gif fitCenter");
-        adapter.add("gif resource");
-        adapter.add("exif rotated");
-        adapter.add("twitter drawable resource");
-        fitChoices.setAdapter(adapter);
-        fitChoices.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
-            @Override
-            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
-                if (position == 0)
-                    loadCenterCrop();
-                else if (position == 1)
-                    loadFitCenter();
-                else if (position == 2)
-                    loadCenterInside();
-                else if (position == 3)
-                    loadGifCenterCrop();
-                else if (position == 4)
-                    loadGifFitCenter();
-                else if (position == 5)
-                    loadGifResource();
-                else if (position == 6)
-                    loadExifRotated();
-                else if (position == 7)
-                    loadTwitterResource();
-            }
-
-            @Override
-            public void onNothingSelected(AdapterView<?> parent) {
-            }
-        });
-    }
-}
diff --git a/ion-sample/src/com/koushikdutta/ion/sample/LollipopTransition.java b/ion-sample/src/com/koushikdutta/ion/sample/LollipopTransition.java
deleted file mode 100644
index 7650e171..00000000
--- a/ion-sample/src/com/koushikdutta/ion/sample/LollipopTransition.java
+++ /dev/null
@@ -1,56 +0,0 @@
-package com.koushikdutta.ion.sample;
-
-import android.annotation.TargetApi;
-import android.app.Activity;
-import android.app.ActivityOptions;
-import android.content.Intent;
-import android.os.Build;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.ImageView;
-
-import com.koushikdutta.ion.Ion;
-import com.koushikdutta.ion.bitmap.BitmapInfo;
-
-/**
- * Created by koush on 11/10/14.
- */
-@TargetApi(Build.VERSION_CODES.LOLLIPOP)
-public class LollipopTransition extends Activity {
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        setContentView(R.layout.lollipop_list);
-
-        ImageView[] ivs = new ImageView[] {
-        (ImageView)findViewById(R.id.one),
-        (ImageView)findViewById(R.id.two),
-        (ImageView)findViewById(R.id.three),
-        (ImageView)findViewById(R.id.four),
-        };
-
-        for (int i = 1; i <= ivs.length; i++) {
-            final int thumb = i;
-            ImageView iv = ivs[i - 1];
-            Ion.with(iv)
-            .centerCrop()
-            .load("https://raw.githubusercontent.com/koush/SampleImages/master/" + i + ".thumb.jpg");
-
-            iv.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    ImageView iv = (ImageView)v;
-
-                    BitmapInfo bi = Ion.with(iv)
-                    .getBitmapInfo();
-
-                    Intent intent = new Intent(LollipopTransition.this, LollipopTransitionFullscreen.class);
-                    intent.putExtra("bitmapInfo", bi.key);
-                    intent.putExtra("thumb", thumb);
-                    startActivity(intent, ActivityOptions.makeSceneTransitionAnimation(LollipopTransition.this, iv, "photo_hero").toBundle());
-                }
-            });
-        }
-    }
-}
diff --git a/ion-sample/src/com/koushikdutta/ion/sample/LollipopTransitionFullscreen.java b/ion-sample/src/com/koushikdutta/ion/sample/LollipopTransitionFullscreen.java
deleted file mode 100644
index afc6fb50..00000000
--- a/ion-sample/src/com/koushikdutta/ion/sample/LollipopTransitionFullscreen.java
+++ /dev/null
@@ -1,61 +0,0 @@
-package com.koushikdutta.ion.sample;
-
-import android.annotation.TargetApi;
-import android.app.Activity;
-import android.os.Build;
-import android.os.Bundle;
-import android.transition.Transition;
-import android.view.Window;
-import android.widget.ImageView;
-
-import com.koushikdutta.ion.Ion;
-import com.koushikdutta.ion.bitmap.BitmapInfo;
-
-/**
- * Created by koush on 11/10/14.
- */
-@TargetApi(Build.VERSION_CODES.LOLLIPOP)
-public class LollipopTransitionFullscreen extends Activity {
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        setContentView(R.layout.lollipop_fullscreen);
-        final ImageView iv = (ImageView)findViewById(R.id.image);
-        String bitmapKey = getIntent().getStringExtra("bitmapInfo");
-        BitmapInfo bi = Ion.getDefault(this)
-        .getBitmapCache()
-        .get(bitmapKey);
-        iv.setImageBitmap(bi.bitmap);
-
-        final int thumb = getIntent().getIntExtra("thumb", 1);
-
-        getWindow().getEnterTransition().addListener(new Transition.TransitionListener() {
-            @Override
-            public void onTransitionStart(Transition transition) {
-            }
-
-            @Override
-            public void onTransitionCancel(Transition transition) {
-            }
-
-            @Override
-            public void onTransitionPause(Transition transition) {
-            }
-
-            @Override
-            public void onTransitionResume(Transition transition) {
-            }
-
-            @Override
-            public void onTransitionEnd(Transition transition) {
-                getWindow().getEnterTransition().removeListener(this);
-
-                // load the full version, crossfading from the thumbnail image
-                Ion.with(iv)
-                .crossfade(true)
-                .load("https://raw.githubusercontent.com/koush/SampleImages/master/" + thumb + ".jpg");
-            }
-        });
-    }
-}
diff --git a/ion-sample/src/com/koushikdutta/ion/sample/ProgressBarDownload.java b/ion-sample/src/com/koushikdutta/ion/sample/ProgressBarDownload.java
deleted file mode 100644
index 7123dfc9..00000000
--- a/ion-sample/src/com/koushikdutta/ion/sample/ProgressBarDownload.java
+++ /dev/null
@@ -1,93 +0,0 @@
-package com.koushikdutta.ion.sample;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.widget.Button;
-import android.widget.ProgressBar;
-import android.widget.TextView;
-import android.widget.Toast;
-import com.koushikdutta.async.future.Future;
-import com.koushikdutta.async.future.FutureCallback;
-import com.koushikdutta.ion.Ion;
-import com.koushikdutta.ion.ProgressCallback;
-
-import java.io.File;
-
-/**
- * Created by koush on 5/31/13.
- */
-public class ProgressBarDownload extends Activity {
-    Button download;
-    TextView downloadCount;
-    ProgressBar progressBar;
-
-    Future<File> downloading;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        // Enable global Ion logging
-        Ion.getDefault(this).configure().setLogging("ion-sample", Log.DEBUG);
-
-        setContentView(R.layout.progress);
-
-        download = (Button)findViewById(R.id.download);
-        downloadCount = (TextView)findViewById(R.id.download_count);
-        progressBar = (ProgressBar)findViewById(R.id.progress);
-
-        download.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                if (downloading != null && !downloading.isCancelled()) {
-                    resetDownload();
-                    return;
-                }
-
-                download.setText("Cancel");
-                // this is a 180MB zip file to test with
-                downloading = Ion.with(ProgressBarDownload.this)
-                .load("http://developer.clockworkmod.com/downloads/51/4883/cm-10.1-20130512-CPUFREQ-m7.zip")
-                    // attach the percentage report to a progress bar.
-                    // can also attach to a ProgressDialog with progressDialog.
-                    .progressBar(progressBar)
-                    // callbacks on progress can happen on the UI thread
-                    // via progressHandler. This is useful if you need to update a TextView.
-                    // Updates to TextViews MUST happen on the UI thread.
-                    .progressHandler(new ProgressCallback() {
-                        @Override
-                        public void onProgress(long downloaded, long total) {
-                            downloadCount.setText("" + downloaded + " / " + total);
-                        }
-                    })
-                    // write to a file
-                    .write(getFileStreamPath("zip-" + System.currentTimeMillis() + ".zip"))
-                    // run a callback on completion
-                    .setCallback(new FutureCallback<File>() {
-                        @Override
-                        public void onCompleted(Exception e, File result) {
-                            resetDownload();
-                            if (e != null) {
-                                Toast.makeText(ProgressBarDownload.this, "Error downloading file", Toast.LENGTH_LONG).show();
-                                return;
-                            }
-                            Toast.makeText(ProgressBarDownload.this, "File upload complete", Toast.LENGTH_LONG).show();
-                        }
-                    });
-            }
-        });
-    }
-
-    void resetDownload() {
-        // cancel any pending download
-        downloading.cancel();
-        downloading = null;
-
-        // reset the ui
-        download.setText("Download");
-        downloadCount.setText(null);
-        progressBar.setProgress(0);
-    }
-}
diff --git a/ion-sample/src/com/koushikdutta/ion/sample/ProgressBarUpload.java b/ion-sample/src/com/koushikdutta/ion/sample/ProgressBarUpload.java
deleted file mode 100644
index 1a6f433e..00000000
--- a/ion-sample/src/com/koushikdutta/ion/sample/ProgressBarUpload.java
+++ /dev/null
@@ -1,105 +0,0 @@
-package com.koushikdutta.ion.sample;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.widget.Button;
-import android.widget.ProgressBar;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.koushikdutta.async.future.Future;
-import com.koushikdutta.async.future.FutureCallback;
-import com.koushikdutta.ion.Ion;
-import com.koushikdutta.ion.ProgressCallback;
-
-import java.io.File;
-import java.io.RandomAccessFile;
-
-/**
- * Created by koush on 5/31/13.
- */
-public class ProgressBarUpload extends Activity {
-    Button upload;
-    TextView uploadCount;
-    ProgressBar progressBar;
-
-    Future<File> uploading;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        // Enable global Ion logging
-        Ion.getDefault(this).configure().setLogging("ion-sample", Log.DEBUG);
-
-        setContentView(R.layout.progress_upload);
-
-        upload = (Button)findViewById(R.id.upload);
-        uploadCount = (TextView)findViewById(R.id.upload_count);
-        progressBar = (ProgressBar)findViewById(R.id.progress);
-
-        upload.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                if (uploading != null && !uploading.isCancelled()) {
-                    resetUpload();
-                    return;
-                }
-
-                File f = getFileStreamPath("largefile");
-                try {
-                    RandomAccessFile rf = new RandomAccessFile(f, "rw");
-                    rf.setLength(1024 * 1024 * 2);
-                } catch (Exception e) {
-                    System.err.println(e);
-                }
-                File echoedFile = getFileStreamPath("echo");
-
-                upload.setText("Cancel");
-                // this is a 180MB zip file to test with
-                uploading = Ion.with(ProgressBarUpload.this)
-                .load("http://koush.clockworkmod.com/test/echo")
-                // attach the percentage report to a progress bar.
-                // can also attach to a ProgressDialog with progressDialog.
-                .uploadProgressBar(progressBar)
-                // callbacks on progress can happen on the UI thread
-                // via progressHandler. This is useful if you need to update a TextView.
-                // Updates to TextViews MUST happen on the UI thread.
-                .uploadProgressHandler(new ProgressCallback() {
-                    @Override
-                    public void onProgress(long downloaded, long total) {
-                        uploadCount.setText("" + downloaded + " / " + total);
-                    }
-                })
-                // write to a file
-                .setMultipartFile("largefile", f)
-                .write(echoedFile)
-                // run a callback on completion
-                .setCallback(new FutureCallback<File>() {
-                    @Override
-                    public void onCompleted(Exception e, File result) {
-                        resetUpload();
-                        if (e != null) {
-                            Toast.makeText(ProgressBarUpload.this, "Error uploading file", Toast.LENGTH_LONG).show();
-                            return;
-                        }
-                        Toast.makeText(ProgressBarUpload.this, "File upload complete", Toast.LENGTH_LONG).show();
-                    }
-                });
-            }
-        });
-    }
-
-    void resetUpload() {
-        // cancel any pending upload
-        uploading.cancel();
-        uploading = null;
-
-        // reset the ui
-        upload.setText("Upload");
-        uploadCount.setText(null);
-        progressBar.setProgress(0);
-    }
-}
diff --git a/ion-sample/src/com/koushikdutta/ion/sample/SampleApplication.java b/ion-sample/src/com/koushikdutta/ion/sample/SampleApplication.java
deleted file mode 100644
index 96b36ff9..00000000
--- a/ion-sample/src/com/koushikdutta/ion/sample/SampleApplication.java
+++ /dev/null
@@ -1,18 +0,0 @@
-package com.koushikdutta.ion.sample;
-
-import android.app.Application;
-import android.os.StrictMode;
-
-/**
- * Created by koush on 8/26/14.
- */
-public class SampleApplication extends Application {
-    @Override
-    public void onCreate() {
-        super.onCreate();
-        StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder()
-        .detectAll()
-        .penaltyDeath()
-        .build());
-    }
-}
diff --git a/ion-sample/src/com/koushikdutta/ion/sample/Samples.java b/ion-sample/src/com/koushikdutta/ion/sample/Samples.java
deleted file mode 100644
index f37b76d2..00000000
--- a/ion-sample/src/com/koushikdutta/ion/sample/Samples.java
+++ /dev/null
@@ -1,97 +0,0 @@
-package com.koushikdutta.ion.sample;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Build;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.Button;
-
-/**
- * Created by koush on 5/31/13.
- */
-public class Samples extends Activity {
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        setContentView(R.layout.samples);
-
-        Button twitter = (Button)findViewById(R.id.twitter);
-        twitter.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(Samples.this, Twitter.class));
-            }
-        });
-
-        Button twitterGson = (Button)findViewById(R.id.twitter_gson);
-        twitterGson.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(Samples.this, TwitterGson.class));
-            }
-        });
-
-        Button fileDownload = (Button)findViewById(R.id.download);
-        fileDownload.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(Samples.this, ProgressBarDownload.class));
-            }
-        });
-
-        Button fileUpload = (Button)findViewById(R.id.upload);
-        fileUpload.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(Samples.this, ProgressBarUpload.class));
-            }
-        });
-
-        Button googleImageSearch = (Button)findViewById(R.id.google_image_search);
-        googleImageSearch.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(Samples.this, GoogleImageSearch.class));
-            }
-        });
-
-        Button imageViewSample = (Button)findViewById(R.id.image_view);
-        imageViewSample.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(Samples.this, ImageViewSample.class));
-            }
-        });
-
-        Button gallerySample = (Button)findViewById(R.id.gallery);
-        gallerySample.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(Samples.this, GallerySample.class));
-            }
-        });
-
-        Button deepZoomSample = (Button)findViewById(R.id.deepzoom);
-        deepZoomSample.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(Samples.this, DeepZoomSample.class));
-            }
-        });
-
-        Button lollipopTransitionSample = (Button)findViewById(R.id.lollipop_transition);
-        if (Build.VERSION.SDK_INT >= 21) {
-            lollipopTransitionSample.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    startActivity(new Intent(Samples.this, LollipopTransition.class));
-                }
-            });
-        }
-        else {
-            lollipopTransitionSample.setVisibility(View.GONE);
-        }
-    }
-}
diff --git a/ion-sample/src/com/koushikdutta/ion/sample/SquaredImageView.java b/ion-sample/src/com/koushikdutta/ion/sample/SquaredImageView.java
deleted file mode 100644
index baf7ebf0..00000000
--- a/ion-sample/src/com/koushikdutta/ion/sample/SquaredImageView.java
+++ /dev/null
@@ -1,21 +0,0 @@
-package com.koushikdutta.ion.sample;
-
-import android.content.Context;
-import android.util.AttributeSet;
-import android.widget.ImageView;
-
-/** An image view which always remains square with respect to its width. */
-final class SquaredImageView extends ImageView {
-  public SquaredImageView(Context context) {
-    super(context);
-  }
-
-  public SquaredImageView(Context context, AttributeSet attrs) {
-    super(context, attrs);
-  }
-
-  @Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-    super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-    setMeasuredDimension(getMeasuredWidth(), getMeasuredWidth());
-  }
-}
diff --git a/ion-sample/src/com/koushikdutta/ion/sample/Twitter.java b/ion-sample/src/com/koushikdutta/ion/sample/Twitter.java
deleted file mode 100644
index c30bcc20..00000000
--- a/ion-sample/src/com/koushikdutta/ion/sample/Twitter.java
+++ /dev/null
@@ -1,157 +0,0 @@
-package com.koushikdutta.ion.sample;
-
-import android.app.Activity;
-import android.graphics.Bitmap;
-import android.graphics.Canvas;
-import android.graphics.Paint;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.view.ViewGroup;
-import android.view.animation.AnimationUtils;
-import android.widget.ArrayAdapter;
-import android.widget.ImageView;
-import android.widget.ListView;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.google.gson.JsonArray;
-import com.google.gson.JsonObject;
-import com.koushikdutta.async.future.Future;
-import com.koushikdutta.async.future.FutureCallback;
-import com.koushikdutta.ion.Ion;
-import com.koushikdutta.ion.bitmap.Transform;
-
-public class Twitter extends Activity {
-    // adapter that holds tweets, obviously :)
-    ArrayAdapter<JsonObject> tweetAdapter;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        // Enable global Ion logging
-//        Ion.getDefault(this).setLogging("ion-sample", Log.DEBUG);
-
-        // create a tweet adapter for our list view
-        tweetAdapter = new ArrayAdapter<JsonObject>(this, 0) {
-            @Override
-            public View getView(int position, View convertView, ViewGroup parent) {
-                if (convertView == null)
-                    convertView = getLayoutInflater().inflate(R.layout.tweet, null);
-
-                // we're near the end of the list adapter, so load more items
-                if (position >= getCount() - 3)
-                    load();
-
-                // grab the tweet (or retweet)
-                JsonObject tweet = getItem(position);
-                JsonObject retweet = tweet.getAsJsonObject("retweeted_status");
-                if (retweet != null)
-                    tweet = retweet;
-
-                // grab the user info... name, profile picture, tweet text
-                JsonObject user = tweet.getAsJsonObject("user");
-                String twitterId = user.get("screen_name").getAsString();
-
-                // set the profile photo using Ion
-                String imageUrl = user.get("profile_image_url").getAsString();
-
-                ImageView imageView = (ImageView)convertView.findViewById(R.id.image);
-
-                // Use Ion's builder set the google_image on an ImageView from a URL
-
-                // start with the ImageView
-                Ion.with(imageView)
-                // use a placeholder google_image if it needs to load from the network
-                .placeholder(R.drawable.twitter)
-                // load the url
-                .load(imageUrl);
-
-                // and finally, set the name and text
-                TextView handle = (TextView)convertView.findViewById(R.id.handle);
-                handle.setText(twitterId);
-
-                TextView text = (TextView)convertView.findViewById(R.id.tweet);
-                text.setText(tweet.get("text").getAsString());
-                return convertView;
-            }
-        };
-
-        // basic setup of the ListView and adapter
-        setContentView(R.layout.twitter);
-        ListView listView = (ListView)findViewById(R.id.list);
-        listView.setAdapter(tweetAdapter);
-
-        // authenticate and do the first load
-        getCredentials();
-    }
-
-    // This "Future" tracks loading operations.
-    // A Future is an object that manages the state of an operation
-    // in progress that will have a "Future" result.
-    // You can attach callbacks (setCallback) for when the result is ready,
-    // or cancel() it if you no longer need the result.
-    Future<JsonArray> loading;
-
-    String accessToken;
-    private void getCredentials() {
-        Ion.with(this)
-        .load("https://api.twitter.com/oauth2/token")
-        // embedding twitter api key and secret is a bad idea, but this isn't a real twitter app :)
-        .basicAuthentication("e4LrcHB55R3WamRYHpNfA", "MIABn1DU5db3Aj0xXzhthsf4aUKMAdoWJTMxJJcY")
-        .setBodyParameter("grant_type", "client_credentials")
-        .asJsonObject()
-        .setCallback(new FutureCallback<JsonObject>() {
-            @Override
-            public void onCompleted(Exception e, JsonObject result) {
-                if (e != null) {
-                    Toast.makeText(Twitter.this, "Error loading tweets", Toast.LENGTH_LONG).show();
-                    return;
-                }
-                accessToken = result.get("access_token").getAsString();
-                load();
-            }
-        });
-    }
-
-    private void load() {
-        // don't attempt to load more if a load is already in progress
-        if (loading != null && !loading.isDone() && !loading.isCancelled())
-            return;
-
-        // load the tweets
-        String url = "https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=BestAt&count=20";
-        if (tweetAdapter.getCount() > 0) {
-            // load from the "last" id
-            JsonObject last = tweetAdapter.getItem(tweetAdapter.getCount() - 1);
-            url += "&max_id=" + last.get("id_str").getAsString();
-        }
-
-        // Request tweets from Twitter using Ion.
-        // This is done using Ion's Fluent/Builder API.
-        // This API lets you chain calls together to build
-        // complex requests.
-
-        // This request loads a URL as JsonArray and invokes
-        // a callback on completion.
-        loading = Ion.with(this)
-        .load(url)
-        .setHeader("Authorization", "Bearer " + accessToken)
-        .asJsonArray()
-        .setCallback(new FutureCallback<JsonArray>() {
-            @Override
-            public void onCompleted(Exception e, JsonArray result) {
-                // this is called back onto the ui thread, no Activity.runOnUiThread or Handler.post necessary.
-                if (e != null) {
-                    Toast.makeText(Twitter.this, "Error loading tweets", Toast.LENGTH_LONG).show();
-                    return;
-                }
-                // add the tweets
-                for (int i = 0; i < result.size(); i++) {
-                    tweetAdapter.add(result.get(i).getAsJsonObject());
-                }
-            }
-        });
-    }
-}
diff --git a/ion-sample/src/com/koushikdutta/ion/sample/TwitterGson.java b/ion-sample/src/com/koushikdutta/ion/sample/TwitterGson.java
deleted file mode 100644
index 3ff0c6b0..00000000
--- a/ion-sample/src/com/koushikdutta/ion/sample/TwitterGson.java
+++ /dev/null
@@ -1,168 +0,0 @@
-package com.koushikdutta.ion.sample;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ArrayAdapter;
-import android.widget.ImageView;
-import android.widget.ListView;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.google.gson.JsonObject;
-import com.google.gson.annotations.SerializedName;
-import com.google.gson.reflect.TypeToken;
-import com.koushikdutta.async.future.Future;
-import com.koushikdutta.async.future.FutureCallback;
-import com.koushikdutta.ion.Ion;
-
-import java.util.List;
-
-public class TwitterGson extends Activity {
-    // Tweet and User are the classes that Gson will deserialize the JSON into
-    static class Tweet {
-        @SerializedName("retweeted_status")
-        Tweet retweetedStatus;
-        User user;
-        String text;
-        @SerializedName("id_str")
-        String id;
-    }
-
-    static class User {
-        @SerializedName("screen_name")
-        String screenName;
-        @SerializedName("profile_image_url")
-        String imageUrl;
-    }
-
-    // adapter that holds tweets, obviously :)
-    ArrayAdapter<Tweet> tweetAdapter;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        // Enable global Ion logging
-        Ion.getDefault(this).configure().setLogging("ion-sample", Log.DEBUG);
-
-        // create a tweet adapter for our list view
-        tweetAdapter = new ArrayAdapter<Tweet>(this, 0) {
-            @Override
-            public View getView(int position, View convertView, ViewGroup parent) {
-                if (convertView == null)
-                    convertView = getLayoutInflater().inflate(R.layout.tweet, null);
-
-                // we're near the end of the list adapter, so load more items
-                if (position >= getCount() - 3)
-                    load();
-
-                // grab the tweet (or retweet)
-                Tweet tweet = getItem(position);
-                Tweet retweet = tweet.retweetedStatus;
-                if (retweet != null)
-                    tweet = retweet;
-
-                ImageView imageView = (ImageView)convertView.findViewById(R.id.image);
-
-                // Use Ion's builder set the google_image on an ImageView from a URL
-
-                // start with the ImageView
-                Ion.with(imageView)
-                // use a placeholder google_image if it needs to load from the network
-                .placeholder(R.drawable.twitter)
-                // load the url
-                .load(tweet.user.imageUrl);
-
-
-                // and finally, set the name and text
-                TextView handle = (TextView)convertView.findViewById(R.id.handle);
-                handle.setText(tweet.user.screenName);
-
-                TextView text = (TextView)convertView.findViewById(R.id.tweet);
-                text.setText(tweet.text);
-                return convertView;
-            }
-        };
-
-        // basic setup of the ListView and adapter
-        setContentView(R.layout.twitter);
-        ListView listView = (ListView)findViewById(R.id.list);
-        listView.setAdapter(tweetAdapter);
-
-        // authenticate and do the first load
-        getCredentials();
-    }
-
-    // This "Future" tracks loading operations.
-    // A Future is an object that manages the state of an operation
-    // in progress that will have a "Future" result.
-    // You can attach callbacks (setCallback) for when the result is ready,
-    // or cancel() it if you no longer need the result.
-    Future<List<Tweet>> loading;
-
-    // Lets grab the authentication
-    String accessToken;
-    private void getCredentials() {
-        Ion.with(this)
-        .load("https://api.twitter.com/oauth2/token")
-        // embedding twitter api key and secret is a bad idea, but this isn't a real twitter app :)
-        .basicAuthentication("e4LrcHB55R3WamRYHpNfA", "MIABn1DU5db3Aj0xXzhthsf4aUKMAdoWJTMxJJcY")
-        .setBodyParameter("grant_type", "client_credentials")
-        .asJsonObject()
-        .setCallback(new FutureCallback<JsonObject>() {
-            @Override
-            public void onCompleted(Exception e, JsonObject result) {
-                if (e != null) {
-                    Toast.makeText(TwitterGson.this, "Error loading tweets", Toast.LENGTH_LONG).show();
-                    return;
-                }
-                accessToken = result.get("access_token").getAsString();
-                load();
-            }
-        });
-    }
-
-    private void load() {
-        // don't attempt to load more if a load is already in progress
-        if (loading != null && !loading.isDone() && !loading.isCancelled())
-            return;
-
-        // load the tweets
-        String url = "https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=BestAt&count=20";
-        if (tweetAdapter.getCount() > 0) {
-            // load from the "last" id
-            Tweet last = tweetAdapter.getItem(tweetAdapter.getCount() - 1);
-            url += "&max_id=" + last.id;
-        }
-
-        // Request tweets from Twitter using Ion.
-        // This is done using Ion's Fluent/Builder API.
-        // This API lets you chain calls together to build
-        // complex requests.
-
-        // This request loads a URL as JsonArray and invokes
-        // a callback on completion.
-        loading = Ion.with(this)
-        .load(url)
-        .setHeader("Authorization", "Bearer " + accessToken)
-        .as(new TypeToken<List<Tweet>>() {
-        })
-        .setCallback(new FutureCallback<List<Tweet>>() {
-            @Override
-            public void onCompleted(Exception e, List<Tweet> result) {
-                // this is called back onto the ui thread, no Activity.runOnUiThread or Handler.post necessary.
-                if (e != null) {
-                    Toast.makeText(TwitterGson.this, "Error loading tweets", Toast.LENGTH_LONG).show();
-                    return;
-                }
-                // add the tweets
-                for (int i = 0; i < result.size(); i++) {
-                    tweetAdapter.add(result.get(i));
-                }
-            }
-        });
-    }
-}
diff --git a/ion-sample/telescope.jpg b/ion-sample/telescope.jpg
deleted file mode 100644
index 7bd22bd8..00000000
Binary files a/ion-sample/telescope.jpg and /dev/null differ
diff --git a/ion-test-server/.gitignore b/ion-test-server/.gitignore
deleted file mode 100644
index 0d20b648..00000000
--- a/ion-test-server/.gitignore
+++ /dev/null
@@ -1 +0,0 @@
-*.pyc
diff --git a/ion-test-server/app.yaml b/ion-test-server/app.yaml
deleted file mode 100644
index 6cd74473..00000000
--- a/ion-test-server/app.yaml
+++ /dev/null
@@ -1,9 +0,0 @@
-application: ion-test
-version: 1
-runtime: python27
-api_version: 1
-threadsafe: yes
-
-handlers:
-- url: .*
-  script: main.app
diff --git a/ion-test-server/main.py b/ion-test-server/main.py
deleted file mode 100644
index 942de629..00000000
--- a/ion-test-server/main.py
+++ /dev/null
@@ -1,42 +0,0 @@
-import os
-import urllib
-import webapp2
-
-from google.appengine.ext import blobstore
-from google.appengine.ext.webapp import blobstore_handlers
-
-class MainHandler(webapp2.RequestHandler):
-  def get(self):
-    upload_url = blobstore.create_upload_url('/upload')
-    self.response.out.write('<html><body>')
-    self.response.out.write('<form action="%s" method="POST" enctype="multipart/form-data">' % upload_url)
-    self.response.out.write("""Upload File: <input type="file" name="file"><br> <input type="submit"
-        name="submit" value="Submit"> </form></body></html>""")
-
-class UploadUrlHandler(webapp2.RequestHandler):
-  def get(self):
-    upload_url = blobstore.create_upload_url('/upload')
-    self.response.out.write(upload_url)
-
-class UploadHandler(blobstore_handlers.BlobstoreUploadHandler):
-  def post(self):
-    upload_files = self.get_uploads('file')  # 'file' is file upload field in the form
-    blob_info = upload_files[0]
-    self.redirect('/serve/%s' % blob_info.key())
-
-class ServeHandler(blobstore_handlers.BlobstoreDownloadHandler):
-  def get(self, resource):
-    resource = str(urllib.unquote(resource))
-    blob_info = blobstore.BlobInfo.get(resource)
-    self.send_blob(blob_info)
-
-class QueryStringHandler(webapp2.RequestHandler):
-  def get(self):
-    self.response.out.write(self.request.query_string)
-
-app = webapp2.WSGIApplication([('/', MainHandler),
-                               ('/querystring', QueryStringHandler),
-                               ('/upload_url', UploadUrlHandler),
-                               ('/upload', UploadHandler),
-                               ('/serve/([^/]+)?', ServeHandler)],
-                              debug=True)
\ No newline at end of file
diff --git a/ion/build.gradle b/ion/build.gradle
index 3ecce2c4..028c99a9 100644
--- a/ion/build.gradle
+++ b/ion/build.gradle
@@ -31,9 +31,9 @@ android {
                 srcDir 'src/'
             }
         }
-        androidTest.java.srcDirs=['test/src/']
-        androidTest.res.srcDirs=['test/res/']
-        androidTest.assets.srcDirs=['test/assets/']
+//        androidTest.java.srcDirs=['test/src/']
+//        androidTest.res.srcDirs=['test/res/']
+//        androidTest.assets.srcDirs=['test/assets/']
     }
 
     lintOptions {
diff --git a/ion/test/assets/exif.jpg b/ion/test/assets/exif.jpg
deleted file mode 100644
index e2b0d22e..00000000
Binary files a/ion/test/assets/exif.jpg and /dev/null differ
diff --git a/ion/test/res/.gitignore b/ion/test/res/.gitignore
deleted file mode 100644
index e69de29b..00000000
diff --git a/ion/test/res/raw/keystore.bks b/ion/test/res/raw/keystore.bks
deleted file mode 100644
index acf703c7..00000000
Binary files a/ion/test/res/raw/keystore.bks and /dev/null differ
diff --git a/ion/test/src/com/koushikdutta/ion/test/AssetTests.java b/ion/test/src/com/koushikdutta/ion/test/AssetTests.java
deleted file mode 100644
index 83c08616..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/AssetTests.java
+++ /dev/null
@@ -1,20 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.graphics.Bitmap;
-import android.test.AndroidTestCase;
-
-import com.koushikdutta.ion.Ion;
-
-/**
- * Created by koush on 6/28/14.
- */
-public class AssetTests extends AndroidTestCase {
-    public void testAsset() throws Exception {
-        Bitmap bitmap = Ion.with(getContext())
-        .load("file:///android_asset/exif.jpg")
-        .asBitmap()
-        .get();
-
-        assertNotNull(bitmap);
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/AuthTests.java b/ion/test/src/com/koushikdutta/ion/test/AuthTests.java
deleted file mode 100644
index 27890c28..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/AuthTests.java
+++ /dev/null
@@ -1,66 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.test.AndroidTestCase;
-import android.util.Base64;
-import com.google.gson.JsonObject;
-import com.koushikdutta.async.AsyncServer;
-import com.koushikdutta.async.http.server.AsyncHttpServer;
-import com.koushikdutta.async.http.server.AsyncHttpServerRequest;
-import com.koushikdutta.async.http.server.AsyncHttpServerResponse;
-import com.koushikdutta.async.http.server.HttpServerRequestCallback;
-import com.koushikdutta.ion.Ion;
-
-/**
- * Created by koush on 6/6/13.
- */
-public class AuthTests extends AndroidTestCase {
-    AsyncHttpServer httpServer;
-
-    @Override
-    protected void setUp() throws Exception {
-        super.setUp();
-        httpServer = new AsyncHttpServer();
-        httpServer.listen(5555);
-    }
-
-    @Override
-    protected void tearDown() throws Exception {
-        super.tearDown();
-        httpServer.stop();
-        AsyncServer.getDefault().stop();
-    }
-
-    public void testBasicAuth() throws Exception {
-        httpServer.get("/", new HttpServerRequestCallback() {
-            @Override
-            public void onRequest(AsyncHttpServerRequest request, AsyncHttpServerResponse response) {
-                try {
-                    JsonObject json = new JsonObject();
-                    String authorization = request.getHeaders().get("Authorization").replace("Basic ", "");
-                    authorization = new String(Base64.decode(authorization, Base64.DEFAULT));
-                    String[] parts = authorization.split(":");
-                    assertTrue(parts.length == 2);
-                    String username = parts[0];
-                    String password = parts[1];
-                    json.addProperty("username", username);
-                    json.addProperty("password", password);
-                    response.send(json.toString());
-                }
-                catch (Exception e) {
-                    e.printStackTrace();
-                    fail();
-                }
-            }
-        });
-
-        JsonObject result = Ion.with(getContext())
-        .load("http://localhost:5555")
-        .setTimeout(500)
-        .basicAuthentication("foo", "bar")
-        .asJsonObject()
-        .get();
-
-        assertEquals("bar", result.get("password").getAsString());
-        assertEquals("foo", result.get("username").getAsString());
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/BitmapTests.java b/ion/test/src/com/koushikdutta/ion/test/BitmapTests.java
deleted file mode 100644
index d1f0e724..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/BitmapTests.java
+++ /dev/null
@@ -1,86 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.graphics.Bitmap;
-import android.test.AndroidTestCase;
-
-import com.koushikdutta.async.AsyncServer;
-import com.koushikdutta.async.future.FutureCallback;
-import com.koushikdutta.async.http.server.AsyncHttpServer;
-import com.koushikdutta.ion.Ion;
-
-import java.util.concurrent.Semaphore;
-import java.util.concurrent.TimeUnit;
-
-/**
- * Created by koush on 9/13/13.
- */
-public class BitmapTests extends AndroidTestCase {
-    public void testBitmapCallback() throws Exception {
-        final Semaphore semaphore = new Semaphore(0);
-        // todo: local resource
-        Ion.with(getContext())
-        .load("http://media.salon.com/2013/05/original.jpg")
-        .asBitmap()
-        .setCallback(new FutureCallback<Bitmap>() {
-            @Override
-            public void onCompleted(Exception e, Bitmap result) {
-                assertNotNull(result);
-                assertNull(e);
-                semaphore.release();
-            }
-        });
-        semaphore.tryAcquire(10000, TimeUnit.MILLISECONDS);
-    }
-
-    public void test404() throws Exception {
-        AsyncHttpServer httpServer = new AsyncHttpServer();
-        httpServer.listen(5566);
-        try {
-            final Semaphore semaphore = new Semaphore(0);
-            Ion.with(getContext())
-            .load("http://localhost:5566/foo.png")
-            .asBitmap()
-            .setCallback(new FutureCallback<Bitmap>() {
-                @Override
-                public void onCompleted(Exception e, Bitmap result) {
-                    semaphore.release();
-                    assertNotNull(e);
-                }
-            });
-            semaphore.tryAcquire(10000, TimeUnit.MILLISECONDS);
-
-            Ion.with(getContext())
-            .load("http://localhost:5566/foo.png")
-            .asBitmap()
-            .setCallback(new FutureCallback<Bitmap>() {
-                @Override
-                public void onCompleted(Exception e, Bitmap result) {
-                    semaphore.release();
-                    assertNotNull(e);
-                }
-            });
-            semaphore.tryAcquire(10000, TimeUnit.MILLISECONDS);
-        }
-        finally {
-            httpServer.stop();
-            AsyncServer.getDefault().stop();
-        }
-    }
-
-    public void testCropping() throws Exception {
-        Bitmap result = Ion.with(getContext())
-        .load("https://raw.githubusercontent.com/koush/ion/master/ion/test/assets/exif.jpg")
-        .withBitmap()
-        .resize(1080, 1845)
-        .centerCrop()
-        .asBitmap()
-        .get();
-
-        assertEquals(result.getWidth(), 1080);
-        assertEquals(result.getHeight(), 1845);
-        // pixel should not be clear
-        int pixel = result.getPixel(1079, 1844);
-        System.out.println(String.format("%x", pixel));
-        assertFalse(0 == pixel);
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/CompileTests.java b/ion/test/src/com/koushikdutta/ion/test/CompileTests.java
deleted file mode 100644
index edc085ae..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/CompileTests.java
+++ /dev/null
@@ -1,41 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.test.AndroidTestCase;
-
-import com.koushikdutta.ion.Ion;
-
-/**
- * Created by koush on 6/16/13.
- */
-public class CompileTests extends AndroidTestCase {
-    // should never actually run
-    void check() {
-        if (true)
-            return;
-
-        Ion.with(getContext())
-                .load("")
-                .withBitmap()
-                .resize(0, 0)
-                .animateLoad(null)
-                .intoImageView(null);
-
-        Ion.with(getContext())
-                .load("")
-                .withBitmap()
-                .resize(0, 0)
-                .centerCrop()
-                .resize(0, 0)
-                .placeholder(null)
-                .intoImageView(null);
-
-        // shouldnt compile
-
-//        Ion.with(getContext())
-//                .load("")
-//                .withBitmap()
-//                .resize(0, 0)
-//                .placeholder(null)
-//                .asBitmap();
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/ConscryptTests.java b/ion/test/src/com/koushikdutta/ion/test/ConscryptTests.java
deleted file mode 100644
index 19dc38a1..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/ConscryptTests.java
+++ /dev/null
@@ -1,38 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.test.AndroidTestCase;
-
-import com.koushikdutta.ion.Ion;
-
-import java.security.Provider;
-import java.security.Security;
-
-import javax.net.ssl.HttpsURLConnection;
-import javax.net.ssl.SSLSocketFactory;
-
-/**
- * Created by koush on 10/27/14.
- */
-public class ConscryptTests extends AndroidTestCase {
-    // needs to be run on fresh vm startups...
-
-    /*
-    public void testConscryptInit() throws Exception {
-        Ion.getDefault(getContext())
-        .getConscryptMiddleware().initialize();
-
-        Provider[] providers = Security.getProviders();
-
-        System.out.println(providers);
-    }
-
-    public void testDefault() throws Exception {
-        SSLSocketFactory factory = HttpsURLConnection.getDefaultSSLSocketFactory();
-
-        Ion.getDefault(getContext())
-        .getConscryptMiddleware().initialize();
-
-        assertEquals(factory, HttpsURLConnection.getDefaultSSLSocketFactory());
-    }
-    */
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/CookieTests.java b/ion/test/src/com/koushikdutta/ion/test/CookieTests.java
deleted file mode 100644
index e3a149d4..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/CookieTests.java
+++ /dev/null
@@ -1,75 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.test.AndroidTestCase;
-
-import com.koushikdutta.async.http.Headers;
-import com.koushikdutta.ion.Ion;
-import com.koushikdutta.ion.cookie.CookieMiddleware;
-
-import java.net.CookieManager;
-import java.net.URI;
-import java.util.List;
-import java.util.Map;
-
-/**
- * Created by koush on 12/1/13.
- */
-public class CookieTests extends AndroidTestCase {
-    public void testCookies() throws Exception {
-        Ion ion = Ion.getDefault(getContext());
-
-        ion.getCookieMiddleware().clear();
-
-        CookieManager manager = new CookieManager(null, null);
-
-        Headers headers = new Headers();
-        headers.set("Set-Cookie", "foo=bar");
-
-        URI uri = URI.create("http://example.com");
-        manager.put(uri, headers.getMultiMap());
-
-        headers.set("Set-Cookie", "poop=scoop");
-        manager.put(uri, headers.getMultiMap());
-
-        headers.set("Set-Cookie", "foo=goop");
-        manager.put(uri, headers.getMultiMap());
-
-        Headers newHeaders = new Headers();
-        Map<String, List<String>> cookies = manager.get(uri, newHeaders.getMultiMap());
-        manager.get(uri, cookies);
-        CookieMiddleware.addCookies(cookies, newHeaders);
-        assertTrue(newHeaders.get("Cookie").contains("foo=goop"));
-        assertTrue(newHeaders.get("Cookie").contains("poop=scoop"));
-        assertFalse(newHeaders.get("Cookie").contains("bar"));
-    }
-
-    public void testReinit() throws Exception {
-        CookieMiddleware middleware = Ion.getDefault(getContext()).getCookieMiddleware();
-        Ion ion = Ion.getDefault(getContext());
-
-        ion.getCookieMiddleware().clear();
-
-        Headers headers = new Headers();
-        headers.set("Set-Cookie", "foo=bar");
-
-        URI uri = URI.create("http://example.com");
-        middleware.put(uri, headers);
-
-        headers.set("Set-Cookie", "poop=scoop");
-        middleware.put(uri, headers);
-
-        headers.set("Set-Cookie", "foo=goop");
-        middleware.put(uri, headers);
-
-        middleware.reinit();
-        CookieManager manager = middleware.getCookieManager();
-
-        Headers newHeaders = new Headers();
-        Map<String, List<String>> cookies = manager.get(uri, newHeaders.getMultiMap());
-        manager.get(uri, cookies);
-        CookieMiddleware.addCookies(cookies, newHeaders);
-        assertTrue(newHeaders.get("Cookie").contains("foo=goop"));
-        assertTrue(newHeaders.get("Cookie").contains("poop=scoop"));
-        assertFalse(newHeaders.get("Cookie").contains("bar"));
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/CustomParserTests.java b/ion/test/src/com/koushikdutta/ion/test/CustomParserTests.java
deleted file mode 100644
index 20162b02..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/CustomParserTests.java
+++ /dev/null
@@ -1,17 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.test.AndroidTestCase;
-
-import com.koushikdutta.async.parser.StringParser;
-import com.koushikdutta.ion.Ion;
-
-/**
- * Created by koush on 12/17/13.
- */
-public class CustomParserTests extends AndroidTestCase {
-    public void testCustomParser() throws Exception {
-        assertNotNull(Ion.with(getContext())
-        .load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
-        .as(new StringParser()).get());
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/ExceptionTests.java b/ion/test/src/com/koushikdutta/ion/test/ExceptionTests.java
deleted file mode 100644
index c4ad1d90..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/ExceptionTests.java
+++ /dev/null
@@ -1,82 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.test.AndroidTestCase;
-import android.util.Log;
-
-import com.koushikdutta.async.AsyncServer;
-import com.koushikdutta.async.Util;
-import com.koushikdutta.async.callback.CompletedCallback;
-import com.koushikdutta.async.http.server.AsyncHttpServer;
-import com.koushikdutta.async.http.server.AsyncHttpServerRequest;
-import com.koushikdutta.async.http.server.AsyncHttpServerResponse;
-import com.koushikdutta.async.http.server.HttpServerRequestCallback;
-import com.koushikdutta.ion.Ion;
-import com.koushikdutta.ion.Response;
-
-/**
- * Created by koush on 11/4/13.
- */
-public class ExceptionTests extends AndroidTestCase {
-    @Override
-    protected void setUp() throws Exception {
-        super.setUp();
-        AsyncHttpServer server = new AsyncHttpServer();
-        server.listen(5555);
-        server.get("/contentlength", new HttpServerRequestCallback() {
-            @Override
-            public void onRequest(AsyncHttpServerRequest request, final AsyncHttpServerResponse response) {
-                response.code(200);
-                response.getHeaders().set("Content-Length", "10");
-                Util.writeAll(response, "five!".getBytes(), new CompletedCallback() {
-                    @Override
-                    public void onCompleted(Exception ex) {
-                        // close the socket prematurely
-                        response.getSocket().close();
-                    }
-                });
-            }
-        });
-        server.get("/chunked", new HttpServerRequestCallback() {
-            @Override
-            public void onRequest(AsyncHttpServerRequest request, final AsyncHttpServerResponse response) {
-                response.code(200);
-                Util.writeAll(response, "five!".getBytes(), new CompletedCallback() {
-                    @Override
-                    public void onCompleted(Exception ex) {
-                        // close the socket prematurely
-                        response.getSocket().close();
-                    }
-                });
-            }
-        });
-    }
-
-    @Override
-    protected void tearDown() throws Exception {
-        super.tearDown();
-        AsyncServer.getDefault().stop();
-    }
-
-    public void testDisconnect() throws Exception {
-        Response<String> response = Ion.with(getContext())
-        .load("http://localhost:5555/contentlength")
-        .setLogging("DISCONNECT", Log.DEBUG)
-        .asString()
-        .withResponse()
-        .get();
-
-        assertNotNull(response);
-        assertNotNull(response.getException());
-
-        response = Ion.with(getContext())
-        .load("http://localhost:5555/chunked")
-        .setLogging("DISCONNECT", Log.DEBUG)
-        .asString()
-        .withResponse()
-        .get();
-
-        assertNotNull(response);
-        assertNotNull(response.getException());
-    }
-}
-
diff --git a/ion/test/src/com/koushikdutta/ion/test/ExifTests.java b/ion/test/src/com/koushikdutta/ion/test/ExifTests.java
deleted file mode 100644
index 321ca21d..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/ExifTests.java
+++ /dev/null
@@ -1,20 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.graphics.Bitmap;
-import android.test.AndroidTestCase;
-
-import com.koushikdutta.ion.Ion;
-
-/**
- * Created by koush on 11/5/13.
- */
-public class ExifTests extends AndroidTestCase {
-    public void testRotated() throws Exception {
-        Bitmap bitmap = Ion.with(getContext())
-        .load("https://raw.githubusercontent.com/koush/ion/master/ion/test/assets/exif.jpg")
-        .asBitmap()
-        .get();
-
-        assertTrue(bitmap.getWidth() < bitmap.getHeight());
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/FileTests.java b/ion/test/src/com/koushikdutta/ion/test/FileTests.java
deleted file mode 100644
index 87cb3675..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/FileTests.java
+++ /dev/null
@@ -1,30 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.test.AndroidTestCase;
-
-import com.koushikdutta.async.util.StreamUtility;
-import com.koushikdutta.ion.Ion;
-
-import java.io.File;
-
-/**
- * Created by koush on 5/22/13.
- */
-public class FileTests extends AndroidTestCase {
-    public void testFileLoader() throws Exception {
-        File f = getContext().getFileStreamPath("test.txt");
-        StreamUtility.writeFile(f, "hello world");
-
-        assertEquals("hello world", Ion.with(getContext()).load(f).asString().get());
-    }
-
-    public void testFileUpload() throws Exception {
-        File f = getContext().getFileStreamPath("test.txt");
-        StreamUtility.writeFile(f, "hello world");
-
-        Ion.with(getContext())
-        .load("POST", "http://koush.com/test/echo")
-        .asString()
-        .get();
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/GifTests.java b/ion/test/src/com/koushikdutta/ion/test/GifTests.java
deleted file mode 100644
index 88f207e1..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/GifTests.java
+++ /dev/null
@@ -1,24 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.test.AndroidTestCase;
-
-import com.koushikdutta.ion.Ion;
-import com.koushikdutta.ion.gif.GifDecoder;
-import com.koushikdutta.ion.gif.GifFrame;
-
-/**
- * Created by koush on 10/31/14.
- */
-public class GifTests extends AndroidTestCase {
-    public void testGif() throws Exception {
-        byte[] bytes = Ion.with(getContext())
-        .load("https://raw2.github.com/koush/ion/master/ion-sample/mark.gif")
-        .asByteArray()
-        .get();
-
-        GifDecoder decoder = new GifDecoder(bytes);
-
-        GifFrame frame = decoder.nextFrame();
-        frame = decoder.nextFrame();
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/GsonTests.java b/ion/test/src/com/koushikdutta/ion/test/GsonTests.java
deleted file mode 100644
index 5665bfa4..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/GsonTests.java
+++ /dev/null
@@ -1,132 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.test.AndroidTestCase;
-
-import com.google.gson.JsonObject;
-import com.google.gson.JsonParseException;
-import com.google.gson.reflect.TypeToken;
-import com.koushikdutta.async.AsyncServer;
-import com.koushikdutta.async.ByteBufferList;
-import com.koushikdutta.async.FilteredDataEmitter;
-import com.koushikdutta.async.future.Future;
-import com.koushikdutta.async.future.FutureCallback;
-import com.koushikdutta.async.http.server.AsyncHttpServer;
-import com.koushikdutta.async.http.server.AsyncHttpServerRequest;
-import com.koushikdutta.async.http.server.AsyncHttpServerResponse;
-import com.koushikdutta.async.http.server.HttpServerRequestCallback;
-import com.koushikdutta.ion.Ion;
-import com.koushikdutta.ion.gson.GsonObjectParser;
-
-import java.nio.ByteBuffer;
-import java.util.concurrent.ExecutionException;
-import java.util.concurrent.Semaphore;
-
-/**
- * Created by koush on 6/5/13.
- */
-public class GsonTests extends AndroidTestCase {
-    public static class Pojo {
-        public String foo = "bar";
-    }
-    public void testPojoPost() throws Exception {
-        TypeToken<Pojo> token = new TypeToken<Pojo>(){};
-
-        JsonObject json = Ion.with(getContext())
-        .load("http://koush.clockworkmod.com/test/echo")
-        .setJsonPojoBody(new Pojo())
-        .asJsonObject().get();
-
-        assertEquals(json.get("foo").getAsString(), "bar");
-    }
-
-    public void testJunkPayload() throws Exception {
-        AsyncHttpServer httpServer = new AsyncHttpServer();
-        try {
-            httpServer.get("/", new HttpServerRequestCallback() {
-                @Override
-                public void onRequest(AsyncHttpServerRequest request, final AsyncHttpServerResponse response) {
-                    response.send("not json!");
-                }
-            });
-
-            httpServer.listen(5555);
-
-            Future<JsonObject> ret = Ion.with(getContext())
-                    .load("PUT", "http://localhost:5555/")
-                    .asJsonObject();
-
-            ret.get();
-            fail();
-        }
-        catch (ExecutionException e) {
-            assertTrue(e.getCause() instanceof JsonParseException);
-        }
-        finally {
-            httpServer.stop();
-            AsyncServer.getDefault().stop();
-        }
-    }
-
-    public void testParserCastingSuccess() throws Exception {
-        ByteBufferList b = new ByteBufferList(ByteBuffer.wrap("{}".getBytes()));
-        FilteredDataEmitter emitter = new FilteredDataEmitter() {
-            @Override
-            public boolean isPaused() {
-                return false;
-            }
-        };
-        GsonObjectParser g = new GsonObjectParser();
-        Future<JsonObject> ret = g.parse(emitter);
-        emitter.onDataAvailable(emitter, b);
-        emitter.getEndCallback().onCompleted(null);
-        JsonObject j = ret.get();
-        assertNotNull(j);
-    }
-
-
-    public void testParserCastingError() throws Exception {
-        ByteBufferList b = new ByteBufferList(ByteBuffer.wrap("[]".getBytes()));
-        FilteredDataEmitter emitter = new FilteredDataEmitter() {
-            @Override
-            public boolean isPaused() {
-                return false;
-            }
-        };
-        GsonObjectParser g = new GsonObjectParser();
-        Future<JsonObject> ret = g.parse(emitter);
-        emitter.onDataAvailable(emitter, b);
-        emitter.getEndCallback().onCompleted(null);
-        try {
-            JsonObject j = ret.get();
-            fail(j.toString());
-        }
-        catch (Exception e) {
-            e.printStackTrace();
-        }
-    }
-
-    public void testParserCastingCallbackError() throws Exception {
-        ByteBufferList b = new ByteBufferList(ByteBuffer.wrap("[]".getBytes()));
-        FilteredDataEmitter emitter = new FilteredDataEmitter() {
-            @Override
-            public boolean isPaused() {
-                return false;
-            }
-        };
-        GsonObjectParser g = new GsonObjectParser();
-        Future<JsonObject> ret = g.parse(emitter);
-        emitter.onDataAvailable(emitter, b);
-        emitter.getEndCallback().onCompleted(null);
-        final Semaphore s = new Semaphore(0);
-        ret.setCallback(new FutureCallback<JsonObject>() {
-            @Override
-            public void onCompleted(Exception e, JsonObject result) {
-                assertNull(result);
-                assertNotNull(e);
-                assertTrue(e instanceof ClassCastException);
-                s.release();
-            }
-        });
-        s.acquire();
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/HeadersTests.java b/ion/test/src/com/koushikdutta/ion/test/HeadersTests.java
deleted file mode 100644
index 0aad596d..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/HeadersTests.java
+++ /dev/null
@@ -1,121 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.test.AndroidTestCase;
-
-import com.google.gson.JsonObject;
-import com.koushikdutta.async.future.FutureCallback;
-import com.koushikdutta.async.http.Headers;
-import com.koushikdutta.async.http.server.AsyncHttpServer;
-import com.koushikdutta.async.http.server.AsyncHttpServerRequest;
-import com.koushikdutta.async.http.server.AsyncHttpServerResponse;
-import com.koushikdutta.async.http.server.HttpServerRequestCallback;
-import com.koushikdutta.ion.HeadersCallback;
-import com.koushikdutta.ion.HeadersResponse;
-import com.koushikdutta.ion.Ion;
-import com.koushikdutta.ion.Response;
-
-import java.util.concurrent.Semaphore;
-import java.util.concurrent.TimeUnit;
-
-/**
- * Created by koush on 6/30/13.
- */
-public class HeadersTests extends AndroidTestCase {
-    boolean gotHeaders;
-    public void testHeaders() throws Exception {
-        gotHeaders = false;
-        AsyncHttpServer httpServer = new AsyncHttpServer();
-        try {
-            httpServer.get("/", new HttpServerRequestCallback() {
-                @Override
-                public void onRequest(AsyncHttpServerRequest request, AsyncHttpServerResponse response) {
-                    response.send("hello");
-                }
-            });
-            httpServer.listen(Ion.getDefault(getContext()).getServer(), 5555);
-
-            Ion.with(getContext())
-            .load("http://localhost:5555/")
-            .onHeaders(new HeadersCallback() {
-                @Override
-                public void onHeaders(HeadersResponse headers) {
-                    assertEquals(headers.code(), 200);
-                    gotHeaders = true;
-                }
-            })
-            .asString()
-            .get();
-
-            assertTrue(gotHeaders);
-        }
-        finally {
-            httpServer.stop();
-            Ion.getDefault(getContext()).getServer().stop();
-        }
-    }
-
-    public void testHeadersCallback() throws Exception {
-        AsyncHttpServer httpServer = new AsyncHttpServer();
-        try {
-            httpServer.get("/", new HttpServerRequestCallback() {
-                @Override
-                public void onRequest(AsyncHttpServerRequest request, AsyncHttpServerResponse response) {
-                    response.send("hello");
-                }
-            });
-            httpServer.listen(Ion.getDefault(getContext()).getServer(), 5555);
-
-            final Semaphore semaphore = new Semaphore(0);
-
-            Ion.with(getContext())
-                    .load("http://localhost:5555/")
-                    .asString()
-                    .withResponse()
-                    .setCallback(new FutureCallback<Response<String>>() {
-                        @Override
-                        public void onCompleted(Exception e, Response<String> result) {
-                            assertEquals(result.getHeaders().code(), 200);
-                            semaphore.release();
-                        }
-                    });
-
-            assertTrue(semaphore.tryAcquire(10000, TimeUnit.MILLISECONDS));
-        }
-        finally {
-            httpServer.stop();
-            Ion.getDefault(getContext()).getServer().stop();
-        }
-    }
-
-    public void testBustedJson() throws Exception {
-        AsyncHttpServer httpServer = new AsyncHttpServer();
-        try {
-            httpServer.get("/", new HttpServerRequestCallback() {
-                @Override
-                public void onRequest(AsyncHttpServerRequest request, AsyncHttpServerResponse response) {
-                    response.send("hello");
-                }
-            });
-            httpServer.listen(Ion.getDefault(getContext()).getServer(), 5555);
-
-            Response<JsonObject> response = Ion.with(getContext())
-                    .load("http://localhost:5555/")
-                    .asJsonObject()
-                    .withResponse()
-                    .get();
-
-            assertNull(response.getResult());
-            assertNotNull(response.getException());
-        }
-        finally {
-            httpServer.stop();
-            Ion.getDefault(getContext()).getServer().stop();
-        }
-    }
-
-    public void testHeadCasing() throws Exception {
-        Headers headers = new Headers();
-        headers.set("Foo", "bar");
-        assertTrue(headers.toString().contains("Foo"));
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/HttpTests.java b/ion/test/src/com/koushikdutta/ion/test/HttpTests.java
deleted file mode 100644
index 74c52b60..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/HttpTests.java
+++ /dev/null
@@ -1,275 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.test.AndroidTestCase;
-import android.util.Log;
-
-import com.google.gson.JsonArray;
-import com.google.gson.JsonObject;
-import com.google.gson.reflect.TypeToken;
-import com.koushikdutta.async.AsyncServer;
-import com.koushikdutta.async.AsyncServerSocket;
-import com.koushikdutta.async.future.Future;
-import com.koushikdutta.async.future.FutureCallback;
-import com.koushikdutta.async.http.Multimap;
-import com.koushikdutta.async.http.body.MultipartFormDataBody;
-import com.koushikdutta.async.http.body.Part;
-import com.koushikdutta.async.http.server.AsyncHttpServer;
-import com.koushikdutta.async.http.server.AsyncHttpServerRequest;
-import com.koushikdutta.async.http.server.AsyncHttpServerResponse;
-import com.koushikdutta.async.http.server.AsyncProxyServer;
-import com.koushikdutta.async.http.server.HttpServerRequestCallback;
-import com.koushikdutta.async.util.StreamUtility;
-import com.koushikdutta.ion.Ion;
-import com.koushikdutta.ion.cookie.CookieMiddleware;
-
-import java.io.File;
-import java.net.HttpCookie;
-import java.net.URI;
-import java.util.List;
-import java.util.concurrent.Semaphore;
-import java.util.concurrent.TimeUnit;
-
-/**
- * Created by koush on 5/22/13.
- */
-public class HttpTests extends AndroidTestCase {
-    @Override
-    protected void setUp() throws Exception {
-        super.setUp();
-        Ion.getDefault(getContext())
-        .configure().setLogging("HttpTests", Log.VERBOSE);
-    }
-
-    public void testString() throws Exception {
-        assertNotNull(Ion.with(getContext()).load("https://raw.githubusercontent.com/koush/AndroidAsync/master/AndroidAsync/test/assets/test.json")
-        .asString().get());
-    }
-
-    public void testInputStream() throws Exception {
-        assertNotNull(StreamUtility.readToEnd(Ion.with(getContext()).load("https://raw.githubusercontent.com/koush/AndroidAsync/master/AndroidAsync/test/assets/test.json")
-        .asInputStream().get()));
-    }
-
-    public void testMultipartFileContentType() throws Exception {
-        File f = getContext().getFileStreamPath("empty");
-        f.getParentFile().mkdirs();
-        f.createNewFile();
-        AsyncHttpServer httpServer = new AsyncHttpServer();
-        httpServer.post("/", new HttpServerRequestCallback() {
-            @Override
-            public void onRequest(AsyncHttpServerRequest request, final AsyncHttpServerResponse response) {
-                MultipartFormDataBody body = (MultipartFormDataBody)request.getBody();
-                body.setMultipartCallback(new MultipartFormDataBody.MultipartCallback() {
-                    @Override
-                    public void onPart(Part part) {
-                        response.send(part.getContentType());
-                    }
-                });
-            }
-        });
-        try {
-            httpServer.listen(AsyncServer.getDefault(), 6666);
-            String mime = Ion.with(getContext())
-            .load("http://localhost:6666/")
-            .setMultipartFile("foo", "test/mime", f)
-            .asString()
-            .get(1000, TimeUnit.MILLISECONDS);
-            assertEquals(mime, "test/mime");
-        }
-        finally {
-            httpServer.stop();
-        }
-    }
-
-    public void testStringWithCallback() throws Exception {
-        final Semaphore semaphore = new Semaphore(0);
-        Ion.with(getContext()).load("http://www.clockworkmod.com/")
-                // need to null out the handler since the semaphore blocks the main thread,
-                // and ion's default behavior is to post back onto the main thread or calling Handler.
-                .setHandler(null)
-                .asString()
-                .setCallback(new FutureCallback<String>() {
-                    @Override
-                    public void onCompleted(Exception e, String result) {
-                        assertNull(e);
-                        assertNotNull(result);
-                        semaphore.release();
-                    }
-                });
-        assertTrue(semaphore.tryAcquire(10000, TimeUnit.MILLISECONDS));
-    }
-
-    public void testJsonObject() throws Exception {
-        JsonObject ret = Ion.with(getContext()).load("https://raw.githubusercontent.com/koush/AndroidAsync/master/AndroidAsync/test/assets/test.json")
-                .asJsonObject().get();
-        assertEquals("bar", ret.get("foo").getAsString());
-    }
-
-    public void testPostJsonObject() throws Exception {
-        JsonObject post = new JsonObject();
-        post.addProperty("ping", "pong");
-        JsonObject ret = Ion.with(getContext()).load("https://koush.clockworkmod.com/test/echo")
-                .setJsonObjectBody(post)
-                .asJsonObject().get();
-        assertEquals("pong", ret.get("ping").getAsString());
-    }
-
-    public void testUrlEncodedFormBody() throws Exception {
-        JsonObject ret = Ion.with(getContext()).load("https://koush.clockworkmod.com/test/echo")
-        .setBodyParameter("blit", "bip")
-        .asJsonObject().get();
-        assertEquals("bip", ret.get("blit").getAsString());
-    }
-
-    public void testUrlEncodedFormBodyWithNull() throws Exception {
-        JsonObject ret = Ion.with(getContext()).load("https://koush.clockworkmod.com/test/echo")
-        .setTimeout(3000000)
-        .setBodyParameter("blit", null)
-        .setBodyParameter("foo", "bar")
-        .asJsonObject().get();
-        assertTrue(!ret.has("blit"));
-        assertEquals("bar", ret.get("foo").getAsString());
-    }
-
-    public void testMultipart() throws Exception {
-        JsonObject ret = Ion.with(getContext()).load("https://koush.clockworkmod.com/test/echo")
-                .setMultipartParameter("goop", "noop")
-                .asJsonObject().get();
-        assertEquals("noop", ret.get("goop").getAsString());
-    }
-
-    public void testCookie() throws Exception {
-        Ion ion = Ion.getDefault(getContext());
-        ion.getCookieMiddleware().clear();
-
-        ion.build(getContext())
-        .load("http://google.com")
-        .asString()
-        .get();
-
-        for (HttpCookie cookie: ion.getCookieMiddleware().getCookieStore().get(URI.create("http://www.google.com"))) {
-            Log.i("CookieTest", cookie.getName() + ": " + cookie.getValue());
-        }
-        assertTrue(ion.getCookieMiddleware().getCookieManager().get(URI.create("http://www.google.com/test/path"), new Multimap()).size() > 0);
-
-        CookieMiddleware deserialize = new CookieMiddleware(ion);
-        assertTrue(deserialize.getCookieManager().get(URI.create("http://www.google.com/test/path"), new Multimap()).size() > 0);
-    }
-
-
-    public void testGroupCancel() throws Exception {
-        Ion.getDefault(getContext()).cancelAll();
-        assertEquals(Ion.getDefault(getContext()).getPendingRequestCount(getContext()), 0);
-
-        Object cancelGroup = new Object();
-        Ion.with(getContext()).load("http://koush.clockworkmod.com/test/hang")
-                .setHandler(null)
-                .group(cancelGroup)
-                .asJsonObject();
-
-        // There's no decent way to test this yet...
-        // Connecting should result in 2 keys (since clockworkmod.com has two ips).
-        // One will connect and be used to serve the response.
-        // The other will connect and be recycled.
-        // Cancelling the group will result in the one serving the connection
-        // to be severed. The other one will remain alive.
-
-        // may need to increase this timeout? ugh horrible.
-        Thread.sleep(500);
-        Ion.getDefault(getContext()).getHttpClient().getServer().dump();
-
-        Ion.getDefault(getContext()).cancelAll(cancelGroup);
-        assertEquals(Ion.getDefault(getContext()).getPendingRequestCount(getContext()), 0);
-
-        Thread.sleep(500);
-        Ion.getDefault(getContext()).getHttpClient().getServer().dump();
-    }
-
-    public static class Dummy {
-        public String foo;
-    }
-
-    public void testGson() throws Exception {
-        JsonObject dummy1 = new JsonObject();
-        dummy1.addProperty("foo", "bar");
-        JsonObject dummy2 = new JsonObject();
-        dummy2.addProperty("pong", "ping");
-
-        JsonArray array = new JsonArray();
-        array.add(dummy1);
-        array.add(dummy2);
-
-        final Semaphore semaphore = new Semaphore(0);
-        Ion.with(getContext()).load("https://koush.clockworkmod.com/test/echo")
-                .setHandler(null)
-                .setJsonArrayBody(array)
-                .as(new TypeToken<List<Dummy>>() {
-                })
-                .setCallback(new FutureCallback<List<Dummy>>() {
-                    @Override
-                    public void onCompleted(Exception e, List<Dummy> result) {
-                        assertEquals("bar", result.get(0).foo);
-                        semaphore.release();
-                    }
-                });
-        assertTrue(semaphore.tryAcquire(50000, TimeUnit.MILLISECONDS));
-    }
-
-    boolean wasProxied;
-    public void testProxy() throws Exception {
-        wasProxied = false;
-        final AsyncServer proxyServer = new AsyncServer();
-        try {
-            AsyncProxyServer httpServer = new AsyncProxyServer(proxyServer) {
-                @Override
-                protected boolean onRequest(AsyncHttpServerRequest request, AsyncHttpServerResponse response) {
-                    wasProxied = true;
-                    return super.onRequest(request, response);
-                }
-            };
-            AsyncServerSocket s = httpServer.listen(proxyServer, 0);
-
-            Future<String> ret = Ion.with(getContext())
-            .load("http://www.clockworkmod.com")
-            .proxy("localhost", s.getLocalPort())
-            .asString();
-
-            String data;
-            assertNotNull(data = ret.get(10000, TimeUnit.MILLISECONDS));
-            assertTrue(data.contains("ClockworkMod"));
-            assertTrue(wasProxied);
-        }
-        finally {
-            proxyServer.stop();
-        }
-    }
-
-    public void testSSLNullRef() throws Exception {
-        Ion.with(getContext()).load("https://launchpad.net/")
-                .asString()
-                .get();
-    }
-
-    public void testPut() throws Exception {
-        AsyncHttpServer httpServer = new AsyncHttpServer();
-        try {
-            httpServer.addAction("PUT", "/", new HttpServerRequestCallback() {
-                @Override
-                public void onRequest(AsyncHttpServerRequest request, final AsyncHttpServerResponse response) {
-                    response.send(request.getMethod());
-                }
-            });
-
-            httpServer.listen(Ion.getDefault(getContext()).getServer(), 5555);
-
-            Future<String> ret = Ion.with(getContext())
-                    .load("PUT", "http://localhost:5555/")
-                    .asString();
-
-            assertEquals(ret.get(), "PUT");
-        }
-        finally {
-            httpServer.stop();
-        }
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/Issues.java b/ion/test/src/com/koushikdutta/ion/test/Issues.java
deleted file mode 100644
index eec30288..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/Issues.java
+++ /dev/null
@@ -1,328 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.graphics.Bitmap;
-import android.test.AndroidTestCase;
-import android.util.Base64;
-import android.util.Log;
-
-import com.google.gson.JsonObject;
-import com.koushikdutta.async.AsyncServer;
-import com.koushikdutta.async.AsyncServerSocket;
-import com.koushikdutta.async.AsyncSocket;
-import com.koushikdutta.async.ByteBufferList;
-import com.koushikdutta.async.Util;
-import com.koushikdutta.async.callback.CompletedCallback;
-import com.koushikdutta.async.callback.ListenCallback;
-import com.koushikdutta.async.future.Future;
-import com.koushikdutta.async.future.FutureCallback;
-import com.koushikdutta.async.http.AsyncHttpClient;
-import com.koushikdutta.async.http.AsyncHttpGet;
-import com.koushikdutta.async.http.body.UrlEncodedFormBody;
-import com.koushikdutta.async.http.server.AsyncHttpServer;
-import com.koushikdutta.async.http.server.AsyncHttpServerRequest;
-import com.koushikdutta.async.http.server.AsyncHttpServerResponse;
-import com.koushikdutta.async.http.server.HttpServerRequestCallback;
-import com.koushikdutta.async.util.StreamUtility;
-import com.koushikdutta.ion.Ion;
-import com.koushikdutta.ion.Response;
-
-import java.io.File;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.Random;
-import java.util.concurrent.TimeUnit;
-
-/**
- * Created by koush on 10/27/13.
- */
-public class Issues extends AndroidTestCase {
-    public void testIssue74() throws Exception {
-        String data = Ion.with(getContext()).load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
-        .setLogging("MyLogs", Log.VERBOSE)
-        .asString().get();
-
-        String data2 = Ion.with(getContext()).load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
-        .setLogging("MyLogs", Log.VERBOSE)
-        .asString().get();
-
-        assertEquals(data, data2);
-    }
-
-    public void testSpdyReuse() throws Exception {
-        String data = Ion.with(getContext()).load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
-        .setLogging("MyLogs", Log.VERBOSE)
-        .asString().get();
-
-        String data2 = Ion.with(getContext()).load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
-        .setLogging("MyLogs", Log.VERBOSE)
-        .asString().get();
-
-        Ion.with(getContext()).load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
-        .setLogging("MyLogs", Log.VERBOSE)
-        .asString().get();
-
-        Ion.with(getContext()).load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
-        .setLogging("MyLogs", Log.VERBOSE)
-        .asString().get();
-
-        Ion.with(getContext()).load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
-        .setLogging("MyLogs", Log.VERBOSE)
-        .asString().get();
-
-        Ion.with(getContext()).load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
-        .setLogging("MyLogs", Log.VERBOSE)
-        .asString().get();
-
-        Ion.with(getContext()).load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
-        .setLogging("MyLogs", Log.VERBOSE)
-        .asString().get();
-
-        assertEquals(data, data2);
-    }
-
-    public void testIssue126() throws Exception {
-        Bitmap bitmap = Ion.with(getContext())
-        .load("http://bdc.tsingyuan.cn/api/img?w=advanced")
-        .setLogging("Issue126", Log.VERBOSE)
-        .asBitmap()
-        .get();
-
-        assertNotNull(bitmap);
-        assertTrue(bitmap.getWidth() > 0);
-    }
-
-    public void testIssue146() throws Exception {
-        AsyncHttpServer httpServer = new AsyncHttpServer();
-        httpServer.get("/", new HttpServerRequestCallback() {
-            @Override
-            public void onRequest(AsyncHttpServerRequest request, AsyncHttpServerResponse response) {
-                response.getHeaders().set("Cache-Control", "max-age=300");
-                response.send(request.getQuery().size() + "");
-            }
-        });
-        AsyncServer asyncServer = new AsyncServer();
-        try {
-            int localPort = httpServer.listen(asyncServer, 0).getLocalPort();
-            String s1 = Ion.with(getContext())
-            .load("http://localhost:" + localPort)
-            .addQuery("query1", "q")
-            .asString()
-            .get();
-
-            String s2 = Ion.with(getContext())
-            .load("http://localhost:" + localPort)
-            .addQuery("query1", "q")
-            .addQuery("query2", "qq")
-            .asString()
-            .get();
-
-            String s3 = Ion.with(getContext())
-            .load("http://localhost:" + localPort)
-            .addQuery("query1", "q")
-            .asString()
-            .get();
-
-            assertEquals(s1, "1");
-            assertEquals(s2, "2");
-            assertEquals(s3, "1");
-        }
-        finally {
-            asyncServer.stop();
-        }
-    }
-
-    public void testIssue200() throws Exception {
-        Map<String, List<String>> params = new HashMap<String, List<String>>();
-        params.put("email", Arrays.asList("mail@mail.pl"));
-        params.put("password", Arrays.asList("pass"));
-
-        String val = Ion.with(getContext())
-        .load("https://koush.clockworkmod.com/test/echo")
-        .setLogging("Issue200", Log.VERBOSE)
-        .setBodyParameters(params)
-        .asString()
-        .get(2000, TimeUnit.MILLISECONDS);
-
-        System.out.println(val);
-    }
-
-    public void testIssue179() throws Exception {
-        Ion.with(getContext())
-        .load("https://api.gigaset-elements.de/app/check-support" )
-        .setBodyParameter("version", "1.0")
-        .asString()
-        .setCallback(new FutureCallback<String>() {
-            @Override
-            public void onCompleted(Exception e, String result) {
-                if(result!=null)
-                    Log.d("WTF",result);
-                if(e!=null){
-                    e.printStackTrace();
-                }
-            }
-        })
-        .get();
-    }
-
-    public void testIssue253() throws Exception {
-        byte[] random = new byte[100000];
-        new Random(39548394).nextBytes(random);
-        String b64 = Base64.encodeToString(random, 0);
-
-        String uploadUrl = Ion.with(getContext())
-        .load("https://ion-test.appspot.com/upload_url")
-        .asString()
-        .get();
-
-        File file = getContext().getFileStreamPath("testData");
-        StreamUtility.writeFile(file, b64);
-
-        String data = Ion.with(getContext())
-        .load(uploadUrl)
-        .setMultipartFile("file", file)
-        .asString()
-        .get();
-
-        assertEquals(b64, data);
-    }
-
-    /*
-    public void testSSLv3Workaround() throws Exception {
-        Ion.getDefault(getContext())
-        .getHttpClient()
-        .getSSLSocketMiddleware()
-        .addEngineConfigurator(new AsyncSSLEngineConfigurator() {
-            @Override
-            public void configureEngine(SSLEngine engine) {
-                engine.setEnabledProtocols(new String[] { "SSLv3" });
-            }
-        });
-        Ion.with(getContext())
-        .load("https://members.easynews.com/dl/893b36f51a28bb066a7401e2850ecf2401cdd97a1.jpg/Kittens-and-Puppies-13_graylady.jpg")
-        .asString()
-        .get();
-    }
-    */
-
-    AsyncServerSocket server;
-    public void testIssue312() throws Exception {
-        String b64 = "SFRUUC8xLjAgMzAyIEZvdW5kDQpTZXQtQ29va2ll\n" +
-        "OlNFU1NJT049NUJBRDlERTEwQjY0NjgwNDsKTG9j\n" +
-        "YXRpb246IGhvbWUuY2dpCkNvbnRlbnQtdHlwZTog\n" +
-        "dGV4dC9odG1sCgo8aHRtbD48aGVhZD48bWV0YSBo\n" +
-        "dHRwLWVxdWl2PSdyZWZyZXNoJyBjb250ZW50PScw\n" +
-        "OyB1cmw9aG9tZS5jZ2knPjwvbWV0YT48L2hlYWQ+\n" +
-        "PGJvZHk+PC9ib2R5PjwvaHRtbD4K";
-
-        /*
-        HTTP/1.0 302 Found
-        Set-Cookie:SESSION=5BAD9DE10B646804;
-        Location: home.cgi
-        Content-type: text/html
-
-        <html><head><meta http-equiv='refresh' content='0; url=home.cgi'></meta></head><body></body></html>
-         */
-
-        // the above is using newlines, and not CRLF.
-
-        final byte[] responseData = Base64.decode(b64, 0);
-
-
-        server = Ion.getDefault(getContext())
-        .getServer().listen(null, 0, new ListenCallback() {
-            @Override
-            public void onAccepted(final AsyncSocket socket) {
-                Util.writeAll(socket, responseData, new CompletedCallback() {
-                    @Override
-                    public void onCompleted(Exception ex) {
-                        socket.end();
-                        server.stop();
-                    }
-                });
-            }
-            @Override
-            public void onListening(AsyncServerSocket socket) {
-            }
-            @Override
-            public void onCompleted(Exception ex) {
-            }
-        });
-
-        Ion.with(getContext())
-        .load("http://localhost:" + server.getLocalPort())
-        .followRedirect(false)
-        .asString()
-        .get();
-    }
-
-    public void testIssue318() throws Exception {
-        String response = Ion.with(getContext()).load("http://banpo.hs.kr/custom/custom.do?dcpNo=30524").asString().get();
-        assertNotNull(response);
-    }
-
-    public void testIssue329() throws Exception {
-        AsyncHttpServer httpServer = new AsyncHttpServer();
-        httpServer.post("/", new HttpServerRequestCallback() {
-            @Override
-            public void onRequest(AsyncHttpServerRequest request, AsyncHttpServerResponse response) {
-                UrlEncodedFormBody body = (UrlEncodedFormBody)request.getBody();
-                response.send(body.get().getString("電"));
-            }
-        });
-
-        AsyncServer asyncServer = new AsyncServer();
-        try {
-            int localPort = httpServer.listen(asyncServer, 0).getLocalPort();
-            String s1 = Ion.with(getContext())
-            .load("http://localhost:" + localPort)
-            .setBodyParameter("電", "電")
-            .asString()
-            .get();
-
-            assertEquals(s1, "電");
-        }
-        finally {
-            asyncServer.stop();
-        }
-    }
-
-    public void testAAIssue225() throws Exception {
-        String ret = Ion.with(getContext())
-        .load("https://content.fastrbooks.com/android-test.txt")
-        .noCache()
-        .asString()
-        .get();
-
-        System.out.println(ret);
-    }
-
-    public void testIon428() throws Exception {
-        Ion.with(getContext())
-        .load("https://cdn2.vox-cdn.com/thumbor/KxtZNw37jKNfxdA0hX5edHvbTBE=/0x0:2039x1359/800x536/cdn0.vox-cdn.com/uploads/chorus_image/image/44254028/lg-g-watch.0.0.jpg")
-        .asString()
-        .get();
-    }
-
-    public void testIon450() throws Exception {
-        Ion.getDefault(getContext())
-        .configure().setLogging("Test", Log.VERBOSE);
-
-        Ion.with(getContext())
-        .load("https://api.instagram.com/v1/users/self/feed")
-        .asString()
-        .get();
-
-        Ion.with(getContext())
-        .load("https://api.instagram.com/v1/users/self/feed")
-        .asString()
-        .get();
-
-        Ion.with(getContext())
-        .load("https://api.instagram.com/v1/users/self/feed")
-        .asString()
-        .get();
-
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/Md5.java b/ion/test/src/com/koushikdutta/ion/test/Md5.java
deleted file mode 100644
index f6a6bb81..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/Md5.java
+++ /dev/null
@@ -1,50 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import com.koushikdutta.async.ByteBufferList;
-import com.koushikdutta.async.util.StreamUtility;
-
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-import java.io.IOException;
-import java.math.BigInteger;
-import java.nio.ByteBuffer;
-import java.security.MessageDigest;
-import java.security.NoSuchAlgorithmException;
-
-public class Md5 {
-    private MessageDigest digest;
-    public static Md5 createInstance() throws NoSuchAlgorithmException {
-        Md5 md5 = new Md5();
-        md5.digest = MessageDigest.getInstance("MD5");
-        return md5;
-    }
-
-    public static String digest(File file) throws NoSuchAlgorithmException, IOException {
-        byte[] bytes = StreamUtility.readToEndAsArray(new FileInputStream(file));
-        Md5 md5 = Md5.createInstance();
-        md5.digest.update(bytes);
-        return md5.digest();
-    }
-    
-    private Md5() {
-        
-    }
-    public Md5 update(ByteBufferList bb) {
-        while (bb.size() > 0) {
-            ByteBuffer b = bb.remove();
-            digest.update(b);
-        }
-        return this;
-    }
-
-    public Md5 update(byte[] bytes) {
-        digest.update(bytes);
-        return this;
-    }
-
-    public String digest() {
-        String hash = new BigInteger(digest.digest()).toString(16);
-        return hash;
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/ProgressTests.java b/ion/test/src/com/koushikdutta/ion/test/ProgressTests.java
deleted file mode 100644
index 58098794..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/ProgressTests.java
+++ /dev/null
@@ -1,102 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.test.AndroidTestCase;
-import android.util.Log;
-
-import com.koushikdutta.async.AsyncServer;
-import com.koushikdutta.async.ByteBufferList;
-import com.koushikdutta.async.callback.CompletedCallback;
-import com.koushikdutta.async.future.FutureCallback;
-import com.koushikdutta.async.http.body.MultipartFormDataBody;
-import com.koushikdutta.async.http.body.Part;
-import com.koushikdutta.async.http.server.AsyncHttpServer;
-import com.koushikdutta.async.http.server.AsyncHttpServerRequest;
-import com.koushikdutta.async.http.server.AsyncHttpServerResponse;
-import com.koushikdutta.async.http.server.HttpServerRequestCallback;
-import com.koushikdutta.ion.Ion;
-import com.koushikdutta.ion.ProgressCallback;
-
-import java.io.ByteArrayOutputStream;
-import java.util.concurrent.Semaphore;
-import java.util.concurrent.TimeUnit;
-
-/**
- * Created by koush on 6/13/13.
- */
-public class ProgressTests extends AndroidTestCase {
-    final static String dataNameAndHash = "6691924d7d24237d3b3679310157d640";
-    public void testProgress() throws Exception {
-        final Semaphore semaphore = new Semaphore(0);
-        final Semaphore progressSemaphore = new Semaphore(0);
-        final Md5 md5 = Md5.createInstance();
-        Ion.with(getContext())
-        .load("https://raw.githubusercontent.com/koush/AndroidAsync/master/AndroidAsync/test/assets/6691924d7d24237d3b3679310157d640")
-        .setHandler(null)
-        .setTimeout(600000)
-        .setLogging("testProgress", Log.VERBOSE)
-        .progress(new ProgressCallback() {
-            @Override
-            public void onProgress(long downloaded, long total) {
-                // depending on gzip, etc. the total may vary... the actual length of the uncompressed data
-                // is 100000
-                assertTrue(total > 90000 && total < 110000);
-                progressSemaphore.release();
-            }
-        })
-        .write(new ByteArrayOutputStream())
-        .setCallback(new FutureCallback<ByteArrayOutputStream>() {
-            @Override
-            public void onCompleted(Exception e, ByteArrayOutputStream result) {
-                byte[] bytes = result.toByteArray();
-                md5.update(new ByteBufferList(bytes));
-                assertEquals(md5.digest(), dataNameAndHash);
-                semaphore.release();
-            }
-        });
-        assertTrue(semaphore.tryAcquire(600000, TimeUnit.MILLISECONDS));
-        assertTrue(progressSemaphore.tryAcquire(10000, TimeUnit.MILLISECONDS));
-    }
-
-    public void testUpload() throws Exception {
-        AsyncHttpServer httpServer = new AsyncHttpServer();
-        try {
-            httpServer.listen(Ion.getDefault(getContext()).getServer(), 5000);
-            httpServer.post("/", new HttpServerRequestCallback() {
-                @Override
-                public void onRequest(AsyncHttpServerRequest request, final AsyncHttpServerResponse response) {
-                    MultipartFormDataBody multipartFormDataBody = (MultipartFormDataBody)request.getBody();
-
-                    multipartFormDataBody.setMultipartCallback(new MultipartFormDataBody.MultipartCallback() {
-                        @Override
-                        public void onPart(Part part) {
-
-                        }
-                    });
-
-                    multipartFormDataBody.setEndCallback(new CompletedCallback() {
-                        @Override
-                        public void onCompleted(Exception ex) {
-                            response.send("Got parts!");
-                        }
-                    });
-                }
-            });
-
-            final Semaphore semaphore = new Semaphore(0);
-            Ion.with(getContext()).load("http://localhost:5000/")
-                    .uploadProgress(new ProgressCallback() {
-                        @Override
-                        public void onProgress(long downloaded, long total) {
-                            semaphore.release();
-                        }
-                    })
-                    .setMultipartParameter("foo", "bar")
-                    .asString()
-                    .get();
-            assertTrue(semaphore.tryAcquire());
-        }
-        finally {
-            Ion.getDefault(getContext()).getServer().stop();
-        }
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/RedirectTests.java b/ion/test/src/com/koushikdutta/ion/test/RedirectTests.java
deleted file mode 100644
index dcd32e93..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/RedirectTests.java
+++ /dev/null
@@ -1,48 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.test.AndroidTestCase;
-import android.util.Log;
-
-import com.koushikdutta.async.http.server.AsyncHttpServer;
-import com.koushikdutta.async.http.server.AsyncHttpServerRequest;
-import com.koushikdutta.async.http.server.AsyncHttpServerResponse;
-import com.koushikdutta.async.http.server.HttpServerRequestCallback;
-import com.koushikdutta.ion.Ion;
-import com.koushikdutta.ion.Response;
-
-/**
- * Created by koush on 7/20/13.
- */
-public class RedirectTests extends AndroidTestCase {
-    public void testFinalLocation() throws Exception {
-        try {
-            AsyncHttpServer server = new AsyncHttpServer();
-            server.listen(Ion.getDefault(getContext()).getServer(), 5555);
-            server.get("/", new HttpServerRequestCallback() {
-                @Override
-                public void onRequest(AsyncHttpServerRequest request, AsyncHttpServerResponse response) {
-                    response.redirect("/foo");
-                }
-            });
-
-            server.get("/foo", new HttpServerRequestCallback() {
-                @Override
-                public void onRequest(AsyncHttpServerRequest request, AsyncHttpServerResponse response) {
-                    response.send("bar");
-                }
-            });
-
-            Response<String> response = Ion.with(getContext())
-            .load("http://localhost:5555")
-            .asString()
-            .withResponse()
-            .get();
-
-            assertEquals(response.getResult(), "bar");
-            assertEquals(response.getRequest().getUri().toString(), "http://localhost:5555/foo");
-        }
-        finally {
-            Ion.getDefault(getContext()).getServer().stop();
-        }
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/SelfSignedCertificateTests.java b/ion/test/src/com/koushikdutta/ion/test/SelfSignedCertificateTests.java
deleted file mode 100644
index 5bae289f..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/SelfSignedCertificateTests.java
+++ /dev/null
@@ -1,58 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.test.AndroidTestCase;
-
-import com.koushikdutta.async.http.server.AsyncHttpServer;
-import com.koushikdutta.async.http.server.AsyncHttpServerRequest;
-import com.koushikdutta.async.http.server.AsyncHttpServerResponse;
-import com.koushikdutta.async.http.server.HttpServerRequestCallback;
-import com.koushikdutta.ion.Ion;
-
-import java.security.KeyStore;
-
-import javax.net.ssl.KeyManagerFactory;
-import javax.net.ssl.SSLContext;
-import javax.net.ssl.TrustManagerFactory;
-
-/**
- * Created by koush on 11/21/14.
- */
-public class SelfSignedCertificateTests extends AndroidTestCase {
-    public void testKeys() throws Exception {
-        KeyManagerFactory kmf = KeyManagerFactory.getInstance("X509");
-        KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType());
-
-        ks.load(getContext().getResources().openRawResource(R.raw.keystore), "storepass".toCharArray());
-        kmf.init(ks, "storepass".toCharArray());
-
-
-        TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
-        KeyStore ts = KeyStore.getInstance(KeyStore.getDefaultType());
-        ts.load(getContext().getResources().openRawResource(R.raw.keystore), "storepass".toCharArray());
-        tmf.init(ts);
-
-        SSLContext sslContext = SSLContext.getInstance("TLS");
-        sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);
-
-        AsyncHttpServer httpServer = new AsyncHttpServer();
-        httpServer.listenSecure(8888, sslContext);
-        httpServer.get("/", new HttpServerRequestCallback() {
-            @Override
-            public void onRequest(AsyncHttpServerRequest request, AsyncHttpServerResponse response) {
-                response.send("hello");
-            }
-        });
-
-        Thread.sleep(1000);
-
-        Ion ion = Ion.getInstance(getContext(), "CustomSSL");
-        ion.getHttpClient().getSSLSocketMiddleware().setSSLContext(sslContext);
-        ion.getHttpClient().getSSLSocketMiddleware().setTrustManagers(tmf.getTrustManagers());
-
-        ion.build(getContext())
-        .load("https://localhost:8888/")
-        .asString()
-        .get();
-    }
-
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/SpdyTests.java b/ion/test/src/com/koushikdutta/ion/test/SpdyTests.java
deleted file mode 100644
index c63adca1..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/SpdyTests.java
+++ /dev/null
@@ -1,73 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.test.AndroidTestCase;
-import android.util.Base64;
-import android.util.Log;
-
-import com.koushikdutta.async.util.StreamUtility;
-import com.koushikdutta.ion.Ion;
-
-import java.io.File;
-import java.util.Random;
-import java.util.concurrent.TimeUnit;
-
-import javax.net.ssl.SSLContext;
-
-/**
- * Created by koush on 7/28/14.
- */
-public class SpdyTests extends AndroidTestCase {
-    public void testAppEngineSpdy() throws Exception {
-//        Ion.getDefault(getContext())
-//        .getConscryptMiddleware().enable(false);
-
-//        Security.insertProviderAt(new OpenSSLProvider("MyNameBlah"), 1);
-
-        String uploadUrl = Ion.with(getContext())
-        .load("https://ion-test.appspot.com/upload_url")
-        .asString()
-        .get();
-
-        byte[] random = new byte[100000];
-        new Random(39548394).nextBytes(random);
-        String b64 = Base64.encodeToString(random, 0);
-
-        File file = getContext().getFileStreamPath("testData");
-        StreamUtility.writeFile(file, b64);
-
-        String data = Ion.with(getContext())
-        .load(uploadUrl)
-        .setLogging("test", Log.VERBOSE)
-        .setMultipartFile("file", file)
-        .asString()
-        .get();
-
-        assertEquals(b64, data);
-    }
-
-    public void testQueryString() throws Exception {
-        String data = Ion.with(getContext())
-        .load("https://ion-test.appspot.com/querystring")
-        .addQuery("foo", "bar")
-        .setLogging("test", Log.VERBOSE)
-        .asString()
-        .get();
-
-        assertEquals("foo=bar", data);
-    }
-
-    public void testGoogleSpdy() throws Exception {
-        assertNotNull(Ion.with(getContext())
-        .load("https://www.google.com")
-        .setLogging("test", Log.VERBOSE)
-        .setTimeout(1000000)
-        .asString().get(100000, TimeUnit.SECONDS));
-
-
-        assertNotNull(Ion.with(getContext())
-        .load("https://www.google.com")
-        .setLogging("test", Log.VERBOSE)
-        .setTimeout(1000000)
-        .asString().get(100000, TimeUnit.SECONDS));
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/StoreTests.java b/ion/test/src/com/koushikdutta/ion/test/StoreTests.java
deleted file mode 100644
index ebca0571..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/StoreTests.java
+++ /dev/null
@@ -1,74 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.test.AndroidTestCase;
-
-import com.google.gson.JsonObject;
-import com.koushikdutta.ion.Ion;
-
-import java.util.concurrent.TimeUnit;
-
-/**
- * Created by koush on 11/20/13.
- */
-public class StoreTests extends AndroidTestCase {
-    public void testString() throws Exception {
-        Ion.getDefault(getContext())
-        .store("foo")
-        .remove();
-
-        Ion.getDefault(getContext())
-        .store("foo")
-        .putString("bar")
-        .get(1000, TimeUnit.MILLISECONDS);
-
-        String result = Ion.getDefault(getContext())
-        .store("foo")
-        .getString();
-
-        assertEquals(result, "bar");
-    }
-
-    public void testJson() throws Exception {
-        Ion.getDefault(getContext())
-        .store("foo")
-        .remove();
-
-        JsonObject json = new JsonObject();
-        json.addProperty("foo", "bar");
-
-        Ion.getDefault(getContext())
-        .store("foo")
-        .putJsonObject(json)
-        .get(1000, TimeUnit.MILLISECONDS);
-
-        JsonObject result = Ion.getDefault(getContext())
-        .store("foo")
-        .getJsonObject();
-
-        assertEquals(result.get("foo").getAsString(), "bar");
-    }
-
-    public static class TestClass {
-        public String foo;
-    }
-
-    public void testGson() throws Exception {
-        Ion.getDefault(getContext())
-        .store("foo")
-        .remove();
-
-        TestClass test = new TestClass();
-        test.foo = "bar";
-
-        Ion.getDefault(getContext())
-        .store("foo")
-        .put(test, TestClass.class)
-        .get(1000, TimeUnit.MILLISECONDS);
-
-        TestClass result = Ion.getDefault(getContext())
-        .store("foo")
-        .get(TestClass.class);
-
-        assertEquals(result.foo, "bar");
-    }
-}
diff --git a/ion/test/src/com/koushikdutta/ion/test/StreamTests.java b/ion/test/src/com/koushikdutta/ion/test/StreamTests.java
deleted file mode 100644
index 11b54535..00000000
--- a/ion/test/src/com/koushikdutta/ion/test/StreamTests.java
+++ /dev/null
@@ -1,77 +0,0 @@
-package com.koushikdutta.ion.test;
-
-import android.test.AndroidTestCase;
-
-import com.koushikdutta.async.AsyncServer;
-import com.koushikdutta.async.ByteBufferList;
-import com.koushikdutta.async.Util;
-import com.koushikdutta.async.callback.CompletedCallback;
-import com.koushikdutta.async.http.server.AsyncHttpServer;
-import com.koushikdutta.async.http.server.AsyncHttpServerRequest;
-import com.koushikdutta.async.http.server.AsyncHttpServerResponse;
-import com.koushikdutta.async.http.server.HttpServerRequestCallback;
-import com.koushikdutta.async.util.StreamUtility;
-import com.koushikdutta.ion.Ion;
-
-import java.io.FileOutputStream;
-import java.io.InputStream;
-import java.nio.ByteBuffer;
-import java.util.Random;
-
-/**
- * Created by koush on 11/3/13.
- */
-public class StreamTests extends AndroidTestCase {
-    byte[] random = new byte[100000];
-    int port;
-    @Override
-    protected void setUp() throws Exception {
-        super.setUp();
-        AsyncHttpServer server = new AsyncHttpServer();
-        port = server.listen(0).getLocalPort();
-        server.get("/", new HttpServerRequestCallback() {
-            @Override
-            public void onRequest(AsyncHttpServerRequest request, final AsyncHttpServerResponse response) {
-                response.code(200);
-                ByteBuffer b = ByteBufferList.obtain(random.length);
-                b.put(random);
-                b.flip();
-                ByteBufferList list = new ByteBufferList(b);
-                Util.writeAll(response, list, new CompletedCallback() {
-                    @Override
-                    public void onCompleted(Exception ex) {
-                        response.end();
-                    }
-                });
-            }
-        });
-    }
-
-    @Override
-    protected void tearDown() throws Exception {
-        super.tearDown();
-        AsyncServer.getDefault().stop();
-    }
-
-    public void testStream() throws Exception {
-        new Random(39548394).nextBytes(random);
-        Ion.with(getContext())
-        .load("http://localhost:" + port + "/")
-        .write(new FileOutputStream(getContext().getFileStreamPath("test")), true)
-        .get();
-
-        assertEquals(Md5.createInstance().update(random).digest(), Md5.digest(getContext().getFileStreamPath("test")));
-    }
-
-
-    public void testInputStream() throws Exception {
-        new Random(39548394).nextBytes(random);
-        InputStream is = Ion.with(getContext())
-        .load("http://localhost:" + port + "/")
-        .asInputStream()
-        .get();
-
-        assertEquals(Md5.createInstance().update(random).digest(),
-            Md5.createInstance().update(StreamUtility.readToEndAsArray(is)).digest());
-    }
-}
