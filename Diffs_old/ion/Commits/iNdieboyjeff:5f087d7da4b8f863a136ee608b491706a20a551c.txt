diff --git a/ion/src/com/koushikdutta/ion/DefaultTransform.java b/ion/src/com/koushikdutta/ion/DefaultTransform.java
index 59ec30ec..3351f644 100644
--- a/ion/src/com/koushikdutta/ion/DefaultTransform.java
+++ b/ion/src/com/koushikdutta/ion/DefaultTransform.java
@@ -2,6 +2,7 @@
 
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
+import android.graphics.Paint;
 import android.graphics.RectF;
 
 import com.koushikdutta.ion.bitmap.Transform;
@@ -19,6 +20,8 @@ public DefaultTransform(int width, int height, ScaleMode scaleMode) {
         this.scaleMode = scaleMode;
     }
 
+    final static Paint bilinearSamplingPaint = new Paint(Paint.FILTER_BITMAP_FLAG);
+
     @Override
     public Bitmap transform(Bitmap b) {
         Bitmap.Config config = b.getConfig();
@@ -60,7 +63,7 @@ else if (resizeHeight <= 0) {
         Bitmap ret = Bitmap.createBitmap(resizeWidth, resizeHeight, config);
         Canvas canvas = new Canvas(ret);
 
-        canvas.drawBitmap(b, null, destination, null);
+        canvas.drawBitmap(b, null, destination, bilinearSamplingPaint);
         return ret;
     }
 
diff --git a/ion/src/com/koushikdutta/ion/IonBitmapRequestBuilder.java b/ion/src/com/koushikdutta/ion/IonBitmapRequestBuilder.java
index 93e770f5..9f900981 100644
--- a/ion/src/com/koushikdutta/ion/IonBitmapRequestBuilder.java
+++ b/ion/src/com/koushikdutta/ion/IonBitmapRequestBuilder.java
@@ -6,6 +6,7 @@
 import android.view.animation.AnimationUtils;
 import android.widget.ImageView;
 
+import com.koushikdutta.async.AsyncServer;
 import com.koushikdutta.async.future.Future;
 import com.koushikdutta.async.future.SimpleFuture;
 import com.koushikdutta.async.util.FileCache;
@@ -200,7 +201,7 @@ BitmapFetcher executeCache() {
         }
 
         // see if we get something back synchronously
-        BitmapFetcher bitmapFetcher = executeCache();
+        final BitmapFetcher bitmapFetcher = executeCache();
         if (bitmapFetcher.info != null) {
             SimpleFuture<Bitmap> ret = new SimpleFuture<Bitmap>();
             Bitmap bitmap = bitmapFetcher.info.bitmaps == null ? null : bitmapFetcher.info.bitmaps[0];
@@ -208,10 +209,15 @@ BitmapFetcher executeCache() {
             return ret;
         }
 
-        bitmapFetcher.execute();
-        // we're loading, so let's register for the result.
-        BitmapInfoToBitmap ret = new BitmapInfoToBitmap(builder.contextReference);
-        ion.bitmapsPending.add(bitmapFetcher.bitmapKey, ret);
+        final BitmapInfoToBitmap ret = new BitmapInfoToBitmap(builder.contextReference);
+        AsyncServer.post(Ion.mainHandler, new Runnable() {
+            @Override
+            public void run() {
+                bitmapFetcher.execute();
+                // we're loading, so let's register for the result.
+                ion.bitmapsPending.add(bitmapFetcher.bitmapKey, ret);
+            }
+        });
         return ret;
     }
 
