diff --git a/ion/AndroidManifest.xml b/ion/AndroidManifest.xml
index 9281db29..52ac9ec3 100644
--- a/ion/AndroidManifest.xml
+++ b/ion/AndroidManifest.xml
@@ -1,7 +1,7 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
           package="com.koushikdutta.ion"
-          android:versionCode="202"
-          android:versionName="2.0.2">
+          android:versionCode="204"
+          android:versionName="2.0.4">
 
     <uses-permission android:name="android.permission.INTERNET"/>
 
diff --git a/ion/ion-ion.iml b/ion/ion-ion.iml
index 24496073..30e1a7c5 100644
--- a/ion/ion-ion.iml
+++ b/ion/ion-ion.iml
@@ -84,8 +84,8 @@
     </content>
     <orderEntry type="jdk" jdkName="Android API 21 Platform" jdkType="Android SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" exported="" name="support-annotations-21.0.0" level="project" />
-    <orderEntry type="library" exported="" name="support-v4-21.0.0" level="project" />
+    <orderEntry type="library" exported="" name="support-annotations-21.0.3" level="project" />
+    <orderEntry type="library" exported="" name="support-v4-21.0.3" level="project" />
     <orderEntry type="library" exported="" name="gson-2.3" level="project" />
     <orderEntry type="module" module-name="AndroidAsync-AndroidAsync" exported="" />
   </component>
diff --git a/ion/src/com/koushikdutta/ion/InputStreamParser.java b/ion/src/com/koushikdutta/ion/InputStreamParser.java
index af12d996..bfd06219 100644
--- a/ion/src/com/koushikdutta/ion/InputStreamParser.java
+++ b/ion/src/com/koushikdutta/ion/InputStreamParser.java
@@ -15,7 +15,7 @@
 /**
  * Created by koush on 11/3/13.
  */
-public class InputStreamParser implements AsyncParser<InputStream> {
+class InputStreamParser implements AsyncParser<InputStream> {
     @Override
     public Future<InputStream> parse(DataEmitter emitter) {
         return new ByteBufferListParser().parse(emitter)
diff --git a/ion/src/com/koushikdutta/ion/Ion.java b/ion/src/com/koushikdutta/ion/Ion.java
index a4ebfd82..de7ac1e1 100644
--- a/ion/src/com/koushikdutta/ion/Ion.java
+++ b/ion/src/com/koushikdutta/ion/Ion.java
@@ -396,7 +396,7 @@ public Context getContext() {
     WeakHashMap<Object, FutureSet> inFlight = new WeakHashMap<Object, FutureSet>();
 
     private void addCookieMiddleware() {
-        httpClient.insertMiddleware(cookieMiddleware = new CookieMiddleware(context, name));
+        httpClient.insertMiddleware(cookieMiddleware = new CookieMiddleware(this));
     }
 
     /**
diff --git a/ion/src/com/koushikdutta/ion/cookie/CookieMiddleware.java b/ion/src/com/koushikdutta/ion/cookie/CookieMiddleware.java
index 939576b5..c8d8f0f1 100644
--- a/ion/src/com/koushikdutta/ion/cookie/CookieMiddleware.java
+++ b/ion/src/com/koushikdutta/ion/cookie/CookieMiddleware.java
@@ -7,6 +7,7 @@
 
 import com.koushikdutta.async.http.Headers;
 import com.koushikdutta.async.http.SimpleMiddleware;
+import com.koushikdutta.ion.Ion;
 
 import java.net.CookieManager;
 import java.net.CookieStore;
@@ -27,21 +28,24 @@ public CookieStore getCookieStore() {
     }
 
     public void clear() {
+        maybeInit();
         getCookieStore().removeAll();
-        preferences.edit().clear().commit();
+        preferences.edit().clear().apply();
     }
 
     public CookieManager getCookieManager() {
+        maybeInit();
         return manager;
     }
 
-    public CookieMiddleware(Context context, String name) {
-        reinit(context, name);
+    Ion ion;
+    public CookieMiddleware(Ion ion) {
+        this.ion = ion;
     }
 
-    public void reinit(Context context, String name) {
+    public void reinit() {
         manager = new CookieManager(null, null);
-        preferences = context.getSharedPreferences(name + "-cookies", Context.MODE_PRIVATE);
+        preferences = ion.getContext().getSharedPreferences(ion.getName() + "-cookies", Context.MODE_PRIVATE);
 
         Map<String, ?> allPrefs = preferences.getAll();
         for (String key: allPrefs.keySet()) {
@@ -75,8 +79,14 @@ public static void addCookies(Map<String, List<String>> allCookieHeaders, Header
         }
     }
 
+    private void maybeInit() {
+        if (manager == null)
+            reinit();
+    }
+
     @Override
     public void onRequest(OnRequestData data) {
+        maybeInit();
         try {
             Map<String, List<String>> cookies = manager.get(
                 URI.create(
@@ -90,6 +100,7 @@ public void onRequest(OnRequestData data) {
 
     @Override
     public void onHeadersReceived(OnHeadersReceivedDataOnRequestSentData data) {
+        maybeInit();
         try {
             put(URI.create(data.request.getUri().toString()), data.response.headers());
         }
@@ -98,6 +109,7 @@ public void onHeadersReceived(OnHeadersReceivedDataOnRequestSentData data) {
     }
 
     public void put(URI uri, Headers headers) {
+        maybeInit();
         try {
             manager.put(uri, headers.getMultiMap());
 
diff --git a/ion/test/src/com/koushikdutta/ion/test/CookieTests.java b/ion/test/src/com/koushikdutta/ion/test/CookieTests.java
index 2fd4993e..e3a149d4 100644
--- a/ion/test/src/com/koushikdutta/ion/test/CookieTests.java
+++ b/ion/test/src/com/koushikdutta/ion/test/CookieTests.java
@@ -61,7 +61,7 @@ public void testReinit() throws Exception {
         headers.set("Set-Cookie", "foo=goop");
         middleware.put(uri, headers);
 
-        middleware.reinit(getContext(), Ion.getDefault(getContext()).getName());
+        middleware.reinit();
         CookieManager manager = middleware.getCookieManager();
 
         Headers newHeaders = new Headers();
diff --git a/ion/test/src/com/koushikdutta/ion/test/HttpTests.java b/ion/test/src/com/koushikdutta/ion/test/HttpTests.java
index 9cbc7744..74c52b60 100644
--- a/ion/test/src/com/koushikdutta/ion/test/HttpTests.java
+++ b/ion/test/src/com/koushikdutta/ion/test/HttpTests.java
@@ -18,6 +18,7 @@
 import com.koushikdutta.async.http.server.AsyncHttpServerResponse;
 import com.koushikdutta.async.http.server.AsyncProxyServer;
 import com.koushikdutta.async.http.server.HttpServerRequestCallback;
+import com.koushikdutta.async.util.StreamUtility;
 import com.koushikdutta.ion.Ion;
 import com.koushikdutta.ion.cookie.CookieMiddleware;
 
@@ -32,11 +33,23 @@
  * Created by koush on 5/22/13.
  */
 public class HttpTests extends AndroidTestCase {
+    @Override
+    protected void setUp() throws Exception {
+        super.setUp();
+        Ion.getDefault(getContext())
+        .configure().setLogging("HttpTests", Log.VERBOSE);
+    }
+
     public void testString() throws Exception {
-        assertNotNull(Ion.with(getContext()).load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
+        assertNotNull(Ion.with(getContext()).load("https://raw.githubusercontent.com/koush/AndroidAsync/master/AndroidAsync/test/assets/test.json")
         .asString().get());
     }
 
+    public void testInputStream() throws Exception {
+        assertNotNull(StreamUtility.readToEnd(Ion.with(getContext()).load("https://raw.githubusercontent.com/koush/AndroidAsync/master/AndroidAsync/test/assets/test.json")
+        .asInputStream().get()));
+    }
+
     public void testMultipartFileContentType() throws Exception {
         File f = getContext().getFileStreamPath("empty");
         f.getParentFile().mkdirs();
@@ -139,7 +152,7 @@ public void testCookie() throws Exception {
         }
         assertTrue(ion.getCookieMiddleware().getCookieManager().get(URI.create("http://www.google.com/test/path"), new Multimap()).size() > 0);
 
-        CookieMiddleware deserialize = new CookieMiddleware(getContext(), ion.getDefault(getContext()).getName());
+        CookieMiddleware deserialize = new CookieMiddleware(ion);
         assertTrue(deserialize.getCookieManager().get(URI.create("http://www.google.com/test/path"), new Multimap()).size() > 0);
     }
 
diff --git a/ion/test/src/com/koushikdutta/ion/test/Issues.java b/ion/test/src/com/koushikdutta/ion/test/Issues.java
index 9d8e9b2b..eec30288 100644
--- a/ion/test/src/com/koushikdutta/ion/test/Issues.java
+++ b/ion/test/src/com/koushikdutta/ion/test/Issues.java
@@ -5,13 +5,18 @@
 import android.util.Base64;
 import android.util.Log;
 
+import com.google.gson.JsonObject;
 import com.koushikdutta.async.AsyncServer;
 import com.koushikdutta.async.AsyncServerSocket;
 import com.koushikdutta.async.AsyncSocket;
+import com.koushikdutta.async.ByteBufferList;
 import com.koushikdutta.async.Util;
 import com.koushikdutta.async.callback.CompletedCallback;
 import com.koushikdutta.async.callback.ListenCallback;
+import com.koushikdutta.async.future.Future;
 import com.koushikdutta.async.future.FutureCallback;
+import com.koushikdutta.async.http.AsyncHttpClient;
+import com.koushikdutta.async.http.AsyncHttpGet;
 import com.koushikdutta.async.http.body.UrlEncodedFormBody;
 import com.koushikdutta.async.http.server.AsyncHttpServer;
 import com.koushikdutta.async.http.server.AsyncHttpServerRequest;
@@ -19,6 +24,7 @@
 import com.koushikdutta.async.http.server.HttpServerRequestCallback;
 import com.koushikdutta.async.util.StreamUtility;
 import com.koushikdutta.ion.Ion;
+import com.koushikdutta.ion.Response;
 
 import java.io.File;
 import java.util.Arrays;
@@ -44,6 +50,38 @@ public void testIssue74() throws Exception {
         assertEquals(data, data2);
     }
 
+    public void testSpdyReuse() throws Exception {
+        String data = Ion.with(getContext()).load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
+        .setLogging("MyLogs", Log.VERBOSE)
+        .asString().get();
+
+        String data2 = Ion.with(getContext()).load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
+        .setLogging("MyLogs", Log.VERBOSE)
+        .asString().get();
+
+        Ion.with(getContext()).load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
+        .setLogging("MyLogs", Log.VERBOSE)
+        .asString().get();
+
+        Ion.with(getContext()).load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
+        .setLogging("MyLogs", Log.VERBOSE)
+        .asString().get();
+
+        Ion.with(getContext()).load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
+        .setLogging("MyLogs", Log.VERBOSE)
+        .asString().get();
+
+        Ion.with(getContext()).load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
+        .setLogging("MyLogs", Log.VERBOSE)
+        .asString().get();
+
+        Ion.with(getContext()).load("https://raw.github.com/koush/AndroidAsync/master/AndroidAsyncTest/testdata/test.json")
+        .setLogging("MyLogs", Log.VERBOSE)
+        .asString().get();
+
+        assertEquals(data, data2);
+    }
+
     public void testIssue126() throws Exception {
         Bitmap bitmap = Ion.with(getContext())
         .load("http://bdc.tsingyuan.cn/api/img?w=advanced")
@@ -259,4 +297,32 @@ public void testAAIssue225() throws Exception {
 
         System.out.println(ret);
     }
+
+    public void testIon428() throws Exception {
+        Ion.with(getContext())
+        .load("https://cdn2.vox-cdn.com/thumbor/KxtZNw37jKNfxdA0hX5edHvbTBE=/0x0:2039x1359/800x536/cdn0.vox-cdn.com/uploads/chorus_image/image/44254028/lg-g-watch.0.0.jpg")
+        .asString()
+        .get();
+    }
+
+    public void testIon450() throws Exception {
+        Ion.getDefault(getContext())
+        .configure().setLogging("Test", Log.VERBOSE);
+
+        Ion.with(getContext())
+        .load("https://api.instagram.com/v1/users/self/feed")
+        .asString()
+        .get();
+
+        Ion.with(getContext())
+        .load("https://api.instagram.com/v1/users/self/feed")
+        .asString()
+        .get();
+
+        Ion.with(getContext())
+        .load("https://api.instagram.com/v1/users/self/feed")
+        .asString()
+        .get();
+
+    }
 }
diff --git a/ion/test/src/com/koushikdutta/ion/test/ProgressTests.java b/ion/test/src/com/koushikdutta/ion/test/ProgressTests.java
index e0145b63..58098794 100644
--- a/ion/test/src/com/koushikdutta/ion/test/ProgressTests.java
+++ b/ion/test/src/com/koushikdutta/ion/test/ProgressTests.java
@@ -1,6 +1,7 @@
 package com.koushikdutta.ion.test;
 
 import android.test.AndroidTestCase;
+import android.util.Log;
 
 import com.koushikdutta.async.AsyncServer;
 import com.koushikdutta.async.ByteBufferList;
@@ -32,6 +33,7 @@ public void testProgress() throws Exception {
         .load("https://raw.githubusercontent.com/koush/AndroidAsync/master/AndroidAsync/test/assets/6691924d7d24237d3b3679310157d640")
         .setHandler(null)
         .setTimeout(600000)
+        .setLogging("testProgress", Log.VERBOSE)
         .progress(new ProgressCallback() {
             @Override
             public void onProgress(long downloaded, long total) {
