diff --git a/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java b/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java
index e8f914b6e..8373a1efa 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java
+++ b/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java
@@ -51,6 +51,7 @@ public HttpUrlFetcher(GlideUrl glideUrl, int timeout) {
     this.connectionFactory = connectionFactory;
   }
 
+
   @Override
   public void loadData(@NonNull Priority priority,
       @NonNull DataCallback<? super InputStream> callback) {
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/DecodeHelper.java b/library/src/main/java/com/bumptech/glide/load/engine/DecodeHelper.java
index 6a4283f1c..9552c7596 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/DecodeHelper.java
+++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeHelper.java
@@ -207,6 +207,7 @@ boolean isSourceKey(Key key) {
       for (int i = 0, size = modelLoaders.size(); i < size; i++) {
         ModelLoader<Object, ?> modelLoader = modelLoaders.get(i);
         LoadData<?> current =
+            //HttpGlideUrlLoader 的接口实现方法
             modelLoader.buildLoadData(model, width, height, options);
         if (current != null) {
           loadData.add(current);
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java
index 0f05483e0..f98f5679b 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java
+++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java
@@ -370,6 +370,7 @@ public void reschedule() {
     callback.reschedule(this);
   }
 
+  //回调接口 由SourceGenerator调用
   @Override
   public void onDataFetcherReady(Key sourceKey, Object data, DataFetcher<?> fetcher,
       DataSource dataSource, Key attemptedKey) {
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/SourceGenerator.java b/library/src/main/java/com/bumptech/glide/load/engine/SourceGenerator.java
index 5a57b971b..4705cc9d5 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/SourceGenerator.java
+++ b/library/src/main/java/com/bumptech/glide/load/engine/SourceGenerator.java
@@ -59,6 +59,7 @@ public boolean startNext() {
           && (helper.getDiskCacheStrategy().isDataCacheable(loadData.fetcher.getDataSource())
           || helper.hasLoadPath(loadData.fetcher.getDataClass()))) {
         started = true;
+        //调用的是HttpUrlFetcher中的loadData
         loadData.fetcher.loadData(helper.getPriority(), this);
       }
     }
@@ -100,6 +101,7 @@ public void cancel() {
     }
   }
 
+  //data为图片资源 由HttpUrlFetcher 的loadDataWithRedirects重定向方法请求成功后回调
   @Override
   public void onDataReady(Object data) {
     DiskCacheStrategy diskCacheStrategy = helper.getDiskCacheStrategy();
diff --git a/library/src/main/java/com/bumptech/glide/request/SingleRequest.java b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java
index 03d3b34cc..f58968a67 100644
--- a/library/src/main/java/com/bumptech/glide/request/SingleRequest.java
+++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java
@@ -579,6 +579,7 @@ private synchronized void onResourceReady(Resource<R> resource, R result, DataSo
       if (!anyListenerHandledUpdatingTarget) {
         Transition<? super R> animation =
             animationFactory.build(dataSource, isFirstResource);
+        //最终核心
         target.onResourceReady(result, animation);
       }
     } finally {
