diff --git a/library/src/main/java/com/bumptech/glide/RequestBuilder.java b/library/src/main/java/com/bumptech/glide/RequestBuilder.java
index 76a4784d5..d15224994 100644
--- a/library/src/main/java/com/bumptech/glide/RequestBuilder.java
+++ b/library/src/main/java/com/bumptech/glide/RequestBuilder.java
@@ -593,10 +593,11 @@ protected RequestOptions getMutableOptions() {
     Request request = buildRequest(target, targetListener, options);
     // 获取原先target的请求
     Request previous = target.getRequest();
-    // 如果请求相同而且当前设置可以使用缓存
-    // 则请求回收
-    if (request.isEquivalentTo(previous)
-        && !isSkipMemoryCacheWithCompletePreviousRequest(options, previous)) {
+    // 判断新请求和原来缓存的请求是否一样
+    if (request.isEquivalentTo(previous) && !isSkipMemoryCacheWithCompletePreviousRequest(options, previous)) {
+
+      // 如果一样，就释放新请求
+      // 并且启动原来的请求
       request.recycle();
       // If the request is completed, beginning again will ensure the result is re-delivered,
       // triggering RequestListeners and Targets. If the request is failed, beginning again will
@@ -612,9 +613,11 @@ protected RequestOptions getMutableOptions() {
       return target;
     }
 
+    // 如果不一样，清空原来缓存的target
     requestManager.clear(target);
+    // 并把新的请求用view的tag缓存起来
     target.setRequest(request);
-    // 请求追踪
+    // 启动新请求
     requestManager.track(target, request);
 
     return target;
@@ -643,16 +646,25 @@ private boolean isSkipMemoryCacheWithCompletePreviousRequest(
    */
   @NonNull
   public ViewTarget<ImageView, TranscodeType> into(@NonNull ImageView view) {
+    // 调用方法必须在主线程
     Util.assertMainThread();
+    // 判空
     Preconditions.checkNotNull(view);
 
+    /**
+     * Glide.with(this).load(new String())
+     * -->load
+     * -->{@link RequestManager#as(Class)}
+     * -->{@link RequestBuilder#RequestBuilder(Glide, RequestManager, Class, Context)}
+     * -->初始化{@link requestOptions} 值应该都是默认值
+     */
     RequestOptions requestOptions = this.requestOptions;
     if (!requestOptions.isTransformationSet()
         && requestOptions.isTransformationAllowed()
         && view.getScaleType() != null) {
       // Clone in this method so that if we use this RequestBuilder to load into a View and then
       // into a different target, we don't retain the transformation applied based on the previous
-      // View's scale type.
+      // View's scale type. 缩放类型
       switch (view.getScaleType()) {
         case CENTER_CROP:
           requestOptions = requestOptions.clone().optionalCenterCrop();
@@ -675,10 +687,9 @@ private boolean isSkipMemoryCacheWithCompletePreviousRequest(
       }
     }
 
-    return into(
-        glideContext.buildImageViewTarget(view, transcodeClass),
-        /*targetListener=*/ null,
-        requestOptions);
+    // transcodeClass : Drawable
+    // glideContext.buildImageViewTarget(view, transcodeClass) -- > DrawableImageViewTarget.class
+    return into(glideContext.buildImageViewTarget(view, transcodeClass), null, requestOptions);
   }
 
   /**
diff --git a/library/src/main/java/com/bumptech/glide/RequestManager.java b/library/src/main/java/com/bumptech/glide/RequestManager.java
index f2093dc5d..4738b6df8 100644
--- a/library/src/main/java/com/bumptech/glide/RequestManager.java
+++ b/library/src/main/java/com/bumptech/glide/RequestManager.java
@@ -410,6 +410,7 @@ public void onDestroy() {
   @CheckResult
   @Override
   public RequestBuilder<Drawable> load(@Nullable String string) {
+    // asDrawable()中初始化了RequestBuilder，并给requestOptions赋值
     return asDrawable().load(string);
   }
 
diff --git a/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java b/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java
index 8465e2bab..c63b77046 100644
--- a/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java
+++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java
@@ -329,10 +329,14 @@ public RequestManager get(@NonNull android.app.Fragment fragment) {
 
   RequestManagerFragment getRequestManagerFragment(
       @NonNull final android.app.FragmentManager fm, @Nullable android.app.Fragment parentHint) {
+    // 由于这个Fragment是个无UI的Fragment，可以通过findFragmentByTag(FRAGMENT_TAG)去查找这个RequestManagerFragment
+    // 但如果第一次进来，current就是null
+    // 无UI查找Fragment参考文章 http://blog.csdn.net/llp1992/article/details/41828237
     RequestManagerFragment current = (RequestManagerFragment) fm.findFragmentByTag(FRAGMENT_TAG);
     if (current == null) {
       current = pendingRequestManagerFragments.get(fm);
       if (current == null) {
+        // 初始化RequestManagerFragment并且绑定FRAGMENT_TAG放入FragmentManager
         current = new RequestManagerFragment();
         current.setParentFragmentHint(parentHint);
         pendingRequestManagerFragments.put(fm, current);
@@ -347,6 +351,9 @@ RequestManagerFragment getRequestManagerFragment(
   private RequestManager fragmentGet(@NonNull Context context,
       @NonNull android.app.FragmentManager fm,
       @Nullable android.app.Fragment parentHint) {
+    // 获取到一个无UI的Fragment，用来绑定Activity从而实现生命周期同步
+    // 因为glide无法直接获取activity的生命周期，通过activity的FragmentManager中加入一个隐藏的fragment，
+    // 因为fragment与传入的activity生命周期一致，所以只要监听这个RequestManagerFragment就能实现生命周期管理
     RequestManagerFragment current = getRequestManagerFragment(fm, parentHint);
     RequestManager requestManager = current.getRequestManager();
     if (requestManager == null) {
diff --git a/samples/contacturi/src/main/java/com/bumptech/glide/samples/contacturi/SourceCodeInterpreted.java b/samples/contacturi/src/main/java/com/bumptech/glide/samples/contacturi/SourceCodeInterpreted.java
index f8ffffdfe..06174b2e4 100644
--- a/samples/contacturi/src/main/java/com/bumptech/glide/samples/contacturi/SourceCodeInterpreted.java
+++ b/samples/contacturi/src/main/java/com/bumptech/glide/samples/contacturi/SourceCodeInterpreted.java
@@ -17,8 +17,17 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
     super.onCreate(savedInstanceState);
 
     // 常用调用方法
-    Glide.with(this)
+    Glide
+        // 绑定生命周期
+        .with(this)
+
+        /**
+         * 把new String()赋值给RequestBuilder的Object model参数,并设置isModelSet为true
+         * {@link com.bumptech.glide.RequestBuilder#loadGeneric(Object)}
+         */
         .load(new String())
+
+
         .into(new ImageView(this));
   }
 }
