diff --git a/samples/svg/src/main/java/com/bumptech/glide/samples/svg/MainActivity.java b/samples/svg/src/main/java/com/bumptech/glide/samples/svg/MainActivity.java
index 438bf8a31..75bb64926 100644
--- a/samples/svg/src/main/java/com/bumptech/glide/samples/svg/MainActivity.java
+++ b/samples/svg/src/main/java/com/bumptech/glide/samples/svg/MainActivity.java
@@ -1,7 +1,5 @@
 package com.bumptech.glide.samples.svg;
 
-import static com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions.withCrossFade;
-
 import android.app.Activity;
 import android.content.ContentResolver;
 import android.content.Context;
@@ -20,10 +18,11 @@
 import com.bumptech.glide.util.Preconditions;
 
 import java.io.File;
-import java.io.IOException;
 
 import pl.droidsonroids.gif.GifDrawable;
 
+import static com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions.withCrossFade;
+
 /**
  * Displays an SVG image loaded from an android raw resource.
  */
diff --git a/samples/svg/src/main/java/com/bumptech/glide/samples/svg/MyGifDrawableResource.java b/samples/svg/src/main/java/com/bumptech/glide/samples/svg/MyGifDrawableResource.java
index da51d0b11..576af983b 100644
--- a/samples/svg/src/main/java/com/bumptech/glide/samples/svg/MyGifDrawableResource.java
+++ b/samples/svg/src/main/java/com/bumptech/glide/samples/svg/MyGifDrawableResource.java
@@ -29,7 +29,7 @@ public MyGifDrawableResource(GifDrawable drawable) {
 
     @Override
     public int getSize() {
-        return (int) drawable.getInputSourceByteCount();
+        return drawable.getFrameByteCount() * drawable.getNumberOfFrames();
     }
 
     @Override
diff --git a/samples/svg/src/main/java/com/bumptech/glide/samples/svg/MyStreamGifDecoder.java b/samples/svg/src/main/java/com/bumptech/glide/samples/svg/MyStreamGifDecoder.java
index ef4862a9e..13d18d85b 100644
--- a/samples/svg/src/main/java/com/bumptech/glide/samples/svg/MyStreamGifDecoder.java
+++ b/samples/svg/src/main/java/com/bumptech/glide/samples/svg/MyStreamGifDecoder.java
@@ -9,19 +9,14 @@
 import com.bumptech.glide.load.ResourceDecoder;
 import com.bumptech.glide.load.engine.Resource;
 import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream;
 import com.bumptech.glide.load.resource.gif.GifOptions;
 
-import java.io.BufferedInputStream;
-import java.io.BufferedOutputStream;
 import java.io.ByteArrayOutputStream;
-import java.io.FileInputStream;
 import java.io.IOException;
 import java.io.InputStream;
-import java.nio.ByteBuffer;
 import java.util.List;
 
-import pl.droidsonroids.gif.GifDrawable; // <------------------- here
+import pl.droidsonroids.gif.GifDrawable;
 
 /**
  * @author Administrator
@@ -46,34 +41,47 @@ public boolean handles(@NonNull InputStream source, @NonNull Options options) th
                 && ImageHeaderParserUtils.getType(parsers, source, byteArrayPool) == ImageHeaderParser.ImageType.GIF;
     }
 
+    /*
     @Override
     public Resource<GifDrawable> decode(@NonNull InputStream source, int width, int height,
                                         @NonNull Options options) throws IOException {
         //test 1
-        InputStream inputStream = MainActivity.getSelf().getResources().openRawResource(R.raw.my_test);
-        GifDrawable gifDrawable1= new GifDrawable(inputStream);
+        //InputStream inputStream = MainActivity.getSelf().getResources().openRawResource(R.raw.my_test);
+        //GifDrawable gifDrawable1= new GifDrawable(inputStream);
 
         //test 3
-        GifDrawable gifDrawable3 = new GifDrawable(MainActivity.getSelf().getResources(), R.raw.my_test);
+        //GifDrawable gifDrawable3 = new GifDrawable(MainActivity.getSelf().getResources(), R.raw.my_test);
+
+        // test4
+        //GifDrawable gifDrawable4 = new GifDrawable(source);
 
         //test 2
         RecyclableBufferedInputStream source2 = (RecyclableBufferedInputStream) source;
         source = new BufferedInputStream(source2);
         GifDrawable gifDrawable2 = new GifDrawable(source);
+
         return new MyGifDrawableResource(gifDrawable2);
     }
+    //*/
 
 
-    /*@Override
+    @Override
     public Resource<GifDrawable> decode(@NonNull InputStream source, int width, int height,
                                         @NonNull Options options) throws IOException {
         byte[] data = inputStreamToBytes(source);
         if (data == null) {
             return null;
         }
+
+        /*
+        // can not use byteBuffer, works not well
         ByteBuffer byteBuffer = ByteBuffer.wrap(data);
-        GifDrawable gifDrawable3= new GifDrawable(byteBuffer);
-        return new MyGifDrawableResource(gifDrawable3);
+        GifDrawable gifDrawable = new GifDrawable(byteBuffer);
+        */
+
+        // byte[] works well, but i don not know why
+        GifDrawable gifDrawable = new GifDrawable(data);
+        return new MyGifDrawableResource(gifDrawable);
     }
 
     private static byte[] inputStreamToBytes(InputStream is) {
@@ -93,5 +101,5 @@ public boolean handles(@NonNull InputStream source, @NonNull Options options) th
             return null;
         }
         return buffer.toByteArray();
-    }*/
+    }
 }
\ No newline at end of file
