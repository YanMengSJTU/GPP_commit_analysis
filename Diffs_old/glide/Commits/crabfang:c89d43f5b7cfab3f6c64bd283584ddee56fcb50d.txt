diff --git a/integration/okhttp/src/main/java/com/bumptech/glide4/integration/okhttp/OkHttpGlideModule.java b/integration/okhttp/src/main/java/com/bumptech/glide4/integration/okhttp/OkHttpGlideModule.java
index 57413b834..e239c6601 100644
--- a/integration/okhttp/src/main/java/com/bumptech/glide4/integration/okhttp/OkHttpGlideModule.java
+++ b/integration/okhttp/src/main/java/com/bumptech/glide4/integration/okhttp/OkHttpGlideModule.java
@@ -7,23 +7,23 @@
 import com.bumptech.glide4.Registry;
 import com.bumptech.glide4.load.model.GlideUrl;
 import com.bumptech.glide4.load.model.ModelLoader;
-import com.bumptech.glide4.module.GlideModule;
+import com.bumptech.glide4.module.Glide4Module;
 
 import java.io.InputStream;
 
 /**
- * A {@link GlideModule} implementation to replace Glide's default
+ * A {@link Glide4Module} implementation to replace Glide's default
  * {@link java.net.HttpURLConnection} based {@link ModelLoader}
  * with an OkHttp based {@link ModelLoader}.
  *
  * <p> If you're using gradle, you can include this module simply by depending on the aar, the
  * module will be merged in by manifest merger. For other build systems or for more more
- * information, see {@link GlideModule}. </p>
+ * information, see {@link Glide4Module}. </p>
  *
  * @deprecated replaced with com.bumptech.glide4.integration.okhttp3.OkHttpGlideModule.
  */
 @Deprecated
-public class OkHttpGlideModule implements GlideModule {
+public class OkHttpGlideModule implements Glide4Module {
   @Override
   public void applyOptions(@NonNull Context context, @NonNull GlideBuilder builder) {
     // Do nothing.
diff --git a/integration/okhttp3/src/main/AndroidManifest.xml b/integration/okhttp3/src/main/AndroidManifest.xml
index f9c648e4f..321200d8f 100644
--- a/integration/okhttp3/src/main/AndroidManifest.xml
+++ b/integration/okhttp3/src/main/AndroidManifest.xml
@@ -1,9 +1,9 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          package="com.bumptech.glide4.integration.okhttp">
+          package="com.bumptech.glide4.integration.okhttp3">
 
     <application>
         <meta-data
             android:name="com.bumptech.glide4.integration.okhttp3.OkHttpGlideModule"
-            android:value="GlideModule"/>
+            android:value="Glide4Module"/>
     </application>
 </manifest>
diff --git a/integration/okhttp3/src/main/java/com/bumptech/glide4/integration/okhttp3/OkHttpGlideModule.java b/integration/okhttp3/src/main/java/com/bumptech/glide4/integration/okhttp3/OkHttpGlideModule.java
index 3d85a8362..4ddb8bf84 100644
--- a/integration/okhttp3/src/main/java/com/bumptech/glide4/integration/okhttp3/OkHttpGlideModule.java
+++ b/integration/okhttp3/src/main/java/com/bumptech/glide4/integration/okhttp3/OkHttpGlideModule.java
@@ -7,24 +7,24 @@
 import com.bumptech.glide4.Registry;
 import com.bumptech.glide4.load.model.GlideUrl;
 import com.bumptech.glide4.load.model.ModelLoader;
-import com.bumptech.glide4.module.GlideModule;
+import com.bumptech.glide4.module.Glide4Module;
 
 import java.io.InputStream;
 
 /**
- * A {@link GlideModule} implementation to replace Glide's default
+ * A {@link Glide4Module} implementation to replace Glide's default
  * {@link java.net.HttpURLConnection} based {@link ModelLoader}
  * with an OkHttp based {@link ModelLoader}.
  *
  * <p> If you're using gradle, you can include this module simply by depending on the aar, the
  * module will be merged in by manifest merger. For other build systems or for more more
- * information, see {@link GlideModule}. </p>
+ * information, see {@link Glide4Module}. </p>
  *
  * @deprecated Replaced by {@link OkHttpLibraryGlideModule} for Applications that use Glide's
  * annotations.
  */
 @Deprecated
-public class OkHttpGlideModule implements GlideModule {
+public class OkHttpGlideModule implements Glide4Module {
   @Override
   public void applyOptions(@NonNull Context context, @NonNull GlideBuilder builder) {
     // Do nothing.
diff --git a/integration/volley/src/main/AndroidManifest.xml b/integration/volley/src/main/AndroidManifest.xml
index cebd3078a..875234ff2 100644
--- a/integration/volley/src/main/AndroidManifest.xml
+++ b/integration/volley/src/main/AndroidManifest.xml
@@ -5,6 +5,6 @@
     <application>
         <meta-data
             android:name="com.bumptech.glide4.integration.volley.VolleyGlideModule"
-            android:value="GlideModule"/>
+            android:value="Glide4Module"/>
     </application>
 </manifest>
diff --git a/integration/volley/src/main/java/com/bumptech/glide4/integration/volley/VolleyGlideModule.java b/integration/volley/src/main/java/com/bumptech/glide4/integration/volley/VolleyGlideModule.java
index 50b54bae4..bd0fa8ae6 100644
--- a/integration/volley/src/main/java/com/bumptech/glide4/integration/volley/VolleyGlideModule.java
+++ b/integration/volley/src/main/java/com/bumptech/glide4/integration/volley/VolleyGlideModule.java
@@ -7,24 +7,24 @@
 import com.bumptech.glide4.Registry;
 import com.bumptech.glide4.load.model.GlideUrl;
 import com.bumptech.glide4.load.model.ModelLoader;
-import com.bumptech.glide4.module.GlideModule;
+import com.bumptech.glide4.module.Glide4Module;
 
 import java.io.InputStream;
 
 /**
- * A {@link GlideModule} implementation to replace Glide's default
+ * A {@link Glide4Module} implementation to replace Glide's default
  * {@link java.net.HttpURLConnection} based {@link ModelLoader} with a
  * Volley based {@link ModelLoader}.
  *
  * <p> If you're using gradle, you can include this module simply by depending on the aar, the
  * module will be merged in by manifest merger. For other build systems or for more more
- * information, see {@link GlideModule}.
+ * information, see {@link Glide4Module}.
  *
  * @deprecated Replaced with {@link VolleyLibraryGlideModule}.
  */
 @Deprecated
 @SuppressWarnings("deprecation")
-public class VolleyGlideModule implements GlideModule {
+public class VolleyGlideModule implements Glide4Module {
   @Override
   public void applyOptions(@NonNull Context context, @NonNull GlideBuilder builder) {
     // Do nothing.
diff --git a/integration/volley/src/main/java/com/bumptech/glide4/integration/volley/VolleyLibraryGlideModule.java b/integration/volley/src/main/java/com/bumptech/glide4/integration/volley/VolleyLibraryGlideModule.java
index ae81e58a7..2a73b1e44 100644
--- a/integration/volley/src/main/java/com/bumptech/glide4/integration/volley/VolleyLibraryGlideModule.java
+++ b/integration/volley/src/main/java/com/bumptech/glide4/integration/volley/VolleyLibraryGlideModule.java
@@ -7,13 +7,14 @@
 import com.bumptech.glide4.annotation.GlideModule;
 import com.bumptech.glide4.load.model.GlideUrl;
 import com.bumptech.glide4.module.AppGlideModule;
+import com.bumptech.glide4.module.Glide4Module;
 import com.bumptech.glide4.module.LibraryGlideModule;
 import com.bumptech.glide4.load.model.ModelLoader;
 
 import java.io.InputStream;
 
 /**
- * A {@link com.bumptech.glide4.module.GlideModule} implementation to replace Glide's default
+ * A {@link Glide4Module} implementation to replace Glide's default
  * {@link java.net.HttpURLConnection} based {@link ModelLoader} with a
  * Volley based {@link ModelLoader}.
  *
diff --git a/library/proguard-rules.txt b/library/proguard-rules.txt
index 39e209882..29d688f3f 100644
--- a/library/proguard-rules.txt
+++ b/library/proguard-rules.txt
@@ -6,4 +6,4 @@
 }
 
 # Uncomment for DexGuard only
-#-keepresourcexmlelements manifest/application/meta-data@value=GlideModule
\ No newline at end of file
+#-keepresourcexmlelements manifest/application/meta-data@value=Glide4Module
\ No newline at end of file
diff --git a/library/src/main/java/com/bumptech/glide4/Glide.java b/library/src/main/java/com/bumptech/glide4/Glide.java
index d3b7351d6..de9cc6ead 100644
--- a/library/src/main/java/com/bumptech/glide4/Glide.java
+++ b/library/src/main/java/com/bumptech/glide4/Glide.java
@@ -77,6 +77,7 @@
 import com.bumptech.glide4.load.resource.transcode.GifDrawableBytesTranscoder;
 import com.bumptech.glide4.manager.ConnectivityMonitorFactory;
 import com.bumptech.glide4.manager.RequestManagerRetriever;
+import com.bumptech.glide4.module.Glide4Module;
 import com.bumptech.glide4.module.ManifestParser;
 import com.bumptech.glide4.request.RequestListener;
 import com.bumptech.glide4.request.RequestOptions;
@@ -85,7 +86,6 @@
 import com.bumptech.glide4.util.Preconditions;
 import com.bumptech.glide4.util.Util;
 import com.bumptech.glide4.load.Transformation;
-import com.bumptech.glide4.module.GlideModule;
 
 import java.io.File;
 import java.io.InputStream;
@@ -231,7 +231,7 @@ private static void initializeGlide(@NonNull Context context) {
   private static void initializeGlide(@NonNull Context context, @NonNull GlideBuilder builder) {
     Context applicationContext = context.getApplicationContext();
     GeneratedAppGlideModule annotationGeneratedModule = getAnnotationGeneratedGlideModules();
-    List<GlideModule> manifestModules = Collections.emptyList();
+    List<Glide4Module> manifestModules = Collections.emptyList();
     if (annotationGeneratedModule == null || annotationGeneratedModule.isManifestParsingEnabled()) {
       manifestModules = new ManifestParser(applicationContext).parse();
     }
@@ -240,22 +240,22 @@ private static void initializeGlide(@NonNull Context context, @NonNull GlideBuil
         && !annotationGeneratedModule.getExcludedModuleClasses().isEmpty()) {
       Set<Class<?>> excludedModuleClasses =
           annotationGeneratedModule.getExcludedModuleClasses();
-      Iterator<GlideModule> iterator = manifestModules.iterator();
+      Iterator<Glide4Module> iterator = manifestModules.iterator();
       while (iterator.hasNext()) {
-        GlideModule current = iterator.next();
+        Glide4Module current = iterator.next();
         if (!excludedModuleClasses.contains(current.getClass())) {
           continue;
         }
         if (Log.isLoggable(TAG, Log.DEBUG)) {
-          Log.d(TAG, "AppGlideModule excludes manifest GlideModule: " + current);
+          Log.d(TAG, "AppGlideModule excludes manifest Glide4Module: " + current);
         }
         iterator.remove();
       }
     }
 
     if (Log.isLoggable(TAG, Log.DEBUG)) {
-      for (GlideModule glideModule : manifestModules) {
-        Log.d(TAG, "Discovered GlideModule from manifest: " + glideModule.getClass());
+      for (Glide4Module glideModule : manifestModules) {
+        Log.d(TAG, "Discovered Glide4Module from manifest: " + glideModule.getClass());
       }
     }
 
@@ -263,14 +263,14 @@ private static void initializeGlide(@NonNull Context context, @NonNull GlideBuil
         annotationGeneratedModule != null
             ? annotationGeneratedModule.getRequestManagerFactory() : null;
     builder.setRequestManagerFactory(factory);
-    for (GlideModule module : manifestModules) {
+    for (Glide4Module module : manifestModules) {
       module.applyOptions(applicationContext, builder);
     }
     if (annotationGeneratedModule != null) {
       annotationGeneratedModule.applyOptions(applicationContext, builder);
     }
     Glide glide = builder.build(applicationContext);
-    for (GlideModule module : manifestModules) {
+    for (Glide4Module module : manifestModules) {
       module.registerComponents(applicationContext, glide, glide.registry);
     }
     if (annotationGeneratedModule != null) {
@@ -293,7 +293,7 @@ private static GeneratedAppGlideModule getAnnotationGeneratedGlideModules() {
       if (Log.isLoggable(TAG, Log.WARN)) {
         Log.w(TAG, "Failed to find GeneratedAppGlideModule. You should include an"
             + " annotationProcessor compile dependency on com.github.bumptech.glide:compiler"
-            + " in your application and a @GlideModule annotated AppGlideModule implementation or"
+            + " in your application and a @Glide4Module annotated AppGlideModule implementation or"
             + " LibraryGlideModules will be silently ignored");
       }
     // These exceptions can't be squashed across all versions of Android.
diff --git a/library/src/main/java/com/bumptech/glide4/manager/RequestManagerRetriever.java b/library/src/main/java/com/bumptech/glide4/manager/RequestManagerRetriever.java
index c6a49e4f6..d99be3f3e 100644
--- a/library/src/main/java/com/bumptech/glide4/manager/RequestManagerRetriever.java
+++ b/library/src/main/java/com/bumptech/glide4/manager/RequestManagerRetriever.java
@@ -36,7 +36,7 @@
  */
 public class RequestManagerRetriever implements Handler.Callback {
   @VisibleForTesting
-  static final String FRAGMENT_TAG = "com.bumptech.glide.manager";
+  static final String FRAGMENT_TAG = "com.bumptech.glide4.manager";
   private static final String TAG = "RMRetriever";
 
   private static final int ID_REMOVE_FRAGMENT_MANAGER = 1;
diff --git a/library/src/main/java/com/bumptech/glide4/module/AppGlideModule.java b/library/src/main/java/com/bumptech/glide4/module/AppGlideModule.java
index 85e7f4526..a93fd741c 100644
--- a/library/src/main/java/com/bumptech/glide4/module/AppGlideModule.java
+++ b/library/src/main/java/com/bumptech/glide4/module/AppGlideModule.java
@@ -16,7 +16,7 @@
  *
  * <p>Classes that extend {@link AppGlideModule} can optionally be annotated with
  * {@link Excludes} to optionally exclude one or more
- * {@link LibraryGlideModule} and/or {@link GlideModule} classes.
+ * {@link LibraryGlideModule} and/or {@link Glide4Module} classes.
  *
  * <p>Once an application has migrated itself and all libraries it depends on to use Glide's
  * annotation processor, {@link AppGlideModule} implementations should override
@@ -26,7 +26,7 @@
 @SuppressWarnings("deprecation")
 public abstract class AppGlideModule extends LibraryGlideModule implements AppliesOptions {
   /**
-   * Returns {@code true} if Glide should check the AndroidManifest for {@link GlideModule}s.
+   * Returns {@code true} if Glide should check the AndroidManifest for {@link Glide4Module}s.
    *
    * <p>Implementations should return {@code false} after they and their dependencies have migrated
    * to Glide's annotation processor.
diff --git a/library/src/main/java/com/bumptech/glide4/module/AppliesOptions.java b/library/src/main/java/com/bumptech/glide4/module/AppliesOptions.java
index cd71b8028..f285bf1c9 100644
--- a/library/src/main/java/com/bumptech/glide4/module/AppliesOptions.java
+++ b/library/src/main/java/com/bumptech/glide4/module/AppliesOptions.java
@@ -5,7 +5,7 @@
 import com.bumptech.glide4.GlideBuilder;
 
 /**
- * An internal interface, to be removed when {@link GlideModule}s are removed.
+ * An internal interface, to be removed when {@link Glide4Module}s are removed.
  */
 @Deprecated
 interface AppliesOptions {
diff --git a/library/src/main/java/com/bumptech/glide4/module/GlideModule.java b/library/src/main/java/com/bumptech/glide4/module/Glide4Module.java
similarity index 86%
rename from library/src/main/java/com/bumptech/glide4/module/GlideModule.java
rename to library/src/main/java/com/bumptech/glide4/module/Glide4Module.java
index 486ed03af..76423fef3 100644
--- a/library/src/main/java/com/bumptech/glide4/module/GlideModule.java
+++ b/library/src/main/java/com/bumptech/glide4/module/Glide4Module.java
@@ -10,13 +10,13 @@
  * {@link GlideBuilder} and registering
  * {@link ModelLoader ModelLoaders}.
  *
- * <p> To use this interface: <ol> <li> Implement the GlideModule interface in a class with public
+ * <p> To use this interface: <ol> <li> Implement the Glide4Module interface in a class with public
  * visibility, calling
  * {@link Registry#prepend(Class, Class, ResourceDecoder)} for each
  * {@link ModelLoader} you'd like to register:
  * <pre>
  *                  <code>
- *                      public class FlickrGlideModule implements GlideModule {
+ *                      public class FlickrGlideModule implements Glide4Module {
  *                          {@literal @}Override
  *                          public void applyOptions(Context context, GlideBuilder builder) {
  *                              builder.setDecodeFormat(DecodeFormat.ALWAYS_ARGB_8888);
@@ -35,13 +35,13 @@
  *                      -keepnames class * com.bumptech.glide.samples.flickr.FlickrGlideModule
  *                  }
  *              </pre>
- * </li> <li> Add a metadata tag to your AndroidManifest.xml with your GlideModule implementation's
- * fully qualified classname as the key, and {@code GlideModule} as the value:
+ * </li> <li> Add a metadata tag to your AndroidManifest.xml with your Glide4Module implementation's
+ * fully qualified classname as the key, and {@code Glide4Module} as the value:
  * <pre>
  *                 {@code
  *                      <meta-data
  *                          android:name="com.bumptech.glide.samples.flickr.FlickrGlideModule"
- *                          android:value="GlideModule" />
+ *                          android:value="Glide4Module" />
  *                 }
  *             </pre>
  * </li> </ol> </p>
@@ -58,4 +58,4 @@
  * {@link AppGlideModule}.
  */
 @Deprecated
-public interface GlideModule extends RegistersComponents, AppliesOptions { }
+public interface Glide4Module extends RegistersComponents, AppliesOptions { }
diff --git a/library/src/main/java/com/bumptech/glide4/module/ManifestParser.java b/library/src/main/java/com/bumptech/glide4/module/ManifestParser.java
index 537f86368..1c7070975 100644
--- a/library/src/main/java/com/bumptech/glide4/module/ManifestParser.java
+++ b/library/src/main/java/com/bumptech/glide4/module/ManifestParser.java
@@ -9,14 +9,14 @@
 import java.util.List;
 
 /**
- * Parses {@link GlideModule} references out of the AndroidManifest file.
+ * Parses {@link Glide4Module} references out of the AndroidManifest file.
  */
 // Used only in javadoc.
 @SuppressWarnings("deprecation")
 @Deprecated
 public final class ManifestParser {
   private static final String TAG = "ManifestParser";
-  private static final String GLIDE_MODULE_VALUE = "GlideModule";
+  private static final String GLIDE_MODULE_VALUE = "Glide4Module";
 
   private final Context context;
 
@@ -25,11 +25,11 @@ public ManifestParser(Context context) {
   }
 
   @SuppressWarnings("deprecation")
-  public List<GlideModule> parse() {
+  public List<Glide4Module> parse() {
     if (Log.isLoggable(TAG, Log.DEBUG)) {
       Log.d(TAG, "Loading Glide modules");
     }
-    List<GlideModule> modules = new ArrayList<>();
+    List<Glide4Module> modules = new ArrayList<>();
     try {
       ApplicationInfo appInfo = context.getPackageManager()
           .getApplicationInfo(context.getPackageName(), PackageManager.GET_META_DATA);
@@ -61,12 +61,12 @@ public ManifestParser(Context context) {
   }
 
   @SuppressWarnings("deprecation")
-  private static GlideModule parseModule(String className) {
+  private static Glide4Module parseModule(String className) {
     Class<?> clazz;
     try {
       clazz = Class.forName(className);
     } catch (ClassNotFoundException e) {
-      throw new IllegalArgumentException("Unable to find GlideModule implementation", e);
+      throw new IllegalArgumentException("Unable to find Glide4Module implementation", e);
     }
 
     Object module = null;
@@ -83,13 +83,13 @@ private static GlideModule parseModule(String className) {
       throwInstantiateGlideModuleException(clazz, e);
     }
 
-    if (!(module instanceof GlideModule)) {
-      throw new RuntimeException("Expected instanceof GlideModule, but found: " + module);
+    if (!(module instanceof Glide4Module)) {
+      throw new RuntimeException("Expected instanceof Glide4Module, but found: " + module);
     }
-    return (GlideModule) module;
+    return (Glide4Module) module;
   }
 
   private static void throwInstantiateGlideModuleException(Class<?> clazz, Exception e) {
-    throw new RuntimeException("Unable to instantiate GlideModule implementation for " + clazz, e);
+    throw new RuntimeException("Unable to instantiate Glide4Module implementation for " + clazz, e);
   }
 }
diff --git a/library/src/main/java/com/bumptech/glide4/module/RegistersComponents.java b/library/src/main/java/com/bumptech/glide4/module/RegistersComponents.java
index 35b9c5930..721b0cf0e 100644
--- a/library/src/main/java/com/bumptech/glide4/module/RegistersComponents.java
+++ b/library/src/main/java/com/bumptech/glide4/module/RegistersComponents.java
@@ -6,7 +6,7 @@
 import com.bumptech.glide4.Registry;
 
 /**
- * An internal interface, to be removed when {@link GlideModule}s are removed.
+ * An internal interface, to be removed when {@link Glide4Module}s are removed.
  */
 // Used only in javadocs.
 @SuppressWarnings("deprecation")
diff --git a/library/test/src/test/java/com/bumptech/glide/module/ManifestParserTest.java b/library/test/src/test/java/com/bumptech/glide/module/ManifestParserTest.java
index 55480864e..781041d12 100644
--- a/library/test/src/test/java/com/bumptech/glide/module/ManifestParserTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/module/ManifestParserTest.java
@@ -15,7 +15,7 @@
 import com.bumptech.glide4.Registry;
 import java.util.List;
 
-import com.bumptech.glide4.module.GlideModule;
+import com.bumptech.glide4.module.Glide4Module;
 import com.bumptech.glide4.module.ManifestParser;
 import org.junit.Before;
 import org.junit.Test;
@@ -29,7 +29,7 @@
 @Config(manifest = Config.NONE, sdk = 18)
 @SuppressWarnings("deprecation")
 public class ManifestParserTest {
-  private static final String MODULE_VALUE = "GlideModule";
+  private static final String MODULE_VALUE = "Glide4Module";
 
   @Mock private Context context;
   private ManifestParser parser;
@@ -61,7 +61,7 @@ public void testParse_returnsEmptyListIfNoModulesListed() {
   public void testParse_withSingleValidModuleName_returnsListContainingModule() {
     addModuleToManifest(TestModule1.class);
 
-    List<GlideModule> modules = parser.parse();
+    List<Glide4Module> modules = parser.parse();
     assertThat(modules).hasSize(1);
     assertThat(modules.get(0)).isInstanceOf(TestModule1.class);
   }
@@ -71,7 +71,7 @@ public void testParse_withMultipleValidModuleNames_returnsListContainingModules(
     addModuleToManifest(TestModule1.class);
     addModuleToManifest(TestModule2.class);
 
-    List<GlideModule> modules = parser.parse();
+    List<Glide4Module> modules = parser.parse();
     assertThat(modules).hasSize(2);
 
     assertThat(modules).contains(new TestModule1());
@@ -116,7 +116,7 @@ private void addToManifest(String key) {
 
   private static class InvalidClass { }
 
-  public static class TestModule1 implements GlideModule {
+  public static class TestModule1 implements Glide4Module {
     @Override
     public void applyOptions(@NonNull Context context, @NonNull GlideBuilder builder) {
     }
@@ -136,7 +136,7 @@ public int hashCode() {
     }
   }
 
-  public static class TestModule2 implements GlideModule {
+  public static class TestModule2 implements Glide4Module {
 
     @Override
     public void applyOptions(@NonNull Context context, @NonNull GlideBuilder builder) {
diff --git a/output/glide4-annotation-4.8.0.jar b/output/glide4-annotation-4.8.0.jar
index 43edabc30..66b949b0d 100644
Binary files a/output/glide4-annotation-4.8.0.jar and b/output/glide4-annotation-4.8.0.jar differ
diff --git a/output/glide4-compiler-4.8.0.jar b/output/glide4-compiler-4.8.0.jar
index 11ca86e70..51d1cf7be 100644
Binary files a/output/glide4-compiler-4.8.0.jar and b/output/glide4-compiler-4.8.0.jar differ
diff --git a/output/glide4-disklrucache-4.8.0.jar b/output/glide4-disklrucache-4.8.0.jar
index f3309bf22..058d3c317 100644
Binary files a/output/glide4-disklrucache-4.8.0.jar and b/output/glide4-disklrucache-4.8.0.jar differ
diff --git a/output/glide4-lib-4.8.0.aar b/output/glide4-lib-4.8.0.aar
new file mode 100644
index 000000000..8512b6e29
Binary files /dev/null and b/output/glide4-lib-4.8.0.aar differ
diff --git a/output/glide4-okhttp-4.8.0.aar b/output/glide4-okhttp-4.8.0.aar
index 9623846c3..af13d00dc 100644
Binary files a/output/glide4-okhttp-4.8.0.aar and b/output/glide4-okhttp-4.8.0.aar differ
diff --git a/output/glide4-okhttp3-4.8.0.aar b/output/glide4-okhttp3-4.8.0.aar
index 2d06fee1a..b776289a3 100644
Binary files a/output/glide4-okhttp3-4.8.0.aar and b/output/glide4-okhttp3-4.8.0.aar differ
diff --git a/output/glide4-volley-4.8.0.aar b/output/glide4-volley-4.8.0.aar
index 74c847d24..f379f4114 100644
Binary files a/output/glide4-volley-4.8.0.aar and b/output/glide4-volley-4.8.0.aar differ
