diff --git a/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java
index 66463e2fb..955100abf 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java
+++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java
@@ -422,6 +422,7 @@ private void decodeFromRetrievedData() {
     }
     Resource<R> resource = null;
     try {
+      //通过decodeFromData方法把输入流解码并返回给resource,拿到我们想要的资源
       resource = decodeFromData(currentFetcher, currentData, currentDataSource);
     } catch (GlideException e) {
       e.setLoggingDetails(currentAttemptingKey, currentDataSource);
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java b/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java
index b9e2704a7..c25197383 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java
+++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java
@@ -60,6 +60,10 @@ public DecodePath(Class<DataType> dataClass, Class<ResourceType> resourceClass,
       int height, Options options, List<Throwable> exceptions) throws GlideException {
     Resource<ResourceType> result = null;
     //noinspection ForLoopReplaceableByForEach to improve perf
+    /**
+     * 遍历decoders集合，分别的获取到ResourceDecoder解码器
+     * 主要包含两种：BitmapDrawable.class和GifDrawable.class。
+     */
     for (int i = 0, size = decoders.size(); i < size; i++) {
       ResourceDecoder<DataType, ResourceType> decoder = decoders.get(i);
       try {
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java b/library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java
index ac1083b4d..e3654db61 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java
+++ b/library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java
@@ -215,6 +215,10 @@ void handleResultOnMainThread() {
       ResourceCallback cb = cbs.get(i);
       if (!isInIgnoredCallbacks(cb)) {
         engineResource.acquire();
+        /**
+         * Called when a resource is successfully loaded.
+         * 当资源ok的时候回调
+         */
         cb.onResourceReady(engineResource, dataSource);
       }
     }
diff --git a/library/src/main/java/com/bumptech/glide/request/SingleRequest.java b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java
index 6a1b5f72b..5fc083aa6 100644
--- a/library/src/main/java/com/bumptech/glide/request/SingleRequest.java
+++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java
@@ -10,6 +10,7 @@
 import com.bumptech.glide.GlideContext;
 import com.bumptech.glide.Priority;
 import com.bumptech.glide.load.DataSource;
+import com.bumptech.glide.load.Options;
 import com.bumptech.glide.load.engine.Engine;
 import com.bumptech.glide.load.engine.GlideException;
 import com.bumptech.glide.load.engine.Resource;
@@ -545,6 +546,10 @@ public void onResourceReady(Resource<?> resource, DataSource dataSource) {
       return;
     }
 
+    /**
+     * {@link com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder#transcode(Resource, Options)}
+     * 这里的resource就是{@link com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource}
+     */
     Object received = resource.get();
     if (received == null || !transcodeClass.isAssignableFrom(received.getClass())) {
       releaseResource(resource);
