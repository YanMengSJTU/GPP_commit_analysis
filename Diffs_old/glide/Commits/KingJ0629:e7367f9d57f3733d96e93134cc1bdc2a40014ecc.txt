diff --git a/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java b/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java
index 064926698..47f56b769 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java
+++ b/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java
@@ -69,6 +69,9 @@ public void loadData(Priority priority, DataCallback<? super InputStream> callba
     callback.onDataReady(result);
   }
 
+  /**
+   * 在这个方法中去建立网络连接，获取数据
+   */
   private InputStream loadDataWithRedirects(URL url, int redirects, URL lastUrl,
       Map<String, String> headers) throws IOException {
     if (redirects >= MAXIMUM_REDIRECTS) {
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/Engine.java b/library/src/main/java/com/bumptech/glide/load/engine/Engine.java
index 2443745d3..a72261da6 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/Engine.java
+++ b/library/src/main/java/com/bumptech/glide/load/engine/Engine.java
@@ -170,18 +170,20 @@ public Engine(
     // 创建缓存key
     EngineKey key = keyFactory.buildKey(model, signature, width, height, transformations,
         resourceClass, transcodeClass, options);
-    // 从存活资源内读取数据, 内部缓存由value为弱引用对象的map做管理, 做手动的计数管理
-    // 当资源计数为0时, 则回收
+
+    // 一级缓存
+    // active的资源是指那些已经被提供给至少一个请求并且还没有被释放的资源。一旦资源的所有使用者都释放了该资源，资源就会去缓存。
     EngineResource<?> active = loadFromActiveResources(key, isMemoryCacheable);
     if (active != null) {
+      // 如果命中, 则回调加载
       cb.onResourceReady(active, DataSource.MEMORY_CACHE);
       if (Log.isLoggable(TAG, Log.VERBOSE)) {
         logWithTimeAndKey("Loaded resource from active resources", startTime, key);
       }
       return null;
     }
-    // 从内存中获取缓存数据
-    // 当内存缓存中有命中, 则将目标资源加到activeResources中
+
+    // 二级缓存
     EngineResource<?> cached = loadFromCache(key, isMemoryCacheable);
     if (cached != null) {
       // 如果命中, 则回调加载
diff --git a/library/src/main/java/com/bumptech/glide/request/SingleRequest.java b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java
index 8071dca1c..6a1b5f72b 100644
--- a/library/src/main/java/com/bumptech/glide/request/SingleRequest.java
+++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java
@@ -447,6 +447,9 @@ private void setErrorPlaceholder() {
    */
   @Override
   public void onSizeReady(int width, int height) {
+    /**
+     * 如果对象可回收(即当前在对象池中)，则抛出一个异常。
+     */
     stateVerifier.throwIfRecycled();
     if (IS_VERBOSE_LOGGABLE) {
       logV("Got onSizeReady in " + LogTime.getElapsedMillis(startTime));
