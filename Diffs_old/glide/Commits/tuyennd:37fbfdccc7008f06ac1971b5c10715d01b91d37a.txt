diff --git a/library/build.gradle b/library/build.gradle
index 62eb587f8..b6a37158a 100644
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -15,13 +15,12 @@ repositories {
 
 dependencies {
     compile files('libs/disklrucache-2.0.2.jar')
-    compile 'com.android.support:support-v4:13.0.+'
     compile files('libs/volley.jar')
 }
 
 android {
-    compileSdkVersion 17
-    buildToolsVersion = 17
+    compileSdkVersion 19
+    buildToolsVersion = "19.0.0"
 
     sourceSets {
         main {
diff --git a/library/src/com/bumptech/glide/resize/ImageManager.java b/library/src/com/bumptech/glide/resize/ImageManager.java
index e2467c2e8..077998ab1 100644
--- a/library/src/com/bumptech/glide/resize/ImageManager.java
+++ b/library/src/com/bumptech/glide/resize/ImageManager.java
@@ -535,7 +535,13 @@ public void cancel() {
 
         @Override
         public void run() {
-            Bitmap result = getFromDiskCache(key);
+            Bitmap result = null;
+            try {
+                result = getFromDiskCache(key);
+            } catch (Exception e) {
+                handleException(e);
+            }
+
             if (result == null) {
                 try {
                     resizeWithPool();
@@ -547,7 +553,6 @@ public void run() {
             }
         }
 
-
         private Bitmap getFromDiskCache(String key) {
             Bitmap result = null;
             final InputStream is = diskCache.get(key);
@@ -647,7 +652,6 @@ public void write(OutputStream os) {
                 bitmap.compress(format, bitmapCompressQuality, os);
             }
         });
-
     }
 
     private void putInMemoryCache(String key, final Bitmap bitmap) {
diff --git a/samples/flickr/src/com/bumptech/glide/samples/flickr/api/Photo.java b/samples/flickr/src/com/bumptech/glide/samples/flickr/api/Photo.java
index 9bef9eefa..af3ffbfd5 100644
--- a/samples/flickr/src/com/bumptech/glide/samples/flickr/api/Photo.java
+++ b/samples/flickr/src/com/bumptech/glide/samples/flickr/api/Photo.java
@@ -35,4 +35,8 @@ public String getPartialUrl() {
         return partialUrl;
     }
 
+    @Override
+    public String toString() {
+        return getPartialUrl();
+    }
 }
