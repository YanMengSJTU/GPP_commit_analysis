diff --git a/annotation/compiler/proguard.pro b/annotation/compiler/proguard.pro
index d40c8f599..8bb057b88 100644
--- a/annotation/compiler/proguard.pro
+++ b/annotation/compiler/proguard.pro
@@ -6,7 +6,7 @@
 -keep class !com.bumptech.glide.repackaged.**,com.bumptech.glide.**
 
 # Keep the entry point to this library, see META-INF\services\javax.annotation.processing.Processor
--keep class com.bumptech.glide.annotation.compiler.GlideAnnotationProcessor
+-keep class com.bumptech.glide4.annotation.compiler.GlideAnnotationProcessor
 
 
 # "duplicate definition of library class"
diff --git a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/AppModuleGenerator.java b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/AppModuleGenerator.java
similarity index 96%
rename from annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/AppModuleGenerator.java
rename to annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/AppModuleGenerator.java
index 5c5475f08..432c88949 100644
--- a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/AppModuleGenerator.java
+++ b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/AppModuleGenerator.java
@@ -1,8 +1,8 @@
-package com.bumptech.glide.annotation.compiler;
+package com.bumptech.glide4.annotation.compiler;
 
-import static com.bumptech.glide.annotation.compiler.ProcessorUtil.nonNull;
+import static com.bumptech.glide4.annotation.compiler.ProcessorUtil.nonNull;
 
-import com.bumptech.glide.annotation.Excludes;
+import com.bumptech.glide4.annotation.Excludes;
 import com.squareup.javapoet.AnnotationSpec;
 import com.squareup.javapoet.ClassName;
 import com.squareup.javapoet.MethodSpec;
@@ -76,7 +76,7 @@
  * </pre>
  */
 final class AppModuleGenerator {
-  static final String GENERATED_ROOT_MODULE_PACKAGE_NAME = "com.bumptech.glide";
+  static final String GENERATED_ROOT_MODULE_PACKAGE_NAME = "com.bumptech.glide4";
   private static final String GLIDE_LOG_TAG = "Glide";
   private static final String GENERATED_APP_MODULE_IMPL_SIMPLE_NAME =
       "GeneratedAppGlideModuleImpl";
@@ -120,7 +120,7 @@ TypeSpec generate(TypeElement appGlideModule, Set<String> libraryGlideModuleClas
                 .build()
             )
             .addParameter(ParameterSpec.builder(
-                ClassName.get("com.bumptech.glide", "GlideBuilder"), "builder")
+                ClassName.get("com.bumptech.glide4", "GlideBuilder"), "builder")
                 .addAnnotation(nonNull())
                 .build()
             )
@@ -212,12 +212,12 @@ private MethodSpec generateRegisterComponents(
                 .build()
             )
             .addParameter(ParameterSpec.builder(
-                ClassName.get("com.bumptech.glide", "Glide"), "glide")
+                ClassName.get("com.bumptech.glide4", "Glide"), "glide")
                 .addAnnotation(nonNull())
                 .build()
             )
             .addParameter(ParameterSpec.builder(
-                ClassName.get("com.bumptech.glide", "Registry"), "registry")
+                ClassName.get("com.bumptech.glide4", "Registry"), "registry")
                 .addAnnotation(nonNull())
                 .build()
             );
diff --git a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/AppModuleProcessor.java b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/AppModuleProcessor.java
similarity index 98%
rename from annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/AppModuleProcessor.java
rename to annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/AppModuleProcessor.java
index 3469eff24..8913d79b2 100644
--- a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/AppModuleProcessor.java
+++ b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/AppModuleProcessor.java
@@ -1,6 +1,6 @@
-package com.bumptech.glide.annotation.compiler;
+package com.bumptech.glide4.annotation.compiler;
 
-import com.bumptech.glide.annotation.GlideModule;
+import com.bumptech.glide4.annotation.GlideModule;
 import com.squareup.javapoet.TypeSpec;
 import java.util.ArrayList;
 import java.util.Collections;
diff --git a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/ExtensionProcessor.java b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/ExtensionProcessor.java
similarity index 94%
rename from annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/ExtensionProcessor.java
rename to annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/ExtensionProcessor.java
index eed0f1243..f0b01922d 100644
--- a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/ExtensionProcessor.java
+++ b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/ExtensionProcessor.java
@@ -1,6 +1,6 @@
-package com.bumptech.glide.annotation.compiler;
+package com.bumptech.glide4.annotation.compiler;
 
-import com.bumptech.glide.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideExtension;
 import com.squareup.javapoet.TypeSpec;
 import java.util.Collections;
 import java.util.List;
diff --git a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/GlideAnnotationProcessor.java b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/GlideAnnotationProcessor.java
similarity index 91%
rename from annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/GlideAnnotationProcessor.java
rename to annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/GlideAnnotationProcessor.java
index 32a8575d9..6883bdbe4 100644
--- a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/GlideAnnotationProcessor.java
+++ b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/GlideAnnotationProcessor.java
@@ -1,6 +1,8 @@
-package com.bumptech.glide.annotation.compiler;
+package com.bumptech.glide4.annotation.compiler;
 
-import com.bumptech.glide.annotation.GlideType;
+import com.bumptech.glide4.annotation.GlideType;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideModule;
 import com.google.auto.service.AutoService;
 import java.util.HashSet;
 import java.util.Set;
@@ -18,10 +20,10 @@
  *
  * <p>This processor discovers all {@code AppGlideModule} and
  * {@code LibraryGlideModule} implementations that are
- * annotated with {@link com.bumptech.glide.annotation.GlideModule}. Any implementations missing the
+ * annotated with {@link GlideModule}. Any implementations missing the
  * annotation will be ignored.
  *
- * <p>This processor also discovers all {@link com.bumptech.glide.annotation.GlideExtension}
+ * <p>This processor also discovers all {@link GlideExtension}
  * annotated classes.
  *
  * <p>Multiple classes are generated by this processor:
@@ -35,13 +37,13 @@
  *     {@code LibraryGlideModule}s and the
  *     original {@code AppGlideModule} in the correct order when Glide is
  *     initialized.
- *   <li>{@link com.bumptech.glide.annotation.GlideExtension}s -
+ *   <li>{@link GlideExtension}s -
  *   <ul>
  *     <li>A {@code com.bumptech.glide.request.RequestOptions} implementation that contains
  *     static versions of all builder methods in the base class and both static and instance
- *     versions of methods in all {@link com.bumptech.glide.annotation.GlideExtension}s.
+ *     versions of methods in all {@link GlideExtension}s.
  *     <li>If one or more methods in one or more
- *     {@link com.bumptech.glide.annotation.GlideExtension} annotated classes are annotated with
+ *     {@link GlideExtension} annotated classes are annotated with
  *     {@link GlideType}:
  *     <ul>
  *       <li>A {@code com.bumptech.glide.RequestManager} implementation containing a generated
diff --git a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/GlideExtensionValidator.java b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/GlideExtensionValidator.java
similarity index 96%
rename from annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/GlideExtensionValidator.java
rename to annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/GlideExtensionValidator.java
index 77c496d8b..5ba94f297 100644
--- a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/GlideExtensionValidator.java
+++ b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/GlideExtensionValidator.java
@@ -1,10 +1,11 @@
-package com.bumptech.glide.annotation.compiler;
+package com.bumptech.glide4.annotation.compiler;
 
-import static com.bumptech.glide.annotation.compiler.ProcessorUtil.nonNull;
-import static com.bumptech.glide.annotation.compiler.ProcessorUtil.nonNulls;
+import static com.bumptech.glide4.annotation.compiler.ProcessorUtil.nonNull;
+import static com.bumptech.glide4.annotation.compiler.ProcessorUtil.nonNulls;
 
-import com.bumptech.glide.annotation.GlideOption;
-import com.bumptech.glide.annotation.GlideType;
+import com.bumptech.glide4.annotation.GlideOption;
+import com.bumptech.glide4.annotation.GlideType;
+import com.bumptech.glide4.annotation.GlideExtension;
 import com.google.common.base.Function;
 import com.google.common.collect.FluentIterable;
 import com.squareup.javapoet.ClassName;
@@ -24,7 +25,7 @@
 import javax.tools.Diagnostic.Kind;
 
 /**
- * Validates that classes annotated with {@link com.bumptech.glide.annotation.GlideExtension}
+ * Validates that classes annotated with {@link GlideExtension}
  * contains methods with the expected format.
  *
  * <p>Validation is performed so that errors can be found when a library is compiled. Without
diff --git a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/GlideGenerator.java b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/GlideGenerator.java
similarity index 96%
rename from annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/GlideGenerator.java
rename to annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/GlideGenerator.java
index d4da883b5..358d8b5fb 100644
--- a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/GlideGenerator.java
+++ b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/GlideGenerator.java
@@ -1,6 +1,7 @@
-package com.bumptech.glide.annotation.compiler;
+package com.bumptech.glide4.annotation.compiler;
 
-import com.bumptech.glide.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideModule;
 import com.google.common.base.Function;
 import com.google.common.base.Preconditions;
 import com.google.common.collect.Lists;
@@ -24,7 +25,7 @@
  * (GlideApp.with(...)).
  *
  * <p>>Generated {@code com.bumptech.glide.Glide} look-alikes look like this (note that the name
- * is configurable in {@link com.bumptech.glide.annotation.GlideModule}):
+ * is configurable in {@link GlideModule}):
  * <pre>
  * <code>
  * public final class GlideApp {
@@ -71,10 +72,10 @@
  */
 final class GlideGenerator {
   private static final String GLIDE_QUALIFIED_NAME =
-      "com.bumptech.glide.Glide";
+      "com.bumptech.glide4.Glide";
 
   private static final String REQUEST_MANAGER_QUALIFIED_NAME =
-      "com.bumptech.glide.RequestManager";
+      "com.bumptech.glide4.RequestManager";
 
   private static final String VISIBLE_FOR_TESTING_QUALIFIED_NAME =
       "android.support.annotation.VisibleForTesting";
diff --git a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/IndexerGenerator.java b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/IndexerGenerator.java
similarity index 93%
rename from annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/IndexerGenerator.java
rename to annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/IndexerGenerator.java
index 7ff49feea..1091cffeb 100644
--- a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/IndexerGenerator.java
+++ b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/IndexerGenerator.java
@@ -1,7 +1,7 @@
-package com.bumptech.glide.annotation.compiler;
+package com.bumptech.glide4.annotation.compiler;
 
-import com.bumptech.glide.annotation.GlideExtension;
-import com.bumptech.glide.annotation.GlideModule;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideModule;
 import com.squareup.javapoet.AnnotationSpec;
 import com.squareup.javapoet.ClassName;
 import com.squareup.javapoet.TypeSpec;
@@ -22,7 +22,7 @@
  * <p>The output file generated by this class with a LibraryGlideModule looks like this:
  * <pre>
  * <code>
- *  {@literal @com.bumptech.glide.annotation.compiler.Index(}
+ *  {@literal @Index(}
  *      modules = "com.bumptech.glide.integration.okhttp3.OkHttpLibraryGlideModule"
  *  )
  *  public class Indexer_GlideModule_com_bumptech_glide_integration_okhttp3_OkHttpLibraryGlideModule
@@ -34,7 +34,7 @@
  * <p>The output file generated by this class with a GlideExtension looks like this:
  * <pre>
  * <code>
- *  {@literal @com.bumptech.glide.annotation.compiler.Index(}
+ *  {@literal @Index(}
  *      extensions = "com.bumptech.glide.integration.gif.GifOptions"
  *  )
  *  public class Indexer_GlideExtension_com_bumptech_glide_integration_gif_GifOptions {
diff --git a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/LibraryModuleProcessor.java b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/LibraryModuleProcessor.java
similarity index 96%
rename from annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/LibraryModuleProcessor.java
rename to annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/LibraryModuleProcessor.java
index d6e6329a7..77c4b58b8 100644
--- a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/LibraryModuleProcessor.java
+++ b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/LibraryModuleProcessor.java
@@ -1,6 +1,6 @@
-package com.bumptech.glide.annotation.compiler;
+package com.bumptech.glide4.annotation.compiler;
 
-import com.bumptech.glide.annotation.GlideModule;
+import com.bumptech.glide4.annotation.GlideModule;
 import com.squareup.javapoet.TypeSpec;
 import java.util.ArrayList;
 import java.util.Collections;
diff --git a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/ProcessorUtil.java b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/ProcessorUtil.java
similarity index 98%
rename from annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/ProcessorUtil.java
rename to annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/ProcessorUtil.java
index b9832f365..8655687c2 100644
--- a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/ProcessorUtil.java
+++ b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/ProcessorUtil.java
@@ -1,9 +1,9 @@
-package com.bumptech.glide.annotation.compiler;
+package com.bumptech.glide4.annotation.compiler;
 
-import static com.bumptech.glide.annotation.compiler.GlideAnnotationProcessor.DEBUG;
+import static com.bumptech.glide4.annotation.compiler.GlideAnnotationProcessor.DEBUG;
 
-import com.bumptech.glide.annotation.GlideExtension;
-import com.bumptech.glide.annotation.GlideOption;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
 import com.google.common.base.Function;
 import com.google.common.base.Joiner;
 import com.google.common.base.Predicate;
@@ -55,7 +55,7 @@
  * Utilities for writing classes and logging.
  */
 final class ProcessorUtil {
-  private static final String GLIDE_MODULE_PACKAGE_NAME = "com.bumptech.glide.module";
+  private static final String GLIDE_MODULE_PACKAGE_NAME = "com.bumptech.glide4.module";
   private static final String APP_GLIDE_MODULE_SIMPLE_NAME = "AppGlideModule";
   private static final String LIBRARY_GLIDE_MODULE_SIMPLE_NAME = "LibraryGlideModule";
   private static final String APP_GLIDE_MODULE_QUALIFIED_NAME =
diff --git a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestBuilderGenerator.java b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestBuilderGenerator.java
similarity index 97%
rename from annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestBuilderGenerator.java
rename to annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestBuilderGenerator.java
index b45ea1779..66a7ce035 100644
--- a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestBuilderGenerator.java
+++ b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestBuilderGenerator.java
@@ -1,10 +1,10 @@
-package com.bumptech.glide.annotation.compiler;
+package com.bumptech.glide4.annotation.compiler;
 
-import static com.bumptech.glide.annotation.compiler.ProcessorUtil.checkResult;
-import static com.bumptech.glide.annotation.compiler.ProcessorUtil.nonNull;
+import static com.bumptech.glide4.annotation.compiler.ProcessorUtil.checkResult;
+import static com.bumptech.glide4.annotation.compiler.ProcessorUtil.nonNull;
 
-import com.bumptech.glide.annotation.GlideExtension;
-import com.bumptech.glide.annotation.GlideOption;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
 import com.google.common.base.Function;
 import com.google.common.base.Joiner;
 import com.google.common.base.Predicate;
@@ -87,12 +87,12 @@
  * </pre>
  */
 final class RequestBuilderGenerator {
-  private static final String REQUEST_OPTIONS_PACKAGE_NAME = "com.bumptech.glide.request";
+  private static final String REQUEST_OPTIONS_PACKAGE_NAME = "com.bumptech.glide4.request";
   private static final String REQUEST_OPTIONS_SIMPLE_NAME = "RequestOptions";
   private static final String REQUEST_OPTIONS_QUALIFIED_NAME =
       REQUEST_OPTIONS_PACKAGE_NAME + "." + REQUEST_OPTIONS_SIMPLE_NAME;
 
-  private static final String REQUEST_BUILDER_PACKAGE_NAME = "com.bumptech.glide";
+  private static final String REQUEST_BUILDER_PACKAGE_NAME = "com.bumptech.glide4";
   private static final String REQUEST_BUILDER_SIMPLE_NAME = "RequestBuilder";
   static final String REQUEST_BUILDER_QUALIFIED_NAME =
       REQUEST_BUILDER_PACKAGE_NAME + "." + REQUEST_BUILDER_SIMPLE_NAME;
@@ -195,7 +195,7 @@ TypeSpec generate(
   /**
    * Generates methods with equivalent names and arguments to methods annotated with
    * {@link GlideOption} in
-   * {@link com.bumptech.glide.annotation.GlideExtension}s that return our generated
+   * {@link GlideExtension}s that return our generated
    * {@code com.bumptech.glide.RequestBuilder} subclass.
    */
   private List<MethodSpec> generateGeneratedRequestOptionsEquivalents(
@@ -434,8 +434,8 @@ public String apply(ParameterSpec input) {
         .build();
 
     ClassName context = ClassName.get("android.content", "Context");
-    ClassName glide = ClassName.get("com.bumptech.glide", "Glide");
-    ClassName requestManager = ClassName.get("com.bumptech.glide", "RequestManager");
+    ClassName glide = ClassName.get("com.bumptech.glide4", "Glide");
+    ClassName requestManager = ClassName.get("com.bumptech.glide4", "RequestManager");
     MethodSpec secondConstructor =
         MethodSpec.constructorBuilder()
             .addParameter(ParameterSpec.builder(glide, "glide")
diff --git a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestManagerFactoryGenerator.java b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestManagerFactoryGenerator.java
similarity index 90%
rename from annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestManagerFactoryGenerator.java
rename to annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestManagerFactoryGenerator.java
index d20a7fd2a..60d4fc39a 100644
--- a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestManagerFactoryGenerator.java
+++ b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestManagerFactoryGenerator.java
@@ -1,6 +1,6 @@
-package com.bumptech.glide.annotation.compiler;
+package com.bumptech.glide4.annotation.compiler;
 
-import static com.bumptech.glide.annotation.compiler.ProcessorUtil.nonNull;
+import static com.bumptech.glide4.annotation.compiler.ProcessorUtil.nonNull;
 
 import com.squareup.javapoet.ClassName;
 import com.squareup.javapoet.MethodSpec;
@@ -33,20 +33,20 @@
  */
 final class RequestManagerFactoryGenerator {
   private static final String GLIDE_QUALIFIED_NAME =
-      "com.bumptech.glide.Glide";
+      "com.bumptech.glide4.Glide";
   private static final String LIFECYCLE_QUALIFIED_NAME =
-      "com.bumptech.glide.manager.Lifecycle";
+      "com.bumptech.glide4.manager.Lifecycle";
   private static final String REQUEST_MANAGER_TREE_NODE_QUALIFIED_NAME =
-      "com.bumptech.glide.manager.RequestManagerTreeNode";
+      "com.bumptech.glide4.manager.RequestManagerTreeNode";
   private static final String REQUEST_MANAGER_FACTORY_QUALIFIED_NAME =
-      "com.bumptech.glide.manager.RequestManagerRetriever.RequestManagerFactory";
+      "com.bumptech.glide4.manager.RequestManagerRetriever.RequestManagerFactory";
   private static final String REQUEST_MANAGER_QUALIFIED_NAME =
-      "com.bumptech.glide.RequestManager";
+      "com.bumptech.glide4.RequestManager";
   private static final ClassName CONTEXT_CLASS_NAME =
       ClassName.get("android.content", "Context");
 
   static final String GENERATED_REQUEST_MANAGER_FACTORY_PACKAGE_NAME =
-      "com.bumptech.glide";
+      "com.bumptech.glide4";
   static final String GENERATED_REQUEST_MANAGER_FACTORY_SIMPLE_NAME =
       "GeneratedRequestManagerFactory";
 
diff --git a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestManagerGenerator.java b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestManagerGenerator.java
similarity index 96%
rename from annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestManagerGenerator.java
rename to annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestManagerGenerator.java
index d66257e87..7eddfba08 100644
--- a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestManagerGenerator.java
+++ b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestManagerGenerator.java
@@ -1,10 +1,10 @@
-package com.bumptech.glide.annotation.compiler;
+package com.bumptech.glide4.annotation.compiler;
 
-import static com.bumptech.glide.annotation.compiler.ProcessorUtil.checkResult;
-import static com.bumptech.glide.annotation.compiler.ProcessorUtil.nonNull;
+import static com.bumptech.glide4.annotation.compiler.ProcessorUtil.checkResult;
+import static com.bumptech.glide4.annotation.compiler.ProcessorUtil.nonNull;
 
-import com.bumptech.glide.annotation.GlideExtension;
-import com.bumptech.glide.annotation.GlideType;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideType;
 import com.google.common.base.Function;
 import com.google.common.base.Predicate;
 import com.google.common.base.Predicates;
@@ -55,13 +55,13 @@
  */
 final class RequestManagerGenerator {
   private static final String GLIDE_QUALIFIED_NAME =
-      "com.bumptech.glide.Glide";
+      "com.bumptech.glide4.Glide";
   private static final String REQUEST_MANAGER_QUALIFIED_NAME =
-      "com.bumptech.glide.RequestManager";
+      "com.bumptech.glide4.RequestManager";
   private static final String LIFECYCLE_QUALIFIED_NAME =
-      "com.bumptech.glide.manager.Lifecycle";
+      "com.bumptech.glide4.manager.Lifecycle";
   private static final String REQUEST_MANAGER_TREE_NODE_QUALIFIED_NAME =
-      "com.bumptech.glide.manager.RequestManagerTreeNode";
+      "com.bumptech.glide4.manager.RequestManagerTreeNode";
   private static final ClassName CONTEXT_CLASS_NAME =
       ClassName.get("android.content", "Context");
 
diff --git a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestOptionsExtensionGenerator.java b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestOptionsExtensionGenerator.java
similarity index 94%
rename from annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestOptionsExtensionGenerator.java
rename to annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestOptionsExtensionGenerator.java
index 450ab8326..4c5cc17f4 100644
--- a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestOptionsExtensionGenerator.java
+++ b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestOptionsExtensionGenerator.java
@@ -1,10 +1,10 @@
-package com.bumptech.glide.annotation.compiler;
+package com.bumptech.glide4.annotation.compiler;
 
-import static com.bumptech.glide.annotation.GlideOption.OVERRIDE_EXTEND;
-import static com.bumptech.glide.annotation.compiler.ProcessorUtil.checkResult;
-import static com.bumptech.glide.annotation.compiler.ProcessorUtil.nonNull;
+import static com.bumptech.glide4.annotation.GlideOption.OVERRIDE_EXTEND;
+import static com.bumptech.glide4.annotation.compiler.ProcessorUtil.checkResult;
+import static com.bumptech.glide4.annotation.compiler.ProcessorUtil.nonNull;
 
-import com.bumptech.glide.annotation.GlideOption;
+import com.bumptech.glide4.annotation.GlideOption;
 import com.squareup.javapoet.AnnotationSpec;
 import com.squareup.javapoet.ClassName;
 import com.squareup.javapoet.CodeBlock;
diff --git a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestOptionsGenerator.java b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestOptionsGenerator.java
similarity index 98%
rename from annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestOptionsGenerator.java
rename to annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestOptionsGenerator.java
index f68cde6e8..797035e30 100644
--- a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestOptionsGenerator.java
+++ b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestOptionsGenerator.java
@@ -1,10 +1,10 @@
-package com.bumptech.glide.annotation.compiler;
+package com.bumptech.glide4.annotation.compiler;
 
-import static com.bumptech.glide.annotation.compiler.ProcessorUtil.checkResult;
-import static com.bumptech.glide.annotation.compiler.ProcessorUtil.nonNull;
+import static com.bumptech.glide4.annotation.compiler.ProcessorUtil.checkResult;
+import static com.bumptech.glide4.annotation.compiler.ProcessorUtil.nonNull;
 
-import com.bumptech.glide.annotation.GlideExtension;
-import com.bumptech.glide.annotation.GlideOption;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
 import com.google.common.base.Function;
 import com.google.common.base.Objects;
 import com.google.common.base.Preconditions;
@@ -70,7 +70,7 @@
  */
 final class RequestOptionsGenerator {
   private static final String GENERATED_REQUEST_OPTIONS_SIMPLE_NAME = "GlideOptions";
-  static final String REQUEST_OPTIONS_PACKAGE_NAME = "com.bumptech.glide.request";
+  static final String REQUEST_OPTIONS_PACKAGE_NAME = "com.bumptech.glide4.request";
   private static final String REQUEST_OPTIONS_SIMPLE_NAME = "RequestOptions";
   static final String REQUEST_OPTIONS_QUALIFIED_NAME =
       REQUEST_OPTIONS_PACKAGE_NAME + "." + REQUEST_OPTIONS_SIMPLE_NAME;
diff --git a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestOptionsOverrideGenerator.java b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestOptionsOverrideGenerator.java
similarity index 95%
rename from annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestOptionsOverrideGenerator.java
rename to annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestOptionsOverrideGenerator.java
index 68cbdb6bd..e514ffbea 100644
--- a/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestOptionsOverrideGenerator.java
+++ b/annotation/compiler/src/main/java/com/bumptech/glide4/annotation/compiler/RequestOptionsOverrideGenerator.java
@@ -1,6 +1,6 @@
-package com.bumptech.glide.annotation.compiler;
+package com.bumptech.glide4.annotation.compiler;
 
-import static com.bumptech.glide.annotation.compiler.RequestOptionsGenerator.BASE_REQUEST_OPTIONS_QUALIFIED_NAME;
+import static com.bumptech.glide4.annotation.compiler.RequestOptionsGenerator.BASE_REQUEST_OPTIONS_QUALIFIED_NAME;
 
 import com.google.common.base.Function;
 import com.google.common.base.Joiner;
diff --git a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithExcludesTest.java b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithExcludesTest.java
index 323a4b151..c526526d8 100644
--- a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithExcludesTest.java
+++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithExcludesTest.java
@@ -11,6 +11,7 @@
 import com.bumptech.glide.annotation.compiler.test.ReferencedResource;
 import com.bumptech.glide.annotation.compiler.test.RegenerateResourcesRule;
 import com.bumptech.glide.annotation.compiler.test.Util;
+import com.bumptech.glide4.annotation.compiler.GlideAnnotationProcessor;
 import com.google.testing.compile.Compilation;
 import java.io.IOException;
 import javax.tools.JavaFileObject;
diff --git a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithLibraryInPackageTest.java b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithLibraryInPackageTest.java
index d8090cf2c..738a3dafb 100644
--- a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithLibraryInPackageTest.java
+++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithLibraryInPackageTest.java
@@ -10,6 +10,7 @@
 import com.bumptech.glide.annotation.compiler.test.ReferencedResource;
 import com.bumptech.glide.annotation.compiler.test.RegenerateResourcesRule;
 import com.bumptech.glide.annotation.compiler.test.Util;
+import com.bumptech.glide4.annotation.compiler.GlideAnnotationProcessor;
 import com.google.testing.compile.Compilation;
 import java.io.IOException;
 import javax.tools.JavaFileObject;
diff --git a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithMultipleExcludesTest.java b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithMultipleExcludesTest.java
index 86fb5b02b..f91d52576 100644
--- a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithMultipleExcludesTest.java
+++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithMultipleExcludesTest.java
@@ -10,6 +10,7 @@
 import com.bumptech.glide.annotation.compiler.test.ReferencedResource;
 import com.bumptech.glide.annotation.compiler.test.RegenerateResourcesRule;
 import com.bumptech.glide.annotation.compiler.test.Util;
+import com.bumptech.glide4.annotation.compiler.GlideAnnotationProcessor;
 import com.google.testing.compile.Compilation;
 import java.io.IOException;
 import javax.tools.JavaFileObject;
diff --git a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/EmptyAppAndLibraryGlideModulesTest.java b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/EmptyAppAndLibraryGlideModulesTest.java
index d9c18209d..1fb1bcb3e 100644
--- a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/EmptyAppAndLibraryGlideModulesTest.java
+++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/EmptyAppAndLibraryGlideModulesTest.java
@@ -14,6 +14,7 @@
 import com.bumptech.glide.annotation.compiler.test.ReferencedResource;
 import com.bumptech.glide.annotation.compiler.test.RegenerateResourcesRule;
 import com.bumptech.glide.annotation.compiler.test.Util;
+import com.bumptech.glide4.annotation.compiler.GlideAnnotationProcessor;
 import com.google.common.truth.Truth;
 import com.google.testing.compile.Compilation;
 import java.io.IOException;
diff --git a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/EmptyAppGlideModuleTest.java b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/EmptyAppGlideModuleTest.java
index 8af5e23d9..06dcaaa81 100644
--- a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/EmptyAppGlideModuleTest.java
+++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/EmptyAppGlideModuleTest.java
@@ -8,6 +8,7 @@
 
 import com.bumptech.glide.annotation.compiler.test.RegenerateResourcesRule;
 import com.bumptech.glide.annotation.compiler.test.Util;
+import com.bumptech.glide4.annotation.compiler.GlideAnnotationProcessor;
 import com.google.common.truth.Truth;
 import com.google.testing.compile.Compilation;
 import java.io.IOException;
diff --git a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/EmptyLibraryGlideModuleTest.java b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/EmptyLibraryGlideModuleTest.java
index f4776d227..bec6c2fcb 100644
--- a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/EmptyLibraryGlideModuleTest.java
+++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/EmptyLibraryGlideModuleTest.java
@@ -7,6 +7,7 @@
 
 import com.bumptech.glide.annotation.compiler.test.RegenerateResourcesRule;
 import com.bumptech.glide.annotation.compiler.test.Util;
+import com.bumptech.glide4.annotation.compiler.GlideAnnotationProcessor;
 import com.google.common.truth.Truth;
 import com.google.testing.compile.Compilation;
 import java.io.IOException;
diff --git a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/GlideExtensionOptionsTest.java b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/GlideExtensionOptionsTest.java
index a3c64b275..dfb8239f3 100644
--- a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/GlideExtensionOptionsTest.java
+++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/GlideExtensionOptionsTest.java
@@ -10,6 +10,7 @@
 import com.bumptech.glide.annotation.compiler.test.SubDirectory;
 import com.bumptech.glide.annotation.compiler.test.TestDescription;
 import com.bumptech.glide.annotation.compiler.test.Util;
+import com.bumptech.glide4.annotation.compiler.GlideAnnotationProcessor;
 import com.google.testing.compile.Compilation;
 import java.io.IOException;
 import javax.tools.JavaFileObject;
diff --git a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/GlideExtensionWithOptionTest.java b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/GlideExtensionWithOptionTest.java
index a67555ea8..eda80a945 100644
--- a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/GlideExtensionWithOptionTest.java
+++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/GlideExtensionWithOptionTest.java
@@ -11,6 +11,7 @@
 import com.bumptech.glide.annotation.compiler.test.ReferencedResource;
 import com.bumptech.glide.annotation.compiler.test.RegenerateResourcesRule;
 import com.bumptech.glide.annotation.compiler.test.Util;
+import com.bumptech.glide4.annotation.compiler.GlideAnnotationProcessor;
 import com.google.common.truth.Truth;
 import com.google.testing.compile.Compilation;
 import java.io.IOException;
diff --git a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/GlideExtensionWithTypeTest.java b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/GlideExtensionWithTypeTest.java
index af4a4b747..00b4afb69 100644
--- a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/GlideExtensionWithTypeTest.java
+++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/GlideExtensionWithTypeTest.java
@@ -11,6 +11,7 @@
 import com.bumptech.glide.annotation.compiler.test.ReferencedResource;
 import com.bumptech.glide.annotation.compiler.test.RegenerateResourcesRule;
 import com.bumptech.glide.annotation.compiler.test.Util;
+import com.bumptech.glide4.annotation.compiler.GlideAnnotationProcessor;
 import com.google.common.truth.Truth;
 import com.google.testing.compile.Compilation;
 import java.io.IOException;
diff --git a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidAppGlideModuleWithExcludesTest.java b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidAppGlideModuleWithExcludesTest.java
index a54f7565e..d89366867 100644
--- a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidAppGlideModuleWithExcludesTest.java
+++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidAppGlideModuleWithExcludesTest.java
@@ -4,6 +4,7 @@
 import static com.google.testing.compile.Compiler.javac;
 import static org.junit.Assert.assertThrows;
 
+import com.bumptech.glide4.annotation.compiler.GlideAnnotationProcessor;
 import com.google.testing.compile.Compilation;
 import com.google.testing.compile.JavaFileObjects;
 import org.junit.Test;
@@ -31,8 +32,8 @@ public void run() throws Throwable {
                     JavaFileObjects.forSourceLines(
                         "AppModuleWithExcludes",
                         "package com.bumptech.glide.test;",
-                        "import com.bumptech.glide.annotation.Excludes;",
-                        "import com.bumptech.glide.annotation.GlideModule;",
+                        "import com.bumptech.glide4.annotation.Excludes;",
+                        "import com.bumptech.glide4.annotation.GlideModule;",
                         "import com.bumptech.glide.module.AppGlideModule;",
                         "import com.bumptech.glide.test.EmptyLibraryModule;",
                         "@GlideModule",
@@ -51,8 +52,8 @@ public void compilation_withEmptyExcludes_fails() {
                 JavaFileObjects.forSourceLines(
                     "AppModuleWithExcludes",
                     "package com.bumptech.glide.test;",
-                    "import com.bumptech.glide.annotation.Excludes;",
-                    "import com.bumptech.glide.annotation.GlideModule;",
+                    "import com.bumptech.glide4.annotation.Excludes;",
+                    "import com.bumptech.glide4.annotation.GlideModule;",
                     "import com.bumptech.glide.module.AppGlideModule;",
                     "import com.bumptech.glide.test.EmptyLibraryModule;",
                     "@GlideModule",
@@ -70,8 +71,8 @@ public void compilation_withNonGlideModule_throws() {
                 JavaFileObjects.forSourceLines(
                     "AppModuleWithExcludes",
                     "package com.bumptech.glide.test;",
-                    "import com.bumptech.glide.annotation.Excludes;",
-                    "import com.bumptech.glide.annotation.GlideModule;",
+                    "import com.bumptech.glide4.annotation.Excludes;",
+                    "import com.bumptech.glide4.annotation.GlideModule;",
                     "import com.bumptech.glide.module.AppGlideModule;",
                     "import com.bumptech.glide.test.EmptyLibraryModule;",
                     "@GlideModule",
diff --git a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidGlideExtensionTest.java b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidGlideExtensionTest.java
index 2641be120..c824f15e6 100644
--- a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidGlideExtensionTest.java
+++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidGlideExtensionTest.java
@@ -5,6 +5,8 @@
 import static com.google.testing.compile.Compiler.javac;
 import static org.junit.Assert.fail;
 
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.compiler.GlideAnnotationProcessor;
 import com.google.common.truth.Truth;
 import com.google.testing.compile.Compilation;
 import com.google.testing.compile.JavaFileObjects;
@@ -13,7 +15,7 @@
 import org.junit.runners.JUnit4;
 
 /**
- * Checks assertions on {@link com.bumptech.glide.annotation.GlideExtension}s themselves.
+ * Checks assertions on {@link GlideExtension}s themselves.
  */
 // Avoid warnings when asserting on exceptions.
 @SuppressWarnings("ResultOfMethodCallIgnored")
@@ -29,7 +31,7 @@ public void compilation_withPublicConstructor_fails() {
               JavaFileObjects.forSourceLines(
                   "PublicConstructor",
                   "package com.bumptech.glide.test;",
-                  "import com.bumptech.glide.annotation.GlideExtension;",
+                  "import com.bumptech.glide4.annotation.GlideExtension;",
                   "@GlideExtension",
                   "public class PublicConstructor { }"));
       fail("Failed to throw expected exception");
@@ -51,7 +53,7 @@ public void compilation_withPackagePrivateExtension_fails() {
               JavaFileObjects.forSourceLines(
                   "PackagePrivateExtension",
                   "package com.bumptech.glide.test;",
-                  "import com.bumptech.glide.annotation.GlideExtension;",
+                  "import com.bumptech.glide4.annotation.GlideExtension;",
                   "@GlideExtension",
                   "class PackagePrivateExtension {",
                   "  private PackagePrivateExtension() {}",
@@ -74,7 +76,7 @@ public void compilation_withConstructorWithParameters_throws() {
               JavaFileObjects.forSourceLines(
                   "ConstructorParametersExtension",
                   "package com.bumptech.glide.test;",
-                  "import com.bumptech.glide.annotation.GlideExtension;",
+                  "import com.bumptech.glide4.annotation.GlideExtension;",
                   "@GlideExtension",
                   "public class ConstructorParametersExtension {",
                   "  private ConstructorParametersExtension(int failParam) {}",
@@ -98,7 +100,7 @@ public void compilation_withNonStaticMethod_succeeds() {
                 JavaFileObjects.forSourceLines(
                     "Extension",
                     "package com.bumptech.glide.test;",
-                    "import com.bumptech.glide.annotation.GlideExtension;",
+                    "import com.bumptech.glide4.annotation.GlideExtension;",
                     "@GlideExtension",
                     "public class Extension {",
                     "  private Extension() {}",
@@ -117,7 +119,7 @@ public void compilation_withStaticMethod_succeeds() {
                 JavaFileObjects.forSourceLines(
                     "Extension",
                     "package com.bumptech.glide.test;",
-                    "import com.bumptech.glide.annotation.GlideExtension;",
+                    "import com.bumptech.glide4.annotation.GlideExtension;",
                     "@GlideExtension",
                     "public class Extension {",
                     "  private Extension() {}",
diff --git a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidGlideOptionsExtensionTest.java b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidGlideOptionsExtensionTest.java
index e1516bdcb..4a04a2961 100644
--- a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidGlideOptionsExtensionTest.java
+++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidGlideOptionsExtensionTest.java
@@ -6,6 +6,9 @@
 import static org.junit.Assert.assertThrows;
 import static org.junit.Assert.fail;
 
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
+import com.bumptech.glide4.annotation.compiler.GlideAnnotationProcessor;
 import com.google.common.truth.Truth;
 import com.google.testing.compile.Compilation;
 import com.google.testing.compile.JavaFileObjects;
@@ -15,8 +18,8 @@
 import org.junit.runners.JUnit4;
 
 /**
- * Checks assertions on {@link com.bumptech.glide.annotation.GlideExtension}s for methods annotated
- * with {@link com.bumptech.glide.annotation.GlideOption}.
+ * Checks assertions on {@link GlideExtension}s for methods annotated
+ * with {@link GlideOption}.
  */
 // Ignore warnings since most methods use assertThrows.
 @SuppressWarnings("ResultOfMethodCallIgnored")
@@ -36,8 +39,8 @@ public void run() {
                     JavaFileObjects.forSourceLines(
                         "Extension",
                         "package com.bumptech.glide.test;",
-                        "import com.bumptech.glide.annotation.GlideExtension;",
-                        "import com.bumptech.glide.annotation.GlideOption;",
+                        "import com.bumptech.glide4.annotation.GlideExtension;",
+                        "import com.bumptech.glide4.annotation.GlideOption;",
                         "@GlideExtension",
                         "public class Extension {",
                         "  private Extension() {}",
@@ -58,8 +61,8 @@ public void compilation_withAnnotatedStaticMethod_withRequestOptionsArgInWrongOr
               JavaFileObjects.forSourceLines(
                   "NonRequestOptionsFirstArgExtension",
                   "package com.bumptech.glide.test;",
-                  "import com.bumptech.glide.annotation.GlideExtension;",
-                  "import com.bumptech.glide.annotation.GlideOption;",
+                  "import com.bumptech.glide4.annotation.GlideExtension;",
+                  "import com.bumptech.glide4.annotation.GlideOption;",
                   "import com.bumptech.glide.request.BaseRequestOptions;",
                   "@GlideExtension",
                   "public class NonRequestOptionsFirstArgExtension{",
@@ -88,8 +91,8 @@ public void compilation_withAnnotatedStaticMethod_withRequestOptionsArg_succeeds
             JavaFileObjects.forSourceLines(
                 "Extension",
                 "package com.bumptech.glide.test;",
-                "import com.bumptech.glide.annotation.GlideExtension;",
-                "import com.bumptech.glide.annotation.GlideOption;",
+                "import com.bumptech.glide4.annotation.GlideExtension;",
+                "import com.bumptech.glide4.annotation.GlideOption;",
                 "import com.bumptech.glide.request.BaseRequestOptions;",
                 "@GlideExtension",
                 "public class Extension {",
@@ -112,8 +115,8 @@ public void compilation_withAnnotatedStaticMethod_withRequestOptionsArgAndOtherA
             JavaFileObjects.forSourceLines(
                 "Extension",
                 "package com.bumptech.glide.test;",
-                "import com.bumptech.glide.annotation.GlideExtension;",
-                "import com.bumptech.glide.annotation.GlideOption;",
+                "import com.bumptech.glide4.annotation.GlideExtension;",
+                "import com.bumptech.glide4.annotation.GlideOption;",
                 "import com.bumptech.glide.request.BaseRequestOptions;",
                 "@GlideExtension",
                 "public class Extension {",
@@ -141,8 +144,8 @@ public void run() {
                 JavaFileObjects.forSourceLines(
                     "Extension",
                     "package com.bumptech.glide.test;",
-                    "import com.bumptech.glide.annotation.GlideExtension;",
-                    "import com.bumptech.glide.annotation.GlideOption;",
+                    "import com.bumptech.glide4.annotation.GlideExtension;",
+                    "import com.bumptech.glide4.annotation.GlideOption;",
                     "import com.bumptech.glide.request.BaseRequestOptions;",
                     "@GlideExtension",
                     "public class Extension {",
@@ -172,8 +175,8 @@ public void run() {
                     JavaFileObjects.forSourceLines(
                         "Extension",
                         "package com.bumptech.glide.test;",
-                        "import com.bumptech.glide.annotation.GlideExtension;",
-                        "import com.bumptech.glide.annotation.GlideOption;",
+                        "import com.bumptech.glide4.annotation.GlideExtension;",
+                        "import com.bumptech.glide4.annotation.GlideOption;",
                         "import com.bumptech.glide.request.BaseRequestOptions;",
                         "@GlideExtension",
                         "public class Extension {",
@@ -197,8 +200,8 @@ public void compilation_withOverrideExtend_andOverridingMethod_succeeds() {
             JavaFileObjects.forSourceLines(
                 "Extension",
                 "package com.bumptech.glide.test;",
-                "import com.bumptech.glide.annotation.GlideExtension;",
-                "import com.bumptech.glide.annotation.GlideOption;",
+                "import com.bumptech.glide4.annotation.GlideExtension;",
+                "import com.bumptech.glide4.annotation.GlideOption;",
                 "import com.bumptech.glide.request.BaseRequestOptions;",
                 "@GlideExtension",
                 "public class Extension {",
@@ -226,8 +229,8 @@ public void run() {
                     JavaFileObjects.forSourceLines(
                         "Extension",
                         "package com.bumptech.glide.test;",
-                        "import com.bumptech.glide.annotation.GlideExtension;",
-                        "import com.bumptech.glide.annotation.GlideOption;",
+                        "import com.bumptech.glide4.annotation.GlideExtension;",
+                        "import com.bumptech.glide4.annotation.GlideOption;",
                         "import com.bumptech.glide.request.BaseRequestOptions;",
                         "@GlideExtension",
                         "public class Extension {",
@@ -251,8 +254,8 @@ public void compilation_withOverrideReplace_andOverridingMethod_succeeds() {
             JavaFileObjects.forSourceLines(
                 "Extension",
                 "package com.bumptech.glide.test;",
-                "import com.bumptech.glide.annotation.GlideExtension;",
-                "import com.bumptech.glide.annotation.GlideOption;",
+                "import com.bumptech.glide4.annotation.GlideExtension;",
+                "import com.bumptech.glide4.annotation.GlideOption;",
                 "import com.bumptech.glide.request.BaseRequestOptions;",
                 "@GlideExtension",
                 "public class Extension {",
@@ -276,8 +279,8 @@ public void compilation_withRequestOptionsReturnValue_succeeds() {
                 "Extension",
                 "package com.bumptech.glide.test;",
                 "import android.support.annotation.NonNull;",
-                "import com.bumptech.glide.annotation.GlideExtension;",
-                "import com.bumptech.glide.annotation.GlideOption;",
+                "import com.bumptech.glide4.annotation.GlideExtension;",
+                "import com.bumptech.glide4.annotation.GlideOption;",
                 "import com.bumptech.glide.request.BaseRequestOptions;",
                 "@GlideExtension",
                 "public class Extension {",
@@ -303,8 +306,8 @@ public void compilation_withNonRequestOptionsReturnValue_fails() {
                   "WrongReturnTypeExtension",
                   "package com.bumptech.glide.test;",
                   "import android.support.annotation.NonNull;",
-                  "import com.bumptech.glide.annotation.GlideExtension;",
-                  "import com.bumptech.glide.annotation.GlideOption;",
+                  "import com.bumptech.glide4.annotation.GlideExtension;",
+                  "import com.bumptech.glide4.annotation.GlideOption;",
                   "import com.bumptech.glide.request.BaseRequestOptions;",
                   "@GlideExtension",
                   "public class WrongReturnTypeExtension {",
@@ -334,8 +337,8 @@ public void compilation_withMissingNonNullAnnotation_warns() {
             JavaFileObjects.forSourceLines(
                 "Extension",
                 "package com.bumptech.glide.test;",
-                "import com.bumptech.glide.annotation.GlideExtension;",
-                "import com.bumptech.glide.annotation.GlideOption;",
+                "import com.bumptech.glide4.annotation.GlideExtension;",
+                "import com.bumptech.glide4.annotation.GlideOption;",
                 "import com.bumptech.glide.request.BaseRequestOptions;",
                 "@GlideExtension",
                 "public class Extension {",
@@ -363,8 +366,8 @@ public void compilation_withNoOptionParameters_fails() {
                   "MissingRequestOptionsExtension",
                   "package com.bumptech.glide.test;",
                   "import android.support.annotation.NonNull;",
-                  "import com.bumptech.glide.annotation.GlideExtension;",
-                  "import com.bumptech.glide.annotation.GlideOption;",
+                  "import com.bumptech.glide4.annotation.GlideExtension;",
+                  "import com.bumptech.glide4.annotation.GlideOption;",
                   "import com.bumptech.glide.request.BaseRequestOptions;",
                   "@GlideExtension",
                   "public class MissingRequestOptionsExtension {",
diff --git a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidGlideTypeExtensionTest.java b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidGlideTypeExtensionTest.java
index 0a4c91c82..4e48a9f1d 100644
--- a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidGlideTypeExtensionTest.java
+++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidGlideTypeExtensionTest.java
@@ -8,6 +8,9 @@
 import static org.junit.Assert.assertThrows;
 import static org.junit.Assert.fail;
 
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideType;
+import com.bumptech.glide4.annotation.compiler.GlideAnnotationProcessor;
 import com.google.common.truth.Truth;
 import com.google.testing.compile.Compilation;
 import com.google.testing.compile.JavaFileObjects;
@@ -17,8 +20,8 @@
 import org.junit.runners.JUnit4;
 
 /**
- * Checks assertions on {@link com.bumptech.glide.annotation.GlideExtension}s for methods annotated
- * with {@link com.bumptech.glide.annotation.GlideType}.
+ * Checks assertions on {@link GlideExtension}s for methods annotated
+ * with {@link GlideType}.
  */
 // Ignore warnings since most methods use assertThrows.
 @SuppressWarnings("ResultOfMethodCallIgnored")
@@ -40,8 +43,8 @@ public void run() {
                         "Extension",
                         "package com.bumptech.glide.test;",
                         "import android.support.annotation.NonNull;",
-                        "import com.bumptech.glide.annotation.GlideExtension;",
-                        "import com.bumptech.glide.annotation.GlideType;",
+                        "import com.bumptech.glide4.annotation.GlideExtension;",
+                        "import com.bumptech.glide4.annotation.GlideType;",
                         "@GlideExtension",
                         "public class Extension {",
                         "  private Extension() {}",
@@ -73,8 +76,8 @@ public void run() {
                     JavaFileObjects.forSourceLines(
                         "Extension",
                         "package com.bumptech.glide.test;",
-                        "import com.bumptech.glide.annotation.GlideExtension;",
-                        "import com.bumptech.glide.annotation.GlideType;",
+                        "import com.bumptech.glide4.annotation.GlideExtension;",
+                        "import com.bumptech.glide4.annotation.GlideType;",
                         "@GlideExtension",
                         "public class Extension {",
                         "  private Extension() {}",
@@ -98,8 +101,8 @@ public void compilation_withAnnotatedStaticMethod_withRequestBuilderArg_succeeds
                 "package com.bumptech.glide.test;",
                 "import android.support.annotation.NonNull;",
                 "import com.bumptech.glide.RequestBuilder;",
-                "import com.bumptech.glide.annotation.GlideExtension;",
-                "import com.bumptech.glide.annotation.GlideType;",
+                "import com.bumptech.glide4.annotation.GlideExtension;",
+                "import com.bumptech.glide4.annotation.GlideType;",
                 "@GlideExtension",
                 "public class Extension {",
                 "  private Extension() {}",
@@ -124,8 +127,8 @@ public void compilation_withAnnotatedStaticMethod_withNonRequestBuilderArg_fails
                   "package com.bumptech.glide.test;",
                   "import android.support.annotation.NonNull;",
                   "import com.bumptech.glide.RequestBuilder;",
-                  "import com.bumptech.glide.annotation.GlideExtension;",
-                  "import com.bumptech.glide.annotation.GlideType;",
+                  "import com.bumptech.glide4.annotation.GlideExtension;",
+                  "import com.bumptech.glide4.annotation.GlideType;",
                   "@GlideExtension",
                   "public class WrongParameterTypeExtension {",
                   "  private WrongParameterTypeExtension() {}",
@@ -164,8 +167,8 @@ public void run() {
                         "package com.bumptech.glide.test;",
                         "import android.support.annotation.NonNull;",
                         "import com.bumptech.glide.RequestBuilder;",
-                        "import com.bumptech.glide.annotation.GlideExtension;",
-                        "import com.bumptech.glide.annotation.GlideType;",
+                        "import com.bumptech.glide4.annotation.GlideExtension;",
+                        "import com.bumptech.glide4.annotation.GlideType;",
                         "@GlideExtension",
                         "public class Extension {",
                         "  private Extension() {}",
@@ -193,8 +196,8 @@ public void compilation_withAnnotatedStaticMethod_overridingExistingType_fails()
                     "import android.graphics.drawable.Drawable;",
                     "import android.support.annotation.NonNull;",
                     "import com.bumptech.glide.RequestBuilder;",
-                    "import com.bumptech.glide.annotation.GlideExtension;",
-                    "import com.bumptech.glide.annotation.GlideType;",
+                    "import com.bumptech.glide4.annotation.GlideExtension;",
+                    "import com.bumptech.glide4.annotation.GlideType;",
                     "@GlideExtension",
                     "public class Extension {",
                     "  private Extension() {}",
@@ -230,8 +233,8 @@ public void compilation_withAnnotatedStaticMethod_returningRequestBuilder_succee
                     "package com.bumptech.glide.test;",
                     "import android.support.annotation.NonNull;",
                     "import com.bumptech.glide.RequestBuilder;",
-                    "import com.bumptech.glide.annotation.GlideExtension;",
-                    "import com.bumptech.glide.annotation.GlideType;",
+                    "import com.bumptech.glide4.annotation.GlideExtension;",
+                    "import com.bumptech.glide4.annotation.GlideType;",
                     "@GlideExtension",
                     "public class Extension {",
                     "  private Extension() {}",
@@ -257,8 +260,8 @@ public void compilation_withAnnotatedStaticMethod_returningNonRequestBuilder_fai
                   "package com.bumptech.glide.test;",
                   "import android.support.annotation.NonNull;",
                   "import com.bumptech.glide.RequestBuilder;",
-                  "import com.bumptech.glide.annotation.GlideExtension;",
-                  "import com.bumptech.glide.annotation.GlideType;",
+                  "import com.bumptech.glide4.annotation.GlideExtension;",
+                  "import com.bumptech.glide4.annotation.GlideType;",
                   "@GlideExtension",
                   "public class WrongReturnTypeExtension {",
                   "  private WrongReturnTypeExtension() {}",
@@ -290,8 +293,8 @@ public void compilation_withAnnotatedStaticMethod_returningBuilderWithIncorrectT
                   "package com.bumptech.glide.test;",
                   "import android.support.annotation.NonNull;",
                   "import com.bumptech.glide.RequestBuilder;",
-                  "import com.bumptech.glide.annotation.GlideExtension;",
-                  "import com.bumptech.glide.annotation.GlideType;",
+                  "import com.bumptech.glide4.annotation.GlideExtension;",
+                  "import com.bumptech.glide4.annotation.GlideType;",
                   "@GlideExtension",
                   "public class WrongBuilderTypeExtension {",
                   "  private WrongBuilderTypeExtension() {}",
@@ -332,8 +335,8 @@ public void run() {
                         "package com.bumptech.glide.test;",
                         "import android.support.annotation.NonNull;",
                         "import com.bumptech.glide.RequestBuilder;",
-                        "import com.bumptech.glide.annotation.GlideExtension;",
-                        "import com.bumptech.glide.annotation.GlideType;",
+                        "import com.bumptech.glide4.annotation.GlideExtension;",
+                        "import com.bumptech.glide4.annotation.GlideType;",
                         "@GlideExtension",
                         "public class Extension {",
                         "  private Extension() {}",
@@ -360,8 +363,8 @@ public void compilation_withAnnotatedStaticMethod_returningBuilder_nonBuilderPar
                   "package com.bumptech.glide.test;",
                   "import android.support.annotation.NonNull;",
                   "import com.bumptech.glide.RequestBuilder;",
-                  "import com.bumptech.glide.annotation.GlideExtension;",
-                  "import com.bumptech.glide.annotation.GlideType;",
+                  "import com.bumptech.glide4.annotation.GlideExtension;",
+                  "import com.bumptech.glide4.annotation.GlideType;",
                   "@GlideExtension",
                   "public class IncorrectParameterExtension {",
                   "  private IncorrectParameterExtension() {}",
@@ -393,8 +396,8 @@ public void compilation_withAnnotatedStaticMethod_returningRequestBuilder_missin
                     "Extension",
                     "package com.bumptech.glide.test;",
                     "import com.bumptech.glide.RequestBuilder;",
-                    "import com.bumptech.glide.annotation.GlideExtension;",
-                    "import com.bumptech.glide.annotation.GlideType;",
+                    "import com.bumptech.glide4.annotation.GlideExtension;",
+                    "import com.bumptech.glide4.annotation.GlideType;",
                     "@GlideExtension",
                     "public class Extension {",
                     "  private Extension() {}",
diff --git a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/MultipleAppGlideModuleTest.java b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/MultipleAppGlideModuleTest.java
index a80590d83..3d23fdc11 100644
--- a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/MultipleAppGlideModuleTest.java
+++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/MultipleAppGlideModuleTest.java
@@ -6,6 +6,7 @@
 
 import com.bumptech.glide.annotation.compiler.test.RegenerateResourcesRule;
 import com.bumptech.glide.annotation.compiler.test.Util;
+import com.bumptech.glide4.annotation.compiler.GlideAnnotationProcessor;
 import com.google.testing.compile.Compilation;
 import javax.tools.JavaFileObject;
 import org.junit.Rule;
diff --git a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/MultipleEmptyLibraryGlideModuleTest.java b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/MultipleEmptyLibraryGlideModuleTest.java
index b576c08a7..160430dde 100644
--- a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/MultipleEmptyLibraryGlideModuleTest.java
+++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/MultipleEmptyLibraryGlideModuleTest.java
@@ -7,6 +7,7 @@
 
 import com.bumptech.glide.annotation.compiler.test.RegenerateResourcesRule;
 import com.bumptech.glide.annotation.compiler.test.Util;
+import com.bumptech.glide4.annotation.compiler.GlideAnnotationProcessor;
 import com.google.common.truth.Truth;
 import com.google.testing.compile.Compilation;
 import java.io.IOException;
diff --git a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/test/Util.java b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/test/Util.java
index 64c4f9f08..08dfdb591 100644
--- a/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/test/Util.java
+++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/test/Util.java
@@ -6,10 +6,10 @@
 /** Test utilities. */
 public final class Util {
   private static final String REGENERATE_TEST_RESOURCES_PROPERTY_NAME =
-      "com.bumptech.glide.annotation.compiler.test.regenerate.path";
-  private static final String GLIDE_PACKAGE_NAME = "com.bumptech.glide";
+      "com.bumptech.glide4.annotation.compiler.test.regenerate.path";
+  private static final String GLIDE_PACKAGE_NAME = "com.bumptech.glide4";
   private static final String SUB_PACKAGE_NAME = qualified(GLIDE_PACKAGE_NAME, "test");
-  private static final String ANNOTATION_PACKAGE_NAME = "com.bumptech.glide.annotation.compiler";
+  private static final String ANNOTATION_PACKAGE_NAME = "com.bumptech.glide4.annotation.compiler";
   private static final String DEFAULT_APP_DIR_NAME = "EmptyAppGlideModuleTest";
   private static final String DEFAULT_LIBRARY_DIR_NAME = "EmptyLibraryGlideModuleTest";
   /**
diff --git a/annotation/compiler/test/src/test/resources/AppGlideModuleWithExcludesTest/AppModuleWithExcludes.java b/annotation/compiler/test/src/test/resources/AppGlideModuleWithExcludesTest/AppModuleWithExcludes.java
index f935829d6..34c5b11b1 100644
--- a/annotation/compiler/test/src/test/resources/AppGlideModuleWithExcludesTest/AppModuleWithExcludes.java
+++ b/annotation/compiler/test/src/test/resources/AppGlideModuleWithExcludesTest/AppModuleWithExcludes.java
@@ -1,7 +1,7 @@
 package com.bumptech.glide.test;
 
-import com.bumptech.glide.annotation.Excludes;
-import com.bumptech.glide.annotation.GlideModule;
+import com.bumptech.glide4.annotation.Excludes;
+import com.bumptech.glide4.annotation.GlideModule;
 import com.bumptech.glide.module.AppGlideModule;
 
 @GlideModule
diff --git a/annotation/compiler/test/src/test/resources/AppGlideModuleWithLibraryInPackageTest/AppModuleWithLibraryInPackage.java b/annotation/compiler/test/src/test/resources/AppGlideModuleWithLibraryInPackageTest/AppModuleWithLibraryInPackage.java
index 78dd983d2..64fdffdfb 100644
--- a/annotation/compiler/test/src/test/resources/AppGlideModuleWithLibraryInPackageTest/AppModuleWithLibraryInPackage.java
+++ b/annotation/compiler/test/src/test/resources/AppGlideModuleWithLibraryInPackageTest/AppModuleWithLibraryInPackage.java
@@ -1,7 +1,7 @@
 package com.bumptech.glide.test;
 
-import com.bumptech.glide.annotation.Excludes;
-import com.bumptech.glide.annotation.GlideModule;
+import com.bumptech.glide4.annotation.Excludes;
+import com.bumptech.glide4.annotation.GlideModule;
 import com.bumptech.glide.module.AppGlideModule;
 import com.bumptech.glide.test._package.LibraryModuleInPackage;
 
diff --git a/annotation/compiler/test/src/test/resources/AppGlideModuleWithLibraryInPackageTest/LibraryModuleInPackage.java b/annotation/compiler/test/src/test/resources/AppGlideModuleWithLibraryInPackageTest/LibraryModuleInPackage.java
index 88f305b24..220d90af2 100644
--- a/annotation/compiler/test/src/test/resources/AppGlideModuleWithLibraryInPackageTest/LibraryModuleInPackage.java
+++ b/annotation/compiler/test/src/test/resources/AppGlideModuleWithLibraryInPackageTest/LibraryModuleInPackage.java
@@ -1,7 +1,7 @@
 // _ in the name is important otherwise everything would work
 package com.bumptech.glide.test._package;
 
-import com.bumptech.glide.annotation.GlideModule;
+import com.bumptech.glide4.annotation.GlideModule;
 import com.bumptech.glide.module.LibraryGlideModule;
 
 @GlideModule
diff --git a/annotation/compiler/test/src/test/resources/AppGlideModuleWithMultipleExcludesTest/AppModuleWithMultipleExcludes.java b/annotation/compiler/test/src/test/resources/AppGlideModuleWithMultipleExcludesTest/AppModuleWithMultipleExcludes.java
index 94600d8e4..1409b37a5 100644
--- a/annotation/compiler/test/src/test/resources/AppGlideModuleWithMultipleExcludesTest/AppModuleWithMultipleExcludes.java
+++ b/annotation/compiler/test/src/test/resources/AppGlideModuleWithMultipleExcludesTest/AppModuleWithMultipleExcludes.java
@@ -1,7 +1,7 @@
 package com.bumptech.glide.test;
 
-import com.bumptech.glide.annotation.Excludes;
-import com.bumptech.glide.annotation.GlideModule;
+import com.bumptech.glide4.annotation.Excludes;
+import com.bumptech.glide4.annotation.GlideModule;
 import com.bumptech.glide.module.AppGlideModule;
 
 @GlideModule
diff --git a/annotation/compiler/test/src/test/resources/AppGlideModuleWithMultipleExcludesTest/EmptyLibraryModule1.java b/annotation/compiler/test/src/test/resources/AppGlideModuleWithMultipleExcludesTest/EmptyLibraryModule1.java
index 236008a91..cf3a16c1e 100644
--- a/annotation/compiler/test/src/test/resources/AppGlideModuleWithMultipleExcludesTest/EmptyLibraryModule1.java
+++ b/annotation/compiler/test/src/test/resources/AppGlideModuleWithMultipleExcludesTest/EmptyLibraryModule1.java
@@ -1,6 +1,6 @@
 package com.bumptech.glide.test;
 
-import com.bumptech.glide.annotation.GlideModule;
+import com.bumptech.glide4.annotation.GlideModule;
 import com.bumptech.glide.module.LibraryGlideModule;
 
 @GlideModule
diff --git a/annotation/compiler/test/src/test/resources/AppGlideModuleWithMultipleExcludesTest/EmptyLibraryModule2.java b/annotation/compiler/test/src/test/resources/AppGlideModuleWithMultipleExcludesTest/EmptyLibraryModule2.java
index 8a43eb292..16e7bf53c 100644
--- a/annotation/compiler/test/src/test/resources/AppGlideModuleWithMultipleExcludesTest/EmptyLibraryModule2.java
+++ b/annotation/compiler/test/src/test/resources/AppGlideModuleWithMultipleExcludesTest/EmptyLibraryModule2.java
@@ -1,6 +1,6 @@
 package com.bumptech.glide.test;
 
-import com.bumptech.glide.annotation.GlideModule;
+import com.bumptech.glide4.annotation.GlideModule;
 import com.bumptech.glide.module.LibraryGlideModule;
 
 @GlideModule
diff --git a/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/EmptyAppModule.java b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/EmptyAppModule.java
index 203f9df63..5c48a2d1d 100644
--- a/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/EmptyAppModule.java
+++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/EmptyAppModule.java
@@ -1,6 +1,6 @@
 package com.bumptech.glide.test;
 
-import com.bumptech.glide.annotation.GlideModule;
+import com.bumptech.glide4.annotation.GlideModule;
 import com.bumptech.glide.module.AppGlideModule;
 
 @GlideModule
diff --git a/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideApp.java b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideApp.java
index 881e98c1b..4b5ab3769 100644
--- a/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideApp.java
+++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideApp.java
@@ -11,6 +11,8 @@
 import android.view.View;
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.GlideBuilder;
+import com.bumptech.glide4.annotation.GlideExtension;
+
 import java.io.File;
 import java.lang.Deprecated;
 import java.lang.String;
@@ -19,7 +21,7 @@
  * The entry point for interacting with Glide for Applications
  *
  * <p>Includes all generated APIs from all
- * {@link com.bumptech.glide.annotation.GlideExtension}s in source and dependent libraries.
+ * {@link GlideExtension}s in source and dependent libraries.
  *
  * <p>This class is generated and should not be modified
  * @see Glide
diff --git a/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideOptions.java b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideOptions.java
index dea6e476f..07efa543c 100644
--- a/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideOptions.java
+++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideOptions.java
@@ -18,6 +18,8 @@
 import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
 import com.bumptech.glide.request.BaseRequestOptions;
 import com.bumptech.glide.request.RequestOptions;
+import com.bumptech.glide4.annotation.GlideExtension;
+
 import java.lang.Class;
 import java.lang.Cloneable;
 import java.lang.Deprecated;
@@ -26,7 +28,7 @@
 import java.lang.SuppressWarnings;
 
 /**
- * Automatically generated from {@link com.bumptech.glide.annotation.GlideExtension} annotated classes.
+ * Automatically generated from {@link GlideExtension} annotated classes.
  *
  * @see RequestOptions
  */
diff --git a/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideRequest.java b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideRequest.java
index 42346164b..f76641477 100644
--- a/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideRequest.java
+++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideRequest.java
@@ -25,6 +25,9 @@
 import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
 import com.bumptech.glide.request.BaseRequestOptions;
 import com.bumptech.glide.request.RequestListener;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
+
 import java.io.File;
 import java.lang.Class;
 import java.lang.Cloneable;
@@ -40,8 +43,8 @@
 /**
  * Contains all public methods from {@link RequestBuilder<TranscodeType>}, all options from
  * {@link com.bumptech.glide.request.RequestOptions} and all generated options from
- * {@link com.bumptech.glide.annotation.GlideOption} in annotated methods in
- * {@link com.bumptech.glide.annotation.GlideExtension} annotated classes.
+ * {@link GlideOption} in annotated methods in
+ * {@link GlideExtension} annotated classes.
  *
  * <p>Generated code, do not modify.
  *
diff --git a/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideRequests.java b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideRequests.java
index 9f8cd70cc..9013bdd58 100644
--- a/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideRequests.java
+++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideRequests.java
@@ -16,6 +16,9 @@
 import com.bumptech.glide.manager.RequestManagerTreeNode;
 import com.bumptech.glide.request.RequestListener;
 import com.bumptech.glide.request.RequestOptions;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideType;
+
 import java.io.File;
 import java.lang.Class;
 import java.lang.Deprecated;
@@ -27,8 +30,8 @@
 import java.net.URL;
 
 /**
- * Includes all additions from methods in {@link com.bumptech.glide.annotation.GlideExtension}s
- * annotated with {@link com.bumptech.glide.annotation.GlideType}
+ * Includes all additions from methods in {@link GlideExtension}s
+ * annotated with {@link GlideType}
  *
  * <p>Generated code, do not modify
  */
diff --git a/annotation/compiler/test/src/test/resources/EmptyLibraryGlideModuleTest/EmptyLibraryModule.java b/annotation/compiler/test/src/test/resources/EmptyLibraryGlideModuleTest/EmptyLibraryModule.java
index 60ad52260..e235748ce 100644
--- a/annotation/compiler/test/src/test/resources/EmptyLibraryGlideModuleTest/EmptyLibraryModule.java
+++ b/annotation/compiler/test/src/test/resources/EmptyLibraryGlideModuleTest/EmptyLibraryModule.java
@@ -1,6 +1,6 @@
 package com.bumptech.glide.test;
 
-import com.bumptech.glide.annotation.GlideModule;
+import com.bumptech.glide4.annotation.GlideModule;
 import com.bumptech.glide.module.LibraryGlideModule;
 
 @GlideModule
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/MemoizeStaticMethod/Extension.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/MemoizeStaticMethod/Extension.java
index 01453f331..7e325ea3c 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/MemoizeStaticMethod/Extension.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/MemoizeStaticMethod/Extension.java
@@ -1,8 +1,8 @@
 package com.bumptech.glide.test;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.annotation.GlideExtension;
-import com.bumptech.glide.annotation.GlideOption;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
 import com.bumptech.glide.request.BaseRequestOptions;
 
 @GlideExtension
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/MemoizeStaticMethod/GlideOptions.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/MemoizeStaticMethod/GlideOptions.java
index 24e38fddb..36422a663 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/MemoizeStaticMethod/GlideOptions.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/MemoizeStaticMethod/GlideOptions.java
@@ -18,6 +18,8 @@
 import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
 import com.bumptech.glide.request.BaseRequestOptions;
 import com.bumptech.glide.request.RequestOptions;
+import com.bumptech.glide4.annotation.GlideExtension;
+
 import java.lang.Class;
 import java.lang.Cloneable;
 import java.lang.Deprecated;
@@ -26,7 +28,7 @@
 import java.lang.SuppressWarnings;
 
 /**
- * Automatically generated from {@link com.bumptech.glide.annotation.GlideExtension} annotated classes.
+ * Automatically generated from {@link GlideExtension} annotated classes.
  *
  * @see RequestOptions
  * @see Extension
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/MemoizeStaticMethod/GlideRequest.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/MemoizeStaticMethod/GlideRequest.java
index f3edeea92..9e793c585 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/MemoizeStaticMethod/GlideRequest.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/MemoizeStaticMethod/GlideRequest.java
@@ -25,6 +25,9 @@
 import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
 import com.bumptech.glide.request.BaseRequestOptions;
 import com.bumptech.glide.request.RequestListener;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
+
 import java.io.File;
 import java.lang.Class;
 import java.lang.Cloneable;
@@ -40,8 +43,8 @@
 /**
  * Contains all public methods from {@link RequestBuilder<TranscodeType>}, all options from
  * {@link com.bumptech.glide.request.RequestOptions} and all generated options from
- * {@link com.bumptech.glide.annotation.GlideOption} in annotated methods in
- * {@link com.bumptech.glide.annotation.GlideExtension} annotated classes.
+ * {@link GlideOption} in annotated methods in
+ * {@link GlideExtension} annotated classes.
  *
  * <p>Generated code, do not modify.
  *
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtend/Extension.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtend/Extension.java
index 0104eaa9b..266fa8dda 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtend/Extension.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtend/Extension.java
@@ -1,8 +1,8 @@
 package com.bumptech.glide.test;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.annotation.GlideExtension;
-import com.bumptech.glide.annotation.GlideOption;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
 import com.bumptech.glide.request.BaseRequestOptions;
 
 @GlideExtension
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtend/GlideOptions.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtend/GlideOptions.java
index 48a2d8bd4..584d4be00 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtend/GlideOptions.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtend/GlideOptions.java
@@ -18,6 +18,8 @@
 import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
 import com.bumptech.glide.request.BaseRequestOptions;
 import com.bumptech.glide.request.RequestOptions;
+import com.bumptech.glide4.annotation.GlideExtension;
+
 import java.lang.Class;
 import java.lang.Cloneable;
 import java.lang.Deprecated;
@@ -26,7 +28,7 @@
 import java.lang.SuppressWarnings;
 
 /**
- * Automatically generated from {@link com.bumptech.glide.annotation.GlideExtension} annotated classes.
+ * Automatically generated from {@link GlideExtension} annotated classes.
  *
  * @see RequestOptions
  * @see Extension
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtend/GlideRequest.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtend/GlideRequest.java
index b15070a1b..bdb9d134a 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtend/GlideRequest.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtend/GlideRequest.java
@@ -25,6 +25,9 @@
 import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
 import com.bumptech.glide.request.BaseRequestOptions;
 import com.bumptech.glide.request.RequestListener;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
+
 import java.io.File;
 import java.lang.Class;
 import java.lang.Cloneable;
@@ -40,8 +43,8 @@
 /**
  * Contains all public methods from {@link RequestBuilder<TranscodeType>}, all options from
  * {@link com.bumptech.glide.request.RequestOptions} and all generated options from
- * {@link com.bumptech.glide.annotation.GlideOption} in annotated methods in
- * {@link com.bumptech.glide.annotation.GlideExtension} annotated classes.
+ * {@link GlideOption} in annotated methods in
+ * {@link GlideExtension} annotated classes.
  *
  * <p>Generated code, do not modify.
  *
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtendMultipleArguments/Extension.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtendMultipleArguments/Extension.java
index e92ece857..c7e591c54 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtendMultipleArguments/Extension.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtendMultipleArguments/Extension.java
@@ -1,8 +1,8 @@
 package com.bumptech.glide.test;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.annotation.GlideExtension;
-import com.bumptech.glide.annotation.GlideOption;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
 import com.bumptech.glide.request.BaseRequestOptions;
 
 @GlideExtension
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtendMultipleArguments/GlideOptions.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtendMultipleArguments/GlideOptions.java
index 0fe0aa379..e240614b0 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtendMultipleArguments/GlideOptions.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtendMultipleArguments/GlideOptions.java
@@ -18,6 +18,8 @@
 import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
 import com.bumptech.glide.request.BaseRequestOptions;
 import com.bumptech.glide.request.RequestOptions;
+import com.bumptech.glide4.annotation.GlideExtension;
+
 import java.lang.Class;
 import java.lang.Cloneable;
 import java.lang.Deprecated;
@@ -26,7 +28,7 @@
 import java.lang.SuppressWarnings;
 
 /**
- * Automatically generated from {@link com.bumptech.glide.annotation.GlideExtension} annotated classes.
+ * Automatically generated from {@link GlideExtension} annotated classes.
  *
  * @see RequestOptions
  * @see Extension
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtendMultipleArguments/GlideRequest.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtendMultipleArguments/GlideRequest.java
index f68d6f476..8bbccbc98 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtendMultipleArguments/GlideRequest.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideExtendMultipleArguments/GlideRequest.java
@@ -25,6 +25,9 @@
 import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
 import com.bumptech.glide.request.BaseRequestOptions;
 import com.bumptech.glide.request.RequestListener;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
+
 import java.io.File;
 import java.lang.Class;
 import java.lang.Cloneable;
@@ -40,8 +43,8 @@
 /**
  * Contains all public methods from {@link RequestBuilder<TranscodeType>}, all options from
  * {@link com.bumptech.glide.request.RequestOptions} and all generated options from
- * {@link com.bumptech.glide.annotation.GlideOption} in annotated methods in
- * {@link com.bumptech.glide.annotation.GlideExtension} annotated classes.
+ * {@link GlideOption} in annotated methods in
+ * {@link GlideExtension} annotated classes.
  *
  * <p>Generated code, do not modify.
  *
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideReplace/Extension.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideReplace/Extension.java
index 4467cf21f..882e396e3 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideReplace/Extension.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideReplace/Extension.java
@@ -1,8 +1,8 @@
 package com.bumptech.glide.test;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.annotation.GlideExtension;
-import com.bumptech.glide.annotation.GlideOption;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
 import com.bumptech.glide.request.BaseRequestOptions;
 
 @GlideExtension
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideReplace/GlideOptions.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideReplace/GlideOptions.java
index bd338d637..eae268a9c 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideReplace/GlideOptions.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideReplace/GlideOptions.java
@@ -18,6 +18,8 @@
 import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
 import com.bumptech.glide.request.BaseRequestOptions;
 import com.bumptech.glide.request.RequestOptions;
+import com.bumptech.glide4.annotation.GlideExtension;
+
 import java.lang.Class;
 import java.lang.Cloneable;
 import java.lang.Deprecated;
@@ -26,7 +28,7 @@
 import java.lang.SuppressWarnings;
 
 /**
- * Automatically generated from {@link com.bumptech.glide.annotation.GlideExtension} annotated classes.
+ * Automatically generated from {@link GlideExtension} annotated classes.
  *
  * @see RequestOptions
  * @see Extension
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideReplace/GlideRequest.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideReplace/GlideRequest.java
index f4d3bcaa3..10585e161 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideReplace/GlideRequest.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/OverrideReplace/GlideRequest.java
@@ -25,6 +25,9 @@
 import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
 import com.bumptech.glide.request.BaseRequestOptions;
 import com.bumptech.glide.request.RequestListener;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
+
 import java.io.File;
 import java.lang.Class;
 import java.lang.Cloneable;
@@ -40,8 +43,8 @@
 /**
  * Contains all public methods from {@link RequestBuilder<TranscodeType>}, all options from
  * {@link com.bumptech.glide.request.RequestOptions} and all generated options from
- * {@link com.bumptech.glide.annotation.GlideOption} in annotated methods in
- * {@link com.bumptech.glide.annotation.GlideExtension} annotated classes.
+ * {@link GlideOption} in annotated methods in
+ * {@link GlideExtension} annotated classes.
  *
  * <p>Generated code, do not modify.
  *
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/SkipStaticMethod/Extension.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/SkipStaticMethod/Extension.java
index f36597873..373e41bcb 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/SkipStaticMethod/Extension.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/SkipStaticMethod/Extension.java
@@ -1,8 +1,8 @@
 package com.bumptech.glide.test;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.annotation.GlideExtension;
-import com.bumptech.glide.annotation.GlideOption;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
 import com.bumptech.glide.request.BaseRequestOptions;
 
 @GlideExtension
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/SkipStaticMethod/GlideOptions.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/SkipStaticMethod/GlideOptions.java
index 1baed9ffa..4da139153 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/SkipStaticMethod/GlideOptions.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/SkipStaticMethod/GlideOptions.java
@@ -18,6 +18,8 @@
 import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
 import com.bumptech.glide.request.BaseRequestOptions;
 import com.bumptech.glide.request.RequestOptions;
+import com.bumptech.glide4.annotation.GlideExtension;
+
 import java.lang.Class;
 import java.lang.Cloneable;
 import java.lang.Deprecated;
@@ -26,7 +28,7 @@
 import java.lang.SuppressWarnings;
 
 /**
- * Automatically generated from {@link com.bumptech.glide.annotation.GlideExtension} annotated classes.
+ * Automatically generated from {@link GlideExtension} annotated classes.
  *
  * @see RequestOptions
  * @see Extension
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/SkipStaticMethod/GlideRequest.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/SkipStaticMethod/GlideRequest.java
index f3edeea92..9e793c585 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/SkipStaticMethod/GlideRequest.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/SkipStaticMethod/GlideRequest.java
@@ -25,6 +25,9 @@
 import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
 import com.bumptech.glide.request.BaseRequestOptions;
 import com.bumptech.glide.request.RequestListener;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
+
 import java.io.File;
 import java.lang.Class;
 import java.lang.Cloneable;
@@ -40,8 +43,8 @@
 /**
  * Contains all public methods from {@link RequestBuilder<TranscodeType>}, all options from
  * {@link com.bumptech.glide.request.RequestOptions} and all generated options from
- * {@link com.bumptech.glide.annotation.GlideOption} in annotated methods in
- * {@link com.bumptech.glide.annotation.GlideExtension} annotated classes.
+ * {@link GlideOption} in annotated methods in
+ * {@link GlideExtension} annotated classes.
  *
  * <p>Generated code, do not modify.
  *
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/StaticMethodName/Extension.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/StaticMethodName/Extension.java
index 45ccc3954..e4e7ceb80 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/StaticMethodName/Extension.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/StaticMethodName/Extension.java
@@ -1,8 +1,8 @@
 package com.bumptech.glide.test;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.annotation.GlideExtension;
-import com.bumptech.glide.annotation.GlideOption;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
 import com.bumptech.glide.request.BaseRequestOptions;
 
 @GlideExtension
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/StaticMethodName/GlideOptions.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/StaticMethodName/GlideOptions.java
index 32c1ab8b8..85cf99ffd 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/StaticMethodName/GlideOptions.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/StaticMethodName/GlideOptions.java
@@ -18,6 +18,8 @@
 import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
 import com.bumptech.glide.request.BaseRequestOptions;
 import com.bumptech.glide.request.RequestOptions;
+import com.bumptech.glide4.annotation.GlideExtension;
+
 import java.lang.Class;
 import java.lang.Cloneable;
 import java.lang.Deprecated;
@@ -26,7 +28,7 @@
 import java.lang.SuppressWarnings;
 
 /**
- * Automatically generated from {@link com.bumptech.glide.annotation.GlideExtension} annotated classes.
+ * Automatically generated from {@link GlideExtension} annotated classes.
  *
  * @see RequestOptions
  * @see Extension
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/StaticMethodName/GlideRequest.java b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/StaticMethodName/GlideRequest.java
index f3edeea92..9e793c585 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/StaticMethodName/GlideRequest.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/StaticMethodName/GlideRequest.java
@@ -25,6 +25,9 @@
 import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
 import com.bumptech.glide.request.BaseRequestOptions;
 import com.bumptech.glide.request.RequestListener;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
+
 import java.io.File;
 import java.lang.Class;
 import java.lang.Cloneable;
@@ -40,8 +43,8 @@
 /**
  * Contains all public methods from {@link RequestBuilder<TranscodeType>}, all options from
  * {@link com.bumptech.glide.request.RequestOptions} and all generated options from
- * {@link com.bumptech.glide.annotation.GlideOption} in annotated methods in
- * {@link com.bumptech.glide.annotation.GlideExtension} annotated classes.
+ * {@link GlideOption} in annotated methods in
+ * {@link GlideExtension} annotated classes.
  *
  * <p>Generated code, do not modify.
  *
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionWithOptionTest/ExtensionWithOption.java b/annotation/compiler/test/src/test/resources/GlideExtensionWithOptionTest/ExtensionWithOption.java
index a82329934..6bc22878d 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionWithOptionTest/ExtensionWithOption.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionWithOptionTest/ExtensionWithOption.java
@@ -1,8 +1,8 @@
 package com.bumptech.glide.test;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.annotation.GlideExtension;
-import com.bumptech.glide.annotation.GlideOption;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
 import com.bumptech.glide.request.BaseRequestOptions;
 
 @GlideExtension
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionWithOptionTest/GlideOptions.java b/annotation/compiler/test/src/test/resources/GlideExtensionWithOptionTest/GlideOptions.java
index 25d649038..26e0fbc10 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionWithOptionTest/GlideOptions.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionWithOptionTest/GlideOptions.java
@@ -18,6 +18,8 @@
 import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
 import com.bumptech.glide.request.BaseRequestOptions;
 import com.bumptech.glide.request.RequestOptions;
+import com.bumptech.glide4.annotation.GlideExtension;
+
 import java.lang.Class;
 import java.lang.Cloneable;
 import java.lang.Deprecated;
@@ -26,7 +28,7 @@
 import java.lang.SuppressWarnings;
 
 /**
- * Automatically generated from {@link com.bumptech.glide.annotation.GlideExtension} annotated classes.
+ * Automatically generated from {@link GlideExtension} annotated classes.
  *
  * @see RequestOptions
  * @see ExtensionWithOption
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionWithOptionTest/GlideRequest.java b/annotation/compiler/test/src/test/resources/GlideExtensionWithOptionTest/GlideRequest.java
index 95a2ffd7d..77772e2df 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionWithOptionTest/GlideRequest.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionWithOptionTest/GlideRequest.java
@@ -25,6 +25,9 @@
 import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
 import com.bumptech.glide.request.BaseRequestOptions;
 import com.bumptech.glide.request.RequestListener;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
+
 import java.io.File;
 import java.lang.Class;
 import java.lang.Cloneable;
@@ -40,8 +43,8 @@
 /**
  * Contains all public methods from {@link RequestBuilder<TranscodeType>}, all options from
  * {@link com.bumptech.glide.request.RequestOptions} and all generated options from
- * {@link com.bumptech.glide.annotation.GlideOption} in annotated methods in
- * {@link com.bumptech.glide.annotation.GlideExtension} annotated classes.
+ * {@link GlideOption} in annotated methods in
+ * {@link GlideExtension} annotated classes.
  *
  * <p>Generated code, do not modify.
  *
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionWithTypeTest/ExtensionWithType.java b/annotation/compiler/test/src/test/resources/GlideExtensionWithTypeTest/ExtensionWithType.java
index 1d58e6ff0..fd6671358 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionWithTypeTest/ExtensionWithType.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionWithTypeTest/ExtensionWithType.java
@@ -2,8 +2,8 @@
 
 import android.support.annotation.NonNull;
 import com.bumptech.glide.RequestBuilder;
-import com.bumptech.glide.annotation.GlideExtension;
-import com.bumptech.glide.annotation.GlideType;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideType;
 
 @GlideExtension
 public final class ExtensionWithType {
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionWithTypeTest/GlideOptions.java b/annotation/compiler/test/src/test/resources/GlideExtensionWithTypeTest/GlideOptions.java
index bedefc889..5063f7705 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionWithTypeTest/GlideOptions.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionWithTypeTest/GlideOptions.java
@@ -18,6 +18,8 @@
 import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
 import com.bumptech.glide.request.BaseRequestOptions;
 import com.bumptech.glide.request.RequestOptions;
+import com.bumptech.glide4.annotation.GlideExtension;
+
 import java.lang.Class;
 import java.lang.Cloneable;
 import java.lang.Deprecated;
@@ -26,7 +28,7 @@
 import java.lang.SuppressWarnings;
 
 /**
- * Automatically generated from {@link com.bumptech.glide.annotation.GlideExtension} annotated classes.
+ * Automatically generated from {@link GlideExtension} annotated classes.
  *
  * @see RequestOptions
  * @see ExtensionWithType
diff --git a/annotation/compiler/test/src/test/resources/GlideExtensionWithTypeTest/GlideRequests.java b/annotation/compiler/test/src/test/resources/GlideExtensionWithTypeTest/GlideRequests.java
index bb35a9fa8..059112a27 100644
--- a/annotation/compiler/test/src/test/resources/GlideExtensionWithTypeTest/GlideRequests.java
+++ b/annotation/compiler/test/src/test/resources/GlideExtensionWithTypeTest/GlideRequests.java
@@ -16,6 +16,9 @@
 import com.bumptech.glide.manager.RequestManagerTreeNode;
 import com.bumptech.glide.request.RequestListener;
 import com.bumptech.glide.request.RequestOptions;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideType;
+
 import java.io.File;
 import java.lang.Class;
 import java.lang.Deprecated;
@@ -28,8 +31,8 @@
 import java.net.URL;
 
 /**
- * Includes all additions from methods in {@link com.bumptech.glide.annotation.GlideExtension}s
- * annotated with {@link com.bumptech.glide.annotation.GlideType}
+ * Includes all additions from methods in {@link GlideExtension}s
+ * annotated with {@link GlideType}
  *
  * <p>Generated code, do not modify
  */
diff --git a/annotation/compiler/test/src/test/resources/MultipleAppGlideModuleTest/EmptyAppModule1.java b/annotation/compiler/test/src/test/resources/MultipleAppGlideModuleTest/EmptyAppModule1.java
index a05259d66..9deee5917 100644
--- a/annotation/compiler/test/src/test/resources/MultipleAppGlideModuleTest/EmptyAppModule1.java
+++ b/annotation/compiler/test/src/test/resources/MultipleAppGlideModuleTest/EmptyAppModule1.java
@@ -1,6 +1,6 @@
 package com.bumptech.glide.test;
 
-import com.bumptech.glide.annotation.GlideModule;
+import com.bumptech.glide4.annotation.GlideModule;
 import com.bumptech.glide.module.AppGlideModule;
 
 @GlideModule
diff --git a/annotation/compiler/test/src/test/resources/MultipleAppGlideModuleTest/EmptyAppModule2.java b/annotation/compiler/test/src/test/resources/MultipleAppGlideModuleTest/EmptyAppModule2.java
index fb46c0c13..084f8046e 100644
--- a/annotation/compiler/test/src/test/resources/MultipleAppGlideModuleTest/EmptyAppModule2.java
+++ b/annotation/compiler/test/src/test/resources/MultipleAppGlideModuleTest/EmptyAppModule2.java
@@ -1,6 +1,6 @@
 package com.bumptech.glide.test;
 
-import com.bumptech.glide.annotation.GlideModule;
+import com.bumptech.glide4.annotation.GlideModule;
 import com.bumptech.glide.module.AppGlideModule;
 
 @GlideModule
diff --git a/annotation/compiler/test/src/test/resources/MultipleEmptyLibraryGlideModuleTest/EmptyLibraryModule1.java b/annotation/compiler/test/src/test/resources/MultipleEmptyLibraryGlideModuleTest/EmptyLibraryModule1.java
index 236008a91..cf3a16c1e 100644
--- a/annotation/compiler/test/src/test/resources/MultipleEmptyLibraryGlideModuleTest/EmptyLibraryModule1.java
+++ b/annotation/compiler/test/src/test/resources/MultipleEmptyLibraryGlideModuleTest/EmptyLibraryModule1.java
@@ -1,6 +1,6 @@
 package com.bumptech.glide.test;
 
-import com.bumptech.glide.annotation.GlideModule;
+import com.bumptech.glide4.annotation.GlideModule;
 import com.bumptech.glide.module.LibraryGlideModule;
 
 @GlideModule
diff --git a/annotation/compiler/test/src/test/resources/MultipleEmptyLibraryGlideModuleTest/EmptyLibraryModule2.java b/annotation/compiler/test/src/test/resources/MultipleEmptyLibraryGlideModuleTest/EmptyLibraryModule2.java
index 8a43eb292..16e7bf53c 100644
--- a/annotation/compiler/test/src/test/resources/MultipleEmptyLibraryGlideModuleTest/EmptyLibraryModule2.java
+++ b/annotation/compiler/test/src/test/resources/MultipleEmptyLibraryGlideModuleTest/EmptyLibraryModule2.java
@@ -1,6 +1,6 @@
 package com.bumptech.glide.test;
 
-import com.bumptech.glide.annotation.GlideModule;
+import com.bumptech.glide4.annotation.GlideModule;
 import com.bumptech.glide.module.LibraryGlideModule;
 
 @GlideModule
diff --git a/annotation/src/main/java/com/bumptech/glide/annotation/Excludes.java b/annotation/src/main/java/com/bumptech/glide4/annotation/Excludes.java
similarity index 93%
rename from annotation/src/main/java/com/bumptech/glide/annotation/Excludes.java
rename to annotation/src/main/java/com/bumptech/glide4/annotation/Excludes.java
index 13de814b2..fbf00f8f4 100644
--- a/annotation/src/main/java/com/bumptech/glide/annotation/Excludes.java
+++ b/annotation/src/main/java/com/bumptech/glide4/annotation/Excludes.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.annotation;
+package com.bumptech.glide4.annotation;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
diff --git a/annotation/src/main/java/com/bumptech/glide/annotation/GlideExtension.java b/annotation/src/main/java/com/bumptech/glide4/annotation/GlideExtension.java
similarity index 89%
rename from annotation/src/main/java/com/bumptech/glide/annotation/GlideExtension.java
rename to annotation/src/main/java/com/bumptech/glide4/annotation/GlideExtension.java
index bb525c849..dbe2450ad 100644
--- a/annotation/src/main/java/com/bumptech/glide/annotation/GlideExtension.java
+++ b/annotation/src/main/java/com/bumptech/glide4/annotation/GlideExtension.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.annotation;
+package com.bumptech.glide4.annotation;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
diff --git a/annotation/src/main/java/com/bumptech/glide/annotation/GlideModule.java b/annotation/src/main/java/com/bumptech/glide4/annotation/GlideModule.java
similarity index 94%
rename from annotation/src/main/java/com/bumptech/glide/annotation/GlideModule.java
rename to annotation/src/main/java/com/bumptech/glide4/annotation/GlideModule.java
index dc91418e2..ad0813c19 100644
--- a/annotation/src/main/java/com/bumptech/glide/annotation/GlideModule.java
+++ b/annotation/src/main/java/com/bumptech/glide4/annotation/GlideModule.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.annotation;
+package com.bumptech.glide4.annotation;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
diff --git a/annotation/src/main/java/com/bumptech/glide/annotation/GlideOption.java b/annotation/src/main/java/com/bumptech/glide4/annotation/GlideOption.java
similarity index 98%
rename from annotation/src/main/java/com/bumptech/glide/annotation/GlideOption.java
rename to annotation/src/main/java/com/bumptech/glide4/annotation/GlideOption.java
index 58197a802..b29afa6a8 100644
--- a/annotation/src/main/java/com/bumptech/glide/annotation/GlideOption.java
+++ b/annotation/src/main/java/com/bumptech/glide4/annotation/GlideOption.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.annotation;
+package com.bumptech.glide4.annotation;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
@@ -16,7 +16,7 @@
  * <p>Static equivalents of annotated methods will also be generated.
  *
  * <p>Methods with this annotation will only be found if they belong to classes annotated with
- * {@link GlideExtension}.
+ * {@link com.bumptech.glide4.annotation.GlideExtension}.
  *
  * <p>The preferred way of writing extension methods returns the provided
  * {@code com.bumptech.glide.request.RequestOptions} object with one or more methods called on it.
diff --git a/annotation/src/main/java/com/bumptech/glide/annotation/GlideType.java b/annotation/src/main/java/com/bumptech/glide4/annotation/GlideType.java
similarity index 86%
rename from annotation/src/main/java/com/bumptech/glide/annotation/GlideType.java
rename to annotation/src/main/java/com/bumptech/glide4/annotation/GlideType.java
index d3538d99b..a383807f0 100644
--- a/annotation/src/main/java/com/bumptech/glide/annotation/GlideType.java
+++ b/annotation/src/main/java/com/bumptech/glide4/annotation/GlideType.java
@@ -1,4 +1,7 @@
-package com.bumptech.glide.annotation;
+package com.bumptech.glide4.annotation;
+
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideModule;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
@@ -6,7 +9,7 @@
 import java.lang.annotation.Target;
 
 /**
- * Identifies methods in {@link GlideExtension} annotated classes that extend
+ * Identifies methods in {@link com.bumptech.glide4.annotation.GlideExtension} annotated classes that extend
  * {@code com.bumptech.glide.RequestManager}.
  *
  * <p>If one or more method is found with this annotation, an additional API entry point that
diff --git a/annotation/src/main/java/com/bumptech/glide/annotation/compiler/Index.java b/annotation/src/main/java/com/bumptech/glide4/annotation/compiler/Index.java
similarity index 92%
rename from annotation/src/main/java/com/bumptech/glide/annotation/compiler/Index.java
rename to annotation/src/main/java/com/bumptech/glide4/annotation/compiler/Index.java
index 81ba54ae1..6d604319c 100644
--- a/annotation/src/main/java/com/bumptech/glide/annotation/compiler/Index.java
+++ b/annotation/src/main/java/com/bumptech/glide4/annotation/compiler/Index.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.annotation.compiler;
+package com.bumptech.glide4.annotation.compiler;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
diff --git a/build.gradle b/build.gradle
index ea8d78df5..705a4904e 100644
--- a/build.gradle
+++ b/build.gradle
@@ -3,6 +3,7 @@ import org.gradle.api.tasks.testing.logging.TestExceptionFormat
 
 buildscript {
     repositories {
+        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
         google()
         jcenter()
         maven {
@@ -34,6 +35,7 @@ if (JavaVersion.current().isJava8Compatible()) {
 subprojects { project ->
 
     repositories {
+        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
         google()
         jcenter()
         maven {
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/AsBytesTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/AsBytesTest.java
index fdc9d34cd..df0d30705 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/AsBytesTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/AsBytesTest.java
@@ -14,6 +14,7 @@
 import com.bumptech.glide.test.GlideApp;
 import com.bumptech.glide.test.ResourceIds;
 import com.bumptech.glide.test.TearDownGlide;
+import com.bumptech.glide4.Glide;
 import com.google.common.io.ByteStreams;
 import java.io.BufferedOutputStream;
 import java.io.File;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/AsFileTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/AsFileTest.java
index 364ef5150..b4f6264b4 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/AsFileTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/AsFileTest.java
@@ -7,7 +7,7 @@
 import android.content.Context;
 import androidx.test.InstrumentationRegistry;
 import androidx.test.runner.AndroidJUnit4;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
+import com.bumptech.glide4.load.engine.DiskCacheStrategy;
 import com.bumptech.glide.test.ConcurrencyHelper;
 import com.bumptech.glide.test.GlideApp;
 import com.bumptech.glide.test.MockModelLoader;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/CachingTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/CachingTest.java
index 03f2e9298..7bb2a902c 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/CachingTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/CachingTest.java
@@ -21,15 +21,17 @@
 import android.widget.ImageView;
 import androidx.test.InstrumentationRegistry;
 import androidx.test.runner.AndroidJUnit4;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
-import com.bumptech.glide.load.engine.cache.LruResourceCache;
-import com.bumptech.glide.load.engine.cache.MemoryCacheAdapter;
-import com.bumptech.glide.load.engine.executor.GlideExecutor;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.engine.DiskCacheStrategy;
+import com.bumptech.glide4.load.engine.cache.LruResourceCache;
+import com.bumptech.glide4.load.engine.cache.MemoryCacheAdapter;
+import com.bumptech.glide4.load.engine.executor.GlideExecutor;
 import com.bumptech.glide.load.engine.executor.MockGlideExecutor;
-import com.bumptech.glide.request.FutureTarget;
-import com.bumptech.glide.request.RequestListener;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.request.FutureTarget;
+import com.bumptech.glide4.request.RequestListener;
+import com.bumptech.glide4.request.target.Target;
 import com.bumptech.glide.test.BitmapSubject;
 import com.bumptech.glide.test.ConcurrencyHelper;
 import com.bumptech.glide.test.GlideApp;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/DataUriTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/DataUriTest.java
index 014d0942b..7ede54280 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/DataUriTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/DataUriTest.java
@@ -15,7 +15,8 @@
 import com.bumptech.glide.test.ConcurrencyHelper;
 import com.bumptech.glide.test.ResourceIds;
 import com.bumptech.glide.test.TearDownGlide;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.util.Preconditions;
 import java.io.ByteArrayOutputStream;
 import org.junit.Rule;
 import org.junit.Test;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/DownsampleVideoTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/DownsampleVideoTest.java
index d84b55ac8..377eb5be5 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/DownsampleVideoTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/DownsampleVideoTest.java
@@ -8,8 +8,8 @@
 import android.os.Build;
 import androidx.test.InstrumentationRegistry;
 import androidx.test.runner.AndroidJUnit4;
-import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.load.resource.bitmap.DownsampleStrategy;
+import com.bumptech.glide4.request.target.Target;
 import com.bumptech.glide.test.ConcurrencyHelper;
 import com.bumptech.glide.test.GlideApp;
 import com.bumptech.glide.test.ResourceIds;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/DrawableTransformationTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/DrawableTransformationTest.java
index 033aecfec..be5e08cbb 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/DrawableTransformationTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/DrawableTransformationTest.java
@@ -15,9 +15,10 @@
 import android.graphics.drawable.Drawable;
 import androidx.test.InstrumentationRegistry;
 import androidx.test.runner.AndroidJUnit4;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.resource.bitmap.TransformationUtils;
-import com.bumptech.glide.request.RequestOptions;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.resource.bitmap.TransformationUtils;
+import com.bumptech.glide4.request.RequestOptions;
 import com.bumptech.glide.test.BitmapSubject;
 import com.bumptech.glide.test.GlideApp;
 import java.util.concurrent.ExecutionException;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/ErrorHandlingTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/ErrorHandlingTest.java
index 2e6dcbb74..328e665de 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/ErrorHandlingTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/ErrorHandlingTest.java
@@ -15,16 +15,18 @@
 import android.support.annotation.Nullable;
 import androidx.test.InstrumentationRegistry;
 import androidx.test.runner.AndroidJUnit4;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.EncodeStrategy;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceEncoder;
-import com.bumptech.glide.load.engine.GlideException;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.executor.GlideExecutor;
-import com.bumptech.glide.load.engine.executor.GlideExecutor.UncaughtThrowableStrategy;
-import com.bumptech.glide.request.FutureTarget;
-import com.bumptech.glide.request.RequestListener;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.EncodeStrategy;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceEncoder;
+import com.bumptech.glide4.load.engine.GlideException;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.executor.GlideExecutor;
+import com.bumptech.glide4.load.engine.executor.GlideExecutor.UncaughtThrowableStrategy;
+import com.bumptech.glide4.request.FutureTarget;
+import com.bumptech.glide4.request.RequestListener;
 import com.bumptech.glide.test.ConcurrencyHelper;
 import com.bumptech.glide.test.ResourceIds;
 import com.bumptech.glide.test.TearDownGlide;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/ExternallyClearedDiskCacheTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/ExternallyClearedDiskCacheTest.java
index 5945ef428..0544fc550 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/ExternallyClearedDiskCacheTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/ExternallyClearedDiskCacheTest.java
@@ -7,10 +7,12 @@
 import android.graphics.drawable.Drawable;
 import androidx.test.InstrumentationRegistry;
 import androidx.test.runner.AndroidJUnit4;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.engine.cache.DiskCache;
-import com.bumptech.glide.load.engine.cache.DiskCache.Factory;
-import com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.engine.cache.DiskCache;
+import com.bumptech.glide4.load.engine.cache.DiskCache.Factory;
+import com.bumptech.glide4.load.engine.cache.DiskLruCacheWrapper;
 import com.bumptech.glide.test.ConcurrencyHelper;
 import com.bumptech.glide.test.ResourceIds;
 import com.bumptech.glide.test.ResourceIds.raw;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/LoadBitmapTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/LoadBitmapTest.java
index f00da78c7..d248641a7 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/LoadBitmapTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/LoadBitmapTest.java
@@ -17,21 +17,23 @@
 import android.graphics.drawable.Drawable;
 import androidx.test.InstrumentationRegistry;
 import androidx.test.runner.AndroidJUnit4;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool;
-import com.bumptech.glide.load.engine.cache.LruResourceCache;
-import com.bumptech.glide.load.engine.cache.MemoryCacheAdapter;
-import com.bumptech.glide.load.engine.executor.GlideExecutor;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.engine.DiskCacheStrategy;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPoolAdapter;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruBitmapPool;
+import com.bumptech.glide4.load.engine.cache.LruResourceCache;
+import com.bumptech.glide4.load.engine.cache.MemoryCacheAdapter;
+import com.bumptech.glide4.load.engine.executor.GlideExecutor;
 import com.bumptech.glide.load.engine.executor.MockGlideExecutor;
-import com.bumptech.glide.request.RequestListener;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.request.RequestListener;
+import com.bumptech.glide4.request.target.Target;
 import com.bumptech.glide.test.ConcurrencyHelper;
 import com.bumptech.glide.test.GlideApp;
 import com.bumptech.glide.test.ResourceIds;
 import com.bumptech.glide.test.TearDownGlide;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.util.Util;
 import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/LoadBytesTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/LoadBytesTest.java
index db3802c31..6611df71c 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/LoadBytesTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/LoadBytesTest.java
@@ -21,12 +21,14 @@
 import android.widget.ImageView;
 import androidx.test.InstrumentationRegistry;
 import androidx.test.runner.AndroidJUnit4;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
-import com.bumptech.glide.load.engine.executor.GlideExecutor;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.engine.DiskCacheStrategy;
+import com.bumptech.glide4.load.engine.executor.GlideExecutor;
 import com.bumptech.glide.load.engine.executor.MockGlideExecutor;
-import com.bumptech.glide.request.RequestListener;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.request.RequestListener;
+import com.bumptech.glide4.request.target.Target;
 import com.bumptech.glide.test.BitmapSubject;
 import com.bumptech.glide.test.ConcurrencyHelper;
 import com.bumptech.glide.test.GlideApp;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/LoadDrawableTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/LoadDrawableTest.java
index 20756248d..0239c7393 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/LoadDrawableTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/LoadDrawableTest.java
@@ -15,21 +15,23 @@
 import android.graphics.drawable.Drawable;
 import androidx.test.InstrumentationRegistry;
 import androidx.test.runner.AndroidJUnit4;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool;
-import com.bumptech.glide.load.engine.cache.LruResourceCache;
-import com.bumptech.glide.load.engine.cache.MemoryCacheAdapter;
-import com.bumptech.glide.load.engine.executor.GlideExecutor;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.engine.DiskCacheStrategy;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPoolAdapter;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruBitmapPool;
+import com.bumptech.glide4.load.engine.cache.LruResourceCache;
+import com.bumptech.glide4.load.engine.cache.MemoryCacheAdapter;
+import com.bumptech.glide4.load.engine.executor.GlideExecutor;
 import com.bumptech.glide.load.engine.executor.MockGlideExecutor;
-import com.bumptech.glide.request.RequestListener;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.request.RequestListener;
+import com.bumptech.glide4.request.target.Target;
 import com.bumptech.glide.test.ConcurrencyHelper;
 import com.bumptech.glide.test.GlideApp;
 import com.bumptech.glide.test.ResourceIds;
 import com.bumptech.glide.test.TearDownGlide;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.util.Util;
 import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/LoadResourcesWithDownsamplerTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/LoadResourcesWithDownsamplerTest.java
index 38ef87b5c..a8353b5bd 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/LoadResourcesWithDownsamplerTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/LoadResourcesWithDownsamplerTest.java
@@ -15,15 +15,17 @@
 import android.support.annotation.NonNull;
 import androidx.test.InstrumentationRegistry;
 import androidx.test.runner.AndroidJUnit4;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.DecodeFormat;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoaderFactory;
-import com.bumptech.glide.load.model.MultiModelLoaderFactory;
-import com.bumptech.glide.load.resource.bitmap.Downsampler;
-import com.bumptech.glide.signature.ObjectKey;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.DecodeFormat;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.model.MultiModelLoaderFactory;
+import com.bumptech.glide4.load.resource.bitmap.Downsampler;
+import com.bumptech.glide4.signature.ObjectKey;
 import com.bumptech.glide.test.ConcurrencyHelper;
 import com.bumptech.glide.test.GlideApp;
 import com.bumptech.glide.test.ResourceIds;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/LoadVideoResourceTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/LoadVideoResourceTest.java
index 6a559af37..941c195fb 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/LoadVideoResourceTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/LoadVideoResourceTest.java
@@ -16,6 +16,8 @@
 import com.bumptech.glide.test.TearDownGlide;
 import java.io.IOException;
 import java.util.concurrent.TimeUnit;
+
+import com.bumptech.glide4.Glide;
 import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/NonBitmapDrawableResourcesTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/NonBitmapDrawableResourcesTest.java
index efc1fa5d2..03417713b 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/NonBitmapDrawableResourcesTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/NonBitmapDrawableResourcesTest.java
@@ -1,7 +1,7 @@
 package com.bumptech.glide;
 
-import static com.bumptech.glide.request.RequestOptions.bitmapTransform;
-import static com.bumptech.glide.request.RequestOptions.centerCropTransform;
+import static com.bumptech.glide4.request.RequestOptions.bitmapTransform;
+import static com.bumptech.glide4.request.RequestOptions.centerCropTransform;
 import static com.google.common.truth.Truth.assertThat;
 import static org.junit.Assert.assertThrows;
 
@@ -18,7 +18,8 @@
 import android.net.Uri;
 import androidx.test.InstrumentationRegistry;
 import androidx.test.runner.AndroidJUnit4;
-import com.bumptech.glide.load.resource.bitmap.RoundedCorners;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.load.resource.bitmap.RoundedCorners;
 import com.bumptech.glide.test.ResourceIds;
 import com.bumptech.glide.test.TearDownGlide;
 import java.util.HashSet;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/PausedRequestsTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/PausedRequestsTest.java
index a87d44a81..bf5b2d4f5 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/PausedRequestsTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/PausedRequestsTest.java
@@ -12,11 +12,13 @@
 import com.bumptech.glide.test.GlideRequests;
 import com.bumptech.glide.test.ResourceIds;
 import com.bumptech.glide.test.TearDownGlide;
+import com.bumptech.glide4.RequestManager;
+import com.bumptech.glide4.request.Request;
 import org.junit.Rule;
 import org.junit.Test;
 
 /**
- * Tests how {@link com.bumptech.glide.request.Request}s behave when the corresponding
+ * Tests how {@link Request}s behave when the corresponding
  * {@link RequestManager} is paused.
  */
 public final class PausedRequestsTest {
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/RequestManagerTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/RequestManagerTest.java
index 5a9167a85..ebc6e623d 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/RequestManagerTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/RequestManagerTest.java
@@ -6,10 +6,12 @@
 import android.widget.ImageView;
 import androidx.test.InstrumentationRegistry;
 import androidx.test.runner.AndroidJUnit4;
-import com.bumptech.glide.manager.Lifecycle;
-import com.bumptech.glide.manager.LifecycleListener;
-import com.bumptech.glide.manager.RequestManagerTreeNode;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.RequestManager;
+import com.bumptech.glide4.manager.Lifecycle;
+import com.bumptech.glide4.manager.LifecycleListener;
+import com.bumptech.glide4.manager.RequestManagerTreeNode;
+import com.bumptech.glide4.request.target.Target;
 import com.bumptech.glide.test.ConcurrencyHelper;
 import com.bumptech.glide.test.ResourceIds;
 import com.bumptech.glide.test.ResourceIds.raw;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/RequestTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/RequestTest.java
index 91e1c14b2..76a9444de 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/RequestTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/RequestTest.java
@@ -14,9 +14,11 @@
 import android.widget.ImageView;
 import androidx.test.InstrumentationRegistry;
 import androidx.test.runner.AndroidJUnit4;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.engine.executor.GlideExecutor;
-import com.bumptech.glide.request.RequestListener;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.engine.executor.GlideExecutor;
+import com.bumptech.glide4.request.RequestListener;
 import com.bumptech.glide.test.ConcurrencyHelper;
 import com.bumptech.glide.test.GlideApp;
 import com.bumptech.glide.test.ResourceIds;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/RoundedCornersRegressionTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/RoundedCornersRegressionTest.java
index 3e59c4b22..b3b54bf42 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/RoundedCornersRegressionTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/RoundedCornersRegressionTest.java
@@ -8,7 +8,8 @@
 import android.graphics.Color;
 import androidx.test.InstrumentationRegistry;
 import androidx.test.runner.AndroidJUnit4;
-import com.bumptech.glide.load.resource.bitmap.RoundedCorners;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.load.resource.bitmap.RoundedCorners;
 import com.bumptech.glide.test.BitmapRegressionTester;
 import com.bumptech.glide.test.CanonicalBitmap;
 import com.bumptech.glide.test.GlideApp;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/WideGamutTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/WideGamutTest.java
index c1b532f3a..11f531ae9 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/WideGamutTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/WideGamutTest.java
@@ -12,10 +12,12 @@
 import android.os.Build;
 import androidx.test.InstrumentationRegistry;
 import androidx.test.runner.AndroidJUnit4;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool;
-import com.bumptech.glide.load.resource.bitmap.Downsampler;
-import com.bumptech.glide.load.resource.bitmap.RoundedCorners;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruBitmapPool;
+import com.bumptech.glide4.load.resource.bitmap.Downsampler;
+import com.bumptech.glide4.load.resource.bitmap.RoundedCorners;
 import com.bumptech.glide.test.ConcurrencyHelper;
 import com.bumptech.glide.test.GlideApp;
 import com.bumptech.glide.test.ResourceIds;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/load/engine/executor/MockGlideExecutor.java b/instrumentation/src/androidTest/java/com/bumptech/glide/load/engine/executor/MockGlideExecutor.java
index 94ef1782c..3051783b2 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/load/engine/executor/MockGlideExecutor.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/load/engine/executor/MockGlideExecutor.java
@@ -3,6 +3,7 @@
 import android.os.StrictMode;
 import android.support.annotation.NonNull;
 import android.support.annotation.VisibleForTesting;
+import com.bumptech.glide4.load.engine.executor.GlideExecutor;
 import com.google.common.util.concurrent.ForwardingExecutorService;
 import com.google.common.util.concurrent.MoreExecutors;
 import java.util.concurrent.Callable;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/DownsamplerEmulatorTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/DownsamplerEmulatorTest.java
index bdc7fa0fd..f1fda5d0c 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/DownsamplerEmulatorTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/DownsamplerEmulatorTest.java
@@ -20,12 +20,12 @@
 import android.support.annotation.Nullable;
 import android.util.DisplayMetrics;
 import androidx.test.runner.AndroidJUnit4;
-import com.bumptech.glide.load.ImageHeaderParser;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool;
+import com.bumptech.glide4.load.ImageHeaderParser;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPoolAdapter;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruArrayPool;
 import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
@@ -33,6 +33,10 @@
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
+
+import com.bumptech.glide4.load.resource.bitmap.DefaultImageHeaderParser;
+import com.bumptech.glide4.load.resource.bitmap.DownsampleStrategy;
+import com.bumptech.glide4.load.resource.bitmap.Downsampler;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifDrawableTest.java b/instrumentation/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifDrawableTest.java
index 9d5bddd32..2485bd998 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifDrawableTest.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifDrawableTest.java
@@ -12,14 +12,15 @@
 import androidx.test.InstrumentationRegistry;
 import androidx.test.rule.GrantPermissionRule;
 import androidx.test.runner.AndroidJUnit4;
-import com.bumptech.glide.load.resource.gif.GifDrawable.GifState;
-import com.bumptech.glide.load.resource.gif.GifFrameLoader.OnEveryFrameListener;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.load.resource.gif.GifDrawable.GifState;
+import com.bumptech.glide4.load.resource.gif.GifFrameLoader.OnEveryFrameListener;
+import com.bumptech.glide4.request.target.Target;
 import com.bumptech.glide.test.ConcurrencyHelper;
 import com.bumptech.glide.test.GlideApp;
 import com.bumptech.glide.test.ResourceIds;
 import com.bumptech.glide.test.TearDownGlide;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.util.Preconditions;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.ExecutionException;
 import org.junit.Before;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/test/BitmapRegressionTester.java b/instrumentation/src/androidTest/java/com/bumptech/glide/test/BitmapRegressionTester.java
index fa8a62338..48640d2d3 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/test/BitmapRegressionTester.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/BitmapRegressionTester.java
@@ -8,7 +8,7 @@
 import android.os.Environment;
 import android.support.annotation.Nullable;
 import androidx.test.InstrumentationRegistry;
-import com.bumptech.glide.RequestBuilder;
+import com.bumptech.glide4.RequestBuilder;
 import java.io.BufferedOutputStream;
 import java.io.File;
 import java.io.FileOutputStream;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/test/CanonicalBitmap.java b/instrumentation/src/androidTest/java/com/bumptech/glide/test/CanonicalBitmap.java
index d990cf4f8..378f2e586 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/test/CanonicalBitmap.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/CanonicalBitmap.java
@@ -6,7 +6,7 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import androidx.test.InstrumentationRegistry;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.util.Preconditions;
 
 public final class CanonicalBitmap {
   @Nullable
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/test/ConcurrencyHelper.java b/instrumentation/src/androidTest/java/com/bumptech/glide/test/ConcurrencyHelper.java
index 20888d70a..e541a33a9 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/test/ConcurrencyHelper.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/ConcurrencyHelper.java
@@ -8,15 +8,15 @@
 import android.support.annotation.Nullable;
 import android.widget.ImageView;
 import androidx.test.InstrumentationRegistry;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.RequestBuilder;
-import com.bumptech.glide.request.FutureTarget;
-import com.bumptech.glide.request.Request;
-import com.bumptech.glide.request.target.DrawableImageViewTarget;
-import com.bumptech.glide.request.target.SizeReadyCallback;
-import com.bumptech.glide.request.target.Target;
-import com.bumptech.glide.request.transition.Transition;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.RequestBuilder;
+import com.bumptech.glide4.request.FutureTarget;
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.request.target.DrawableImageViewTarget;
+import com.bumptech.glide4.request.target.SizeReadyCallback;
+import com.bumptech.glide4.request.target.Target;
+import com.bumptech.glide4.request.transition.Transition;
+import com.bumptech.glide4.util.Preconditions;
 import java.util.concurrent.Callable;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.ExecutionException;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/test/Matchers.java b/instrumentation/src/androidTest/java/com/bumptech/glide/test/Matchers.java
index d941793ea..c8102ac10 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/test/Matchers.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/Matchers.java
@@ -4,7 +4,7 @@
 
 import android.graphics.Bitmap;
 import android.graphics.drawable.Drawable;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.request.target.Target;
 
 /**
  * Mockito matchers for various common classes.
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/test/MockModelLoader.java b/instrumentation/src/androidTest/java/com/bumptech/glide/test/MockModelLoader.java
index 2726152f6..e2dd94e57 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/test/MockModelLoader.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/MockModelLoader.java
@@ -3,15 +3,15 @@
 import android.content.Context;
 import android.support.annotation.NonNull;
 import androidx.test.InstrumentationRegistry;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoaderFactory;
-import com.bumptech.glide.load.model.MultiModelLoaderFactory;
-import com.bumptech.glide.signature.ObjectKey;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.model.MultiModelLoaderFactory;
+import com.bumptech.glide4.signature.ObjectKey;
 
 public final class MockModelLoader<ModelT, DataT> implements ModelLoader<ModelT, DataT> {
   private final ModelT model;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/test/TearDownGlide.java b/instrumentation/src/androidTest/java/com/bumptech/glide/test/TearDownGlide.java
index 61263c353..e2cebff72 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/test/TearDownGlide.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/TearDownGlide.java
@@ -1,8 +1,8 @@
 package com.bumptech.glide.test;
 
 import androidx.test.InstrumentationRegistry;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.RequestManager;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.RequestManager;
 import org.junit.rules.TestRule;
 import org.junit.runner.Description;
 import org.junit.runners.model.Statement;
diff --git a/instrumentation/src/androidTest/java/com/bumptech/glide/test/WaitModelLoader.java b/instrumentation/src/androidTest/java/com/bumptech/glide/test/WaitModelLoader.java
index e702b7fc5..aa9d273e6 100644
--- a/instrumentation/src/androidTest/java/com/bumptech/glide/test/WaitModelLoader.java
+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/WaitModelLoader.java
@@ -3,14 +3,14 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import androidx.test.InstrumentationRegistry;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoaderFactory;
-import com.bumptech.glide.load.model.MultiModelLoaderFactory;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.model.MultiModelLoaderFactory;
 import com.bumptech.glide.test.WaitModelLoader.WaitModel;
 import java.io.InputStream;
 import java.util.concurrent.CountDownLatch;
diff --git a/instrumentation/src/main/java/com/bumptech/glide/test/InstrumentationAppGlideModule.java b/instrumentation/src/main/java/com/bumptech/glide/test/InstrumentationAppGlideModule.java
index 056d6140a..8d77ed738 100644
--- a/instrumentation/src/main/java/com/bumptech/glide/test/InstrumentationAppGlideModule.java
+++ b/instrumentation/src/main/java/com/bumptech/glide/test/InstrumentationAppGlideModule.java
@@ -1,7 +1,7 @@
 package com.bumptech.glide.test;
 
-import com.bumptech.glide.annotation.GlideModule;
-import com.bumptech.glide.module.AppGlideModule;
+import com.bumptech.glide4.annotation.GlideModule;
+import com.bumptech.glide4.module.AppGlideModule;
 
 @GlideModule
 public class InstrumentationAppGlideModule extends AppGlideModule {
diff --git a/integration/gifencoder/src/main/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoder.java b/integration/gifencoder/src/main/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoder.java
index 0d67e6fd7..f24218915 100644
--- a/integration/gifencoder/src/main/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoder.java
+++ b/integration/gifencoder/src/main/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoder.java
@@ -10,19 +10,19 @@
 import com.bumptech.glide.gifdecoder.GifHeaderParser;
 import com.bumptech.glide.gifdecoder.StandardGifDecoder;
 import com.bumptech.glide.gifencoder.AnimatedGifEncoder;
-import com.bumptech.glide.load.EncodeStrategy;
-import com.bumptech.glide.load.Option;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceEncoder;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.resource.UnitTransformation;
-import com.bumptech.glide.load.resource.bitmap.BitmapResource;
-import com.bumptech.glide.load.resource.gif.GifBitmapProvider;
-import com.bumptech.glide.load.resource.gif.GifDrawable;
-import com.bumptech.glide.util.ByteBufferUtil;
-import com.bumptech.glide.util.LogTime;
+import com.bumptech.glide4.load.EncodeStrategy;
+import com.bumptech.glide4.load.Option;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceEncoder;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.resource.UnitTransformation;
+import com.bumptech.glide4.load.resource.bitmap.BitmapResource;
+import com.bumptech.glide4.load.resource.gif.GifBitmapProvider;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.util.ByteBufferUtil;
+import com.bumptech.glide4.util.LogTime;
 import java.io.BufferedOutputStream;
 import java.io.File;
 import java.io.FileOutputStream;
@@ -32,8 +32,8 @@
 import java.security.MessageDigest;
 
 /**
- * An {@link com.bumptech.glide.load.ResourceEncoder} that can write
- * {@link com.bumptech.glide.load.resource.gif.GifDrawable} to cache.
+ * An {@link ResourceEncoder} that can write
+ * {@link GifDrawable} to cache.
  */
 public class ReEncodingGifResourceEncoder implements ResourceEncoder<GifDrawable> {
 
diff --git a/integration/gifencoder/src/test/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoderTest.java b/integration/gifencoder/src/test/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoderTest.java
index 641dc7357..e8f257ec4 100644
--- a/integration/gifencoder/src/test/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoderTest.java
+++ b/integration/gifencoder/src/test/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoderTest.java
@@ -19,14 +19,14 @@
 import com.bumptech.glide.gifdecoder.GifHeader;
 import com.bumptech.glide.gifdecoder.GifHeaderParser;
 import com.bumptech.glide.gifencoder.AnimatedGifEncoder;
-import com.bumptech.glide.load.EncodeStrategy;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.resource.UnitTransformation;
-import com.bumptech.glide.load.resource.gif.GifDrawable;
-import com.bumptech.glide.util.ByteBufferUtil;
+import com.bumptech.glide4.load.EncodeStrategy;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.resource.UnitTransformation;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.util.ByteBufferUtil;
 import java.io.File;
 import java.io.IOException;
 import java.io.OutputStream;
diff --git a/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpGlideModule.java b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpGlideModule.java
index 1bc1047a9..0b0176db3 100644
--- a/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpGlideModule.java
+++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpGlideModule.java
@@ -2,25 +2,28 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.GlideBuilder;
-import com.bumptech.glide.Registry;
-import com.bumptech.glide.load.model.GlideUrl;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.Registry;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.module.GlideModule;
+
 import java.io.InputStream;
 
 /**
- * A {@link com.bumptech.glide.module.GlideModule} implementation to replace Glide's default
- * {@link java.net.HttpURLConnection} based {@link com.bumptech.glide.load.model.ModelLoader}
- * with an OkHttp based {@link com.bumptech.glide.load.model.ModelLoader}.
+ * A {@link GlideModule} implementation to replace Glide's default
+ * {@link java.net.HttpURLConnection} based {@link ModelLoader}
+ * with an OkHttp based {@link ModelLoader}.
  *
  * <p> If you're using gradle, you can include this module simply by depending on the aar, the
  * module will be merged in by manifest merger. For other build systems or for more more
- * information, see {@link com.bumptech.glide.module.GlideModule}. </p>
+ * information, see {@link GlideModule}. </p>
  *
  * @deprecated replaced with com.bumptech.glide.integration.okhttp3.OkHttpGlideModule.
  */
 @Deprecated
-public class OkHttpGlideModule implements com.bumptech.glide.module.GlideModule {
+public class OkHttpGlideModule implements GlideModule {
   @Override
   public void applyOptions(@NonNull Context context, @NonNull GlideBuilder builder) {
     // Do nothing.
diff --git a/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpLibraryGlideModule.java b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpLibraryGlideModule.java
index bc81dabc0..0882c1463 100644
--- a/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpLibraryGlideModule.java
+++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpLibraryGlideModule.java
@@ -1,12 +1,12 @@
 package com.bumptech.glide.integration.okhttp;
 
 import android.content.Context;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.Registry;
-import com.bumptech.glide.annotation.GlideModule;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.module.AppGlideModule;
-import com.bumptech.glide.module.LibraryGlideModule;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.Registry;
+import com.bumptech.glide4.annotation.GlideModule;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.module.AppGlideModule;
+import com.bumptech.glide4.module.LibraryGlideModule;
 import java.io.InputStream;
 
 /**
diff --git a/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java
index dcac2f768..b7b2f1ec1 100644
--- a/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java
+++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java
@@ -2,13 +2,13 @@
 
 import android.support.annotation.NonNull;
 import android.util.Log;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.HttpException;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.util.ContentLengthInputStream;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.HttpException;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.util.ContentLengthInputStream;
+import com.bumptech.glide4.util.Synthetic;
 import com.squareup.okhttp.OkHttpClient;
 import com.squareup.okhttp.Request;
 import com.squareup.okhttp.Response;
diff --git a/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpUrlLoader.java b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpUrlLoader.java
index 174c446f2..d7261e571 100644
--- a/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpUrlLoader.java
+++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpUrlLoader.java
@@ -1,11 +1,11 @@
 package com.bumptech.glide.integration.okhttp;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoaderFactory;
-import com.bumptech.glide.load.model.MultiModelLoaderFactory;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.model.MultiModelLoaderFactory;
 import com.squareup.okhttp.OkHttpClient;
 import java.io.InputStream;
 
diff --git a/integration/okhttp3/src/main/java/com/bumptech/glide/integration/okhttp3/OkHttpGlideModule.java b/integration/okhttp3/src/main/java/com/bumptech/glide/integration/okhttp3/OkHttpGlideModule.java
index e58b041dd..03d395a89 100644
--- a/integration/okhttp3/src/main/java/com/bumptech/glide/integration/okhttp3/OkHttpGlideModule.java
+++ b/integration/okhttp3/src/main/java/com/bumptech/glide/integration/okhttp3/OkHttpGlideModule.java
@@ -2,26 +2,29 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.GlideBuilder;
-import com.bumptech.glide.Registry;
-import com.bumptech.glide.load.model.GlideUrl;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.Registry;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.module.GlideModule;
+
 import java.io.InputStream;
 
 /**
- * A {@link com.bumptech.glide.module.GlideModule} implementation to replace Glide's default
- * {@link java.net.HttpURLConnection} based {@link com.bumptech.glide.load.model.ModelLoader}
- * with an OkHttp based {@link com.bumptech.glide.load.model.ModelLoader}.
+ * A {@link GlideModule} implementation to replace Glide's default
+ * {@link java.net.HttpURLConnection} based {@link ModelLoader}
+ * with an OkHttp based {@link ModelLoader}.
  *
  * <p> If you're using gradle, you can include this module simply by depending on the aar, the
  * module will be merged in by manifest merger. For other build systems or for more more
- * information, see {@link com.bumptech.glide.module.GlideModule}. </p>
+ * information, see {@link GlideModule}. </p>
  *
  * @deprecated Replaced by {@link OkHttpLibraryGlideModule} for Applications that use Glide's
  * annotations.
  */
 @Deprecated
-public class OkHttpGlideModule implements com.bumptech.glide.module.GlideModule {
+public class OkHttpGlideModule implements GlideModule {
   @Override
   public void applyOptions(@NonNull Context context, @NonNull GlideBuilder builder) {
     // Do nothing.
diff --git a/integration/okhttp3/src/main/java/com/bumptech/glide/integration/okhttp3/OkHttpLibraryGlideModule.java b/integration/okhttp3/src/main/java/com/bumptech/glide/integration/okhttp3/OkHttpLibraryGlideModule.java
index b315acbd7..9dabee24f 100644
--- a/integration/okhttp3/src/main/java/com/bumptech/glide/integration/okhttp3/OkHttpLibraryGlideModule.java
+++ b/integration/okhttp3/src/main/java/com/bumptech/glide/integration/okhttp3/OkHttpLibraryGlideModule.java
@@ -2,12 +2,12 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.Registry;
-import com.bumptech.glide.annotation.GlideModule;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.module.AppGlideModule;
-import com.bumptech.glide.module.LibraryGlideModule;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.Registry;
+import com.bumptech.glide4.annotation.GlideModule;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.module.AppGlideModule;
+import com.bumptech.glide4.module.LibraryGlideModule;
 import java.io.InputStream;
 
 /**
diff --git a/integration/okhttp3/src/main/java/com/bumptech/glide/integration/okhttp3/OkHttpStreamFetcher.java b/integration/okhttp3/src/main/java/com/bumptech/glide/integration/okhttp3/OkHttpStreamFetcher.java
index 2b6a69b38..1d827e58a 100644
--- a/integration/okhttp3/src/main/java/com/bumptech/glide/integration/okhttp3/OkHttpStreamFetcher.java
+++ b/integration/okhttp3/src/main/java/com/bumptech/glide/integration/okhttp3/OkHttpStreamFetcher.java
@@ -2,13 +2,13 @@
 
 import android.support.annotation.NonNull;
 import android.util.Log;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.HttpException;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.util.ContentLengthInputStream;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.HttpException;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.util.ContentLengthInputStream;
+import com.bumptech.glide4.util.Preconditions;
 import java.io.IOException;
 import java.io.InputStream;
 import java.util.Map;
diff --git a/integration/okhttp3/src/main/java/com/bumptech/glide/integration/okhttp3/OkHttpUrlLoader.java b/integration/okhttp3/src/main/java/com/bumptech/glide/integration/okhttp3/OkHttpUrlLoader.java
index 8f8f9066c..dab098677 100644
--- a/integration/okhttp3/src/main/java/com/bumptech/glide/integration/okhttp3/OkHttpUrlLoader.java
+++ b/integration/okhttp3/src/main/java/com/bumptech/glide/integration/okhttp3/OkHttpUrlLoader.java
@@ -1,11 +1,11 @@
 package com.bumptech.glide.integration.okhttp3;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoaderFactory;
-import com.bumptech.glide.load.model.MultiModelLoaderFactory;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.model.MultiModelLoaderFactory;
 import java.io.InputStream;
 import okhttp3.Call;
 import okhttp3.OkHttpClient;
diff --git a/integration/recyclerview/src/main/java/com/bumptech/glide/integration/recyclerview/RecyclerViewPreloader.java b/integration/recyclerview/src/main/java/com/bumptech/glide/integration/recyclerview/RecyclerViewPreloader.java
index 988561eac..47fa6f4aa 100644
--- a/integration/recyclerview/src/main/java/com/bumptech/glide/integration/recyclerview/RecyclerViewPreloader.java
+++ b/integration/recyclerview/src/main/java/com/bumptech/glide/integration/recyclerview/RecyclerViewPreloader.java
@@ -5,11 +5,11 @@
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentActivity;
 import android.support.v7.widget.RecyclerView;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.ListPreloader;
-import com.bumptech.glide.ListPreloader.PreloadModelProvider;
-import com.bumptech.glide.ListPreloader.PreloadSizeProvider;
-import com.bumptech.glide.RequestManager;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.ListPreloader;
+import com.bumptech.glide4.ListPreloader.PreloadModelProvider;
+import com.bumptech.glide4.ListPreloader.PreloadSizeProvider;
+import com.bumptech.glide4.RequestManager;
 
 /**
  * Loads a few resources ahead in the direction of scrolling in any {@link RecyclerView} so that
diff --git a/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyGlideModule.java b/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyGlideModule.java
index 5756c6172..f31d00224 100644
--- a/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyGlideModule.java
+++ b/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyGlideModule.java
@@ -2,26 +2,29 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.GlideBuilder;
-import com.bumptech.glide.Registry;
-import com.bumptech.glide.load.model.GlideUrl;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.Registry;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.module.GlideModule;
+
 import java.io.InputStream;
 
 /**
- * A {@link com.bumptech.glide.module.GlideModule} implementation to replace Glide's default
- * {@link java.net.HttpURLConnection} based {@link com.bumptech.glide.load.model.ModelLoader} with a
- * Volley based {@link com.bumptech.glide.load.model.ModelLoader}.
+ * A {@link GlideModule} implementation to replace Glide's default
+ * {@link java.net.HttpURLConnection} based {@link ModelLoader} with a
+ * Volley based {@link ModelLoader}.
  *
  * <p> If you're using gradle, you can include this module simply by depending on the aar, the
  * module will be merged in by manifest merger. For other build systems or for more more
- * information, see {@link com.bumptech.glide.module.GlideModule}.
+ * information, see {@link GlideModule}.
  *
  * @deprecated Replaced with {@link VolleyLibraryGlideModule}.
  */
 @Deprecated
 @SuppressWarnings("deprecation")
-public class VolleyGlideModule implements com.bumptech.glide.module.GlideModule {
+public class VolleyGlideModule implements GlideModule {
   @Override
   public void applyOptions(@NonNull Context context, @NonNull GlideBuilder builder) {
     // Do nothing.
diff --git a/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyLibraryGlideModule.java b/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyLibraryGlideModule.java
index 514c62008..174bde469 100644
--- a/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyLibraryGlideModule.java
+++ b/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyLibraryGlideModule.java
@@ -2,18 +2,20 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.Registry;
-import com.bumptech.glide.annotation.GlideModule;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.module.AppGlideModule;
-import com.bumptech.glide.module.LibraryGlideModule;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.Registry;
+import com.bumptech.glide4.annotation.GlideModule;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.module.AppGlideModule;
+import com.bumptech.glide4.module.LibraryGlideModule;
+import com.bumptech.glide4.load.model.ModelLoader;
+
 import java.io.InputStream;
 
 /**
- * A {@link com.bumptech.glide.module.GlideModule} implementation to replace Glide's default
- * {@link java.net.HttpURLConnection} based {@link com.bumptech.glide.load.model.ModelLoader} with a
- * Volley based {@link com.bumptech.glide.load.model.ModelLoader}.
+ * A {@link com.bumptech.glide4.module.GlideModule} implementation to replace Glide's default
+ * {@link java.net.HttpURLConnection} based {@link ModelLoader} with a
+ * Volley based {@link ModelLoader}.
  *
  * <p>For Applications that depend on this library and include an
  * {@link AppGlideModule} and Glide's annotation processor, this class
diff --git a/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyRequestFactory.java b/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyRequestFactory.java
index bbc313217..3e7fd2ad6 100644
--- a/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyRequestFactory.java
+++ b/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyRequestFactory.java
@@ -2,7 +2,7 @@
 
 import com.android.volley.Request;
 import com.android.volley.Request.Priority;
-import com.bumptech.glide.load.data.DataFetcher.DataCallback;
+import com.bumptech.glide4.load.data.DataFetcher.DataCallback;
 import java.io.InputStream;
 import java.util.Map;
 
diff --git a/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyStreamFetcher.java b/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyStreamFetcher.java
index 3137fdcdb..21ccd89fa 100644
--- a/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyStreamFetcher.java
+++ b/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyStreamFetcher.java
@@ -8,10 +8,10 @@
 import com.android.volley.Response;
 import com.android.volley.VolleyError;
 import com.android.volley.toolbox.HttpHeaderParser;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.model.GlideUrl;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.model.GlideUrl;
 import java.io.ByteArrayInputStream;
 import java.io.InputStream;
 import java.util.Collections;
diff --git a/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyUrlLoader.java b/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyUrlLoader.java
index a5ceda30a..244e340b9 100644
--- a/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyUrlLoader.java
+++ b/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyUrlLoader.java
@@ -4,11 +4,11 @@
 import android.support.annotation.NonNull;
 import com.android.volley.RequestQueue;
 import com.android.volley.toolbox.Volley;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoaderFactory;
-import com.bumptech.glide.load.model.MultiModelLoaderFactory;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.model.MultiModelLoaderFactory;
 import java.io.InputStream;
 
 /**
diff --git a/integration/volley/src/test/java/com/bumptech/glide/integration/volley/VolleyStreamFetcherServerTest.java b/integration/volley/src/test/java/com/bumptech/glide/integration/volley/VolleyStreamFetcherServerTest.java
index 740acc113..fd98fe289 100644
--- a/integration/volley/src/test/java/com/bumptech/glide/integration/volley/VolleyStreamFetcherServerTest.java
+++ b/integration/volley/src/test/java/com/bumptech/glide/integration/volley/VolleyStreamFetcherServerTest.java
@@ -13,10 +13,10 @@
 import com.android.volley.RequestQueue;
 import com.android.volley.VolleyError;
 import com.android.volley.toolbox.Volley;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.load.model.Headers;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.Headers;
 import java.io.IOException;
 import java.io.InputStream;
 import java.net.URL;
diff --git a/library/findbugs-exclude.xml b/library/findbugs-exclude.xml
index f27b2c382..79238d7d5 100644
--- a/library/findbugs-exclude.xml
+++ b/library/findbugs-exclude.xml
@@ -9,20 +9,20 @@
 
     <!-- BytesResource is the wrapper that is given control of the data. -->
     <Match>
-        <Class name="com.bumptech.glide.load.resource.bytes.BytesResource"/>
+        <Class name="com.bumptech.glide4.load.resource.bytes.BytesResource"/>
         <Method name="get"/>
         <Bug pattern="EI_EXPOSE_REP"/>
     </Match>
 
     <!-- We would rather expose the internal bytes than box or copy them. -->
     <Match>
-        <Class name="com.bumptech.glide.load.resource.bytes.BytesResource"/>
+        <Class name="com.bumptech.glide4.load.resource.bytes.BytesResource"/>
         <Bug pattern="EI_EXPOSE_REP2"/>
     </Match>
 
     <!-- RecyclableBufferedInputStream safely re-uses pooled byte arrays -->
     <Match>
-        <Class name="com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream"/>
+        <Class name="com.bumptech.glide4.load.resource.bitmap.RecyclableBufferedInputStream"/>
         <Bug pattern="EI_EXPOSE_REP2"/>
     </Match>
 
@@ -32,7 +32,7 @@
         <Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS" />
     </Match>
     <Match>
-       <Class name="com.bumptech.glide.load.engine.GlideException$IndentedPrintStream" />
+       <Class name="com.bumptech.glide4.load.engine.GlideException$IndentedPrintStream" />
        <Bug pattern="DM_DEFAULT_ENCODING" />
     </Match>
 
@@ -44,13 +44,13 @@
 
     <!-- Re-using the byte array saves allocations, there's no serious risk of mutations. -->
     <Match>
-      <Class name="com.bumptech.glide.util.FixedPreloadSizeProvider" />
+      <Class name="com.bumptech.glide4.util.FixedPreloadSizeProvider" />
       <Bug pattern="EI_EXPOSE_REP" />
     </Match>
 
     <!-- We just cache the value of hashcode, no need to also override equals. -->
     <Match>
-      <Class name="com.bumptech.glide.util.CachedHashCodeArrayMap" />
+      <Class name="com.bumptech.glide4.util.CachedHashCodeArrayMap" />
       <Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS" />
     </Match>
 
diff --git a/library/src/main/AndroidManifest.xml b/library/src/main/AndroidManifest.xml
index 705db20aa..70adce738 100644
--- a/library/src/main/AndroidManifest.xml
+++ b/library/src/main/AndroidManifest.xml
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="utf-8"?>
-<manifest package="com.bumptech.glide">
+<manifest package="com.bumptech.glide4">
   <application/>
 </manifest>
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/EngineKeyFactory.java b/library/src/main/java/com/bumptech/glide/load/engine/EngineKeyFactory.java
deleted file mode 100644
index 05e7a55a0..000000000
--- a/library/src/main/java/com/bumptech/glide/load/engine/EngineKeyFactory.java
+++ /dev/null
@@ -1,17 +0,0 @@
-package com.bumptech.glide.load.engine;
-
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.Transformation;
-import java.util.Map;
-
-class EngineKeyFactory {
-
-  @SuppressWarnings("rawtypes")
-  EngineKey buildKey(Object model, Key signature, int width, int height,
-      Map<Class<?>, Transformation<?>> transformations, Class<?> resourceClass,
-      Class<?> transcodeClass, Options options) {
-    return new EngineKey(model, signature, width, height, transformations, resourceClass,
-        transcodeClass, options);
-  }
-}
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/Poolable.java b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/Poolable.java
deleted file mode 100644
index bf67075a0..000000000
--- a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/Poolable.java
+++ /dev/null
@@ -1,5 +0,0 @@
-package com.bumptech.glide.load.engine.bitmap_recycle;
-
-interface Poolable {
-  void offer();
-}
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/file/FileResource.java b/library/src/main/java/com/bumptech/glide/load/resource/file/FileResource.java
deleted file mode 100644
index 790f33b53..000000000
--- a/library/src/main/java/com/bumptech/glide/load/resource/file/FileResource.java
+++ /dev/null
@@ -1,15 +0,0 @@
-package com.bumptech.glide.load.resource.file;
-
-import com.bumptech.glide.load.resource.SimpleResource;
-import java.io.File;
-
-/**
- * A simple {@link com.bumptech.glide.load.engine.Resource} that wraps a {@link File}.
- */
-// Public API.
-@SuppressWarnings("WeakerAccess")
-public class FileResource extends SimpleResource<File> {
-  public FileResource(File file) {
-    super(file);
-  }
-}
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifOptions.java b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifOptions.java
deleted file mode 100644
index cb2f71e5e..000000000
--- a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifOptions.java
+++ /dev/null
@@ -1,32 +0,0 @@
-package com.bumptech.glide.load.resource.gif;
-
-import com.bumptech.glide.load.DecodeFormat;
-import com.bumptech.glide.load.Option;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceDecoder;
-
-/**
- * Options related to decoding GIFs.
- */
-public final class GifOptions {
-
-  /**
-   * Indicates the {@link com.bumptech.glide.load.DecodeFormat} that will be used in conjunction
-   * with the particular GIF to determine the {@link android.graphics.Bitmap.Config} to use when
-   * decoding frames of GIFs.
-   */
-  public static final Option<DecodeFormat> DECODE_FORMAT = Option.memory(
-      "com.bumptech.glide.load.resource.gif.GifOptions.DecodeFormat", DecodeFormat.DEFAULT);
-
-  /**
-   * If set to {@code true}, disables the GIF {@link com.bumptech.glide.load.ResourceDecoder}s
-   * ({@link ResourceDecoder#handles(Object, Options)} will return {@code false}). Defaults to
-   * {@code false}.
-   */
-  public static final Option<Boolean> DISABLE_ANIMATION = Option.memory(
-      "com.bumptech.glide.load.resource.gif.GifOptions.DisableAnimation", false);
-
-  private GifOptions() {
-    // Utility class.
-  }
-}
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/transcode/GifDrawableBytesTranscoder.java b/library/src/main/java/com/bumptech/glide/load/resource/transcode/GifDrawableBytesTranscoder.java
deleted file mode 100644
index 69e82202d..000000000
--- a/library/src/main/java/com/bumptech/glide/load/resource/transcode/GifDrawableBytesTranscoder.java
+++ /dev/null
@@ -1,26 +0,0 @@
-package com.bumptech.glide.load.resource.transcode;
-
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.resource.bytes.BytesResource;
-import com.bumptech.glide.load.resource.gif.GifDrawable;
-import com.bumptech.glide.util.ByteBufferUtil;
-import java.nio.ByteBuffer;
-
-/**
- * An {@link com.bumptech.glide.load.resource.transcode.ResourceTranscoder} that converts {@link
- * com.bumptech.glide.load.resource.gif.GifDrawable} into bytes by obtaining the original bytes of
- * the GIF from the {@link com.bumptech.glide.load.resource.gif.GifDrawable}.
- */
-public class GifDrawableBytesTranscoder implements ResourceTranscoder<GifDrawable, byte[]> {
-  @Nullable
-  @Override
-  public Resource<byte[]> transcode(@NonNull Resource<GifDrawable> toTranscode,
-      @NonNull Options options) {
-    GifDrawable gifData = toTranscode.get();
-    ByteBuffer byteBuffer = gifData.getBuffer();
-    return new BytesResource(ByteBufferUtil.toBytes(byteBuffer));
-  }
-}
diff --git a/library/src/main/java/com/bumptech/glide/GeneratedAppGlideModule.java b/library/src/main/java/com/bumptech/glide4/GeneratedAppGlideModule.java
similarity index 53%
rename from library/src/main/java/com/bumptech/glide/GeneratedAppGlideModule.java
rename to library/src/main/java/com/bumptech/glide4/GeneratedAppGlideModule.java
index 5f480de80..2bb4e439f 100644
--- a/library/src/main/java/com/bumptech/glide/GeneratedAppGlideModule.java
+++ b/library/src/main/java/com/bumptech/glide4/GeneratedAppGlideModule.java
@@ -1,16 +1,17 @@
-package com.bumptech.glide;
+package com.bumptech.glide4;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.manager.RequestManagerRetriever;
-import com.bumptech.glide.module.AppGlideModule;
+import com.bumptech.glide4.annotation.GlideModule;
+import com.bumptech.glide4.manager.RequestManagerRetriever;
+import com.bumptech.glide4.module.AppGlideModule;
 import java.util.Set;
 
 /**
- * Allows {@link AppGlideModule}s to exclude {@link com.bumptech.glide.annotation.GlideModule}s to
- * ease the migration from {@link com.bumptech.glide.annotation.GlideModule}s to Glide's annotation
+ * Allows {@link AppGlideModule}s to exclude {@link GlideModule}s to
+ * ease the migration from {@link GlideModule}s to Glide's annotation
  * processing system and optionally provides a
- * {@link com.bumptech.glide.manager.RequestManagerRetriever.RequestManagerFactory} impl.
+ * {@link RequestManagerRetriever.RequestManagerFactory} impl.
  */
 abstract class GeneratedAppGlideModule extends AppGlideModule {
   /**
diff --git a/library/src/main/java/com/bumptech/glide/GenericTransitionOptions.java b/library/src/main/java/com/bumptech/glide4/GenericTransitionOptions.java
similarity index 92%
rename from library/src/main/java/com/bumptech/glide/GenericTransitionOptions.java
rename to library/src/main/java/com/bumptech/glide4/GenericTransitionOptions.java
index a630b4f86..05fa61d0e 100644
--- a/library/src/main/java/com/bumptech/glide/GenericTransitionOptions.java
+++ b/library/src/main/java/com/bumptech/glide4/GenericTransitionOptions.java
@@ -1,8 +1,8 @@
-package com.bumptech.glide;
+package com.bumptech.glide4;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.request.transition.TransitionFactory;
-import com.bumptech.glide.request.transition.ViewPropertyTransition;
+import com.bumptech.glide4.request.transition.TransitionFactory;
+import com.bumptech.glide4.request.transition.ViewPropertyTransition;
 
 /**
  * Implementation of {@link TransitionOptions} that exposes only generic methods that can be applied
diff --git a/library/src/main/java/com/bumptech/glide/Glide.java b/library/src/main/java/com/bumptech/glide4/Glide.java
similarity index 86%
rename from library/src/main/java/com/bumptech/glide/Glide.java
rename to library/src/main/java/com/bumptech/glide4/Glide.java
index 8691928f6..3e8294b9c 100644
--- a/library/src/main/java/com/bumptech/glide/Glide.java
+++ b/library/src/main/java/com/bumptech/glide4/Glide.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide;
+package com.bumptech.glide4;
 
 import android.app.Activity;
 import android.content.ComponentCallbacks2;
@@ -21,68 +21,72 @@
 import android.util.Log;
 import android.view.View;
 import com.bumptech.glide.gifdecoder.GifDecoder;
-import com.bumptech.glide.load.DecodeFormat;
-import com.bumptech.glide.load.ImageHeaderParser;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.data.InputStreamRewinder;
-import com.bumptech.glide.load.engine.Engine;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.engine.cache.MemoryCache;
-import com.bumptech.glide.load.engine.prefill.BitmapPreFiller;
-import com.bumptech.glide.load.engine.prefill.PreFillType;
-import com.bumptech.glide.load.model.AssetUriLoader;
-import com.bumptech.glide.load.model.ByteArrayLoader;
-import com.bumptech.glide.load.model.ByteBufferEncoder;
-import com.bumptech.glide.load.model.ByteBufferFileLoader;
-import com.bumptech.glide.load.model.DataUrlLoader;
-import com.bumptech.glide.load.model.FileLoader;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.load.model.MediaStoreFileLoader;
-import com.bumptech.glide.load.model.ResourceLoader;
-import com.bumptech.glide.load.model.StreamEncoder;
-import com.bumptech.glide.load.model.StringLoader;
-import com.bumptech.glide.load.model.UnitModelLoader;
-import com.bumptech.glide.load.model.UriLoader;
-import com.bumptech.glide.load.model.UrlUriLoader;
-import com.bumptech.glide.load.model.stream.HttpGlideUrlLoader;
-import com.bumptech.glide.load.model.stream.HttpUriLoader;
-import com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader;
-import com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader;
-import com.bumptech.glide.load.model.stream.UrlLoader;
-import com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder;
-import com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder;
-import com.bumptech.glide.load.resource.bitmap.BitmapEncoder;
-import com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder;
-import com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser;
-import com.bumptech.glide.load.resource.bitmap.Downsampler;
-import com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser;
-import com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder;
-import com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder;
-import com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder;
-import com.bumptech.glide.load.resource.bitmap.VideoDecoder;
-import com.bumptech.glide.load.resource.bytes.ByteBufferRewinder;
-import com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder;
-import com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder;
-import com.bumptech.glide.load.resource.file.FileDecoder;
-import com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder;
-import com.bumptech.glide.load.resource.gif.GifDrawable;
-import com.bumptech.glide.load.resource.gif.GifDrawableEncoder;
-import com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder;
-import com.bumptech.glide.load.resource.gif.StreamGifDecoder;
-import com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder;
-import com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder;
-import com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder;
-import com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder;
-import com.bumptech.glide.manager.ConnectivityMonitorFactory;
-import com.bumptech.glide.manager.RequestManagerRetriever;
-import com.bumptech.glide.module.ManifestParser;
-import com.bumptech.glide.request.RequestListener;
-import com.bumptech.glide.request.RequestOptions;
-import com.bumptech.glide.request.target.ImageViewTargetFactory;
-import com.bumptech.glide.request.target.Target;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.load.DecodeFormat;
+import com.bumptech.glide4.load.ImageHeaderParser;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.data.InputStreamRewinder;
+import com.bumptech.glide4.load.engine.Engine;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.cache.DiskCache;
+import com.bumptech.glide4.load.engine.cache.MemoryCache;
+import com.bumptech.glide4.load.engine.prefill.BitmapPreFiller;
+import com.bumptech.glide4.load.engine.prefill.PreFillType;
+import com.bumptech.glide4.load.model.AssetUriLoader;
+import com.bumptech.glide4.load.model.ByteArrayLoader;
+import com.bumptech.glide4.load.model.ByteBufferEncoder;
+import com.bumptech.glide4.load.model.ByteBufferFileLoader;
+import com.bumptech.glide4.load.model.DataUrlLoader;
+import com.bumptech.glide4.load.model.FileLoader;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.MediaStoreFileLoader;
+import com.bumptech.glide4.load.model.ResourceLoader;
+import com.bumptech.glide4.load.model.StreamEncoder;
+import com.bumptech.glide4.load.model.StringLoader;
+import com.bumptech.glide4.load.model.UnitModelLoader;
+import com.bumptech.glide4.load.model.UriLoader;
+import com.bumptech.glide4.load.model.UrlUriLoader;
+import com.bumptech.glide4.load.model.stream.HttpGlideUrlLoader;
+import com.bumptech.glide4.load.model.stream.HttpUriLoader;
+import com.bumptech.glide4.load.model.stream.MediaStoreImageThumbLoader;
+import com.bumptech.glide4.load.model.stream.MediaStoreVideoThumbLoader;
+import com.bumptech.glide4.load.model.stream.UrlLoader;
+import com.bumptech.glide4.load.resource.bitmap.BitmapDrawableDecoder;
+import com.bumptech.glide4.load.resource.bitmap.BitmapDrawableEncoder;
+import com.bumptech.glide4.load.resource.bitmap.BitmapEncoder;
+import com.bumptech.glide4.load.resource.bitmap.ByteBufferBitmapDecoder;
+import com.bumptech.glide4.load.resource.bitmap.DefaultImageHeaderParser;
+import com.bumptech.glide4.load.resource.bitmap.Downsampler;
+import com.bumptech.glide4.load.resource.bitmap.ExifInterfaceImageHeaderParser;
+import com.bumptech.glide4.load.resource.bitmap.ResourceBitmapDecoder;
+import com.bumptech.glide4.load.resource.bitmap.StreamBitmapDecoder;
+import com.bumptech.glide4.load.resource.bitmap.UnitBitmapDecoder;
+import com.bumptech.glide4.load.resource.bitmap.VideoDecoder;
+import com.bumptech.glide4.load.resource.bytes.ByteBufferRewinder;
+import com.bumptech.glide4.load.resource.drawable.ResourceDrawableDecoder;
+import com.bumptech.glide4.load.resource.drawable.UnitDrawableDecoder;
+import com.bumptech.glide4.load.resource.file.FileDecoder;
+import com.bumptech.glide4.load.resource.gif.ByteBufferGifDecoder;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.load.resource.gif.GifDrawableEncoder;
+import com.bumptech.glide4.load.resource.gif.GifFrameResourceDecoder;
+import com.bumptech.glide4.load.resource.gif.StreamGifDecoder;
+import com.bumptech.glide4.load.resource.transcode.BitmapBytesTranscoder;
+import com.bumptech.glide4.load.resource.transcode.BitmapDrawableTranscoder;
+import com.bumptech.glide4.load.resource.transcode.DrawableBytesTranscoder;
+import com.bumptech.glide4.load.resource.transcode.GifDrawableBytesTranscoder;
+import com.bumptech.glide4.manager.ConnectivityMonitorFactory;
+import com.bumptech.glide4.manager.RequestManagerRetriever;
+import com.bumptech.glide4.module.ManifestParser;
+import com.bumptech.glide4.request.RequestListener;
+import com.bumptech.glide4.request.RequestOptions;
+import com.bumptech.glide4.request.target.ImageViewTargetFactory;
+import com.bumptech.glide4.request.target.Target;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Util;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.module.GlideModule;
+
 import java.io.File;
 import java.io.InputStream;
 import java.lang.reflect.InvocationTargetException;
@@ -98,7 +102,7 @@
 /**
  * A singleton to present a simple static interface for building requests with
  * {@link RequestBuilder} and maintaining an {@link Engine}, {@link BitmapPool},
- * {@link com.bumptech.glide.load.engine.cache.DiskCache} and {@link MemoryCache}.
+ * {@link DiskCache} and {@link MemoryCache}.
  */
 public class Glide implements ComponentCallbacks2 {
   private static final String DEFAULT_DISK_CACHE_DIR = "image_manager_disk_cache";
@@ -227,7 +231,7 @@ private static void initializeGlide(@NonNull Context context) {
   private static void initializeGlide(@NonNull Context context, @NonNull GlideBuilder builder) {
     Context applicationContext = context.getApplicationContext();
     GeneratedAppGlideModule annotationGeneratedModule = getAnnotationGeneratedGlideModules();
-    List<com.bumptech.glide.module.GlideModule> manifestModules = Collections.emptyList();
+    List<GlideModule> manifestModules = Collections.emptyList();
     if (annotationGeneratedModule == null || annotationGeneratedModule.isManifestParsingEnabled()) {
       manifestModules = new ManifestParser(applicationContext).parse();
     }
@@ -236,9 +240,9 @@ private static void initializeGlide(@NonNull Context context, @NonNull GlideBuil
         && !annotationGeneratedModule.getExcludedModuleClasses().isEmpty()) {
       Set<Class<?>> excludedModuleClasses =
           annotationGeneratedModule.getExcludedModuleClasses();
-      Iterator<com.bumptech.glide.module.GlideModule> iterator = manifestModules.iterator();
+      Iterator<GlideModule> iterator = manifestModules.iterator();
       while (iterator.hasNext()) {
-        com.bumptech.glide.module.GlideModule current = iterator.next();
+        GlideModule current = iterator.next();
         if (!excludedModuleClasses.contains(current.getClass())) {
           continue;
         }
@@ -250,7 +254,7 @@ private static void initializeGlide(@NonNull Context context, @NonNull GlideBuil
     }
 
     if (Log.isLoggable(TAG, Log.DEBUG)) {
-      for (com.bumptech.glide.module.GlideModule glideModule : manifestModules) {
+      for (GlideModule glideModule : manifestModules) {
         Log.d(TAG, "Discovered GlideModule from manifest: " + glideModule.getClass());
       }
     }
@@ -259,14 +263,14 @@ private static void initializeGlide(@NonNull Context context, @NonNull GlideBuil
         annotationGeneratedModule != null
             ? annotationGeneratedModule.getRequestManagerFactory() : null;
     builder.setRequestManagerFactory(factory);
-    for (com.bumptech.glide.module.GlideModule module : manifestModules) {
+    for (GlideModule module : manifestModules) {
       module.applyOptions(applicationContext, builder);
     }
     if (annotationGeneratedModule != null) {
       annotationGeneratedModule.applyOptions(applicationContext, builder);
     }
     Glide glide = builder.build(applicationContext);
-    for (com.bumptech.glide.module.GlideModule module : manifestModules) {
+    for (GlideModule module : manifestModules) {
       module.registerComponents(applicationContext, glide, glide.registry);
     }
     if (annotationGeneratedModule != null) {
@@ -526,7 +530,7 @@ private static void throwIncorrectGlideModule(Exception e) {
   }
 
   /**
-   * Returns the {@link com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool} used to
+   * Returns the {@link BitmapPool} used to
    * temporarily store {@link android.graphics.Bitmap}s so they can be reused to avoid garbage
    * collections.
    *
@@ -540,8 +544,8 @@ private static void throwIncorrectGlideModule(Exception e) {
    * serve any useful purpose. </p>
    *
    * <p> The primary reason this object is exposed is for use in custom
-   * {@link com.bumptech.glide.load.ResourceDecoder}s and
-   * {@link com.bumptech.glide.load.Transformation}s. Use outside of these classes is not generally
+   * {@link ResourceDecoder}s and
+   * {@link Transformation}s. Use outside of these classes is not generally
    * recommended. </p>
    */
   @NonNull
@@ -572,7 +576,7 @@ GlideContext getGlideContext() {
   }
 
   /**
-   * Pre-fills the {@link com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool} using the given
+   * Pre-fills the {@link BitmapPool} using the given
    * sizes.
    *
    * <p> Enough Bitmaps are added to completely fill the pool, so most or all of the Bitmaps
@@ -587,13 +591,13 @@ GlideContext getGlideContext() {
    * <p> This method should be used with caution, overly aggressive pre-filling is substantially
    * worse than not pre-filling at all. Pre-filling should only be started in onCreate to avoid
    * constantly clearing and re-filling the
-   * {@link com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool}. Rotation should be carefully
+   * {@link BitmapPool}. Rotation should be carefully
    * considered as well. It may be worth calling this method only when no saved instance state
    * exists so that pre-filling only happens when the Activity is first created, rather than on
    * every rotation. </p>
    *
    * @param bitmapAttributeBuilders The list of
-   * {@link com.bumptech.glide.load.engine.prefill.PreFillType.Builder Builders} representing
+   * {@link PreFillType.Builder Builders} representing
    * individual sizes and configurations of {@link android.graphics.Bitmap}s to be pre-filled.
    */
   @SuppressWarnings("unused") // Public API
diff --git a/library/src/main/java/com/bumptech/glide/GlideBuilder.java b/library/src/main/java/com/bumptech/glide4/GlideBuilder.java
similarity index 83%
rename from library/src/main/java/com/bumptech/glide/GlideBuilder.java
rename to library/src/main/java/com/bumptech/glide4/GlideBuilder.java
index 98338cfcd..8c80ffc03 100644
--- a/library/src/main/java/com/bumptech/glide/GlideBuilder.java
+++ b/library/src/main/java/com/bumptech/glide4/GlideBuilder.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide;
+package com.bumptech.glide4;
 
 import android.content.Context;
 import android.graphics.Bitmap;
@@ -6,28 +6,31 @@
 import android.support.annotation.Nullable;
 import android.support.v4.util.ArrayMap;
 import android.util.Log;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.engine.Engine;
-import com.bumptech.glide.load.engine.GlideException;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool;
-import com.bumptech.glide.load.engine.cache.DiskCache;
-import com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory;
-import com.bumptech.glide.load.engine.cache.LruResourceCache;
-import com.bumptech.glide.load.engine.cache.MemoryCache;
-import com.bumptech.glide.load.engine.cache.MemorySizeCalculator;
-import com.bumptech.glide.load.engine.executor.GlideExecutor;
-import com.bumptech.glide.manager.ConnectivityMonitorFactory;
-import com.bumptech.glide.manager.DefaultConnectivityMonitorFactory;
-import com.bumptech.glide.manager.RequestManagerRetriever;
-import com.bumptech.glide.manager.RequestManagerRetriever.RequestManagerFactory;
-import com.bumptech.glide.request.BaseRequestOptions;
-import com.bumptech.glide.request.RequestListener;
-import com.bumptech.glide.request.RequestOptions;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.engine.Engine;
+import com.bumptech.glide4.load.engine.GlideException;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPoolAdapter;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruBitmapPool;
+import com.bumptech.glide4.load.engine.cache.DiskCache;
+import com.bumptech.glide4.load.engine.cache.InternalCacheDiskCacheFactory;
+import com.bumptech.glide4.load.engine.cache.LruResourceCache;
+import com.bumptech.glide4.load.engine.cache.MemoryCache;
+import com.bumptech.glide4.load.engine.cache.MemorySizeCalculator;
+import com.bumptech.glide4.load.engine.executor.GlideExecutor;
+import com.bumptech.glide4.manager.ConnectivityMonitorFactory;
+import com.bumptech.glide4.manager.DefaultConnectivityMonitorFactory;
+import com.bumptech.glide4.manager.RequestManagerRetriever;
+import com.bumptech.glide4.manager.RequestManagerRetriever.RequestManagerFactory;
+import com.bumptech.glide4.request.BaseRequestOptions;
+import com.bumptech.glide4.request.RequestListener;
+import com.bumptech.glide4.request.RequestOptions;
+import com.bumptech.glide4.request.target.Target;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
@@ -58,7 +61,7 @@
   private boolean isLoggingRequestOriginsEnabled;
 
   /**
-   * Sets the {@link com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool} implementation to use
+   * Sets the {@link BitmapPool} implementation to use
    * to store and retrieve reused {@link android.graphics.Bitmap}s.
    *
    * @param bitmapPool The pool to use.
@@ -84,8 +87,8 @@ public GlideBuilder setArrayPool(@Nullable ArrayPool arrayPool) {
   }
 
   /**
-   * Sets the {@link com.bumptech.glide.load.engine.cache.MemoryCache} implementation to store
-   * {@link com.bumptech.glide.load.engine.Resource}s that are not currently in use.
+   * Sets the {@link MemoryCache} implementation to store
+   * {@link Resource}s that are not currently in use.
    *
    * @param memoryCache The cache to use.
    * @return This builder.
@@ -99,9 +102,9 @@ public GlideBuilder setMemoryCache(@Nullable MemoryCache memoryCache) {
   }
 
   /**
-   * Sets the {@link com.bumptech.glide.load.engine.cache.DiskCache.Factory} implementation to use
-   * to construct the {@link com.bumptech.glide.load.engine.cache.DiskCache} to use to store {@link
-   * com.bumptech.glide.load.engine.Resource} data on disk.
+   * Sets the {@link DiskCache.Factory} implementation to use
+   * to construct the {@link DiskCache} to use to store {@link
+   * Resource} data on disk.
    *
    * @param diskCacheFactory The disk cache factory to use.
    * @return This builder.
@@ -116,7 +119,7 @@ public GlideBuilder setDiskCache(@Nullable DiskCache.Factory diskCacheFactory) {
 
   /**
    * Sets the {@link GlideExecutor} to use when retrieving
-   * {@link com.bumptech.glide.load.engine.Resource}s that are not already in the cache.
+   * {@link Resource}s that are not already in the cache.
    *
    * <p>The thread count defaults to the number of cores available on the device, with a maximum of
    * 4.
@@ -138,7 +141,7 @@ public GlideBuilder setResizeExecutor(@Nullable GlideExecutor service) {
 
   /**
    * Sets the {@link GlideExecutor} to use when retrieving
-   * {@link com.bumptech.glide.load.engine.Resource}s that are not already in the cache.
+   * {@link Resource}s that are not already in the cache.
    *
    * <p>The thread count defaults to the number of cores available on the device, with a maximum of
    * 4.
@@ -161,7 +164,7 @@ public GlideBuilder setSourceExecutor(@Nullable GlideExecutor service) {
 
   /**
    * Sets the {@link GlideExecutor} to use when retrieving
-   * {@link com.bumptech.glide.load.engine.Resource}s that are currently in Glide's disk caches.
+   * {@link Resource}s that are currently in Glide's disk caches.
    *
    * <p>Defaults to a single thread which is usually the best combination of memory usage,
    * jank, and performance, even on high end devices.
@@ -184,7 +187,7 @@ public GlideBuilder setDiskCacheExecutor(@Nullable GlideExecutor service) {
 
   /**
    * Sets the {@link GlideExecutor} to use when loading frames of animated images and particularly
-   * of {@link com.bumptech.glide.load.resource.gif.GifDrawable}s.
+   * of {@link GifDrawable}s.
    *
    * <p>Defaults to one or two threads, depending on the number of cores available.
    *
@@ -227,7 +230,7 @@ public GlideBuilder setDefaultRequestOptions(@Nullable RequestOptions requestOpt
    * resource class. For example you can set a default transition for
    * {@link android.graphics.drawable.Drawable} and that default transition will be used if you
    * subsequently start requests for specific {@link android.graphics.drawable.Drawable} types like
-   * {@link com.bumptech.glide.load.resource.gif.GifDrawable} or
+   * {@link GifDrawable} or
    * {@link android.graphics.drawable.BitmapDrawable}. Specific types are always preferred so if you
    * register a default transition for both {@link android.graphics.drawable.Drawable} and
    * {@link android.graphics.drawable.BitmapDrawable} and then start a request for
@@ -278,9 +281,9 @@ public GlideBuilder setMemorySizeCalculator(@Nullable MemorySizeCalculator calcu
   }
 
   /**
-   * Sets the {@link com.bumptech.glide.manager.ConnectivityMonitorFactory}
-   * to use to notify {@link com.bumptech.glide.RequestManager} of connectivity events.
-   * If not set {@link com.bumptech.glide.manager.DefaultConnectivityMonitorFactory} would be used.
+   * Sets the {@link ConnectivityMonitorFactory}
+   * to use to notify {@link RequestManager} of connectivity events.
+   * If not set {@link DefaultConnectivityMonitorFactory} would be used.
    *
    * @param factory The factory to use
    * @return This builder.
@@ -332,18 +335,18 @@ public GlideBuilder setLogLevel(int logLevel) {
 
   /**
    * If set to {@code true}, allows Glide to re-capture resources that are loaded into
-   * {@link com.bumptech.glide.request.target.Target}s which are subsequently de-referenced and
+   * {@link Target}s which are subsequently de-referenced and
    * garbage collected without being cleared.
    *
    * <p>Defaults to {@code false}.
    *
    * <p>Glide's resource re-use system is permissive, which means that's acceptable for callers to
-   * load resources into {@link com.bumptech.glide.request.target.Target}s and then never clear the
-   * {@link com.bumptech.glide.request.target.Target}. To do so, Glide uses
+   * load resources into {@link Target}s and then never clear the
+   * {@link Target}. To do so, Glide uses
    * {@link java.lang.ref.WeakReference}s to track resources that belong to
-   * {@link com.bumptech.glide.request.target.Target}s that haven't yet been cleared. Setting
+   * {@link Target}s that haven't yet been cleared. Setting
    * this method to {@code true} allows Glide to also maintain a hard reference to the underlying
-   * resource so that if the {@link com.bumptech.glide.request.target.Target} is garbage collected,
+   * resource so that if the {@link Target} is garbage collected,
    * Glide can return the underlying resource to it's memory cache so that subsequent requests will
    * not unexpectedly re-load the resource from disk or source. As a side affect, it will take
    * the system slightly longer to garbage collect the underlying resource because the weak
@@ -353,19 +356,19 @@ public GlideBuilder setLogLevel(int logLevel) {
    *
    * <p>Leaving this method at the default {@code false} value will allow the platform to garbage
    * collect resources more quickly, but will lead to unexpected memory cache misses if callers load
-   * resources into {@link com.bumptech.glide.request.target.Target}s but never clear them.
+   * resources into {@link Target}s but never clear them.
    *
    * <p>If you set this method to {@code true} you <em>must not</em> call
    * {@link Bitmap#recycle()} or mutate any Bitmaps returned by Glide. If this method is set to
    * {@code false}, recycling or mutating Bitmaps is inefficient but safe as long as you do not
-   * clear the corresponding {@link com.bumptech.glide.request.target.Target} used to load the
+   * clear the corresponding {@link Target} used to load the
    * {@link Bitmap}. However, if you set this method to {@code true} and recycle or mutate any
    * returned {@link Bitmap}s or other mutable resources, Glide may recover those resources and
    * attempt to use them later on, resulting in crashes, graphical corruption or undefined behavior.
    *
    * <p>Regardless of what value this method is set to, it's always good practice to clear
-   * {@link com.bumptech.glide.request.target.Target}s when you're done with the corresponding
-   * resource. Clearing {@link com.bumptech.glide.request.target.Target}s allows Glide to maximize
+   * {@link Target}s when you're done with the corresponding
+   * resource. Clearing {@link Target}s allows Glide to maximize
    * resource re-use, minimize memory overhead and minimize unexpected behavior resulting from
    * edge cases. If you use {@link RequestManager#clear(Target)}, calling {@link Bitmap#recycle()}
    * or mutating {@link Bitmap}s is not only unsafe, it's also totally unnecessary and should be
@@ -410,7 +413,7 @@ public GlideBuilder addGlobalRequestListener(@NonNull RequestListener<Object> li
 
   /**
    * Set to {@code true} to make Glide populate
-   * {@link com.bumptech.glide.load.engine.GlideException#setOrigin(Exception)} for failed requests.
+   * {@link GlideException#setOrigin(Exception)} for failed requests.
    *
    * <p>The exception set by this method is not printed by {@link GlideException} and can only be
    * viewed via a {@link RequestListener} that reads the field via
diff --git a/library/src/main/java/com/bumptech/glide/GlideContext.java b/library/src/main/java/com/bumptech/glide4/GlideContext.java
similarity index 87%
rename from library/src/main/java/com/bumptech/glide/GlideContext.java
rename to library/src/main/java/com/bumptech/glide4/GlideContext.java
index 22f138e84..72e885ac3 100644
--- a/library/src/main/java/com/bumptech/glide/GlideContext.java
+++ b/library/src/main/java/com/bumptech/glide4/GlideContext.java
@@ -1,16 +1,17 @@
-package com.bumptech.glide;
+package com.bumptech.glide4;
 
 import android.content.Context;
 import android.content.ContextWrapper;
 import android.support.annotation.NonNull;
 import android.support.annotation.VisibleForTesting;
 import android.widget.ImageView;
-import com.bumptech.glide.load.engine.Engine;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.request.RequestListener;
-import com.bumptech.glide.request.RequestOptions;
-import com.bumptech.glide.request.target.ImageViewTargetFactory;
-import com.bumptech.glide.request.target.ViewTarget;
+import com.bumptech.glide4.load.engine.Engine;
+import com.bumptech.glide4.load.engine.GlideException;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.request.RequestListener;
+import com.bumptech.glide4.request.RequestOptions;
+import com.bumptech.glide4.request.target.ImageViewTargetFactory;
+import com.bumptech.glide4.request.target.ViewTarget;
 import java.util.List;
 import java.util.Map;
 import java.util.Map.Entry;
@@ -108,7 +109,7 @@ public ArrayPool getArrayPool() {
 
   /**
    * Returns {@code true} if Glide should populate
-   * {@link com.bumptech.glide.load.engine.GlideException#setOrigin(Exception)} for failed requests.
+   * {@link GlideException#setOrigin(Exception)} for failed requests.
    *
    * <p>This is an experimental API that may be removed in the future.
    */
diff --git a/library/src/main/java/com/bumptech/glide/ListPreloader.java b/library/src/main/java/com/bumptech/glide4/ListPreloader.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/ListPreloader.java
rename to library/src/main/java/com/bumptech/glide4/ListPreloader.java
index e82125729..07e626ddd 100644
--- a/library/src/main/java/com/bumptech/glide/ListPreloader.java
+++ b/library/src/main/java/com/bumptech/glide4/ListPreloader.java
@@ -1,13 +1,14 @@
-package com.bumptech.glide;
+package com.bumptech.glide4;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.widget.AbsListView;
-import com.bumptech.glide.request.target.BaseTarget;
-import com.bumptech.glide.request.target.SizeReadyCallback;
-import com.bumptech.glide.request.transition.Transition;
-import com.bumptech.glide.util.Synthetic;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.request.RequestOptions;
+import com.bumptech.glide4.request.target.BaseTarget;
+import com.bumptech.glide4.request.target.SizeReadyCallback;
+import com.bumptech.glide4.request.transition.Transition;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.util.Util;
 import java.util.List;
 import java.util.Queue;
 
@@ -74,7 +75,7 @@
      * exactly the same size and set of options as the {@link RequestBuilder} used when the ``View``
      * is bound. You may need to specify a size in both places to ensure that the width and height
      * match exactly. If so, you can use
-     * {@link com.bumptech.glide.request.RequestOptions#override(int, int)} to do so.
+     * {@link RequestOptions#override(int, int)} to do so.
      *
      * <p>The target and context will be provided by the preloader.
      *
@@ -111,7 +112,7 @@
   }
 
   /**
-   * Constructor for {@link com.bumptech.glide.ListPreloader} that accepts interfaces for providing
+   * Constructor for {@link ListPreloader} that accepts interfaces for providing
    * the dimensions of images to preload, the list of models to preload for a given position, and
    * the request to use to load images.
    *
diff --git a/library/src/main/java/com/bumptech/glide/MemoryCategory.java b/library/src/main/java/com/bumptech/glide4/MemoryCategory.java
similarity index 96%
rename from library/src/main/java/com/bumptech/glide/MemoryCategory.java
rename to library/src/main/java/com/bumptech/glide4/MemoryCategory.java
index af84e0454..6606de53c 100644
--- a/library/src/main/java/com/bumptech/glide/MemoryCategory.java
+++ b/library/src/main/java/com/bumptech/glide4/MemoryCategory.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide;
+package com.bumptech.glide4;
 
 /**
  * An enum for dynamically modifying the amount of memory Glide is able to use.
diff --git a/library/src/main/java/com/bumptech/glide/ModelTypes.java b/library/src/main/java/com/bumptech/glide4/ModelTypes.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/ModelTypes.java
rename to library/src/main/java/com/bumptech/glide4/ModelTypes.java
index 42a14053e..12e56a2b2 100644
--- a/library/src/main/java/com/bumptech/glide/ModelTypes.java
+++ b/library/src/main/java/com/bumptech/glide4/ModelTypes.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide;
+package com.bumptech.glide4;
 
 import android.graphics.Bitmap;
 import android.graphics.drawable.Drawable;
diff --git a/library/src/main/java/com/bumptech/glide/Priority.java b/library/src/main/java/com/bumptech/glide4/Priority.java
similarity index 91%
rename from library/src/main/java/com/bumptech/glide/Priority.java
rename to library/src/main/java/com/bumptech/glide4/Priority.java
index 03c7777f9..a7a47d5f1 100644
--- a/library/src/main/java/com/bumptech/glide/Priority.java
+++ b/library/src/main/java/com/bumptech/glide4/Priority.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide;
+package com.bumptech.glide4;
 
 /**
  * Priorities for completing loads. If more than one load is queued at a time, the load with the
diff --git a/library/src/main/java/com/bumptech/glide/Registry.java b/library/src/main/java/com/bumptech/glide4/Registry.java
similarity index 93%
rename from library/src/main/java/com/bumptech/glide/Registry.java
rename to library/src/main/java/com/bumptech/glide4/Registry.java
index c5903fcf2..691fe4b59 100644
--- a/library/src/main/java/com/bumptech/glide/Registry.java
+++ b/library/src/main/java/com/bumptech/glide4/Registry.java
@@ -1,30 +1,32 @@
-package com.bumptech.glide;
+package com.bumptech.glide4;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v4.util.Pools.Pool;
-import com.bumptech.glide.load.Encoder;
-import com.bumptech.glide.load.ImageHeaderParser;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.ResourceEncoder;
-import com.bumptech.glide.load.data.DataRewinder;
-import com.bumptech.glide.load.data.DataRewinderRegistry;
-import com.bumptech.glide.load.engine.DecodePath;
-import com.bumptech.glide.load.engine.LoadPath;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoaderFactory;
-import com.bumptech.glide.load.model.ModelLoaderRegistry;
-import com.bumptech.glide.load.resource.transcode.ResourceTranscoder;
-import com.bumptech.glide.load.resource.transcode.TranscoderRegistry;
-import com.bumptech.glide.provider.EncoderRegistry;
-import com.bumptech.glide.provider.ImageHeaderParserRegistry;
-import com.bumptech.glide.provider.LoadPathCache;
-import com.bumptech.glide.provider.ModelToResourceClassCache;
-import com.bumptech.glide.provider.ResourceDecoderRegistry;
-import com.bumptech.glide.provider.ResourceEncoderRegistry;
-import com.bumptech.glide.util.pool.FactoryPools;
+import com.bumptech.glide4.load.Encoder;
+import com.bumptech.glide4.load.ImageHeaderParser;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.ResourceEncoder;
+import com.bumptech.glide4.load.data.DataRewinder;
+import com.bumptech.glide4.load.data.DataRewinderRegistry;
+import com.bumptech.glide4.load.engine.DecodePath;
+import com.bumptech.glide4.load.engine.LoadPath;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.model.ModelLoaderRegistry;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.load.resource.transcode.ResourceTranscoder;
+import com.bumptech.glide4.load.resource.transcode.TranscoderRegistry;
+import com.bumptech.glide4.provider.EncoderRegistry;
+import com.bumptech.glide4.provider.ImageHeaderParserRegistry;
+import com.bumptech.glide4.provider.LoadPathCache;
+import com.bumptech.glide4.provider.ModelToResourceClassCache;
+import com.bumptech.glide4.provider.ResourceDecoderRegistry;
+import com.bumptech.glide4.provider.ResourceEncoderRegistry;
+import com.bumptech.glide4.util.pool.FactoryPools;
+
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
@@ -144,7 +146,7 @@ public Registry() {
    * @param dataClass The data that will be decoded from
    * ({@link java.io.InputStream}, {@link java.io.FileDescriptor} etc).
    * @param resourceClass The resource that will be decoded to ({@link android.graphics.Bitmap},
-   * {@link com.bumptech.glide.load.resource.gif.GifDrawable} etc).
+   * {@link GifDrawable} etc).
    * @param decoder The {@link ResourceDecoder} to register.
    */
   @NonNull
@@ -174,7 +176,7 @@ public Registry() {
    * @param dataClass The data that will be decoded from
    * ({@link java.io.InputStream}, {@link java.io.FileDescriptor} etc).
    * @param resourceClass The resource that will be decoded to ({@link android.graphics.Bitmap},
-   * {@link com.bumptech.glide.load.resource.gif.GifDrawable} etc).
+   * {@link GifDrawable} etc).
    * @param decoder The {@link ResourceDecoder} to register.
    */
   @NonNull
@@ -204,7 +206,7 @@ public Registry() {
    * @param dataClass The data that will be decoded from
    * ({@link java.io.InputStream}, {@link java.io.FileDescriptor} etc).
    * @param resourceClass The resource that will be decoded to ({@link android.graphics.Bitmap},
-   * {@link com.bumptech.glide.load.resource.gif.GifDrawable} etc).
+   * {@link GifDrawable} etc).
    * @param decoder The {@link ResourceDecoder} to register.
    */
   @NonNull
@@ -234,7 +236,7 @@ public Registry() {
    * @param dataClass The data that will be decoded from
    * ({@link java.io.InputStream}, {@link java.io.FileDescriptor} etc).
    * @param resourceClass The resource that will be decoded to ({@link android.graphics.Bitmap},
-   * {@link com.bumptech.glide.load.resource.gif.GifDrawable} etc).
+   * {@link GifDrawable} etc).
    * @param decoder The {@link ResourceDecoder} to register.
    */
   @NonNull
@@ -283,7 +285,7 @@ public final Registry setResourceDecoderBucketPriorityList(@NonNull List<String>
    * For example, registering an {@link ResourceEncoder} for
    * {@link android.graphics.drawable.Drawable} (not recommended) will result in the
    * {@link ResourceEncoder} being used for {@link android.graphics.drawable.BitmapDrawable} and
-   * {@link com.bumptech.glide.load.resource.gif.GifDrawable} and any other subclass.
+   * {@link GifDrawable} and any other subclass.
    *
    * <p>If multiple {@link ResourceEncoder}s are registered for the same type or super type, the
    * {@link ResourceEncoder} that is registered first will be used.
@@ -306,7 +308,7 @@ public final Registry setResourceDecoderBucketPriorityList(@NonNull List<String>
    * For example, registering an {@link ResourceEncoder} for
    * {@link android.graphics.drawable.Drawable} (not recommended) will result in the
    * {@link ResourceEncoder} being used for {@link android.graphics.drawable.BitmapDrawable} and
-   * {@link com.bumptech.glide.load.resource.gif.GifDrawable} and any other subclass.
+   * {@link GifDrawable} and any other subclass.
    *
    * <p>If multiple {@link ResourceEncoder}s are registered for the same type or super type, the
    * {@link ResourceEncoder} that is registered first will be used.
@@ -340,7 +342,7 @@ public final Registry setResourceDecoderBucketPriorityList(@NonNull List<String>
   }
 
   /**
-   * Registers a new {@link com.bumptech.glide.load.data.DataRewinder.Factory} to handle a
+   * Registers a new {@link DataRewinder.Factory} to handle a
    * non-default data type that can be rewind to allow for efficient reads of file headers.
    */
   @NonNull
@@ -600,7 +602,7 @@ public boolean isResourceEncoderAvailable(@NonNull Resource<?> resource) {
   }
 
   /**
-   * Thrown when no {@link com.bumptech.glide.load.model.ModelLoader} is registered for a given
+   * Thrown when no {@link ModelLoader} is registered for a given
    * model class.
    */
   // Never serialized by Glide.
diff --git a/library/src/main/java/com/bumptech/glide/RequestBuilder.java b/library/src/main/java/com/bumptech/glide4/RequestBuilder.java
similarity index 90%
rename from library/src/main/java/com/bumptech/glide/RequestBuilder.java
rename to library/src/main/java/com/bumptech/glide4/RequestBuilder.java
index 5e89d0815..735a0d89f 100644
--- a/library/src/main/java/com/bumptech/glide/RequestBuilder.java
+++ b/library/src/main/java/com/bumptech/glide4/RequestBuilder.java
@@ -1,8 +1,8 @@
-package com.bumptech.glide;
+package com.bumptech.glide4;
 
-import static com.bumptech.glide.request.RequestOptions.diskCacheStrategyOf;
-import static com.bumptech.glide.request.RequestOptions.signatureOf;
-import static com.bumptech.glide.request.RequestOptions.skipMemoryCacheOf;
+import static com.bumptech.glide4.request.RequestOptions.diskCacheStrategyOf;
+import static com.bumptech.glide4.request.RequestOptions.signatureOf;
+import static com.bumptech.glide4.request.RequestOptions.skipMemoryCacheOf;
 
 import android.annotation.SuppressLint;
 import android.content.Context;
@@ -15,26 +15,34 @@
 import android.support.annotation.Nullable;
 import android.support.annotation.RawRes;
 import android.widget.ImageView;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
-import com.bumptech.glide.request.BaseRequestOptions;
-import com.bumptech.glide.request.ErrorRequestCoordinator;
-import com.bumptech.glide.request.FutureTarget;
-import com.bumptech.glide.request.Request;
-import com.bumptech.glide.request.RequestCoordinator;
-import com.bumptech.glide.request.RequestFutureTarget;
-import com.bumptech.glide.request.RequestListener;
-import com.bumptech.glide.request.RequestOptions;
-import com.bumptech.glide.request.SingleRequest;
-import com.bumptech.glide.request.ThumbnailRequestCoordinator;
-import com.bumptech.glide.request.target.PreloadTarget;
-import com.bumptech.glide.request.target.Target;
-import com.bumptech.glide.request.target.ViewTarget;
-import com.bumptech.glide.signature.ApplicationVersionSignature;
-import com.bumptech.glide.util.Executors;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Synthetic;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.engine.DiskCacheStrategy;
+import com.bumptech.glide4.request.BaseRequestOptions;
+import com.bumptech.glide4.request.ErrorRequestCoordinator;
+import com.bumptech.glide4.request.FutureTarget;
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.request.RequestCoordinator;
+import com.bumptech.glide4.request.RequestFutureTarget;
+import com.bumptech.glide4.request.RequestListener;
+import com.bumptech.glide4.request.RequestOptions;
+import com.bumptech.glide4.request.SingleRequest;
+import com.bumptech.glide4.request.ThumbnailRequestCoordinator;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.model.ResourceLoader;
+import com.bumptech.glide4.load.model.UriLoader;
+import com.bumptech.glide4.request.target.PreloadTarget;
+import com.bumptech.glide4.request.target.Target;
+import com.bumptech.glide4.request.target.ViewTarget;
+import com.bumptech.glide4.signature.ApplicationVersionSignature;
+import com.bumptech.glide4.util.Executors;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.util.Util;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+
 import java.io.File;
 import java.net.URL;
 import java.util.ArrayList;
@@ -45,7 +53,7 @@
  * A generic class that can handle setting options and staring loads for generic resource types.
  *
  * @param <TranscodeType> The type of resource that will be delivered to the
- * {@link com.bumptech.glide.request.target.Target}.
+ * {@link Target}.
  */
 // Public API.
 @SuppressWarnings({"unused", "WeakerAccess"})
@@ -323,10 +331,10 @@ private void initRequestListeners(List<RequestListener<Object>> requestListeners
    * {@link android.widget.ImageView.ScaleType}.
    *
    * <p>Almost all options will be copied from the original load, including the {@link
-   * com.bumptech.glide.load.model.ModelLoader}, {@link com.bumptech.glide.load.ResourceDecoder},
-   * and {@link com.bumptech.glide.load.Transformation}s. However,
-   * {@link com.bumptech.glide.request.RequestOptions#placeholder(int)} and
-   * {@link com.bumptech.glide.request.RequestOptions#error(int)}, and
+   * ModelLoader}, {@link ResourceDecoder},
+   * and {@link Transformation}s. However,
+   * {@link RequestOptions#placeholder(int)} and
+   * {@link RequestOptions#error(int)}, and
    * {@link #listener(RequestListener)} will only be used on the full size load and will not be
    * copied for the thumbnail load.
    *
@@ -380,8 +388,8 @@ private void initRequestListeners(List<RequestListener<Object>> requestListeners
    * <p>It's almost always better to allow Glide to load {@link Bitmap}s than
    * pass {@link Bitmap}s into Glide. If you have a custom way to obtain {@link Bitmap}s that is
    * not supported by Glide by default, consider registering a custom
-   * {@link com.bumptech.glide.load.model.ModelLoader} or
-   * {@link com.bumptech.glide.load.ResourceDecoder} instead of using this method.
+   * {@link ModelLoader} or
+   * {@link ResourceDecoder} instead of using this method.
    *
    * <p>The {@link DiskCacheStrategy} is set to {@link DiskCacheStrategy#NONE}. Previous calls to
    * {@link #apply(BaseRequestOptions)} or previously applied {@link DiskCacheStrategy}s will be
@@ -407,8 +415,8 @@ private void initRequestListeners(List<RequestListener<Object>> requestListeners
    * <p>It's almost always better to allow Glide to load {@link Bitmap}s than to pass
    * {@link Bitmap}s into Glide using this method . If you have a custom way to obtain
    * {@link Bitmap}s that is not supported by Glide by default, consider registering a custom
-   * {@link com.bumptech.glide.load.model.ModelLoader} or
-   * {@link com.bumptech.glide.load.ResourceDecoder} instead of using this method.
+   * {@link ModelLoader} or
+   * {@link ResourceDecoder} instead of using this method.
    *
    * <p>The {@link DiskCacheStrategy} is set to {@link DiskCacheStrategy#NONE}. Previous calls to
    * {@link #apply(BaseRequestOptions)} or previously applied {@link DiskCacheStrategy}s will be
@@ -434,18 +442,18 @@ private void initRequestListeners(List<RequestListener<Object>> requestListeners
    * <p> Note - this method caches data using only the given String as the cache key. If the data is
    * a Uri outside of your control, or you otherwise expect the data represented by the given String
    * to change without the String identifier changing, Consider using
-   * {@link com.bumptech.glide.request.RequestOptions#signature(com.bumptech.glide.load.Key)} to
+   * {@link RequestOptions#signature(Key)} to
    * mixin a signature you create that identifies the data currently at the given String that will
    * invalidate the cache if that data changes. Alternatively, using
-   * {@link com.bumptech.glide.load.engine.DiskCacheStrategy#NONE} and/or
-   * {@link com.bumptech.glide.request.RequestOptions#skipMemoryCache(boolean)} may be
+   * {@link DiskCacheStrategy#NONE} and/or
+   * {@link RequestOptions#skipMemoryCache(boolean)} may be
    * appropriate.
    * </p>
    *
    * @see #load(Object)
    *
    * @param string A file path, or a uri or url handled by
-   * {@link com.bumptech.glide.load.model.UriLoader}.
+   * {@link UriLoader}.
    */
   @NonNull
   @Override
@@ -460,17 +468,17 @@ private void initRequestListeners(List<RequestListener<Object>> requestListeners
    * <p> Note - this method caches data at Uris using only the Uri itself as the cache key. The data
    * represented by Uris from some content providers may change without the Uri changing, which
    * means using this method can lead to displaying stale data. Consider using
-   * {@link com.bumptech.glide.request.RequestOptions#signature(com.bumptech.glide.load.Key)} to
+   * {@link RequestOptions#signature(Key)} to
    * mixin a signature you create based on the data at the given Uri that will invalidate the cache
    * if that data changes. Alternatively, using
-   * {@link com.bumptech.glide.load.engine.DiskCacheStrategy#NONE} and/or
-   * {@link com.bumptech.glide.request.RequestOptions#skipMemoryCache(boolean)} may be
+   * {@link DiskCacheStrategy#NONE} and/or
+   * {@link RequestOptions#skipMemoryCache(boolean)} may be
    * appropriate. </p>
    *
    * @see #load(Object)
    *
    * @param uri The Uri representing the image. Must be of a type handled by
-   * {@link com.bumptech.glide.load.model.UriLoader}.
+   * {@link UriLoader}.
    */
   @NonNull
   @CheckResult
@@ -485,11 +493,11 @@ private void initRequestListeners(List<RequestListener<Object>> requestListeners
    * <p>Note - this method caches data for Files using only the file path itself as the cache key.
    * The data in the File can change so using this method can lead to displaying stale data. If you
    * expect the data in the File to change, Consider using
-   * {@link com.bumptech.glide.request.RequestOptions#signature(com.bumptech.glide.load.Key)}
+   * {@link RequestOptions#signature(Key)}
    * to mixin a signature you create that identifies the data currently in the File that will
    * invalidate the cache if that data changes. Alternatively, using
-   * {@link com.bumptech.glide.load.engine.DiskCacheStrategy#NONE} and/or
-   * {@link com.bumptech.glide.request.RequestOptions#skipMemoryCache(boolean)} may be
+   * {@link DiskCacheStrategy#NONE} and/or
+   * {@link RequestOptions#skipMemoryCache(boolean)} may be
    * appropriate.
    *
    * @see #load(Object)
@@ -505,35 +513,35 @@ private void initRequestListeners(List<RequestListener<Object>> requestListeners
 
   /**
    * Returns a request builder that uses the
-   * {@link com.bumptech.glide.load.model.ModelLoaderFactory} currently registered or
+   * {@link ModelLoaderFactory} currently registered or
    * {@link Integer} to load the image represented by the given {@link Integer} resource id.
-   * Defaults to {@link com.bumptech.glide.load.model.ResourceLoader} to load resource id models.
+   * Defaults to {@link ResourceLoader} to load resource id models.
    *
    * <p>By default this method adds a version code based signature to the cache key used to cache
    * this resource in Glide. This signature is sufficient to guarantee that end users will see the
    * most up to date versions of your Drawables, but during development if you do not increment your
    * version code before each install and you replace a Drawable with different data without
    * changing the Drawable name, you may see inconsistent cached data. To get around this, consider
-   * using {@link com.bumptech.glide.load.engine.DiskCacheStrategy#NONE} via
-   * {@link RequestOptions#diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy)}
+   * using {@link DiskCacheStrategy#NONE} via
+   * {@link RequestOptions#diskCacheStrategy(DiskCacheStrategy)}
    * during development, and re-enabling the default
-   * {@link com.bumptech.glide.load.engine.DiskCacheStrategy#RESOURCE} for release builds.
+   * {@link DiskCacheStrategy#RESOURCE} for release builds.
    *
    * <p>This method will load non-{@link android.graphics.Bitmap} resources like
    * {@link android.graphics.drawable.VectorDrawable}s. Although Glide makes a best effort to apply
-   * {@link com.bumptech.glide.load.Transformation}s to these {@link Drawable}s by either extracting
+   * {@link Transformation}s to these {@link Drawable}s by either extracting
    * the underlying {@link Bitmap} or by converting the {@link Drawable} to a {@link Bitmap}, Glide
    * is still not able to transform all types of resources. Animated {@link Drawable}s cannot be
-   * transformed (other than {@link com.bumptech.glide.load.resource.gif.GifDrawable}). To avoid
+   * transformed (other than {@link GifDrawable}). To avoid
    * load failures if a {@link Drawable} can't be transformed, use the optional transformation
    * methods like {@link RequestOptions#optionalTransform(Class, Transformation)}.
    *
    * <p>In some cases converting {@link Drawable}s to {@link Bitmap}s may be inefficient. Use this
-   * method, especially in conjunction with {@link com.bumptech.glide.load.Transformation}s with
+   * method, especially in conjunction with {@link Transformation}s with
    * caution for non-{@link Bitmap} {@link Drawable}s.
    *
    * @see #load(Integer)
-   * @see com.bumptech.glide.signature.ApplicationVersionSignature
+   * @see ApplicationVersionSignature
    */
   @NonNull
   @CheckResult
@@ -677,7 +685,7 @@ private boolean isSkipMemoryCacheWithCompletePreviousRequest(
    *
    * @param view The view to cancel previous loads for and load the new resource into.
    * @return The
-   * {@link com.bumptech.glide.request.target.Target} used to wrap the given {@link ImageView}.
+   * {@link Target} used to wrap the given {@link ImageView}.
    */
   @NonNull
   public ViewTarget<ImageView, TranscodeType> into(@NonNull ImageView view) {
@@ -725,11 +733,11 @@ private boolean isSkipMemoryCacheWithCompletePreviousRequest(
    *
    * @param width  The desired width in pixels, or {@link Target#SIZE_ORIGINAL}. This will be
    *               overridden by
-   *               {@link com.bumptech.glide.request.RequestOptions#override(int, int)} if
+   *               {@link RequestOptions#override(int, int)} if
    *               previously called.
    * @param height The desired height in pixels, or {@link Target#SIZE_ORIGINAL}. This will be
    *               overridden by
-   *               {@link com.bumptech.glide.request.RequestOptions#override(int, int)}} if
+   *               {@link RequestOptions#override(int, int)}} if
    *               previously called).
    * @see RequestManager#clear(Target)
    *
@@ -762,11 +770,11 @@ private boolean isSkipMemoryCacheWithCompletePreviousRequest(
    *
    * @param width  The desired width in pixels, or {@link Target#SIZE_ORIGINAL}. This will be
    *               overridden by
-   *               {@link com.bumptech.glide.request.RequestOptions#override(int, int)} if
+   *               {@link RequestOptions#override(int, int)} if
    *               previously called.
    * @param height The desired height in pixels, or {@link Target#SIZE_ORIGINAL}. This will be
    *               overridden by
-   *               {@link com.bumptech.glide.request.RequestOptions#override(int, int)}} if
+   *               {@link RequestOptions#override(int, int)}} if
    *               previously called).
    */
   @NonNull
@@ -783,15 +791,15 @@ private boolean isSkipMemoryCacheWithCompletePreviousRequest(
    *
    * @param width  The desired width in pixels, or {@link Target#SIZE_ORIGINAL}. This will be
    *               overridden by
-   *               {@link com.bumptech.glide.request.RequestOptions#override(int, int)} if
+   *               {@link RequestOptions#override(int, int)} if
    *               previously called.
    * @param height The desired height in pixels, or {@link Target#SIZE_ORIGINAL}. This will be
    *               overridden by
-   *               {@link com.bumptech.glide.request.RequestOptions#override(int, int)}} if
+   *               {@link RequestOptions#override(int, int)}} if
    *               previously called).
    * @return A {@link Target} that can be used to cancel the load via
    * {@link RequestManager#clear(Target)}.
-   * @see com.bumptech.glide.ListPreloader
+   * @see ListPreloader
    */
   @NonNull
   public Target<TranscodeType> preload(int width, int height) {
diff --git a/library/src/main/java/com/bumptech/glide/RequestManager.java b/library/src/main/java/com/bumptech/glide4/RequestManager.java
similarity index 93%
rename from library/src/main/java/com/bumptech/glide/RequestManager.java
rename to library/src/main/java/com/bumptech/glide4/RequestManager.java
index cc415d705..e5cf470e2 100644
--- a/library/src/main/java/com/bumptech/glide/RequestManager.java
+++ b/library/src/main/java/com/bumptech/glide4/RequestManager.java
@@ -1,8 +1,8 @@
-package com.bumptech.glide;
+package com.bumptech.glide4;
 
-import static com.bumptech.glide.request.RequestOptions.decodeTypeOf;
-import static com.bumptech.glide.request.RequestOptions.diskCacheStrategyOf;
-import static com.bumptech.glide.request.RequestOptions.skipMemoryCacheOf;
+import static com.bumptech.glide4.request.RequestOptions.decodeTypeOf;
+import static com.bumptech.glide4.request.RequestOptions.diskCacheStrategyOf;
+import static com.bumptech.glide4.request.RequestOptions.skipMemoryCacheOf;
 
 import android.content.Context;
 import android.graphics.Bitmap;
@@ -17,26 +17,27 @@
 import android.support.annotation.Nullable;
 import android.support.annotation.RawRes;
 import android.view.View;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
-import com.bumptech.glide.load.engine.GlideException;
-import com.bumptech.glide.load.resource.gif.GifDrawable;
-import com.bumptech.glide.manager.ConnectivityMonitor;
-import com.bumptech.glide.manager.ConnectivityMonitorFactory;
-import com.bumptech.glide.manager.Lifecycle;
-import com.bumptech.glide.manager.LifecycleListener;
-import com.bumptech.glide.manager.RequestManagerTreeNode;
-import com.bumptech.glide.manager.RequestTracker;
-import com.bumptech.glide.manager.TargetTracker;
-import com.bumptech.glide.request.BaseRequestOptions;
-import com.bumptech.glide.request.Request;
-import com.bumptech.glide.request.RequestListener;
-import com.bumptech.glide.request.RequestOptions;
-import com.bumptech.glide.request.target.Target;
-import com.bumptech.glide.request.target.ViewTarget;
-import com.bumptech.glide.request.transition.Transition;
-import com.bumptech.glide.util.Synthetic;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.engine.DiskCacheStrategy;
+import com.bumptech.glide4.load.engine.GlideException;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.manager.ConnectivityMonitor;
+import com.bumptech.glide4.manager.ConnectivityMonitorFactory;
+import com.bumptech.glide4.manager.Lifecycle;
+import com.bumptech.glide4.manager.LifecycleListener;
+import com.bumptech.glide4.manager.RequestManagerTreeNode;
+import com.bumptech.glide4.manager.RequestTracker;
+import com.bumptech.glide4.manager.TargetTracker;
+import com.bumptech.glide4.request.BaseRequestOptions;
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.request.RequestListener;
+import com.bumptech.glide4.request.RequestOptions;
+import com.bumptech.glide4.request.target.Target;
+import com.bumptech.glide4.request.target.ViewTarget;
+import com.bumptech.glide4.request.transition.Transition;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.util.Util;
 import java.io.File;
 import java.net.URL;
 import java.util.List;
@@ -360,7 +361,7 @@ public synchronized void onDestroy() {
 
   /**
    * Attempts to always load the resource as a
-   * {@link com.bumptech.glide.load.resource.gif.GifDrawable}.
+   * {@link GifDrawable}.
    *
    * <p> If the underlying data is not a GIF, this will fail. As a result, this should only be used
    * if the model represents an animated GIF and the caller wants to interact with the GifDrawable
@@ -369,7 +370,7 @@ public synchronized void onDestroy() {
    * Drawable}, animated or not, automatically. </p>
    *
    * @return A new request builder for loading a
-   * {@link com.bumptech.glide.load.resource.gif.GifDrawable}.
+   * {@link GifDrawable}.
    */
   @NonNull
   @CheckResult
@@ -379,7 +380,7 @@ public synchronized void onDestroy() {
 
   /**
    * Attempts to always load the resource using any registered {@link
-   * com.bumptech.glide.load.ResourceDecoder}s that can decode any subclass of {@link Drawable}.
+   * ResourceDecoder}s that can decode any subclass of {@link Drawable}.
    *
    * <p> By default, may return either a {@link android.graphics.drawable.BitmapDrawable} or {@link
    * GifDrawable}, but if additional decoders are registered for other {@link Drawable} subclasses,
@@ -510,8 +511,8 @@ public synchronized void onDestroy() {
    * cached source data.
    *
    * <p>This method is designed to work for remote data that is or will be cached using {@link
-   * com.bumptech.glide.load.engine.DiskCacheStrategy#DATA}. As a result, specifying a
-   * {@link com.bumptech.glide.load.engine.DiskCacheStrategy} on this request is generally not
+   * DiskCacheStrategy#DATA}. As a result, specifying a
+   * {@link DiskCacheStrategy} on this request is generally not
    * recommended.
    *
    * @return A new request builder for downloading content to cache and returning the cache File.
@@ -551,7 +552,7 @@ public synchronized void onDestroy() {
 
   /**
    * Attempts to load the resource using any registered
-   * {@link com.bumptech.glide.load.ResourceDecoder}s
+   * {@link ResourceDecoder}s
    * that can decode the given resource class or any subclass of the given resource class.
    *
    * @param resourceClass The resource to decode.
diff --git a/library/src/main/java/com/bumptech/glide/TransitionOptions.java b/library/src/main/java/com/bumptech/glide4/TransitionOptions.java
similarity index 83%
rename from library/src/main/java/com/bumptech/glide/TransitionOptions.java
rename to library/src/main/java/com/bumptech/glide4/TransitionOptions.java
index ce2cfe469..024caf0c0 100644
--- a/library/src/main/java/com/bumptech/glide/TransitionOptions.java
+++ b/library/src/main/java/com/bumptech/glide4/TransitionOptions.java
@@ -1,12 +1,13 @@
-package com.bumptech.glide;
+package com.bumptech.glide4;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.request.transition.NoTransition;
-import com.bumptech.glide.request.transition.TransitionFactory;
-import com.bumptech.glide.request.transition.ViewAnimationFactory;
-import com.bumptech.glide.request.transition.ViewPropertyAnimationFactory;
-import com.bumptech.glide.request.transition.ViewPropertyTransition;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.request.transition.NoTransition;
+import com.bumptech.glide4.request.transition.TransitionFactory;
+import com.bumptech.glide4.request.transition.ViewAnimationFactory;
+import com.bumptech.glide4.request.transition.ViewPropertyAnimationFactory;
+import com.bumptech.glide4.request.transition.ViewPropertyTransition;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.request.transition.Transition;
 
 /**
  * A base class for setting a transition to use on a resource when a load completes.
@@ -48,7 +49,7 @@ public final CHILD transition(int viewAnimationId) {
    * may be wrapping when a resource load finishes.
    * Will only be run if the load was loaded asynchronously (i.e. was not in the memory cache).
    *
-   * @param animator The {@link com.bumptech.glide.request.transition.ViewPropertyTransition
+   * @param animator The {@link ViewPropertyTransition
    *                 .Animator} to run.
    * @return This request builder.
    */
@@ -59,7 +60,7 @@ public final CHILD transition(@NonNull ViewPropertyTransition.Animator animator)
 
   /**
    * Uses the given {@link TransitionFactory} to build a
-   * {@link com.bumptech.glide.request.transition.Transition} for each request started with these
+   * {@link Transition} for each request started with these
    * {@code TransitionOptions}.
    *
    * @return This request builder.
diff --git a/library/src/main/java/com/bumptech/glide/load/DataSource.java b/library/src/main/java/com/bumptech/glide4/load/DataSource.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/load/DataSource.java
rename to library/src/main/java/com/bumptech/glide4/load/DataSource.java
index 699a13bfe..f4784cad8 100644
--- a/library/src/main/java/com/bumptech/glide/load/DataSource.java
+++ b/library/src/main/java/com/bumptech/glide4/load/DataSource.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load;
+package com.bumptech.glide4.load;
 
 /**
  * Indicates the origin of some retrieved data.
diff --git a/library/src/main/java/com/bumptech/glide/load/DecodeFormat.java b/library/src/main/java/com/bumptech/glide4/load/DecodeFormat.java
similarity index 82%
rename from library/src/main/java/com/bumptech/glide/load/DecodeFormat.java
rename to library/src/main/java/com/bumptech/glide4/load/DecodeFormat.java
index 3fac0791c..61f3921b7 100644
--- a/library/src/main/java/com/bumptech/glide/load/DecodeFormat.java
+++ b/library/src/main/java/com/bumptech/glide4/load/DecodeFormat.java
@@ -1,24 +1,27 @@
-package com.bumptech.glide.load;
+package com.bumptech.glide4.load;
+
+import com.bumptech.glide4.load.resource.bitmap.Downsampler;
+import com.bumptech.glide4.request.RequestOptions;
 
 /**
  * Options for setting the value of {@link android.graphics.Bitmap#getConfig()} for
- * {@link android.graphics.Bitmap}s returned by {@link com.bumptech.glide.load.ResourceDecoder}s.
+ * {@link android.graphics.Bitmap}s returned by {@link ResourceDecoder}s.
  *
  * <p> Note - In some cases it may not be possible to obey the requested setting, not all
- * {@link com.bumptech.glide.load.resource.bitmap.Downsampler}s support setting formats and certain
+ * {@link Downsampler}s support setting formats and certain
  * images may not be able to be loaded as certain configurations. Therefore this class represents a
  * preference rather than a requirement. </p>
  */
 public enum DecodeFormat {
   /**
-   * Bitmaps returned by the {@link com.bumptech.glide.load.ResourceDecoder}.
+   * Bitmaps returned by the {@link ResourceDecoder}.
    * should return {@link android.graphics.Bitmap.Config#ARGB_8888} for
    * {@link android.graphics.Bitmap#getConfig()} when possible.
    *
    * <p>On Android O+, this format will will use ARGB_8888 only when it's not possible to use
    * {@link android.graphics.Bitmap.Config#HARDWARE}. More information is available about hardware
    * Bitmaps here: https://goo.gl/tn2A6k. If you need to disable hardware Bitmaps for a particular
-   * request, use {@link com.bumptech.glide.request.RequestOptions#disallowHardwareConfig()}.
+   * request, use {@link RequestOptions#disallowHardwareConfig()}.
    *
    * <p> GIF images decoded by {@link android.graphics.BitmapFactory} currently use an internal
    * hidden format that is returned as null from {@link android.graphics.Bitmap#getConfig()}. Since
diff --git a/library/src/main/java/com/bumptech/glide/load/EncodeStrategy.java b/library/src/main/java/com/bumptech/glide4/load/EncodeStrategy.java
similarity index 71%
rename from library/src/main/java/com/bumptech/glide/load/EncodeStrategy.java
rename to library/src/main/java/com/bumptech/glide4/load/EncodeStrategy.java
index 33eed74dc..51e52471b 100644
--- a/library/src/main/java/com/bumptech/glide/load/EncodeStrategy.java
+++ b/library/src/main/java/com/bumptech/glide4/load/EncodeStrategy.java
@@ -1,7 +1,7 @@
-package com.bumptech.glide.load;
+package com.bumptech.glide4.load;
 
 /**
- * Details how an {@link com.bumptech.glide.load.ResourceEncoder} will encode a resource to cache.
+ * Details how an {@link ResourceEncoder} will encode a resource to cache.
  */
 public enum EncodeStrategy {
   /**
diff --git a/library/src/main/java/com/bumptech/glide/load/Encoder.java b/library/src/main/java/com/bumptech/glide4/load/Encoder.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/load/Encoder.java
rename to library/src/main/java/com/bumptech/glide4/load/Encoder.java
index 400cc7422..f0c632fbf 100644
--- a/library/src/main/java/com/bumptech/glide/load/Encoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/Encoder.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load;
+package com.bumptech.glide4.load;
 
 import android.support.annotation.NonNull;
 import java.io.File;
diff --git a/library/src/main/java/com/bumptech/glide/load/HttpException.java b/library/src/main/java/com/bumptech/glide4/load/HttpException.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/load/HttpException.java
rename to library/src/main/java/com/bumptech/glide4/load/HttpException.java
index b13edc5d7..1308c4394 100644
--- a/library/src/main/java/com/bumptech/glide/load/HttpException.java
+++ b/library/src/main/java/com/bumptech/glide4/load/HttpException.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load;
+package com.bumptech.glide4.load;
 
 import android.support.annotation.Nullable;
 import java.io.IOException;
diff --git a/library/src/main/java/com/bumptech/glide/load/ImageHeaderParser.java b/library/src/main/java/com/bumptech/glide4/load/ImageHeaderParser.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/load/ImageHeaderParser.java
rename to library/src/main/java/com/bumptech/glide4/load/ImageHeaderParser.java
index b188c4df3..d53f96d2f 100644
--- a/library/src/main/java/com/bumptech/glide/load/ImageHeaderParser.java
+++ b/library/src/main/java/com/bumptech/glide4/load/ImageHeaderParser.java
@@ -1,7 +1,7 @@
-package com.bumptech.glide.load;
+package com.bumptech.glide4.load;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
 import java.io.IOException;
 import java.io.InputStream;
 import java.nio.ByteBuffer;
diff --git a/library/src/main/java/com/bumptech/glide/load/ImageHeaderParserUtils.java b/library/src/main/java/com/bumptech/glide4/load/ImageHeaderParserUtils.java
similarity index 69%
rename from library/src/main/java/com/bumptech/glide/load/ImageHeaderParserUtils.java
rename to library/src/main/java/com/bumptech/glide4/load/ImageHeaderParserUtils.java
index 97930be11..25113d1f7 100644
--- a/library/src/main/java/com/bumptech/glide/load/ImageHeaderParserUtils.java
+++ b/library/src/main/java/com/bumptech/glide4/load/ImageHeaderParserUtils.java
@@ -1,10 +1,9 @@
-package com.bumptech.glide.load;
+package com.bumptech.glide4.load;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.ImageHeaderParser.ImageType;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.resource.bitmap.RecyclableBufferedInputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.nio.ByteBuffer;
@@ -22,10 +21,10 @@ private ImageHeaderParserUtils() { }
 
   /** Returns the ImageType for the given InputStream. */
   @NonNull
-  public static ImageType getType(@NonNull List<ImageHeaderParser> parsers,
-      @Nullable InputStream is, @NonNull ArrayPool byteArrayPool) throws IOException {
+  public static ImageHeaderParser.ImageType getType(@NonNull List<ImageHeaderParser> parsers,
+                                                    @Nullable InputStream is, @NonNull ArrayPool byteArrayPool) throws IOException {
     if (is == null) {
-      return ImageType.UNKNOWN;
+      return ImageHeaderParser.ImageType.UNKNOWN;
     }
 
     if (!is.markSupported()) {
@@ -37,8 +36,8 @@ public static ImageType getType(@NonNull List<ImageHeaderParser> parsers,
     for (int i = 0, size = parsers.size(); i < size; i++) {
       ImageHeaderParser parser = parsers.get(i);
       try {
-        ImageType type = parser.getType(is);
-        if (type != ImageType.UNKNOWN) {
+        ImageHeaderParser.ImageType type = parser.getType(is);
+        if (type != ImageHeaderParser.ImageType.UNKNOWN) {
           return type;
         }
       } finally {
@@ -46,28 +45,28 @@ public static ImageType getType(@NonNull List<ImageHeaderParser> parsers,
       }
     }
 
-    return ImageType.UNKNOWN;
+    return ImageHeaderParser.ImageType.UNKNOWN;
   }
 
   /** Returns the ImageType for the given ByteBuffer. */
   @NonNull
-  public static ImageType getType(@NonNull List<ImageHeaderParser> parsers,
-      @Nullable ByteBuffer buffer)
+  public static ImageHeaderParser.ImageType getType(@NonNull List<ImageHeaderParser> parsers,
+                                                    @Nullable ByteBuffer buffer)
       throws IOException {
     if (buffer == null) {
-      return ImageType.UNKNOWN;
+      return ImageHeaderParser.ImageType.UNKNOWN;
     }
 
     //noinspection ForLoopReplaceableByForEach to improve perf
     for (int i = 0, size = parsers.size(); i < size; i++) {
       ImageHeaderParser parser = parsers.get(i);
-      ImageType type = parser.getType(buffer);
-      if (type != ImageType.UNKNOWN) {
+      ImageHeaderParser.ImageType type = parser.getType(buffer);
+      if (type != ImageHeaderParser.ImageType.UNKNOWN) {
         return type;
       }
     }
 
-    return ImageType.UNKNOWN;
+    return ImageHeaderParser.ImageType.UNKNOWN;
   }
 
   /**
diff --git a/library/src/main/java/com/bumptech/glide/load/Key.java b/library/src/main/java/com/bumptech/glide4/load/Key.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/load/Key.java
rename to library/src/main/java/com/bumptech/glide4/load/Key.java
index f78a7b168..7006809d6 100644
--- a/library/src/main/java/com/bumptech/glide/load/Key.java
+++ b/library/src/main/java/com/bumptech/glide4/load/Key.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load;
+package com.bumptech.glide4.load;
 
 import android.support.annotation.NonNull;
 import java.nio.charset.Charset;
diff --git a/library/src/main/java/com/bumptech/glide/load/MultiTransformation.java b/library/src/main/java/com/bumptech/glide4/load/MultiTransformation.java
similarity index 92%
rename from library/src/main/java/com/bumptech/glide/load/MultiTransformation.java
rename to library/src/main/java/com/bumptech/glide4/load/MultiTransformation.java
index 6b1d038f2..921da5f16 100644
--- a/library/src/main/java/com/bumptech/glide/load/MultiTransformation.java
+++ b/library/src/main/java/com/bumptech/glide4/load/MultiTransformation.java
@@ -1,8 +1,8 @@
-package com.bumptech.glide.load;
+package com.bumptech.glide4.load;
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.engine.Resource;
 import java.security.MessageDigest;
 import java.util.Arrays;
 import java.util.Collection;
@@ -10,7 +10,7 @@
 /**
  * A transformation that applies one or more transformations in iteration order to a resource.
  *
- * @param <T> The type of {@link com.bumptech.glide.load.engine.Resource} that will be transformed.
+ * @param <T> The type of {@link Resource} that will be transformed.
  */
 public class MultiTransformation<T> implements Transformation<T> {
   private final Collection<? extends Transformation<T>> transformations;
diff --git a/library/src/main/java/com/bumptech/glide/load/Option.java b/library/src/main/java/com/bumptech/glide4/load/Option.java
similarity index 93%
rename from library/src/main/java/com/bumptech/glide/load/Option.java
rename to library/src/main/java/com/bumptech/glide4/load/Option.java
index 561264871..0a90831a8 100644
--- a/library/src/main/java/com/bumptech/glide/load/Option.java
+++ b/library/src/main/java/com/bumptech/glide4/load/Option.java
@@ -1,14 +1,16 @@
-package com.bumptech.glide.load;
+package com.bumptech.glide4.load;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.load.engine.DiskCacheStrategy;
+
 import java.security.MessageDigest;
 
 /**
  * Defines available component (decoders, encoders, model loaders etc.) options with optional
  * default values and the ability to affect the resource disk cache key used by {@link
- * com.bumptech.glide.load.engine.DiskCacheStrategy#RESOURCE}.
+ * DiskCacheStrategy#RESOURCE}.
  *
  * <p>
  *   Implementations must either be unique (usually declared as static final variables), or
@@ -64,7 +66,7 @@ public void update(@NonNull byte[] keyBytes, @NonNull Object value,
 
   /**
    * Returns a new {@link Option} that uses the given {@link
-   * com.bumptech.glide.load.Option.CacheKeyUpdater} to update disk cache keys.
+   * Option.CacheKeyUpdater} to update disk cache keys.
    *
    * @param key A unique package prefixed {@link String} that identifies this option (must be
    *            stable across builds, so {@link Class#getName()} should <em>not</em> be used).
@@ -77,7 +79,7 @@ public void update(@NonNull byte[] keyBytes, @NonNull Object value,
 
   /**
    * Returns a new {@link Option} that uses the given {@link
-   * com.bumptech.glide.load.Option.CacheKeyUpdater} to update disk cache keys and provides
+   * Option.CacheKeyUpdater} to update disk cache keys and provides
    * the given value as the default value.
    *
    * @param key A unique package prefixed {@link String} that identifies this option (must be
@@ -108,7 +110,7 @@ public T getDefaultValue() {
 
   /**
    * Updates the given {@link MessageDigest} used to construct a cache key with the given
-   * value using the {@link com.bumptech.glide.load.Option.CacheKeyUpdater} optionally provided in
+   * value using the {@link Option.CacheKeyUpdater} optionally provided in
    * the constructor.
    */
   public void update(@NonNull T value, @NonNull MessageDigest messageDigest) {
diff --git a/library/src/main/java/com/bumptech/glide/load/Options.java b/library/src/main/java/com/bumptech/glide4/load/Options.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/load/Options.java
rename to library/src/main/java/com/bumptech/glide4/load/Options.java
index 6609a080f..3bb7b89c5 100644
--- a/library/src/main/java/com/bumptech/glide/load/Options.java
+++ b/library/src/main/java/com/bumptech/glide4/load/Options.java
@@ -1,10 +1,10 @@
-package com.bumptech.glide.load;
+package com.bumptech.glide4.load;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v4.util.ArrayMap;
 import android.support.v4.util.SimpleArrayMap;
-import com.bumptech.glide.util.CachedHashCodeArrayMap;
+import com.bumptech.glide4.util.CachedHashCodeArrayMap;
 import java.security.MessageDigest;
 
 /**
diff --git a/library/src/main/java/com/bumptech/glide/load/ResourceDecoder.java b/library/src/main/java/com/bumptech/glide4/load/ResourceDecoder.java
similarity index 90%
rename from library/src/main/java/com/bumptech/glide/load/ResourceDecoder.java
rename to library/src/main/java/com/bumptech/glide4/load/ResourceDecoder.java
index 977339e25..5998b3f35 100644
--- a/library/src/main/java/com/bumptech/glide/load/ResourceDecoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/ResourceDecoder.java
@@ -1,8 +1,10 @@
-package com.bumptech.glide.load;
+package com.bumptech.glide4.load;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.request.target.Target;
+
 import java.io.IOException;
 
 /**
@@ -40,10 +42,10 @@
    *
    * @param source  The data the resource should be decoded from.
    * @param width   The ideal width in pixels of the decoded resource, or {@link
-   *                com.bumptech.glide.request.target.Target#SIZE_ORIGINAL} to indicate the original
+   *                Target#SIZE_ORIGINAL} to indicate the original
    *                resource width.
    * @param height  The ideal height in pixels of the decoded resource, or {@link
-   *                com.bumptech.glide.request.target.Target#SIZE_ORIGINAL} to indicate the original
+   *                Target#SIZE_ORIGINAL} to indicate the original
    *                resource height.
    * @param options A map of string keys to objects that may or may not contain options available to
    *                this particular implementation. Implementations should not assume that any or
diff --git a/library/src/main/java/com/bumptech/glide/load/ResourceEncoder.java b/library/src/main/java/com/bumptech/glide4/load/ResourceEncoder.java
similarity index 83%
rename from library/src/main/java/com/bumptech/glide/load/ResourceEncoder.java
rename to library/src/main/java/com/bumptech/glide4/load/ResourceEncoder.java
index d17985845..1f3bd0494 100644
--- a/library/src/main/java/com/bumptech/glide/load/ResourceEncoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/ResourceEncoder.java
@@ -1,7 +1,7 @@
-package com.bumptech.glide.load;
+package com.bumptech.glide4.load;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.engine.Resource;
 
 /**
  * An interface for writing data from a resource to some persistent data store (i.e. a local File
diff --git a/library/src/main/java/com/bumptech/glide/load/Transformation.java b/library/src/main/java/com/bumptech/glide4/load/Transformation.java
similarity index 90%
rename from library/src/main/java/com/bumptech/glide/load/Transformation.java
rename to library/src/main/java/com/bumptech/glide4/load/Transformation.java
index 2e9ab29d9..02f608c08 100644
--- a/library/src/main/java/com/bumptech/glide/load/Transformation.java
+++ b/library/src/main/java/com/bumptech/glide4/load/Transformation.java
@@ -1,8 +1,11 @@
-package com.bumptech.glide.load;
+package com.bumptech.glide4.load;
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.engine.DiskCacheStrategy;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.request.target.Target;
+
 import java.nio.charset.Charset;
 import java.security.MessageDigest;
 
@@ -47,7 +50,7 @@
    * Transformation.
    *
    * <p>During development you may need to either using {@link
-   * com.bumptech.glide.load.engine.DiskCacheStrategy#NONE} or make sure {@link
+   * DiskCacheStrategy#NONE} or make sure {@link
    * #updateDiskCacheKey(java.security.MessageDigest)} changes each time you make a change to the
    * Transformation. Otherwise the resource you request may be loaded from disk cache and your
    * Transformation may not be called.
@@ -55,10 +58,10 @@
    * @param context The Application context
    * @param resource  The resource to transform.
    * @param outWidth  The width of the view or target the resource will be displayed in, or {@link
-   *                  com.bumptech.glide.request.target.Target#SIZE_ORIGINAL} to indicate the
+   *                  Target#SIZE_ORIGINAL} to indicate the
    *                  original resource width.
    * @param outHeight The height of the view or target the resource will be displayed in, or {@link
-   *                  com.bumptech.glide.request.target.Target#SIZE_ORIGINAL} to indicate the
+   *                  Target#SIZE_ORIGINAL} to indicate the
    *                  original resource height.
    * @return The transformed resource.
    */
diff --git a/library/src/main/java/com/bumptech/glide/load/data/AssetFileDescriptorLocalUriFetcher.java b/library/src/main/java/com/bumptech/glide4/load/data/AssetFileDescriptorLocalUriFetcher.java
similarity index 96%
rename from library/src/main/java/com/bumptech/glide/load/data/AssetFileDescriptorLocalUriFetcher.java
rename to library/src/main/java/com/bumptech/glide4/load/data/AssetFileDescriptorLocalUriFetcher.java
index 66a287823..b132ce6b6 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/AssetFileDescriptorLocalUriFetcher.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/AssetFileDescriptorLocalUriFetcher.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.data;
+package com.bumptech.glide4.load.data;
 
 import android.content.ContentResolver;
 import android.content.res.AssetFileDescriptor;
diff --git a/library/src/main/java/com/bumptech/glide/load/data/AssetPathFetcher.java b/library/src/main/java/com/bumptech/glide4/load/data/AssetPathFetcher.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/load/data/AssetPathFetcher.java
rename to library/src/main/java/com/bumptech/glide4/load/data/AssetPathFetcher.java
index f21eb6c64..09c2cde8a 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/AssetPathFetcher.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/AssetPathFetcher.java
@@ -1,10 +1,11 @@
-package com.bumptech.glide.load.data;
+package com.bumptech.glide4.load.data;
 
 import android.content.res.AssetManager;
 import android.support.annotation.NonNull;
 import android.util.Log;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+
 import java.io.IOException;
 
 /**
diff --git a/library/src/main/java/com/bumptech/glide/load/data/BufferedOutputStream.java b/library/src/main/java/com/bumptech/glide4/load/data/BufferedOutputStream.java
similarity index 96%
rename from library/src/main/java/com/bumptech/glide/load/data/BufferedOutputStream.java
rename to library/src/main/java/com/bumptech/glide4/load/data/BufferedOutputStream.java
index ce9cd17b1..cc0f99bf7 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/BufferedOutputStream.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/BufferedOutputStream.java
@@ -1,8 +1,8 @@
-package com.bumptech.glide.load.data;
+package com.bumptech.glide4.load.data;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.VisibleForTesting;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
 import java.io.IOException;
 import java.io.OutputStream;
 
diff --git a/library/src/main/java/com/bumptech/glide/load/data/DataFetcher.java b/library/src/main/java/com/bumptech/glide4/load/data/DataFetcher.java
similarity index 80%
rename from library/src/main/java/com/bumptech/glide/load/data/DataFetcher.java
rename to library/src/main/java/com/bumptech/glide4/load/data/DataFetcher.java
index 4a1674fd9..10a2625a9 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/DataFetcher.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/DataFetcher.java
@@ -1,20 +1,22 @@
-package com.bumptech.glide.load.data;
+package com.bumptech.glide4.load.data;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.model.ModelLoader;
 
 /**
  * Lazily retrieves data that can be used to load a resource.
  *
  * <p> A new instance is
- * created per resource load by {@link com.bumptech.glide.load.model.ModelLoader}. {@link
- * #loadData(com.bumptech.glide.Priority, com.bumptech.glide.load.data.DataFetcher.DataCallback)}
+ * created per resource load by {@link ModelLoader}. {@link
+ * #loadData(Priority, DataFetcher.DataCallback)}
  * may or may not be called for any given load depending on whether or not the corresponding
  * resource is cached. Cancel also may or may not be called. If
- * {@link #loadData(com.bumptech.glide.Priority,
- * com.bumptech.glide.load.data.DataFetcher.DataCallback)}} is called, then so {@link #cleanup()}
+ * {@link #loadData(Priority,
+ * DataFetcher.DataCallback)}} is called, then so {@link #cleanup()}
  * will be called. </p>
  *
  * @param <T> The type of data to be loaded (InputStream, byte[], File etc).
@@ -67,9 +69,9 @@
 
   /**
    * Cleanup or recycle any resources used by this data fetcher. This method will be called in a
-   * finally block after the data provided by {@link #loadData(com.bumptech.glide.Priority,
-   * com.bumptech.glide.load.data.DataFetcher.DataCallback)} has been decoded by the
-   * {@link com.bumptech.glide.load.ResourceDecoder}.
+   * finally block after the data provided by {@link #loadData(Priority,
+   * DataFetcher.DataCallback)} has been decoded by the
+   * {@link ResourceDecoder}.
    *
    * <p> Note - this method will be run on a background thread so blocking I/O is safe. </p>
    */
@@ -96,7 +98,7 @@
   Class<T> getDataClass();
 
   /**
-   * Returns the {@link com.bumptech.glide.load.DataSource} this fetcher will return data from.
+   * Returns the {@link DataSource} this fetcher will return data from.
    */
   @NonNull
   DataSource getDataSource();
diff --git a/library/src/main/java/com/bumptech/glide/load/data/DataRewinder.java b/library/src/main/java/com/bumptech/glide4/load/data/DataRewinder.java
similarity index 74%
rename from library/src/main/java/com/bumptech/glide/load/data/DataRewinder.java
rename to library/src/main/java/com/bumptech/glide4/load/data/DataRewinder.java
index 805198ca6..1d5413370 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/DataRewinder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/DataRewinder.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.data;
+package com.bumptech.glide4.load.data;
 
 import android.support.annotation.NonNull;
 import java.io.IOException;
@@ -12,21 +12,21 @@
 
   /**
    * A factory interface for producing individual
-   * {@link com.bumptech.glide.load.data.DataRewinder}s.
+   * {@link DataRewinder}s.
    *
-   * @param <T> The type of data that the {@link com.bumptech.glide.load.data.DataRewinder} will
+   * @param <T> The type of data that the {@link DataRewinder} will
    *            wrap.
    */
   interface Factory<T> {
     /**
-     * Returns a new {@link com.bumptech.glide.load.data.DataRewinder} wrapping the given data.
+     * Returns a new {@link DataRewinder} wrapping the given data.
      */
     @NonNull
     DataRewinder<T> build(@NonNull T data);
 
     /**
      * Returns the class of data this factory can produce
-     * {@link com.bumptech.glide.load.data.DataRewinder}s for.
+     * {@link DataRewinder}s for.
      */
     @NonNull
     Class<T> getDataClass();
diff --git a/library/src/main/java/com/bumptech/glide/load/data/DataRewinderRegistry.java b/library/src/main/java/com/bumptech/glide4/load/data/DataRewinderRegistry.java
similarity index 91%
rename from library/src/main/java/com/bumptech/glide/load/data/DataRewinderRegistry.java
rename to library/src/main/java/com/bumptech/glide4/load/data/DataRewinderRegistry.java
index 9aa20bc8f..761e67c05 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/DataRewinderRegistry.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/DataRewinderRegistry.java
@@ -1,12 +1,13 @@
-package com.bumptech.glide.load.data;
+package com.bumptech.glide4.load.data;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.util.Preconditions;
+
 import java.util.HashMap;
 import java.util.Map;
 
 /**
- * Stores a mapping of data class to {@link com.bumptech.glide.load.data.DataRewinder.Factory} and
+ * Stores a mapping of data class to {@link DataRewinder.Factory} and
  * allows registration of new types and factories.
  */
 public class DataRewinderRegistry {
diff --git a/library/src/main/java/com/bumptech/glide/load/data/ExifOrientationStream.java b/library/src/main/java/com/bumptech/glide4/load/data/ExifOrientationStream.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/load/data/ExifOrientationStream.java
rename to library/src/main/java/com/bumptech/glide4/load/data/ExifOrientationStream.java
index 85df91b5f..93aba5f32 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/ExifOrientationStream.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/ExifOrientationStream.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.data;
+package com.bumptech.glide4.load.data;
 
 import android.support.annotation.NonNull;
 import java.io.FilterInputStream;
diff --git a/library/src/main/java/com/bumptech/glide/load/data/FileDescriptorAssetPathFetcher.java b/library/src/main/java/com/bumptech/glide4/load/data/FileDescriptorAssetPathFetcher.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/load/data/FileDescriptorAssetPathFetcher.java
rename to library/src/main/java/com/bumptech/glide4/load/data/FileDescriptorAssetPathFetcher.java
index 176f206d9..0decd82a5 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/FileDescriptorAssetPathFetcher.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/FileDescriptorAssetPathFetcher.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.data;
+package com.bumptech.glide4.load.data;
 
 import android.content.res.AssetManager;
 import android.os.ParcelFileDescriptor;
diff --git a/library/src/main/java/com/bumptech/glide/load/data/FileDescriptorLocalUriFetcher.java b/library/src/main/java/com/bumptech/glide4/load/data/FileDescriptorLocalUriFetcher.java
similarity index 96%
rename from library/src/main/java/com/bumptech/glide/load/data/FileDescriptorLocalUriFetcher.java
rename to library/src/main/java/com/bumptech/glide4/load/data/FileDescriptorLocalUriFetcher.java
index 2a159b92b..5102267ff 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/FileDescriptorLocalUriFetcher.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/FileDescriptorLocalUriFetcher.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.data;
+package com.bumptech.glide4.load.data;
 
 import android.content.ContentResolver;
 import android.content.res.AssetFileDescriptor;
diff --git a/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java b/library/src/main/java/com/bumptech/glide4/load/data/HttpUrlFetcher.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java
rename to library/src/main/java/com/bumptech/glide4/load/data/HttpUrlFetcher.java
index e8f914b6e..43475ecfa 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/HttpUrlFetcher.java
@@ -1,16 +1,17 @@
-package com.bumptech.glide.load.data;
+package com.bumptech.glide4.load.data;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.VisibleForTesting;
 import android.text.TextUtils;
 import android.util.Log;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.HttpException;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.util.ContentLengthInputStream;
-import com.bumptech.glide.util.LogTime;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.HttpException;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.util.ContentLengthInputStream;
+import com.bumptech.glide4.util.LogTime;
+import com.bumptech.glide4.util.Synthetic;
+
 import java.io.IOException;
 import java.io.InputStream;
 import java.net.HttpURLConnection;
diff --git a/library/src/main/java/com/bumptech/glide/load/data/InputStreamRewinder.java b/library/src/main/java/com/bumptech/glide4/load/data/InputStreamRewinder.java
similarity index 81%
rename from library/src/main/java/com/bumptech/glide/load/data/InputStreamRewinder.java
rename to library/src/main/java/com/bumptech/glide4/load/data/InputStreamRewinder.java
index 9a0766ce7..d43b3c211 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/InputStreamRewinder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/InputStreamRewinder.java
@@ -1,9 +1,10 @@
-package com.bumptech.glide.load.data;
+package com.bumptech.glide4.load.data;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.resource.bitmap.RecyclableBufferedInputStream;
+import com.bumptech.glide4.util.Synthetic;
+
 import java.io.IOException;
 import java.io.InputStream;
 
@@ -36,7 +37,7 @@ public void cleanup() {
   }
 
   /**
-   * Factory for producing {@link com.bumptech.glide.load.data.InputStreamRewinder}s from {@link
+   * Factory for producing {@link InputStreamRewinder}s from {@link
    * java.io.InputStream}s.
    */
   public static final class Factory implements DataRewinder.Factory<InputStream> {
diff --git a/library/src/main/java/com/bumptech/glide/load/data/LocalUriFetcher.java b/library/src/main/java/com/bumptech/glide4/load/data/LocalUriFetcher.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/load/data/LocalUriFetcher.java
rename to library/src/main/java/com/bumptech/glide4/load/data/LocalUriFetcher.java
index 68ee75305..b90decad6 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/LocalUriFetcher.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/LocalUriFetcher.java
@@ -1,11 +1,12 @@
-package com.bumptech.glide.load.data;
+package com.bumptech.glide4.load.data;
 
 import android.content.ContentResolver;
 import android.net.Uri;
 import android.support.annotation.NonNull;
 import android.util.Log;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+
 import java.io.FileNotFoundException;
 import java.io.IOException;
 
diff --git a/library/src/main/java/com/bumptech/glide/load/data/StreamAssetPathFetcher.java b/library/src/main/java/com/bumptech/glide4/load/data/StreamAssetPathFetcher.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/load/data/StreamAssetPathFetcher.java
rename to library/src/main/java/com/bumptech/glide4/load/data/StreamAssetPathFetcher.java
index aaad13214..557c0ef14 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/StreamAssetPathFetcher.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/StreamAssetPathFetcher.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.data;
+package com.bumptech.glide4.load.data;
 
 import android.content.res.AssetManager;
 import android.support.annotation.NonNull;
diff --git a/library/src/main/java/com/bumptech/glide/load/data/StreamLocalUriFetcher.java b/library/src/main/java/com/bumptech/glide4/load/data/StreamLocalUriFetcher.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/load/data/StreamLocalUriFetcher.java
rename to library/src/main/java/com/bumptech/glide4/load/data/StreamLocalUriFetcher.java
index 758e4a543..72e79d973 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/StreamLocalUriFetcher.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/StreamLocalUriFetcher.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.data;
+package com.bumptech.glide4.load.data;
 
 import android.content.ContentResolver;
 import android.content.UriMatcher;
diff --git a/library/src/main/java/com/bumptech/glide/load/data/mediastore/FileService.java b/library/src/main/java/com/bumptech/glide4/load/data/mediastore/FileService.java
similarity index 82%
rename from library/src/main/java/com/bumptech/glide/load/data/mediastore/FileService.java
rename to library/src/main/java/com/bumptech/glide4/load/data/mediastore/FileService.java
index 7d511373f..6bc6592a0 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/mediastore/FileService.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/mediastore/FileService.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.data.mediastore;
+package com.bumptech.glide4.load.data.mediastore;
 
 import java.io.File;
 
diff --git a/library/src/main/java/com/bumptech/glide/load/data/mediastore/MediaStoreUtil.java b/library/src/main/java/com/bumptech/glide4/load/data/mediastore/MediaStoreUtil.java
similarity index 91%
rename from library/src/main/java/com/bumptech/glide/load/data/mediastore/MediaStoreUtil.java
rename to library/src/main/java/com/bumptech/glide4/load/data/mediastore/MediaStoreUtil.java
index d7f7e44af..9ea9300a2 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/mediastore/MediaStoreUtil.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/mediastore/MediaStoreUtil.java
@@ -1,9 +1,9 @@
-package com.bumptech.glide.load.data.mediastore;
+package com.bumptech.glide4.load.data.mediastore;
 
 import android.content.ContentResolver;
 import android.net.Uri;
 import android.provider.MediaStore;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.request.target.Target;
 
 /**
  * Utility classes for interacting with the media store.
diff --git a/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbFetcher.java b/library/src/main/java/com/bumptech/glide4/load/data/mediastore/ThumbFetcher.java
similarity index 93%
rename from library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbFetcher.java
rename to library/src/main/java/com/bumptech/glide4/load/data/mediastore/ThumbFetcher.java
index 3b90b0a6b..ca8fc8d99 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbFetcher.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/mediastore/ThumbFetcher.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.data.mediastore;
+package com.bumptech.glide4.load.data.mediastore;
 
 import android.content.ContentResolver;
 import android.content.Context;
@@ -8,12 +8,13 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.VisibleForTesting;
 import android.util.Log;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.data.ExifOrientationStream;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.data.ExifOrientationStream;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStream;
diff --git a/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbnailQuery.java b/library/src/main/java/com/bumptech/glide4/load/data/mediastore/ThumbnailQuery.java
similarity index 69%
rename from library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbnailQuery.java
rename to library/src/main/java/com/bumptech/glide4/load/data/mediastore/ThumbnailQuery.java
index 07474cd13..9738a5b1b 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbnailQuery.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/mediastore/ThumbnailQuery.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.data.mediastore;
+package com.bumptech.glide4.load.data.mediastore;
 
 import android.database.Cursor;
 import android.net.Uri;
diff --git a/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbnailStreamOpener.java b/library/src/main/java/com/bumptech/glide4/load/data/mediastore/ThumbnailStreamOpener.java
similarity index 93%
rename from library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbnailStreamOpener.java
rename to library/src/main/java/com/bumptech/glide4/load/data/mediastore/ThumbnailStreamOpener.java
index 7749477ac..697a6c024 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbnailStreamOpener.java
+++ b/library/src/main/java/com/bumptech/glide4/load/data/mediastore/ThumbnailStreamOpener.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.data.mediastore;
+package com.bumptech.glide4.load.data.mediastore;
 
 import android.content.ContentResolver;
 import android.database.Cursor;
@@ -7,9 +7,10 @@
 import android.support.annotation.Nullable;
 import android.text.TextUtils;
 import android.util.Log;
-import com.bumptech.glide.load.ImageHeaderParser;
-import com.bumptech.glide.load.ImageHeaderParserUtils;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.ImageHeaderParser;
+import com.bumptech.glide4.load.ImageHeaderParserUtils;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+
 import java.io.File;
 import java.io.FileNotFoundException;
 import java.io.IOException;
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/ActiveResources.java b/library/src/main/java/com/bumptech/glide4/load/engine/ActiveResources.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/load/engine/ActiveResources.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/ActiveResources.java
index 9b25b8a97..8235f4173 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/ActiveResources.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/ActiveResources.java
@@ -1,14 +1,14 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.os.Process;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.annotation.VisibleForTesting;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.engine.EngineResource.ResourceListener;
-import com.bumptech.glide.util.Executors;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.util.Executors;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Synthetic;
+
 import java.lang.ref.ReferenceQueue;
 import java.lang.ref.WeakReference;
 import java.util.HashMap;
@@ -24,7 +24,7 @@
   final Map<Key, ResourceWeakReference> activeEngineResources = new HashMap<>();
   private final ReferenceQueue<EngineResource<?>> resourceReferenceQueue = new ReferenceQueue<>();
 
-  private ResourceListener listener;
+  private EngineResource.ResourceListener listener;
 
   private volatile boolean isShutdown;
   @Nullable
@@ -65,7 +65,7 @@ public void run() {
         });
   }
 
-  void setListener(ResourceListener listener) {
+  void setListener(EngineResource.ResourceListener listener) {
     synchronized (listener) {
       synchronized (this) {
         this.listener = listener;
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/CallbackException.java b/library/src/main/java/com/bumptech/glide4/load/engine/CallbackException.java
similarity index 92%
rename from library/src/main/java/com/bumptech/glide/load/engine/CallbackException.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/CallbackException.java
index 9692fa765..61247028d 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/CallbackException.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/CallbackException.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 /**
  * An exception indicating that code outside of Glide threw an unexpected exception.
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/DataCacheGenerator.java b/library/src/main/java/com/bumptech/glide4/load/engine/DataCacheGenerator.java
similarity index 89%
rename from library/src/main/java/com/bumptech/glide/load/engine/DataCacheGenerator.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/DataCacheGenerator.java
index bc19d18eb..c0e4474be 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/DataCacheGenerator.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/DataCacheGenerator.java
@@ -1,16 +1,17 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoader.LoadData;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoader.LoadData;
+
 import java.io.File;
 import java.util.List;
 
 /**
- * Generates {@link com.bumptech.glide.load.data.DataFetcher DataFetchers} from cache files
+ * Generates {@link DataFetcher DataFetchers} from cache files
  * containing original unmodified source data.
  */
 class DataCacheGenerator implements DataFetcherGenerator,
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/DataCacheKey.java b/library/src/main/java/com/bumptech/glide4/load/engine/DataCacheKey.java
similarity index 93%
rename from library/src/main/java/com/bumptech/glide/load/engine/DataCacheKey.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/DataCacheKey.java
index 5177438a9..b879b602b 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/DataCacheKey.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/DataCacheKey.java
@@ -1,7 +1,8 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Key;
+import com.bumptech.glide4.load.Key;
+
 import java.security.MessageDigest;
 
 /**
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/DataCacheWriter.java b/library/src/main/java/com/bumptech/glide4/load/engine/DataCacheWriter.java
similarity index 67%
rename from library/src/main/java/com/bumptech/glide/load/engine/DataCacheWriter.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/DataCacheWriter.java
index 59f39bd00..5e49a80e7 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/DataCacheWriter.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/DataCacheWriter.java
@@ -1,16 +1,18 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Encoder;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.cache.DiskCache;
+import com.bumptech.glide4.load.Encoder;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.cache.DiskCache;
+import com.bumptech.glide4.load.ResourceEncoder;
+
 import java.io.File;
 
 /**
  * Writes original source data or downsampled/transformed resource data to cache using the
- * provided {@link com.bumptech.glide.load.Encoder} or
- * {@link com.bumptech.glide.load.ResourceEncoder} and the given data or
- * {@link com.bumptech.glide.load.engine.Resource}.
+ * provided {@link Encoder} or
+ * {@link ResourceEncoder} and the given data or
+ * {@link Resource}.
  *
  * @param <DataType> The type of data that will be encoded (InputStream, ByteBuffer,
  *                  Resource<Bitmap> etc).
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/DataFetcherGenerator.java b/library/src/main/java/com/bumptech/glide4/load/engine/DataFetcherGenerator.java
similarity index 67%
rename from library/src/main/java/com/bumptech/glide/load/engine/DataFetcherGenerator.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/DataFetcherGenerator.java
index ae7cddb8d..6cac48589 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/DataFetcherGenerator.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/DataFetcherGenerator.java
@@ -1,18 +1,19 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.data.DataFetcher;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.model.ModelLoader;
 
 /**
- * Generates a series of {@link com.bumptech.glide.load.data.DataFetcher DataFetchers} using
- * registered {@link com.bumptech.glide.load.model.ModelLoader ModelLoaders} and a model.
+ * Generates a series of {@link DataFetcher DataFetchers} using
+ * registered {@link ModelLoader ModelLoaders} and a model.
  */
-interface DataFetcherGenerator {
+public interface DataFetcherGenerator {
   /**
    * Called when the generator has finished loading data from a
-   * {@link com.bumptech.glide.load.data.DataFetcher}.
+   * {@link DataFetcher}.
    */
   interface FetcherReadyCallback {
 
@@ -31,7 +32,7 @@
      * @param attemptedKey The key we were loading data from (may be an alternate).
      */
     void onDataFetcherReady(Key sourceKey, @Nullable Object data, DataFetcher<?> fetcher,
-        DataSource dataSource, Key attemptedKey);
+                            DataSource dataSource, Key attemptedKey);
 
     /**
      * Notifies the callback when the load fails.
@@ -46,8 +47,8 @@ void onDataFetcherFailed(Key attemptedKey, Exception e, DataFetcher<?> fetcher,
   }
 
   /**
-   * Attempts to a single new {@link com.bumptech.glide.load.data.DataFetcher} and returns true if
-   * a {@link com.bumptech.glide.load.data.DataFetcher} was started, and false otherwise.
+   * Attempts to a single new {@link DataFetcher} and returns true if
+   * a {@link DataFetcher} was started, and false otherwise.
    */
   boolean startNext();
 
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/DecodeHelper.java b/library/src/main/java/com/bumptech/glide4/load/engine/DecodeHelper.java
similarity index 89%
rename from library/src/main/java/com/bumptech/glide/load/engine/DecodeHelper.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/DecodeHelper.java
index 6a4283f1c..de234c001 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/DecodeHelper.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/DecodeHelper.java
@@ -1,19 +1,19 @@
-package com.bumptech.glide.load.engine;
-
-import com.bumptech.glide.GlideContext;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.Registry;
-import com.bumptech.glide.load.Encoder;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceEncoder;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.DecodeJob.DiskCacheProvider;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.load.engine.cache.DiskCache;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoader.LoadData;
-import com.bumptech.glide.load.resource.UnitTransformation;
+package com.bumptech.glide4.load.engine;
+
+import com.bumptech.glide4.GlideContext;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.Registry;
+import com.bumptech.glide4.load.Encoder;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceEncoder;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.cache.DiskCache;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoader.LoadData;
+import com.bumptech.glide4.load.resource.UnitTransformation;
+
 import java.io.File;
 import java.util.ArrayList;
 import java.util.List;
@@ -57,7 +57,7 @@
       Map<Class<?>, Transformation<?>> transformations,
       boolean isTransformationRequired,
       boolean isScaleOnlyOrNoTransform,
-      DiskCacheProvider diskCacheProvider) {
+      DecodeJob.DiskCacheProvider diskCacheProvider) {
     this.glideContext = glideContext;
     this.model = model;
     this.signature = signature;
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java b/library/src/main/java/com/bumptech/glide4/load/engine/DecodeJob.java
similarity index 96%
rename from library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/DecodeJob.java
index 0f05483e0..fffff63cf 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/DecodeJob.java
@@ -1,27 +1,28 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.os.Build;
 import android.support.annotation.NonNull;
 import android.support.v4.util.Pools;
 import android.util.Log;
-import com.bumptech.glide.GlideContext;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.Registry;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.EncodeStrategy;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceEncoder;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.data.DataRewinder;
-import com.bumptech.glide.load.engine.cache.DiskCache;
-import com.bumptech.glide.load.resource.bitmap.Downsampler;
-import com.bumptech.glide.util.LogTime;
-import com.bumptech.glide.util.Synthetic;
-import com.bumptech.glide.util.pool.FactoryPools.Poolable;
-import com.bumptech.glide.util.pool.GlideTrace;
-import com.bumptech.glide.util.pool.StateVerifier;
+import com.bumptech.glide4.GlideContext;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.Registry;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.EncodeStrategy;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceEncoder;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.data.DataRewinder;
+import com.bumptech.glide4.load.engine.cache.DiskCache;
+import com.bumptech.glide4.load.resource.bitmap.Downsampler;
+import com.bumptech.glide4.util.LogTime;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.util.pool.GlideTrace;
+import com.bumptech.glide4.util.pool.StateVerifier;
+import com.bumptech.glide4.util.pool.FactoryPools;
+
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
@@ -38,7 +39,7 @@
 class DecodeJob<R> implements DataFetcherGenerator.FetcherReadyCallback,
     Runnable,
     Comparable<DecodeJob<?>>,
-    Poolable {
+        FactoryPools.Poolable {
   private static final String TAG = "DecodeJob";
 
   private final DecodeHelper<R> decodeHelper = new DecodeHelper<>();
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java b/library/src/main/java/com/bumptech/glide4/load/engine/DecodePath.java
similarity index 90%
rename from library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/DecodePath.java
index 919dc7584..8f0bab100 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/DecodePath.java
@@ -1,13 +1,14 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.support.annotation.NonNull;
 import android.support.v4.util.Pools.Pool;
 import android.util.Log;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.data.DataRewinder;
-import com.bumptech.glide.load.resource.transcode.ResourceTranscoder;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.data.DataRewinder;
+import com.bumptech.glide4.load.resource.transcode.ResourceTranscoder;
+import com.bumptech.glide4.util.Preconditions;
+
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.List;
@@ -41,7 +42,7 @@ public DecodePath(Class<DataType> dataClass, Class<ResourceType> resourceClass,
   }
 
   public Resource<Transcode> decode(DataRewinder<DataType> rewinder, int width, int height,
-      @NonNull Options options, DecodeCallback<ResourceType> callback) throws GlideException {
+                                    @NonNull Options options, DecodeCallback<ResourceType> callback) throws GlideException {
     Resource<ResourceType> decoded = decodeResource(rewinder, width, height, options);
     Resource<ResourceType> transformed = callback.onResourceDecoded(decoded);
     return transcoder.transcode(transformed, options);
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/DiskCacheStrategy.java b/library/src/main/java/com/bumptech/glide4/load/engine/DiskCacheStrategy.java
similarity index 91%
rename from library/src/main/java/com/bumptech/glide/load/engine/DiskCacheStrategy.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/DiskCacheStrategy.java
index b110e3121..947fba5fd 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/DiskCacheStrategy.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/DiskCacheStrategy.java
@@ -1,7 +1,9 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.EncodeStrategy;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.EncodeStrategy;
+import com.bumptech.glide4.load.ResourceEncoder;
+import com.bumptech.glide4.load.data.DataFetcher;
 
 /**
  * Set of available caching strategies for media.
@@ -115,10 +117,10 @@ public boolean decodeCachedData() {
 
   /**
    * Tries to intelligently choose a strategy based on the data source of the
-   * {@link com.bumptech.glide.load.data.DataFetcher} and the
-   * {@link com.bumptech.glide.load.EncodeStrategy} of the
-   * {@link com.bumptech.glide.load.ResourceEncoder} (if an
-   * {@link com.bumptech.glide.load.ResourceEncoder} is available).
+   * {@link DataFetcher} and the
+   * {@link EncodeStrategy} of the
+   * {@link ResourceEncoder} (if an
+   * {@link ResourceEncoder} is available).
    */
   public static final DiskCacheStrategy AUTOMATIC = new DiskCacheStrategy() {
     @Override
@@ -160,7 +162,7 @@ public boolean decodeCachedData() {
    * @param dataSource Indicates where the data used to decode the resource was originally
    *                   retrieved.
    * @param encodeStrategy The {@link EncodeStrategy} the {@link
-   * com.bumptech.glide.load.ResourceEncoder} will use to encode the resource.
+   * ResourceEncoder} will use to encode the resource.
    */
   public abstract boolean isResourceCacheable(boolean isFromAlternateCacheKey,
       DataSource dataSource, EncodeStrategy encodeStrategy);
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/Engine.java b/library/src/main/java/com/bumptech/glide4/load/engine/Engine.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/load/engine/Engine.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/Engine.java
index f3050c8b7..7a557fd14 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/Engine.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/Engine.java
@@ -1,26 +1,27 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.annotation.VisibleForTesting;
 import android.support.v4.util.Pools;
 import android.util.Log;
-import com.bumptech.glide.GlideContext;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.cache.DiskCache;
-import com.bumptech.glide.load.engine.cache.DiskCacheAdapter;
-import com.bumptech.glide.load.engine.cache.MemoryCache;
-import com.bumptech.glide.load.engine.executor.GlideExecutor;
-import com.bumptech.glide.request.ResourceCallback;
-import com.bumptech.glide.util.Executors;
-import com.bumptech.glide.util.LogTime;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Synthetic;
-import com.bumptech.glide.util.pool.FactoryPools;
+import com.bumptech.glide4.GlideContext;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.cache.DiskCache;
+import com.bumptech.glide4.load.engine.cache.DiskCacheAdapter;
+import com.bumptech.glide4.load.engine.cache.MemoryCache;
+import com.bumptech.glide4.load.engine.executor.GlideExecutor;
+import com.bumptech.glide4.request.ResourceCallback;
+import com.bumptech.glide4.util.Executors;
+import com.bumptech.glide4.util.LogTime;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.util.pool.FactoryPools;
+
 import java.util.Map;
 import java.util.concurrent.Executor;
 
@@ -396,7 +397,8 @@ public DiskCache getDiskCache() {
 
   @VisibleForTesting
   static class DecodeJobFactory {
-    @Synthetic final DecodeJob.DiskCacheProvider diskCacheProvider;
+    @Synthetic
+    final DecodeJob.DiskCacheProvider diskCacheProvider;
     @Synthetic final Pools.Pool<DecodeJob<?>> pool =
         FactoryPools.threadSafe(JOB_POOL_SIZE,
             new FactoryPools.Factory<DecodeJob<?>>() {
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java b/library/src/main/java/com/bumptech/glide4/load/engine/EngineJob.java
similarity index 96%
rename from library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/EngineJob.java
index c3bd7358e..18adb0326 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/EngineJob.java
@@ -1,17 +1,18 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.VisibleForTesting;
 import android.support.v4.util.Pools;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.engine.executor.GlideExecutor;
-import com.bumptech.glide.request.ResourceCallback;
-import com.bumptech.glide.util.Executors;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Synthetic;
-import com.bumptech.glide.util.pool.FactoryPools.Poolable;
-import com.bumptech.glide.util.pool.StateVerifier;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.engine.executor.GlideExecutor;
+import com.bumptech.glide4.request.ResourceCallback;
+import com.bumptech.glide4.util.Executors;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.util.pool.StateVerifier;
+import com.bumptech.glide4.util.pool.FactoryPools;
+
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
@@ -23,7 +24,7 @@
  * callbacks when the load completes.
  */
 class EngineJob<R> implements DecodeJob.Callback<R>,
-    Poolable {
+        FactoryPools.Poolable {
   private static final EngineResourceFactory DEFAULT_FACTORY = new EngineResourceFactory();
 
   @SuppressWarnings("WeakerAccess")
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/EngineJobListener.java b/library/src/main/java/com/bumptech/glide4/load/engine/EngineJobListener.java
similarity index 70%
rename from library/src/main/java/com/bumptech/glide/load/engine/EngineJobListener.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/EngineJobListener.java
index 4b068286f..061315d02 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/EngineJobListener.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/EngineJobListener.java
@@ -1,6 +1,6 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
-import com.bumptech.glide.load.Key;
+import com.bumptech.glide4.load.Key;
 
 interface EngineJobListener {
 
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/EngineKey.java b/library/src/main/java/com/bumptech/glide4/load/engine/EngineKey.java
similarity index 93%
rename from library/src/main/java/com/bumptech/glide/load/engine/EngineKey.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/EngineKey.java
index 9f16b6115..51eb8c2a1 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/EngineKey.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/EngineKey.java
@@ -1,10 +1,11 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.util.Preconditions;
+
 import java.security.MessageDigest;
 import java.util.Map;
 
diff --git a/library/src/main/java/com/bumptech/glide4/load/engine/EngineKeyFactory.java b/library/src/main/java/com/bumptech/glide4/load/engine/EngineKeyFactory.java
new file mode 100644
index 000000000..4461ac59d
--- /dev/null
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/EngineKeyFactory.java
@@ -0,0 +1,18 @@
+package com.bumptech.glide4.load.engine;
+
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.Transformation;
+
+import java.util.Map;
+
+class EngineKeyFactory {
+
+  @SuppressWarnings("rawtypes")
+  EngineKey buildKey(Object model, Key signature, int width, int height,
+                     Map<Class<?>, Transformation<?>> transformations, Class<?> resourceClass,
+                     Class<?> transcodeClass, Options options) {
+    return new EngineKey(model, signature, width, height, transformations, resourceClass,
+        transcodeClass, options);
+  }
+}
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/EngineResource.java b/library/src/main/java/com/bumptech/glide4/load/engine/EngineResource.java
similarity index 93%
rename from library/src/main/java/com/bumptech/glide/load/engine/EngineResource.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/EngineResource.java
index 5a4cd298b..c477eabd1 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/EngineResource.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/EngineResource.java
@@ -1,16 +1,16 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.util.Preconditions;
 
 /**
  * A wrapper resource that allows reference counting a wrapped {@link
- * com.bumptech.glide.load.engine.Resource} interface.
+ * Resource} interface.
  *
  * @param <Z> The type of data returned by the wrapped {@link Resource}.
  */
-class EngineResource<Z> implements Resource<Z> {
+public class EngineResource<Z> implements Resource<Z> {
   private final boolean isCacheable;
   private final boolean isRecyclable;
   private ResourceListener listener;
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/GlideException.java b/library/src/main/java/com/bumptech/glide4/load/engine/GlideException.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/load/engine/GlideException.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/GlideException.java
index f74488b3e..29e939832 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/GlideException.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/GlideException.java
@@ -1,10 +1,11 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.util.Log;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Key;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Key;
+
 import java.io.IOException;
 import java.io.PrintStream;
 import java.io.PrintWriter;
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/Initializable.java b/library/src/main/java/com/bumptech/glide4/load/engine/Initializable.java
similarity index 87%
rename from library/src/main/java/com/bumptech/glide/load/engine/Initializable.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/Initializable.java
index 9b34820b1..cf0a71ee9 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/Initializable.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/Initializable.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 /**
  * A callback allowing a resource to do some optimization on a background thread before being
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/Jobs.java b/library/src/main/java/com/bumptech/glide4/load/engine/Jobs.java
similarity index 92%
rename from library/src/main/java/com/bumptech/glide/load/engine/Jobs.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/Jobs.java
index 93b3106f7..e813d3995 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/Jobs.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/Jobs.java
@@ -1,7 +1,8 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.support.annotation.VisibleForTesting;
-import com.bumptech.glide.load.Key;
+import com.bumptech.glide4.load.Key;
+
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.Map;
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/LoadPath.java b/library/src/main/java/com/bumptech/glide4/load/engine/LoadPath.java
similarity index 84%
rename from library/src/main/java/com/bumptech/glide/load/engine/LoadPath.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/LoadPath.java
index dca8f8952..7d31b081d 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/LoadPath.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/LoadPath.java
@@ -1,22 +1,24 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.support.annotation.NonNull;
 import android.support.v4.util.Pools.Pool;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataRewinder;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataRewinder;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.load.data.DataFetcher;
+
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
 
 /**
- * For a given {@link com.bumptech.glide.load.data.DataFetcher} for a given data class, attempts to
+ * For a given {@link DataFetcher} for a given data class, attempts to
  * fetch the data and then run it through one or more
- * {@link com.bumptech.glide.load.engine.DecodePath}s.
+ * {@link DecodePath}s.
  *
  * @param <Data>         The type of data that will be fetched.
  * @param <ResourceType> The type of intermediate resource that will be decoded within one of the
- *                       {@link com.bumptech.glide.load.engine.DecodePath}s.
+ *                       {@link DecodePath}s.
  * @param <Transcode>    The type of resource that will be returned as the result if the load and
  *                       one of the decode paths succeeds.
  */
@@ -37,7 +39,7 @@ public LoadPath(Class<Data> dataClass, Class<ResourceType> resourceClass,
   }
 
   public Resource<Transcode> load(DataRewinder<Data> rewinder, @NonNull Options options, int width,
-      int height, DecodePath.DecodeCallback<ResourceType> decodeCallback) throws GlideException {
+                                  int height, DecodePath.DecodeCallback<ResourceType> decodeCallback) throws GlideException {
     List<Throwable> throwables = Preconditions.checkNotNull(listPool.acquire());
     try {
       return loadWithExceptionList(rewinder, options, width, height, decodeCallback, throwables);
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/LockedResource.java b/library/src/main/java/com/bumptech/glide4/load/engine/LockedResource.java
similarity index 88%
rename from library/src/main/java/com/bumptech/glide/load/engine/LockedResource.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/LockedResource.java
index 594b26441..f070a2e89 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/LockedResource.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/LockedResource.java
@@ -1,11 +1,11 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.support.annotation.NonNull;
 import android.support.v4.util.Pools;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Synthetic;
-import com.bumptech.glide.util.pool.FactoryPools;
-import com.bumptech.glide.util.pool.StateVerifier;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.util.pool.FactoryPools;
+import com.bumptech.glide4.util.pool.StateVerifier;
 
 /**
  * A resource that defers any calls to {@link Resource#recycle()} until after {@link #unlock()} is
@@ -15,7 +15,7 @@
  * recycle the resource.
  */
 final class LockedResource<Z> implements Resource<Z>,
-    FactoryPools.Poolable {
+        FactoryPools.Poolable {
   private static final Pools.Pool<LockedResource<?>> POOL = FactoryPools.threadSafe(20,
       new FactoryPools.Factory<LockedResource<?>>() {
         @Override
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/Resource.java b/library/src/main/java/com/bumptech/glide4/load/engine/Resource.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/load/engine/Resource.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/Resource.java
index 6667381ba..6ae93d90e 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/Resource.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/Resource.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.support.annotation.NonNull;
 
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/ResourceCacheGenerator.java b/library/src/main/java/com/bumptech/glide4/load/engine/ResourceCacheGenerator.java
similarity index 90%
rename from library/src/main/java/com/bumptech/glide/load/engine/ResourceCacheGenerator.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/ResourceCacheGenerator.java
index aee163a33..634a56a96 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/ResourceCacheGenerator.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/ResourceCacheGenerator.java
@@ -1,17 +1,18 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoader.LoadData;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoader.LoadData;
+
 import java.io.File;
 import java.util.List;
 
 /**
- * Generates {@link com.bumptech.glide.load.data.DataFetcher DataFetchers} from cache files
+ * Generates {@link DataFetcher DataFetchers} from cache files
  * containing downsampled/transformed resource data.
  */
 class ResourceCacheGenerator implements DataFetcherGenerator,
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/ResourceCacheKey.java b/library/src/main/java/com/bumptech/glide4/load/engine/ResourceCacheKey.java
similarity index 91%
rename from library/src/main/java/com/bumptech/glide/load/engine/ResourceCacheKey.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/ResourceCacheKey.java
index afd18a739..100e34aae 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/ResourceCacheKey.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/ResourceCacheKey.java
@@ -1,12 +1,13 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.util.LruCache;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.util.LruCache;
+import com.bumptech.glide4.util.Util;
+
 import java.nio.ByteBuffer;
 import java.security.MessageDigest;
 
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/ResourceRecycler.java b/library/src/main/java/com/bumptech/glide4/load/engine/ResourceRecycler.java
similarity index 93%
rename from library/src/main/java/com/bumptech/glide/load/engine/ResourceRecycler.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/ResourceRecycler.java
index 82b36ef98..aa89410a1 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/ResourceRecycler.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/ResourceRecycler.java
@@ -1,9 +1,9 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.os.Handler;
 import android.os.Looper;
 import android.os.Message;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.util.Synthetic;
 
 /**
  * A class that can safely recycle recursive resources.
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/SourceGenerator.java b/library/src/main/java/com/bumptech/glide4/load/engine/SourceGenerator.java
similarity index 87%
rename from library/src/main/java/com/bumptech/glide/load/engine/SourceGenerator.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/SourceGenerator.java
index 5a57b971b..2212195c2 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/SourceGenerator.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/SourceGenerator.java
@@ -1,19 +1,20 @@
-package com.bumptech.glide.load.engine;
+package com.bumptech.glide4.load.engine;
 
 import android.support.annotation.NonNull;
 import android.util.Log;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Encoder;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoader.LoadData;
-import com.bumptech.glide.util.LogTime;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Encoder;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoader.LoadData;
+import com.bumptech.glide4.util.LogTime;
+
 import java.util.Collections;
 
 /**
- * Generates {@link com.bumptech.glide.load.data.DataFetcher DataFetchers} from original source data
- * using registered {@link com.bumptech.glide.load.model.ModelLoader ModelLoaders} and the model
+ * Generates {@link DataFetcher DataFetchers} from original source data
+ * using registered {@link ModelLoader ModelLoaders} and the model
  * provided for the load.
  *
  * <p> Depending on the disk cache strategy, source data may first be written to disk and then
@@ -129,7 +130,7 @@ public void reschedule() {
   // Called from source cache generator.
   @Override
   public void onDataFetcherReady(Key sourceKey, Object data, DataFetcher<?> fetcher,
-      DataSource dataSource, Key attemptedKey) {
+                                 DataSource dataSource, Key attemptedKey) {
     // This data fetcher will be loading from a File and provide the wrong data source, so override
     // with the data source of the original fetcher
     cb.onDataFetcherReady(sourceKey, data, fetcher, loadData.fetcher.getDataSource(), sourceKey);
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/ArrayAdapterInterface.java b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/ArrayAdapterInterface.java
similarity index 90%
rename from library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/ArrayAdapterInterface.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/ArrayAdapterInterface.java
index e53c49de4..0cf45b571 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/ArrayAdapterInterface.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/ArrayAdapterInterface.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine.bitmap_recycle;
+package com.bumptech.glide4.load.engine.bitmap_recycle;
 /**
  * Interface for handling operations on a primitive array type.
  * @param <T> Array type (e.g. byte[], int[])
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/ArrayPool.java b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/ArrayPool.java
similarity index 96%
rename from library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/ArrayPool.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/ArrayPool.java
index 7cb169dbb..8d3371f09 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/ArrayPool.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/ArrayPool.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine.bitmap_recycle;
+package com.bumptech.glide4.load.engine.bitmap_recycle;
 
 /**
  * Interface for an array pool that pools arrays of different types.
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/AttributeStrategy.java b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/AttributeStrategy.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/AttributeStrategy.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/AttributeStrategy.java
index 58ee33826..596004241 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/AttributeStrategy.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/AttributeStrategy.java
@@ -1,9 +1,9 @@
-package com.bumptech.glide.load.engine.bitmap_recycle;
+package com.bumptech.glide4.load.engine.bitmap_recycle;
 
 import android.graphics.Bitmap;
 import android.support.annotation.VisibleForTesting;
-import com.bumptech.glide.util.Synthetic;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.util.Util;
 
 /**
  * A strategy for reusing bitmaps that requires any returned bitmap's dimensions to exactly match
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BaseKeyPool.java b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/BaseKeyPool.java
similarity index 82%
rename from library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BaseKeyPool.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/BaseKeyPool.java
index ccb085511..17bcd4779 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BaseKeyPool.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/BaseKeyPool.java
@@ -1,6 +1,7 @@
-package com.bumptech.glide.load.engine.bitmap_recycle;
+package com.bumptech.glide4.load.engine.bitmap_recycle;
+
+import com.bumptech.glide4.util.Util;
 
-import com.bumptech.glide.util.Util;
 import java.util.Queue;
 
 abstract class BaseKeyPool<T extends Poolable> {
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPool.java b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/BitmapPool.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPool.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/BitmapPool.java
index b57a9f3d4..176a3285a 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPool.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/BitmapPool.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine.bitmap_recycle;
+package com.bumptech.glide4.load.engine.bitmap_recycle;
 
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPoolAdapter.java b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/BitmapPoolAdapter.java
similarity index 85%
rename from library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPoolAdapter.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/BitmapPoolAdapter.java
index 60652581e..ff2d28c19 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPoolAdapter.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/BitmapPoolAdapter.java
@@ -1,10 +1,10 @@
-package com.bumptech.glide.load.engine.bitmap_recycle;
+package com.bumptech.glide4.load.engine.bitmap_recycle;
 
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
 
 /**
- * An {@link com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool BitmapPool} implementation
+ * An {@link BitmapPool BitmapPool} implementation
  * that rejects all {@link android.graphics.Bitmap Bitmap}s added to it and always returns {@code
  * null} from get.
  */
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/ByteArrayAdapter.java b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/ByteArrayAdapter.java
similarity index 90%
rename from library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/ByteArrayAdapter.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/ByteArrayAdapter.java
index 95f5ff708..25124b299 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/ByteArrayAdapter.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/ByteArrayAdapter.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine.bitmap_recycle;
+package com.bumptech.glide4.load.engine.bitmap_recycle;
 
 /**
  * Adapter for handling primitive byte arrays.
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap.java b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/GroupedLinkedMap.java
similarity index 96%
rename from library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/GroupedLinkedMap.java
index 9060fd825..5a4740179 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/GroupedLinkedMap.java
@@ -1,7 +1,8 @@
-package com.bumptech.glide.load.engine.bitmap_recycle;
+package com.bumptech.glide4.load.engine.bitmap_recycle;
 
 import android.support.annotation.Nullable;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.util.Synthetic;
+
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
@@ -120,7 +121,8 @@ private void makeTail(LinkedEntry<K, V> entry) {
   }
 
   private static class LinkedEntry<K, V> {
-    @Synthetic final K key;
+    @Synthetic
+    final K key;
     private List<V> values;
     LinkedEntry<K, V> next;
     LinkedEntry<K, V> prev;
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/IntegerArrayAdapter.java b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/IntegerArrayAdapter.java
similarity index 90%
rename from library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/IntegerArrayAdapter.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/IntegerArrayAdapter.java
index 4fb179c38..13849cdc7 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/IntegerArrayAdapter.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/IntegerArrayAdapter.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine.bitmap_recycle;
+package com.bumptech.glide4.load.engine.bitmap_recycle;
 
 /**
  * Adapter for handling primitive int arrays.
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool.java b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/LruArrayPool.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/LruArrayPool.java
index 596e15574..86a512ce6 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/LruArrayPool.java
@@ -1,10 +1,11 @@
-package com.bumptech.glide.load.engine.bitmap_recycle;
+package com.bumptech.glide4.load.engine.bitmap_recycle;
 
 import android.support.annotation.Nullable;
 import android.support.annotation.VisibleForTesting;
 import android.util.Log;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Synthetic;
+
 import java.util.HashMap;
 import java.util.Map;
 import java.util.NavigableMap;
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool.java b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/LruBitmapPool.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/LruBitmapPool.java
index d233c9130..0dc7f7455 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/LruBitmapPool.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine.bitmap_recycle;
+package com.bumptech.glide4.load.engine.bitmap_recycle;
 
 import android.annotation.SuppressLint;
 import android.annotation.TargetApi;
@@ -8,15 +8,16 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.util.Log;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.util.Synthetic;
+
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.HashSet;
 import java.util.Set;
 
 /**
- * An {@link com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool} implementation that uses an
- * {@link com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy} to bucket {@link Bitmap}s
+ * An {@link BitmapPool} implementation that uses an
+ * {@link LruPoolStrategy} to bucket {@link Bitmap}s
  * and then uses an LRU eviction policy to evict {@link android.graphics.Bitmap}s from the least
  * recently used bucket in order to keep the pool below a given maximum size limit.
  */
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruPoolStrategy.java b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/LruPoolStrategy.java
similarity index 87%
rename from library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruPoolStrategy.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/LruPoolStrategy.java
index 376dd9665..e8068e77f 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruPoolStrategy.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/LruPoolStrategy.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine.bitmap_recycle;
+package com.bumptech.glide4.load.engine.bitmap_recycle;
 
 import android.graphics.Bitmap;
 import android.support.annotation.Nullable;
diff --git a/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/Poolable.java b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/Poolable.java
new file mode 100644
index 000000000..c970c5831
--- /dev/null
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/Poolable.java
@@ -0,0 +1,5 @@
+package com.bumptech.glide4.load.engine.bitmap_recycle;
+
+interface Poolable {
+  void offer();
+}
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/PrettyPrintTreeMap.java b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/PrettyPrintTreeMap.java
similarity index 90%
rename from library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/PrettyPrintTreeMap.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/PrettyPrintTreeMap.java
index 220d3beff..9b3a87907 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/PrettyPrintTreeMap.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/PrettyPrintTreeMap.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine.bitmap_recycle;
+package com.bumptech.glide4.load.engine.bitmap_recycle;
 
 import java.util.TreeMap;
 
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy.java b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/SizeConfigStrategy.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/SizeConfigStrategy.java
index a4b0f46b4..b8af1af73 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/SizeConfigStrategy.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine.bitmap_recycle;
+package com.bumptech.glide4.load.engine.bitmap_recycle;
 
 import android.graphics.Bitmap;
 import android.graphics.Bitmap.Config;
@@ -6,8 +6,9 @@
 import android.support.annotation.Nullable;
 import android.support.annotation.RequiresApi;
 import android.support.annotation.VisibleForTesting;
-import com.bumptech.glide.util.Synthetic;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.util.Util;
+
 import java.util.Arrays;
 import java.util.HashMap;
 import java.util.Map;
@@ -192,7 +193,8 @@ protected Key create() {
   static final class Key implements Poolable {
     private final KeyPool pool;
 
-    @Synthetic int size;
+    @Synthetic
+    int size;
     private Bitmap.Config config;
 
     public Key(KeyPool pool) {
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy.java b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/SizeStrategy.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/SizeStrategy.java
index 5536b75db..7bb94a00a 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/bitmap_recycle/SizeStrategy.java
@@ -1,12 +1,13 @@
-package com.bumptech.glide.load.engine.bitmap_recycle;
+package com.bumptech.glide4.load.engine.bitmap_recycle;
 
 import android.graphics.Bitmap;
 import android.os.Build;
 import android.support.annotation.Nullable;
 import android.support.annotation.RequiresApi;
 import android.support.annotation.VisibleForTesting;
-import com.bumptech.glide.util.Synthetic;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.util.Util;
+
 import java.util.NavigableMap;
 
 /**
@@ -102,7 +103,8 @@ private static String getBitmapString(Bitmap bitmap) {
     return getBitmapString(size);
   }
 
-  @Synthetic static String getBitmapString(int size) {
+  @Synthetic
+  static String getBitmapString(int size) {
     return "[" + size + "]";
   }
 
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCache.java b/library/src/main/java/com/bumptech/glide4/load/engine/cache/DiskCache.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCache.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/cache/DiskCache.java
index 7bcfd02e4..67e1327bb 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCache.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/cache/DiskCache.java
@@ -1,8 +1,9 @@
-package com.bumptech.glide.load.engine.cache;
+package com.bumptech.glide4.load.engine.cache;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Key;
+import com.bumptech.glide4.load.Key;
+
 import java.io.File;
 
 /**
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCacheAdapter.java b/library/src/main/java/com/bumptech/glide4/load/engine/cache/DiskCacheAdapter.java
similarity index 89%
rename from library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCacheAdapter.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/cache/DiskCacheAdapter.java
index 8642d5275..1ab1549d4 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCacheAdapter.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/cache/DiskCacheAdapter.java
@@ -1,6 +1,7 @@
-package com.bumptech.glide.load.engine.cache;
+package com.bumptech.glide4.load.engine.cache;
+
+import com.bumptech.glide4.load.Key;
 
-import com.bumptech.glide.load.Key;
 import java.io.File;
 
 /**
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCacheWriteLocker.java b/library/src/main/java/com/bumptech/glide4/load/engine/cache/DiskCacheWriteLocker.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCacheWriteLocker.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/cache/DiskCacheWriteLocker.java
index d11f0f02a..af517bc42 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCacheWriteLocker.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/cache/DiskCacheWriteLocker.java
@@ -1,7 +1,8 @@
-package com.bumptech.glide.load.engine.cache;
+package com.bumptech.glide4.load.engine.cache;
+
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Synthetic;
 
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Synthetic;
 import java.util.ArrayDeque;
 import java.util.HashMap;
 import java.util.Map;
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/cache/DiskLruCacheFactory.java b/library/src/main/java/com/bumptech/glide4/load/engine/cache/DiskLruCacheFactory.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/load/engine/cache/DiskLruCacheFactory.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/cache/DiskLruCacheFactory.java
index 9518b4c85..9dae0ddaa 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/cache/DiskLruCacheFactory.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/cache/DiskLruCacheFactory.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine.cache;
+package com.bumptech.glide4.load.engine.cache;
 
 import java.io.File;
 
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapper.java b/library/src/main/java/com/bumptech/glide4/load/engine/cache/DiskLruCacheWrapper.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapper.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/cache/DiskLruCacheWrapper.java
index 2cedfe0b2..146063969 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapper.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/cache/DiskLruCacheWrapper.java
@@ -2,12 +2,13 @@
  * Copyright (c) 2013. Bump Technologies Inc. All Rights Reserved.
  */
 
-package com.bumptech.glide.load.engine.cache;
+package com.bumptech.glide4.load.engine.cache;
 
 import android.util.Log;
 import com.bumptech.glide.disklrucache.DiskLruCache;
 import com.bumptech.glide.disklrucache.DiskLruCache.Value;
-import com.bumptech.glide.load.Key;
+import com.bumptech.glide4.load.Key;
+
 import java.io.File;
 import java.io.IOException;
 
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/cache/ExternalCacheDiskCacheFactory.java b/library/src/main/java/com/bumptech/glide4/load/engine/cache/ExternalCacheDiskCacheFactory.java
similarity index 83%
rename from library/src/main/java/com/bumptech/glide/load/engine/cache/ExternalCacheDiskCacheFactory.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/cache/ExternalCacheDiskCacheFactory.java
index 08b8d4dde..7d6900eea 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/cache/ExternalCacheDiskCacheFactory.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/cache/ExternalCacheDiskCacheFactory.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine.cache;
+package com.bumptech.glide4.load.engine.cache;
 
 import android.content.Context;
 import java.io.File;
@@ -17,12 +17,12 @@
 public final class ExternalCacheDiskCacheFactory extends DiskLruCacheFactory {
 
   public ExternalCacheDiskCacheFactory(Context context) {
-    this(context, DiskCache.Factory.DEFAULT_DISK_CACHE_DIR,
-        DiskCache.Factory.DEFAULT_DISK_CACHE_SIZE);
+    this(context, DEFAULT_DISK_CACHE_DIR,
+            DEFAULT_DISK_CACHE_SIZE);
   }
 
   public ExternalCacheDiskCacheFactory(Context context, int diskCacheSize) {
-    this(context, DiskCache.Factory.DEFAULT_DISK_CACHE_DIR, diskCacheSize);
+    this(context, DEFAULT_DISK_CACHE_DIR, diskCacheSize);
   }
 
   public ExternalCacheDiskCacheFactory(final Context context, final String diskCacheName,
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/cache/ExternalPreferredCacheDiskCacheFactory.java b/library/src/main/java/com/bumptech/glide4/load/engine/cache/ExternalPreferredCacheDiskCacheFactory.java
similarity index 90%
rename from library/src/main/java/com/bumptech/glide/load/engine/cache/ExternalPreferredCacheDiskCacheFactory.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/cache/ExternalPreferredCacheDiskCacheFactory.java
index 4f2743b1e..97080bd45 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/cache/ExternalPreferredCacheDiskCacheFactory.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/cache/ExternalPreferredCacheDiskCacheFactory.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine.cache;
+package com.bumptech.glide4.load.engine.cache;
 
 import android.content.Context;
 import android.support.annotation.Nullable;
@@ -16,12 +16,12 @@
 public final class ExternalPreferredCacheDiskCacheFactory extends DiskLruCacheFactory {
 
   public ExternalPreferredCacheDiskCacheFactory(Context context) {
-    this(context, DiskCache.Factory.DEFAULT_DISK_CACHE_DIR,
-        DiskCache.Factory.DEFAULT_DISK_CACHE_SIZE);
+    this(context, DEFAULT_DISK_CACHE_DIR,
+            DEFAULT_DISK_CACHE_SIZE);
   }
 
   public ExternalPreferredCacheDiskCacheFactory(Context context, long diskCacheSize) {
-    this(context, DiskCache.Factory.DEFAULT_DISK_CACHE_DIR, diskCacheSize);
+    this(context, DEFAULT_DISK_CACHE_DIR, diskCacheSize);
   }
 
   public ExternalPreferredCacheDiskCacheFactory(final Context context, final String diskCacheName,
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/cache/InternalCacheDiskCacheFactory.java b/library/src/main/java/com/bumptech/glide4/load/engine/cache/InternalCacheDiskCacheFactory.java
similarity index 81%
rename from library/src/main/java/com/bumptech/glide/load/engine/cache/InternalCacheDiskCacheFactory.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/cache/InternalCacheDiskCacheFactory.java
index 18afb52f0..9a843ab34 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/cache/InternalCacheDiskCacheFactory.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/cache/InternalCacheDiskCacheFactory.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine.cache;
+package com.bumptech.glide4.load.engine.cache;
 
 import android.content.Context;
 import java.io.File;
@@ -12,12 +12,12 @@
 public final class InternalCacheDiskCacheFactory extends DiskLruCacheFactory {
 
   public InternalCacheDiskCacheFactory(Context context) {
-    this(context, DiskCache.Factory.DEFAULT_DISK_CACHE_DIR,
-        DiskCache.Factory.DEFAULT_DISK_CACHE_SIZE);
+    this(context, DEFAULT_DISK_CACHE_DIR,
+            DEFAULT_DISK_CACHE_SIZE);
   }
 
   public InternalCacheDiskCacheFactory(Context context, long diskCacheSize) {
-    this(context, DiskCache.Factory.DEFAULT_DISK_CACHE_DIR, diskCacheSize);
+    this(context, DEFAULT_DISK_CACHE_DIR, diskCacheSize);
   }
 
   public InternalCacheDiskCacheFactory(final Context context, final String diskCacheName,
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/cache/LruResourceCache.java b/library/src/main/java/com/bumptech/glide4/load/engine/cache/LruResourceCache.java
similarity index 86%
rename from library/src/main/java/com/bumptech/glide/load/engine/cache/LruResourceCache.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/cache/LruResourceCache.java
index 75c5329e1..50b5c5d6a 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/cache/LruResourceCache.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/cache/LruResourceCache.java
@@ -1,14 +1,14 @@
-package com.bumptech.glide.load.engine.cache;
+package com.bumptech.glide4.load.engine.cache;
 
 import android.annotation.SuppressLint;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.util.LruCache;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.util.LruCache;
 
 /**
- * An LRU in memory cache for {@link com.bumptech.glide.load.engine.Resource}s.
+ * An LRU in memory cache for {@link Resource}s.
  */
 public class LruResourceCache extends LruCache<Key, Resource<?>> implements MemoryCache {
   private ResourceRemovedListener listener;
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/cache/MemoryCache.java b/library/src/main/java/com/bumptech/glide4/load/engine/cache/MemoryCache.java
similarity index 89%
rename from library/src/main/java/com/bumptech/glide/load/engine/cache/MemoryCache.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/cache/MemoryCache.java
index 3210e6821..84f2b448a 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/cache/MemoryCache.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/cache/MemoryCache.java
@@ -1,9 +1,10 @@
-package com.bumptech.glide.load.engine.cache;
+package com.bumptech.glide4.load.engine.cache;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.EngineResource;
 
 /**
  * An interface for adding and removing resources from an in memory cache.
@@ -49,7 +50,7 @@
    * Add bitmap to the cache with the given key.
    *
    * @param key      The key to retrieve the bitmap.
-   * @param resource The {@link com.bumptech.glide.load.engine.EngineResource} to store.
+   * @param resource The {@link EngineResource} to store.
    * @return The old value of key (null if key is not in map).
    */
   @Nullable
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/cache/MemoryCacheAdapter.java b/library/src/main/java/com/bumptech/glide4/load/engine/cache/MemoryCacheAdapter.java
similarity index 88%
rename from library/src/main/java/com/bumptech/glide/load/engine/cache/MemoryCacheAdapter.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/cache/MemoryCacheAdapter.java
index 70deb5ce6..2c2f1240e 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/cache/MemoryCacheAdapter.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/cache/MemoryCacheAdapter.java
@@ -1,9 +1,9 @@
-package com.bumptech.glide.load.engine.cache;
+package com.bumptech.glide4.load.engine.cache;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.engine.Resource;
 
 /**
  * A simple class that ignores all puts and returns null for all gets.
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/cache/MemorySizeCalculator.java b/library/src/main/java/com/bumptech/glide4/load/engine/cache/MemorySizeCalculator.java
similarity index 91%
rename from library/src/main/java/com/bumptech/glide/load/engine/cache/MemorySizeCalculator.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/cache/MemorySizeCalculator.java
index 1418c466b..23fd7d83f 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/cache/MemorySizeCalculator.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/cache/MemorySizeCalculator.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine.cache;
+package com.bumptech.glide4.load.engine.cache;
 
 import android.annotation.TargetApi;
 import android.app.ActivityManager;
@@ -8,8 +8,10 @@
 import android.text.format.Formatter;
 import android.util.DisplayMetrics;
 import android.util.Log;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
 
 /**
  * A calculator that tries to intelligently determine cache sizes for a given device based on some
@@ -116,7 +118,8 @@ private String toMb(int bytes) {
   }
 
   @TargetApi(Build.VERSION_CODES.KITKAT)
-  @Synthetic static boolean isLowMemoryDevice(ActivityManager activityManager) {
+  @Synthetic
+  static boolean isLowMemoryDevice(ActivityManager activityManager) {
     // Explicitly check with an if statement, on some devices both parts of boolean expressions
     // can be evaluated even if we'd normally expect a short circuit.
     //noinspection SimplifiableIfStatement
@@ -180,7 +183,7 @@ public Builder(Context context) {
 
     /**
      * Sets the number of device screens worth of pixels the
-     * {@link com.bumptech.glide.load.engine.cache.MemoryCache} should be able to hold and
+     * {@link MemoryCache} should be able to hold and
      * returns this Builder.
      */
     public Builder setMemoryCacheScreens(float memoryCacheScreens) {
@@ -192,7 +195,7 @@ public Builder setMemoryCacheScreens(float memoryCacheScreens) {
 
     /**
      * Sets the number of device screens worth of pixels the
-     * {@link com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool} should be able to hold and
+     * {@link BitmapPool} should be able to hold and
      * returns this Builder.
      */
     public Builder setBitmapPoolScreens(float bitmapPoolScreens) {
@@ -204,8 +207,8 @@ public Builder setBitmapPoolScreens(float bitmapPoolScreens) {
 
     /**
      * Sets the maximum percentage of the device's memory class for standard devices that can be
-     * taken up by Glide's {@link com.bumptech.glide.load.engine.cache.MemoryCache} and
-     * {@link com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool} put together, and returns
+     * taken up by Glide's {@link MemoryCache} and
+     * {@link BitmapPool} put together, and returns
      * this builder.
      */
     public Builder setMaxSizeMultiplier(float maxSizeMultiplier) {
@@ -217,8 +220,8 @@ public Builder setMaxSizeMultiplier(float maxSizeMultiplier) {
 
     /**
      * Sets the maximum percentage of the device's memory class for low ram devices that can be
-     * taken up by Glide's {@link com.bumptech.glide.load.engine.cache.MemoryCache} and
-     * {@link com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool} put together, and returns
+     * taken up by Glide's {@link MemoryCache} and
+     * {@link BitmapPool} put together, and returns
      * this builder.
      *
      * @see ActivityManager#isLowRamDevice()
@@ -233,7 +236,7 @@ public Builder setLowMemoryMaxSizeMultiplier(float lowMemoryMaxSizeMultiplier) {
 
     /**
      * Sets the size in bytes of the {@link
-     * com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool} to use to store temporary
+     * ArrayPool} to use to store temporary
      * arrays while decoding data and returns this builder.
      *
      * <p>This number will be halved on low memory devices that return {@code true} from
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/cache/SafeKeyGenerator.java b/library/src/main/java/com/bumptech/glide4/load/engine/cache/SafeKeyGenerator.java
similarity index 82%
rename from library/src/main/java/com/bumptech/glide/load/engine/cache/SafeKeyGenerator.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/cache/SafeKeyGenerator.java
index f726ef10e..8a5cca088 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/cache/SafeKeyGenerator.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/cache/SafeKeyGenerator.java
@@ -1,20 +1,21 @@
-package com.bumptech.glide.load.engine.cache;
+package com.bumptech.glide4.load.engine.cache;
 
 import android.support.annotation.NonNull;
 import android.support.v4.util.Pools;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.util.LruCache;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Synthetic;
-import com.bumptech.glide.util.Util;
-import com.bumptech.glide.util.pool.FactoryPools;
-import com.bumptech.glide.util.pool.StateVerifier;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.util.LruCache;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.util.Util;
+import com.bumptech.glide4.util.pool.FactoryPools;
+import com.bumptech.glide4.util.pool.StateVerifier;
+
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
 
 /**
  * A class that generates and caches safe and unique string file names from {@link
- * com.bumptech.glide.load.Key}s.
+ * Key}s.
  */
 // Public API.
 @SuppressWarnings("WeakerAccess")
@@ -59,7 +60,8 @@ private String calculateHexStringDigest(Key key) {
 
   private static final class PoolableDigestContainer implements FactoryPools.Poolable {
 
-    @Synthetic final MessageDigest messageDigest;
+    @Synthetic
+    final MessageDigest messageDigest;
     private final StateVerifier stateVerifier = StateVerifier.newInstance();
 
     PoolableDigestContainer(MessageDigest messageDigest) {
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/executor/GlideExecutor.java b/library/src/main/java/com/bumptech/glide4/load/engine/executor/GlideExecutor.java
similarity index 92%
rename from library/src/main/java/com/bumptech/glide/load/engine/executor/GlideExecutor.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/executor/GlideExecutor.java
index 7f8845534..52fe1bf3d 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/executor/GlideExecutor.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/executor/GlideExecutor.java
@@ -1,11 +1,12 @@
-package com.bumptech.glide.load.engine.executor;
+package com.bumptech.glide4.load.engine.executor;
 
 import android.os.StrictMode;
 import android.os.StrictMode.ThreadPolicy;
 import android.support.annotation.NonNull;
 import android.support.annotation.VisibleForTesting;
 import android.util.Log;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.util.Synthetic;
+
 import java.util.Collection;
 import java.util.List;
 import java.util.concurrent.Callable;
@@ -69,7 +70,7 @@
    * Returns a new fixed thread pool with the default thread count returned from
    * {@link #calculateBestThreadCount()}, the {@link #DEFAULT_DISK_CACHE_EXECUTOR_NAME} thread name
    * prefix, and the
-   * {@link com.bumptech.glide.load.engine.executor.GlideExecutor.UncaughtThrowableStrategy#DEFAULT}
+   * {@link GlideExecutor.UncaughtThrowableStrategy#DEFAULT}
    * uncaught throwable strategy.
    *
    * <p>Disk cache executors do not allow network operations on their threads.
@@ -85,12 +86,12 @@ public static GlideExecutor newDiskCacheExecutor() {
    * Returns a new fixed thread pool with the default thread count returned from
    * {@link #calculateBestThreadCount()}, the {@link #DEFAULT_DISK_CACHE_EXECUTOR_NAME} thread name
    * prefix, and a custom
-   * {@link com.bumptech.glide.load.engine.executor.GlideExecutor.UncaughtThrowableStrategy}
+   * {@link GlideExecutor.UncaughtThrowableStrategy}
    * uncaught throwable strategy.
    *
    * <p>Disk cache executors do not allow network operations on their threads.
    * @param uncaughtThrowableStrategy The {@link
-   * com.bumptech.glide.load.engine.executor.GlideExecutor.UncaughtThrowableStrategy} to use to
+   * GlideExecutor.UncaughtThrowableStrategy} to use to
    *                                  handle uncaught exceptions.
    */
   // Public API.
@@ -105,14 +106,14 @@ public static GlideExecutor newDiskCacheExecutor(
 
   /**
    * Returns a new fixed thread pool with the given thread count, thread name prefix,
-   * and {@link com.bumptech.glide.load.engine.executor.GlideExecutor.UncaughtThrowableStrategy}.
+   * and {@link GlideExecutor.UncaughtThrowableStrategy}.
    *
    * <p>Disk cache executors do not allow network operations on their threads.
    *
    * @param threadCount The number of threads.
    * @param name The prefix for each thread name.
    * @param uncaughtThrowableStrategy The {@link
-   * com.bumptech.glide.load.engine.executor.GlideExecutor.UncaughtThrowableStrategy} to use to
+   * GlideExecutor.UncaughtThrowableStrategy} to use to
    *                                  handle uncaught exceptions.
    */
   // Public API.
@@ -133,7 +134,7 @@ public static GlideExecutor newDiskCacheExecutor(
    * Returns a new fixed thread pool with the default thread count returned from
    * {@link #calculateBestThreadCount()}, the {@link #DEFAULT_SOURCE_EXECUTOR_NAME} thread name
    * prefix, and the
-   * {@link com.bumptech.glide.load.engine.executor.GlideExecutor.UncaughtThrowableStrategy#DEFAULT}
+   * {@link GlideExecutor.UncaughtThrowableStrategy#DEFAULT}
    * uncaught throwable strategy.
    *
    * <p>Source executors allow network operations on their threads.
@@ -149,13 +150,13 @@ public static GlideExecutor newSourceExecutor() {
    * Returns a new fixed thread pool with the default thread count returned from
    * {@link #calculateBestThreadCount()}, the {@link #DEFAULT_SOURCE_EXECUTOR_NAME} thread name
    * prefix, and a custom
-   * {@link com.bumptech.glide.load.engine.executor.GlideExecutor.UncaughtThrowableStrategy}
+   * {@link GlideExecutor.UncaughtThrowableStrategy}
    * uncaught throwable strategy.
    *
    * <p>Source executors allow network operations on their threads.
    *
    * @param uncaughtThrowableStrategy The {@link
-   * com.bumptech.glide.load.engine.executor.GlideExecutor.UncaughtThrowableStrategy} to use to
+   * GlideExecutor.UncaughtThrowableStrategy} to use to
    *                                  handle uncaught exceptions.
    */
   // Public API.
@@ -170,14 +171,14 @@ public static GlideExecutor newSourceExecutor(
 
   /**
    * Returns a new fixed thread pool with the given thread count, thread name prefix,
-   * and {@link com.bumptech.glide.load.engine.executor.GlideExecutor.UncaughtThrowableStrategy}.
+   * and {@link GlideExecutor.UncaughtThrowableStrategy}.
    *
    * <p>Source executors allow network operations on their threads.
    *
    * @param threadCount The number of threads.
    * @param name The prefix for each thread name.
    * @param uncaughtThrowableStrategy The {@link
-   * com.bumptech.glide.load.engine.executor.GlideExecutor.UncaughtThrowableStrategy} to use to
+   * GlideExecutor.UncaughtThrowableStrategy} to use to
    *                                  handle uncaught exceptions.
    */
   // Public API.
@@ -198,7 +199,7 @@ public static GlideExecutor newSourceExecutor(
    * Returns a new unlimited thread pool with zero core thread count to make sure no threads are
    * created by default, {@link #KEEP_ALIVE_TIME_MS} keep alive
    * time, the {@link #SOURCE_UNLIMITED_EXECUTOR_NAME} thread name prefix, the
-   * {@link com.bumptech.glide.load.engine.executor.GlideExecutor.UncaughtThrowableStrategy#DEFAULT}
+   * {@link GlideExecutor.UncaughtThrowableStrategy#DEFAULT}
    * uncaught throwable strategy, and the {@link SynchronousQueue} since using default unbounded
    * blocking queue, for example, {@link PriorityBlockingQueue} effectively won't create more than
    * {@code corePoolSize} threads.
@@ -417,7 +418,8 @@ public void handle(Throwable t) {
         + android.os.Process.THREAD_PRIORITY_MORE_FAVORABLE;
 
     private final String name;
-    @Synthetic final UncaughtThrowableStrategy uncaughtThrowableStrategy;
+    @Synthetic
+    final UncaughtThrowableStrategy uncaughtThrowableStrategy;
     @Synthetic final boolean preventNetworkOperations;
     private int threadNum;
 
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/executor/RuntimeCompat.java b/library/src/main/java/com/bumptech/glide4/load/engine/executor/RuntimeCompat.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/load/engine/executor/RuntimeCompat.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/executor/RuntimeCompat.java
index 8dc69bdeb..8ff27ba22 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/executor/RuntimeCompat.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/executor/RuntimeCompat.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine.executor;
+package com.bumptech.glide4.load.engine.executor;
 
 import android.os.Build;
 import android.os.StrictMode;
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/prefill/BitmapPreFillRunner.java b/library/src/main/java/com/bumptech/glide4/load/engine/prefill/BitmapPreFillRunner.java
similarity index 93%
rename from library/src/main/java/com/bumptech/glide/load/engine/prefill/BitmapPreFillRunner.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/prefill/BitmapPreFillRunner.java
index a8c5d641c..eea389a36 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/prefill/BitmapPreFillRunner.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/prefill/BitmapPreFillRunner.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine.prefill;
+package com.bumptech.glide4.load.engine.prefill;
 
 import android.graphics.Bitmap;
 import android.os.Handler;
@@ -7,12 +7,13 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.VisibleForTesting;
 import android.util.Log;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.engine.cache.MemoryCache;
-import com.bumptech.glide.load.resource.bitmap.BitmapResource;
-import com.bumptech.glide.util.Synthetic;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.cache.MemoryCache;
+import com.bumptech.glide4.load.resource.bitmap.BitmapResource;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.util.Util;
+
 import java.security.MessageDigest;
 import java.util.HashSet;
 import java.util.Set;
@@ -20,7 +21,7 @@
 
 /**
  * A class that allocates {@link android.graphics.Bitmap Bitmaps} to make sure that the {@link
- * com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool} is pre-populated.
+ * BitmapPool} is pre-populated.
  *
  * <p>By posting to the main thread with backoffs, we try to avoid ANRs when the garbage collector
  * gets into a state where a high percentage of {@link Bitmap} allocations trigger a stop the world
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/prefill/BitmapPreFiller.java b/library/src/main/java/com/bumptech/glide4/load/engine/prefill/BitmapPreFiller.java
similarity index 88%
rename from library/src/main/java/com/bumptech/glide/load/engine/prefill/BitmapPreFiller.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/prefill/BitmapPreFiller.java
index 09d00876d..e619828c2 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/prefill/BitmapPreFiller.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/prefill/BitmapPreFiller.java
@@ -1,19 +1,20 @@
-package com.bumptech.glide.load.engine.prefill;
+package com.bumptech.glide4.load.engine.prefill;
 
 import android.graphics.Bitmap;
 import android.os.Handler;
 import android.os.Looper;
 import android.support.annotation.VisibleForTesting;
-import com.bumptech.glide.load.DecodeFormat;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.engine.cache.MemoryCache;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.load.DecodeFormat;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.cache.MemoryCache;
+import com.bumptech.glide4.util.Util;
+
 import java.util.HashMap;
 import java.util.Map;
 
 /**
  * A class for pre-filling {@link android.graphics.Bitmap Bitmaps} in a
- * {@link com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool}.
+ * {@link BitmapPool}.
  */
 public final class BitmapPreFiller {
 
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/prefill/PreFillQueue.java b/library/src/main/java/com/bumptech/glide4/load/engine/prefill/PreFillQueue.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/load/engine/prefill/PreFillQueue.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/prefill/PreFillQueue.java
index 80d0c6852..c45d45488 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/prefill/PreFillQueue.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/prefill/PreFillQueue.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.engine.prefill;
+package com.bumptech.glide4.load.engine.prefill;
 
 import java.util.ArrayList;
 import java.util.List;
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/prefill/PreFillType.java b/library/src/main/java/com/bumptech/glide4/load/engine/prefill/PreFillType.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/load/engine/prefill/PreFillType.java
rename to library/src/main/java/com/bumptech/glide4/load/engine/prefill/PreFillType.java
index 31a8b529a..8f44b1a8c 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/prefill/PreFillType.java
+++ b/library/src/main/java/com/bumptech/glide4/load/engine/prefill/PreFillType.java
@@ -1,13 +1,14 @@
-package com.bumptech.glide.load.engine.prefill;
+package com.bumptech.glide4.load.engine.prefill;
 
 import android.graphics.Bitmap;
 import android.support.annotation.Nullable;
 import android.support.annotation.VisibleForTesting;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
 
 /**
  * A container for a put of options used to pre-fill a
- * {@link com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool} with {@link Bitmap Bitmaps} of a
+ * {@link BitmapPool} with {@link Bitmap Bitmaps} of a
  * single size and configuration.
  */
 public final class PreFillType {
diff --git a/library/src/main/java/com/bumptech/glide/load/model/AssetUriLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/AssetUriLoader.java
similarity index 91%
rename from library/src/main/java/com/bumptech/glide/load/model/AssetUriLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/AssetUriLoader.java
index 9eea06323..c1ee09947 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/AssetUriLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/AssetUriLoader.java
@@ -1,15 +1,16 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.content.ContentResolver;
 import android.content.res.AssetManager;
 import android.net.Uri;
 import android.os.ParcelFileDescriptor;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher;
-import com.bumptech.glide.load.data.StreamAssetPathFetcher;
-import com.bumptech.glide.signature.ObjectKey;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.data.FileDescriptorAssetPathFetcher;
+import com.bumptech.glide4.load.data.StreamAssetPathFetcher;
+import com.bumptech.glide4.signature.ObjectKey;
+
 import java.io.InputStream;
 
 /**
diff --git a/library/src/main/java/com/bumptech/glide/load/model/ByteArrayLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/ByteArrayLoader.java
similarity index 91%
rename from library/src/main/java/com/bumptech/glide/load/model/ByteArrayLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/ByteArrayLoader.java
index bb8213fc1..66b3ac8d0 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/ByteArrayLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/ByteArrayLoader.java
@@ -1,11 +1,12 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.signature.ObjectKey;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.signature.ObjectKey;
+
 import java.io.ByteArrayInputStream;
 import java.io.InputStream;
 import java.nio.ByteBuffer;
@@ -92,7 +93,7 @@ public DataSource getDataSource() {
   }
 
   /**
-   * Factory for {@link com.bumptech.glide.load.model.ByteArrayLoader} and
+   * Factory for {@link ByteArrayLoader} and
    * {@link java.nio.ByteBuffer}.
    */
   public static class ByteBufferFactory implements ModelLoaderFactory<byte[], ByteBuffer> {
diff --git a/library/src/main/java/com/bumptech/glide/load/model/ByteBufferEncoder.java b/library/src/main/java/com/bumptech/glide4/load/model/ByteBufferEncoder.java
similarity index 80%
rename from library/src/main/java/com/bumptech/glide/load/model/ByteBufferEncoder.java
rename to library/src/main/java/com/bumptech/glide4/load/model/ByteBufferEncoder.java
index 9c8b6a121..a7f51a8f5 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/ByteBufferEncoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/ByteBufferEncoder.java
@@ -1,10 +1,11 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.support.annotation.NonNull;
 import android.util.Log;
-import com.bumptech.glide.load.Encoder;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.util.ByteBufferUtil;
+import com.bumptech.glide4.load.Encoder;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.util.ByteBufferUtil;
+
 import java.io.File;
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git a/library/src/main/java/com/bumptech/glide/load/model/ByteBufferFileLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/ByteBufferFileLoader.java
similarity index 83%
rename from library/src/main/java/com/bumptech/glide/load/model/ByteBufferFileLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/ByteBufferFileLoader.java
index c56d04b08..79e88b701 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/ByteBufferFileLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/ByteBufferFileLoader.java
@@ -1,14 +1,15 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.support.annotation.NonNull;
 import android.util.Log;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.signature.ObjectKey;
-import com.bumptech.glide.util.ByteBufferUtil;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.signature.ObjectKey;
+import com.bumptech.glide4.util.ByteBufferUtil;
+import com.bumptech.glide4.util.Synthetic;
+
 import java.io.File;
 import java.io.IOException;
 import java.nio.ByteBuffer;
@@ -31,7 +32,7 @@ public boolean handles(@NonNull File file) {
   }
 
   /**
-   * Factory for {@link com.bumptech.glide.load.model.ByteBufferFileLoader}.
+   * Factory for {@link ByteBufferFileLoader}.
    */
   public static class Factory implements ModelLoaderFactory<File, ByteBuffer> {
 
diff --git a/library/src/main/java/com/bumptech/glide/load/model/DataUrlLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/DataUrlLoader.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/load/model/DataUrlLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/DataUrlLoader.java
index 646c43907..e565ec457 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/DataUrlLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/DataUrlLoader.java
@@ -1,12 +1,13 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.support.annotation.NonNull;
 import android.util.Base64;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.signature.ObjectKey;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.signature.ObjectKey;
+
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.io.InputStream;
diff --git a/library/src/main/java/com/bumptech/glide/load/model/FileLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/FileLoader.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/load/model/FileLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/FileLoader.java
index e4f0d9178..fbe1e275d 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/FileLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/FileLoader.java
@@ -1,13 +1,14 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.os.ParcelFileDescriptor;
 import android.support.annotation.NonNull;
 import android.util.Log;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.signature.ObjectKey;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.signature.ObjectKey;
+
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileNotFoundException;
diff --git a/library/src/main/java/com/bumptech/glide/load/model/GlideUrl.java b/library/src/main/java/com/bumptech/glide4/load/model/GlideUrl.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/load/model/GlideUrl.java
rename to library/src/main/java/com/bumptech/glide4/load/model/GlideUrl.java
index 4661d3b0d..750638b2c 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/GlideUrl.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/GlideUrl.java
@@ -1,11 +1,12 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.net.Uri;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.text.TextUtils;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.util.Preconditions;
+
 import java.net.MalformedURLException;
 import java.net.URL;
 import java.security.MessageDigest;
@@ -23,7 +24,7 @@
  * URL, call {@link #toStringUrl()}. To obtain a less safe, but less expensive to calculate cache
  * key, call {@link #getCacheKey()}. </p>
  *
- * <p> This class can also optionally wrap {@link com.bumptech.glide.load.model.Headers} for
+ * <p> This class can also optionally wrap {@link Headers} for
  * convenience. </p>
  */
 public class GlideUrl implements Key {
diff --git a/library/src/main/java/com/bumptech/glide/load/model/Headers.java b/library/src/main/java/com/bumptech/glide4/load/model/Headers.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/load/model/Headers.java
rename to library/src/main/java/com/bumptech/glide4/load/model/Headers.java
index f55d16f4e..9e6f64d1c 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/Headers.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/Headers.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import java.util.Collections;
 import java.util.Map;
diff --git a/library/src/main/java/com/bumptech/glide/load/model/LazyHeaderFactory.java b/library/src/main/java/com/bumptech/glide4/load/model/LazyHeaderFactory.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/load/model/LazyHeaderFactory.java
rename to library/src/main/java/com/bumptech/glide4/load/model/LazyHeaderFactory.java
index c00cc434f..5162a2026 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/LazyHeaderFactory.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/LazyHeaderFactory.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.support.annotation.Nullable;
 
diff --git a/library/src/main/java/com/bumptech/glide/load/model/LazyHeaders.java b/library/src/main/java/com/bumptech/glide4/load/model/LazyHeaders.java
similarity index 99%
rename from library/src/main/java/com/bumptech/glide/load/model/LazyHeaders.java
rename to library/src/main/java/com/bumptech/glide4/load/model/LazyHeaders.java
index 3a03d37b1..50daa784f 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/LazyHeaders.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/LazyHeaders.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
diff --git a/library/src/main/java/com/bumptech/glide/load/model/MediaStoreFileLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/MediaStoreFileLoader.java
similarity index 89%
rename from library/src/main/java/com/bumptech/glide/load/model/MediaStoreFileLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/MediaStoreFileLoader.java
index 6b36fb0ec..cf3b33b11 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/MediaStoreFileLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/MediaStoreFileLoader.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.content.Context;
 import android.database.Cursor;
@@ -6,12 +6,13 @@
 import android.provider.MediaStore;
 import android.support.annotation.NonNull;
 import android.text.TextUtils;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.data.mediastore.MediaStoreUtil;
-import com.bumptech.glide.signature.ObjectKey;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.data.mediastore.MediaStoreUtil;
+import com.bumptech.glide4.signature.ObjectKey;
+
 import java.io.File;
 import java.io.FileNotFoundException;
 
diff --git a/library/src/main/java/com/bumptech/glide/load/model/Model.java b/library/src/main/java/com/bumptech/glide4/load/model/Model.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/load/model/Model.java
rename to library/src/main/java/com/bumptech/glide4/load/model/Model.java
index b82f75f55..a2698bdbf 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/Model.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/Model.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.support.annotation.Nullable;
 
diff --git a/library/src/main/java/com/bumptech/glide/load/model/ModelCache.java b/library/src/main/java/com/bumptech/glide4/load/model/ModelCache.java
similarity index 96%
rename from library/src/main/java/com/bumptech/glide/load/model/ModelCache.java
rename to library/src/main/java/com/bumptech/glide4/load/model/ModelCache.java
index c654de2fc..b97cdd7eb 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/ModelCache.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/ModelCache.java
@@ -1,10 +1,11 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.annotation.VisibleForTesting;
-import com.bumptech.glide.util.LruCache;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.util.LruCache;
+import com.bumptech.glide4.util.Util;
+
 import java.util.Queue;
 
 /**
diff --git a/library/src/main/java/com/bumptech/glide/load/model/ModelLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/ModelLoader.java
similarity index 76%
rename from library/src/main/java/com/bumptech/glide/load/model/ModelLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/ModelLoader.java
index 2ef8de0dc..b0bbcbf0c 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/ModelLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/ModelLoader.java
@@ -1,11 +1,14 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.request.target.Target;
+
 import java.util.Collections;
 import java.util.List;
 
@@ -30,14 +33,14 @@
  *
  * @param <Model> The type of the model.
  * @param <Data>  The type of the data that can be used by a
- * {@link com.bumptech.glide.load.ResourceDecoder} to decode a resource.
+ * {@link ResourceDecoder} to decode a resource.
  */
 public interface ModelLoader<Model, Data> {
 
   /**
-   * Contains a set of {@link com.bumptech.glide.load.Key Keys} identifying the source of the load,
+   * Contains a set of {@link Key Keys} identifying the source of the load,
    * alternate cache keys pointing to equivalent data, and a
-   * {@link com.bumptech.glide.load.data.DataFetcher} that can be used to fetch data not found in
+   * {@link DataFetcher} that can be used to fetch data not found in
    * cache.
    *
    * @param <Data> The type of data that well be loaded.
@@ -60,10 +63,10 @@ public LoadData(@NonNull Key sourceKey, @NonNull List<Key> alternateKeys,
   }
 
   /**
-   * Returns a {@link com.bumptech.glide.load.model.ModelLoader.LoadData} containing a
-   * {@link com.bumptech.glide.load.data.DataFetcher} required to decode the resource
-   * represented by this model, as well as a set of {@link com.bumptech.glide.load.Key Keys} that
-   * identify the data loaded by the {@link com.bumptech.glide.load.data.DataFetcher} as well as an
+   * Returns a {@link ModelLoader.LoadData} containing a
+   * {@link DataFetcher} required to decode the resource
+   * represented by this model, as well as a set of {@link Key Keys} that
+   * identify the data loaded by the {@link DataFetcher} as well as an
    * optional list of alternate keys from which equivalent data can be loaded. The
    * {@link DataFetcher} will not be used if the resource is already cached.
    *
@@ -72,10 +75,10 @@ public LoadData(@NonNull Key sourceKey, @NonNull List<Key> alternateKeys,
    *
    * @param model  The model representing the resource.
    * @param width  The width in pixels of the view or target the resource will be loaded into, or
-   *               {@link com.bumptech.glide.request.target.Target#SIZE_ORIGINAL} to indicate that
+   *               {@link Target#SIZE_ORIGINAL} to indicate that
    *               the resource should be loaded at its original width.
    * @param height The height in pixels of the view or target the resource will be loaded into, or
-   *               {@link com.bumptech.glide.request.target.Target#SIZE_ORIGINAL} to indicate that
+   *               {@link Target#SIZE_ORIGINAL} to indicate that
    *               the resource should be loaded at its original height.
    */
   @Nullable
diff --git a/library/src/main/java/com/bumptech/glide/load/model/ModelLoaderFactory.java b/library/src/main/java/com/bumptech/glide4/load/model/ModelLoaderFactory.java
similarity index 72%
rename from library/src/main/java/com/bumptech/glide/load/model/ModelLoaderFactory.java
rename to library/src/main/java/com/bumptech/glide4/load/model/ModelLoaderFactory.java
index 921d4c488..a9ff1f1eb 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/ModelLoaderFactory.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/ModelLoaderFactory.java
@@ -1,9 +1,10 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.Registry;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.Registry;
+import com.bumptech.glide4.module.LibraryGlideModule;
 
 /**
  * An interface for creating a {@link ModelLoader} for a given model type.
@@ -12,12 +13,12 @@
  * factory when necessary. It's unsafe to retain {@link android.app.Activity}
  * {@link android.content.Context}s in factories. The {@link android.content.Context} can be
  * obtained from
- * {@link com.bumptech.glide.module.LibraryGlideModule#registerComponents(Context, Glide, Registry)}
+ * {@link LibraryGlideModule#registerComponents(Context, Glide, Registry)}
  * in most cases.
  *
- * @param <T> The type of the model the {@link com.bumptech.glide.load.model.ModelLoader}s built by
+ * @param <T> The type of the model the {@link ModelLoader}s built by
  *            this factory can handle
- * @param <Y> The type of data the {@link com.bumptech.glide.load.model.ModelLoader}s built by this
+ * @param <Y> The type of data the {@link ModelLoader}s built by this
  *            factory can load.
  */
 public interface ModelLoaderFactory<T, Y> {
diff --git a/library/src/main/java/com/bumptech/glide/load/model/ModelLoaderRegistry.java b/library/src/main/java/com/bumptech/glide4/load/model/ModelLoaderRegistry.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/load/model/ModelLoaderRegistry.java
rename to library/src/main/java/com/bumptech/glide4/load/model/ModelLoaderRegistry.java
index 1efe114f8..8f528a686 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/ModelLoaderRegistry.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/ModelLoaderRegistry.java
@@ -1,9 +1,10 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v4.util.Pools.Pool;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.util.Synthetic;
+
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.HashMap;
diff --git a/library/src/main/java/com/bumptech/glide/load/model/MultiModelLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/MultiModelLoader.java
similarity index 90%
rename from library/src/main/java/com/bumptech/glide/load/model/MultiModelLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/MultiModelLoader.java
index 9d2476d9b..027008519 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/MultiModelLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/MultiModelLoader.java
@@ -1,16 +1,17 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v4.util.Pools.Pool;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.data.DataFetcher.DataCallback;
-import com.bumptech.glide.load.engine.GlideException;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.engine.GlideException;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.load.engine.DataFetcherGenerator;
+
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
@@ -21,7 +22,7 @@
  * <p> TODO: we should try to find a way to remove this class. It exists to allow individual
  * ModelLoaders to delegate to multiple ModelLoaders without having to duplicate this logic
  * everywhere. We have very similar logic in the {@link
- * com.bumptech.glide.load.engine.DataFetcherGenerator} implementations and should try to avoid this
+ * DataFetcherGenerator} implementations and should try to avoid this
  * duplication. </p>
  */
 class MultiModelLoader<Model, Data> implements ModelLoader<Model, Data> {
@@ -71,7 +72,7 @@ public String toString() {
     return "MultiModelLoader{" + "modelLoaders=" + Arrays.toString(modelLoaders.toArray()) + '}';
   }
 
-  static class MultiFetcher<Data> implements DataFetcher<Data>, DataCallback<Data> {
+  static class MultiFetcher<Data> implements DataFetcher<Data>, DataFetcher.DataCallback<Data> {
 
     private final List<DataFetcher<Data>> fetchers;
     private final Pool<List<Throwable>> throwableListPool;
diff --git a/library/src/main/java/com/bumptech/glide/load/model/MultiModelLoaderFactory.java b/library/src/main/java/com/bumptech/glide4/load/model/MultiModelLoaderFactory.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/load/model/MultiModelLoaderFactory.java
rename to library/src/main/java/com/bumptech/glide4/load/model/MultiModelLoaderFactory.java
index a286bc09d..cccb67c84 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/MultiModelLoaderFactory.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/MultiModelLoaderFactory.java
@@ -1,13 +1,14 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.annotation.VisibleForTesting;
 import android.support.v4.util.Pools.Pool;
-import com.bumptech.glide.Registry.NoModelLoaderAvailableException;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.Registry;
+
 import java.util.ArrayList;
 import java.util.HashSet;
 import java.util.Iterator;
@@ -158,7 +159,7 @@ public MultiModelLoaderFactory(@NonNull Pool<List<Throwable>> throwableListPool)
         if (ignoredAnyEntries) {
           return emptyModelLoader();
         } else {
-          throw new NoModelLoaderAvailableException(modelClass, dataClass);
+          throw new Registry.NoModelLoaderAvailableException(modelClass, dataClass);
         }
       }
     } catch (Throwable t) {
@@ -187,7 +188,8 @@ public MultiModelLoaderFactory(@NonNull Pool<List<Throwable>> throwableListPool)
 
   private static class Entry<Model, Data> {
     private final Class<Model> modelClass;
-    @Synthetic final Class<Data> dataClass;
+    @Synthetic
+    final Class<Data> dataClass;
     @Synthetic final ModelLoaderFactory<? extends Model, ? extends Data> factory;
 
     public Entry(
diff --git a/library/src/main/java/com/bumptech/glide/load/model/ResourceLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/ResourceLoader.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/load/model/ResourceLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/ResourceLoader.java
index 1abc1fab4..136f41c12 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/ResourceLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/ResourceLoader.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.content.ContentResolver;
 import android.content.res.AssetFileDescriptor;
@@ -8,7 +8,8 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.util.Log;
-import com.bumptech.glide.load.Options;
+import com.bumptech.glide4.load.Options;
+
 import java.io.InputStream;
 
 /**
diff --git a/library/src/main/java/com/bumptech/glide/load/model/StreamEncoder.java b/library/src/main/java/com/bumptech/glide4/load/model/StreamEncoder.java
similarity index 82%
rename from library/src/main/java/com/bumptech/glide/load/model/StreamEncoder.java
rename to library/src/main/java/com/bumptech/glide4/load/model/StreamEncoder.java
index 9fa8a0ec7..0ccb68b1a 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/StreamEncoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/StreamEncoder.java
@@ -1,10 +1,11 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.support.annotation.NonNull;
 import android.util.Log;
-import com.bumptech.glide.load.Encoder;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.Encoder;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+
 import java.io.File;
 import java.io.FileOutputStream;
 import java.io.IOException;
@@ -12,7 +13,7 @@
 import java.io.OutputStream;
 
 /**
- * An {@link com.bumptech.glide.load.Encoder} that can write an {@link java.io.InputStream} to
+ * An {@link Encoder} that can write an {@link java.io.InputStream} to
  * disk.
  */
 public class StreamEncoder implements Encoder<InputStream> {
diff --git a/library/src/main/java/com/bumptech/glide/load/model/StringLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/StringLoader.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/load/model/StringLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/StringLoader.java
index c00fac18e..f7c39dab3 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/StringLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/StringLoader.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.content.res.AssetFileDescriptor;
 import android.net.Uri;
@@ -6,7 +6,8 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.text.TextUtils;
-import com.bumptech.glide.load.Options;
+import com.bumptech.glide4.load.Options;
+
 import java.io.File;
 import java.io.InputStream;
 
diff --git a/library/src/main/java/com/bumptech/glide/load/model/UnitModelLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/UnitModelLoader.java
similarity index 89%
rename from library/src/main/java/com/bumptech/glide/load/model/UnitModelLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/UnitModelLoader.java
index 670e86986..4b3f74e6d 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/UnitModelLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/UnitModelLoader.java
@@ -1,11 +1,11 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.signature.ObjectKey;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.signature.ObjectKey;
 
 /**
  * A put of helper classes that performs no loading and instead always returns the given model as
@@ -82,7 +82,7 @@ public DataSource getDataSource() {
   }
 
   /**
-   * Factory for producing {@link com.bumptech.glide.load.model.UnitModelLoader}s.
+   * Factory for producing {@link UnitModelLoader}s.
    *
    * @param <Model> The type of model that will also be returned as decodable data.
    */
diff --git a/library/src/main/java/com/bumptech/glide/load/model/UriLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/UriLoader.java
similarity index 89%
rename from library/src/main/java/com/bumptech/glide/load/model/UriLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/UriLoader.java
index 77a316dd4..0cd4aaba1 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/UriLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/UriLoader.java
@@ -1,16 +1,17 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.content.ContentResolver;
 import android.content.res.AssetFileDescriptor;
 import android.net.Uri;
 import android.os.ParcelFileDescriptor;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher;
-import com.bumptech.glide.load.data.StreamLocalUriFetcher;
-import com.bumptech.glide.signature.ObjectKey;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.AssetFileDescriptorLocalUriFetcher;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.data.FileDescriptorLocalUriFetcher;
+import com.bumptech.glide4.load.data.StreamLocalUriFetcher;
+import com.bumptech.glide4.signature.ObjectKey;
+
 import java.io.InputStream;
 import java.util.Arrays;
 import java.util.Collections;
@@ -20,8 +21,8 @@
 /**
  * A ModelLoader for {@link android.net.Uri}s that handles local {@link android.net.Uri}s
  * directly and routes remote {@link android.net.Uri}s to a wrapped
- * {@link com.bumptech.glide.load.model.ModelLoader} that handles
- * {@link com.bumptech.glide.load.model.GlideUrl}s.
+ * {@link ModelLoader} that handles
+ * {@link GlideUrl}s.
  *
  * @param <Data> The type of data that will be retrieved for {@link android.net.Uri}s.
  */
diff --git a/library/src/main/java/com/bumptech/glide/load/model/UrlUriLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/UrlUriLoader.java
similarity index 92%
rename from library/src/main/java/com/bumptech/glide/load/model/UrlUriLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/UrlUriLoader.java
index f51b8698f..c960d8446 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/UrlUriLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/UrlUriLoader.java
@@ -1,8 +1,9 @@
-package com.bumptech.glide.load.model;
+package com.bumptech.glide4.load.model;
 
 import android.net.Uri;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Options;
+import com.bumptech.glide4.load.Options;
+
 import java.io.InputStream;
 import java.util.Arrays;
 import java.util.Collections;
@@ -11,7 +12,7 @@
 
 /**
  * Handles http/https Uris by delegating to the {@link ModelLoader} for {@link
- * com.bumptech.glide.load.model.GlideUrl GlideUrls}.
+ * GlideUrl GlideUrls}.
  *
  * @param <Data> The type of data this Loader will obtain for a {@link Uri}.
  */
diff --git a/library/src/main/java/com/bumptech/glide/load/model/stream/BaseGlideUrlLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/stream/BaseGlideUrlLoader.java
similarity index 93%
rename from library/src/main/java/com/bumptech/glide/load/model/stream/BaseGlideUrlLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/stream/BaseGlideUrlLoader.java
index 20c765776..cbdaa5eac 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/stream/BaseGlideUrlLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/stream/BaseGlideUrlLoader.java
@@ -1,14 +1,15 @@
-package com.bumptech.glide.load.model.stream;
+package com.bumptech.glide4.load.model.stream;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.text.TextUtils;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.load.model.Headers;
-import com.bumptech.glide.load.model.ModelCache;
-import com.bumptech.glide.load.model.ModelLoader;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.Headers;
+import com.bumptech.glide4.load.model.ModelCache;
+import com.bumptech.glide4.load.model.ModelLoader;
+
 import java.io.InputStream;
 import java.util.ArrayList;
 import java.util.Collection;
diff --git a/library/src/main/java/com/bumptech/glide/load/model/stream/HttpGlideUrlLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/stream/HttpGlideUrlLoader.java
similarity index 73%
rename from library/src/main/java/com/bumptech/glide/load/model/stream/HttpGlideUrlLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/stream/HttpGlideUrlLoader.java
index e149e1916..73411650c 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/stream/HttpGlideUrlLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/stream/HttpGlideUrlLoader.java
@@ -1,20 +1,21 @@
-package com.bumptech.glide.load.model.stream;
+package com.bumptech.glide4.load.model.stream;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Option;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.HttpUrlFetcher;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.load.model.ModelCache;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoaderFactory;
-import com.bumptech.glide.load.model.MultiModelLoaderFactory;
+import com.bumptech.glide4.load.Option;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.HttpUrlFetcher;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.ModelCache;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.model.MultiModelLoaderFactory;
+
 import java.io.InputStream;
 
 /**
- * An {@link com.bumptech.glide.load.model.ModelLoader} for translating {@link
- * com.bumptech.glide.load.model.GlideUrl} (http/https URLS) into {@link java.io.InputStream} data.
+ * An {@link ModelLoader} for translating {@link
+ * GlideUrl} (http/https URLS) into {@link java.io.InputStream} data.
  */
 // Public API.
 @SuppressWarnings("WeakerAccess")
@@ -26,7 +27,7 @@
    * <p>Defaults to 2500ms.
    */
   public static final Option<Integer> TIMEOUT = Option.memory(
-      "com.bumptech.glide.load.model.stream.HttpGlideUrlLoader.Timeout", 2500);
+      "HttpGlideUrlLoader.Timeout", 2500);
 
   @Nullable private final ModelCache<GlideUrl, GlideUrl> modelCache;
 
diff --git a/library/src/main/java/com/bumptech/glide/load/model/stream/HttpUriLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/stream/HttpUriLoader.java
similarity index 82%
rename from library/src/main/java/com/bumptech/glide/load/model/stream/HttpUriLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/stream/HttpUriLoader.java
index 7ff6639b2..0dc46b53a 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/stream/HttpUriLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/stream/HttpUriLoader.java
@@ -1,12 +1,13 @@
-package com.bumptech.glide.load.model.stream;
+package com.bumptech.glide4.load.model.stream;
 
 import android.net.Uri;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoaderFactory;
-import com.bumptech.glide.load.model.MultiModelLoaderFactory;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.model.MultiModelLoaderFactory;
+
 import java.io.InputStream;
 import java.util.Arrays;
 import java.util.Collections;
diff --git a/library/src/main/java/com/bumptech/glide/load/model/stream/MediaStoreImageThumbLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/stream/MediaStoreImageThumbLoader.java
similarity index 78%
rename from library/src/main/java/com/bumptech/glide/load/model/stream/MediaStoreImageThumbLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/stream/MediaStoreImageThumbLoader.java
index aba0fe3cf..3d2989995 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/stream/MediaStoreImageThumbLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/stream/MediaStoreImageThumbLoader.java
@@ -1,15 +1,16 @@
-package com.bumptech.glide.load.model.stream;
+package com.bumptech.glide4.load.model.stream;
 
 import android.content.Context;
 import android.net.Uri;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.mediastore.MediaStoreUtil;
-import com.bumptech.glide.load.data.mediastore.ThumbFetcher;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoaderFactory;
-import com.bumptech.glide.load.model.MultiModelLoaderFactory;
-import com.bumptech.glide.signature.ObjectKey;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.mediastore.MediaStoreUtil;
+import com.bumptech.glide4.load.data.mediastore.ThumbFetcher;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.model.MultiModelLoaderFactory;
+import com.bumptech.glide4.signature.ObjectKey;
+
 import java.io.InputStream;
 
 /**
diff --git a/library/src/main/java/com/bumptech/glide/load/model/stream/MediaStoreVideoThumbLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/stream/MediaStoreVideoThumbLoader.java
similarity index 81%
rename from library/src/main/java/com/bumptech/glide/load/model/stream/MediaStoreVideoThumbLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/stream/MediaStoreVideoThumbLoader.java
index 0685decb1..a72ee0883 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/stream/MediaStoreVideoThumbLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/stream/MediaStoreVideoThumbLoader.java
@@ -1,17 +1,18 @@
-package com.bumptech.glide.load.model.stream;
+package com.bumptech.glide4.load.model.stream;
 
 import android.content.Context;
 import android.net.Uri;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.mediastore.MediaStoreUtil;
-import com.bumptech.glide.load.data.mediastore.ThumbFetcher;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoaderFactory;
-import com.bumptech.glide.load.model.MultiModelLoaderFactory;
-import com.bumptech.glide.load.resource.bitmap.VideoDecoder;
-import com.bumptech.glide.signature.ObjectKey;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.mediastore.MediaStoreUtil;
+import com.bumptech.glide4.load.data.mediastore.ThumbFetcher;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.model.MultiModelLoaderFactory;
+import com.bumptech.glide4.load.resource.bitmap.VideoDecoder;
+import com.bumptech.glide4.signature.ObjectKey;
+
 import java.io.InputStream;
 
 /**
diff --git a/library/src/main/java/com/bumptech/glide/load/model/stream/UrlLoader.java b/library/src/main/java/com/bumptech/glide4/load/model/stream/UrlLoader.java
similarity index 71%
rename from library/src/main/java/com/bumptech/glide/load/model/stream/UrlLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/model/stream/UrlLoader.java
index c3995affa..441d2d545 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/stream/UrlLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/model/stream/UrlLoader.java
@@ -1,18 +1,19 @@
-package com.bumptech.glide.load.model.stream;
+package com.bumptech.glide4.load.model.stream;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoaderFactory;
-import com.bumptech.glide.load.model.MultiModelLoaderFactory;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.model.MultiModelLoaderFactory;
+
 import java.io.InputStream;
 import java.net.URL;
 
 /**
  * A wrapper class that translates {@link java.net.URL} objects into {@link
- * com.bumptech.glide.load.model.GlideUrl} objects and then uses the wrapped {@link
- * com.bumptech.glide.load.model.ModelLoader} for {@link com.bumptech.glide.load.model.GlideUrl}s to
+ * GlideUrl} objects and then uses the wrapped {@link
+ * ModelLoader} for {@link GlideUrl}s to
  * load the data.
  */
 public class UrlLoader implements ModelLoader<URL, InputStream> {
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/SimpleResource.java b/library/src/main/java/com/bumptech/glide4/load/resource/SimpleResource.java
similarity index 86%
rename from library/src/main/java/com/bumptech/glide/load/resource/SimpleResource.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/SimpleResource.java
index 9b6c8e465..bf4d61beb 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/SimpleResource.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/SimpleResource.java
@@ -1,8 +1,8 @@
-package com.bumptech.glide.load.resource;
+package com.bumptech.glide4.load.resource;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.util.Preconditions;
 
 /**
  * Simple wrapper for an arbitrary object which helps to satisfy some of the glide engine's
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/UnitTransformation.java b/library/src/main/java/com/bumptech/glide4/load/resource/UnitTransformation.java
similarity index 88%
rename from library/src/main/java/com/bumptech/glide/load/resource/UnitTransformation.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/UnitTransformation.java
index 9602c2564..dc3a3a72c 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/UnitTransformation.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/UnitTransformation.java
@@ -1,9 +1,10 @@
-package com.bumptech.glide.load.resource;
+package com.bumptech.glide4.load.resource;
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.Resource;
+
 import java.security.MessageDigest;
 
 /**
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableDecoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapDrawableDecoder.java
similarity index 85%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableDecoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapDrawableDecoder.java
index 40a2d4c92..96ddb2309 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableDecoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapDrawableDecoder.java
@@ -1,15 +1,16 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.content.Context;
 import android.content.res.Resources;
 import android.graphics.Bitmap;
 import android.graphics.drawable.BitmapDrawable;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.util.Preconditions;
+
 import java.io.IOException;
 
 /**
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableEncoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapDrawableEncoder.java
similarity index 75%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableEncoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapDrawableEncoder.java
index a955d9d05..92b107c73 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableEncoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapDrawableEncoder.java
@@ -1,13 +1,14 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.graphics.Bitmap;
 import android.graphics.drawable.BitmapDrawable;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.EncodeStrategy;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceEncoder;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.EncodeStrategy;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceEncoder;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+
 import java.io.File;
 
 /**
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableResource.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapDrawableResource.java
similarity index 73%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableResource.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapDrawableResource.java
index 736c02ea6..8946bd564 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableResource.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapDrawableResource.java
@@ -1,20 +1,21 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.graphics.drawable.BitmapDrawable;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.engine.Initializable;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.resource.drawable.DrawableResource;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.load.engine.Initializable;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.resource.drawable.DrawableResource;
+import com.bumptech.glide4.util.Util;
 
 /**
- * A {@link com.bumptech.glide.load.engine.Resource} that wraps an
+ * A {@link Resource} that wraps an
  * {@link android.graphics.drawable.BitmapDrawable}
  *
  * <p> This class ensures that every call to {@link #get()}} always returns a new
  * {@link android.graphics.drawable.BitmapDrawable} to avoid rendering issues if used in multiple
  * views and is also responsible for returning the underlying {@link android.graphics.Bitmap} to the
- * given {@link com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool} when the resource is
+ * given {@link BitmapPool} when the resource is
  * recycled. </p>
  */
 public class BitmapDrawableResource extends DrawableResource<BitmapDrawable>
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapDrawableTransformation.java
similarity index 92%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapDrawableTransformation.java
index 2b3bdc574..86d58fe0e 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapDrawableTransformation.java
@@ -1,13 +1,14 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.util.Preconditions;
+
 import java.security.MessageDigest;
 
 /**
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapEncoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapEncoder.java
similarity index 82%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapEncoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapEncoder.java
index 8dcd98372..63152815e 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapEncoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapEncoder.java
@@ -1,26 +1,27 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.util.Log;
-import com.bumptech.glide.load.EncodeStrategy;
-import com.bumptech.glide.load.Option;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceEncoder;
-import com.bumptech.glide.load.data.BufferedOutputStream;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.util.LogTime;
-import com.bumptech.glide.util.Util;
-import com.bumptech.glide.util.pool.GlideTrace;
+import com.bumptech.glide4.load.EncodeStrategy;
+import com.bumptech.glide4.load.Option;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceEncoder;
+import com.bumptech.glide4.load.data.BufferedOutputStream;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.util.LogTime;
+import com.bumptech.glide4.util.Util;
+import com.bumptech.glide4.util.pool.GlideTrace;
+
 import java.io.File;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.OutputStream;
 
 /**
- * An {@link com.bumptech.glide.load.ResourceEncoder} that writes {@link android.graphics.Bitmap}s
+ * An {@link ResourceEncoder} that writes {@link android.graphics.Bitmap}s
  * to {@link java.io.OutputStream}s.
  *
  * <p> {@link android.graphics.Bitmap}s that return true from
@@ -39,7 +40,7 @@
    * <p> Defaults to 90. </p>
    */
   public static final Option<Integer> COMPRESSION_QUALITY = Option.memory(
-      "com.bumptech.glide.load.resource.bitmap.BitmapEncoder.CompressionQuality", 90);
+      "BitmapEncoder.CompressionQuality", 90);
 
   /**
    * An {@link android.graphics.Bitmap.CompressFormat} option used as the format to encode
@@ -49,7 +50,7 @@
    * and {@link android.graphics.Bitmap.CompressFormat#PNG} for images with alpha. </p>
    */
   public static final Option<Bitmap.CompressFormat> COMPRESSION_FORMAT = Option.memory(
-      "com.bumptech.glide.load.resource.bitmap.BitmapEncoder.CompressionFormat");
+      "BitmapEncoder.CompressionFormat");
 
   private static final String TAG = "BitmapEncoder";
   @Nullable
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapResource.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapResource.java
similarity index 78%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapResource.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapResource.java
index 49e57a956..e993ebc63 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapResource.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapResource.java
@@ -1,13 +1,13 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.engine.Initializable;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.load.engine.Initializable;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Util;
 
 /**
  * A resource wrapping a {@link android.graphics.Bitmap} object.
@@ -22,7 +22,7 @@
    * non-null or null if the given Bitmap is null.
    *
    * @param bitmap     A Bitmap.
-   * @param bitmapPool A non-null {@link com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool}.
+   * @param bitmapPool A non-null {@link BitmapPool}.
    */
   @Nullable
   public static BitmapResource obtain(@Nullable Bitmap bitmap, @NonNull BitmapPool bitmapPool) {
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapTransformation.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapTransformation.java
similarity index 88%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapTransformation.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapTransformation.java
index 44bc67066..12c02816e 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapTransformation.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapTransformation.java
@@ -1,21 +1,22 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.request.target.Target;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.request.target.Target;
+import com.bumptech.glide4.util.Util;
+
 import java.nio.charset.Charset;
 import java.security.MessageDigest;
 
 /**
- * A simple {@link com.bumptech.glide.load.Transformation} for transforming
+ * A simple {@link Transformation} for transforming
  * {@link android.graphics.Bitmap}s that abstracts away dealing with
- * {@link com.bumptech.glide.load.engine.Resource} objects for subclasses.
+ * {@link Resource} objects for subclasses.
  *
  * Use cases will look something like this:
  * <pre>
@@ -102,11 +103,11 @@
    * returned to the BitmapPool and/or recycled.
    *
    * <p>outWidth and outHeight will never be
-   * {@link com.bumptech.glide.request.target.Target#SIZE_ORIGINAL},
+   * {@link Target#SIZE_ORIGINAL},
    * this class converts them to be the size of the Bitmap we're going to transform before calling
    * this method.
    *
-   * @param pool        A {@link com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool} that can
+   * @param pool        A {@link BitmapPool} that can
    *                    be used to obtain and return intermediate {@link Bitmap}s used in this
    *                    transformation. For every {@link android.graphics.Bitmap} obtained from the
    *                    pool during this transformation, a {@link android.graphics.Bitmap} must also
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapTransitionOptions.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapTransitionOptions.java
similarity index 88%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapTransitionOptions.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapTransitionOptions.java
index e5e335bc4..feb1b1c6d 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapTransitionOptions.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/BitmapTransitionOptions.java
@@ -1,12 +1,13 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.graphics.Bitmap;
 import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.TransitionOptions;
-import com.bumptech.glide.request.transition.BitmapTransitionFactory;
-import com.bumptech.glide.request.transition.DrawableCrossFadeFactory;
-import com.bumptech.glide.request.transition.TransitionFactory;
+import com.bumptech.glide4.TransitionOptions;
+import com.bumptech.glide4.request.transition.BitmapTransitionFactory;
+import com.bumptech.glide4.request.transition.DrawableCrossFadeFactory;
+import com.bumptech.glide4.request.transition.TransitionFactory;
+import com.bumptech.glide4.GenericTransitionOptions;
 
 /**
  * Contains {@link Bitmap} specific animation options.
@@ -14,7 +15,7 @@
 // Public API.
 @SuppressWarnings({"unused", "WeakerAccess"})
 public final class BitmapTransitionOptions extends
-    TransitionOptions<BitmapTransitionOptions, Bitmap> {
+        TransitionOptions<BitmapTransitionOptions, Bitmap> {
 
   /**
    * Returns a {@link BitmapTransitionOptions} object that enables a cross fade animation.
@@ -73,7 +74,7 @@ public static BitmapTransitionOptions withWrapped(
   /**
    * Returns a {@link BitmapTransitionOptions} object that uses the given transition factory.
    *
-   * @see com.bumptech.glide.GenericTransitionOptions#with(TransitionFactory)
+   * @see GenericTransitionOptions#with(TransitionFactory)
    */
   @NonNull
   public static BitmapTransitionOptions with(
@@ -96,7 +97,7 @@ public BitmapTransitionOptions crossFade() {
    *
    * @param duration The duration of the animation, see
    *     {@code DrawableCrossFadeFactory.Builder(int)}.
-   * @see com.bumptech.glide.request.transition.DrawableCrossFadeFactory.Builder
+   * @see DrawableCrossFadeFactory.Builder
    */
   @NonNull
   public BitmapTransitionOptions crossFade(int duration) {
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/ByteBufferBitmapDecoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/ByteBufferBitmapDecoder.java
similarity index 79%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/ByteBufferBitmapDecoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/ByteBufferBitmapDecoder.java
index 97084a025..4886e3eb4 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/ByteBufferBitmapDecoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/ByteBufferBitmapDecoder.java
@@ -1,11 +1,12 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.util.ByteBufferUtil;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.util.ByteBufferUtil;
+
 import java.io.IOException;
 import java.io.InputStream;
 import java.nio.ByteBuffer;
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/CenterCrop.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/CenterCrop.java
similarity index 83%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/CenterCrop.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/CenterCrop.java
index da0d1a1ec..e24d69f6a 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/CenterCrop.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/CenterCrop.java
@@ -1,8 +1,8 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
 import java.security.MessageDigest;
 
 /**
@@ -13,7 +13,7 @@
  * Does not maintain the image's aspect ratio
  */
 public class CenterCrop extends BitmapTransformation {
-  private static final String ID = "com.bumptech.glide.load.resource.bitmap.CenterCrop";
+  private static final String ID = "CenterCrop";
   private static final byte[] ID_BYTES = ID.getBytes(CHARSET);
 
   @Override
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/CenterInside.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/CenterInside.java
similarity index 85%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/CenterInside.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/CenterInside.java
index b707b0fc8..361c6f1da 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/CenterInside.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/CenterInside.java
@@ -1,8 +1,8 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
 import java.security.MessageDigest;
 
 /**
@@ -13,7 +13,7 @@
  * dimension (maintaining the image's aspect ratio).
  */
 public class CenterInside extends BitmapTransformation {
-  private static final String ID = "com.bumptech.glide.load.resource.bitmap.CenterInside";
+  private static final String ID = "CenterInside";
   private static final byte[] ID_BYTES = ID.getBytes(CHARSET);
 
   @Override
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/CircleCrop.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/CircleCrop.java
similarity index 85%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/CircleCrop.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/CircleCrop.java
index 7d5d5968b..0052db269 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/CircleCrop.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/CircleCrop.java
@@ -1,8 +1,8 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
 import java.security.MessageDigest;
 
 /**
@@ -15,7 +15,7 @@
   // The version of this transformation, incremented to correct an error in a previous version.
   // See #455.
   private static final int VERSION = 1;
-  private static final String ID = "com.bumptech.glide.load.resource.bitmap.CircleCrop." + VERSION;
+  private static final String ID = "CircleCrop." + VERSION;
   private static final byte[] ID_BYTES = ID.getBytes(CHARSET);
 
   // Bitmap doesn't implement equals, so == and .equals are equivalent here.
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/DefaultImageHeaderParser.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/DefaultImageHeaderParser.java
index a6e7c10cb..e1b4deb55 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/DefaultImageHeaderParser.java
@@ -1,16 +1,11 @@
-package com.bumptech.glide.load.resource.bitmap;
-
-import static com.bumptech.glide.load.ImageHeaderParser.ImageType.GIF;
-import static com.bumptech.glide.load.ImageHeaderParser.ImageType.JPEG;
-import static com.bumptech.glide.load.ImageHeaderParser.ImageType.PNG;
-import static com.bumptech.glide.load.ImageHeaderParser.ImageType.PNG_A;
-import static com.bumptech.glide.load.ImageHeaderParser.ImageType.UNKNOWN;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.support.annotation.NonNull;
 import android.util.Log;
-import com.bumptech.glide.load.ImageHeaderParser;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.ImageHeaderParser;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.util.Preconditions;
+
 import java.io.IOException;
 import java.io.InputStream;
 import java.nio.ByteBuffer;
@@ -89,7 +84,7 @@ private ImageType getType(Reader reader) throws IOException {
 
     // JPEG.
     if (firstTwoBytes == EXIF_MAGIC_NUMBER) {
-      return JPEG;
+      return ImageType.JPEG;
     }
 
     final int firstFourBytes = (firstTwoBytes << 16 & 0xFFFF0000) | (reader.getUInt16() & 0xFFFF);
@@ -100,30 +95,30 @@ private ImageType getType(Reader reader) throws IOException {
       reader.skip(25 - 4);
       int alpha = reader.getByte();
       // A RGB indexed PNG can also have transparency. Better safe than sorry!
-      return alpha >= 3 ? PNG_A : PNG;
+      return alpha >= 3 ? ImageType.PNG_A : ImageType.PNG;
     }
 
     // GIF from first 3 bytes.
     if (firstFourBytes >> 8 == GIF_HEADER) {
-      return GIF;
+      return ImageType.GIF;
     }
 
     // WebP (reads up to 21 bytes). See https://developers.google.com/speed/webp/docs/riff_container
     // for details.
     if (firstFourBytes != RIFF_HEADER) {
-      return UNKNOWN;
+      return ImageType.UNKNOWN;
     }
     // Bytes 4 - 7 contain length information. Skip these.
     reader.skip(4);
     final int thirdFourBytes =
         (reader.getUInt16() << 16 & 0xFFFF0000) | (reader.getUInt16() & 0xFFFF);
     if (thirdFourBytes != WEBP_HEADER) {
-      return UNKNOWN;
+      return ImageType.UNKNOWN;
     }
     final int fourthFourBytes =
         (reader.getUInt16() << 16 & 0xFFFF0000) | (reader.getUInt16() & 0xFFFF);
     if ((fourthFourBytes & VP8_HEADER_MASK) != VP8_HEADER) {
-      return UNKNOWN;
+      return ImageType.UNKNOWN;
     }
     if ((fourthFourBytes & VP8_HEADER_TYPE_MASK) == VP8_HEADER_TYPE_EXTENDED) {
       // Skip some more length bytes and check for transparency/alpha flag.
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategy.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/DownsampleStrategy.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategy.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/DownsampleStrategy.java
index e2fb472d5..939c8b636 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategy.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/DownsampleStrategy.java
@@ -1,20 +1,22 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
-import com.bumptech.glide.load.Option;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.load.Option;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.Transformation;
 
 /**
  * Indicates the algorithm to use when downsampling images.
  *
  * <p>{@code DownsampleStrategy} does not provide any guarantees about output sizes. Behavior will
- * differ depending on the {@link com.bumptech.glide.load.ResourceDecoder} using the strategy and
+ * differ depending on the {@link ResourceDecoder} using the strategy and
  * the version of Android the code runs on. Use {@code DownsampleStrategy} as an optimization to
  * improve memory efficiency only. If you need a particular size or shape output, use an
- * {@link com.bumptech.glide.load.Transformation} either instead or in addition to a
+ * {@link Transformation} either instead or in addition to a
  * {@code DownsampleStrategy}.
  *
  * <p>Some differences between versions of Android and
- * {@link com.bumptech.glide.load.ResourceDecoder}s are listed below, but the list is not
+ * {@link ResourceDecoder}s are listed below, but the list is not
  * comprehensive because {@link DownsampleStrategy} only controls it's output scale value, not
  * how that output value is used.
  */
@@ -86,7 +88,7 @@
   public static final DownsampleStrategy DEFAULT = CENTER_OUTSIDE;
 
   /**
-   * Indicates the {@link com.bumptech.glide.load.resource.bitmap.DownsampleStrategy} option that
+   * Indicates the {@link DownsampleStrategy} option that
    * will be used to calculate the sample size to use to downsample an image given the original
    * and target dimensions of the image.
    */
@@ -94,7 +96,7 @@
   // loaded with older versions of Glide.
   public static final Option<DownsampleStrategy> OPTION =
       Option.memory(
-          "com.bumptech.glide.load.resource.bitmap.Downsampler.DownsampleStrategy", DEFAULT);
+          "Downsampler.DownsampleStrategy", DEFAULT);
 
   /**
    * Returns a float (0, +infinity) indicating a scale factor to apply to the source
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/Downsampler.java
similarity index 93%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/Downsampler.java
index 53e7d25f4..ea95089e4 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/Downsampler.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.annotation.TargetApi;
 import android.graphics.Bitmap;
@@ -8,21 +8,21 @@
 import android.support.annotation.Nullable;
 import android.util.DisplayMetrics;
 import android.util.Log;
-import com.bumptech.glide.load.DecodeFormat;
-import com.bumptech.glide.load.ImageHeaderParser;
-import com.bumptech.glide.load.ImageHeaderParser.ImageType;
-import com.bumptech.glide.load.ImageHeaderParserUtils;
-import com.bumptech.glide.load.Option;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.SampleSizeRounding;
-import com.bumptech.glide.request.RequestOptions;
-import com.bumptech.glide.request.target.Target;
-import com.bumptech.glide.util.LogTime;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.load.DecodeFormat;
+import com.bumptech.glide4.load.ImageHeaderParser;
+import com.bumptech.glide4.load.ImageHeaderParserUtils;
+import com.bumptech.glide4.load.Option;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.request.RequestOptions;
+import com.bumptech.glide4.request.target.Target;
+import com.bumptech.glide4.util.LogTime;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Util;
+import com.bumptech.glide4.GlideBuilder;
+
 import java.io.IOException;
 import java.io.InputStream;
 import java.nio.ByteBuffer;
@@ -40,14 +40,14 @@
 public final class Downsampler {
   static final String TAG = "Downsampler";
   /**
-   * Indicates the {@link com.bumptech.glide.load.DecodeFormat} that will be used in conjunction
+   * Indicates the {@link DecodeFormat} that will be used in conjunction
    * with the image format to determine the {@link android.graphics.Bitmap.Config} to provide to
    * {@link android.graphics.BitmapFactory.Options#inPreferredConfig} when decoding the image.
    */
   public static final Option<DecodeFormat> DECODE_FORMAT = Option.memory(
-      "com.bumptech.glide.load.resource.bitmap.Downsampler.DecodeFormat", DecodeFormat.DEFAULT);
+      "Downsampler.DecodeFormat", DecodeFormat.DEFAULT);
   /**
-   * Indicates the {@link com.bumptech.glide.load.resource.bitmap.DownsampleStrategy} option that
+   * Indicates the {@link DownsampleStrategy} option that
    * will be used to calculate the sample size to use to downsample an image given the original
    * and target dimensions of the image.
    *
@@ -68,7 +68,7 @@
   // Public API
   @SuppressWarnings("WeakerAccess")
   public static final Option<Boolean> FIX_BITMAP_SIZE_TO_REQUESTED_DIMENSIONS =
-      Option.memory("com.bumptech.glide.load.resource.bitmap.Downsampler.FixBitmapSize", false);
+      Option.memory("Downsampler.FixBitmapSize", false);
 
   /**
    * Indicates that it's safe or unsafe to decode {@link Bitmap}s with
@@ -83,13 +83,13 @@
    * {@link Bitmap#getPixels(int[], int, int, int, int, int, int)}.
    *
    * <p>Callers can disable hardware {@link Bitmap}s for all loads using
-   * {@link com.bumptech.glide.GlideBuilder#setDefaultRequestOptions(RequestOptions)}.
+   * {@link GlideBuilder#setDefaultRequestOptions(RequestOptions)}.
    *
    * <p>This option is ignored unless we're on Android O+.
    */
   public static final Option<Boolean> ALLOW_HARDWARE_CONFIG =
       Option.memory(
-          "com.bumptech.glide.load.resource.bitmap.Downsampler.AllowHardwareDecode", false);
+          "Downsampler.AllowHardwareDecode", false);
 
   private static final String WBMP_MIME_TYPE = "image/vnd.wap.wbmp";
   private static final String ICO_MIME_TYPE = "image/x-ico";
@@ -153,22 +153,22 @@ public boolean handles(@SuppressWarnings("unused") ByteBuffer byteBuffer) {
   /**
    * Returns a Bitmap decoded from the given {@link InputStream} that is rotated to match any EXIF
    * data present in the stream and that is downsampled according to the given dimensions and any
-   * provided  {@link com.bumptech.glide.load.resource.bitmap.DownsampleStrategy} option.
+   * provided  {@link DownsampleStrategy} option.
    *
    * @see #decode(InputStream, int, int, Options, DecodeCallbacks)
    */
   public Resource<Bitmap> decode(InputStream is, int outWidth, int outHeight,
-      Options options) throws IOException {
+                                 Options options) throws IOException {
     return decode(is, outWidth, outHeight, options, EMPTY_CALLBACKS);
   }
 
   /**
    * Returns a Bitmap decoded from the given {@link InputStream} that is rotated to match any EXIF
    * data present in the stream and that is downsampled according to the given dimensions and any
-   * provided  {@link com.bumptech.glide.load.resource.bitmap.DownsampleStrategy} option.
+   * provided  {@link DownsampleStrategy} option.
    *
    * <p> If a Bitmap is present in the
-   * {@link com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool} whose dimensions exactly match
+   * {@link BitmapPool} whose dimensions exactly match
    * those of the image for the given InputStream is available, the operation is much less expensive
    * in terms of memory. </p>
    *
@@ -240,7 +240,7 @@ private Bitmap decodeFromWrappedStreams(InputStream is,
     int targetWidth = requestedWidth == Target.SIZE_ORIGINAL ? sourceWidth : requestedWidth;
     int targetHeight = requestedHeight == Target.SIZE_ORIGINAL ? sourceHeight : requestedHeight;
 
-    ImageType imageType = ImageHeaderParserUtils.getType(parsers, is, byteArrayPool);
+    ImageHeaderParser.ImageType imageType = ImageHeaderParserUtils.getType(parsers, is, byteArrayPool);
 
     calculateScaling(
         imageType,
@@ -320,7 +320,7 @@ private Bitmap decodeFromWrappedStreams(InputStream is,
   }
 
   private static void calculateScaling(
-      ImageType imageType,
+      ImageHeaderParser.ImageType imageType,
       InputStream is,
       DecodeCallbacks decodeCallbacks,
       BitmapPool bitmapPool,
@@ -359,7 +359,7 @@ private static void calculateScaling(
           + ", source: [" + sourceWidth + "x" + sourceHeight + "]"
           + ", target: [" + targetWidth + "x" + targetHeight + "]");
     }
-    SampleSizeRounding rounding = downsampleStrategy.getSampleSizeRounding(sourceWidth,
+    DownsampleStrategy.SampleSizeRounding rounding = downsampleStrategy.getSampleSizeRounding(sourceWidth,
         sourceHeight, targetWidth, targetHeight);
     if (rounding == null) {
       throw new IllegalArgumentException("Cannot round with null rounding");
@@ -371,7 +371,7 @@ private static void calculateScaling(
     int widthScaleFactor = sourceWidth / outWidth;
     int heightScaleFactor = sourceHeight / outHeight;
 
-    int scaleFactor = rounding == SampleSizeRounding.MEMORY
+    int scaleFactor = rounding == DownsampleStrategy.SampleSizeRounding.MEMORY
         ? Math.max(widthScaleFactor, heightScaleFactor)
         : Math.min(widthScaleFactor, heightScaleFactor);
 
@@ -382,7 +382,7 @@ private static void calculateScaling(
       powerOfTwoSampleSize = 1;
     } else {
       powerOfTwoSampleSize = Math.max(1, Integer.highestOneBit(scaleFactor));
-      if (rounding == SampleSizeRounding.MEMORY
+      if (rounding == DownsampleStrategy.SampleSizeRounding.MEMORY
           && powerOfTwoSampleSize < (1.f / exactScaleFactor)) {
         powerOfTwoSampleSize = powerOfTwoSampleSize << 1;
       }
@@ -396,7 +396,7 @@ private static void calculateScaling(
     options.inSampleSize = powerOfTwoSampleSize;
     int powerOfTwoWidth;
     int powerOfTwoHeight;
-    if (imageType == ImageType.JPEG) {
+    if (imageType == ImageHeaderParser.ImageType.JPEG) {
       // libjpegturbo can downsample up to a sample size of 8. libjpegturbo uses ceiling to round.
       // After libjpegturbo's native rounding, skia does a secondary scale using floor
       // (integer division). Here we replicate that logic.
@@ -408,10 +408,10 @@ private static void calculateScaling(
         powerOfTwoWidth = powerOfTwoWidth / secondaryScaling;
         powerOfTwoHeight = powerOfTwoHeight / secondaryScaling;
       }
-    } else if (imageType == ImageType.PNG || imageType == ImageType.PNG_A) {
+    } else if (imageType == ImageHeaderParser.ImageType.PNG || imageType == ImageHeaderParser.ImageType.PNG_A) {
       powerOfTwoWidth = (int) Math.floor(sourceWidth / (float) powerOfTwoSampleSize);
       powerOfTwoHeight = (int) Math.floor(sourceHeight / (float) powerOfTwoSampleSize);
-    } else if (imageType == ImageType.WEBP || imageType == ImageType.WEBP_A) {
+    } else if (imageType == ImageHeaderParser.ImageType.WEBP || imageType == ImageHeaderParser.ImageType.WEBP_A) {
       if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
         powerOfTwoWidth = Math.round(sourceWidth / (float) powerOfTwoSampleSize);
         powerOfTwoHeight = Math.round(sourceHeight / (float) powerOfTwoSampleSize);
@@ -488,7 +488,7 @@ private static int round(double value) {
     return (int) (value + 0.5d);
   }
 
-  private boolean shouldUsePool(ImageType imageType) {
+  private boolean shouldUsePool(ImageHeaderParser.ImageType imageType) {
     // On KitKat+, any bitmap (of a given config) can be used to decode any other bitmap
     // (with the same config).
     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/DrawableToBitmapConverter.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/DrawableToBitmapConverter.java
similarity index 90%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/DrawableToBitmapConverter.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/DrawableToBitmapConverter.java
index 2ed84484d..51c690e98 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/DrawableToBitmapConverter.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/DrawableToBitmapConverter.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
@@ -7,10 +7,10 @@
 import android.graphics.drawable.Drawable;
 import android.support.annotation.Nullable;
 import android.util.Log;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPoolAdapter;
+import com.bumptech.glide4.request.target.Target;
 import java.util.concurrent.locks.Lock;
 
 final class DrawableToBitmapConverter {
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/DrawableTransformation.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/DrawableTransformation.java
similarity index 91%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/DrawableTransformation.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/DrawableTransformation.java
index dee51f7a2..5db25cfef 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/DrawableTransformation.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/DrawableTransformation.java
@@ -1,14 +1,16 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.request.target.Target;
+
 import java.security.MessageDigest;
 
 /**
@@ -23,7 +25,7 @@
  * will fail with an exception. {@link Drawable}s that return <= 0 for
  * {@link Drawable#getIntrinsicHeight()} and/or {@link Drawable#getIntrinsicWidth()} will fail
  * with an exception if the requested size is
- * {@link com.bumptech.glide.request.target.Target#SIZE_ORIGINAL}. {@link Drawable}s without
+ * {@link Target#SIZE_ORIGINAL}. {@link Drawable}s without
  * intrinsic dimensions are drawn using the dimensions provided in
  * {@link Transformation#transform(Context, Resource, int, int)}. As a result, they may be
  * transformed incorrectly or in unexpected ways.
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/ExifInterfaceImageHeaderParser.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/ExifInterfaceImageHeaderParser.java
similarity index 88%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/ExifInterfaceImageHeaderParser.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/ExifInterfaceImageHeaderParser.java
index 92152d778..03f3955b3 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/ExifInterfaceImageHeaderParser.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/ExifInterfaceImageHeaderParser.java
@@ -1,12 +1,13 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.media.ExifInterface;
 import android.os.Build;
 import android.support.annotation.NonNull;
 import android.support.annotation.RequiresApi;
-import com.bumptech.glide.load.ImageHeaderParser;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.util.ByteBufferUtil;
+import com.bumptech.glide4.load.ImageHeaderParser;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.util.ByteBufferUtil;
+
 import java.io.IOException;
 import java.io.InputStream;
 import java.nio.ByteBuffer;
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/FitCenter.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/FitCenter.java
similarity index 82%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/FitCenter.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/FitCenter.java
index 9c2ae89c1..9d8063e2c 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/FitCenter.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/FitCenter.java
@@ -1,8 +1,8 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
 import java.security.MessageDigest;
 
 /**
@@ -11,7 +11,7 @@
  * dimension.
  */
 public class FitCenter extends BitmapTransformation {
-  private static final String ID = "com.bumptech.glide.load.resource.bitmap.FitCenter";
+  private static final String ID = "FitCenter";
   private static final byte[] ID_BYTES = ID.getBytes(CHARSET);
 
   @Override
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/HardwareConfigState.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/HardwareConfigState.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/HardwareConfigState.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/HardwareConfigState.java
index 1991d205f..fc2fb56a0 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/HardwareConfigState.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/HardwareConfigState.java
@@ -1,11 +1,13 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.annotation.TargetApi;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.os.Build;
 import android.util.Log;
-import com.bumptech.glide.load.DecodeFormat;
+import com.bumptech.glide4.load.DecodeFormat;
+import com.bumptech.glide4.load.engine.cache.MemoryCache;
+
 import java.io.File;
 
 /**
@@ -30,7 +32,7 @@
    *
    * <p>{@link Bitmap.Config#HARDWARE} {@link Bitmap}s require two FDs (depending on the driver).
    * Processes have an FD limit of 1024 (at least on O). With sufficiently small {@link Bitmap}s
-   * and/or a sufficiently large {@link com.bumptech.glide.load.engine.cache.MemoryCache}, we can
+   * and/or a sufficiently large {@link MemoryCache}, we can
    * end up with enough {@link Bitmap}s in memory that we blow through the FD limit, which causes
    * graphics errors, Binder errors, and a variety of crashes.
    *
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/LazyBitmapDrawableResource.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/LazyBitmapDrawableResource.java
similarity index 89%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/LazyBitmapDrawableResource.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/LazyBitmapDrawableResource.java
index 92855b5ba..3d9c00152 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/LazyBitmapDrawableResource.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/LazyBitmapDrawableResource.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.content.Context;
 import android.content.res.Resources;
@@ -6,11 +6,11 @@
 import android.graphics.drawable.BitmapDrawable;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.load.engine.Initializable;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.load.engine.Initializable;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.util.Preconditions;
 
 /**
  * Lazily allocates a {@link android.graphics.drawable.BitmapDrawable} from a given
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/RecyclableBufferedInputStream.java
similarity index 99%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/RecyclableBufferedInputStream.java
index 88ecc15a3..62b7afc7d 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/RecyclableBufferedInputStream.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 /*
  *  Licensed to the Apache Software Foundation (ASF) under one or more
@@ -19,7 +19,7 @@
 
 import android.support.annotation.NonNull;
 import android.support.annotation.VisibleForTesting;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
 import java.io.FilterInputStream;
 import java.io.IOException;
 import java.io.InputStream;
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/ResourceBitmapDecoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/ResourceBitmapDecoder.java
similarity index 83%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/ResourceBitmapDecoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/ResourceBitmapDecoder.java
index 3ef5b5b3e..d7a2fc694 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/ResourceBitmapDecoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/ResourceBitmapDecoder.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.content.ContentResolver;
 import android.graphics.Bitmap;
@@ -7,12 +7,12 @@
 import android.net.Uri;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.resource.drawable.ResourceDrawableDecoder;
+import com.bumptech.glide4.request.target.Target;
 
 /**
  * Decodes {@link Bitmap}s from resource ids.
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Rotate.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/Rotate.java
similarity index 85%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/Rotate.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/Rotate.java
index e732f48dc..19167278a 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Rotate.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/Rotate.java
@@ -1,9 +1,9 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.util.Util;
 import java.nio.ByteBuffer;
 import java.security.MessageDigest;
 
@@ -11,7 +11,7 @@
  * A {@link BitmapTransformation} which rotates the bitmap.
  */
 public class Rotate extends BitmapTransformation {
-  private static final String ID = "com.bumptech.glide.load.resource.bitmap.Rotate";
+  private static final String ID = "Rotate";
   private static final byte[] ID_BYTES = ID.getBytes(CHARSET);
 
   private final int degreesToRotate;
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/RoundedCorners.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/RoundedCorners.java
similarity index 80%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/RoundedCorners.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/RoundedCorners.java
index ae5552152..a31ee9b20 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/RoundedCorners.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/RoundedCorners.java
@@ -1,10 +1,12 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Util;
+import com.bumptech.glide4.load.Key;
+
 import java.nio.ByteBuffer;
 import java.security.MessageDigest;
 
@@ -12,8 +14,8 @@
  * A {@link BitmapTransformation} which rounds the corners of a bitmap.
  */
 public final class RoundedCorners extends BitmapTransformation {
-  private static final String ID = "com.bumptech.glide.load.resource.bitmap.RoundedCorners";
-  private static final byte[] ID_BYTES = ID.getBytes(CHARSET);
+  private static final String ID = "RoundedCorners";
+  private static final byte[] ID_BYTES = ID.getBytes(Key.CHARSET);
 
   private final int roundingRadius;
 
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/StreamBitmapDecoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/StreamBitmapDecoder.java
similarity index 90%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/StreamBitmapDecoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/StreamBitmapDecoder.java
index 00cc6f3c1..021613824 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/StreamBitmapDecoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/StreamBitmapDecoder.java
@@ -1,14 +1,15 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.util.ExceptionCatchingInputStream;
-import com.bumptech.glide.util.MarkEnforcingInputStream;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.util.ExceptionCatchingInputStream;
+import com.bumptech.glide4.util.MarkEnforcingInputStream;
+
 import java.io.IOException;
 import java.io.InputStream;
 
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/TransformationUtils.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/TransformationUtils.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/TransformationUtils.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/TransformationUtils.java
index ff04a29ae..8d686d306 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/TransformationUtils.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/TransformationUtils.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.graphics.Bitmap;
 import android.graphics.Bitmap.Config;
@@ -16,10 +16,13 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.VisibleForTesting;
 import android.util.Log;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.load.MultiTransformation;
+import com.bumptech.glide4.request.RequestOptions;
+
 import java.util.Arrays;
 import java.util.HashSet;
 import java.util.Set;
@@ -466,8 +469,8 @@ public static Bitmap roundedCorners(
    *
    * <p>This method does <em>NOT</em> resize the given {@link Bitmap}, it only rounds it's corners.
    * To both resize and round the corners of an image, consider
-   * {@link com.bumptech.glide.request.RequestOptions#transform(Transformation[])} and/or
-   * {@link com.bumptech.glide.load.MultiTransformation}.
+   * {@link RequestOptions#transform(Transformation[])} and/or
+   * {@link MultiTransformation}.
    *
    * @param inBitmap the source bitmap to use as a basis for the created bitmap.
    * @param roundingRadius the corner radius to be applied (in device-specific pixels).
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/UnitBitmapDecoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/UnitBitmapDecoder.java
similarity index 83%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/UnitBitmapDecoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/UnitBitmapDecoder.java
index 63e804bb1..d61c26fa2 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/UnitBitmapDecoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/UnitBitmapDecoder.java
@@ -1,11 +1,11 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.util.Util;
 
 /**
  * Passes through a (hopefully) non-owned {@link Bitmap} as a {@link Bitmap} based {@link Resource}
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/VideoBitmapDecoder.java
similarity index 75%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/VideoBitmapDecoder.java
index 226765e2d..914ba6fc5 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/VideoBitmapDecoder.java
@@ -1,12 +1,13 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.content.Context;
 import android.os.ParcelFileDescriptor;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.ResourceDecoder;
 
 /**
- * An {@link com.bumptech.glide.load.ResourceDecoder} that can decode a thumbnail frame
+ * An {@link ResourceDecoder} that can decode a thumbnail frame
  * {@link android.graphics.Bitmap} from a {@link android.os.ParcelFileDescriptor} containing a
  * video.
  *
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/VideoDecoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/VideoDecoder.java
similarity index 96%
rename from library/src/main/java/com/bumptech/glide/load/resource/bitmap/VideoDecoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bitmap/VideoDecoder.java
index 19f192417..cc5c99fd5 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bitmap/VideoDecoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bitmap/VideoDecoder.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.resource.bitmap;
+package com.bumptech.glide4.load.resource.bitmap;
 
 import android.annotation.TargetApi;
 import android.content.res.AssetFileDescriptor;
@@ -11,12 +11,13 @@
 import android.support.annotation.Nullable;
 import android.support.annotation.VisibleForTesting;
 import android.util.Log;
-import com.bumptech.glide.load.Option;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.load.Option;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.request.target.Target;
+
 import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.security.MessageDigest;
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bytes/ByteBufferRewinder.java b/library/src/main/java/com/bumptech/glide4/load/resource/bytes/ByteBufferRewinder.java
similarity index 82%
rename from library/src/main/java/com/bumptech/glide/load/resource/bytes/ByteBufferRewinder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bytes/ByteBufferRewinder.java
index a154faafb..f05b0ac71 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bytes/ByteBufferRewinder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bytes/ByteBufferRewinder.java
@@ -1,7 +1,8 @@
-package com.bumptech.glide.load.resource.bytes;
+package com.bumptech.glide4.load.resource.bytes;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.data.DataRewinder;
+import com.bumptech.glide4.load.data.DataRewinder;
+
 import java.nio.ByteBuffer;
 
 /**
@@ -29,7 +30,7 @@ public void cleanup() {
   }
 
   /**
-   * Factory for {@link com.bumptech.glide.load.resource.bytes.ByteBufferRewinder}.
+   * Factory for {@link ByteBufferRewinder}.
    */
   public static class Factory implements DataRewinder.Factory<ByteBuffer> {
 
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/bytes/BytesResource.java b/library/src/main/java/com/bumptech/glide4/load/resource/bytes/BytesResource.java
similarity index 65%
rename from library/src/main/java/com/bumptech/glide/load/resource/bytes/BytesResource.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/bytes/BytesResource.java
index 88068855d..d9ba2e035 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/bytes/BytesResource.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/bytes/BytesResource.java
@@ -1,11 +1,14 @@
-package com.bumptech.glide.load.resource.bytes;
+package com.bumptech.glide4.load.resource.bytes;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.load.ResourceEncoder;
+import com.bumptech.glide4.load.resource.transcode.ResourceTranscoder;
+import com.bumptech.glide4.request.SingleRequest;
 
 /**
- * An {@link com.bumptech.glide.load.engine.Resource} wrapping a byte array.
+ * An {@link Resource} wrapping a byte array.
  */
 public class BytesResource implements Resource<byte[]> {
   private final byte[] bytes;
@@ -25,9 +28,9 @@ public BytesResource(byte[] bytes) {
    *
    * @return the same array every time, do not mutate the contents. Not a copy returned, because
    * copying the array can be prohibitively expensive and/or lead to OOMs.
-   * @see com.bumptech.glide.load.ResourceEncoder
-   * @see com.bumptech.glide.load.resource.transcode.ResourceTranscoder
-   * @see com.bumptech.glide.request.SingleRequest#onResourceReady
+   * @see ResourceEncoder
+   * @see ResourceTranscoder
+   * @see SingleRequest#onResourceReady
    */
   @NonNull
   @Override
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/drawable/DrawableDecoderCompat.java b/library/src/main/java/com/bumptech/glide4/load/resource/drawable/DrawableDecoderCompat.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/load/resource/drawable/DrawableDecoderCompat.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/drawable/DrawableDecoderCompat.java
index 68f81bd84..8f20a2596 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/drawable/DrawableDecoderCompat.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/drawable/DrawableDecoderCompat.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.resource.drawable;
+package com.bumptech.glide4.load.resource.drawable;
 
 import android.content.Context;
 import android.content.res.Resources;
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/drawable/DrawableResource.java b/library/src/main/java/com/bumptech/glide4/load/resource/drawable/DrawableResource.java
similarity index 85%
rename from library/src/main/java/com/bumptech/glide/load/resource/drawable/DrawableResource.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/drawable/DrawableResource.java
index 17b74f2cc..47743ef2c 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/drawable/DrawableResource.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/drawable/DrawableResource.java
@@ -1,14 +1,14 @@
-package com.bumptech.glide.load.resource.drawable;
+package com.bumptech.glide4.load.resource.drawable;
 
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.Drawable.ConstantState;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.engine.Initializable;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.resource.gif.GifDrawable;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.engine.Initializable;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.util.Preconditions;
 
 /**
  * Simple wrapper for an Android {@link Drawable} which returns a
@@ -21,7 +21,7 @@
  * @param <T> type of the wrapped {@link Drawable}
  */
 public abstract class DrawableResource<T extends Drawable> implements Resource<T>,
-    Initializable {
+        Initializable {
   protected final T drawable;
 
   public DrawableResource(T drawable) {
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/drawable/DrawableTransitionOptions.java b/library/src/main/java/com/bumptech/glide4/load/resource/drawable/DrawableTransitionOptions.java
similarity index 87%
rename from library/src/main/java/com/bumptech/glide/load/resource/drawable/DrawableTransitionOptions.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/drawable/DrawableTransitionOptions.java
index 8eec67561..1b5d5f05a 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/drawable/DrawableTransitionOptions.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/drawable/DrawableTransitionOptions.java
@@ -1,10 +1,11 @@
-package com.bumptech.glide.load.resource.drawable;
+package com.bumptech.glide4.load.resource.drawable;
 
 import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.TransitionOptions;
-import com.bumptech.glide.request.transition.DrawableCrossFadeFactory;
-import com.bumptech.glide.request.transition.TransitionFactory;
+import com.bumptech.glide4.TransitionOptions;
+import com.bumptech.glide4.request.transition.DrawableCrossFadeFactory;
+import com.bumptech.glide4.request.transition.TransitionFactory;
+import com.bumptech.glide4.GenericTransitionOptions;
 
 /**
  * Contains {@link Drawable} specific animation options.
@@ -12,7 +13,7 @@
 // Public API.
 @SuppressWarnings("WeakerAccess")
 public final class DrawableTransitionOptions extends
-    TransitionOptions<DrawableTransitionOptions, Drawable> {
+        TransitionOptions<DrawableTransitionOptions, Drawable> {
 
   /**
    * Returns a {@link DrawableTransitionOptions} object that enables a cross fade animation.
@@ -59,7 +60,7 @@ public static DrawableTransitionOptions withCrossFade(
   /**
    * Returns a {@link DrawableTransitionOptions} object that uses the given transition factory.
    *
-   * @see com.bumptech.glide.GenericTransitionOptions#with(TransitionFactory)
+   * @see GenericTransitionOptions#with(TransitionFactory)
    */
   @NonNull
   public static DrawableTransitionOptions with(
@@ -82,7 +83,7 @@ public DrawableTransitionOptions crossFade() {
    *
    * @param duration The duration of the animation, see
    *     {@code DrawableCrossFadeFactory.Builder(int)}
-   * @see com.bumptech.glide.request.transition.DrawableCrossFadeFactory.Builder
+   * @see DrawableCrossFadeFactory.Builder
    */
   @NonNull
   public DrawableTransitionOptions crossFade(int duration) {
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/drawable/NonOwnedDrawableResource.java b/library/src/main/java/com/bumptech/glide4/load/resource/drawable/NonOwnedDrawableResource.java
similarity index 92%
rename from library/src/main/java/com/bumptech/glide/load/resource/drawable/NonOwnedDrawableResource.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/drawable/NonOwnedDrawableResource.java
index 2cba88462..ba5b86259 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/drawable/NonOwnedDrawableResource.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/drawable/NonOwnedDrawableResource.java
@@ -1,9 +1,9 @@
-package com.bumptech.glide.load.resource.drawable;
+package com.bumptech.glide4.load.resource.drawable;
 
 import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.engine.Resource;
 
 /**
  * Handles generic {@link Drawable} types where we may be uncertain of their size or type and
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/drawable/ResourceDrawableDecoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/drawable/ResourceDrawableDecoder.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/load/resource/drawable/ResourceDrawableDecoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/drawable/ResourceDrawableDecoder.java
index 0923ffceb..891c159a7 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/drawable/ResourceDrawableDecoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/drawable/ResourceDrawableDecoder.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.resource.drawable;
+package com.bumptech.glide4.load.resource.drawable;
 
 import android.content.ContentResolver;
 import android.content.Context;
@@ -9,9 +9,10 @@
 import android.support.annotation.DrawableRes;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.engine.Resource;
+
 import java.util.List;
 
 /**
@@ -57,7 +58,7 @@ public boolean handles(@NonNull Uri source, @NonNull Options options) {
   @Nullable
   @Override
   public Resource<Drawable> decode(@NonNull Uri source, int width, int height,
-      @NonNull Options options) {
+                                   @NonNull Options options) {
     String packageName = source.getAuthority();
     Context targetContext = findContextForPackage(source, packageName);
     @DrawableRes int resId = findResourceIdFromUri(targetContext, source);
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/drawable/UnitDrawableDecoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/drawable/UnitDrawableDecoder.java
similarity index 76%
rename from library/src/main/java/com/bumptech/glide/load/resource/drawable/UnitDrawableDecoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/drawable/UnitDrawableDecoder.java
index 7ac9450c7..da6311a11 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/drawable/UnitDrawableDecoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/drawable/UnitDrawableDecoder.java
@@ -1,11 +1,11 @@
-package com.bumptech.glide.load.resource.drawable;
+package com.bumptech.glide4.load.resource.drawable;
 
 import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.engine.Resource;
 
 /**
  * Passes through a {@link Drawable} as a {@link Drawable} based {@link Resource}.
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/file/FileDecoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/file/FileDecoder.java
similarity index 55%
rename from library/src/main/java/com/bumptech/glide/load/resource/file/FileDecoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/file/FileDecoder.java
index a5b3e13dd..d5812ad9d 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/file/FileDecoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/file/FileDecoder.java
@@ -1,13 +1,14 @@
-package com.bumptech.glide.load.resource.file;
+package com.bumptech.glide4.load.resource.file;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.engine.Resource;
+
 import java.io.File;
 
 /**
- * A simple {@link com.bumptech.glide.load.ResourceDecoder} that creates resource for a given {@link
+ * A simple {@link ResourceDecoder} that creates resource for a given {@link
  * java.io.File}.
  */
 public class FileDecoder implements ResourceDecoder<File, File> {
@@ -19,7 +20,7 @@ public boolean handles(@NonNull File source, @NonNull Options options) {
 
   @Override
   public Resource<File> decode(@NonNull File source, int width, int height,
-      @NonNull Options options) {
+                               @NonNull Options options) {
     return new FileResource(source);
   }
 }
diff --git a/library/src/main/java/com/bumptech/glide4/load/resource/file/FileResource.java b/library/src/main/java/com/bumptech/glide4/load/resource/file/FileResource.java
new file mode 100644
index 000000000..afbcb3a65
--- /dev/null
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/file/FileResource.java
@@ -0,0 +1,17 @@
+package com.bumptech.glide4.load.resource.file;
+
+import com.bumptech.glide4.load.resource.SimpleResource;
+import com.bumptech.glide4.load.engine.Resource;
+
+import java.io.File;
+
+/**
+ * A simple {@link Resource} that wraps a {@link File}.
+ */
+// Public API.
+@SuppressWarnings("WeakerAccess")
+public class FileResource extends SimpleResource<File> {
+  public FileResource(File file) {
+    super(file);
+  }
+}
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/gif/ByteBufferGifDecoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/gif/ByteBufferGifDecoder.java
similarity index 86%
rename from library/src/main/java/com/bumptech/glide/load/resource/gif/ByteBufferGifDecoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/gif/ByteBufferGifDecoder.java
index dbab1827c..23af12506 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/gif/ByteBufferGifDecoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/gif/ByteBufferGifDecoder.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.resource.gif;
+package com.bumptech.glide4.load.resource.gif;
 
 import android.content.Context;
 import android.graphics.Bitmap;
@@ -6,31 +6,31 @@
 import android.support.annotation.Nullable;
 import android.support.annotation.VisibleForTesting;
 import android.util.Log;
-import com.bumptech.glide.Glide;
+import com.bumptech.glide4.Glide;
 import com.bumptech.glide.gifdecoder.GifDecoder;
 import com.bumptech.glide.gifdecoder.GifHeader;
 import com.bumptech.glide.gifdecoder.GifHeaderParser;
 import com.bumptech.glide.gifdecoder.StandardGifDecoder;
-import com.bumptech.glide.load.DecodeFormat;
-import com.bumptech.glide.load.ImageHeaderParser;
-import com.bumptech.glide.load.ImageHeaderParser.ImageType;
-import com.bumptech.glide.load.ImageHeaderParserUtils;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.resource.UnitTransformation;
-import com.bumptech.glide.util.LogTime;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.load.DecodeFormat;
+import com.bumptech.glide4.load.ImageHeaderParser;
+import com.bumptech.glide4.load.ImageHeaderParserUtils;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.resource.UnitTransformation;
+import com.bumptech.glide4.util.LogTime;
+import com.bumptech.glide4.util.Util;
+
 import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.util.List;
 import java.util.Queue;
 
 /**
- * An {@link com.bumptech.glide.load.ResourceDecoder} that decodes {@link
- * com.bumptech.glide.load.resource.gif.GifDrawable} from {@link java.io.InputStream} data.
+ * An {@link ResourceDecoder} that decodes {@link
+ * GifDrawable} from {@link java.io.InputStream} data.
  */
 public class ByteBufferGifDecoder implements ResourceDecoder<ByteBuffer, GifDrawable> {
   private static final String TAG = "BufferGifDecoder";
@@ -74,7 +74,7 @@ public ByteBufferGifDecoder(
   @Override
   public boolean handles(@NonNull ByteBuffer source, @NonNull Options options) throws IOException {
     return !options.get(GifOptions.DISABLE_ANIMATION)
-        && ImageHeaderParserUtils.getType(parsers, source) == ImageType.GIF;
+        && ImageHeaderParserUtils.getType(parsers, source) == ImageHeaderParser.ImageType.GIF;
   }
 
   @Override
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifBitmapProvider.java b/library/src/main/java/com/bumptech/glide4/load/resource/gif/GifBitmapProvider.java
similarity index 88%
rename from library/src/main/java/com/bumptech/glide/load/resource/gif/GifBitmapProvider.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/gif/GifBitmapProvider.java
index 400530d79..99be5fab5 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifBitmapProvider.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/gif/GifBitmapProvider.java
@@ -1,16 +1,16 @@
-package com.bumptech.glide.load.resource.gif;
+package com.bumptech.glide4.load.resource.gif;
 
 
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import com.bumptech.glide.gifdecoder.GifDecoder;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
 
 /**
  * Implements {@link com.bumptech.glide.gifdecoder.GifDecoder.BitmapProvider} by wrapping Glide's
- * {@link com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool}.
+ * {@link BitmapPool}.
  */
 public final class GifBitmapProvider implements GifDecoder.BitmapProvider {
   private final BitmapPool bitmapPool;
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java b/library/src/main/java/com/bumptech/glide4/load/resource/gif/GifDrawable.java
similarity index 93%
rename from library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/gif/GifDrawable.java
index 8de52d8d1..cd4b2dc0a 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/gif/GifDrawable.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.resource.gif;
+package com.bumptech.glide4.load.resource.gif;
 
 import static com.bumptech.glide.gifdecoder.GifDecoder.TOTAL_ITERATION_COUNT_FOREVER;
 
@@ -16,11 +16,13 @@
 import android.support.annotation.VisibleForTesting;
 import android.support.graphics.drawable.Animatable2Compat;
 import android.view.Gravity;
-import com.bumptech.glide.Glide;
+import com.bumptech.glide4.Glide;
 import com.bumptech.glide.gifdecoder.GifDecoder;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.request.target.Target;
+
 import java.nio.ByteBuffer;
 import java.util.ArrayList;
 import java.util.List;
@@ -89,19 +91,19 @@
    *
    * @param context             A context.
    * @param bitmapPool          Ignored, see deprecation note.
-   * @param frameTransformation An {@link com.bumptech.glide.load.Transformation} that can be
+   * @param frameTransformation An {@link Transformation} that can be
    *                            applied to each frame.
    * @param targetFrameWidth    The desired width of the frames displayed by this drawable (the
    *                            width of the view or
-   *                            {@link com.bumptech.glide.request.target.Target}
+   *                            {@link Target}
    *                            this drawable is being loaded into).
    * @param targetFrameHeight   The desired height of the frames displayed by this drawable (the
    *                            height of the view or
-   *                            {@link com.bumptech.glide.request.target.Target}
+   *                            {@link Target}
    *                            this drawable is being loaded into).
    * @param gifDecoder          The decoder to use to decode GIF data.
    * @param firstFrame          The decoded and transformed first frame of this GIF.
-   * @see #setFrameTransformation(com.bumptech.glide.load.Transformation, android.graphics.Bitmap)
+   * @see #setFrameTransformation(Transformation, android.graphics.Bitmap)
    *
    * @deprecated Use {@link #GifDrawable(Context, GifDecoder, Transformation, int, int, Bitmap)}
    */
@@ -122,19 +124,19 @@ public GifDrawable(
    * Constructor for GifDrawable.
    *
    * @param context             A context.
-   * @param frameTransformation An {@link com.bumptech.glide.load.Transformation} that can be
+   * @param frameTransformation An {@link Transformation} that can be
    *                            applied to each frame.
    * @param targetFrameWidth    The desired width of the frames displayed by this drawable (the
    *                            width of the view or
-   *                            {@link com.bumptech.glide.request.target.Target}
+   *                            {@link Target}
    *                            this drawable is being loaded into).
    * @param targetFrameHeight   The desired height of the frames displayed by this drawable (the
    *                            height of the view or
-   *                            {@link com.bumptech.glide.request.target.Target}
+   *                            {@link Target}
    *                            this drawable is being loaded into).
    * @param gifDecoder          The decoder to use to decode GIF data.
    * @param firstFrame          The decoded and transformed first frame of this GIF.
-   * @see #setFrameTransformation(com.bumptech.glide.load.Transformation, android.graphics.Bitmap)
+   * @see #setFrameTransformation(Transformation, android.graphics.Bitmap)
    */
   public GifDrawable(
       Context context,
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawableEncoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/gif/GifDrawableEncoder.java
similarity index 67%
rename from library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawableEncoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/gif/GifDrawableEncoder.java
index e73f713dc..1f66d46a6 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawableEncoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/gif/GifDrawableEncoder.java
@@ -1,17 +1,18 @@
-package com.bumptech.glide.load.resource.gif;
+package com.bumptech.glide4.load.resource.gif;
 
 import android.support.annotation.NonNull;
 import android.util.Log;
-import com.bumptech.glide.load.EncodeStrategy;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceEncoder;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.util.ByteBufferUtil;
+import com.bumptech.glide4.load.EncodeStrategy;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceEncoder;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.util.ByteBufferUtil;
+
 import java.io.File;
 import java.io.IOException;
 
 /**
- * Writes the original bytes of a {@link com.bumptech.glide.load.resource.gif.GifDrawable} to an
+ * Writes the original bytes of a {@link GifDrawable} to an
  * {@link java.io.OutputStream}.
  */
 public class GifDrawableEncoder implements ResourceEncoder<GifDrawable> {
@@ -25,7 +26,7 @@ public EncodeStrategy getEncodeStrategy(@NonNull Options options) {
 
   @Override
   public boolean encode(@NonNull Resource<GifDrawable> data, @NonNull File file,
-      @NonNull Options options) {
+                        @NonNull Options options) {
     GifDrawable drawable = data.get();
     boolean success = false;
     try {
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawableResource.java b/library/src/main/java/com/bumptech/glide4/load/resource/gif/GifDrawableResource.java
similarity index 72%
rename from library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawableResource.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/gif/GifDrawableResource.java
index 090f279b8..4f8ad7217 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawableResource.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/gif/GifDrawableResource.java
@@ -1,11 +1,11 @@
-package com.bumptech.glide.load.resource.gif;
+package com.bumptech.glide4.load.resource.gif;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.engine.Initializable;
-import com.bumptech.glide.load.resource.drawable.DrawableResource;
+import com.bumptech.glide4.load.engine.Initializable;
+import com.bumptech.glide4.load.resource.drawable.DrawableResource;
 
 /**
- * A resource wrapping an {@link com.bumptech.glide.load.resource.gif.GifDrawable}.
+ * A resource wrapping an {@link GifDrawable}.
  */
 public class GifDrawableResource extends DrawableResource<GifDrawable>
     implements Initializable {
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawableTransformation.java b/library/src/main/java/com/bumptech/glide4/load/resource/gif/GifDrawableTransformation.java
similarity index 81%
rename from library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawableTransformation.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/gif/GifDrawableTransformation.java
index 392661b1b..c531397e5 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawableTransformation.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/gif/GifDrawableTransformation.java
@@ -1,20 +1,21 @@
-package com.bumptech.glide.load.resource.gif;
+package com.bumptech.glide4.load.resource.gif;
 
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.resource.bitmap.BitmapResource;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.resource.bitmap.BitmapResource;
+import com.bumptech.glide4.util.Preconditions;
+
 import java.security.MessageDigest;
 
 /**
- * An {@link com.bumptech.glide.load.Transformation} that wraps a transformation for a
+ * An {@link Transformation} that wraps a transformation for a
  * {@link Bitmap} and can apply it to every frame of any
- * {@link com.bumptech.glide.load.resource.gif.GifDrawable}.
+ * {@link GifDrawable}.
  */
 public class GifDrawableTransformation implements Transformation<GifDrawable> {
   private final Transformation<Bitmap> wrapped;
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifFrameLoader.java b/library/src/main/java/com/bumptech/glide4/load/resource/gif/GifFrameLoader.java
similarity index 89%
rename from library/src/main/java/com/bumptech/glide/load/resource/gif/GifFrameLoader.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/gif/GifFrameLoader.java
index c46775bd2..990d4eb97 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifFrameLoader.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/gif/GifFrameLoader.java
@@ -1,7 +1,4 @@
-package com.bumptech.glide.load.resource.gif;
-
-import static com.bumptech.glide.request.RequestOptions.diskCacheStrategyOf;
-import static com.bumptech.glide.request.RequestOptions.signatureOf;
+package com.bumptech.glide4.load.resource.gif;
 
 import android.graphics.Bitmap;
 import android.os.Handler;
@@ -11,21 +8,22 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.annotation.VisibleForTesting;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.RequestBuilder;
-import com.bumptech.glide.RequestManager;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.RequestBuilder;
+import com.bumptech.glide4.RequestManager;
 import com.bumptech.glide.gifdecoder.GifDecoder;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.request.RequestOptions;
-import com.bumptech.glide.request.target.SimpleTarget;
-import com.bumptech.glide.request.transition.Transition;
-import com.bumptech.glide.signature.ObjectKey;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Synthetic;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.DiskCacheStrategy;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.request.RequestOptions;
+import com.bumptech.glide4.request.target.SimpleTarget;
+import com.bumptech.glide4.request.transition.Transition;
+import com.bumptech.glide4.signature.ObjectKey;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.util.Util;
+
 import java.nio.ByteBuffer;
 import java.util.ArrayList;
 import java.util.List;
@@ -34,7 +32,8 @@
   private final GifDecoder gifDecoder;
   private final Handler handler;
   private final List<FrameCallback> callbacks = new ArrayList<>();
-  @SuppressWarnings("WeakerAccess") @Synthetic final RequestManager requestManager;
+  @SuppressWarnings("WeakerAccess") @Synthetic
+  final RequestManager requestManager;
   private final BitmapPool bitmapPool;
 
   private boolean isRunning;
@@ -223,7 +222,7 @@ private void loadNextFrame() {
 
     gifDecoder.advance();
     next = new DelayTarget(handler, gifDecoder.getCurrentFrameIndex(), targetTime);
-    requestBuilder.apply(signatureOf(getFrameSignature())).load(gifDecoder).into(next);
+    requestBuilder.apply(RequestOptions.signatureOf(getFrameSignature())).load(gifDecoder).into(next);
   }
 
   private void recycleFirstFrame() {
@@ -336,7 +335,7 @@ public void onResourceReady(@NonNull Bitmap resource,
     return requestManager
         .asBitmap()
         .apply(
-            diskCacheStrategyOf(DiskCacheStrategy.NONE)
+            RequestOptions.diskCacheStrategyOf(DiskCacheStrategy.NONE)
                 .useAnimationPool(true)
                 .skipMemoryCache(true)
                 .override(width, height));
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifFrameResourceDecoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/gif/GifFrameResourceDecoder.java
similarity index 67%
rename from library/src/main/java/com/bumptech/glide/load/resource/gif/GifFrameResourceDecoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/gif/GifFrameResourceDecoder.java
index 0fa7e28d5..52f7580b9 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifFrameResourceDecoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/gif/GifFrameResourceDecoder.java
@@ -1,13 +1,13 @@
-package com.bumptech.glide.load.resource.gif;
+package com.bumptech.glide4.load.resource.gif;
 
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
 import com.bumptech.glide.gifdecoder.GifDecoder;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.resource.bitmap.BitmapResource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.resource.bitmap.BitmapResource;
 
 /**
  * Decodes {@link Bitmap}s from {@link GifDecoder}s representing a particular frame of a particular
@@ -27,7 +27,7 @@ public boolean handles(@NonNull GifDecoder source, @NonNull Options options) {
 
   @Override
   public Resource<Bitmap> decode(@NonNull GifDecoder source, int width, int height,
-      @NonNull Options options) {
+                                 @NonNull Options options) {
     Bitmap bitmap = source.getNextFrame();
     return BitmapResource.obtain(bitmap, bitmapPool);
   }
diff --git a/library/src/main/java/com/bumptech/glide4/load/resource/gif/GifOptions.java b/library/src/main/java/com/bumptech/glide4/load/resource/gif/GifOptions.java
new file mode 100644
index 000000000..84f314fbd
--- /dev/null
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/gif/GifOptions.java
@@ -0,0 +1,32 @@
+package com.bumptech.glide4.load.resource.gif;
+
+import com.bumptech.glide4.load.DecodeFormat;
+import com.bumptech.glide4.load.Option;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceDecoder;
+
+/**
+ * Options related to decoding GIFs.
+ */
+public final class GifOptions {
+
+  /**
+   * Indicates the {@link DecodeFormat} that will be used in conjunction
+   * with the particular GIF to determine the {@link android.graphics.Bitmap.Config} to use when
+   * decoding frames of GIFs.
+   */
+  public static final Option<DecodeFormat> DECODE_FORMAT = Option.memory(
+      "GifOptions.DecodeFormat", DecodeFormat.DEFAULT);
+
+  /**
+   * If set to {@code true}, disables the GIF {@link ResourceDecoder}s
+   * ({@link ResourceDecoder#handles(Object, Options)} will return {@code false}). Defaults to
+   * {@code false}.
+   */
+  public static final Option<Boolean> DISABLE_ANIMATION = Option.memory(
+      "GifOptions.DisableAnimation", false);
+
+  private GifOptions() {
+    // Utility class.
+  }
+}
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/gif/StreamGifDecoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/gif/StreamGifDecoder.java
similarity index 77%
rename from library/src/main/java/com/bumptech/glide/load/resource/gif/StreamGifDecoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/gif/StreamGifDecoder.java
index 2cc3b848b..3aa540f8e 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/gif/StreamGifDecoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/gif/StreamGifDecoder.java
@@ -1,14 +1,14 @@
-package com.bumptech.glide.load.resource.gif;
+package com.bumptech.glide4.load.resource.gif;
 
 import android.support.annotation.NonNull;
 import android.util.Log;
-import com.bumptech.glide.load.ImageHeaderParser;
-import com.bumptech.glide.load.ImageHeaderParser.ImageType;
-import com.bumptech.glide.load.ImageHeaderParserUtils;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.ImageHeaderParser;
+import com.bumptech.glide4.load.ImageHeaderParserUtils;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
@@ -16,7 +16,7 @@
 import java.util.List;
 
 /**
- * A relatively inefficient decoder for {@link com.bumptech.glide.load.resource.gif.GifDrawable}
+ * A relatively inefficient decoder for {@link GifDrawable}
  * that converts {@link java.io.InputStream}s to {@link java.nio.ByteBuffer}s and then passes
  * the buffer to a wrapped decoder.
  */
@@ -37,12 +37,12 @@ public StreamGifDecoder(List<ImageHeaderParser> parsers, ResourceDecoder<ByteBuf
   @Override
   public boolean handles(@NonNull InputStream source, @NonNull Options options) throws IOException {
     return !options.get(GifOptions.DISABLE_ANIMATION)
-        && ImageHeaderParserUtils.getType(parsers, source, byteArrayPool) == ImageType.GIF;
+        && ImageHeaderParserUtils.getType(parsers, source, byteArrayPool) == ImageHeaderParser.ImageType.GIF;
   }
 
   @Override
   public Resource<GifDrawable> decode(@NonNull InputStream source, int width, int height,
-      @NonNull Options options) throws IOException {
+                                      @NonNull Options options) throws IOException {
     byte[] data = inputStreamToBytes(source);
     if (data == null) {
       return null;
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapBytesTranscoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/transcode/BitmapBytesTranscoder.java
similarity index 79%
rename from library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapBytesTranscoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/transcode/BitmapBytesTranscoder.java
index 9274b56ff..dc90ce772 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapBytesTranscoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/transcode/BitmapBytesTranscoder.java
@@ -1,15 +1,15 @@
-package com.bumptech.glide.load.resource.transcode;
+package com.bumptech.glide4.load.resource.transcode;
 
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.resource.bytes.BytesResource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.resource.bytes.BytesResource;
 import java.io.ByteArrayOutputStream;
 
 /**
- * An {@link com.bumptech.glide.load.resource.transcode.ResourceTranscoder} that converts {@link
+ * An {@link ResourceTranscoder} that converts {@link
  * android.graphics.Bitmap}s into byte arrays using {@link android.graphics.Bitmap#compress
  * (android.graphics.Bitmap.CompressFormat,
  * int, java.io.OutputStream)}.
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapDrawableTranscoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/transcode/BitmapDrawableTranscoder.java
similarity index 74%
rename from library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapDrawableTranscoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/transcode/BitmapDrawableTranscoder.java
index b9dc68bb5..a6c41aa03 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapDrawableTranscoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/transcode/BitmapDrawableTranscoder.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.resource.transcode;
+package com.bumptech.glide4.load.resource.transcode;
 
 import android.content.Context;
 import android.content.res.Resources;
@@ -6,14 +6,14 @@
 import android.graphics.drawable.BitmapDrawable;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.resource.bitmap.LazyBitmapDrawableResource;
+import com.bumptech.glide4.util.Preconditions;
 
 /**
- * An {@link com.bumptech.glide.load.resource.transcode.ResourceTranscoder} that converts {@link
+ * An {@link ResourceTranscoder} that converts {@link
  * android.graphics.Bitmap}s into {@link android.graphics.drawable.BitmapDrawable}s.
  */
 public class BitmapDrawableTranscoder implements ResourceTranscoder<Bitmap, BitmapDrawable> {
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/transcode/DrawableBytesTranscoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/transcode/DrawableBytesTranscoder.java
similarity index 84%
rename from library/src/main/java/com/bumptech/glide/load/resource/transcode/DrawableBytesTranscoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/transcode/DrawableBytesTranscoder.java
index a37e16ff6..89b526972 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/transcode/DrawableBytesTranscoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/transcode/DrawableBytesTranscoder.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.load.resource.transcode;
+package com.bumptech.glide4.load.resource.transcode;
 
 
 import android.graphics.Bitmap;
@@ -6,11 +6,11 @@
 import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.resource.bitmap.BitmapResource;
-import com.bumptech.glide.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.resource.bitmap.BitmapResource;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
 
 /**
  * Obtains {@code byte[]} from {@link BitmapDrawable}s by delegating to a
diff --git a/library/src/main/java/com/bumptech/glide4/load/resource/transcode/GifDrawableBytesTranscoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/transcode/GifDrawableBytesTranscoder.java
new file mode 100644
index 000000000..0e2ee4acf
--- /dev/null
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/transcode/GifDrawableBytesTranscoder.java
@@ -0,0 +1,27 @@
+package com.bumptech.glide4.load.resource.transcode;
+
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.resource.bytes.BytesResource;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.util.ByteBufferUtil;
+
+import java.nio.ByteBuffer;
+
+/**
+ * An {@link ResourceTranscoder} that converts {@link
+ * GifDrawable} into bytes by obtaining the original bytes of
+ * the GIF from the {@link GifDrawable}.
+ */
+public class GifDrawableBytesTranscoder implements ResourceTranscoder<GifDrawable, byte[]> {
+  @Nullable
+  @Override
+  public Resource<byte[]> transcode(@NonNull Resource<GifDrawable> toTranscode,
+                                    @NonNull Options options) {
+    GifDrawable gifData = toTranscode.get();
+    ByteBuffer byteBuffer = gifData.getBuffer();
+    return new BytesResource(ByteBufferUtil.toBytes(byteBuffer));
+  }
+}
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/transcode/ResourceTranscoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/transcode/ResourceTranscoder.java
similarity index 80%
rename from library/src/main/java/com/bumptech/glide/load/resource/transcode/ResourceTranscoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/transcode/ResourceTranscoder.java
index fbd4631bd..a8ffe7879 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/transcode/ResourceTranscoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/transcode/ResourceTranscoder.java
@@ -1,9 +1,9 @@
-package com.bumptech.glide.load.resource.transcode;
+package com.bumptech.glide4.load.resource.transcode;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.Resource;
 
 /**
  * Transcodes a resource of one type to a resource of another type.
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/transcode/TranscoderRegistry.java b/library/src/main/java/com/bumptech/glide4/load/resource/transcode/TranscoderRegistry.java
similarity index 91%
rename from library/src/main/java/com/bumptech/glide/load/resource/transcode/TranscoderRegistry.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/transcode/TranscoderRegistry.java
index 9c907b65f..44cca479f 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/transcode/TranscoderRegistry.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/transcode/TranscoderRegistry.java
@@ -1,19 +1,19 @@
-package com.bumptech.glide.load.resource.transcode;
+package com.bumptech.glide4.load.resource.transcode;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.util.Synthetic;
 import java.util.ArrayList;
 import java.util.List;
 
 /**
- * A class that allows {@link com.bumptech.glide.load.resource.transcode.ResourceTranscoder}s to be
+ * A class that allows {@link ResourceTranscoder}s to be
  * registered and retrieved by the classes they convert between.
  */
 public class TranscoderRegistry {
   private final List<Entry<?, ?>> transcoders = new ArrayList<>();
 
   /**
-   * Registers the given {@link com.bumptech.glide.load.resource.transcode.ResourceTranscoder} using
+   * Registers the given {@link ResourceTranscoder} using
    * the given classes so it can later be retrieved using the given classes.
    *
    * @param decodedClass    The class of the resource that the transcoder transcodes from.
@@ -30,7 +30,7 @@
 
   /**
    * Returns the currently registered
-   * {@link com.bumptech.glide.load.resource.transcode.ResourceTranscoder} for the given classes.
+   * {@link ResourceTranscoder} for the given classes.
    *
    * @param resourceClass   The class of the resource that the transcoder transcodes from.
    * @param transcodedClass The class of the resource that the transcoder transcodes to.
diff --git a/library/src/main/java/com/bumptech/glide/load/resource/transcode/UnitTranscoder.java b/library/src/main/java/com/bumptech/glide4/load/resource/transcode/UnitTranscoder.java
similarity index 83%
rename from library/src/main/java/com/bumptech/glide/load/resource/transcode/UnitTranscoder.java
rename to library/src/main/java/com/bumptech/glide4/load/resource/transcode/UnitTranscoder.java
index 45efdf5a1..09c834dbd 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/transcode/UnitTranscoder.java
+++ b/library/src/main/java/com/bumptech/glide4/load/resource/transcode/UnitTranscoder.java
@@ -1,9 +1,9 @@
-package com.bumptech.glide.load.resource.transcode;
+package com.bumptech.glide4.load.resource.transcode;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.Resource;
 
 /**
  * A simple {@link ResourceTranscoder} that simply returns the given resource.
diff --git a/library/src/main/java/com/bumptech/glide/manager/ActivityFragmentLifecycle.java b/library/src/main/java/com/bumptech/glide4/manager/ActivityFragmentLifecycle.java
similarity index 87%
rename from library/src/main/java/com/bumptech/glide/manager/ActivityFragmentLifecycle.java
rename to library/src/main/java/com/bumptech/glide4/manager/ActivityFragmentLifecycle.java
index 8bb528050..0ef02f8d0 100644
--- a/library/src/main/java/com/bumptech/glide/manager/ActivityFragmentLifecycle.java
+++ b/library/src/main/java/com/bumptech/glide4/manager/ActivityFragmentLifecycle.java
@@ -1,13 +1,13 @@
-package com.bumptech.glide.manager;
+package com.bumptech.glide4.manager;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.util.Util;
 import java.util.Collections;
 import java.util.Set;
 import java.util.WeakHashMap;
 
 /**
- * A {@link com.bumptech.glide.manager.Lifecycle} implementation for tracking and notifying
+ * A {@link Lifecycle} implementation for tracking and notifying
  * listeners of {@link android.app.Fragment} and {@link android.app.Activity} lifecycle events.
  */
 class ActivityFragmentLifecycle implements Lifecycle {
@@ -23,7 +23,7 @@
    * method. If the activity or fragment is stopped, {@link LifecycleListener#onStop()}} will be
    * called, and same for onStart and onDestroy. </p>
    *
-   * <p> Note - {@link com.bumptech.glide.manager.LifecycleListener}s that are added more than once
+   * <p> Note - {@link LifecycleListener}s that are added more than once
    * will have their lifecycle methods called more than once. It is the caller's responsibility to
    * avoid adding listeners multiple times. </p>
    */
diff --git a/library/src/main/java/com/bumptech/glide/manager/ApplicationLifecycle.java b/library/src/main/java/com/bumptech/glide4/manager/ApplicationLifecycle.java
similarity index 81%
rename from library/src/main/java/com/bumptech/glide/manager/ApplicationLifecycle.java
rename to library/src/main/java/com/bumptech/glide4/manager/ApplicationLifecycle.java
index 7bf69da7e..2d05a4b46 100644
--- a/library/src/main/java/com/bumptech/glide/manager/ApplicationLifecycle.java
+++ b/library/src/main/java/com/bumptech/glide4/manager/ApplicationLifecycle.java
@@ -1,9 +1,9 @@
-package com.bumptech.glide.manager;
+package com.bumptech.glide4.manager;
 
 import android.support.annotation.NonNull;
 
 /**
- * A {@link com.bumptech.glide.manager.Lifecycle} implementation for tracking and notifying
+ * A {@link Lifecycle} implementation for tracking and notifying
  * listeners of {@link android.app.Application} lifecycle events.
  *
  * <p> Since there are essentially no {@link android.app.Application} lifecycle events, this class
diff --git a/library/src/main/java/com/bumptech/glide/manager/ConnectivityMonitor.java b/library/src/main/java/com/bumptech/glide4/manager/ConnectivityMonitor.java
similarity index 93%
rename from library/src/main/java/com/bumptech/glide/manager/ConnectivityMonitor.java
rename to library/src/main/java/com/bumptech/glide4/manager/ConnectivityMonitor.java
index dc216c871..046ffbd2a 100644
--- a/library/src/main/java/com/bumptech/glide/manager/ConnectivityMonitor.java
+++ b/library/src/main/java/com/bumptech/glide4/manager/ConnectivityMonitor.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.manager;
+package com.bumptech.glide4.manager;
 
 /**
  * An interface for monitoring network connectivity events.
diff --git a/library/src/main/java/com/bumptech/glide/manager/ConnectivityMonitorFactory.java b/library/src/main/java/com/bumptech/glide4/manager/ConnectivityMonitorFactory.java
similarity index 77%
rename from library/src/main/java/com/bumptech/glide/manager/ConnectivityMonitorFactory.java
rename to library/src/main/java/com/bumptech/glide4/manager/ConnectivityMonitorFactory.java
index b226cd425..0aae38456 100644
--- a/library/src/main/java/com/bumptech/glide/manager/ConnectivityMonitorFactory.java
+++ b/library/src/main/java/com/bumptech/glide4/manager/ConnectivityMonitorFactory.java
@@ -1,11 +1,11 @@
-package com.bumptech.glide.manager;
+package com.bumptech.glide4.manager;
 
 import android.content.Context;
 import android.support.annotation.NonNull;
 
 /**
  * A factory class that produces a functional
- * {@link com.bumptech.glide.manager.ConnectivityMonitor}.
+ * {@link ConnectivityMonitor}.
  */
 public interface ConnectivityMonitorFactory {
 
diff --git a/library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitor.java b/library/src/main/java/com/bumptech/glide4/manager/DefaultConnectivityMonitor.java
similarity index 96%
rename from library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitor.java
rename to library/src/main/java/com/bumptech/glide4/manager/DefaultConnectivityMonitor.java
index bea4b3673..686cdfbbc 100644
--- a/library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitor.java
+++ b/library/src/main/java/com/bumptech/glide4/manager/DefaultConnectivityMonitor.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.manager;
+package com.bumptech.glide4.manager;
 
 import android.annotation.SuppressLint;
 import android.content.BroadcastReceiver;
@@ -9,8 +9,8 @@
 import android.net.NetworkInfo;
 import android.support.annotation.NonNull;
 import android.util.Log;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Synthetic;
 
 /**
  * Uses {@link android.net.ConnectivityManager} to identify connectivity changes.
diff --git a/library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitorFactory.java b/library/src/main/java/com/bumptech/glide4/manager/DefaultConnectivityMonitorFactory.java
similarity index 84%
rename from library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitorFactory.java
rename to library/src/main/java/com/bumptech/glide4/manager/DefaultConnectivityMonitorFactory.java
index 6858eb370..d9dce9ddd 100644
--- a/library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitorFactory.java
+++ b/library/src/main/java/com/bumptech/glide4/manager/DefaultConnectivityMonitorFactory.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.manager;
+package com.bumptech.glide4.manager;
 
 import android.content.Context;
 import android.content.pm.PackageManager;
@@ -7,9 +7,9 @@
 import android.util.Log;
 
 /**
- * A factory class that produces a functional {@link com.bumptech.glide.manager.ConnectivityMonitor}
+ * A factory class that produces a functional {@link ConnectivityMonitor}
  * if the application has the {@code android.permission.ACCESS_NETWORK_STATE} permission and a no-op
- * non functional {@link com.bumptech.glide.manager.ConnectivityMonitor} if the app does not have
+ * non functional {@link ConnectivityMonitor} if the app does not have
  * the required permission.
  */
 public class DefaultConnectivityMonitorFactory implements ConnectivityMonitorFactory {
diff --git a/library/src/main/java/com/bumptech/glide/manager/EmptyRequestManagerTreeNode.java b/library/src/main/java/com/bumptech/glide4/manager/EmptyRequestManagerTreeNode.java
similarity index 81%
rename from library/src/main/java/com/bumptech/glide/manager/EmptyRequestManagerTreeNode.java
rename to library/src/main/java/com/bumptech/glide4/manager/EmptyRequestManagerTreeNode.java
index 7297680cd..e83f1dc14 100644
--- a/library/src/main/java/com/bumptech/glide/manager/EmptyRequestManagerTreeNode.java
+++ b/library/src/main/java/com/bumptech/glide4/manager/EmptyRequestManagerTreeNode.java
@@ -1,7 +1,8 @@
-package com.bumptech.glide.manager;
+package com.bumptech.glide4.manager;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.RequestManager;
+import com.bumptech.glide4.RequestManager;
+
 import java.util.Collections;
 import java.util.Set;
 
diff --git a/library/src/main/java/com/bumptech/glide/manager/Lifecycle.java b/library/src/main/java/com/bumptech/glide4/manager/Lifecycle.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/manager/Lifecycle.java
rename to library/src/main/java/com/bumptech/glide4/manager/Lifecycle.java
index 434b5dcab..ab3374677 100644
--- a/library/src/main/java/com/bumptech/glide/manager/Lifecycle.java
+++ b/library/src/main/java/com/bumptech/glide4/manager/Lifecycle.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.manager;
+package com.bumptech.glide4.manager;
 
 import android.support.annotation.NonNull;
 
diff --git a/library/src/main/java/com/bumptech/glide/manager/LifecycleListener.java b/library/src/main/java/com/bumptech/glide4/manager/LifecycleListener.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/manager/LifecycleListener.java
rename to library/src/main/java/com/bumptech/glide4/manager/LifecycleListener.java
index 0a546f418..98450566b 100644
--- a/library/src/main/java/com/bumptech/glide/manager/LifecycleListener.java
+++ b/library/src/main/java/com/bumptech/glide4/manager/LifecycleListener.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.manager;
+package com.bumptech.glide4.manager;
 
 /**
  * An interface for listener to {@link android.app.Fragment} and {@link android.app.Activity}
diff --git a/library/src/main/java/com/bumptech/glide/manager/NullConnectivityMonitor.java b/library/src/main/java/com/bumptech/glide4/manager/NullConnectivityMonitor.java
similarity index 71%
rename from library/src/main/java/com/bumptech/glide/manager/NullConnectivityMonitor.java
rename to library/src/main/java/com/bumptech/glide4/manager/NullConnectivityMonitor.java
index b182cb0ab..9a55fefae 100644
--- a/library/src/main/java/com/bumptech/glide/manager/NullConnectivityMonitor.java
+++ b/library/src/main/java/com/bumptech/glide4/manager/NullConnectivityMonitor.java
@@ -1,7 +1,7 @@
-package com.bumptech.glide.manager;
+package com.bumptech.glide4.manager;
 
 /**
- * A no-op {@link com.bumptech.glide.manager.ConnectivityMonitor}.
+ * A no-op {@link ConnectivityMonitor}.
  */
 class NullConnectivityMonitor implements ConnectivityMonitor {
 
diff --git a/library/src/main/java/com/bumptech/glide/manager/RequestManagerFragment.java b/library/src/main/java/com/bumptech/glide4/manager/RequestManagerFragment.java
similarity index 92%
rename from library/src/main/java/com/bumptech/glide/manager/RequestManagerFragment.java
rename to library/src/main/java/com/bumptech/glide4/manager/RequestManagerFragment.java
index 14215377a..c257e041a 100644
--- a/library/src/main/java/com/bumptech/glide/manager/RequestManagerFragment.java
+++ b/library/src/main/java/com/bumptech/glide4/manager/RequestManagerFragment.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.manager;
+package com.bumptech.glide4.manager;
 
 import android.annotation.SuppressLint;
 import android.annotation.TargetApi;
@@ -9,21 +9,22 @@
 import android.support.annotation.Nullable;
 import android.support.annotation.VisibleForTesting;
 import android.util.Log;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.RequestManager;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.RequestManager;
+import com.bumptech.glide4.util.Synthetic;
+
 import java.util.Collections;
 import java.util.HashSet;
 import java.util.Set;
 
 /**
  * A view-less {@link android.app.Fragment} used to safely store an {@link
- * com.bumptech.glide.RequestManager} that can be used to start, stop and manage Glide requests
+ * RequestManager} that can be used to start, stop and manage Glide requests
  * started for targets the fragment or activity this fragment is a child of.
  *
- * @see com.bumptech.glide.manager.SupportRequestManagerFragment
- * @see com.bumptech.glide.manager.RequestManagerRetriever
- * @see com.bumptech.glide.RequestManager
+ * @see SupportRequestManagerFragment
+ * @see RequestManagerRetriever
+ * @see RequestManager
  */
 @SuppressWarnings("DeprecatedIsStillUsed")
 @Deprecated
@@ -52,7 +53,7 @@ public RequestManagerFragment() {
   }
 
   /**
-   * Sets the current {@link com.bumptech.glide.RequestManager}.
+   * Sets the current {@link RequestManager}.
    *
    * @param requestManager The request manager to use.
    */
@@ -66,7 +67,7 @@ ActivityFragmentLifecycle getGlideLifecycle() {
   }
 
   /**
-   * Returns the current {@link com.bumptech.glide.RequestManager} or null if none exists.
+   * Returns the current {@link RequestManager} or null if none exists.
    */
   @Nullable
   public RequestManager getRequestManager() {
diff --git a/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java b/library/src/main/java/com/bumptech/glide4/manager/RequestManagerRetriever.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java
rename to library/src/main/java/com/bumptech/glide4/manager/RequestManagerRetriever.java
index a8260fa81..c6a49e4f6 100644
--- a/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java
+++ b/library/src/main/java/com/bumptech/glide4/manager/RequestManagerRetriever.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.manager;
+package com.bumptech.glide4.manager;
 
 import android.annotation.TargetApi;
 import android.app.Activity;
@@ -21,16 +21,17 @@
 import android.support.v4.util.ArrayMap;
 import android.util.Log;
 import android.view.View;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.RequestManager;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.RequestManager;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Util;
+
 import java.util.Collection;
 import java.util.HashMap;
 import java.util.Map;
 
 /**
- * A collection of static methods for creating new {@link com.bumptech.glide.RequestManager}s or
+ * A collection of static methods for creating new {@link RequestManager}s or
  * retrieving existing ones from activities and fragment.
  */
 public class RequestManagerRetriever implements Handler.Callback {
diff --git a/library/src/main/java/com/bumptech/glide/manager/RequestManagerTreeNode.java b/library/src/main/java/com/bumptech/glide4/manager/RequestManagerTreeNode.java
similarity index 87%
rename from library/src/main/java/com/bumptech/glide/manager/RequestManagerTreeNode.java
rename to library/src/main/java/com/bumptech/glide4/manager/RequestManagerTreeNode.java
index 20666d093..eddcf1142 100644
--- a/library/src/main/java/com/bumptech/glide/manager/RequestManagerTreeNode.java
+++ b/library/src/main/java/com/bumptech/glide4/manager/RequestManagerTreeNode.java
@@ -1,7 +1,8 @@
-package com.bumptech.glide.manager;
+package com.bumptech.glide4.manager;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.RequestManager;
+import com.bumptech.glide4.RequestManager;
+
 import java.util.Set;
 
 /**
diff --git a/library/src/main/java/com/bumptech/glide/manager/RequestTracker.java b/library/src/main/java/com/bumptech/glide4/manager/RequestTracker.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/manager/RequestTracker.java
rename to library/src/main/java/com/bumptech/glide4/manager/RequestTracker.java
index 97567671b..66b2d066d 100644
--- a/library/src/main/java/com/bumptech/glide/manager/RequestTracker.java
+++ b/library/src/main/java/com/bumptech/glide4/manager/RequestTracker.java
@@ -1,11 +1,12 @@
-package com.bumptech.glide.manager;
+package com.bumptech.glide4.manager;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.annotation.VisibleForTesting;
 import android.util.Log;
-import com.bumptech.glide.request.Request;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.util.Util;
+
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
diff --git a/library/src/main/java/com/bumptech/glide/manager/SupportRequestManagerFragment.java b/library/src/main/java/com/bumptech/glide4/manager/SupportRequestManagerFragment.java
similarity index 92%
rename from library/src/main/java/com/bumptech/glide/manager/SupportRequestManagerFragment.java
rename to library/src/main/java/com/bumptech/glide4/manager/SupportRequestManagerFragment.java
index 7c764cbbc..6fdeaa3a3 100644
--- a/library/src/main/java/com/bumptech/glide/manager/SupportRequestManagerFragment.java
+++ b/library/src/main/java/com/bumptech/glide4/manager/SupportRequestManagerFragment.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.manager;
+package com.bumptech.glide4.manager;
 
 import android.annotation.SuppressLint;
 import android.content.Context;
@@ -8,21 +8,22 @@
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentActivity;
 import android.util.Log;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.RequestManager;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.RequestManager;
+import com.bumptech.glide4.util.Synthetic;
+
 import java.util.Collections;
 import java.util.HashSet;
 import java.util.Set;
 
 /**
  * A view-less {@link android.support.v4.app.Fragment} used to safely store an {@link
- * com.bumptech.glide.RequestManager} that can be used to start, stop and manage Glide requests
+ * RequestManager} that can be used to start, stop and manage Glide requests
  * started for targets within the fragment or activity this fragment is a child of.
  *
- * @see com.bumptech.glide.manager.RequestManagerFragment
- * @see com.bumptech.glide.manager.RequestManagerRetriever
- * @see com.bumptech.glide.RequestManager
+ * @see RequestManagerFragment
+ * @see RequestManagerRetriever
+ * @see RequestManager
  */
 public class SupportRequestManagerFragment extends Fragment {
   private static final String TAG = "SupportRMFragment";
@@ -46,7 +47,7 @@ public SupportRequestManagerFragment(@NonNull ActivityFragmentLifecycle lifecycl
   }
 
   /**
-   * Sets the current {@link com.bumptech.glide.RequestManager}.
+   * Sets the current {@link RequestManager}.
    *
    * @param requestManager The manager to put.
    */
@@ -60,7 +61,7 @@ ActivityFragmentLifecycle getGlideLifecycle() {
   }
 
   /**
-   * Returns the current {@link com.bumptech.glide.RequestManager} or null if none is put.
+   * Returns the current {@link RequestManager} or null if none is put.
    */
   @Nullable
   public RequestManager getRequestManager() {
diff --git a/library/src/main/java/com/bumptech/glide/manager/TargetTracker.java b/library/src/main/java/com/bumptech/glide4/manager/TargetTracker.java
similarity index 82%
rename from library/src/main/java/com/bumptech/glide/manager/TargetTracker.java
rename to library/src/main/java/com/bumptech/glide4/manager/TargetTracker.java
index 45ad1252a..31fb93091 100644
--- a/library/src/main/java/com/bumptech/glide/manager/TargetTracker.java
+++ b/library/src/main/java/com/bumptech/glide4/manager/TargetTracker.java
@@ -1,8 +1,10 @@
-package com.bumptech.glide.manager;
+package com.bumptech.glide4.manager;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.request.target.Target;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.request.target.Target;
+import com.bumptech.glide4.util.Util;
+import com.bumptech.glide4.RequestManager;
+
 import java.util.Collections;
 import java.util.List;
 import java.util.Set;
@@ -10,7 +12,7 @@
 
 /**
  * Holds the set of {@link Target}s currently active for a
- * {@link com.bumptech.glide.RequestManager} and forwards on lifecycle events.
+ * {@link RequestManager} and forwards on lifecycle events.
  */
 public final class TargetTracker implements LifecycleListener {
   private final Set<Target<?>> targets =
diff --git a/library/src/main/java/com/bumptech/glide/module/AppGlideModule.java b/library/src/main/java/com/bumptech/glide4/module/AppGlideModule.java
similarity index 85%
rename from library/src/main/java/com/bumptech/glide/module/AppGlideModule.java
rename to library/src/main/java/com/bumptech/glide4/module/AppGlideModule.java
index 77f124670..85e7f4526 100644
--- a/library/src/main/java/com/bumptech/glide/module/AppGlideModule.java
+++ b/library/src/main/java/com/bumptech/glide4/module/AppGlideModule.java
@@ -1,8 +1,9 @@
-package com.bumptech.glide.module;
+package com.bumptech.glide4.module;
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.GlideBuilder;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.annotation.Excludes;
 
 /**
  * Defines a set of dependencies and options to use when initializing Glide within an application.
@@ -11,10 +12,10 @@
  * can include a {@link AppGlideModule}. Libraries must use {@link LibraryGlideModule}.
  *
  * <p>Classes that extend {@link AppGlideModule} must be annotated with
- * {@link com.bumptech.glide.annotation.GlideModule} to be processed correctly.
+ * {@link com.bumptech.glide4.annotation.GlideModule} to be processed correctly.
  *
  * <p>Classes that extend {@link AppGlideModule} can optionally be annotated with
- * {@link com.bumptech.glide.annotation.Excludes} to optionally exclude one or more
+ * {@link Excludes} to optionally exclude one or more
  * {@link LibraryGlideModule} and/or {@link GlideModule} classes.
  *
  * <p>Once an application has migrated itself and all libraries it depends on to use Glide's
diff --git a/library/src/main/java/com/bumptech/glide/module/AppliesOptions.java b/library/src/main/java/com/bumptech/glide4/module/AppliesOptions.java
similarity index 63%
rename from library/src/main/java/com/bumptech/glide/module/AppliesOptions.java
rename to library/src/main/java/com/bumptech/glide4/module/AppliesOptions.java
index c92e0da64..cd71b8028 100644
--- a/library/src/main/java/com/bumptech/glide/module/AppliesOptions.java
+++ b/library/src/main/java/com/bumptech/glide4/module/AppliesOptions.java
@@ -1,8 +1,8 @@
-package com.bumptech.glide.module;
+package com.bumptech.glide4.module;
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.GlideBuilder;
+import com.bumptech.glide4.GlideBuilder;
 
 /**
  * An internal interface, to be removed when {@link GlideModule}s are removed.
@@ -10,13 +10,13 @@
 @Deprecated
 interface AppliesOptions {
   /**
-   * Lazily apply options to a {@link com.bumptech.glide.GlideBuilder} immediately before the Glide
+   * Lazily apply options to a {@link GlideBuilder} immediately before the Glide
    * singleton is created.
    *
    * <p> This method will be called once and only once per implementation. </p>
    *
    * @param context An Application {@link android.content.Context}.
-   * @param builder The {@link com.bumptech.glide.GlideBuilder} that will be used to create Glide.
+   * @param builder The {@link GlideBuilder} that will be used to create Glide.
    */
   void applyOptions(@NonNull Context context, @NonNull GlideBuilder builder);
 }
diff --git a/library/src/main/java/com/bumptech/glide/module/GlideModule.java b/library/src/main/java/com/bumptech/glide4/module/GlideModule.java
similarity index 85%
rename from library/src/main/java/com/bumptech/glide/module/GlideModule.java
rename to library/src/main/java/com/bumptech/glide4/module/GlideModule.java
index b8e2108e6..486ed03af 100644
--- a/library/src/main/java/com/bumptech/glide/module/GlideModule.java
+++ b/library/src/main/java/com/bumptech/glide4/module/GlideModule.java
@@ -1,16 +1,19 @@
-package com.bumptech.glide.module;
+package com.bumptech.glide4.module;
 
-import com.bumptech.glide.Registry;
+import com.bumptech.glide4.Registry;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.model.ModelLoader;
 
 /**
  * An interface allowing lazy configuration of Glide including setting options using
- * {@link com.bumptech.glide.GlideBuilder} and registering
- * {@link com.bumptech.glide.load.model.ModelLoader ModelLoaders}.
+ * {@link GlideBuilder} and registering
+ * {@link ModelLoader ModelLoaders}.
  *
  * <p> To use this interface: <ol> <li> Implement the GlideModule interface in a class with public
  * visibility, calling
- * {@link Registry#prepend(Class, Class, com.bumptech.glide.load.ResourceDecoder)} for each
- * {@link com.bumptech.glide.load.model.ModelLoader} you'd like to register:
+ * {@link Registry#prepend(Class, Class, ResourceDecoder)} for each
+ * {@link ModelLoader} you'd like to register:
  * <pre>
  *                  <code>
  *                      public class FlickrGlideModule implements GlideModule {
diff --git a/library/src/main/java/com/bumptech/glide/module/LibraryGlideModule.java b/library/src/main/java/com/bumptech/glide4/module/LibraryGlideModule.java
similarity index 77%
rename from library/src/main/java/com/bumptech/glide/module/LibraryGlideModule.java
rename to library/src/main/java/com/bumptech/glide4/module/LibraryGlideModule.java
index 612dc8c13..86a032ea5 100644
--- a/library/src/main/java/com/bumptech/glide/module/LibraryGlideModule.java
+++ b/library/src/main/java/com/bumptech/glide4/module/LibraryGlideModule.java
@@ -1,9 +1,10 @@
-package com.bumptech.glide.module;
+package com.bumptech.glide4.module;
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.Registry;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.Registry;
+import com.bumptech.glide4.annotation.Excludes;
 
 /**
  * Registers a set of components to use when initializing Glide within an app when
@@ -13,7 +14,7 @@
  *
  * <p>LibraryGlideModules are called in no defined order. If LibraryGlideModules within an
  * application conflict, {@link AppGlideModule}s can use the
- * {@link com.bumptech.glide.annotation.Excludes} annotation to selectively remove one or more of
+ * {@link Excludes} annotation to selectively remove one or more of
  * the conflicting modules.
  */
 @SuppressWarnings("deprecation")
diff --git a/library/src/main/java/com/bumptech/glide/module/ManifestParser.java b/library/src/main/java/com/bumptech/glide4/module/ManifestParser.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/module/ManifestParser.java
rename to library/src/main/java/com/bumptech/glide4/module/ManifestParser.java
index 6304f179a..537f86368 100644
--- a/library/src/main/java/com/bumptech/glide/module/ManifestParser.java
+++ b/library/src/main/java/com/bumptech/glide4/module/ManifestParser.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.module;
+package com.bumptech.glide4.module;
 
 import android.content.Context;
 import android.content.pm.ApplicationInfo;
@@ -9,7 +9,7 @@
 import java.util.List;
 
 /**
- * Parses {@link com.bumptech.glide.module.GlideModule} references out of the AndroidManifest file.
+ * Parses {@link GlideModule} references out of the AndroidManifest file.
  */
 // Used only in javadoc.
 @SuppressWarnings("deprecation")
diff --git a/library/src/main/java/com/bumptech/glide/module/RegistersComponents.java b/library/src/main/java/com/bumptech/glide4/module/RegistersComponents.java
similarity index 79%
rename from library/src/main/java/com/bumptech/glide/module/RegistersComponents.java
rename to library/src/main/java/com/bumptech/glide4/module/RegistersComponents.java
index 9461ee341..35b9c5930 100644
--- a/library/src/main/java/com/bumptech/glide/module/RegistersComponents.java
+++ b/library/src/main/java/com/bumptech/glide4/module/RegistersComponents.java
@@ -1,9 +1,9 @@
-package com.bumptech.glide.module;
+package com.bumptech.glide4.module;
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.Registry;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.Registry;
 
 /**
  * An internal interface, to be removed when {@link GlideModule}s are removed.
@@ -21,7 +21,7 @@
    *
    * @param context  An Application {@link android.content.Context}.
    * @param glide The Glide singleton that is in the process of being initialized.
-   * @param registry An {@link com.bumptech.glide.Registry} to use to register components.
+   * @param registry An {@link Registry} to use to register components.
    */
   void registerComponents(@NonNull Context context, @NonNull Glide glide,
       @NonNull Registry registry);
diff --git a/library/src/main/java/com/bumptech/glide/provider/EncoderRegistry.java b/library/src/main/java/com/bumptech/glide4/provider/EncoderRegistry.java
similarity index 86%
rename from library/src/main/java/com/bumptech/glide/provider/EncoderRegistry.java
rename to library/src/main/java/com/bumptech/glide4/provider/EncoderRegistry.java
index ca5148a0f..8f71fab36 100644
--- a/library/src/main/java/com/bumptech/glide/provider/EncoderRegistry.java
+++ b/library/src/main/java/com/bumptech/glide4/provider/EncoderRegistry.java
@@ -1,9 +1,10 @@
-package com.bumptech.glide.provider;
+package com.bumptech.glide4.provider;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Encoder;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.load.Encoder;
+import com.bumptech.glide4.util.Synthetic;
+
 import java.util.ArrayList;
 import java.util.List;
 
@@ -35,7 +36,8 @@
 
   private static final class Entry<T> {
     private final Class<T> dataClass;
-    @Synthetic @SuppressWarnings("WeakerAccess") final Encoder<T> encoder;
+    @Synthetic
+    @SuppressWarnings("WeakerAccess") final Encoder<T> encoder;
 
     Entry(@NonNull Class<T> dataClass, @NonNull Encoder<T> encoder) {
       this.dataClass = dataClass;
diff --git a/library/src/main/java/com/bumptech/glide/provider/ImageHeaderParserRegistry.java b/library/src/main/java/com/bumptech/glide4/provider/ImageHeaderParserRegistry.java
similarity index 85%
rename from library/src/main/java/com/bumptech/glide/provider/ImageHeaderParserRegistry.java
rename to library/src/main/java/com/bumptech/glide4/provider/ImageHeaderParserRegistry.java
index 902fc1bd4..4c1f5fda2 100644
--- a/library/src/main/java/com/bumptech/glide/provider/ImageHeaderParserRegistry.java
+++ b/library/src/main/java/com/bumptech/glide4/provider/ImageHeaderParserRegistry.java
@@ -1,7 +1,8 @@
-package com.bumptech.glide.provider;
+package com.bumptech.glide4.provider;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.ImageHeaderParser;
+import com.bumptech.glide4.load.ImageHeaderParser;
+
 import java.util.ArrayList;
 import java.util.List;
 
diff --git a/library/src/main/java/com/bumptech/glide/provider/LoadPathCache.java b/library/src/main/java/com/bumptech/glide4/provider/LoadPathCache.java
similarity index 87%
rename from library/src/main/java/com/bumptech/glide/provider/LoadPathCache.java
rename to library/src/main/java/com/bumptech/glide4/provider/LoadPathCache.java
index 89d2525af..4ae45fc20 100644
--- a/library/src/main/java/com/bumptech/glide/provider/LoadPathCache.java
+++ b/library/src/main/java/com/bumptech/glide4/provider/LoadPathCache.java
@@ -1,18 +1,19 @@
-package com.bumptech.glide.provider;
+package com.bumptech.glide4.provider;
 
 import android.support.annotation.Nullable;
 import android.support.v4.util.ArrayMap;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.engine.DecodePath;
-import com.bumptech.glide.load.engine.LoadPath;
-import com.bumptech.glide.load.resource.transcode.UnitTranscoder;
-import com.bumptech.glide.util.MultiClassKey;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.engine.DecodePath;
+import com.bumptech.glide4.load.engine.LoadPath;
+import com.bumptech.glide4.load.resource.transcode.UnitTranscoder;
+import com.bumptech.glide4.util.MultiClassKey;
+
 import java.util.Collections;
 import java.util.concurrent.atomic.AtomicReference;
 
 /**
  * Maintains a cache of data, resource, and transcode classes to available
- * {@link com.bumptech.glide.load.engine.LoadPath}s capable of decoding with the requested types.
+ * {@link LoadPath}s capable of decoding with the requested types.
  */
 public class LoadPathCache {
   private static final LoadPath<?, ?, ?> NO_PATHS_SIGNAL =
diff --git a/library/src/main/java/com/bumptech/glide/provider/ModelToResourceClassCache.java b/library/src/main/java/com/bumptech/glide4/provider/ModelToResourceClassCache.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/provider/ModelToResourceClassCache.java
rename to library/src/main/java/com/bumptech/glide4/provider/ModelToResourceClassCache.java
index 4740f4b5a..63cdadcbc 100644
--- a/library/src/main/java/com/bumptech/glide/provider/ModelToResourceClassCache.java
+++ b/library/src/main/java/com/bumptech/glide4/provider/ModelToResourceClassCache.java
@@ -1,9 +1,10 @@
-package com.bumptech.glide.provider;
+package com.bumptech.glide4.provider;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v4.util.ArrayMap;
-import com.bumptech.glide.util.MultiClassKey;
+import com.bumptech.glide4.util.MultiClassKey;
+
 import java.util.List;
 import java.util.concurrent.atomic.AtomicReference;
 
diff --git a/library/src/main/java/com/bumptech/glide/provider/ResourceDecoderRegistry.java b/library/src/main/java/com/bumptech/glide4/provider/ResourceDecoderRegistry.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/provider/ResourceDecoderRegistry.java
rename to library/src/main/java/com/bumptech/glide4/provider/ResourceDecoderRegistry.java
index bc3ce0d93..c4ebf9bdf 100644
--- a/library/src/main/java/com/bumptech/glide/provider/ResourceDecoderRegistry.java
+++ b/library/src/main/java/com/bumptech/glide4/provider/ResourceDecoderRegistry.java
@@ -1,8 +1,9 @@
-package com.bumptech.glide.provider;
+package com.bumptech.glide4.provider;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.util.Synthetic;
+
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
@@ -99,7 +100,8 @@ public synchronized void setBucketPriorityList(@NonNull List<String> buckets) {
 
   private static class Entry<T, R> {
     private final Class<T> dataClass;
-    @Synthetic final Class<R> resourceClass;
+    @Synthetic
+    final Class<R> resourceClass;
     @Synthetic final ResourceDecoder<T, R> decoder;
 
     public Entry(@NonNull Class<T> dataClass, @NonNull Class<R> resourceClass,
diff --git a/library/src/main/java/com/bumptech/glide/provider/ResourceEncoderRegistry.java b/library/src/main/java/com/bumptech/glide4/provider/ResourceEncoderRegistry.java
similarity index 89%
rename from library/src/main/java/com/bumptech/glide/provider/ResourceEncoderRegistry.java
rename to library/src/main/java/com/bumptech/glide4/provider/ResourceEncoderRegistry.java
index b1bd2977a..70a6f0f5b 100644
--- a/library/src/main/java/com/bumptech/glide/provider/ResourceEncoderRegistry.java
+++ b/library/src/main/java/com/bumptech/glide4/provider/ResourceEncoderRegistry.java
@@ -1,9 +1,10 @@
-package com.bumptech.glide.provider;
+package com.bumptech.glide4.provider;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.ResourceEncoder;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.load.ResourceEncoder;
+import com.bumptech.glide4.util.Synthetic;
+
 import java.util.ArrayList;
 import java.util.List;
 
@@ -41,7 +42,8 @@
 
   private static final class Entry<T> {
     private final Class<T> resourceClass;
-    @Synthetic final ResourceEncoder<T> encoder;
+    @Synthetic
+    final ResourceEncoder<T> encoder;
 
     Entry(@NonNull Class<T> resourceClass, @NonNull ResourceEncoder<T> encoder) {
       this.resourceClass = resourceClass;
diff --git a/library/src/main/java/com/bumptech/glide/request/BaseRequestOptions.java b/library/src/main/java/com/bumptech/glide4/request/BaseRequestOptions.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/request/BaseRequestOptions.java
rename to library/src/main/java/com/bumptech/glide4/request/BaseRequestOptions.java
index ea7f66fa4..ad4fdf7c2 100644
--- a/library/src/main/java/com/bumptech/glide/request/BaseRequestOptions.java
+++ b/library/src/main/java/com/bumptech/glide4/request/BaseRequestOptions.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request;
+package com.bumptech.glide4.request;
 
 import android.content.res.Resources;
 import android.graphics.Bitmap;
@@ -10,36 +10,41 @@
 import android.support.annotation.IntRange;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DecodeFormat;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.MultiTransformation;
-import com.bumptech.glide.load.Option;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
-import com.bumptech.glide.load.model.stream.HttpGlideUrlLoader;
-import com.bumptech.glide.load.resource.bitmap.BitmapEncoder;
-import com.bumptech.glide.load.resource.bitmap.CenterCrop;
-import com.bumptech.glide.load.resource.bitmap.CenterInside;
-import com.bumptech.glide.load.resource.bitmap.CircleCrop;
-import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
-import com.bumptech.glide.load.resource.bitmap.Downsampler;
-import com.bumptech.glide.load.resource.bitmap.DrawableTransformation;
-import com.bumptech.glide.load.resource.bitmap.FitCenter;
-import com.bumptech.glide.load.resource.bitmap.VideoDecoder;
-import com.bumptech.glide.load.resource.gif.GifDrawable;
-import com.bumptech.glide.load.resource.gif.GifDrawableTransformation;
-import com.bumptech.glide.load.resource.gif.GifOptions;
-import com.bumptech.glide.signature.EmptySignature;
-import com.bumptech.glide.util.CachedHashCodeArrayMap;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DecodeFormat;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.MultiTransformation;
+import com.bumptech.glide4.load.Option;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.DiskCacheStrategy;
+import com.bumptech.glide4.load.model.stream.HttpGlideUrlLoader;
+import com.bumptech.glide4.load.resource.bitmap.BitmapEncoder;
+import com.bumptech.glide4.load.resource.bitmap.CenterCrop;
+import com.bumptech.glide4.load.resource.bitmap.CenterInside;
+import com.bumptech.glide4.load.resource.bitmap.CircleCrop;
+import com.bumptech.glide4.load.resource.bitmap.DownsampleStrategy;
+import com.bumptech.glide4.load.resource.bitmap.Downsampler;
+import com.bumptech.glide4.load.resource.bitmap.DrawableTransformation;
+import com.bumptech.glide4.load.resource.bitmap.FitCenter;
+import com.bumptech.glide4.load.resource.bitmap.VideoDecoder;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.load.resource.gif.GifDrawableTransformation;
+import com.bumptech.glide4.load.resource.gif.GifOptions;
+import com.bumptech.glide4.signature.EmptySignature;
+import com.bumptech.glide4.util.CachedHashCodeArrayMap;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Util;
+import com.bumptech.glide4.RequestBuilder;
+import com.bumptech.glide4.TransitionOptions;
+import com.bumptech.glide4.request.target.Target;
+import com.bumptech.glide4.signature.ObjectKey;
+
 import java.util.Map;
 
 /**
  * A base object to allow method sharing between {@link RequestOptions} and
- * {@link com.bumptech.glide.RequestBuilder}.
+ * {@link RequestBuilder}.
  *
  * <p>This class is not meant for general use and may change at any time.
  *
@@ -112,12 +117,12 @@ private static boolean isSet(int fields, int flag) {
   }
 
   /**
-   * Applies a multiplier to the {@link com.bumptech.glide.request.target.Target}'s size before
+   * Applies a multiplier to the {@link Target}'s size before
    * loading the resource. Useful for loading thumbnails or trying to avoid loading huge resources
    * (particularly {@link Bitmap}s on devices with overly dense screens.
    *
    * @param sizeMultiplier The multiplier to apply to the
-   *                       {@link com.bumptech.glide.request.target.Target}'s dimensions when
+   *                       {@link Target}'s dimensions when
    *                       loading the resource.
    * @return This request builder.
    */
@@ -301,7 +306,7 @@ public T placeholder(@DrawableRes int resourceId) {
 
   /**
    * Sets an {@link Drawable} to display if the model provided to
-   * {@link com.bumptech.glide.RequestBuilder#load(Object)} is {@code null}.
+   * {@link RequestBuilder#load(Object)} is {@code null}.
    *
    * <p> If a fallback is not set, null models will cause the error drawable to be displayed. If the
    * error drawable is not set, the placeholder will be displayed.
@@ -332,7 +337,7 @@ public T fallback(@Nullable Drawable drawable) {
 
   /**
    * Sets a resource to display if the model provided to
-   * {@link com.bumptech.glide.RequestBuilder#load(Object)} is {@code null}.
+   * {@link RequestBuilder#load(Object)} is {@code null}.
    *
    * <p> If a fallback is not set, null models will cause the error drawable to be displayed. If
    * the error drawable is not set, the placeholder will be displayed.
@@ -462,7 +467,7 @@ public T skipMemoryCache(boolean skip) {
   }
 
   /**
-   * Overrides the {@link com.bumptech.glide.request.target.Target}'s width and height with the
+   * Overrides the {@link Target}'s width and height with the
    * given values. This is useful for thumbnails, and should only be used for other cases when you
    * need a very specific image size.
    *
@@ -485,7 +490,7 @@ public T override(int width, int height) {
   }
 
   /**
-   * Overrides the {@link com.bumptech.glide.request.target.Target}'s width and height with the
+   * Overrides the {@link Target}'s width and height with the
    * given size.
    *
    * @see #override(int, int)
@@ -507,7 +512,7 @@ public T override(int size) {
    * @param signature A unique non-null {@link Key} representing the current
    *                  state of the model that will be mixed in to the cache key.
    * @return This request builder.
-   * @see com.bumptech.glide.signature.ObjectKey
+   * @see ObjectKey
    */
   @NonNull
   @CheckResult
@@ -595,7 +600,7 @@ public final boolean isLocked() {
 
   /**
    * Sets the value for key
-   * {@link com.bumptech.glide.load.resource.bitmap.BitmapEncoder#COMPRESSION_FORMAT}.
+   * {@link BitmapEncoder#COMPRESSION_FORMAT}.
    */
   @NonNull
   @CheckResult
@@ -669,7 +674,7 @@ public T format(@NonNull DecodeFormat format) {
    * {@link Downsampler#ALLOW_HARDWARE_CONFIG}, Glide will set the value per request based on
    * whether or not a {@link Transformation} is applied and if one is, the type of
    * {@link Transformation} applied. Built in transformations like {@link FitCenter} and
-   * {@link com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.CenterOutside} can safely use
+   * {@link DownsampleStrategy.CenterOutside} can safely use
    * {@link android.graphics.Bitmap.Config#HARDWARE} because they can be entirely replaced by
    * scaling within {@link Downsampler}. {@link Transformation}s like {@link #circleCrop()} that
    * can't be replicated by {@link Downsampler} cannot use {@link Bitmap.Config#HARDWARE} because
@@ -699,11 +704,11 @@ public T downsample(@NonNull DownsampleStrategy strategy) {
    * Sets the read and write timeout for the http requests used to load the image.
    *
    * <p>This is a component option specific to Glide's default networking library and
-   * {@link com.bumptech.glide.load.model.stream.HttpGlideUrlLoader}. If you use any other
+   * {@link HttpGlideUrlLoader}. If you use any other
    * networking library including Glide's Volley or OkHttp integration libraries, this option will
    * be ignored.
    *
-   * @see com.bumptech.glide.load.model.stream.HttpGlideUrlLoader#TIMEOUT
+   * @see HttpGlideUrlLoader#TIMEOUT
    * @param timeoutMs The read and write timeout in milliseconds.
    */
   @NonNull
@@ -713,7 +718,7 @@ public T timeout(@IntRange(from = 0) int timeoutMs) {
   }
 
   /**
-   * Applies {@link com.bumptech.glide.load.resource.bitmap.CenterCrop} to all default types, and
+   * Applies {@link CenterCrop} to all default types, and
    * ignores unknown types.
    *
    * <p>This will override previous calls to {@link #dontTransform()}.
@@ -777,7 +782,7 @@ public T fitCenter() {
   }
 
   /**
-   * Applies {@link com.bumptech.glide.load.resource.bitmap.CenterInside} to all default types,
+   * Applies {@link CenterInside} to all default types,
    * {@link DownsampleStrategy#CENTER_INSIDE} to image types, and ignores unknown types.
    *
    * <p>This will override previous calls to {@link #dontTransform()} and previous calls to
@@ -895,7 +900,7 @@ private T scaleOnlyTransform(
    * Applies the given {@link Transformation} for
    * {@link Bitmap Bitmaps} to the default types ({@link Bitmap},
    * {@link android.graphics.drawable.BitmapDrawable}, and
-   * {@link com.bumptech.glide.load.resource.gif.GifDrawable})
+   * {@link GifDrawable})
    * and throws an exception if asked to transform an unknown type.
    *
    * <p>This will override previous calls to {@link #dontTransform()}.
@@ -916,7 +921,7 @@ public T transform(@NonNull Transformation<Bitmap> transformation) {
    * Applies the given {@link Transformation}s in the given order for
    * {@link Bitmap Bitmaps} to the default types ({@link Bitmap},
    * {@link android.graphics.drawable.BitmapDrawable}, and
-   * {@link com.bumptech.glide.load.resource.gif.GifDrawable})
+   * {@link GifDrawable})
    * and throws an exception if asked to transform an unknown type.
    *
    * <p>This will override previous calls to {@link #dontTransform()}.
@@ -943,7 +948,7 @@ public T transform(@NonNull Transformation<Bitmap>... transformations) {
    * Applies the given {@link Transformation}s in the given order for
    * {@link Bitmap Bitmaps} to the default types ({@link Bitmap},
    * {@link android.graphics.drawable.BitmapDrawable}, and
-   * {@link com.bumptech.glide.load.resource.gif.GifDrawable})
+   * {@link GifDrawable})
    * and throws an exception if asked to transform an unknown type.
    *
    * <p>This will override previous calls to {@link #dontTransform()}.
@@ -967,7 +972,7 @@ public T transforms(@NonNull Transformation<Bitmap>... transformations) {
    * Applies the given {@link Transformation} for
    * {@link Bitmap Bitmaps} to the default types ({@link Bitmap},
    * {@link android.graphics.drawable.BitmapDrawable}, and
-   * {@link com.bumptech.glide.load.resource.gif.GifDrawable}) and ignores unknown types.
+   * {@link GifDrawable}) and ignores unknown types.
    *
    * <p>This will override previous calls to {@link #dontTransform()}.
    *
@@ -1098,7 +1103,7 @@ public T dontTransform() {
    * static.
    *
    * <p> To disable transitions (fades etc) use
-   * {@link com.bumptech.glide.TransitionOptions#dontTransition()}</p>
+   * {@link TransitionOptions#dontTransition()}</p>
    */
   // Guaranteed to modify the current object by the isAutoCloneEnabledCheck.
   @SuppressWarnings("CheckResult")
diff --git a/library/src/main/java/com/bumptech/glide/request/ErrorRequestCoordinator.java b/library/src/main/java/com/bumptech/glide4/request/ErrorRequestCoordinator.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/request/ErrorRequestCoordinator.java
rename to library/src/main/java/com/bumptech/glide4/request/ErrorRequestCoordinator.java
index 93b662d8f..c1412c07d 100644
--- a/library/src/main/java/com/bumptech/glide/request/ErrorRequestCoordinator.java
+++ b/library/src/main/java/com/bumptech/glide4/request/ErrorRequestCoordinator.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request;
+package com.bumptech.glide4.request;
 
 import android.support.annotation.Nullable;
 
diff --git a/library/src/main/java/com/bumptech/glide/request/FutureTarget.java b/library/src/main/java/com/bumptech/glide4/request/FutureTarget.java
similarity index 81%
rename from library/src/main/java/com/bumptech/glide/request/FutureTarget.java
rename to library/src/main/java/com/bumptech/glide4/request/FutureTarget.java
index 063b96dd8..5a82fd795 100644
--- a/library/src/main/java/com/bumptech/glide/request/FutureTarget.java
+++ b/library/src/main/java/com/bumptech/glide4/request/FutureTarget.java
@@ -1,10 +1,11 @@
-package com.bumptech.glide.request;
+package com.bumptech.glide4.request;
+
+import com.bumptech.glide4.request.target.Target;
 
-import com.bumptech.glide.request.target.Target;
 import java.util.concurrent.Future;
 
 /**
- * An interface for an object that is both a {@link com.bumptech.glide.request.target.Target} and a
+ * An interface for an object that is both a {@link Target} and a
  * {@link java.util.concurrent.Future}. For example:
  * <pre>
  * {@code
diff --git a/library/src/main/java/com/bumptech/glide/request/Request.java b/library/src/main/java/com/bumptech/glide4/request/Request.java
similarity index 88%
rename from library/src/main/java/com/bumptech/glide/request/Request.java
rename to library/src/main/java/com/bumptech/glide4/request/Request.java
index f60198184..e42bc86d8 100644
--- a/library/src/main/java/com/bumptech/glide/request/Request.java
+++ b/library/src/main/java/com/bumptech/glide4/request/Request.java
@@ -1,7 +1,9 @@
-package com.bumptech.glide.request;
+package com.bumptech.glide4.request;
+
+import com.bumptech.glide4.request.target.Target;
 
 /**
- * A request that loads a resource for an {@link com.bumptech.glide.request.target.Target}.
+ * A request that loads a resource for an {@link Target}.
  */
 public interface Request {
 
@@ -56,7 +58,7 @@
    * {@link Request} subclasses. We do not use {@link Object#equals(Object)} directly because we
    * track {@link Request}s in collections like {@link java.util.Set} and it's perfectly legitimate
    * to have two different {@link Request} objects for two different
-   * {@link com.bumptech.glide.request.target.Target}s (for example). Using a similar but different
+   * {@link Target}s (for example). Using a similar but different
    * method let's us selectively compare {@link Request} objects to each other when it's useful in
    * specific scenarios.
    */
diff --git a/library/src/main/java/com/bumptech/glide/request/RequestCoordinator.java b/library/src/main/java/com/bumptech/glide4/request/RequestCoordinator.java
similarity index 89%
rename from library/src/main/java/com/bumptech/glide/request/RequestCoordinator.java
rename to library/src/main/java/com/bumptech/glide4/request/RequestCoordinator.java
index 4aa69b394..ea85567a6 100644
--- a/library/src/main/java/com/bumptech/glide/request/RequestCoordinator.java
+++ b/library/src/main/java/com/bumptech/glide4/request/RequestCoordinator.java
@@ -1,8 +1,10 @@
-package com.bumptech.glide.request;
+package com.bumptech.glide4.request;
+
+import com.bumptech.glide4.request.target.Target;
 
 /**
  * An interface for coordinating multiple requests with the same {@link
- * com.bumptech.glide.request.target.Target}.
+ * Target}.
  */
 public interface RequestCoordinator {
 
@@ -22,7 +24,7 @@
 
   /**
    * Returns {@code true} if the {@link Request} can clear the
-   * {@link com.bumptech.glide.request.target.Target}.
+   * {@link Target}.
    */
   boolean canNotifyCleared(Request request);
 
diff --git a/library/src/main/java/com/bumptech/glide/request/RequestFutureTarget.java b/library/src/main/java/com/bumptech/glide4/request/RequestFutureTarget.java
similarity index 92%
rename from library/src/main/java/com/bumptech/glide/request/RequestFutureTarget.java
rename to library/src/main/java/com/bumptech/glide4/request/RequestFutureTarget.java
index 5289da076..dfda6b903 100644
--- a/library/src/main/java/com/bumptech/glide/request/RequestFutureTarget.java
+++ b/library/src/main/java/com/bumptech/glide4/request/RequestFutureTarget.java
@@ -1,15 +1,16 @@
-package com.bumptech.glide.request;
+package com.bumptech.glide4.request;
 
 import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.annotation.VisibleForTesting;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.engine.GlideException;
-import com.bumptech.glide.request.target.SizeReadyCallback;
-import com.bumptech.glide.request.target.Target;
-import com.bumptech.glide.request.transition.Transition;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.engine.GlideException;
+import com.bumptech.glide4.request.target.SizeReadyCallback;
+import com.bumptech.glide4.request.target.Target;
+import com.bumptech.glide4.request.transition.Transition;
+import com.bumptech.glide4.util.Util;
+
 import java.util.concurrent.CancellationException;
 import java.util.concurrent.ExecutionException;
 import java.util.concurrent.TimeUnit;
@@ -229,7 +230,7 @@ public void onDestroy() {
 
   @Override
   public synchronized boolean onLoadFailed(
-      @Nullable GlideException e, Object model, Target<R> target, boolean isFirstResource) {
+          @Nullable GlideException e, Object model, Target<R> target, boolean isFirstResource) {
     loadFailed = true;
     exception = e;
     waiter.notifyAll(this);
@@ -238,7 +239,7 @@ public synchronized boolean onLoadFailed(
 
   @Override
   public synchronized boolean onResourceReady(
-      R resource, Object model, Target<R> target, DataSource dataSource, boolean isFirstResource) {
+          R resource, Object model, Target<R> target, DataSource dataSource, boolean isFirstResource) {
     // We might get a null result.
     resultReceived = true;
     this.resource = resource;
diff --git a/library/src/main/java/com/bumptech/glide/request/RequestListener.java b/library/src/main/java/com/bumptech/glide4/request/RequestListener.java
similarity index 91%
rename from library/src/main/java/com/bumptech/glide/request/RequestListener.java
rename to library/src/main/java/com/bumptech/glide4/request/RequestListener.java
index fa6b4721f..b489c8146 100644
--- a/library/src/main/java/com/bumptech/glide/request/RequestListener.java
+++ b/library/src/main/java/com/bumptech/glide4/request/RequestListener.java
@@ -1,12 +1,13 @@
-package com.bumptech.glide.request;
+package com.bumptech.glide4.request;
 
 import android.graphics.drawable.Drawable;
 import android.support.annotation.Nullable;
 import android.widget.ImageView;
-import com.bumptech.glide.RequestBuilder;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.engine.GlideException;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.RequestBuilder;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.engine.GlideException;
+import com.bumptech.glide4.request.target.Target;
+import com.bumptech.glide4.request.transition.Transition;
 
 /**
  * A class for monitoring the status of a request while images load.
@@ -32,7 +33,7 @@
    * Glide.with(fragment/activity).load()} to avoid object churn.
    *
    * <p>It is not safe to reload this or a different model in this callback. If you need to do so
-   * use {@link com.bumptech.glide.RequestBuilder#error(RequestBuilder)} instead.
+   * use {@link RequestBuilder#error(RequestBuilder)} instead.
    *
    * <p>Although you can't start an entirely new load, it is safe to change what is displayed in the
    * {@link Target} at this point, as long as you return {@code true} from the method to prevent
@@ -67,7 +68,7 @@ boolean onLoadFailed(
 
   /**
    * Called when a load completes successfully, immediately before {@link
-   * Target#onResourceReady(Object, com.bumptech.glide.request.transition.Transition)}.
+   * Target#onResourceReady(Object, Transition)}.
    *
    * <p>For threading guarantees, see the class comment.
    *
diff --git a/library/src/main/java/com/bumptech/glide/request/RequestOptions.java b/library/src/main/java/com/bumptech/glide4/request/RequestOptions.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/request/RequestOptions.java
rename to library/src/main/java/com/bumptech/glide4/request/RequestOptions.java
index f712ce726..206784430 100644
--- a/library/src/main/java/com/bumptech/glide/request/RequestOptions.java
+++ b/library/src/main/java/com/bumptech/glide4/request/RequestOptions.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request;
+package com.bumptech.glide4.request;
 
 import android.graphics.Bitmap;
 import android.graphics.drawable.Drawable;
@@ -8,13 +8,13 @@
 import android.support.annotation.IntRange;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DecodeFormat;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Option;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
-import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DecodeFormat;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Option;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.DiskCacheStrategy;
+import com.bumptech.glide4.load.resource.bitmap.DownsampleStrategy;
 
 /**
  * Provides type independent options to customize loads with Glide.
@@ -304,7 +304,7 @@ public static RequestOptions timeoutOf(@IntRange(from = 0) int timeout) {
   }
 
   /**
-   * Returns a {@link com.bumptech.glide.request.RequestOptions} with {@link
+   * Returns a {@link RequestOptions} with {@link
    * #encodeQuality(int)} called with the given quality.
    */
   @SuppressWarnings("WeakerAccess") // Public API
@@ -315,7 +315,7 @@ public static RequestOptions encodeQualityOf(@IntRange(from = 0, to = 100) int q
   }
 
   /**
-   * Returns a {@link com.bumptech.glide.request.RequestOptions} with {@link
+   * Returns a {@link RequestOptions} with {@link
    * #encodeFormat(android.graphics.Bitmap.CompressFormat)} called with the given format.
    */
   @SuppressWarnings("WeakerAccess") // Public API
@@ -326,7 +326,7 @@ public static RequestOptions encodeFormatOf(@NonNull Bitmap.CompressFormat forma
   }
 
   /**
-   * Returns a new {@link com.bumptech.glide.request.RequestOptions} with {@link #dontAnimate()}
+   * Returns a new {@link RequestOptions} with {@link #dontAnimate()}
    * called.
    */
   @SuppressWarnings("WeakerAccess") // Public API
diff --git a/library/src/main/java/com/bumptech/glide/request/ResourceCallback.java b/library/src/main/java/com/bumptech/glide4/request/ResourceCallback.java
similarity index 72%
rename from library/src/main/java/com/bumptech/glide/request/ResourceCallback.java
rename to library/src/main/java/com/bumptech/glide4/request/ResourceCallback.java
index ed1ec1063..e5088560d 100644
--- a/library/src/main/java/com/bumptech/glide/request/ResourceCallback.java
+++ b/library/src/main/java/com/bumptech/glide4/request/ResourceCallback.java
@@ -1,8 +1,8 @@
-package com.bumptech.glide.request;
+package com.bumptech.glide4.request;
 
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.engine.GlideException;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.engine.GlideException;
+import com.bumptech.glide4.load.engine.Resource;
 
 /**
  * A callback that listens for when a resource load completes successfully or fails due to an
diff --git a/library/src/main/java/com/bumptech/glide/request/SingleRequest.java b/library/src/main/java/com/bumptech/glide4/request/SingleRequest.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/request/SingleRequest.java
rename to library/src/main/java/com/bumptech/glide4/request/SingleRequest.java
index 03d3b34cc..161d58029 100644
--- a/library/src/main/java/com/bumptech/glide/request/SingleRequest.java
+++ b/library/src/main/java/com/bumptech/glide4/request/SingleRequest.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request;
+package com.bumptech.glide4.request;
 
 import android.content.Context;
 import android.content.res.Resources.Theme;
@@ -9,35 +9,36 @@
 import android.support.annotation.Nullable;
 import android.support.v4.util.Pools;
 import android.util.Log;
-import com.bumptech.glide.GlideContext;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.engine.Engine;
-import com.bumptech.glide.load.engine.GlideException;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat;
-import com.bumptech.glide.request.target.SizeReadyCallback;
-import com.bumptech.glide.request.target.Target;
-import com.bumptech.glide.request.transition.Transition;
-import com.bumptech.glide.request.transition.TransitionFactory;
-import com.bumptech.glide.util.LogTime;
-import com.bumptech.glide.util.Synthetic;
-import com.bumptech.glide.util.Util;
-import com.bumptech.glide.util.pool.FactoryPools;
-import com.bumptech.glide.util.pool.StateVerifier;
+import com.bumptech.glide4.GlideContext;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.engine.Engine;
+import com.bumptech.glide4.load.engine.GlideException;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.resource.drawable.DrawableDecoderCompat;
+import com.bumptech.glide4.request.target.SizeReadyCallback;
+import com.bumptech.glide4.request.target.Target;
+import com.bumptech.glide4.request.transition.Transition;
+import com.bumptech.glide4.request.transition.TransitionFactory;
+import com.bumptech.glide4.util.LogTime;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.util.Util;
+import com.bumptech.glide4.util.pool.FactoryPools;
+import com.bumptech.glide4.util.pool.StateVerifier;
+
 import java.util.List;
 import java.util.concurrent.Executor;
 
 /**
- * A {@link Request} that loads a {@link com.bumptech.glide.load.engine.Resource} into a given
+ * A {@link Request} that loads a {@link Resource} into a given
  * {@link Target}.
  *
  * @param <R> The type of the resource that will be transcoded from the loaded resource.
  */
 public final class SingleRequest<R> implements Request,
-    SizeReadyCallback,
+        SizeReadyCallback,
     ResourceCallback,
-    FactoryPools.Poolable {
+        FactoryPools.Poolable {
   /** Tag for logging internal events, not generally suitable for public use. */
   private static final String TAG = "Request";
   /** Tag for logging externally useful events (request completion, timing etc). */
diff --git a/library/src/main/java/com/bumptech/glide/request/ThumbnailRequestCoordinator.java b/library/src/main/java/com/bumptech/glide4/request/ThumbnailRequestCoordinator.java
similarity index 99%
rename from library/src/main/java/com/bumptech/glide/request/ThumbnailRequestCoordinator.java
rename to library/src/main/java/com/bumptech/glide4/request/ThumbnailRequestCoordinator.java
index eaa4ba5a0..3ca10c917 100644
--- a/library/src/main/java/com/bumptech/glide/request/ThumbnailRequestCoordinator.java
+++ b/library/src/main/java/com/bumptech/glide4/request/ThumbnailRequestCoordinator.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request;
+package com.bumptech.glide4.request;
 
 import android.support.annotation.Nullable;
 import android.support.annotation.VisibleForTesting;
diff --git a/library/src/main/java/com/bumptech/glide/request/target/AppWidgetTarget.java b/library/src/main/java/com/bumptech/glide4/request/target/AppWidgetTarget.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/request/target/AppWidgetTarget.java
rename to library/src/main/java/com/bumptech/glide4/request/target/AppWidgetTarget.java
index 85ebda0de..386bc704e 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/AppWidgetTarget.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/AppWidgetTarget.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 import android.appwidget.AppWidgetManager;
 import android.content.ComponentName;
@@ -7,8 +7,8 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.widget.RemoteViews;
-import com.bumptech.glide.request.transition.Transition;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.request.transition.Transition;
+import com.bumptech.glide4.util.Preconditions;
 
 /**
  * This class is used in order to display downloaded Bitmap inside an ImageView of an AppWidget
diff --git a/library/src/main/java/com/bumptech/glide/request/target/BaseTarget.java b/library/src/main/java/com/bumptech/glide4/request/target/BaseTarget.java
similarity index 73%
rename from library/src/main/java/com/bumptech/glide/request/target/BaseTarget.java
rename to library/src/main/java/com/bumptech/glide4/request/target/BaseTarget.java
index 026a3233f..43f1150c4 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/BaseTarget.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/BaseTarget.java
@@ -1,20 +1,22 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 import android.graphics.drawable.Drawable;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.request.Request;
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.RequestManager;
+import com.bumptech.glide4.load.engine.Resource;
 
 /**
- * A base {@link Target} for loading {@link com.bumptech.glide.load.engine.Resource}s that provides
+ * A base {@link Target} for loading {@link Resource}s that provides
  * basic or empty implementations for most methods.
  *
  * <p>For maximum efficiency, clear this target when you have finished using or displaying the
- * {@link com.bumptech.glide.load.engine.Resource} loaded into it using {@link
- * com.bumptech.glide.RequestManager#clear(Target)}.
+ * {@link Resource} loaded into it using {@link
+ * RequestManager#clear(Target)}.
  *
- * <p>For loading {@link com.bumptech.glide.load.engine.Resource}s into {@link android.view.View}s,
- * {@link com.bumptech.glide.request.target.ViewTarget} or {@link
- * com.bumptech.glide.request.target.ImageViewTarget} are preferable.
+ * <p>For loading {@link Resource}s into {@link android.view.View}s,
+ * {@link ViewTarget} or {@link
+ * ImageViewTarget} are preferable.
  *
  * @param <Z> The type of resource that will be received by this target.
  * @deprecated Use {@link CustomViewTarget} if loading the content into a view, the download API if
diff --git a/library/src/main/java/com/bumptech/glide/request/target/BitmapImageViewTarget.java b/library/src/main/java/com/bumptech/glide4/request/target/BitmapImageViewTarget.java
similarity index 87%
rename from library/src/main/java/com/bumptech/glide/request/target/BitmapImageViewTarget.java
rename to library/src/main/java/com/bumptech/glide4/request/target/BitmapImageViewTarget.java
index 386a6a1cf..0267c7f6b 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/BitmapImageViewTarget.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/BitmapImageViewTarget.java
@@ -1,10 +1,10 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 import android.graphics.Bitmap;
 import android.widget.ImageView;
 
 /**
- * A {@link com.bumptech.glide.request.target.Target} that can display an {@link
+ * A {@link Target} that can display an {@link
  * android.graphics.Bitmap} in an {@link android.widget.ImageView}.
  */
 public class BitmapImageViewTarget extends ImageViewTarget<Bitmap> {
diff --git a/library/src/main/java/com/bumptech/glide/request/target/BitmapThumbnailImageViewTarget.java b/library/src/main/java/com/bumptech/glide4/request/target/BitmapThumbnailImageViewTarget.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/request/target/BitmapThumbnailImageViewTarget.java
rename to library/src/main/java/com/bumptech/glide4/request/target/BitmapThumbnailImageViewTarget.java
index 90b03a62f..e264737ce 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/BitmapThumbnailImageViewTarget.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/BitmapThumbnailImageViewTarget.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 import android.graphics.Bitmap;
 import android.graphics.drawable.BitmapDrawable;
diff --git a/library/src/main/java/com/bumptech/glide/request/target/CustomTarget.java b/library/src/main/java/com/bumptech/glide4/request/target/CustomTarget.java
similarity index 89%
rename from library/src/main/java/com/bumptech/glide/request/target/CustomTarget.java
rename to library/src/main/java/com/bumptech/glide4/request/target/CustomTarget.java
index ce7ebba38..7cd40523d 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/CustomTarget.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/CustomTarget.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 import android.graphics.Bitmap;
 import android.graphics.drawable.Drawable;
@@ -6,16 +6,18 @@
 import android.support.annotation.Nullable;
 import android.view.View;
 import android.widget.ImageView;
-import com.bumptech.glide.request.Request;
-import com.bumptech.glide.request.transition.Transition;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.request.RequestOptions;
+import com.bumptech.glide4.request.transition.Transition;
+import com.bumptech.glide4.util.Util;
+import com.bumptech.glide4.RequestBuilder;
 
 /**
  * A base {@link Target} for loading resources ({@link android.graphics.Bitmap}, {@link Drawable}
  * etc) that are used outside of {@link android.view.View}s.
  *
  * <p>If you're loading a resource into a {@link View}, use
- * {@link com.bumptech.glide.RequestBuilder#into(ImageView)}, a subclass of {@link ImageViewTarget},
+ * {@link RequestBuilder#into(ImageView)}, a subclass of {@link ImageViewTarget},
  * or {@link CustomViewTarget}. Using this class to load resources into {@link View}s can prevent
  * Glide from correctly cancelling any previous loads, which may result in incorrect images
  * appearing in the view, especially in scrolling views like
@@ -49,7 +51,7 @@
    *
    * <p>This constructor can cause very memory inefficient loads if the resource is large and can
    * cause OOMs. It's provided as a convenience for when you'd like to specify dimensions with
-   * {@link com.bumptech.glide.request.RequestOptions#override(int)}. In all other cases, prefer
+   * {@link RequestOptions#override(int)}. In all other cases, prefer
    * {@link #CustomTarget(int, int)}.
    */
   public CustomTarget() {
@@ -59,7 +61,7 @@ public CustomTarget() {
   /**
    * Creates a new {@code CustomTarget} that will return the given {@code width} and {@code height}
    * as the requested size (unless overridden by
-   * {@link com.bumptech.glide.request.RequestOptions#override(int)} in the request).
+   * {@link RequestOptions#override(int)} in the request).
    *
    * @param width The requested width (>= 0, or == Target.SIZE_ORIGINAL).
    * @param height The requested height (>= 0, or == Target.SIZE_ORIGINAL).
diff --git a/library/src/main/java/com/bumptech/glide/request/target/CustomViewTarget.java b/library/src/main/java/com/bumptech/glide4/request/target/CustomViewTarget.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/request/target/CustomViewTarget.java
rename to library/src/main/java/com/bumptech/glide4/request/target/CustomViewTarget.java
index 28aa06465..c2a842827 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/CustomViewTarget.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/CustomViewTarget.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 import android.content.Context;
 import android.graphics.Point;
@@ -14,11 +14,12 @@
 import android.view.ViewGroup.LayoutParams;
 import android.view.ViewTreeObserver;
 import android.view.WindowManager;
-import com.bumptech.glide.R;
-import com.bumptech.glide.request.Request;
-import com.bumptech.glide.request.transition.Transition;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.R;
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.request.transition.Transition;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Synthetic;
+
 import java.lang.ref.WeakReference;
 import java.util.ArrayList;
 import java.util.List;
diff --git a/library/src/main/java/com/bumptech/glide/request/target/DrawableImageViewTarget.java b/library/src/main/java/com/bumptech/glide4/request/target/DrawableImageViewTarget.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/request/target/DrawableImageViewTarget.java
rename to library/src/main/java/com/bumptech/glide4/request/target/DrawableImageViewTarget.java
index ca9c6528d..a2ded52cf 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/DrawableImageViewTarget.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/DrawableImageViewTarget.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 import android.graphics.drawable.Drawable;
 import android.support.annotation.Nullable;
diff --git a/library/src/main/java/com/bumptech/glide/request/target/DrawableThumbnailImageViewTarget.java b/library/src/main/java/com/bumptech/glide4/request/target/DrawableThumbnailImageViewTarget.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/request/target/DrawableThumbnailImageViewTarget.java
rename to library/src/main/java/com/bumptech/glide4/request/target/DrawableThumbnailImageViewTarget.java
index 40ff2dad4..3ad09aea3 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/DrawableThumbnailImageViewTarget.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/DrawableThumbnailImageViewTarget.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 import android.graphics.drawable.Drawable;
 import android.widget.ImageView;
diff --git a/library/src/main/java/com/bumptech/glide/request/target/FixedSizeDrawable.java b/library/src/main/java/com/bumptech/glide4/request/target/FixedSizeDrawable.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/request/target/FixedSizeDrawable.java
rename to library/src/main/java/com/bumptech/glide4/request/target/FixedSizeDrawable.java
index 154bdc3eb..13a164d3f 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/FixedSizeDrawable.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/FixedSizeDrawable.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 import android.content.res.Resources;
 import android.graphics.Canvas;
@@ -11,8 +11,8 @@
 import android.os.Build;
 import android.support.annotation.NonNull;
 import android.support.annotation.RequiresApi;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Synthetic;
 
 /**
  * A wrapper drawable to square the wrapped drawable so that it expands to fill a square with
diff --git a/library/src/main/java/com/bumptech/glide/request/target/ImageViewTarget.java b/library/src/main/java/com/bumptech/glide4/request/target/ImageViewTarget.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/request/target/ImageViewTarget.java
rename to library/src/main/java/com/bumptech/glide4/request/target/ImageViewTarget.java
index 6f270b9a6..f1419daca 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/ImageViewTarget.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/ImageViewTarget.java
@@ -1,14 +1,14 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 import android.graphics.drawable.Animatable;
 import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.widget.ImageView;
-import com.bumptech.glide.request.transition.Transition;
+import com.bumptech.glide4.request.transition.Transition;
 
 /**
- * A base {@link com.bumptech.glide.request.target.Target} for displaying resources in {@link
+ * A base {@link Target} for displaying resources in {@link
  * android.widget.ImageView}s.
  *
  * @param <Z> The type of resource that this target will display in the wrapped {@link
diff --git a/library/src/main/java/com/bumptech/glide/request/target/ImageViewTargetFactory.java b/library/src/main/java/com/bumptech/glide4/request/target/ImageViewTargetFactory.java
similarity index 85%
rename from library/src/main/java/com/bumptech/glide/request/target/ImageViewTargetFactory.java
rename to library/src/main/java/com/bumptech/glide4/request/target/ImageViewTargetFactory.java
index 2e91ac594..845372040 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/ImageViewTargetFactory.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/ImageViewTargetFactory.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 import android.graphics.Bitmap;
 import android.graphics.drawable.Drawable;
@@ -7,7 +7,7 @@
 
 /**
  * A factory responsible for producing the correct type of
- * {@link com.bumptech.glide.request.target.Target} for a given {@link android.view.View} subclass.
+ * {@link Target} for a given {@link android.view.View} subclass.
  */
 public class ImageViewTargetFactory {
   @NonNull
diff --git a/library/src/main/java/com/bumptech/glide/request/target/NotificationTarget.java b/library/src/main/java/com/bumptech/glide4/request/target/NotificationTarget.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/request/target/NotificationTarget.java
rename to library/src/main/java/com/bumptech/glide4/request/target/NotificationTarget.java
index 393b40cf1..6611257ce 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/NotificationTarget.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/NotificationTarget.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 
 import android.app.Notification;
@@ -8,8 +8,8 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.widget.RemoteViews;
-import com.bumptech.glide.request.transition.Transition;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.request.transition.Transition;
+import com.bumptech.glide4.util.Preconditions;
 
 /**
  * This class is used to display downloaded Bitmap inside an ImageView of a Notification through
diff --git a/library/src/main/java/com/bumptech/glide/request/target/PreloadTarget.java b/library/src/main/java/com/bumptech/glide4/request/target/PreloadTarget.java
similarity index 85%
rename from library/src/main/java/com/bumptech/glide/request/target/PreloadTarget.java
rename to library/src/main/java/com/bumptech/glide4/request/target/PreloadTarget.java
index 903522fc0..07791f311 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/PreloadTarget.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/PreloadTarget.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 import android.os.Handler;
 import android.os.Handler.Callback;
@@ -6,12 +6,12 @@
 import android.os.Message;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.RequestManager;
-import com.bumptech.glide.request.transition.Transition;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.RequestManager;
+import com.bumptech.glide4.request.transition.Transition;
+import com.bumptech.glide4.util.Synthetic;
 
 /**
- * A one time use {@link com.bumptech.glide.request.target.Target} class that loads a resource into
+ * A one time use {@link Target} class that loads a resource into
  * memory and then clears itself.
  *
  * @param <Z> The type of resource that will be loaded into memory.
diff --git a/library/src/main/java/com/bumptech/glide/request/target/SimpleTarget.java b/library/src/main/java/com/bumptech/glide4/request/target/SimpleTarget.java
similarity index 91%
rename from library/src/main/java/com/bumptech/glide/request/target/SimpleTarget.java
rename to library/src/main/java/com/bumptech/glide4/request/target/SimpleTarget.java
index 9d28c0bd0..fe1297911 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/SimpleTarget.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/SimpleTarget.java
@@ -1,12 +1,14 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
 import android.view.View;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.util.Util;
+import com.bumptech.glide4.RequestBuilder;
+import com.bumptech.glide4.RequestManager;
 
 /**
- * A simple {@link com.bumptech.glide.request.target.Target} base class with default (usually no-op)
+ * A simple {@link Target} base class with default (usually no-op)
  * implementations of non essential methods that allows the caller to specify an exact width/height.
  * Typically use cases look something like this:
  *
@@ -39,12 +41,12 @@
  * mind that unlike {@link ViewTarget} it is not safe to load into new instances of this class
  * repeatedly if every instance updates the same underlying {@link View} or caller. If you need to
  * load into the same {@link View} or caller repeatedly using this class, always retain a reference
- * to the previous instance and either call {@link com.bumptech.glide.RequestManager#clear(Target)}
+ * to the previous instance and either call {@link RequestManager#clear(Target)}
  * on the old instance before starting a new load or you must re-use the old instance for the new
- * load. Glide's {@link com.bumptech.glide.RequestBuilder#into(Target)} method returns the {@link
+ * load. Glide's {@link RequestBuilder#into(Target)} method returns the {@link
  * Target} instance you provided to make retaining a reference to the {@link Target} as easy as
  * possible. That said, you must wait until you're completely finished with the resource before
- * calling {@link com.bumptech.glide.RequestManager#clear(Target)} and you should always null out
+ * calling {@link RequestManager#clear(Target)} and you should always null out
  * references to any loaded resources in {@link Target#onLoadCleared(Drawable)}.
  *
  * <p>Always try to provide a size when using this class. Use {@link SimpleTarget#SimpleTarget(int,
diff --git a/library/src/main/java/com/bumptech/glide/request/target/SizeReadyCallback.java b/library/src/main/java/com/bumptech/glide4/request/target/SizeReadyCallback.java
similarity index 93%
rename from library/src/main/java/com/bumptech/glide/request/target/SizeReadyCallback.java
rename to library/src/main/java/com/bumptech/glide4/request/target/SizeReadyCallback.java
index 2ff5b19a2..fc1fc35fa 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/SizeReadyCallback.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/SizeReadyCallback.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 /**
  * A callback that must be called when the target has determined its size. For fixed size targets it
diff --git a/library/src/main/java/com/bumptech/glide/request/target/Target.java b/library/src/main/java/com/bumptech/glide4/request/target/Target.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/request/target/Target.java
rename to library/src/main/java/com/bumptech/glide4/request/target/Target.java
index 502234774..53e3e09c9 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/Target.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/Target.java
@@ -1,11 +1,11 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.manager.LifecycleListener;
-import com.bumptech.glide.request.Request;
-import com.bumptech.glide.request.transition.Transition;
+import com.bumptech.glide4.manager.LifecycleListener;
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.request.transition.Transition;
 
 /**
  * An interface that Glide can load a resource into and notify of relevant lifecycle events during a
diff --git a/library/src/main/java/com/bumptech/glide/request/target/ThumbnailImageViewTarget.java b/library/src/main/java/com/bumptech/glide4/request/target/ThumbnailImageViewTarget.java
similarity index 91%
rename from library/src/main/java/com/bumptech/glide/request/target/ThumbnailImageViewTarget.java
rename to library/src/main/java/com/bumptech/glide4/request/target/ThumbnailImageViewTarget.java
index 043d31daf..a8beb3d8c 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/ThumbnailImageViewTarget.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/ThumbnailImageViewTarget.java
@@ -1,9 +1,10 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 import android.graphics.drawable.Drawable;
 import android.support.annotation.Nullable;
 import android.view.ViewGroup;
 import android.widget.ImageView;
+import com.bumptech.glide4.RequestBuilder;
 
 /**
  * Avoids extra calls to {@link android.view.View#requestLayout} when loading more than once
@@ -11,7 +12,7 @@
  *
  * <p>Typically it makes sense
  * to use this class when loading multiple images with the {@link
- * com.bumptech.glide.RequestBuilder#thumbnail(com.bumptech.glide.RequestBuilder)} API into views in
+ * RequestBuilder#thumbnail(RequestBuilder)} API into views in
  * a scrolling list like ListView, GridView, or RecyclerView.
  *
  * <p>{@link FixedSizeDrawable} may cause skewing or other undesirable behavior depending on
diff --git a/library/src/main/java/com/bumptech/glide/request/target/ViewTarget.java b/library/src/main/java/com/bumptech/glide4/request/target/ViewTarget.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/request/target/ViewTarget.java
rename to library/src/main/java/com/bumptech/glide4/request/target/ViewTarget.java
index 9bc6d8b2e..7964f0de3 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/ViewTarget.java
+++ b/library/src/main/java/com/bumptech/glide4/request/target/ViewTarget.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 import android.content.Context;
 import android.graphics.Point;
@@ -14,9 +14,11 @@
 import android.view.ViewGroup.LayoutParams;
 import android.view.ViewTreeObserver;
 import android.view.WindowManager;
-import com.bumptech.glide.request.Request;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.RequestManager;
+
 import java.lang.ref.WeakReference;
 import java.util.ArrayList;
 import java.util.List;
@@ -257,7 +259,7 @@ public void setRequest(@Nullable Request request) {
    * resource, but will also result in incorrect images being loaded and lots of flashing of images
    * in lists. As a result, this will throw an {@link java.lang.IllegalArgumentException} if {@link
    * android.view.View#getTag()}} returns a non null object that is not an {@link
-   * com.bumptech.glide.request.Request}. </p>
+   * Request}. </p>
    */
   @Override
   @Nullable
@@ -310,7 +312,7 @@ private Object getTag() {
    * <p>
    *   Warning: prior to Android 4.0 tags were stored in a static map. Using this method prior
    *   to Android 4.0 may cause memory leaks and isn't recommended. If you do use this method
-   *   on older versions, be sure to call {@link com.bumptech.glide.RequestManager#clear(View)} on
+   *   on older versions, be sure to call {@link RequestManager#clear(View)} on
    *   any view you start a load into to ensure that the static state is removed.
    * </p>
    *
diff --git a/library/src/main/java/com/bumptech/glide/request/transition/BitmapContainerTransitionFactory.java b/library/src/main/java/com/bumptech/glide4/request/transition/BitmapContainerTransitionFactory.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/request/transition/BitmapContainerTransitionFactory.java
rename to library/src/main/java/com/bumptech/glide4/request/transition/BitmapContainerTransitionFactory.java
index 8bec74e45..9b4a1a18b 100644
--- a/library/src/main/java/com/bumptech/glide/request/transition/BitmapContainerTransitionFactory.java
+++ b/library/src/main/java/com/bumptech/glide4/request/transition/BitmapContainerTransitionFactory.java
@@ -1,10 +1,10 @@
-package com.bumptech.glide.request.transition;
+package com.bumptech.glide4.request.transition;
 
 import android.content.res.Resources;
 import android.graphics.Bitmap;
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
-import com.bumptech.glide.load.DataSource;
+import com.bumptech.glide4.load.DataSource;
 
 /**
  * A {@link TransitionFactory} for complex types that have a {@link android.graphics.Bitmap} inside.
diff --git a/library/src/main/java/com/bumptech/glide/request/transition/BitmapTransitionFactory.java b/library/src/main/java/com/bumptech/glide4/request/transition/BitmapTransitionFactory.java
similarity index 93%
rename from library/src/main/java/com/bumptech/glide/request/transition/BitmapTransitionFactory.java
rename to library/src/main/java/com/bumptech/glide4/request/transition/BitmapTransitionFactory.java
index a6982b5d5..696617350 100644
--- a/library/src/main/java/com/bumptech/glide/request/transition/BitmapTransitionFactory.java
+++ b/library/src/main/java/com/bumptech/glide4/request/transition/BitmapTransitionFactory.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request.transition;
+package com.bumptech.glide4.request.transition;
 
 import android.graphics.Bitmap;
 import android.graphics.drawable.Drawable;
diff --git a/library/src/main/java/com/bumptech/glide/request/transition/DrawableCrossFadeFactory.java b/library/src/main/java/com/bumptech/glide4/request/transition/DrawableCrossFadeFactory.java
similarity index 96%
rename from library/src/main/java/com/bumptech/glide/request/transition/DrawableCrossFadeFactory.java
rename to library/src/main/java/com/bumptech/glide4/request/transition/DrawableCrossFadeFactory.java
index 0a8da3056..a9de6ea4e 100644
--- a/library/src/main/java/com/bumptech/glide/request/transition/DrawableCrossFadeFactory.java
+++ b/library/src/main/java/com/bumptech/glide4/request/transition/DrawableCrossFadeFactory.java
@@ -1,7 +1,7 @@
-package com.bumptech.glide.request.transition;
+package com.bumptech.glide4.request.transition;
 
 import android.graphics.drawable.Drawable;
-import com.bumptech.glide.load.DataSource;
+import com.bumptech.glide4.load.DataSource;
 
 /**
  * A factory class that produces a new {@link Transition} that varies depending on whether or not
diff --git a/library/src/main/java/com/bumptech/glide/request/transition/DrawableCrossFadeTransition.java b/library/src/main/java/com/bumptech/glide4/request/transition/DrawableCrossFadeTransition.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/request/transition/DrawableCrossFadeTransition.java
rename to library/src/main/java/com/bumptech/glide4/request/transition/DrawableCrossFadeTransition.java
index 730d84f30..d78676de1 100644
--- a/library/src/main/java/com/bumptech/glide/request/transition/DrawableCrossFadeTransition.java
+++ b/library/src/main/java/com/bumptech/glide4/request/transition/DrawableCrossFadeTransition.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request.transition;
+package com.bumptech.glide4.request.transition;
 
 import android.graphics.Color;
 import android.graphics.drawable.ColorDrawable;
diff --git a/library/src/main/java/com/bumptech/glide/request/transition/NoTransition.java b/library/src/main/java/com/bumptech/glide4/request/transition/NoTransition.java
similarity index 85%
rename from library/src/main/java/com/bumptech/glide/request/transition/NoTransition.java
rename to library/src/main/java/com/bumptech/glide4/request/transition/NoTransition.java
index 1ef48eb2b..fa12e387a 100644
--- a/library/src/main/java/com/bumptech/glide/request/transition/NoTransition.java
+++ b/library/src/main/java/com/bumptech/glide4/request/transition/NoTransition.java
@@ -1,13 +1,14 @@
-package com.bumptech.glide.request.transition;
+package com.bumptech.glide4.request.transition;
 
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.util.Synthetic;
+import com.bumptech.glide4.request.target.Target;
 
 /**
  * A simple {@link Transition} that performs no actions.
  *
  * @param <R> the resource type that will be transitioned into a
- * {@link com.bumptech.glide.request.target.Target}.
+ * {@link Target}.
  */
 public class NoTransition<R> implements Transition<R> {
   @Synthetic static final NoTransition<?> NO_ANIMATION = new NoTransition<>();
@@ -18,7 +19,7 @@
    * A factory that always returns the same {@link NoTransition}.
    *
    * @param <R> the resource type that will be transitioned into a
-   * {@link com.bumptech.glide.request.target.Target}.
+   * {@link Target}.
    */
   public static class NoAnimationFactory<R> implements TransitionFactory<R> {
     @SuppressWarnings("unchecked")
diff --git a/library/src/main/java/com/bumptech/glide/request/transition/Transition.java b/library/src/main/java/com/bumptech/glide4/request/transition/Transition.java
similarity index 93%
rename from library/src/main/java/com/bumptech/glide/request/transition/Transition.java
rename to library/src/main/java/com/bumptech/glide4/request/transition/Transition.java
index 50debd7b9..280ac55dd 100644
--- a/library/src/main/java/com/bumptech/glide/request/transition/Transition.java
+++ b/library/src/main/java/com/bumptech/glide4/request/transition/Transition.java
@@ -1,12 +1,13 @@
-package com.bumptech.glide.request.transition;
+package com.bumptech.glide4.request.transition;
 
 import android.graphics.drawable.Drawable;
 import android.support.annotation.Nullable;
 import android.view.View;
+import com.bumptech.glide4.request.target.Target;
 
 /**
  * An interface that allows a transition to be applied to {@link android.view.View}s in {@link
- * com.bumptech.glide.request.target.Target}s in across resource types. Targets that wrap views will
+ * Target}s in across resource types. Targets that wrap views will
  * be able to provide all of the necessary arguments and start the transition. Those that do not
  * will be unable to provide the necessary arguments and will therefore be forced to ignore the
  * transition. This interface is a compromise that allows view specific transition in Glide's
diff --git a/library/src/main/java/com/bumptech/glide/request/transition/TransitionFactory.java b/library/src/main/java/com/bumptech/glide4/request/transition/TransitionFactory.java
similarity index 72%
rename from library/src/main/java/com/bumptech/glide/request/transition/TransitionFactory.java
rename to library/src/main/java/com/bumptech/glide4/request/transition/TransitionFactory.java
index 727b508a7..124a4d7d6 100644
--- a/library/src/main/java/com/bumptech/glide/request/transition/TransitionFactory.java
+++ b/library/src/main/java/com/bumptech/glide4/request/transition/TransitionFactory.java
@@ -1,6 +1,6 @@
-package com.bumptech.glide.request.transition;
+package com.bumptech.glide4.request.transition;
 
-import com.bumptech.glide.load.DataSource;
+import com.bumptech.glide4.load.DataSource;
 
 /**
  * A factory class that can produce different {@link Transition}s based on the state of the
@@ -13,7 +13,7 @@
   /**
    * Returns a new {@link Transition}.
    *
-   * @param dataSource      The {@link com.bumptech.glide.load.DataSource} the resource was loaded
+   * @param dataSource      The {@link DataSource} the resource was loaded
    *                        from.
    * @param isFirstResource True if this is the first resource to be loaded into the target.
    */
diff --git a/library/src/main/java/com/bumptech/glide/request/transition/ViewAnimationFactory.java b/library/src/main/java/com/bumptech/glide4/request/transition/ViewAnimationFactory.java
similarity index 96%
rename from library/src/main/java/com/bumptech/glide/request/transition/ViewAnimationFactory.java
rename to library/src/main/java/com/bumptech/glide4/request/transition/ViewAnimationFactory.java
index e5a2cec05..5dc1a96fc 100644
--- a/library/src/main/java/com/bumptech/glide/request/transition/ViewAnimationFactory.java
+++ b/library/src/main/java/com/bumptech/glide4/request/transition/ViewAnimationFactory.java
@@ -1,9 +1,9 @@
-package com.bumptech.glide.request.transition;
+package com.bumptech.glide4.request.transition;
 
 import android.content.Context;
 import android.view.animation.Animation;
 import android.view.animation.AnimationUtils;
-import com.bumptech.glide.load.DataSource;
+import com.bumptech.glide4.load.DataSource;
 
 /**
  * A {@link TransitionFactory} that produces {@link ViewTransition}s.
diff --git a/library/src/main/java/com/bumptech/glide/request/transition/ViewPropertyAnimationFactory.java b/library/src/main/java/com/bumptech/glide4/request/transition/ViewPropertyAnimationFactory.java
similarity index 92%
rename from library/src/main/java/com/bumptech/glide/request/transition/ViewPropertyAnimationFactory.java
rename to library/src/main/java/com/bumptech/glide4/request/transition/ViewPropertyAnimationFactory.java
index ca8bdd548..572c4b30d 100644
--- a/library/src/main/java/com/bumptech/glide/request/transition/ViewPropertyAnimationFactory.java
+++ b/library/src/main/java/com/bumptech/glide4/request/transition/ViewPropertyAnimationFactory.java
@@ -1,6 +1,6 @@
-package com.bumptech.glide.request.transition;
+package com.bumptech.glide4.request.transition;
 
-import com.bumptech.glide.load.DataSource;
+import com.bumptech.glide4.load.DataSource;
 
 /**
  * A {@link TransitionFactory} that produces ViewPropertyAnimations.
diff --git a/library/src/main/java/com/bumptech/glide/request/transition/ViewPropertyTransition.java b/library/src/main/java/com/bumptech/glide4/request/transition/ViewPropertyTransition.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/request/transition/ViewPropertyTransition.java
rename to library/src/main/java/com/bumptech/glide4/request/transition/ViewPropertyTransition.java
index 45e75f760..dd2856244 100644
--- a/library/src/main/java/com/bumptech/glide/request/transition/ViewPropertyTransition.java
+++ b/library/src/main/java/com/bumptech/glide4/request/transition/ViewPropertyTransition.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request.transition;
+package com.bumptech.glide4.request.transition;
 
 import android.view.View;
 
diff --git a/library/src/main/java/com/bumptech/glide/request/transition/ViewTransition.java b/library/src/main/java/com/bumptech/glide4/request/transition/ViewTransition.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/request/transition/ViewTransition.java
rename to library/src/main/java/com/bumptech/glide4/request/transition/ViewTransition.java
index c8a18cb6c..36177630d 100644
--- a/library/src/main/java/com/bumptech/glide/request/transition/ViewTransition.java
+++ b/library/src/main/java/com/bumptech/glide4/request/transition/ViewTransition.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request.transition;
+package com.bumptech.glide4.request.transition;
 
 import android.content.Context;
 import android.view.View;
diff --git a/library/src/main/java/com/bumptech/glide/signature/ApplicationVersionSignature.java b/library/src/main/java/com/bumptech/glide4/signature/ApplicationVersionSignature.java
similarity index 89%
rename from library/src/main/java/com/bumptech/glide/signature/ApplicationVersionSignature.java
rename to library/src/main/java/com/bumptech/glide4/signature/ApplicationVersionSignature.java
index 21d86931d..c185eceb3 100644
--- a/library/src/main/java/com/bumptech/glide/signature/ApplicationVersionSignature.java
+++ b/library/src/main/java/com/bumptech/glide4/signature/ApplicationVersionSignature.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.signature;
+package com.bumptech.glide4.signature;
 
 import android.content.Context;
 import android.content.pm.PackageInfo;
@@ -7,13 +7,14 @@
 import android.support.annotation.Nullable;
 import android.support.annotation.VisibleForTesting;
 import android.util.Log;
-import com.bumptech.glide.load.Key;
+import com.bumptech.glide4.load.Key;
+
 import java.util.UUID;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ConcurrentMap;
 
 /**
- * A utility class for obtaining a {@link com.bumptech.glide.load.Key} signature containing the
+ * A utility class for obtaining a {@link Key} signature containing the
  * application version name using {@link android.content.pm.PackageInfo#versionCode}.
  */
 public final class ApplicationVersionSignature {
@@ -21,7 +22,7 @@
   private static final ConcurrentMap<String, Key> PACKAGE_NAME_TO_KEY = new ConcurrentHashMap<>();
 
   /**
-   * Returns the signature {@link com.bumptech.glide.load.Key} for version code of the Application
+   * Returns the signature {@link Key} for version code of the Application
    * of the given Context.
    */
   @NonNull
diff --git a/library/src/main/java/com/bumptech/glide/signature/EmptySignature.java b/library/src/main/java/com/bumptech/glide4/signature/EmptySignature.java
similarity index 88%
rename from library/src/main/java/com/bumptech/glide/signature/EmptySignature.java
rename to library/src/main/java/com/bumptech/glide4/signature/EmptySignature.java
index 2763433aa..250da6d05 100644
--- a/library/src/main/java/com/bumptech/glide/signature/EmptySignature.java
+++ b/library/src/main/java/com/bumptech/glide4/signature/EmptySignature.java
@@ -1,7 +1,8 @@
-package com.bumptech.glide.signature;
+package com.bumptech.glide4.signature;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Key;
+import com.bumptech.glide4.load.Key;
+
 import java.security.MessageDigest;
 
 /**
diff --git a/library/src/main/java/com/bumptech/glide/signature/MediaStoreSignature.java b/library/src/main/java/com/bumptech/glide4/signature/MediaStoreSignature.java
similarity index 94%
rename from library/src/main/java/com/bumptech/glide/signature/MediaStoreSignature.java
rename to library/src/main/java/com/bumptech/glide4/signature/MediaStoreSignature.java
index bb0e06b6e..afb15b0bc 100644
--- a/library/src/main/java/com/bumptech/glide/signature/MediaStoreSignature.java
+++ b/library/src/main/java/com/bumptech/glide4/signature/MediaStoreSignature.java
@@ -1,8 +1,9 @@
-package com.bumptech.glide.signature;
+package com.bumptech.glide4.signature;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Key;
+import com.bumptech.glide4.load.Key;
+
 import java.nio.ByteBuffer;
 import java.security.MessageDigest;
 
@@ -16,7 +17,7 @@
   private final int orientation;
 
   /**
-   * Constructor for {@link com.bumptech.glide.signature.MediaStoreSignature}.
+   * Constructor for {@link MediaStoreSignature}.
    *
    * @param mimeType     The mime type of the media store media. Ok to default to empty string "".
    *                     See {@link android.provider.MediaStore.Images.ImageColumns#MIME_TYPE} or
diff --git a/library/src/main/java/com/bumptech/glide/signature/ObjectKey.java b/library/src/main/java/com/bumptech/glide4/signature/ObjectKey.java
similarity index 90%
rename from library/src/main/java/com/bumptech/glide/signature/ObjectKey.java
rename to library/src/main/java/com/bumptech/glide4/signature/ObjectKey.java
index ed3ea19e8..1ee1bf6dc 100644
--- a/library/src/main/java/com/bumptech/glide/signature/ObjectKey.java
+++ b/library/src/main/java/com/bumptech/glide4/signature/ObjectKey.java
@@ -1,8 +1,9 @@
-package com.bumptech.glide.signature;
+package com.bumptech.glide4.signature;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.util.Preconditions;
+
 import java.security.MessageDigest;
 
 /**
diff --git a/library/src/main/java/com/bumptech/glide/util/ByteBufferUtil.java b/library/src/main/java/com/bumptech/glide4/util/ByteBufferUtil.java
similarity index 99%
rename from library/src/main/java/com/bumptech/glide/util/ByteBufferUtil.java
rename to library/src/main/java/com/bumptech/glide4/util/ByteBufferUtil.java
index c1e11a194..7c518efe6 100644
--- a/library/src/main/java/com/bumptech/glide/util/ByteBufferUtil.java
+++ b/library/src/main/java/com/bumptech/glide4/util/ByteBufferUtil.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.util;
+package com.bumptech.glide4.util;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
diff --git a/library/src/main/java/com/bumptech/glide/util/CachedHashCodeArrayMap.java b/library/src/main/java/com/bumptech/glide4/util/CachedHashCodeArrayMap.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/util/CachedHashCodeArrayMap.java
rename to library/src/main/java/com/bumptech/glide4/util/CachedHashCodeArrayMap.java
index ff9573a84..63e74818e 100644
--- a/library/src/main/java/com/bumptech/glide/util/CachedHashCodeArrayMap.java
+++ b/library/src/main/java/com/bumptech/glide4/util/CachedHashCodeArrayMap.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.util;
+package com.bumptech.glide4.util;
 
 import android.support.v4.util.ArrayMap;
 import android.support.v4.util.SimpleArrayMap;
diff --git a/library/src/main/java/com/bumptech/glide/util/ContentLengthInputStream.java b/library/src/main/java/com/bumptech/glide4/util/ContentLengthInputStream.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/util/ContentLengthInputStream.java
rename to library/src/main/java/com/bumptech/glide4/util/ContentLengthInputStream.java
index 2b0283e03..f0b16a175 100644
--- a/library/src/main/java/com/bumptech/glide/util/ContentLengthInputStream.java
+++ b/library/src/main/java/com/bumptech/glide4/util/ContentLengthInputStream.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.util;
+package com.bumptech.glide4.util;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
diff --git a/library/src/main/java/com/bumptech/glide/util/ExceptionCatchingInputStream.java b/library/src/main/java/com/bumptech/glide4/util/ExceptionCatchingInputStream.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/util/ExceptionCatchingInputStream.java
rename to library/src/main/java/com/bumptech/glide4/util/ExceptionCatchingInputStream.java
index 3f5b05fb0..02a036930 100644
--- a/library/src/main/java/com/bumptech/glide/util/ExceptionCatchingInputStream.java
+++ b/library/src/main/java/com/bumptech/glide4/util/ExceptionCatchingInputStream.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.util;
+package com.bumptech.glide4.util;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
diff --git a/library/src/main/java/com/bumptech/glide/util/Executors.java b/library/src/main/java/com/bumptech/glide4/util/Executors.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/util/Executors.java
rename to library/src/main/java/com/bumptech/glide4/util/Executors.java
index c37a558d0..e2688061f 100644
--- a/library/src/main/java/com/bumptech/glide/util/Executors.java
+++ b/library/src/main/java/com/bumptech/glide4/util/Executors.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.util;
+package com.bumptech.glide4.util;
 
 import android.os.Handler;
 import android.os.Looper;
diff --git a/library/src/main/java/com/bumptech/glide/util/FixedPreloadSizeProvider.java b/library/src/main/java/com/bumptech/glide4/util/FixedPreloadSizeProvider.java
similarity index 85%
rename from library/src/main/java/com/bumptech/glide/util/FixedPreloadSizeProvider.java
rename to library/src/main/java/com/bumptech/glide4/util/FixedPreloadSizeProvider.java
index 08b7ed3ba..f06284521 100644
--- a/library/src/main/java/com/bumptech/glide/util/FixedPreloadSizeProvider.java
+++ b/library/src/main/java/com/bumptech/glide4/util/FixedPreloadSizeProvider.java
@@ -1,11 +1,11 @@
-package com.bumptech.glide.util;
+package com.bumptech.glide4.util;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.ListPreloader;
+import com.bumptech.glide4.ListPreloader;
 
 /**
- * A {@link com.bumptech.glide.ListPreloader.PreloadSizeProvider} with a fixed width and height.
+ * A {@link ListPreloader.PreloadSizeProvider} with a fixed width and height.
  *
  * @param <T> The type of the model the size should be provided for.
  */
diff --git a/library/src/main/java/com/bumptech/glide/util/LogTime.java b/library/src/main/java/com/bumptech/glide4/util/LogTime.java
similarity index 96%
rename from library/src/main/java/com/bumptech/glide/util/LogTime.java
rename to library/src/main/java/com/bumptech/glide4/util/LogTime.java
index 58ddd6269..0676e2240 100644
--- a/library/src/main/java/com/bumptech/glide/util/LogTime.java
+++ b/library/src/main/java/com/bumptech/glide4/util/LogTime.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.util;
+package com.bumptech.glide4.util;
 
 import android.annotation.TargetApi;
 import android.os.Build;
diff --git a/library/src/main/java/com/bumptech/glide/util/LruCache.java b/library/src/main/java/com/bumptech/glide4/util/LruCache.java
similarity index 99%
rename from library/src/main/java/com/bumptech/glide/util/LruCache.java
rename to library/src/main/java/com/bumptech/glide4/util/LruCache.java
index a2cd7d822..0aa9eb28e 100644
--- a/library/src/main/java/com/bumptech/glide/util/LruCache.java
+++ b/library/src/main/java/com/bumptech/glide4/util/LruCache.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.util;
+package com.bumptech.glide4.util;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
diff --git a/library/src/main/java/com/bumptech/glide/util/MarkEnforcingInputStream.java b/library/src/main/java/com/bumptech/glide4/util/MarkEnforcingInputStream.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/util/MarkEnforcingInputStream.java
rename to library/src/main/java/com/bumptech/glide4/util/MarkEnforcingInputStream.java
index d2ce2841d..0aa52a45e 100644
--- a/library/src/main/java/com/bumptech/glide/util/MarkEnforcingInputStream.java
+++ b/library/src/main/java/com/bumptech/glide4/util/MarkEnforcingInputStream.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.util;
+package com.bumptech.glide4.util;
 
 import android.support.annotation.NonNull;
 import java.io.FilterInputStream;
diff --git a/library/src/main/java/com/bumptech/glide/util/MultiClassKey.java b/library/src/main/java/com/bumptech/glide4/util/MultiClassKey.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/util/MultiClassKey.java
rename to library/src/main/java/com/bumptech/glide4/util/MultiClassKey.java
index 54fac7310..4ef7ced04 100644
--- a/library/src/main/java/com/bumptech/glide/util/MultiClassKey.java
+++ b/library/src/main/java/com/bumptech/glide4/util/MultiClassKey.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.util;
+package com.bumptech.glide4.util;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
diff --git a/library/src/main/java/com/bumptech/glide/util/Preconditions.java b/library/src/main/java/com/bumptech/glide4/util/Preconditions.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/util/Preconditions.java
rename to library/src/main/java/com/bumptech/glide4/util/Preconditions.java
index 4ca650fc7..c1ee6ce98 100644
--- a/library/src/main/java/com/bumptech/glide/util/Preconditions.java
+++ b/library/src/main/java/com/bumptech/glide4/util/Preconditions.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.util;
+package com.bumptech.glide4.util;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
diff --git a/library/src/main/java/com/bumptech/glide/util/Synthetic.java b/library/src/main/java/com/bumptech/glide4/util/Synthetic.java
similarity index 92%
rename from library/src/main/java/com/bumptech/glide/util/Synthetic.java
rename to library/src/main/java/com/bumptech/glide4/util/Synthetic.java
index 0d1140b04..dd05886f4 100644
--- a/library/src/main/java/com/bumptech/glide/util/Synthetic.java
+++ b/library/src/main/java/com/bumptech/glide4/util/Synthetic.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.util;
+package com.bumptech.glide4.util;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
diff --git a/library/src/main/java/com/bumptech/glide/util/Util.java b/library/src/main/java/com/bumptech/glide4/util/Util.java
similarity index 98%
rename from library/src/main/java/com/bumptech/glide/util/Util.java
rename to library/src/main/java/com/bumptech/glide4/util/Util.java
index de4b3784b..eaac93705 100644
--- a/library/src/main/java/com/bumptech/glide/util/Util.java
+++ b/library/src/main/java/com/bumptech/glide4/util/Util.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.util;
+package com.bumptech.glide4.util;
 
 import android.annotation.TargetApi;
 import android.graphics.Bitmap;
@@ -6,8 +6,9 @@
 import android.os.Looper;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.model.Model;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.load.model.Model;
+import com.bumptech.glide4.request.target.Target;
+
 import java.util.ArrayDeque;
 import java.util.ArrayList;
 import java.util.Collection;
diff --git a/library/src/main/java/com/bumptech/glide/util/ViewPreloadSizeProvider.java b/library/src/main/java/com/bumptech/glide4/util/ViewPreloadSizeProvider.java
similarity index 87%
rename from library/src/main/java/com/bumptech/glide/util/ViewPreloadSizeProvider.java
rename to library/src/main/java/com/bumptech/glide4/util/ViewPreloadSizeProvider.java
index 90580d544..e90497b08 100644
--- a/library/src/main/java/com/bumptech/glide/util/ViewPreloadSizeProvider.java
+++ b/library/src/main/java/com/bumptech/glide4/util/ViewPreloadSizeProvider.java
@@ -1,22 +1,23 @@
-package com.bumptech.glide.util;
+package com.bumptech.glide4.util;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.view.View;
-import com.bumptech.glide.ListPreloader;
-import com.bumptech.glide.request.target.SizeReadyCallback;
-import com.bumptech.glide.request.target.ViewTarget;
-import com.bumptech.glide.request.transition.Transition;
+import com.bumptech.glide4.ListPreloader;
+import com.bumptech.glide4.request.target.SizeReadyCallback;
+import com.bumptech.glide4.request.target.ViewTarget;
+import com.bumptech.glide4.request.transition.Transition;
+
 import java.util.Arrays;
 
 /**
- * A {@link com.bumptech.glide.ListPreloader.PreloadSizeProvider} that will extract the preload size
+ * A {@link ListPreloader.PreloadSizeProvider} that will extract the preload size
  * from a given {@link android.view.View}.
  *
  * @param <T> The type of the model the size should be provided for.
  */
 public class ViewPreloadSizeProvider<T> implements ListPreloader.PreloadSizeProvider<T>,
-    SizeReadyCallback {
+        SizeReadyCallback {
   private int[] size;
   // We need to keep a strong reference to the Target so that it isn't garbage collected due to a
   // weak reference
diff --git a/library/src/main/java/com/bumptech/glide/util/pool/FactoryPools.java b/library/src/main/java/com/bumptech/glide4/util/pool/FactoryPools.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/util/pool/FactoryPools.java
rename to library/src/main/java/com/bumptech/glide4/util/pool/FactoryPools.java
index 12e641dc5..fbf3f12df 100644
--- a/library/src/main/java/com/bumptech/glide/util/pool/FactoryPools.java
+++ b/library/src/main/java/com/bumptech/glide4/util/pool/FactoryPools.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.util.pool;
+package com.bumptech.glide4.util.pool;
 
 import android.support.annotation.NonNull;
 import android.support.v4.util.Pools.Pool;
@@ -10,7 +10,7 @@
 
 /**
  * Provides implementations of {@link Pool} never return {@code null}, log when new instances are
- * created, and that can use the {@link com.bumptech.glide.util.pool.FactoryPools.Poolable}
+ * created, and that can use the {@link FactoryPools.Poolable}
  * interface to ensure objects aren't used while inside the pool.
  */
 public final class FactoryPools {
diff --git a/library/src/main/java/com/bumptech/glide/util/pool/GlideTrace.java b/library/src/main/java/com/bumptech/glide4/util/pool/GlideTrace.java
similarity index 97%
rename from library/src/main/java/com/bumptech/glide/util/pool/GlideTrace.java
rename to library/src/main/java/com/bumptech/glide4/util/pool/GlideTrace.java
index 78c4f0fa3..ec10c7594 100644
--- a/library/src/main/java/com/bumptech/glide/util/pool/GlideTrace.java
+++ b/library/src/main/java/com/bumptech/glide4/util/pool/GlideTrace.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.util.pool;
+package com.bumptech.glide4.util.pool;
 
 import android.support.v4.os.TraceCompat;
 
diff --git a/library/src/main/java/com/bumptech/glide/util/pool/StateVerifier.java b/library/src/main/java/com/bumptech/glide4/util/pool/StateVerifier.java
similarity index 95%
rename from library/src/main/java/com/bumptech/glide/util/pool/StateVerifier.java
rename to library/src/main/java/com/bumptech/glide4/util/pool/StateVerifier.java
index 79e0b40aa..985baa4ab 100644
--- a/library/src/main/java/com/bumptech/glide/util/pool/StateVerifier.java
+++ b/library/src/main/java/com/bumptech/glide4/util/pool/StateVerifier.java
@@ -1,7 +1,7 @@
-package com.bumptech.glide.util.pool;
+package com.bumptech.glide4.util.pool;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.util.Synthetic;
+import com.bumptech.glide4.util.Synthetic;
 
 /**
  * Verifies that the job is not in the recycled state.
diff --git a/library/src/test/java/com/bumptech/glide/request/target/CustomViewTargetTest.java b/library/src/test/java/com/bumptech/glide4/request/target/CustomViewTargetTest.java
similarity index 98%
rename from library/src/test/java/com/bumptech/glide/request/target/CustomViewTargetTest.java
rename to library/src/test/java/com/bumptech/glide4/request/target/CustomViewTargetTest.java
index 21a15ded9..080f0d57e 100644
--- a/library/src/test/java/com/bumptech/glide/request/target/CustomViewTargetTest.java
+++ b/library/src/test/java/com/bumptech/glide4/request/target/CustomViewTargetTest.java
@@ -1,4 +1,4 @@
-package com.bumptech.glide.request.target;
+package com.bumptech.glide4.request.target;
 
 import static android.view.ViewGroup.LayoutParams;
 import static org.junit.Assert.assertEquals;
@@ -27,9 +27,11 @@
 import android.view.WindowManager;
 import android.widget.FrameLayout;
 import android.widget.LinearLayout;
-import com.bumptech.glide.request.Request;
-import com.bumptech.glide.request.transition.Transition;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.request.target.CustomViewTarget;
+import com.bumptech.glide4.request.target.SizeReadyCallback;
+import com.bumptech.glide4.request.transition.Transition;
+import com.bumptech.glide4.util.Preconditions;
 import com.google.common.truth.Truth;
 import java.util.concurrent.atomic.AtomicInteger;
 import org.junit.After;
diff --git a/library/test/src/test/java/com/bumptech/glide/GlideContextTest.java b/library/test/src/test/java/com/bumptech/glide/GlideContextTest.java
index 41e8201fb..16cf81668 100644
--- a/library/test/src/test/java/com/bumptech/glide/GlideContextTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/GlideContextTest.java
@@ -8,13 +8,17 @@
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
 import android.util.Log;
-import com.bumptech.glide.load.engine.Engine;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool;
-import com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions;
-import com.bumptech.glide.load.resource.gif.GifDrawable;
-import com.bumptech.glide.request.RequestListener;
-import com.bumptech.glide.request.RequestOptions;
-import com.bumptech.glide.request.target.ImageViewTargetFactory;
+import com.bumptech.glide4.GenericTransitionOptions;
+import com.bumptech.glide4.GlideContext;
+import com.bumptech.glide4.Registry;
+import com.bumptech.glide4.TransitionOptions;
+import com.bumptech.glide4.load.engine.Engine;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruArrayPool;
+import com.bumptech.glide4.load.resource.drawable.DrawableTransitionOptions;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.request.RequestListener;
+import com.bumptech.glide4.request.RequestOptions;
+import com.bumptech.glide4.request.target.ImageViewTargetFactory;
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.Map;
diff --git a/library/test/src/test/java/com/bumptech/glide/GlideTest.java b/library/test/src/test/java/com/bumptech/glide/GlideTest.java
index 7efa6b523..0453d3941 100644
--- a/library/test/src/test/java/com/bumptech/glide/GlideTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/GlideTest.java
@@ -1,8 +1,8 @@
 package com.bumptech.glide;
 
-import static com.bumptech.glide.request.RequestOptions.decodeTypeOf;
-import static com.bumptech.glide.request.RequestOptions.errorOf;
-import static com.bumptech.glide.request.RequestOptions.placeholderOf;
+import static com.bumptech.glide4.request.RequestOptions.decodeTypeOf;
+import static com.bumptech.glide4.request.RequestOptions.errorOf;
+import static com.bumptech.glide4.request.RequestOptions.placeholderOf;
 import static com.google.common.truth.Truth.assertThat;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotNull;
@@ -33,35 +33,36 @@
 import android.support.annotation.Nullable;
 import android.view.ViewGroup;
 import android.widget.ImageView;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.engine.GlideException;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.engine.cache.DiskCache;
-import com.bumptech.glide.load.engine.cache.MemoryCache;
-import com.bumptech.glide.load.engine.executor.GlideExecutor;
+import com.bumptech.glide4.*;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.engine.GlideException;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.cache.DiskCache;
+import com.bumptech.glide4.load.engine.cache.MemoryCache;
+import com.bumptech.glide4.load.engine.executor.GlideExecutor;
 import com.bumptech.glide.load.engine.executor.MockGlideExecutor;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoaderFactory;
-import com.bumptech.glide.load.model.MultiModelLoaderFactory;
-import com.bumptech.glide.load.resource.gif.GifDrawable;
-import com.bumptech.glide.manager.Lifecycle;
-import com.bumptech.glide.manager.RequestManagerTreeNode;
-import com.bumptech.glide.request.Request;
-import com.bumptech.glide.request.RequestListener;
-import com.bumptech.glide.request.RequestOptions;
-import com.bumptech.glide.request.target.SimpleTarget;
-import com.bumptech.glide.request.target.SizeReadyCallback;
-import com.bumptech.glide.request.target.Target;
-import com.bumptech.glide.request.transition.Transition;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.model.MultiModelLoaderFactory;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.manager.Lifecycle;
+import com.bumptech.glide4.manager.RequestManagerTreeNode;
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.request.RequestListener;
+import com.bumptech.glide4.request.RequestOptions;
+import com.bumptech.glide4.request.target.SimpleTarget;
+import com.bumptech.glide4.request.target.SizeReadyCallback;
+import com.bumptech.glide4.request.target.Target;
+import com.bumptech.glide4.request.transition.Transition;
 import com.bumptech.glide.tests.GlideShadowLooper;
 import com.bumptech.glide.tests.TearDownGlide;
 import com.bumptech.glide.tests.Util;
 import com.bumptech.glide.testutil.TestResourceUtil;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.util.Preconditions;
 import java.io.ByteArrayInputStream;
 import java.io.File;
 import java.io.InputStream;
diff --git a/library/test/src/test/java/com/bumptech/glide/ListPreloaderTest.java b/library/test/src/test/java/com/bumptech/glide/ListPreloaderTest.java
index e6c957d27..72ed4312a 100644
--- a/library/test/src/test/java/com/bumptech/glide/ListPreloaderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/ListPreloaderTest.java
@@ -10,8 +10,11 @@
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.request.target.SizeReadyCallback;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.ListPreloader;
+import com.bumptech.glide4.RequestBuilder;
+import com.bumptech.glide4.RequestManager;
+import com.bumptech.glide4.request.target.SizeReadyCallback;
+import com.bumptech.glide4.request.target.Target;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
diff --git a/library/test/src/test/java/com/bumptech/glide/RegistryTest.java b/library/test/src/test/java/com/bumptech/glide/RegistryTest.java
index defe8463b..63d370594 100644
--- a/library/test/src/test/java/com/bumptech/glide/RegistryTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/RegistryTest.java
@@ -2,9 +2,10 @@
 
 import static com.google.common.truth.Truth.assertThat;
 
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.model.ModelLoaderFactory;
-import com.bumptech.glide.load.resource.transcode.ResourceTranscoder;
+import com.bumptech.glide4.Registry;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.resource.transcode.ResourceTranscoder;
 import java.util.List;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/library/test/src/test/java/com/bumptech/glide/RequestBuilderTest.java b/library/test/src/test/java/com/bumptech/glide/RequestBuilderTest.java
index 70b7a084c..df114e787 100644
--- a/library/test/src/test/java/com/bumptech/glide/RequestBuilderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/RequestBuilderTest.java
@@ -12,14 +12,15 @@
 
 import android.app.Application;
 import android.widget.ImageView;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.resource.SimpleResource;
-import com.bumptech.glide.request.Request;
-import com.bumptech.glide.request.RequestListener;
-import com.bumptech.glide.request.RequestOptions;
-import com.bumptech.glide.request.SingleRequest;
-import com.bumptech.glide.request.target.Target;
-import com.bumptech.glide.request.target.ViewTarget;
+import com.bumptech.glide4.*;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.resource.SimpleResource;
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.request.RequestListener;
+import com.bumptech.glide4.request.RequestOptions;
+import com.bumptech.glide4.request.SingleRequest;
+import com.bumptech.glide4.request.target.Target;
+import com.bumptech.glide4.request.target.ViewTarget;
 import com.bumptech.glide.tests.BackgroundUtil.BackgroundTester;
 import com.bumptech.glide.tests.TearDownGlide;
 import org.junit.Before;
diff --git a/library/test/src/test/java/com/bumptech/glide/RequestManagerTest.java b/library/test/src/test/java/com/bumptech/glide/RequestManagerTest.java
index 9a60f6f2e..58c10e68e 100644
--- a/library/test/src/test/java/com/bumptech/glide/RequestManagerTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/RequestManagerTest.java
@@ -15,15 +15,17 @@
 import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.manager.ConnectivityMonitor;
-import com.bumptech.glide.manager.ConnectivityMonitor.ConnectivityListener;
-import com.bumptech.glide.manager.ConnectivityMonitorFactory;
-import com.bumptech.glide.manager.Lifecycle;
-import com.bumptech.glide.manager.RequestManagerTreeNode;
-import com.bumptech.glide.manager.RequestTracker;
-import com.bumptech.glide.request.target.BaseTarget;
-import com.bumptech.glide.request.target.SizeReadyCallback;
-import com.bumptech.glide.request.transition.Transition;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.RequestManager;
+import com.bumptech.glide4.manager.ConnectivityMonitor;
+import com.bumptech.glide4.manager.ConnectivityMonitor.ConnectivityListener;
+import com.bumptech.glide4.manager.ConnectivityMonitorFactory;
+import com.bumptech.glide4.manager.Lifecycle;
+import com.bumptech.glide4.manager.RequestManagerTreeNode;
+import com.bumptech.glide4.manager.RequestTracker;
+import com.bumptech.glide4.request.target.BaseTarget;
+import com.bumptech.glide4.request.target.SizeReadyCallback;
+import com.bumptech.glide4.request.transition.Transition;
 import com.bumptech.glide.tests.BackgroundUtil;
 import com.bumptech.glide.tests.GlideShadowLooper;
 import com.bumptech.glide.tests.TearDownGlide;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/MultiTransformationTest.java b/library/test/src/test/java/com/bumptech/glide/load/MultiTransformationTest.java
index 6f2fc9d50..d0ddd701a 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/MultiTransformationTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/MultiTransformationTest.java
@@ -13,7 +13,9 @@
 import static org.mockito.Mockito.when;
 
 import android.app.Application;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.MultiTransformation;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.Resource;
 import com.bumptech.glide.tests.KeyTester;
 import com.bumptech.glide.tests.Util;
 import java.security.MessageDigest;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/OptionsTest.java b/library/test/src/test/java/com/bumptech/glide/load/OptionsTest.java
index 67ee5b193..73bf7b470 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/OptionsTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/OptionsTest.java
@@ -1,10 +1,13 @@
 package com.bumptech.glide.load;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Option.CacheKeyUpdater;
+import com.bumptech.glide4.load.Option;
+import com.bumptech.glide4.load.Option.CacheKeyUpdater;
 import com.bumptech.glide.tests.KeyTester;
 import java.nio.ByteBuffer;
 import java.security.MessageDigest;
+
+import com.bumptech.glide4.load.Options;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/data/BufferedOutputStreamFuzzTest.java b/library/test/src/test/java/com/bumptech/glide/load/data/BufferedOutputStreamFuzzTest.java
index 21e6120a1..2f16a118f 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/data/BufferedOutputStreamFuzzTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/data/BufferedOutputStreamFuzzTest.java
@@ -5,7 +5,8 @@
 import static org.mockito.Matchers.eq;
 import static org.mockito.Mockito.when;
 
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.data.BufferedOutputStream;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
 import java.util.ArrayList;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/data/BufferedOutputStreamTest.java b/library/test/src/test/java/com/bumptech/glide/load/data/BufferedOutputStreamTest.java
index ab32ce4a5..958fa7d98 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/data/BufferedOutputStreamTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/data/BufferedOutputStreamTest.java
@@ -11,7 +11,8 @@
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.data.BufferedOutputStream;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
 import java.io.OutputStream;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/data/ExifOrientationStreamTest.java b/library/test/src/test/java/com/bumptech/glide/load/data/ExifOrientationStreamTest.java
index 77c6a93f5..4a2b647c9 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/data/ExifOrientationStreamTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/data/ExifOrientationStreamTest.java
@@ -2,9 +2,10 @@
 
 import static com.google.common.truth.Truth.assertThat;
 
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool;
-import com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser;
+import com.bumptech.glide4.load.data.ExifOrientationStream;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruArrayPool;
+import com.bumptech.glide4.load.resource.bitmap.DefaultImageHeaderParser;
 import com.bumptech.glide.testutil.TestResourceUtil;
 import java.io.IOException;
 import java.io.InputStream;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/data/FileDescriptorAssetPathFetcherTest.java b/library/test/src/test/java/com/bumptech/glide/load/data/FileDescriptorAssetPathFetcherTest.java
index ef1bad28b..5f5340aa4 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/data/FileDescriptorAssetPathFetcherTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/data/FileDescriptorAssetPathFetcherTest.java
@@ -9,8 +9,11 @@
 import android.content.res.AssetFileDescriptor;
 import android.content.res.AssetManager;
 import android.os.ParcelFileDescriptor;
-import com.bumptech.glide.Priority;
+import com.bumptech.glide4.Priority;
 import java.io.IOException;
+
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.data.FileDescriptorAssetPathFetcher;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/data/HttpUrlFetcherServerTest.java b/library/test/src/test/java/com/bumptech/glide/load/data/HttpUrlFetcherServerTest.java
index 044bf30e8..c1674d419 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/data/HttpUrlFetcherServerTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/data/HttpUrlFetcherServerTest.java
@@ -6,9 +6,11 @@
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.load.model.Headers;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.data.HttpUrlFetcher;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.Headers;
 import com.bumptech.glide.testutil.TestUtil;
 import java.io.IOException;
 import java.io.InputStream;
@@ -31,7 +33,7 @@
 import org.robolectric.annotation.Config;
 
 /**
- * Tests {@link com.bumptech.glide.load.data.HttpUrlFetcher} against server responses. Tests for
+ * Tests {@link HttpUrlFetcher} against server responses. Tests for
  * behavior (connection/disconnection/options) should go in
  * {@link com.bumptech.glide.load.data.HttpUrlFetcherTest}, response handling should go here.
  */
diff --git a/library/test/src/test/java/com/bumptech/glide/load/data/HttpUrlFetcherTest.java b/library/test/src/test/java/com/bumptech/glide/load/data/HttpUrlFetcherTest.java
index 9cd87e418..0bdfe7b57 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/data/HttpUrlFetcherTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/data/HttpUrlFetcherTest.java
@@ -7,8 +7,10 @@
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.model.GlideUrl;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.data.HttpUrlFetcher;
+import com.bumptech.glide4.load.model.GlideUrl;
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.io.InputStream;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/data/LocalUriFetcherTest.java b/library/test/src/test/java/com/bumptech/glide/load/data/LocalUriFetcherTest.java
index 9ca7a2924..bc62722e1 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/data/LocalUriFetcherTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/data/LocalUriFetcherTest.java
@@ -9,10 +9,13 @@
 import android.content.Context;
 import android.net.Uri;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Priority;
+import com.bumptech.glide4.Priority;
 import java.io.Closeable;
 import java.io.FileNotFoundException;
 import java.io.IOException;
+
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.data.LocalUriFetcher;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/data/StreamAssetPathFetcherTest.java b/library/test/src/test/java/com/bumptech/glide/load/data/StreamAssetPathFetcherTest.java
index fb7e125ac..eaf09be70 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/data/StreamAssetPathFetcherTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/data/StreamAssetPathFetcherTest.java
@@ -6,9 +6,12 @@
 import static org.mockito.Mockito.when;
 
 import android.content.res.AssetManager;
-import com.bumptech.glide.Priority;
+import com.bumptech.glide4.Priority;
 import java.io.IOException;
 import java.io.InputStream;
+
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.data.StreamAssetPathFetcher;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/data/mediastore/ThumbFetcherTest.java b/library/test/src/test/java/com/bumptech/glide/load/data/mediastore/ThumbFetcherTest.java
index 0b59d74b1..d1ddbf4dc 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/data/mediastore/ThumbFetcherTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/data/mediastore/ThumbFetcherTest.java
@@ -7,9 +7,12 @@
 
 import android.net.Uri;
 import android.provider.MediaStore;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.data.DataFetcher;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.data.DataFetcher;
 import java.io.InputStream;
+
+import com.bumptech.glide4.load.data.mediastore.ThumbFetcher;
+import com.bumptech.glide4.load.data.mediastore.ThumbnailStreamOpener;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/data/mediastore/ThumbnailStreamOpenerTest.java b/library/test/src/test/java/com/bumptech/glide/load/data/mediastore/ThumbnailStreamOpenerTest.java
index 7c25a0580..de9f44b5b 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/data/mediastore/ThumbnailStreamOpenerTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/data/mediastore/ThumbnailStreamOpenerTest.java
@@ -12,10 +12,14 @@
 import android.database.MatrixCursor;
 import android.net.Uri;
 import android.provider.MediaStore;
-import com.bumptech.glide.load.ImageHeaderParser;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool;
-import com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser;
+import com.bumptech.glide4.load.ImageHeaderParser;
+import com.bumptech.glide4.load.data.mediastore.FileService;
+import com.bumptech.glide4.load.data.mediastore.ThumbFetcher;
+import com.bumptech.glide4.load.data.mediastore.ThumbnailQuery;
+import com.bumptech.glide4.load.data.mediastore.ThumbnailStreamOpener;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruArrayPool;
+import com.bumptech.glide4.load.resource.bitmap.DefaultImageHeaderParser;
 import java.io.ByteArrayInputStream;
 import java.io.File;
 import java.io.FileNotFoundException;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/data/resource/FileDescriptorLocalUriFetcherTest.java b/library/test/src/test/java/com/bumptech/glide/load/data/resource/FileDescriptorLocalUriFetcherTest.java
index b4f8e7721..11fd7d89a 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/data/resource/FileDescriptorLocalUriFetcherTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/data/resource/FileDescriptorLocalUriFetcherTest.java
@@ -11,9 +11,9 @@
 import android.content.res.AssetFileDescriptor;
 import android.net.Uri;
 import android.os.ParcelFileDescriptor;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.data.FileDescriptorLocalUriFetcher;
 import com.bumptech.glide.tests.ContentResolverShadow;
 import java.io.FileNotFoundException;
 import org.junit.Before;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/data/resource/StreamLocalUriFetcherTest.java b/library/test/src/test/java/com/bumptech/glide/load/data/resource/StreamLocalUriFetcherTest.java
index a1d83a5f6..1f81a8b36 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/data/resource/StreamLocalUriFetcherTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/data/resource/StreamLocalUriFetcherTest.java
@@ -7,9 +7,9 @@
 import android.content.ContentResolver;
 import android.content.Context;
 import android.net.Uri;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.data.StreamLocalUriFetcher;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.data.StreamLocalUriFetcher;
 import com.bumptech.glide.tests.ContentResolverShadow;
 import java.io.ByteArrayInputStream;
 import java.io.FileNotFoundException;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/ActiveResourcesTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/ActiveResourcesTest.java
index a467ea774..70aaaae21 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/ActiveResourcesTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/ActiveResourcesTest.java
@@ -8,16 +8,20 @@
 import static org.mockito.Mockito.verify;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.engine.ActiveResources.DequeuedResourceCallback;
-import com.bumptech.glide.load.engine.ActiveResources.ResourceWeakReference;
-import com.bumptech.glide.load.engine.EngineResource.ResourceListener;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.engine.ActiveResources;
+import com.bumptech.glide4.load.engine.ActiveResources.DequeuedResourceCallback;
+import com.bumptech.glide4.load.engine.ActiveResources.ResourceWeakReference;
+import com.bumptech.glide4.load.engine.EngineResource;
+import com.bumptech.glide4.load.engine.EngineResource.ResourceListener;
 import com.bumptech.glide.tests.GlideShadowLooper;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.Executor;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
 import java.util.concurrent.TimeUnit;
+
+import com.bumptech.glide4.load.engine.Resource;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
@@ -318,7 +322,7 @@ public void run() {
       verify(listener, never()).onResourceReleased(any(Key.class), any(EngineResource.class));
     } finally {
       resources.shutdown();
-      com.bumptech.glide.util.Executors.shutdownAndAwaitTermination(delegate);
+      com.bumptech.glide4.util.Executors.shutdownAndAwaitTermination(delegate);
     }
   }
 
@@ -367,7 +371,7 @@ public void run() {
       verify(listener, never()).onResourceReleased(any(Key.class), any(EngineResource.class));
     } finally {
       resources.shutdown();
-      com.bumptech.glide.util.Executors.shutdownAndAwaitTermination(delegate);
+      com.bumptech.glide4.util.Executors.shutdownAndAwaitTermination(delegate);
     }
   }
 
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/DataCacheKeyTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/DataCacheKeyTest.java
index 2bbc3ad67..af6a08449 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/DataCacheKeyTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/DataCacheKeyTest.java
@@ -3,12 +3,14 @@
 import static org.mockito.Matchers.any;
 import static org.mockito.Mockito.doAnswer;
 
-import com.bumptech.glide.load.Key;
+import com.bumptech.glide4.load.Key;
 import com.bumptech.glide.tests.KeyTester;
 import com.bumptech.glide.tests.Util.WriteDigest;
 import java.io.UnsupportedEncodingException;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
+
+import com.bumptech.glide4.load.engine.DataCacheKey;
 import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/EngineJobTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/EngineJobTest.java
index d6bb580ed..bc3a92601 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/EngineJobTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/EngineJobTest.java
@@ -19,12 +19,13 @@
 import android.os.Handler;
 import android.os.Looper;
 import android.support.v4.util.Pools;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.engine.executor.GlideExecutor;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.engine.*;
+import com.bumptech.glide4.load.engine.executor.GlideExecutor;
 import com.bumptech.glide.load.engine.executor.MockGlideExecutor;
-import com.bumptech.glide.request.ResourceCallback;
-import com.bumptech.glide.util.Executors;
+import com.bumptech.glide4.request.ResourceCallback;
+import com.bumptech.glide4.util.Executors;
 import java.util.ArrayList;
 import java.util.List;
 import org.junit.Before;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/EngineKeyTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/EngineKeyTest.java
index b6a469d8b..8ca718830 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/EngineKeyTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/EngineKeyTest.java
@@ -3,12 +3,13 @@
 import static org.junit.Assert.assertThrows;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Option;
-import com.bumptech.glide.load.Option.CacheKeyUpdater;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.signature.ObjectKey;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Option;
+import com.bumptech.glide4.load.Option.CacheKeyUpdater;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.EngineKey;
+import com.bumptech.glide4.signature.ObjectKey;
 import com.google.common.testing.EqualsTester;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/EngineResourceTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/EngineResourceTest.java
index 3468931eb..7e6ca56ed 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/EngineResourceTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/EngineResourceTest.java
@@ -11,7 +11,9 @@
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
-import com.bumptech.glide.load.Key;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.engine.EngineResource;
+import com.bumptech.glide4.load.engine.Resource;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/EngineTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/EngineTest.java
index 207d7abcc..a075d3198 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/EngineTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/EngineTest.java
@@ -18,21 +18,22 @@
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
-import com.bumptech.glide.GlideContext;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.cache.DiskCache;
-import com.bumptech.glide.load.engine.cache.LruResourceCache;
-import com.bumptech.glide.load.engine.cache.MemoryCache;
-import com.bumptech.glide.load.engine.executor.GlideExecutor;
+import com.bumptech.glide4.GlideContext;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.*;
+import com.bumptech.glide4.load.engine.cache.DiskCache;
+import com.bumptech.glide4.load.engine.cache.LruResourceCache;
+import com.bumptech.glide4.load.engine.cache.MemoryCache;
+import com.bumptech.glide4.load.engine.executor.GlideExecutor;
 import com.bumptech.glide.load.engine.executor.MockGlideExecutor;
-import com.bumptech.glide.request.ResourceCallback;
+import com.bumptech.glide4.request.ResourceCallback;
 import com.bumptech.glide.tests.BackgroundUtil;
 import com.bumptech.glide.tests.GlideShadowLooper;
-import com.bumptech.glide.util.Executors;
+import com.bumptech.glide4.util.Executors;
 import java.util.HashMap;
 import java.util.Map;
 import java.util.concurrent.Executor;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/ResourceCacheKeyTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/ResourceCacheKeyTest.java
index bcefcbb1a..72fc1e2ed 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/ResourceCacheKeyTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/ResourceCacheKeyTest.java
@@ -4,13 +4,14 @@
 import static org.mockito.Mockito.doAnswer;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Option;
-import com.bumptech.glide.load.Option.CacheKeyUpdater;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool;
-import com.bumptech.glide.signature.ObjectKey;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Option;
+import com.bumptech.glide4.load.Option.CacheKeyUpdater;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.ResourceCacheKey;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruArrayPool;
+import com.bumptech.glide4.signature.ObjectKey;
 import com.bumptech.glide.tests.KeyTester;
 import com.bumptech.glide.tests.Util;
 import java.security.MessageDigest;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/ResourceRecyclerTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/ResourceRecyclerTest.java
index 80405ffc9..ef945fa75 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/ResourceRecyclerTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/ResourceRecyclerTest.java
@@ -6,6 +6,8 @@
 import static org.mockito.Mockito.verify;
 
 import android.os.Looper;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.ResourceRecycler;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/AttributeStrategyKeyTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/AttributeStrategyKeyTest.java
index 5ee47b04b..ff267fced 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/AttributeStrategyKeyTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/AttributeStrategyKeyTest.java
@@ -7,7 +7,8 @@
 import static org.mockito.Mockito.verify;
 
 import android.graphics.Bitmap;
-import com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy.Key;
+import com.bumptech.glide4.load.engine.bitmap_recycle.AttributeStrategy;
+import com.bumptech.glide4.load.engine.bitmap_recycle.AttributeStrategy.Key;
 import com.google.common.testing.EqualsTester;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/AttributeStrategyTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/AttributeStrategyTest.java
index fe3f959f1..e97071f77 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/AttributeStrategyTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/AttributeStrategyTest.java
@@ -4,6 +4,7 @@
 import static org.junit.Assert.assertNull;
 
 import android.graphics.Bitmap;
+import com.bumptech.glide4.load.engine.bitmap_recycle.AttributeStrategy;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMapTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMapTest.java
index 3139df1a8..75534dc61 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMapTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMapTest.java
@@ -3,6 +3,8 @@
 import static com.google.common.truth.Truth.assertThat;
 import static org.junit.Assert.assertNull;
 
+import com.bumptech.glide4.load.engine.bitmap_recycle.GroupedLinkedMap;
+import com.bumptech.glide4.load.engine.bitmap_recycle.Poolable;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/LruArrayPoolTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/LruArrayPoolTest.java
index 6b7be90f6..8cca7e306 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/LruArrayPoolTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/LruArrayPoolTest.java
@@ -12,6 +12,10 @@
 import java.util.Arrays;
 import java.util.HashSet;
 import java.util.Set;
+
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayAdapterInterface;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ByteArrayAdapter;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruArrayPool;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPoolTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPoolTest.java
index fda944cd7..b3d055c31 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPoolTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPoolTest.java
@@ -19,6 +19,9 @@
 import java.util.Collections;
 import java.util.List;
 import java.util.Set;
+
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruBitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruPoolStrategy;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategyTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategyTest.java
index c37b5946a..68f4514d3 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategyTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategyTest.java
@@ -1,6 +1,7 @@
 package com.bumptech.glide.load.engine.bitmap_recycle;
 
 import android.graphics.Bitmap;
+import com.bumptech.glide4.load.engine.bitmap_recycle.SizeConfigStrategy;
 import com.google.common.testing.EqualsTester;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/SizeStrategyKeyTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/SizeStrategyKeyTest.java
index 6175eb2bf..9678ca12d 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/SizeStrategyKeyTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/SizeStrategyKeyTest.java
@@ -6,7 +6,8 @@
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.verify;
 
-import com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy.Key;
+import com.bumptech.glide4.load.engine.bitmap_recycle.SizeStrategy;
+import com.bumptech.glide4.load.engine.bitmap_recycle.SizeStrategy.Key;
 import com.google.common.testing.EqualsTester;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapperTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapperTest.java
index 24a1098e7..d46650b80 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapperTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapperTest.java
@@ -7,8 +7,10 @@
 import static org.mockito.Mockito.mock;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.signature.ObjectKey;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.engine.cache.DiskCache;
+import com.bumptech.glide4.load.engine.cache.DiskLruCacheWrapper;
+import com.bumptech.glide4.signature.ObjectKey;
 import com.bumptech.glide.tests.Util;
 import java.io.File;
 import java.io.IOException;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/cache/LruCacheTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/cache/LruCacheTest.java
index a1c3f2d55..4b2866ae3 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/cache/LruCacheTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/cache/LruCacheTest.java
@@ -16,7 +16,7 @@
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.util.LruCache;
+import com.bumptech.glide4.util.LruCache;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/cache/LruResourceCacheTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/cache/LruResourceCacheTest.java
index 22b76cfc1..f52579ce2 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/cache/LruResourceCacheTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/cache/LruResourceCacheTest.java
@@ -1,6 +1,6 @@
 package com.bumptech.glide.load.engine.cache;
 
-import static com.bumptech.glide.load.engine.cache.MemoryCache.ResourceRemovedListener;
+import static com.bumptech.glide4.load.engine.cache.MemoryCache.ResourceRemovedListener;
 import static com.bumptech.glide.tests.Util.anyResource;
 import static com.bumptech.glide.tests.Util.mockResource;
 import static com.google.common.truth.Truth.assertThat;
@@ -15,9 +15,11 @@
 
 import android.content.ComponentCallbacks2;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.util.LruCache;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.cache.LruResourceCache;
+import com.bumptech.glide4.load.engine.cache.MemoryCache;
+import com.bumptech.glide4.util.LruCache;
 import java.security.MessageDigest;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/cache/MemorySizeCalculatorTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/cache/MemorySizeCalculatorTest.java
index ae2eb4bd6..49142dffc 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/cache/MemorySizeCalculatorTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/cache/MemorySizeCalculatorTest.java
@@ -9,6 +9,7 @@
 import android.os.Build;
 import com.bumptech.glide.load.engine.cache.MemorySizeCalculatorTest.LowRamActivityManager;
 import com.bumptech.glide.tests.Util;
+import com.bumptech.glide4.load.engine.cache.MemorySizeCalculator;
 import com.google.common.collect.Range;
 import org.junit.After;
 import org.junit.Before;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/cache/SafeKeyGeneratorTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/cache/SafeKeyGeneratorTest.java
index f48c56eaa..10c90c5d5 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/cache/SafeKeyGeneratorTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/cache/SafeKeyGeneratorTest.java
@@ -3,10 +3,12 @@
 import static org.junit.Assert.assertTrue;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Key;
+import com.bumptech.glide4.load.Key;
 import java.security.MessageDigest;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
+
+import com.bumptech.glide4.load.engine.cache.SafeKeyGenerator;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/executor/GlideExecutorTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/executor/GlideExecutorTest.java
index 7a9e74be1..239e6e8ae 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/executor/GlideExecutorTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/executor/GlideExecutorTest.java
@@ -7,6 +7,8 @@
 import java.util.Collections;
 import java.util.List;
 import java.util.concurrent.TimeUnit;
+
+import com.bumptech.glide4.load.engine.executor.GlideExecutor;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/executor/MockGlideExecutor.java b/library/test/src/test/java/com/bumptech/glide/load/engine/executor/MockGlideExecutor.java
index 94ef1782c..3051783b2 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/executor/MockGlideExecutor.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/executor/MockGlideExecutor.java
@@ -3,6 +3,7 @@
 import android.os.StrictMode;
 import android.support.annotation.NonNull;
 import android.support.annotation.VisibleForTesting;
+import com.bumptech.glide4.load.engine.executor.GlideExecutor;
 import com.google.common.util.concurrent.ForwardingExecutorService;
 import com.google.common.util.concurrent.MoreExecutors;
 import java.util.concurrent.Callable;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/prefill/BitmapPreFillRunnerTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/prefill/BitmapPreFillRunnerTest.java
index 7680c43a7..a875539f5 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/prefill/BitmapPreFillRunnerTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/prefill/BitmapPreFillRunnerTest.java
@@ -17,15 +17,18 @@
 import android.graphics.Bitmap;
 import android.os.Handler;
 import android.util.Log;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool;
-import com.bumptech.glide.load.engine.cache.MemoryCache;
-import com.bumptech.glide.load.engine.cache.MemoryCacheAdapter;
-import com.bumptech.glide.load.resource.bitmap.BitmapResource;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruBitmapPool;
+import com.bumptech.glide4.load.engine.cache.MemoryCache;
+import com.bumptech.glide4.load.engine.cache.MemoryCacheAdapter;
+import com.bumptech.glide4.load.engine.prefill.BitmapPreFillRunner;
+import com.bumptech.glide4.load.engine.prefill.PreFillQueue;
+import com.bumptech.glide4.load.engine.prefill.PreFillType;
+import com.bumptech.glide4.load.resource.bitmap.BitmapResource;
 import com.bumptech.glide.tests.Util.CreateBitmap;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.util.Util;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/prefill/BitmapPreFillerTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/prefill/BitmapPreFillerTest.java
index d5a777f69..506d3dd18 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/prefill/BitmapPreFillerTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/prefill/BitmapPreFillerTest.java
@@ -12,11 +12,14 @@
 import static org.mockito.Mockito.when;
 
 import android.graphics.Bitmap;
-import com.bumptech.glide.load.DecodeFormat;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.engine.cache.MemoryCache;
+import com.bumptech.glide4.load.DecodeFormat;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.cache.MemoryCache;
 import com.bumptech.glide.tests.Util.CreateBitmap;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.load.engine.prefill.BitmapPreFiller;
+import com.bumptech.glide4.load.engine.prefill.PreFillQueue;
+import com.bumptech.glide4.load.engine.prefill.PreFillType;
+import com.bumptech.glide4.util.Util;
 import com.google.common.collect.Range;
 import java.util.ArrayList;
 import java.util.List;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/engine/prefill/PreFillTypeTest.java b/library/test/src/test/java/com/bumptech/glide/load/engine/prefill/PreFillTypeTest.java
index bd14089f4..c41f94a4d 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/engine/prefill/PreFillTypeTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/engine/prefill/PreFillTypeTest.java
@@ -3,6 +3,7 @@
 import static org.junit.Assert.assertEquals;
 
 import android.graphics.Bitmap;
+import com.bumptech.glide4.load.engine.prefill.PreFillType;
 import com.google.common.testing.EqualsTester;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/model/AssetUriLoaderTest.java b/library/test/src/test/java/com/bumptech/glide/load/model/AssetUriLoaderTest.java
index d1670029e..71ced4411 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/model/AssetUriLoaderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/model/AssetUriLoaderTest.java
@@ -8,9 +8,10 @@
 
 import android.content.res.AssetManager;
 import android.net.Uri;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.model.AssetUriLoader;
+import com.bumptech.glide4.util.Preconditions;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/model/ByteArrayLoaderTest.java b/library/test/src/test/java/com/bumptech/glide/load/model/ByteArrayLoaderTest.java
index 80eb81666..cf848b36b 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/model/ByteArrayLoaderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/model/ByteArrayLoaderTest.java
@@ -6,10 +6,11 @@
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.model.ByteArrayLoader;
+import com.bumptech.glide4.util.Preconditions;
 import java.io.IOException;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/model/DataUrlLoaderTest.java b/library/test/src/test/java/com/bumptech/glide/load/model/DataUrlLoaderTest.java
index 440516b26..d71953d9d 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/model/DataUrlLoaderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/model/DataUrlLoaderTest.java
@@ -9,13 +9,16 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.util.Base64;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.util.Arrays;
+
+import com.bumptech.glide4.load.model.DataUrlLoader;
+import com.bumptech.glide4.load.model.MultiModelLoaderFactory;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/model/GlideUrlTest.java b/library/test/src/test/java/com/bumptech/glide/load/model/GlideUrlTest.java
index 6bc1ddd29..5b3cac4a2 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/model/GlideUrlTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/model/GlideUrlTest.java
@@ -4,6 +4,8 @@
 import static org.junit.Assert.assertEquals;
 import static org.mockito.Mockito.mock;
 
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.Headers;
 import com.google.common.testing.EqualsTester;
 import java.net.MalformedURLException;
 import java.net.URL;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/model/LazyHeadersTest.java b/library/test/src/test/java/com/bumptech/glide/load/model/LazyHeadersTest.java
index b0e2d1402..ed9026f9b 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/model/LazyHeadersTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/model/LazyHeadersTest.java
@@ -5,7 +5,9 @@
 import static org.mockito.Mockito.when;
 
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.model.LazyHeaders.Builder;
+import com.bumptech.glide4.load.model.LazyHeaderFactory;
+import com.bumptech.glide4.load.model.LazyHeaders;
+import com.bumptech.glide4.load.model.LazyHeaders.Builder;
 import com.google.common.testing.EqualsTester;
 import java.util.Map;
 import org.junit.After;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/model/ModelCacheTest.java b/library/test/src/test/java/com/bumptech/glide/load/model/ModelCacheTest.java
index 041f67992..742e7e74a 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/model/ModelCacheTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/model/ModelCacheTest.java
@@ -2,6 +2,7 @@
 
 import static org.junit.Assert.assertEquals;
 
+import com.bumptech.glide4.load.model.ModelCache;
 import com.google.common.testing.EqualsTester;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/model/MultiModelLoaderFactoryTest.java b/library/test/src/test/java/com/bumptech/glide/load/model/MultiModelLoaderFactoryTest.java
index 36f3f3480..00bbe0578 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/model/MultiModelLoaderFactoryTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/model/MultiModelLoaderFactoryTest.java
@@ -8,9 +8,12 @@
 import static org.mockito.Mockito.when;
 
 import android.support.v4.util.Pools.Pool;
-import com.bumptech.glide.Registry.NoModelLoaderAvailableException;
+import com.bumptech.glide4.Registry.NoModelLoaderAvailableException;
 import com.bumptech.glide.tests.Util;
-import com.bumptech.glide.util.pool.FactoryPools;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.model.MultiModelLoaderFactory;
+import com.bumptech.glide4.util.pool.FactoryPools;
 import java.util.ArrayList;
 import java.util.List;
 import org.junit.Before;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/model/ResourceLoaderTest.java b/library/test/src/test/java/com/bumptech/glide/load/model/ResourceLoaderTest.java
index ec2c1831e..01d30ffba 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/model/ResourceLoaderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/model/ResourceLoaderTest.java
@@ -11,10 +11,12 @@
 import static org.mockito.Mockito.when;
 
 import android.net.Uri;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.load.model.ResourceLoader;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -25,7 +27,7 @@
 import org.robolectric.annotation.Config;
 
 /**
- * Tests for the {@link com.bumptech.glide.load.model.ResourceLoader} class.
+ * Tests for the {@link ResourceLoader} class.
  */
 @RunWith(RobolectricTestRunner.class)
 @Config(manifest = Config.NONE, sdk = 18)
diff --git a/library/test/src/test/java/com/bumptech/glide/load/model/StreamEncoderTest.java b/library/test/src/test/java/com/bumptech/glide/load/model/StreamEncoderTest.java
index 07dd655dc..4131ced9f 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/model/StreamEncoderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/model/StreamEncoderTest.java
@@ -2,9 +2,10 @@
 
 import static org.junit.Assert.assertEquals;
 
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool;
-import com.bumptech.glide.util.ByteBufferUtil;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruArrayPool;
+import com.bumptech.glide4.load.model.StreamEncoder;
+import com.bumptech.glide4.util.ByteBufferUtil;
 import java.io.ByteArrayInputStream;
 import java.io.File;
 import java.io.IOException;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/model/StringLoaderTest.java b/library/test/src/test/java/com/bumptech/glide/load/model/StringLoaderTest.java
index b6554eabf..8e3008f3a 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/model/StringLoaderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/model/StringLoaderTest.java
@@ -9,12 +9,15 @@
 import static org.mockito.Mockito.when;
 
 import android.net.Uri;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
 import com.bumptech.glide.tests.Util;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.util.Preconditions;
 import java.io.File;
+
+import com.bumptech.glide4.load.model.StringLoader;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -25,7 +28,7 @@
 import org.robolectric.annotation.Config;
 
 /**
- * Tests for the {@link com.bumptech.glide.load.model.StringLoader} class.
+ * Tests for the {@link StringLoader} class.
  */
 @RunWith(RobolectricTestRunner.class)
 @Config(manifest = Config.NONE, sdk = 18)
diff --git a/library/test/src/test/java/com/bumptech/glide/load/model/UriLoaderTest.java b/library/test/src/test/java/com/bumptech/glide/load/model/UriLoaderTest.java
index b7a4f3859..8377d6634 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/model/UriLoaderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/model/UriLoaderTest.java
@@ -6,9 +6,10 @@
 import static org.mockito.Mockito.when;
 
 import android.net.Uri;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.model.UriLoader;
+import com.bumptech.glide4.util.Preconditions;
 import java.io.File;
 import java.io.IOException;
 import org.junit.Before;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/model/stream/BaseGlideUrlLoaderTest.java b/library/test/src/test/java/com/bumptech/glide/load/model/stream/BaseGlideUrlLoaderTest.java
index e635b01a2..11da67b88 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/model/stream/BaseGlideUrlLoaderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/model/stream/BaseGlideUrlLoaderTest.java
@@ -10,13 +10,14 @@
 import static org.mockito.Mockito.when;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.load.model.ModelCache;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.ModelCache;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.stream.BaseGlideUrlLoader;
+import com.bumptech.glide4.util.Preconditions;
 import java.io.InputStream;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/model/stream/HttpGlideUrlLoaderTest.java b/library/test/src/test/java/com/bumptech/glide/load/model/stream/HttpGlideUrlLoaderTest.java
index e46c95fcd..37e8e7db7 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/model/stream/HttpGlideUrlLoaderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/model/stream/HttpGlideUrlLoaderTest.java
@@ -3,11 +3,12 @@
 import static com.google.common.truth.Truth.assertThat;
 import static org.mockito.Mockito.mock;
 
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.data.HttpUrlFetcher;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.data.HttpUrlFetcher;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.stream.HttpGlideUrlLoader;
+import com.bumptech.glide4.util.Preconditions;
 import java.io.InputStream;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/model/stream/HttpUriLoaderTest.java b/library/test/src/test/java/com/bumptech/glide/load/model/stream/HttpUriLoaderTest.java
index 5abc0b23d..b45e47452 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/model/stream/HttpUriLoaderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/model/stream/HttpUriLoaderTest.java
@@ -5,11 +5,13 @@
 import static org.mockito.Mockito.verify;
 
 import android.net.Uri;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.load.model.ModelLoader;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.ModelLoader;
 import java.io.InputStream;
 import java.net.MalformedURLException;
+
+import com.bumptech.glide4.load.model.stream.HttpUriLoader;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/SimpleResourceTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/SimpleResourceTest.java
index 78b851f22..297f1f452 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/SimpleResourceTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/SimpleResourceTest.java
@@ -2,6 +2,7 @@
 
 import static org.junit.Assert.assertEquals;
 
+import com.bumptech.glide4.load.resource.SimpleResource;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/UnitTransformationTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/UnitTransformationTest.java
index 087c606d3..4a41fa4e4 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/UnitTransformationTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/UnitTransformationTest.java
@@ -7,12 +7,14 @@
 import static org.mockito.Mockito.mock;
 
 import android.app.Application;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.Resource;
 import com.bumptech.glide.tests.KeyTester;
 import com.bumptech.glide.tests.Util;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
+
+import com.bumptech.glide4.load.resource.UnitTransformation;
 import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableResourceTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableResourceTest.java
index 7fdd33f3c..e4717ede4 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableResourceTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableResourceTest.java
@@ -8,7 +8,8 @@
 
 import android.graphics.Bitmap;
 import android.graphics.drawable.BitmapDrawable;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.resource.bitmap.BitmapDrawableResource;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformationTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformationTest.java
index 2daa5979b..29b9a2ec7 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformationTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformationTest.java
@@ -13,15 +13,17 @@
 import android.app.Application;
 import android.graphics.Bitmap;
 import android.graphics.drawable.BitmapDrawable;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.GlideBuilder;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
 import com.bumptech.glide.tests.KeyTester;
 import com.bumptech.glide.tests.Util;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
+
+import com.bumptech.glide4.load.resource.bitmap.BitmapDrawableTransformation;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Rule;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapEncoderTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapEncoderTest.java
index ee204f478..bbedcb322 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapEncoderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapEncoderTest.java
@@ -8,12 +8,13 @@
 
 import android.graphics.Bitmap;
 import android.graphics.Bitmap.CompressFormat;
-import com.bumptech.glide.load.EncodeStrategy;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool;
-import com.bumptech.glide.util.ByteBufferUtil;
+import com.bumptech.glide4.load.EncodeStrategy;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruArrayPool;
+import com.bumptech.glide4.load.resource.bitmap.BitmapEncoder;
+import com.bumptech.glide4.util.ByteBufferUtil;
 import java.io.ByteArrayOutputStream;
 import java.io.File;
 import java.io.IOException;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapResourceTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapResourceTest.java
index 60f360b16..41c4550d8 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapResourceTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapResourceTest.java
@@ -7,8 +7,9 @@
 
 import android.graphics.Bitmap;
 import android.os.Build;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
 import com.bumptech.glide.tests.Util;
+import com.bumptech.glide4.load.resource.bitmap.BitmapResource;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapTransformationTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapTransformationTest.java
index cb7bd2e99..8875c61a0 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapTransformationTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/BitmapTransformationTest.java
@@ -8,11 +8,12 @@
 import android.app.Application;
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.GlideBuilder;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.resource.bitmap.BitmapTransformation;
+import com.bumptech.glide4.request.target.Target;
 import com.bumptech.glide.tests.Util;
 import java.security.MessageDigest;
 import org.junit.After;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/CenterCropTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/CenterCropTest.java
index 93cd95ce6..c066e70b9 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/CenterCropTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/CenterCropTest.java
@@ -13,15 +13,17 @@
 
 import android.app.Application;
 import android.graphics.Bitmap;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.GlideBuilder;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
 import com.bumptech.glide.tests.KeyTester;
 import com.bumptech.glide.tests.Util;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
+
+import com.bumptech.glide4.load.resource.bitmap.CenterCrop;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Rule;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/CenterInsideTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/CenterInsideTest.java
index ba0f059f1..857c952f1 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/CenterInsideTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/CenterInsideTest.java
@@ -13,16 +13,18 @@
 import android.graphics.Canvas;
 import android.graphics.Matrix;
 import android.graphics.Paint;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.GlideBuilder;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPoolAdapter;
 import com.bumptech.glide.tests.KeyTester;
 import com.bumptech.glide.tests.Util;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
+
+import com.bumptech.glide4.load.resource.bitmap.CenterInside;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Rule;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/CircleCropTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/CircleCropTest.java
index d93bc231c..4ec90c240 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/CircleCropTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/CircleCropTest.java
@@ -12,12 +12,13 @@
 import android.graphics.Color;
 import android.graphics.Paint;
 import android.graphics.Rect;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.GlideBuilder;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
 import com.bumptech.glide.tests.KeyTester;
 import com.bumptech.glide.tests.Util;
+import com.bumptech.glide4.load.resource.bitmap.CircleCrop;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Rule;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParserTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParserTest.java
index 4b39cf880..a74fc07e5 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParserTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParserTest.java
@@ -4,16 +4,18 @@
 import static org.junit.Assert.assertEquals;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.ImageHeaderParser;
-import com.bumptech.glide.load.ImageHeaderParser.ImageType;
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool;
+import com.bumptech.glide4.load.ImageHeaderParser;
+import com.bumptech.glide4.load.ImageHeaderParser.ImageType;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruArrayPool;
 import com.bumptech.glide.testutil.TestResourceUtil;
 import java.io.ByteArrayInputStream;
 import java.io.FilterInputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.nio.ByteBuffer;
+
+import com.bumptech.glide4.load.resource.bitmap.DefaultImageHeaderParser;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategyTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategyTest.java
index c6a624025..dcc0c78d9 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategyTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategyTest.java
@@ -2,6 +2,7 @@
 
 import static com.google.common.truth.Truth.assertThat;
 
+import com.bumptech.glide4.load.resource.bitmap.DownsampleStrategy;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/DrawableTransformationTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/DrawableTransformationTest.java
index b95fee2ba..38dbb50a6 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/DrawableTransformationTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/DrawableTransformationTest.java
@@ -15,16 +15,21 @@
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.GlideBuilder;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter;
-import com.bumptech.glide.load.resource.SimpleResource;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPoolAdapter;
+import com.bumptech.glide4.load.resource.SimpleResource;
 import com.bumptech.glide.tests.KeyTester;
 import com.bumptech.glide.tests.Util;
 import java.security.MessageDigest;
+
+import com.bumptech.glide4.load.resource.bitmap.BitmapDrawableResource;
+import com.bumptech.glide4.load.resource.bitmap.BitmapResource;
+import com.bumptech.glide4.load.resource.bitmap.BitmapTransformation;
+import com.bumptech.glide4.load.resource.bitmap.DrawableTransformation;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Rule;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/FitCenterTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/FitCenterTest.java
index 39a7bce42..0e3d22d31 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/FitCenterTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/FitCenterTest.java
@@ -12,16 +12,18 @@
 import android.graphics.Canvas;
 import android.graphics.Matrix;
 import android.graphics.Paint;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.GlideBuilder;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPoolAdapter;
 import com.bumptech.glide.tests.KeyTester;
 import com.bumptech.glide.tests.Util;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
+
+import com.bumptech.glide4.load.resource.bitmap.FitCenter;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Rule;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/LazyBitmapDrawableResourceTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/LazyBitmapDrawableResourceTest.java
index 1ad62cac2..333c1f7b9 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/LazyBitmapDrawableResourceTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/LazyBitmapDrawableResourceTest.java
@@ -8,8 +8,9 @@
 import android.content.res.Resources;
 import android.graphics.Bitmap;
 import android.graphics.drawable.BitmapDrawable;
-import com.bumptech.glide.load.engine.Initializable;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.engine.Initializable;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.resource.bitmap.LazyBitmapDrawableResource;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStreamTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStreamTest.java
index f3dfea93a..02b2688c5 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStreamTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStreamTest.java
@@ -7,12 +7,14 @@
 import static org.mockito.Mockito.times;
 import static org.mockito.Mockito.verify;
 
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruArrayPool;
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.util.Arrays;
+
+import com.bumptech.glide4.load.resource.bitmap.RecyclableBufferedInputStream;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/TransformationUtilsTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/TransformationUtilsTest.java
index dd1a06168..ec88a1810 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/TransformationUtilsTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/TransformationUtilsTest.java
@@ -15,9 +15,10 @@
 import android.graphics.Bitmap;
 import android.graphics.Matrix;
 import android.media.ExifInterface;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
 import com.bumptech.glide.tests.Util;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.resource.bitmap.TransformationUtils;
+import com.bumptech.glide4.util.Preconditions;
 import com.google.common.collect.Range;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/VideoDecoderTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/VideoDecoderTest.java
index 58b6557f6..9b9b809a6 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/VideoDecoderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/VideoDecoderTest.java
@@ -12,12 +12,14 @@
 import android.media.MediaMetadataRetriever;
 import android.os.Build;
 import android.os.ParcelFileDescriptor;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.resource.bitmap.DownsampleStrategy;
+import com.bumptech.glide4.load.resource.bitmap.VideoDecoder;
+import com.bumptech.glide4.request.target.Target;
 import com.bumptech.glide.tests.Util;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.util.Preconditions;
 import java.io.IOException;
 import org.junit.After;
 import org.junit.Before;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/bytes/BytesResourceTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/bytes/BytesResourceTest.java
index 012e4a8f9..8387b4e3b 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/bytes/BytesResourceTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/bytes/BytesResourceTest.java
@@ -2,6 +2,7 @@
 
 import static org.junit.Assert.assertEquals;
 
+import com.bumptech.glide4.load.resource.bytes.BytesResource;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/drawable/DrawableResourceTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/drawable/DrawableResourceTest.java
index 50af60a7a..ce0741fca 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/drawable/DrawableResourceTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/drawable/DrawableResourceTest.java
@@ -10,7 +10,8 @@
 import android.graphics.ColorFilter;
 import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.load.resource.drawable.DrawableResource;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/file/FileDecoderTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/file/FileDecoderTest.java
index 5e2c76048..9994b2fd9 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/file/FileDecoderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/file/FileDecoderTest.java
@@ -2,9 +2,10 @@
 
 import static org.junit.Assert.assertEquals;
 
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.resource.file.FileDecoder;
+import com.bumptech.glide4.util.Preconditions;
 import java.io.File;
 import java.io.IOException;
 import org.junit.Before;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/file/FileResourceTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/file/FileResourceTest.java
index 6cc0c5775..479bda93e 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/file/FileResourceTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/file/FileResourceTest.java
@@ -3,6 +3,8 @@
 import static org.junit.Assert.assertEquals;
 
 import java.io.File;
+
+import com.bumptech.glide4.load.resource.file.FileResource;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/gif/ByteBufferGifDecoderTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/gif/ByteBufferGifDecoderTest.java
index d440630cd..99092b517 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/gif/ByteBufferGifDecoderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/gif/ByteBufferGifDecoderTest.java
@@ -12,16 +12,19 @@
 import com.bumptech.glide.gifdecoder.GifDecoder;
 import com.bumptech.glide.gifdecoder.GifHeader;
 import com.bumptech.glide.gifdecoder.GifHeaderParser;
-import com.bumptech.glide.load.ImageHeaderParser;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool;
-import com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser;
+import com.bumptech.glide4.load.ImageHeaderParser;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruArrayPool;
+import com.bumptech.glide4.load.resource.bitmap.DefaultImageHeaderParser;
 import com.bumptech.glide.tests.GlideShadowLooper;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.util.ArrayList;
 import java.util.List;
+
+import com.bumptech.glide4.load.resource.gif.ByteBufferGifDecoder;
+import com.bumptech.glide4.load.resource.gif.GifOptions;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifDrawableResourceTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifDrawableResourceTest.java
index c83dd1740..709e38044 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifDrawableResourceTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifDrawableResourceTest.java
@@ -5,6 +5,8 @@
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.when;
 
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.load.resource.gif.GifDrawableResource;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifDrawableTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifDrawableTest.java
index 1fae53bbc..0f40a0235 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifDrawableTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifDrawableTest.java
@@ -29,12 +29,14 @@
 import android.os.Build;
 import android.view.View;
 import com.bumptech.glide.gifdecoder.GifDecoder;
-import com.bumptech.glide.load.Transformation;
+import com.bumptech.glide4.load.Transformation;
 import com.bumptech.glide.load.resource.gif.GifDrawableTest.BitmapTrackingShadowCanvas;
 import com.bumptech.glide.tests.GlideShadowLooper;
 import com.bumptech.glide.tests.TearDownGlide;
 import com.bumptech.glide.tests.Util;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.load.resource.gif.GifFrameLoader;
+import com.bumptech.glide4.util.Preconditions;
 import java.util.HashSet;
 import java.util.Set;
 import org.junit.After;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifDrawableTransformationTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifDrawableTransformationTest.java
index f31857b81..dcce56c36 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifDrawableTransformationTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifDrawableTransformationTest.java
@@ -12,16 +12,19 @@
 
 import android.content.Context;
 import android.graphics.Bitmap;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.GlideBuilder;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.load.resource.UnitTransformation;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.resource.UnitTransformation;
 import com.bumptech.glide.tests.KeyTester;
 import com.bumptech.glide.tests.Util;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
+
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.load.resource.gif.GifDrawableTransformation;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Rule;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifFrameLoaderTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifFrameLoaderTest.java
index c7a77bcfd..d685c99fd 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifFrameLoaderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifFrameLoaderTest.java
@@ -17,19 +17,20 @@
 import android.os.Handler;
 import android.os.Message;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.RequestBuilder;
-import com.bumptech.glide.RequestManager;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.RequestBuilder;
+import com.bumptech.glide4.RequestManager;
 import com.bumptech.glide.gifdecoder.GifDecoder;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.resource.gif.GifFrameLoader.DelayTarget;
-import com.bumptech.glide.load.resource.gif.GifFrameLoader.FrameCallback;
-import com.bumptech.glide.request.Request;
-import com.bumptech.glide.request.RequestOptions;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.resource.gif.GifFrameLoader;
+import com.bumptech.glide4.load.resource.gif.GifFrameLoader.DelayTarget;
+import com.bumptech.glide4.load.resource.gif.GifFrameLoader.FrameCallback;
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.request.RequestOptions;
+import com.bumptech.glide4.request.target.Target;
 import com.bumptech.glide.tests.TearDownGlide;
 import com.bumptech.glide.tests.Util.ReturnsSelfAnswer;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.util.Util;
 import java.nio.ByteBuffer;
 import org.junit.Before;
 import org.junit.Rule;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifFrameResourceDecoderTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifFrameResourceDecoderTest.java
index 59d3cfb09..aaca0783f 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifFrameResourceDecoderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/gif/GifFrameResourceDecoderTest.java
@@ -7,9 +7,10 @@
 
 import android.graphics.Bitmap;
 import com.bumptech.glide.gifdecoder.GifDecoder;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide4.load.resource.gif.GifFrameResourceDecoder;
+import com.bumptech.glide4.util.Preconditions;
 import java.io.IOException;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/gif/StreamGifDecoderTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/gif/StreamGifDecoderTest.java
index f50eaf075..054653d4c 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/gif/StreamGifDecoderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/gif/StreamGifDecoderTest.java
@@ -2,16 +2,20 @@
 
 import static com.google.common.truth.Truth.assertThat;
 
-import com.bumptech.glide.load.ImageHeaderParser;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool;
-import com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser;
+import com.bumptech.glide4.load.ImageHeaderParser;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruArrayPool;
+import com.bumptech.glide4.load.resource.bitmap.DefaultImageHeaderParser;
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.util.ArrayList;
 import java.util.List;
+
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.load.resource.gif.GifOptions;
+import com.bumptech.glide4.load.resource.gif.StreamGifDecoder;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/BitmapBytesTranscoderTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/BitmapBytesTranscoderTest.java
index d6760ec91..adfc61541 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/BitmapBytesTranscoderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/BitmapBytesTranscoderTest.java
@@ -6,9 +6,10 @@
 import static org.mockito.Mockito.when;
 
 import android.graphics.Bitmap;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.resource.transcode.BitmapBytesTranscoder;
+import com.bumptech.glide4.util.Preconditions;
 import java.io.ByteArrayOutputStream;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/BitmapDrawableTranscoderTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/BitmapDrawableTranscoderTest.java
index b3c195657..d6668998c 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/BitmapDrawableTranscoderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/BitmapDrawableTranscoderTest.java
@@ -6,8 +6,9 @@
 
 import android.graphics.Bitmap;
 import android.graphics.drawable.BitmapDrawable;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.resource.transcode.BitmapDrawableTranscoder;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/GifDrawableBytesTranscoderTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/GifDrawableBytesTranscoderTest.java
index fc1c7777c..7592e5ec9 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/GifDrawableBytesTranscoderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/GifDrawableBytesTranscoderTest.java
@@ -5,11 +5,13 @@
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.when;
 
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
 import java.nio.ByteBuffer;
 import java.nio.charset.Charset;
+
+import com.bumptech.glide4.load.resource.transcode.GifDrawableBytesTranscoder;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/TranscoderRegistryTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/TranscoderRegistryTest.java
index 28db86bbe..b3d85d21c 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/TranscoderRegistryTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/TranscoderRegistryTest.java
@@ -5,6 +5,10 @@
 import static org.mockito.Mockito.mock;
 
 import java.io.File;
+
+import com.bumptech.glide4.load.resource.transcode.ResourceTranscoder;
+import com.bumptech.glide4.load.resource.transcode.TranscoderRegistry;
+import com.bumptech.glide4.load.resource.transcode.UnitTranscoder;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/UnitTranscoderTest.java b/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/UnitTranscoderTest.java
index 0c8713cf2..793aac939 100644
--- a/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/UnitTranscoderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/load/resource/transcode/UnitTranscoderTest.java
@@ -3,8 +3,10 @@
 import static com.bumptech.glide.tests.Util.mockResource;
 import static org.junit.Assert.assertEquals;
 
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.resource.transcode.ResourceTranscoder;
+import com.bumptech.glide4.load.resource.transcode.UnitTranscoder;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
diff --git a/library/test/src/test/java/com/bumptech/glide/manager/DefaultConnectivityMonitorFactoryTest.java b/library/test/src/test/java/com/bumptech/glide/manager/DefaultConnectivityMonitorFactoryTest.java
index e78445533..d6b773c4c 100644
--- a/library/test/src/test/java/com/bumptech/glide/manager/DefaultConnectivityMonitorFactoryTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/manager/DefaultConnectivityMonitorFactoryTest.java
@@ -3,6 +3,7 @@
 import static com.google.common.truth.Truth.assertThat;
 import static org.mockito.Mockito.mock;
 
+import com.bumptech.glide4.manager.*;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/manager/DefaultConnectivityMonitorTest.java b/library/test/src/test/java/com/bumptech/glide/manager/DefaultConnectivityMonitorTest.java
index 386c842de..d36769545 100644
--- a/library/test/src/test/java/com/bumptech/glide/manager/DefaultConnectivityMonitorTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/manager/DefaultConnectivityMonitorTest.java
@@ -13,6 +13,9 @@
 import android.net.NetworkInfo;
 import com.bumptech.glide.manager.DefaultConnectivityMonitorTest.PermissionConnectivityManager;
 import java.util.List;
+
+import com.bumptech.glide4.manager.ConnectivityMonitor;
+import com.bumptech.glide4.manager.DefaultConnectivityMonitor;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/manager/Issue117Activity.java b/library/test/src/test/java/com/bumptech/glide/manager/Issue117Activity.java
index 60c59027d..fec79b8ac 100644
--- a/library/test/src/test/java/com/bumptech/glide/manager/Issue117Activity.java
+++ b/library/test/src/test/java/com/bumptech/glide/manager/Issue117Activity.java
@@ -16,7 +16,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
-import com.bumptech.glide.Glide;
+import com.bumptech.glide4.Glide;
 
 /**
  * A test activity to reproduce Issue #117: https://github.com/bumptech/glide/issues/117.
diff --git a/library/test/src/test/java/com/bumptech/glide/manager/LifecycleTest.java b/library/test/src/test/java/com/bumptech/glide/manager/LifecycleTest.java
index df8bce1ae..f2da88527 100644
--- a/library/test/src/test/java/com/bumptech/glide/manager/LifecycleTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/manager/LifecycleTest.java
@@ -6,6 +6,9 @@
 
 import java.util.ArrayList;
 import java.util.List;
+
+import com.bumptech.glide4.manager.ActivityFragmentLifecycle;
+import com.bumptech.glide4.manager.LifecycleListener;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/manager/RequestManagerFragmentTest.java b/library/test/src/test/java/com/bumptech/glide/manager/RequestManagerFragmentTest.java
index 191f02309..98b0d6ac2 100644
--- a/library/test/src/test/java/com/bumptech/glide/manager/RequestManagerFragmentTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/manager/RequestManagerFragmentTest.java
@@ -8,7 +8,11 @@
 
 import android.app.Activity;
 import android.support.v4.app.FragmentActivity;
-import com.bumptech.glide.RequestManager;
+import com.bumptech.glide4.RequestManager;
+import com.bumptech.glide4.manager.ActivityFragmentLifecycle;
+import com.bumptech.glide4.manager.LifecycleListener;
+import com.bumptech.glide4.manager.RequestManagerFragment;
+import com.bumptech.glide4.manager.SupportRequestManagerFragment;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/manager/RequestManagerRetrieverTest.java b/library/test/src/test/java/com/bumptech/glide/manager/RequestManagerRetrieverTest.java
index dd07da813..f7aecf577 100644
--- a/library/test/src/test/java/com/bumptech/glide/manager/RequestManagerRetrieverTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/manager/RequestManagerRetrieverTest.java
@@ -17,11 +17,14 @@
 import android.support.annotation.RequiresApi;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentActivity;
-import com.bumptech.glide.RequestManager;
+import com.bumptech.glide4.RequestManager;
 import com.bumptech.glide.tests.BackgroundUtil.BackgroundTester;
 import com.bumptech.glide.tests.GlideShadowLooper;
 import com.bumptech.glide.tests.TearDownGlide;
 import com.bumptech.glide.tests.Util;
+import com.bumptech.glide4.manager.RequestManagerFragment;
+import com.bumptech.glide4.manager.RequestManagerRetriever;
+import com.bumptech.glide4.manager.SupportRequestManagerFragment;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Rule;
diff --git a/library/test/src/test/java/com/bumptech/glide/manager/RequestTrackerTest.java b/library/test/src/test/java/com/bumptech/glide/manager/RequestTrackerTest.java
index 605683c8a..c84004efd 100644
--- a/library/test/src/test/java/com/bumptech/glide/manager/RequestTrackerTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/manager/RequestTrackerTest.java
@@ -7,7 +7,8 @@
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.when;
 
-import com.bumptech.glide.request.Request;
+import com.bumptech.glide4.manager.RequestTracker;
+import com.bumptech.glide4.request.Request;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/module/ManifestParserTest.java b/library/test/src/test/java/com/bumptech/glide/module/ManifestParserTest.java
index 698425e22..55480864e 100644
--- a/library/test/src/test/java/com/bumptech/glide/module/ManifestParserTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/module/ManifestParserTest.java
@@ -10,10 +10,13 @@
 import android.content.pm.PackageManager;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.GlideBuilder;
-import com.bumptech.glide.Registry;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.Registry;
 import java.util.List;
+
+import com.bumptech.glide4.module.GlideModule;
+import com.bumptech.glide4.module.ManifestParser;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/ErrorRequestCoordinatorTest.java b/library/test/src/test/java/com/bumptech/glide/request/ErrorRequestCoordinatorTest.java
index 1c8602fad..4842382b7 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/ErrorRequestCoordinatorTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/ErrorRequestCoordinatorTest.java
@@ -6,6 +6,9 @@
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
+import com.bumptech.glide4.request.ErrorRequestCoordinator;
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.request.RequestCoordinator;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/RequestFutureTargetTest.java b/library/test/src/test/java/com/bumptech/glide/request/RequestFutureTargetTest.java
index e45aace85..de4d7b9a9 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/RequestFutureTargetTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/RequestFutureTargetTest.java
@@ -12,8 +12,10 @@
 import static org.mockito.Mockito.times;
 import static org.mockito.Mockito.verify;
 
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.request.target.SizeReadyCallback;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.request.RequestFutureTarget;
+import com.bumptech.glide4.request.target.SizeReadyCallback;
 import java.util.concurrent.CancellationException;
 import java.util.concurrent.ExecutionException;
 import java.util.concurrent.TimeUnit;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/RequestOptionsTest.java b/library/test/src/test/java/com/bumptech/glide/request/RequestOptionsTest.java
index 48123faeb..0e84f8ca0 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/RequestOptionsTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/RequestOptionsTest.java
@@ -8,16 +8,17 @@
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.GradientDrawable;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.MultiTransformation;
-import com.bumptech.glide.load.Option;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
-import com.bumptech.glide.load.resource.bitmap.CenterCrop;
-import com.bumptech.glide.load.resource.bitmap.CircleCrop;
-import com.bumptech.glide.load.resource.bitmap.DownsampleStrategy;
-import com.bumptech.glide.signature.ObjectKey;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.MultiTransformation;
+import com.bumptech.glide4.load.Option;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.DiskCacheStrategy;
+import com.bumptech.glide4.load.resource.bitmap.CenterCrop;
+import com.bumptech.glide4.load.resource.bitmap.CircleCrop;
+import com.bumptech.glide4.load.resource.bitmap.DownsampleStrategy;
+import com.bumptech.glide4.request.RequestOptions;
+import com.bumptech.glide4.signature.ObjectKey;
+import com.bumptech.glide4.util.Util;
 import com.google.common.testing.EqualsTester;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/SingleRequestTest.java b/library/test/src/test/java/com/bumptech/glide/request/SingleRequestTest.java
index e6f56512d..396ce08f6 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/SingleRequestTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/SingleRequestTest.java
@@ -22,22 +22,23 @@
 import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.GlideContext;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.Transformation;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
-import com.bumptech.glide.load.engine.Engine;
-import com.bumptech.glide.load.engine.GlideException;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.request.target.SizeReadyCallback;
-import com.bumptech.glide.request.target.Target;
-import com.bumptech.glide.request.transition.Transition;
-import com.bumptech.glide.request.transition.TransitionFactory;
-import com.bumptech.glide.signature.ObjectKey;
-import com.bumptech.glide.util.Executors;
+import com.bumptech.glide4.GlideContext;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.Transformation;
+import com.bumptech.glide4.load.engine.DiskCacheStrategy;
+import com.bumptech.glide4.load.engine.Engine;
+import com.bumptech.glide4.load.engine.GlideException;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.request.*;
+import com.bumptech.glide4.request.target.SizeReadyCallback;
+import com.bumptech.glide4.request.target.Target;
+import com.bumptech.glide4.request.transition.Transition;
+import com.bumptech.glide4.request.transition.TransitionFactory;
+import com.bumptech.glide4.signature.ObjectKey;
+import com.bumptech.glide4.util.Executors;
 import com.google.common.base.Equivalence;
 import com.google.common.testing.EquivalenceTester;
 import java.util.ArrayList;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/ThumbnailRequestCoordinatorTest.java b/library/test/src/test/java/com/bumptech/glide/request/ThumbnailRequestCoordinatorTest.java
index 5bab9738a..f4b83f7ae 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/ThumbnailRequestCoordinatorTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/ThumbnailRequestCoordinatorTest.java
@@ -11,6 +11,9 @@
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.request.RequestCoordinator;
+import com.bumptech.glide4.request.ThumbnailRequestCoordinator;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/target/AppWidgetTargetTest.java b/library/test/src/test/java/com/bumptech/glide/request/target/AppWidgetTargetTest.java
index a9a8ffe6e..b793f519f 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/target/AppWidgetTargetTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/target/AppWidgetTargetTest.java
@@ -10,6 +10,7 @@
 import android.content.ComponentName;
 import android.graphics.Bitmap;
 import android.widget.RemoteViews;
+import com.bumptech.glide4.request.target.AppWidgetTarget;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/target/BitmapImageViewTargetTest.java b/library/test/src/test/java/com/bumptech/glide/request/target/BitmapImageViewTargetTest.java
index 31e0bb5c6..5ecde2600 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/target/BitmapImageViewTargetTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/target/BitmapImageViewTargetTest.java
@@ -5,6 +5,7 @@
 import android.graphics.Bitmap;
 import android.graphics.drawable.BitmapDrawable;
 import android.widget.ImageView;
+import com.bumptech.glide4.request.target.BitmapImageViewTarget;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/target/ImageViewTargetFactoryTest.java b/library/test/src/test/java/com/bumptech/glide/request/target/ImageViewTargetFactoryTest.java
index d0967ce08..47ee47ebf 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/target/ImageViewTargetFactoryTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/target/ImageViewTargetFactoryTest.java
@@ -8,6 +8,10 @@
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 import android.widget.ImageView;
+import com.bumptech.glide4.request.target.BitmapImageViewTarget;
+import com.bumptech.glide4.request.target.DrawableImageViewTarget;
+import com.bumptech.glide4.request.target.ImageViewTargetFactory;
+import com.bumptech.glide4.request.target.Target;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/target/ImageViewTargetTest.java b/library/test/src/test/java/com/bumptech/glide/request/target/ImageViewTargetTest.java
index 9fd3f101d..bb28bd1e0 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/target/ImageViewTargetTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/target/ImageViewTargetTest.java
@@ -16,7 +16,8 @@
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 import android.widget.ImageView;
-import com.bumptech.glide.request.transition.Transition;
+import com.bumptech.glide4.request.target.ImageViewTarget;
+import com.bumptech.glide4.request.transition.Transition;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/target/NotificationTargetTest.java b/library/test/src/test/java/com/bumptech/glide/request/target/NotificationTargetTest.java
index d1c51da32..7b4d3ec98 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/target/NotificationTargetTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/target/NotificationTargetTest.java
@@ -10,6 +10,7 @@
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.widget.RemoteViews;
+import com.bumptech.glide4.request.target.NotificationTarget;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/target/PreloadTargetTest.java b/library/test/src/test/java/com/bumptech/glide/request/target/PreloadTargetTest.java
index c3435319f..b08399a92 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/target/PreloadTargetTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/target/PreloadTargetTest.java
@@ -4,8 +4,10 @@
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.verify;
 
-import com.bumptech.glide.RequestManager;
-import com.bumptech.glide.request.Request;
+import com.bumptech.glide4.RequestManager;
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.request.target.PreloadTarget;
+import com.bumptech.glide4.request.target.SizeReadyCallback;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/target/SimpleTargetTest.java b/library/test/src/test/java/com/bumptech/glide/request/target/SimpleTargetTest.java
index 3093df1fb..08ffcee5b 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/target/SimpleTargetTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/target/SimpleTargetTest.java
@@ -4,7 +4,10 @@
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.request.transition.Transition;
+import com.bumptech.glide4.request.target.SimpleTarget;
+import com.bumptech.glide4.request.target.SizeReadyCallback;
+import com.bumptech.glide4.request.target.Target;
+import com.bumptech.glide4.request.transition.Transition;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/target/ViewTargetTest.java b/library/test/src/test/java/com/bumptech/glide/request/target/ViewTargetTest.java
index f6ae534f4..b88f24ec0 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/target/ViewTargetTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/target/ViewTargetTest.java
@@ -24,10 +24,12 @@
 import android.view.View.OnAttachStateChangeListener;
 import android.view.ViewTreeObserver;
 import android.view.WindowManager;
-import com.bumptech.glide.request.Request;
-import com.bumptech.glide.request.transition.Transition;
+import com.bumptech.glide4.request.Request;
+import com.bumptech.glide4.request.target.SizeReadyCallback;
+import com.bumptech.glide4.request.target.ViewTarget;
+import com.bumptech.glide4.request.transition.Transition;
 import com.bumptech.glide.tests.Util;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.util.Preconditions;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/transition/DrawableCrossFadeFactoryTest.java b/library/test/src/test/java/com/bumptech/glide/request/transition/DrawableCrossFadeFactoryTest.java
index e02f29e67..2e38f43cd 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/transition/DrawableCrossFadeFactoryTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/transition/DrawableCrossFadeFactoryTest.java
@@ -4,7 +4,9 @@
 import static org.junit.Assert.assertNotEquals;
 
 import android.graphics.drawable.Drawable;
-import com.bumptech.glide.load.DataSource;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.request.transition.DrawableCrossFadeFactory;
+import com.bumptech.glide4.request.transition.NoTransition;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/transition/DrawableCrossFadeViewAnimationTest.java b/library/test/src/test/java/com/bumptech/glide/request/transition/DrawableCrossFadeViewAnimationTest.java
index e89b6f8bc..70db9fd27 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/transition/DrawableCrossFadeViewAnimationTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/transition/DrawableCrossFadeViewAnimationTest.java
@@ -1,6 +1,6 @@
 package com.bumptech.glide.request.transition;
 
-import static com.bumptech.glide.request.transition.Transition.ViewAdapter;
+import static com.bumptech.glide4.request.transition.Transition.ViewAdapter;
 import static org.junit.Assert.assertTrue;
 import static org.mockito.Matchers.any;
 import static org.mockito.Mockito.mock;
@@ -11,6 +11,7 @@
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.TransitionDrawable;
+import com.bumptech.glide4.request.transition.DrawableCrossFadeTransition;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/transition/ViewAnimationTest.java b/library/test/src/test/java/com/bumptech/glide/request/transition/ViewAnimationTest.java
index bdfef1c41..aa637000e 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/transition/ViewAnimationTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/transition/ViewAnimationTest.java
@@ -1,6 +1,6 @@
 package com.bumptech.glide.request.transition;
 
-import static com.bumptech.glide.request.transition.Transition.ViewAdapter;
+import static com.bumptech.glide4.request.transition.Transition.ViewAdapter;
 import static org.junit.Assert.assertFalse;
 import static org.mockito.Matchers.any;
 import static org.mockito.Matchers.eq;
@@ -11,6 +11,7 @@
 import android.content.Context;
 import android.view.animation.Animation;
 import android.widget.ImageView;
+import com.bumptech.glide4.request.transition.ViewTransition;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/transition/ViewPropertyAnimationTest.java b/library/test/src/test/java/com/bumptech/glide/request/transition/ViewPropertyAnimationTest.java
index 2b50c15d8..05ad1d844 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/transition/ViewPropertyAnimationTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/transition/ViewPropertyAnimationTest.java
@@ -1,6 +1,6 @@
 package com.bumptech.glide.request.transition;
 
-import static com.bumptech.glide.request.transition.Transition.ViewAdapter;
+import static com.bumptech.glide4.request.transition.Transition.ViewAdapter;
 import static org.junit.Assert.assertFalse;
 import static org.mockito.Matchers.any;
 import static org.mockito.Matchers.eq;
@@ -11,6 +11,7 @@
 
 import android.view.View;
 import android.widget.ImageView;
+import com.bumptech.glide4.request.transition.ViewPropertyTransition;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/transition/ViewPropertyViewTransitionAnimationFactoryTest.java b/library/test/src/test/java/com/bumptech/glide/request/transition/ViewPropertyViewTransitionAnimationFactoryTest.java
index 831a9d047..1a92d4891 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/transition/ViewPropertyViewTransitionAnimationFactoryTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/transition/ViewPropertyViewTransitionAnimationFactoryTest.java
@@ -4,7 +4,10 @@
 import static org.junit.Assert.assertNotEquals;
 import static org.mockito.Mockito.mock;
 
-import com.bumptech.glide.load.DataSource;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.request.transition.NoTransition;
+import com.bumptech.glide4.request.transition.ViewPropertyAnimationFactory;
+import com.bumptech.glide4.request.transition.ViewPropertyTransition;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/request/transition/ViewTransitionAnimationFactoryTest.java b/library/test/src/test/java/com/bumptech/glide/request/transition/ViewTransitionAnimationFactoryTest.java
index 6f1cb4ec5..fde873bc2 100644
--- a/library/test/src/test/java/com/bumptech/glide/request/transition/ViewTransitionAnimationFactoryTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/request/transition/ViewTransitionAnimationFactoryTest.java
@@ -11,7 +11,11 @@
 import android.content.Context;
 import android.view.View;
 import android.view.animation.Animation;
-import com.bumptech.glide.load.DataSource;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.request.transition.NoTransition;
+import com.bumptech.glide4.request.transition.Transition;
+import com.bumptech.glide4.request.transition.ViewAnimationFactory;
+import com.bumptech.glide4.request.transition.ViewTransition;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/resize/load/ExifTest.java b/library/test/src/test/java/com/bumptech/glide/resize/load/ExifTest.java
index 1efd9b736..57013a896 100644
--- a/library/test/src/test/java/com/bumptech/glide/resize/load/ExifTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/resize/load/ExifTest.java
@@ -3,9 +3,9 @@
 import static com.google.common.truth.Truth.assertThat;
 import static org.junit.Assert.assertEquals;
 
-import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
-import com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool;
-import com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser;
+import com.bumptech.glide4.load.engine.bitmap_recycle.ArrayPool;
+import com.bumptech.glide4.load.engine.bitmap_recycle.LruArrayPool;
+import com.bumptech.glide4.load.resource.bitmap.DefaultImageHeaderParser;
 import com.bumptech.glide.testutil.TestResourceUtil;
 import java.io.IOException;
 import java.io.InputStream;
diff --git a/library/test/src/test/java/com/bumptech/glide/signature/ApplicationVersionSignatureTest.java b/library/test/src/test/java/com/bumptech/glide/signature/ApplicationVersionSignatureTest.java
index 0d2c90bb8..f20f5b338 100644
--- a/library/test/src/test/java/com/bumptech/glide/signature/ApplicationVersionSignatureTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/signature/ApplicationVersionSignatureTest.java
@@ -6,10 +6,13 @@
 
 import android.content.Context;
 import android.content.pm.PackageManager.NameNotFoundException;
-import com.bumptech.glide.load.Key;
+import com.bumptech.glide4.load.Key;
 import com.bumptech.glide.tests.KeyTester;
 import java.io.UnsupportedEncodingException;
 import java.security.NoSuchAlgorithmException;
+
+import com.bumptech.glide4.signature.ApplicationVersionSignature;
+import com.bumptech.glide4.signature.ObjectKey;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Rule;
diff --git a/library/test/src/test/java/com/bumptech/glide/signature/EmptySignatureTest.java b/library/test/src/test/java/com/bumptech/glide/signature/EmptySignatureTest.java
index a10b26cd7..6fcb4eac6 100644
--- a/library/test/src/test/java/com/bumptech/glide/signature/EmptySignatureTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/signature/EmptySignatureTest.java
@@ -3,8 +3,9 @@
 
 import static org.mockito.Mockito.mock;
 
-import com.bumptech.glide.load.Key;
+import com.bumptech.glide4.load.Key;
 import com.bumptech.glide.tests.KeyTester;
+import com.bumptech.glide4.signature.EmptySignature;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/signature/MediaStoreSignatureTest.java b/library/test/src/test/java/com/bumptech/glide/signature/MediaStoreSignatureTest.java
index e972c3e2e..8a4b84087 100644
--- a/library/test/src/test/java/com/bumptech/glide/signature/MediaStoreSignatureTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/signature/MediaStoreSignatureTest.java
@@ -1,6 +1,7 @@
 package com.bumptech.glide.signature;
 
 import com.bumptech.glide.tests.KeyTester;
+import com.bumptech.glide4.signature.MediaStoreSignature;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/signature/ObjectKeyTest.java b/library/test/src/test/java/com/bumptech/glide/signature/ObjectKeyTest.java
index f5656d4a0..0a9aa4cda 100644
--- a/library/test/src/test/java/com/bumptech/glide/signature/ObjectKeyTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/signature/ObjectKeyTest.java
@@ -2,6 +2,8 @@
 
 import com.bumptech.glide.tests.KeyTester;
 import java.security.NoSuchAlgorithmException;
+
+import com.bumptech.glide4.signature.ObjectKey;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/tests/KeyTester.java b/library/test/src/test/java/com/bumptech/glide/tests/KeyTester.java
index 8a064db54..1a7a2ccd2 100644
--- a/library/test/src/test/java/com/bumptech/glide/tests/KeyTester.java
+++ b/library/test/src/test/java/com/bumptech/glide/tests/KeyTester.java
@@ -6,7 +6,8 @@
 
 import android.support.annotation.CheckResult;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Key;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.util.Util;
 import com.google.common.base.Equivalence;
 import com.google.common.testing.EquivalenceTester;
 import java.security.MessageDigest;
@@ -123,7 +124,7 @@ public void test() {
 
 
     String getStringDigest(Key key) {
-      return com.bumptech.glide.util.Util.sha256BytesToHex(getDigest(key));
+      return Util.sha256BytesToHex(getDigest(key));
     }
   }
 
diff --git a/library/test/src/test/java/com/bumptech/glide/tests/TearDownGlide.java b/library/test/src/test/java/com/bumptech/glide/tests/TearDownGlide.java
index d1814f48f..f1fff7dc2 100644
--- a/library/test/src/test/java/com/bumptech/glide/tests/TearDownGlide.java
+++ b/library/test/src/test/java/com/bumptech/glide/tests/TearDownGlide.java
@@ -1,6 +1,6 @@
 package com.bumptech.glide.tests;
 
-import com.bumptech.glide.Glide;
+import com.bumptech.glide4.Glide;
 import org.junit.rules.TestRule;
 import org.junit.runner.Description;
 import org.junit.runners.model.Statement;
diff --git a/library/test/src/test/java/com/bumptech/glide/tests/Util.java b/library/test/src/test/java/com/bumptech/glide/tests/Util.java
index bcd5d34f4..31db6d0d2 100644
--- a/library/test/src/test/java/com/bumptech/glide/tests/Util.java
+++ b/library/test/src/test/java/com/bumptech/glide/tests/Util.java
@@ -9,9 +9,9 @@
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.os.Build;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.data.DataFetcher;
-import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.data.DataFetcher;
+import com.bumptech.glide4.load.engine.Resource;
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
diff --git a/library/test/src/test/java/com/bumptech/glide/util/ByteBufferUtilTest.java b/library/test/src/test/java/com/bumptech/glide/util/ByteBufferUtilTest.java
index 007e5a26b..a3b25df8f 100644
--- a/library/test/src/test/java/com/bumptech/glide/util/ByteBufferUtilTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/util/ByteBufferUtilTest.java
@@ -6,6 +6,8 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.nio.ByteBuffer;
+
+import com.bumptech.glide4.util.ByteBufferUtil;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
diff --git a/library/test/src/test/java/com/bumptech/glide/util/ContentLengthInputStreamTest.java b/library/test/src/test/java/com/bumptech/glide/util/ContentLengthInputStreamTest.java
index a9a912613..3e90655fe 100644
--- a/library/test/src/test/java/com/bumptech/glide/util/ContentLengthInputStreamTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/util/ContentLengthInputStreamTest.java
@@ -9,6 +9,8 @@
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.io.InputStream;
+
+import com.bumptech.glide4.util.ContentLengthInputStream;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/library/test/src/test/java/com/bumptech/glide/util/ExceptionCatchingInputStreamTest.java b/library/test/src/test/java/com/bumptech/glide/util/ExceptionCatchingInputStreamTest.java
index 913432b92..adf7e34c8 100644
--- a/library/test/src/test/java/com/bumptech/glide/util/ExceptionCatchingInputStreamTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/util/ExceptionCatchingInputStreamTest.java
@@ -11,10 +11,12 @@
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
-import com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream;
+import com.bumptech.glide4.load.resource.bitmap.RecyclableBufferedInputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.net.SocketTimeoutException;
+
+import com.bumptech.glide4.util.ExceptionCatchingInputStream;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/library/test/src/test/java/com/bumptech/glide/util/FixedPreloadSizeProviderTest.java b/library/test/src/test/java/com/bumptech/glide/util/FixedPreloadSizeProviderTest.java
index 8418cc85d..6da9301e0 100644
--- a/library/test/src/test/java/com/bumptech/glide/util/FixedPreloadSizeProviderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/util/FixedPreloadSizeProviderTest.java
@@ -2,6 +2,7 @@
 
 import static com.google.common.truth.Truth.assertThat;
 
+import com.bumptech.glide4.util.FixedPreloadSizeProvider;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
diff --git a/library/test/src/test/java/com/bumptech/glide/util/MarkEnforcingInputStreamTest.java b/library/test/src/test/java/com/bumptech/glide/util/MarkEnforcingInputStreamTest.java
index 5684e3c13..97f4b5bcc 100644
--- a/library/test/src/test/java/com/bumptech/glide/util/MarkEnforcingInputStreamTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/util/MarkEnforcingInputStreamTest.java
@@ -5,6 +5,8 @@
 
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
+
+import com.bumptech.glide4.util.MarkEnforcingInputStream;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
diff --git a/library/test/src/test/java/com/bumptech/glide/util/UtilTest.java b/library/test/src/test/java/com/bumptech/glide/util/UtilTest.java
index 416095784..f7411a082 100644
--- a/library/test/src/test/java/com/bumptech/glide/util/UtilTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/util/UtilTest.java
@@ -4,6 +4,7 @@
 import static org.junit.Assert.assertEquals;
 
 import android.graphics.Bitmap;
+import com.bumptech.glide4.util.Util;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
diff --git a/library/test/src/test/java/com/bumptech/glide/util/ViewPreloadSizeProviderTest.java b/library/test/src/test/java/com/bumptech/glide/util/ViewPreloadSizeProviderTest.java
index 5cc8f12ff..0c639f562 100644
--- a/library/test/src/test/java/com/bumptech/glide/util/ViewPreloadSizeProviderTest.java
+++ b/library/test/src/test/java/com/bumptech/glide/util/ViewPreloadSizeProviderTest.java
@@ -5,6 +5,7 @@
 
 import android.view.View;
 import android.view.ViewGroup;
+import com.bumptech.glide4.util.ViewPreloadSizeProvider;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/samples/contacturi/src/main/java/com/bumptech/glide/samples/contacturi/ContactUriModule.java b/samples/contacturi/src/main/java/com/bumptech/glide/samples/contacturi/ContactUriModule.java
index 14dec10a2..3141fcdf7 100644
--- a/samples/contacturi/src/main/java/com/bumptech/glide/samples/contacturi/ContactUriModule.java
+++ b/samples/contacturi/src/main/java/com/bumptech/glide/samples/contacturi/ContactUriModule.java
@@ -1,7 +1,7 @@
 package com.bumptech.glide.samples.contacturi;
 
-import com.bumptech.glide.annotation.GlideModule;
-import com.bumptech.glide.module.AppGlideModule;
+import com.bumptech.glide4.annotation.GlideModule;
+import com.bumptech.glide4.module.AppGlideModule;
 
 /**
  * Ensures that Glide's generated API is created for the Contact Uri sample.
diff --git a/samples/contacturi/src/main/java/com/bumptech/glide/samples/contacturi/MainActivity.java b/samples/contacturi/src/main/java/com/bumptech/glide/samples/contacturi/MainActivity.java
index c072483df..cc3a5edda 100644
--- a/samples/contacturi/src/main/java/com/bumptech/glide/samples/contacturi/MainActivity.java
+++ b/samples/contacturi/src/main/java/com/bumptech/glide/samples/contacturi/MainActivity.java
@@ -15,13 +15,14 @@
 import android.view.View;
 import android.widget.EditText;
 import android.widget.ImageView;
-import com.bumptech.glide.request.RequestOptions;
-import com.bumptech.glide.request.target.Target;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.request.RequestOptions;
+import com.bumptech.glide4.load.data.StreamLocalUriFetcher;
+import com.bumptech.glide4.request.target.Target;
+import com.bumptech.glide4.util.Preconditions;
 
 /**
  * An activity that demonstrates loading photos using
- * {@link com.bumptech.glide.load.data.StreamLocalUriFetcher content uris} through Glide.
+ * {@link StreamLocalUriFetcher content uris} through Glide.
  * It works by making the user to choose a contact when presses a button,
  * and after he chooses a contact with photo,
  * We try to load both a high res image and thumbnail image of that contact with various Uris.
diff --git a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrGlideExtension.java b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrGlideExtension.java
index 57c9ee173..12447d89d 100644
--- a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrGlideExtension.java
+++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrGlideExtension.java
@@ -1,9 +1,9 @@
 package com.bumptech.glide.samples.flickr;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.annotation.GlideExtension;
-import com.bumptech.glide.annotation.GlideOption;
-import com.bumptech.glide.request.BaseRequestOptions;
+import com.bumptech.glide4.annotation.GlideExtension;
+import com.bumptech.glide4.annotation.GlideOption;
+import com.bumptech.glide4.request.BaseRequestOptions;
 import com.bumptech.glide.samples.flickr.api.Api;
 
 /**
diff --git a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrGlideModule.java b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrGlideModule.java
index c0a1bce18..9804d9ec6 100644
--- a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrGlideModule.java
+++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrGlideModule.java
@@ -2,13 +2,13 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.GlideBuilder;
-import com.bumptech.glide.Registry;
-import com.bumptech.glide.annotation.GlideModule;
-import com.bumptech.glide.load.DecodeFormat;
-import com.bumptech.glide.module.AppGlideModule;
-import com.bumptech.glide.request.RequestOptions;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.GlideBuilder;
+import com.bumptech.glide4.Registry;
+import com.bumptech.glide4.annotation.GlideModule;
+import com.bumptech.glide4.load.DecodeFormat;
+import com.bumptech.glide4.module.AppGlideModule;
+import com.bumptech.glide4.request.RequestOptions;
 import com.bumptech.glide.samples.flickr.api.Photo;
 import java.io.InputStream;
 
diff --git a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrModelLoader.java b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrModelLoader.java
index a2b3d2f6e..365fd913e 100644
--- a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrModelLoader.java
+++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrModelLoader.java
@@ -1,13 +1,13 @@
 package com.bumptech.glide.samples.flickr;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.load.model.ModelCache;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoaderFactory;
-import com.bumptech.glide.load.model.MultiModelLoaderFactory;
-import com.bumptech.glide.load.model.stream.BaseGlideUrlLoader;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.ModelCache;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.model.MultiModelLoaderFactory;
+import com.bumptech.glide4.load.model.stream.BaseGlideUrlLoader;
 import com.bumptech.glide.samples.flickr.api.Api;
 import com.bumptech.glide.samples.flickr.api.Photo;
 import java.io.InputStream;
diff --git a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoGrid.java b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoGrid.java
index 65bc1ceab..723f89943 100644
--- a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoGrid.java
+++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoGrid.java
@@ -13,15 +13,15 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.ListPreloader;
-import com.bumptech.glide.Priority;
-import com.bumptech.glide.RequestBuilder;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.ListPreloader;
+import com.bumptech.glide4.Priority;
+import com.bumptech.glide4.RequestBuilder;
 import com.bumptech.glide.integration.recyclerview.RecyclerViewPreloader;
 import com.bumptech.glide.samples.flickr.api.Api;
 import com.bumptech.glide.samples.flickr.api.Photo;
-import com.bumptech.glide.util.FixedPreloadSizeProvider;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.util.FixedPreloadSizeProvider;
+import com.bumptech.glide4.util.Preconditions;
 import java.util.Collections;
 import java.util.List;
 
diff --git a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoList.java b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoList.java
index a9423c091..bcec620b1 100644
--- a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoList.java
+++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoList.java
@@ -1,6 +1,6 @@
 package com.bumptech.glide.samples.flickr;
 
-import static com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions.withCrossFade;
+import static com.bumptech.glide4.load.resource.drawable.DrawableTransitionOptions.withCrossFade;
 
 import android.content.Intent;
 import android.graphics.Color;
@@ -17,13 +17,13 @@
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
-import com.bumptech.glide.ListPreloader;
-import com.bumptech.glide.RequestBuilder;
+import com.bumptech.glide4.ListPreloader;
+import com.bumptech.glide4.RequestBuilder;
 import com.bumptech.glide.integration.recyclerview.RecyclerViewPreloader;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
+import com.bumptech.glide4.load.engine.DiskCacheStrategy;
 import com.bumptech.glide.samples.flickr.api.Api;
 import com.bumptech.glide.samples.flickr.api.Photo;
-import com.bumptech.glide.util.ViewPreloadSizeProvider;
+import com.bumptech.glide4.util.ViewPreloadSizeProvider;
 import java.util.Collections;
 import java.util.List;
 
diff --git a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrSearchActivity.java b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrSearchActivity.java
index d1b57740e..3852a71f3 100644
--- a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrSearchActivity.java
+++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrSearchActivity.java
@@ -20,8 +20,8 @@
 import android.view.ViewGroup;
 import android.widget.SearchView;
 import android.widget.TextView;
-import com.bumptech.glide.load.engine.prefill.PreFillType;
-import com.bumptech.glide.request.FutureTarget;
+import com.bumptech.glide4.load.engine.prefill.PreFillType;
+import com.bumptech.glide4.request.FutureTarget;
 import com.bumptech.glide.samples.flickr.api.Api;
 import com.bumptech.glide.samples.flickr.api.Photo;
 import com.bumptech.glide.samples.flickr.api.Query;
diff --git a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FullscreenActivity.java b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FullscreenActivity.java
index ba3095dc2..0ad9906cb 100644
--- a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FullscreenActivity.java
+++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FullscreenActivity.java
@@ -1,6 +1,6 @@
 package com.bumptech.glide.samples.flickr;
 
-import static com.bumptech.glide.request.RequestOptions.fitCenterTransform;
+import static com.bumptech.glide4.request.RequestOptions.fitCenterTransform;
 
 import android.content.Context;
 import android.content.Intent;
diff --git a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/api/Api.java b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/api/Api.java
index 6fa99de2c..d42495800 100644
--- a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/api/Api.java
+++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/api/Api.java
@@ -7,7 +7,7 @@
 import com.android.volley.RequestQueue;
 import com.android.volley.toolbox.StringRequest;
 import com.android.volley.toolbox.Volley;
-import com.bumptech.glide.util.LruCache;
+import com.bumptech.glide4.util.LruCache;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.HashSet;
diff --git a/samples/gallery/src/main/java/com/bumptech/glide/samples/gallery/GalleryModule.java b/samples/gallery/src/main/java/com/bumptech/glide/samples/gallery/GalleryModule.java
index e5d4888ab..1b5da4471 100644
--- a/samples/gallery/src/main/java/com/bumptech/glide/samples/gallery/GalleryModule.java
+++ b/samples/gallery/src/main/java/com/bumptech/glide/samples/gallery/GalleryModule.java
@@ -1,7 +1,7 @@
 package com.bumptech.glide.samples.gallery;
 
-import com.bumptech.glide.annotation.GlideModule;
-import com.bumptech.glide.module.AppGlideModule;
+import com.bumptech.glide4.annotation.GlideModule;
+import com.bumptech.glide4.module.AppGlideModule;
 
 /**
  * Ensures that Glide's generated API is created for the Gallery sample.
diff --git a/samples/gallery/src/main/java/com/bumptech/glide/samples/gallery/MainActivity.java b/samples/gallery/src/main/java/com/bumptech/glide/samples/gallery/MainActivity.java
index 1206230ff..147a63183 100644
--- a/samples/gallery/src/main/java/com/bumptech/glide/samples/gallery/MainActivity.java
+++ b/samples/gallery/src/main/java/com/bumptech/glide/samples/gallery/MainActivity.java
@@ -11,7 +11,7 @@
 import android.support.v4.app.FragmentActivity;
 import android.support.v4.content.ContextCompat;
 import android.widget.Toast;
-import com.bumptech.glide.MemoryCategory;
+import com.bumptech.glide4.MemoryCategory;
 
 /**
  * Displays a {@link HorizontalGalleryFragment}.
diff --git a/samples/gallery/src/main/java/com/bumptech/glide/samples/gallery/RecyclerAdapter.java b/samples/gallery/src/main/java/com/bumptech/glide/samples/gallery/RecyclerAdapter.java
index 53698d6dd..edc137749 100644
--- a/samples/gallery/src/main/java/com/bumptech/glide/samples/gallery/RecyclerAdapter.java
+++ b/samples/gallery/src/main/java/com/bumptech/glide/samples/gallery/RecyclerAdapter.java
@@ -13,11 +13,11 @@
 import android.view.ViewTreeObserver;
 import android.view.WindowManager;
 import android.widget.ImageView;
-import com.bumptech.glide.ListPreloader;
-import com.bumptech.glide.RequestBuilder;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.signature.MediaStoreSignature;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.ListPreloader;
+import com.bumptech.glide4.RequestBuilder;
+import com.bumptech.glide4.load.Key;
+import com.bumptech.glide4.signature.MediaStoreSignature;
+import com.bumptech.glide4.util.Preconditions;
 import java.util.Collections;
 import java.util.List;
 
diff --git a/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/Api.java b/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/Api.java
index 4f78d2d69..c2374800d 100644
--- a/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/Api.java
+++ b/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/Api.java
@@ -3,7 +3,7 @@
 import android.os.Handler;
 import android.os.HandlerThread;
 import android.os.Looper;
-import com.bumptech.glide.util.Util;
+import com.bumptech.glide4.util.Util;
 import com.google.gson.Gson;
 import java.io.IOException;
 import java.io.InputStream;
diff --git a/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/FullscreenActivity.java b/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/FullscreenActivity.java
index fd92665ea..02905c6db 100644
--- a/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/FullscreenActivity.java
+++ b/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/FullscreenActivity.java
@@ -10,12 +10,12 @@
 import android.os.Bundle;
 import android.view.View;
 import android.widget.ImageView;
-import com.bumptech.glide.RequestBuilder;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.engine.GlideException;
-import com.bumptech.glide.load.resource.gif.GifDrawable;
-import com.bumptech.glide.request.RequestListener;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.RequestBuilder;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.engine.GlideException;
+import com.bumptech.glide4.load.resource.gif.GifDrawable;
+import com.bumptech.glide4.request.RequestListener;
+import com.bumptech.glide4.request.target.Target;
 import com.google.gson.Gson;
 
 /**
diff --git a/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/GiphyGlideModule.java b/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/GiphyGlideModule.java
index 6fbca3826..965a40c5a 100644
--- a/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/GiphyGlideModule.java
+++ b/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/GiphyGlideModule.java
@@ -2,10 +2,10 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.Registry;
-import com.bumptech.glide.annotation.GlideModule;
-import com.bumptech.glide.module.AppGlideModule;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.Registry;
+import com.bumptech.glide4.annotation.GlideModule;
+import com.bumptech.glide4.module.AppGlideModule;
 import java.io.InputStream;
 
 /**
diff --git a/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/GiphyModelLoader.java b/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/GiphyModelLoader.java
index a0163074e..2719b7ee5 100644
--- a/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/GiphyModelLoader.java
+++ b/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/GiphyModelLoader.java
@@ -2,12 +2,12 @@
 
 import android.support.annotation.NonNull;
 import android.text.TextUtils;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.model.GlideUrl;
-import com.bumptech.glide.load.model.ModelLoader;
-import com.bumptech.glide.load.model.ModelLoaderFactory;
-import com.bumptech.glide.load.model.MultiModelLoaderFactory;
-import com.bumptech.glide.load.model.stream.BaseGlideUrlLoader;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.model.GlideUrl;
+import com.bumptech.glide4.load.model.ModelLoader;
+import com.bumptech.glide4.load.model.ModelLoaderFactory;
+import com.bumptech.glide4.load.model.MultiModelLoaderFactory;
+import com.bumptech.glide4.load.model.stream.BaseGlideUrlLoader;
 import com.bumptech.glide.samples.giphy.Api.GifResult;
 import java.io.InputStream;
 
diff --git a/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/MainActivity.java b/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/MainActivity.java
index 947518cca..e8c517c19 100644
--- a/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/MainActivity.java
+++ b/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/MainActivity.java
@@ -16,11 +16,11 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
-import com.bumptech.glide.ListPreloader;
-import com.bumptech.glide.RequestBuilder;
+import com.bumptech.glide4.ListPreloader;
+import com.bumptech.glide4.RequestBuilder;
 import com.bumptech.glide.integration.recyclerview.RecyclerViewPreloader;
-import com.bumptech.glide.util.Preconditions;
-import com.bumptech.glide.util.ViewPreloadSizeProvider;
+import com.bumptech.glide4.util.Preconditions;
+import com.bumptech.glide4.util.ViewPreloadSizeProvider;
 import java.util.Collections;
 import java.util.List;
 
diff --git a/samples/imgur/src/main/java/com/bumptech/glide/samples/imgur/ImgurGlideModule.java b/samples/imgur/src/main/java/com/bumptech/glide/samples/imgur/ImgurGlideModule.java
index c673ad244..d2edb201f 100644
--- a/samples/imgur/src/main/java/com/bumptech/glide/samples/imgur/ImgurGlideModule.java
+++ b/samples/imgur/src/main/java/com/bumptech/glide/samples/imgur/ImgurGlideModule.java
@@ -1,7 +1,7 @@
 package com.bumptech.glide.samples.imgur;
 
-import com.bumptech.glide.annotation.GlideModule;
-import com.bumptech.glide.module.AppGlideModule;
+import com.bumptech.glide4.annotation.GlideModule;
+import com.bumptech.glide4.module.AppGlideModule;
 
 /**
  * Generates a Glide API for the Imgur sample.
diff --git a/samples/svg/src/main/java/com/bumptech/glide/samples/svg/MainActivity.java b/samples/svg/src/main/java/com/bumptech/glide/samples/svg/MainActivity.java
index d91a9f665..6a9e06ac3 100644
--- a/samples/svg/src/main/java/com/bumptech/glide/samples/svg/MainActivity.java
+++ b/samples/svg/src/main/java/com/bumptech/glide/samples/svg/MainActivity.java
@@ -1,6 +1,6 @@
 package com.bumptech.glide.samples.svg;
 
-import static com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions.withCrossFade;
+import static com.bumptech.glide4.load.resource.drawable.DrawableTransitionOptions.withCrossFade;
 
 import android.app.Activity;
 import android.content.ContentResolver;
@@ -11,9 +11,9 @@
 import android.view.View;
 import android.widget.ImageView;
 import android.widget.TextView;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.RequestBuilder;
-import com.bumptech.glide.util.Preconditions;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.RequestBuilder;
+import com.bumptech.glide4.util.Preconditions;
 import java.io.File;
 
 /**
diff --git a/samples/svg/src/main/java/com/bumptech/glide/samples/svg/SvgDecoder.java b/samples/svg/src/main/java/com/bumptech/glide/samples/svg/SvgDecoder.java
index ad2212227..4a9efd637 100644
--- a/samples/svg/src/main/java/com/bumptech/glide/samples/svg/SvgDecoder.java
+++ b/samples/svg/src/main/java/com/bumptech/glide/samples/svg/SvgDecoder.java
@@ -1,10 +1,10 @@
 package com.bumptech.glide.samples.svg;
 
 import android.support.annotation.NonNull;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.ResourceDecoder;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.resource.SimpleResource;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.ResourceDecoder;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.resource.SimpleResource;
 import com.caverock.androidsvg.SVG;
 import com.caverock.androidsvg.SVGParseException;
 import java.io.IOException;
diff --git a/samples/svg/src/main/java/com/bumptech/glide/samples/svg/SvgDrawableTranscoder.java b/samples/svg/src/main/java/com/bumptech/glide/samples/svg/SvgDrawableTranscoder.java
index a3fd80abf..60d0b41d2 100644
--- a/samples/svg/src/main/java/com/bumptech/glide/samples/svg/SvgDrawableTranscoder.java
+++ b/samples/svg/src/main/java/com/bumptech/glide/samples/svg/SvgDrawableTranscoder.java
@@ -4,10 +4,10 @@
 import android.graphics.drawable.PictureDrawable;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import com.bumptech.glide.load.Options;
-import com.bumptech.glide.load.engine.Resource;
-import com.bumptech.glide.load.resource.SimpleResource;
-import com.bumptech.glide.load.resource.transcode.ResourceTranscoder;
+import com.bumptech.glide4.load.Options;
+import com.bumptech.glide4.load.engine.Resource;
+import com.bumptech.glide4.load.resource.SimpleResource;
+import com.bumptech.glide4.load.resource.transcode.ResourceTranscoder;
 import com.caverock.androidsvg.SVG;
 
 /**
diff --git a/samples/svg/src/main/java/com/bumptech/glide/samples/svg/SvgModule.java b/samples/svg/src/main/java/com/bumptech/glide/samples/svg/SvgModule.java
index fdd14df98..7203391a7 100644
--- a/samples/svg/src/main/java/com/bumptech/glide/samples/svg/SvgModule.java
+++ b/samples/svg/src/main/java/com/bumptech/glide/samples/svg/SvgModule.java
@@ -3,10 +3,10 @@
 import android.content.Context;
 import android.graphics.drawable.PictureDrawable;
 import android.support.annotation.NonNull;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.Registry;
-import com.bumptech.glide.annotation.GlideModule;
-import com.bumptech.glide.module.AppGlideModule;
+import com.bumptech.glide4.Glide;
+import com.bumptech.glide4.Registry;
+import com.bumptech.glide4.annotation.GlideModule;
+import com.bumptech.glide4.module.AppGlideModule;
 import com.caverock.androidsvg.SVG;
 import java.io.InputStream;
 
diff --git a/samples/svg/src/main/java/com/bumptech/glide/samples/svg/SvgSoftwareLayerSetter.java b/samples/svg/src/main/java/com/bumptech/glide/samples/svg/SvgSoftwareLayerSetter.java
index a28a21b7c..5fb96e1b2 100644
--- a/samples/svg/src/main/java/com/bumptech/glide/samples/svg/SvgSoftwareLayerSetter.java
+++ b/samples/svg/src/main/java/com/bumptech/glide/samples/svg/SvgSoftwareLayerSetter.java
@@ -2,11 +2,11 @@
 
 import android.graphics.drawable.PictureDrawable;
 import android.widget.ImageView;
-import com.bumptech.glide.load.DataSource;
-import com.bumptech.glide.load.engine.GlideException;
-import com.bumptech.glide.request.RequestListener;
-import com.bumptech.glide.request.target.ImageViewTarget;
-import com.bumptech.glide.request.target.Target;
+import com.bumptech.glide4.load.DataSource;
+import com.bumptech.glide4.load.engine.GlideException;
+import com.bumptech.glide4.request.RequestListener;
+import com.bumptech.glide4.request.target.ImageViewTarget;
+import com.bumptech.glide4.request.target.Target;
 
 /**
  * Listener which updates the {@link ImageView} to be software rendered, because
diff --git a/settings.gradle b/settings.gradle
index 360b59b47..de52d1f2d 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -13,7 +13,7 @@ include ':annotation:compiler:test'
 include ':glide'
 include ':third_party:gif_decoder'
 include ':third_party:disklrucache'
-include ':samples:flickr'
+//include ':samples:flickr'
 include ':samples:giphy'
 include ':samples:svg'
 include ':samples:gallery'
