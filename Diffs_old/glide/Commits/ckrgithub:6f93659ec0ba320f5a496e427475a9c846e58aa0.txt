diff --git a/annotation/compiler/test/build.gradle b/annotation/compiler/test/build.gradle
index e4573f90a..8dfcbc842 100644
--- a/annotation/compiler/test/build.gradle
+++ b/annotation/compiler/test/build.gradle
@@ -11,26 +11,26 @@ sourceSets {
 // easier to parse as a separate module given the existing complexity here and in the compiler
 dependencies {
     // build.gradle file.
-    testImplementation project(':glide')
-    testImplementation project(':annotation:compiler')
-    testImplementation "junit:junit:${JUNIT_VERSION}"
-    testImplementation "com.squareup:javapoet:${JAVAPOET_VERSION}"
-    testImplementation "com.google.auto.service:auto-service:${AUTO_SERVICE_VERSION}"
-    testImplementation "com.google.code.findbugs:jsr305:${JSR_305_VERSION}"
+//    testImplementation project(':glide')
+//    testImplementation project(':annotation:compiler')
+//    testImplementation "junit:junit:${JUNIT_VERSION}"
+//    testImplementation "com.squareup:javapoet:${JAVAPOET_VERSION}"
+//    testImplementation "com.google.auto.service:auto-service:${AUTO_SERVICE_VERSION}"
+//    testImplementation "com.google.code.findbugs:jsr305:${JSR_305_VERSION}"
     // Using 0.10 of compile-testing is required for Android Studio to function, but not for the
     // gradle build. Not yet clear why, but it looks like some kind of version conflict between
     // javapoet, guava and/or truth.
     //noinspection GradleDependency
-    testImplementation 'com.google.testing.compile:compile-testing:0.10'
+//    testImplementation 'com.google.testing.compile:compile-testing:0.10'
     // Use a stupidly old version of the Android classes jar. This works because we just need to get
     // our generated classes to compile and our generated classes tend to use simple and stable
     // Android APIs. If that changes, we'll need to find an alternative.
-    testImplementation 'com.google.android:android:4.1.1.4'
+//    testImplementation 'com.google.android:android:4.1.1.4'
     // Use a stupidly old version of v4 because it's a jar. The newer support v4 packages are aars,
     // which we can't depend on in a standard Java test. Since our usage of v4 is pretty simple,
     // hopefully this will continue to work going forward.
-    testImplementation 'com.google.android:support-v4:r6'
-    testImplementation "com.android.support:support-annotations:${ANDROID_SUPPORT_VERSION}"
+//    testImplementation 'com.google.android:support-v4:r6'
+//    testImplementation "com.android.support:support-annotations:${ANDROID_SUPPORT_VERSION}"
 }
 
 task regenerateTestResources {
diff --git a/build.gradle b/build.gradle
index c689d6105..c9728c31d 100644
--- a/build.gradle
+++ b/build.gradle
@@ -41,44 +41,44 @@ subprojects { project ->
         }
     }
 
-    tasks.withType(JavaCompile) {
-        sourceCompatibility = 1.7
-        targetCompatibility = 1.7
-
-        options.setBootstrapClasspath(files("${System.getProperty('java.home')}/lib/rt.jar"))
-        // gifencoder is a legacy project that has a ton of warnings and is basically never
-        // modified, so we're not going to worry about cleaning it up.
-        if ("gifencoder" != project.getName()) {
-          options.compilerArgs \
-                /*
-                 * Treat all warnings as errors.
-                 */ \
-                << "-Werror" \
-                /*
-                 * Enable all warnings.
-                 */ \
-                << "-Xlint:all" \
-                /*
-                 * Java expects every annotation to have a processor, but we use
-                 * javax.annotation.Nullable, which doesn't have one.
-                 */ \
-                << "-Xlint:-processing" \
-                /*
-                 * See https://github.com/google/dagger/issues/945
-                 * and https://bugs.openjdk.java.net/browse/JDK-8190452
-                 */ \
-                << "-Xlint:-classfile" \
-                /*
-                 * Disable deprecation warnings for ViewTarget/BaseTarget for now.
-                 */ \
-                << "-Xlint:-deprecation"
-
-            if (project.plugins.hasPlugin('net.ltgt.errorprone')) {
-                // It's often useful to track individual objects when debugging object pooling.
-                options.compilerArgs << "-Xep:ObjectToString:OFF"
-            }
-        }
-    }
+//    tasks.withType(JavaCompile) {
+//        sourceCompatibility = 1.7
+//        targetCompatibility = 1.7
+//
+//        options.setBootstrapClasspath(files("${System.getProperty('java.home')}/lib/rt.jar"))
+//        // gifencoder is a legacy project that has a ton of warnings and is basically never
+//        // modified, so we're not going to worry about cleaning it up.
+//        if ("gifencoder" != project.getName()) {
+//          options.compilerArgs \
+//                /*
+//                 * Treat all warnings as errors.
+//                 */ \
+//                << "-Werror" \
+//                /*
+//                 * Enable all warnings.
+//                 */ \
+//                << "-Xlint:all" \
+//                /*
+//                 * Java expects every annotation to have a processor, but we use
+//                 * javax.annotation.Nullable, which doesn't have one.
+//                 */ \
+//                << "-Xlint:-processing" \
+//                /*
+//                 * See https://github.com/google/dagger/issues/945
+//                 * and https://bugs.openjdk.java.net/browse/JDK-8190452
+//                 */ \
+//                << "-Xlint:-classfile" \
+//                /*
+//                 * Disable deprecation warnings for ViewTarget/BaseTarget for now.
+//                 */ \
+//                << "-Xlint:-deprecation"
+//
+//            if (project.plugins.hasPlugin('net.ltgt.errorprone')) {
+//                // It's often useful to track individual objects when debugging object pooling.
+//                options.compilerArgs << "-Xep:ObjectToString:OFF"
+//            }
+//        }
+//    }
 
     tasks.withType(Test) {
         testLogging {
diff --git a/gradle.properties b/gradle.properties
index 0af4d3a62..91138c597 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -19,7 +19,7 @@ ANDROID_SUPPORT_VERSION=27.1.1
 ANDROIDX_TEST_VERSION=1.1.0-alpha4
 VOLLEY_VERSION=1.0.0
 OK_HTTP_VERSION=3.9.1
-ANDROID_GRADLE_VERSION=3.1.3
+ANDROID_GRADLE_VERSION=3.0.1
 DAGGER_VERSION=2.11
 
 JUNIT_VERSION=4.13-SNAPSHOT
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 9a4163a4f..45d84399a 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.6-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.1-all.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
