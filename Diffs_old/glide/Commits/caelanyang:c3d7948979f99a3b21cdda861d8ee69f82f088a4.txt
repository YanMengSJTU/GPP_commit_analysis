diff --git a/.idea/codeStyleSettings.xml b/.idea/codeStyleSettings.xml
deleted file mode 100644
index ebd90ff05..000000000
--- a/.idea/codeStyleSettings.xml
+++ /dev/null
@@ -1,564 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectCodeStyleSettingsManager">
-    <option name="PER_PROJECT_SETTINGS">
-      <value>
-        <option name="OTHER_INDENT_OPTIONS">
-          <value>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-            <option name="USE_TAB_CHARACTER" value="false" />
-            <option name="SMART_TABS" value="false" />
-            <option name="LABEL_INDENT_SIZE" value="0" />
-            <option name="LABEL_INDENT_ABSOLUTE" value="false" />
-            <option name="USE_RELATIVE_INDENTS" value="false" />
-          </value>
-        </option>
-        <option name="INSERT_INNER_CLASS_IMPORTS" value="true" />
-        <option name="CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND" value="999" />
-        <option name="NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND" value="999" />
-        <option name="PACKAGES_TO_USE_IMPORT_ON_DEMAND">
-          <value />
-        </option>
-        <option name="IMPORT_LAYOUT_TABLE">
-          <value>
-            <package name="" withSubpackages="true" static="true" />
-            <emptyLine />
-            <package name="" withSubpackages="true" static="false" />
-          </value>
-        </option>
-        <option name="RIGHT_MARGIN" value="100" />
-        <option name="JD_P_AT_EMPTY_LINES" value="false" />
-        <option name="JD_KEEP_EMPTY_PARAMETER" value="false" />
-        <option name="JD_KEEP_EMPTY_EXCEPTION" value="false" />
-        <option name="JD_KEEP_EMPTY_RETURN" value="false" />
-        <option name="KEEP_CONTROL_STATEMENT_IN_ONE_LINE" value="false" />
-        <option name="KEEP_BLANK_LINES_IN_CODE" value="1" />
-        <option name="KEEP_BLANK_LINES_BEFORE_RBRACE" value="0" />
-        <option name="ALIGN_MULTILINE_PARAMETERS" value="false" />
-        <option name="ALIGN_MULTILINE_FOR" value="false" />
-        <option name="SPACE_BEFORE_ARRAY_INITIALIZER_LBRACE" value="true" />
-        <option name="CALL_PARAMETERS_WRAP" value="1" />
-        <option name="METHOD_PARAMETERS_WRAP" value="1" />
-        <option name="EXTENDS_LIST_WRAP" value="1" />
-        <option name="THROWS_KEYWORD_WRAP" value="1" />
-        <option name="METHOD_CALL_CHAIN_WRAP" value="1" />
-        <option name="BINARY_OPERATION_WRAP" value="1" />
-        <option name="BINARY_OPERATION_SIGN_ON_NEXT_LINE" value="true" />
-        <option name="TERNARY_OPERATION_WRAP" value="1" />
-        <option name="TERNARY_OPERATION_SIGNS_ON_NEXT_LINE" value="true" />
-        <option name="FOR_STATEMENT_WRAP" value="1" />
-        <option name="ARRAY_INITIALIZER_WRAP" value="1" />
-        <option name="WRAP_COMMENTS" value="true" />
-        <option name="IF_BRACE_FORCE" value="3" />
-        <option name="DOWHILE_BRACE_FORCE" value="3" />
-        <option name="WHILE_BRACE_FORCE" value="3" />
-        <option name="FOR_BRACE_FORCE" value="3" />
-        <AndroidXmlCodeStyleSettings>
-          <option name="USE_CUSTOM_SETTINGS" value="true" />
-          <option name="LAYOUT_SETTINGS">
-            <value>
-              <option name="INSERT_BLANK_LINE_BEFORE_TAG" value="false" />
-            </value>
-          </option>
-        </AndroidXmlCodeStyleSettings>
-        <JSCodeStyleSettings>
-          <option name="INDENT_CHAINED_CALLS" value="false" />
-        </JSCodeStyleSettings>
-        <JavaCodeStyleSettings>
-          <option name="DO_NOT_WRAP_AFTER_SINGLE_ANNOTATION" value="true" />
-        </JavaCodeStyleSettings>
-        <Python>
-          <option name="USE_CONTINUATION_INDENT_FOR_ARGUMENTS" value="true" />
-        </Python>
-        <TypeScriptCodeStyleSettings>
-          <option name="INDENT_CHAINED_CALLS" value="false" />
-        </TypeScriptCodeStyleSettings>
-        <XML>
-          <option name="XML_ALIGN_ATTRIBUTES" value="false" />
-          <option name="XML_LEGACY_SETTINGS_IMPORTED" value="true" />
-        </XML>
-        <codeStyleSettings language="CSS">
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="ECMA Script Level 4">
-          <option name="KEEP_BLANK_LINES_IN_CODE" value="1" />
-          <option name="ALIGN_MULTILINE_PARAMETERS" value="false" />
-          <option name="ALIGN_MULTILINE_FOR" value="false" />
-          <option name="CALL_PARAMETERS_WRAP" value="1" />
-          <option name="METHOD_PARAMETERS_WRAP" value="1" />
-          <option name="EXTENDS_LIST_WRAP" value="1" />
-          <option name="BINARY_OPERATION_WRAP" value="1" />
-          <option name="BINARY_OPERATION_SIGN_ON_NEXT_LINE" value="true" />
-          <option name="TERNARY_OPERATION_WRAP" value="1" />
-          <option name="TERNARY_OPERATION_SIGNS_ON_NEXT_LINE" value="true" />
-          <option name="FOR_STATEMENT_WRAP" value="1" />
-          <option name="ARRAY_INITIALIZER_WRAP" value="1" />
-          <option name="IF_BRACE_FORCE" value="3" />
-          <option name="DOWHILE_BRACE_FORCE" value="3" />
-          <option name="WHILE_BRACE_FORCE" value="3" />
-          <option name="FOR_BRACE_FORCE" value="3" />
-          <option name="PARENT_SETTINGS_INSTALLED" value="true" />
-        </codeStyleSettings>
-        <codeStyleSettings language="HTML">
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="JAVA">
-          <option name="KEEP_CONTROL_STATEMENT_IN_ONE_LINE" value="false" />
-          <option name="KEEP_BLANK_LINES_IN_CODE" value="1" />
-          <option name="ALIGN_MULTILINE_PARAMETERS" value="false" />
-          <option name="ALIGN_MULTILINE_RESOURCES" value="false" />
-          <option name="ALIGN_MULTILINE_FOR" value="false" />
-          <option name="CALL_PARAMETERS_WRAP" value="1" />
-          <option name="METHOD_PARAMETERS_WRAP" value="1" />
-          <option name="EXTENDS_LIST_WRAP" value="1" />
-          <option name="THROWS_KEYWORD_WRAP" value="1" />
-          <option name="METHOD_CALL_CHAIN_WRAP" value="1" />
-          <option name="BINARY_OPERATION_WRAP" value="1" />
-          <option name="BINARY_OPERATION_SIGN_ON_NEXT_LINE" value="true" />
-          <option name="TERNARY_OPERATION_WRAP" value="1" />
-          <option name="TERNARY_OPERATION_SIGNS_ON_NEXT_LINE" value="true" />
-          <option name="KEEP_SIMPLE_BLOCKS_IN_ONE_LINE" value="true" />
-          <option name="KEEP_SIMPLE_METHODS_IN_ONE_LINE" value="true" />
-          <option name="KEEP_SIMPLE_LAMBDAS_IN_ONE_LINE" value="true" />
-          <option name="KEEP_SIMPLE_CLASSES_IN_ONE_LINE" value="true" />
-          <option name="FOR_STATEMENT_WRAP" value="1" />
-          <option name="ARRAY_INITIALIZER_WRAP" value="1" />
-          <option name="IF_BRACE_FORCE" value="3" />
-          <option name="DOWHILE_BRACE_FORCE" value="3" />
-          <option name="WHILE_BRACE_FORCE" value="3" />
-          <option name="FOR_BRACE_FORCE" value="3" />
-          <option name="PARENT_SETTINGS_INSTALLED" value="true" />
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="JSON">
-          <indentOptions>
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="JavaScript">
-          <option name="RIGHT_MARGIN" value="80" />
-          <option name="KEEP_BLANK_LINES_IN_CODE" value="1" />
-          <option name="ALIGN_MULTILINE_PARAMETERS" value="false" />
-          <option name="ALIGN_MULTILINE_FOR" value="false" />
-          <option name="CALL_PARAMETERS_WRAP" value="1" />
-          <option name="METHOD_PARAMETERS_WRAP" value="1" />
-          <option name="BINARY_OPERATION_WRAP" value="1" />
-          <option name="BINARY_OPERATION_SIGN_ON_NEXT_LINE" value="true" />
-          <option name="TERNARY_OPERATION_WRAP" value="1" />
-          <option name="TERNARY_OPERATION_SIGNS_ON_NEXT_LINE" value="true" />
-          <option name="FOR_STATEMENT_WRAP" value="1" />
-          <option name="ARRAY_INITIALIZER_WRAP" value="1" />
-          <option name="IF_BRACE_FORCE" value="3" />
-          <option name="DOWHILE_BRACE_FORCE" value="3" />
-          <option name="WHILE_BRACE_FORCE" value="3" />
-          <option name="FOR_BRACE_FORCE" value="3" />
-          <option name="PARENT_SETTINGS_INSTALLED" value="true" />
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="ObjectiveC">
-          <option name="KEEP_BLANK_LINES_BEFORE_RBRACE" value="1" />
-          <option name="BLANK_LINES_BEFORE_IMPORTS" value="0" />
-          <option name="BLANK_LINES_AFTER_IMPORTS" value="0" />
-          <option name="BLANK_LINES_AROUND_CLASS" value="0" />
-          <option name="BLANK_LINES_AROUND_METHOD" value="0" />
-          <option name="BLANK_LINES_AROUND_METHOD_IN_INTERFACE" value="0" />
-          <option name="ALIGN_MULTILINE_BINARY_OPERATION" value="false" />
-          <option name="BINARY_OPERATION_SIGN_ON_NEXT_LINE" value="true" />
-          <option name="FOR_STATEMENT_WRAP" value="1" />
-          <option name="ASSIGNMENT_WRAP" value="1" />
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="PROTO">
-          <option name="RIGHT_MARGIN" value="80" />
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="2" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="Python">
-          <option name="KEEP_BLANK_LINES_IN_CODE" value="1" />
-          <option name="RIGHT_MARGIN" value="80" />
-          <option name="ALIGN_MULTILINE_PARAMETERS" value="false" />
-          <option name="PARENT_SETTINGS_INSTALLED" value="true" />
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="SASS">
-          <indentOptions>
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="SCSS">
-          <indentOptions>
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="TypeScript">
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="XML">
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="2" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-          <arrangement>
-            <rules>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>xmlns:android</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>^$</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>xmlns:.*</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>^$</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:id</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>style</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>^$</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>^$</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:.*Style</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_width</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_height</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_weight</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_margin</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginTop</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginBottom</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginStart</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginEnd</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginLeft</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginRight</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_.*</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:padding</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingTop</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingBottom</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingStart</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingEnd</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingLeft</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingRight</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res-auto</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_NAMESPACE>http://schemas.android.com/tools</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_NAMESPACE>.*</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-            </rules>
-          </arrangement>
-        </codeStyleSettings>
-        <codeStyleSettings language="protobuf">
-          <option name="RIGHT_MARGIN" value="80" />
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="2" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-      </value>
-    </option>
-    <option name="USE_PER_PROJECT_SETTINGS" value="true" />
-  </component>
-</project>
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
deleted file mode 100644
index 1c2b4c84f..000000000
--- a/.idea/inspectionProfiles/Project_Default.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<component name="InspectionProjectProfileManager">
-  <profile version="1.0">
-    <option name="myName" value="Project Default" />
-    <inspection_tool class="SerializableHasSerialVersionUIDField" enabled="true" level="WARNING" enabled_by_default="true">
-      <option name="ignoreAnonymousInnerClasses" value="false" />
-      <option name="superClassString" value="" />
-    </inspection_tool>
-  </profile>
-</component>
\ No newline at end of file
diff --git a/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java b/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java
index 7d25d760b..32fe2c7d4 100644
--- a/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java
+++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java
@@ -21,10 +21,12 @@
 import android.support.v4.util.ArrayMap;
 import android.util.Log;
 import android.view.View;
+
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.RequestManager;
 import com.bumptech.glide.util.Preconditions;
 import com.bumptech.glide.util.Util;
+
 import java.util.Collection;
 import java.util.HashMap;
 import java.util.Map;
@@ -34,412 +36,413 @@
  * retrieving existing ones from activities and fragment.
  */
 public class RequestManagerRetriever implements Handler.Callback {
-  @VisibleForTesting
-  static final String FRAGMENT_TAG = "com.bumptech.glide.manager";
-  private static final String TAG = "RMRetriever";
-
-  private static final int ID_REMOVE_FRAGMENT_MANAGER = 1;
-  private static final int ID_REMOVE_SUPPORT_FRAGMENT_MANAGER = 2;
-
-  // Hacks based on the implementation of FragmentManagerImpl in the non-support libraries that
-  // allow us to iterate over and retrieve all active Fragments in a FragmentManager.
-  private static final String FRAGMENT_INDEX_KEY = "key";
-
-  /**
-   * The top application level RequestManager.
-   */
-  private volatile RequestManager applicationManager;
-
-  /**
-   * Pending adds for RequestManagerFragments.
-   */
-  @VisibleForTesting
-  final Map<android.app.FragmentManager, RequestManagerFragment> pendingRequestManagerFragments =
-      new HashMap<>();
-
-  /**
-   * Pending adds for SupportRequestManagerFragments.
-   */
-  @VisibleForTesting
-  final Map<FragmentManager, SupportRequestManagerFragment> pendingSupportRequestManagerFragments =
-      new HashMap<>();
-
-  /**
-   * Main thread handler to handle cleaning up pending fragment maps.
-   */
-  private final Handler handler;
-  private final RequestManagerFactory factory;
-
-  // Objects used to find Fragments and Activities containing views.
-  private final ArrayMap<View, Fragment> tempViewToSupportFragment = new ArrayMap<>();
-  private final ArrayMap<View, android.app.Fragment> tempViewToFragment = new ArrayMap<>();
-  private final Bundle tempBundle = new Bundle();
-
-  public RequestManagerRetriever(@Nullable RequestManagerFactory factory) {
-    this.factory = factory != null ? factory : DEFAULT_FACTORY;
-    handler = new Handler(Looper.getMainLooper(), this /* Callback */);
-  }
-
-  @NonNull
-  private RequestManager getApplicationManager(@NonNull Context context) {
-    // Either an application context or we're on a background thread.
-    if (applicationManager == null) {
-      synchronized (this) {
+    @VisibleForTesting
+    static final String FRAGMENT_TAG = "com.bumptech.glide.manager";
+    private static final String TAG = "RMRetriever";
+
+    private static final int ID_REMOVE_FRAGMENT_MANAGER = 1;
+    private static final int ID_REMOVE_SUPPORT_FRAGMENT_MANAGER = 2;
+
+    // Hacks based on the implementation of FragmentManagerImpl in the non-support libraries that
+    // allow us to iterate over and retrieve all active Fragments in a FragmentManager.
+    private static final String FRAGMENT_INDEX_KEY = "key";
+
+    /**
+     * The top application level RequestManager.
+     */
+    private volatile RequestManager applicationManager;
+
+    /**
+     * Pending adds for RequestManagerFragments.
+     */
+    @VisibleForTesting
+    final Map<android.app.FragmentManager, RequestManagerFragment> pendingRequestManagerFragments =
+            new HashMap<>();
+
+    /**
+     * Pending adds for SupportRequestManagerFragments.
+     */
+    @VisibleForTesting
+    final Map<FragmentManager, SupportRequestManagerFragment> pendingSupportRequestManagerFragments =
+            new HashMap<>();
+
+    /**
+     * Main thread handler to handle cleaning up pending fragment maps.
+     */
+    private final Handler handler;
+    private final RequestManagerFactory factory;
+
+    // Objects used to find Fragments and Activities containing views.
+    private final ArrayMap<View, Fragment> tempViewToSupportFragment = new ArrayMap<>();
+    private final ArrayMap<View, android.app.Fragment> tempViewToFragment = new ArrayMap<>();
+    private final Bundle tempBundle = new Bundle();
+
+    public RequestManagerRetriever(@Nullable RequestManagerFactory factory) {
+        this.factory = factory != null ? factory : DEFAULT_FACTORY;
+        handler = new Handler(Looper.getMainLooper(), this /* Callback */);
+    }
+
+    @NonNull
+    private RequestManager getApplicationManager(@NonNull Context context) {
+        // Either an application context or we're on a background thread.
         if (applicationManager == null) {
-          // Normally pause/resume is taken care of by the fragment we add to the fragment or
-          // activity. However, in this case since the manager attached to the application will not
-          // receive lifecycle events, we must force the manager to start resumed using
-          // ApplicationLifecycle.
-
-          // TODO(b/27524013): Factor out this Glide.get() call.
-          Glide glide = Glide.get(context.getApplicationContext());
-          applicationManager =
-              factory.build(
-                  glide,
-                  new ApplicationLifecycle(),
-                  new EmptyRequestManagerTreeNode(),
-                  context.getApplicationContext());
+            synchronized (this) {
+                if (applicationManager == null) {
+                    // Normally pause/resume is taken care of by the fragment we add to the fragment or
+                    // activity. However, in this case since the manager attached to the application will not
+                    // receive lifecycle events, we must force the manager to start resumed using
+                    // ApplicationLifecycle.
+
+                    // TODO(b/27524013): Factor out this Glide.get() call.
+                    Glide glide = Glide.get(context.getApplicationContext());
+                    applicationManager =
+                            factory.build(
+                                    glide,
+                                    new ApplicationLifecycle(),
+                                    new EmptyRequestManagerTreeNode(),
+                                    context.getApplicationContext());
+                }
+            }
         }
-      }
-    }
 
-    return applicationManager;
-  }
-
-  @NonNull
-  public RequestManager get(@NonNull Context context) {
-    if (context == null) {
-      throw new IllegalArgumentException("You cannot start a load on a null Context");
-    } else if (Util.isOnMainThread() && !(context instanceof Application)) {
-      if (context instanceof FragmentActivity) {
-        return get((FragmentActivity) context);
-      } else if (context instanceof Activity) {
-        return get((Activity) context);
-      } else if (context instanceof ContextWrapper) {
-        return get(((ContextWrapper) context).getBaseContext());
-      }
+        return applicationManager;
     }
 
-    return getApplicationManager(context);
-  }
-
-  @NonNull
-  public RequestManager get(@NonNull FragmentActivity activity) {
-    if (Util.isOnBackgroundThread()) {
-      return get(activity.getApplicationContext());
-    } else {
-      assertNotDestroyed(activity);
-      FragmentManager fm = activity.getSupportFragmentManager();
-      return supportFragmentGet(activity, fm, null /*parentHint*/);
-    }
-  }
-
-  @NonNull
-  public RequestManager get(@NonNull Fragment fragment) {
-    Preconditions.checkNotNull(fragment.getActivity(),
-          "You cannot start a load on a fragment before it is attached or after it is destroyed");
-    if (Util.isOnBackgroundThread()) {
-      return get(fragment.getActivity().getApplicationContext());
-    } else {
-      FragmentManager fm = fragment.getChildFragmentManager();
-      return supportFragmentGet(fragment.getActivity(), fm, fragment);
-    }
-  }
-
-  @NonNull
-  public RequestManager get(@NonNull Activity activity) {
-    if (Util.isOnBackgroundThread()) {
-      return get(activity.getApplicationContext());
-    } else {
-      assertNotDestroyed(activity);
-      android.app.FragmentManager fm = activity.getFragmentManager();
-      return fragmentGet(activity, fm, null /*parentHint*/);
-    }
-  }
+    @NonNull
+    public RequestManager get(@NonNull Context context) {
+        if (context == null) {
+            throw new IllegalArgumentException("You cannot start a load on a null Context");
+        } else if (Util.isOnMainThread() && !(context instanceof Application)) {
+            if (context instanceof FragmentActivity) {
+                return get((FragmentActivity) context);
+            } else if (context instanceof Activity) {
+                return get((Activity) context);
+            } else if (context instanceof ContextWrapper) {
+                return get(((ContextWrapper) context).getBaseContext());
+            }
+        }
 
-  @NonNull
-  public RequestManager get(@NonNull View view) {
-    if (Util.isOnBackgroundThread()) {
-      return get(view.getContext().getApplicationContext());
+        return getApplicationManager(context);
     }
 
-    Preconditions.checkNotNull(view);
-    Preconditions.checkNotNull(view.getContext(),
-        "Unable to obtain a request manager for a view without a Context");
-    Activity activity = findActivity(view.getContext());
-    // The view might be somewhere else, like a service.
-    if (activity == null) {
-      return get(view.getContext().getApplicationContext());
+    @NonNull
+    public RequestManager get(@NonNull FragmentActivity activity) {
+        if (Util.isOnBackgroundThread()) {
+            return get(activity.getApplicationContext());
+        } else {
+            assertNotDestroyed(activity);
+            FragmentManager fm = activity.getSupportFragmentManager();
+            return supportFragmentGet(activity, fm, null /*parentHint*/);
+        }
     }
 
-    // Support Fragments.
-    // Although the user might have non-support Fragments attached to FragmentActivity, searching
-    // for non-support Fragments is so expensive pre O and that should be rare enough that we
-    // prefer to just fall back to the Activity directly.
-    if (activity instanceof FragmentActivity) {
-      Fragment fragment = findSupportFragment(view, (FragmentActivity) activity);
-      return fragment != null ? get(fragment) : get(activity);
+    @NonNull
+    public RequestManager get(@NonNull Fragment fragment) {
+        Preconditions.checkNotNull(fragment.getActivity(),
+                "You cannot start a load on a fragment before it is attached or after it is destroyed");
+        if (Util.isOnBackgroundThread()) {
+            return get(fragment.getActivity().getApplicationContext());
+        } else {
+            FragmentManager fm = fragment.getChildFragmentManager();
+            return supportFragmentGet(fragment.getActivity(), fm, fragment);
+        }
     }
 
-    // Standard Fragments.
-    android.app.Fragment fragment = findFragment(view, activity);
-    if (fragment == null) {
-      return get(activity);
-    }
-    return get(fragment);
-  }
-
-  private static void findAllSupportFragmentsWithViews(
-      @Nullable Collection<Fragment> topLevelFragments,
-      @NonNull Map<View, Fragment> result) {
-    if (topLevelFragments == null) {
-      return;
-    }
-    for (Fragment fragment : topLevelFragments) {
-      // getFragment()s in the support FragmentManager may contain null values, see #1991.
-      if (fragment == null || fragment.getView() == null) {
-        continue;
-      }
-      result.put(fragment.getView(), fragment);
-      findAllSupportFragmentsWithViews(fragment.getChildFragmentManager().getFragments(), result);
-    }
-  }
-
-  @Nullable
-  private Fragment findSupportFragment(@NonNull View target, @NonNull FragmentActivity activity) {
-    tempViewToSupportFragment.clear();
-    findAllSupportFragmentsWithViews(
-        activity.getSupportFragmentManager().getFragments(), tempViewToSupportFragment);
-    Fragment result = null;
-    View activityRoot = activity.findViewById(android.R.id.content);
-    View current = target;
-    while (!current.equals(activityRoot)) {
-      result = tempViewToSupportFragment.get(current);
-      if (result != null) {
-        break;
-      }
-      if (current.getParent() instanceof View) {
-        current = (View) current.getParent();
-      } else {
-        break;
-      }
+    @NonNull
+    public RequestManager get(@NonNull Activity activity) {
+        if (Util.isOnBackgroundThread()) {
+            return get(activity.getApplicationContext());
+        } else {
+            assertNotDestroyed(activity);
+            android.app.FragmentManager fm = activity.getFragmentManager();
+            return fragmentGet(activity, fm, null /*parentHint*/);
+        }
     }
 
-    tempViewToSupportFragment.clear();
-    return result;
-  }
-
-  @Nullable
-  private android.app.Fragment findFragment(@NonNull View target, @NonNull Activity activity) {
-    tempViewToFragment.clear();
-    findAllFragmentsWithViews(activity.getFragmentManager(), tempViewToFragment);
-
-    android.app.Fragment result = null;
-
-    View activityRoot = activity.findViewById(android.R.id.content);
-    View current = target;
-    while (!current.equals(activityRoot)) {
-      result = tempViewToFragment.get(current);
-      if (result != null) {
-        break;
-      }
-      if (current.getParent() instanceof View) {
-        current = (View) current.getParent();
-      } else {
-        break;
-      }
-    }
-    tempViewToFragment.clear();
-    return result;
-  }
-
-  // TODO: Consider using an accessor class in the support library package to more directly retrieve
-  // non-support Fragments.
-  @TargetApi(Build.VERSION_CODES.O)
-  private void findAllFragmentsWithViews(
-      @NonNull android.app.FragmentManager fragmentManager,
-      @NonNull ArrayMap<View, android.app.Fragment> result) {
-    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-      for (android.app.Fragment fragment : fragmentManager.getFragments()) {
-        if (fragment.getView() != null) {
-          result.put(fragment.getView(), fragment);
-          findAllFragmentsWithViews(fragment.getChildFragmentManager(), result);
+    @NonNull
+    public RequestManager get(@NonNull View view) {
+        if (Util.isOnBackgroundThread()) {
+            return get(view.getContext().getApplicationContext());
         }
-      }
-    } else {
-      findAllFragmentsWithViewsPreO(fragmentManager, result);
-    }
-  }
-
-  private void findAllFragmentsWithViewsPreO(
-      @NonNull android.app.FragmentManager fragmentManager,
-      @NonNull ArrayMap<View, android.app.Fragment> result) {
-    int index = 0;
-    while (true) {
-      tempBundle.putInt(FRAGMENT_INDEX_KEY, index++);
-      android.app.Fragment fragment = null;
-      try {
-        fragment = fragmentManager.getFragment(tempBundle, FRAGMENT_INDEX_KEY);
-      } catch (Exception e) {
-        // This generates log spam from FragmentManager anyway.
-      }
-      if (fragment == null) {
-        break;
-      }
-      if (fragment.getView() != null) {
-        result.put(fragment.getView(), fragment);
-        if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN_MR1) {
-          findAllFragmentsWithViews(fragment.getChildFragmentManager(), result);
+
+        Preconditions.checkNotNull(view);
+        Preconditions.checkNotNull(view.getContext(),
+                "Unable to obtain a request manager for a view without a Context");
+        Activity activity = findActivity(view.getContext());
+        // The view might be somewhere else, like a service.
+        if (activity == null) {
+            return get(view.getContext().getApplicationContext());
+        }
+
+        // Support Fragments.
+        // Although the user might have non-support Fragments attached to FragmentActivity, searching
+        // for non-support Fragments is so expensive pre O and that should be rare enough that we
+        // prefer to just fall back to the Activity directly.
+        if (activity instanceof FragmentActivity) {
+            Fragment fragment = findSupportFragment(view, (FragmentActivity) activity);
+            return fragment != null ? get(fragment) : get(activity);
+        }
+
+        // Standard Fragments.
+        android.app.Fragment fragment = findFragment(view, activity);
+        if (fragment == null) {
+            return get(activity);
         }
-      }
+        return get(fragment);
     }
-  }
-
-  @Nullable
-  private Activity findActivity(@NonNull Context context) {
-    if (context instanceof Activity) {
-      return (Activity) context;
-    } else if (context instanceof ContextWrapper) {
-      return findActivity(((ContextWrapper) context).getBaseContext());
-    } else {
-      return null;
+
+    private static void findAllSupportFragmentsWithViews(
+            @Nullable Collection<Fragment> topLevelFragments,
+            @NonNull Map<View, Fragment> result) {
+        if (topLevelFragments == null) {
+            return;
+        }
+        for (Fragment fragment : topLevelFragments) {
+            // getFragment()s in the support FragmentManager may contain null values, see #1991.
+            if (fragment == null || fragment.getView() == null) {
+                continue;
+            }
+            result.put(fragment.getView(), fragment);
+            findAllSupportFragmentsWithViews(fragment.getChildFragmentManager().getFragments(), result);
+        }
     }
-  }
 
-  @TargetApi(Build.VERSION_CODES.JELLY_BEAN_MR1)
-  private static void assertNotDestroyed(@NonNull Activity activity) {
-    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1 && activity.isDestroyed()) {
-      throw new IllegalArgumentException("You cannot start a load for a destroyed activity");
+    @Nullable
+    private Fragment findSupportFragment(@NonNull View target, @NonNull FragmentActivity activity) {
+        tempViewToSupportFragment.clear();
+        findAllSupportFragmentsWithViews(
+                activity.getSupportFragmentManager().getFragments(), tempViewToSupportFragment);
+        Fragment result = null;
+        View activityRoot = activity.findViewById(android.R.id.content);
+        View current = target;
+        while (!current.equals(activityRoot)) {
+            result = tempViewToSupportFragment.get(current);
+            if (result != null) {
+                break;
+            }
+            if (current.getParent() instanceof View) {
+                current = (View) current.getParent();
+            } else {
+                break;
+            }
+        }
+
+        tempViewToSupportFragment.clear();
+        return result;
     }
-  }
-
-  @NonNull
-  @TargetApi(Build.VERSION_CODES.JELLY_BEAN_MR1)
-  public RequestManager get(@NonNull android.app.Fragment fragment) {
-    if (fragment.getActivity() == null) {
-      throw new IllegalArgumentException(
-          "You cannot start a load on a fragment before it is attached");
+
+    @Nullable
+    private android.app.Fragment findFragment(@NonNull View target, @NonNull Activity activity) {
+        tempViewToFragment.clear();
+        findAllFragmentsWithViews(activity.getFragmentManager(), tempViewToFragment);
+
+        android.app.Fragment result = null;
+
+        View activityRoot = activity.findViewById(android.R.id.content);
+        View current = target;
+        while (!current.equals(activityRoot)) {
+            result = tempViewToFragment.get(current);
+            if (result != null) {
+                break;
+            }
+            if (current.getParent() instanceof View) {
+                current = (View) current.getParent();
+            } else {
+                break;
+            }
+        }
+        tempViewToFragment.clear();
+        return result;
     }
-    if (Util.isOnBackgroundThread() || Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN_MR1) {
-      return get(fragment.getActivity().getApplicationContext());
-    } else {
-      android.app.FragmentManager fm = fragment.getChildFragmentManager();
-      return fragmentGet(fragment.getActivity(), fm, fragment);
+
+    // TODO: Consider using an accessor class in the support library package to more directly retrieve
+    // non-support Fragments.
+    @TargetApi(Build.VERSION_CODES.O)
+    private void findAllFragmentsWithViews(
+            @NonNull android.app.FragmentManager fragmentManager,
+            @NonNull ArrayMap<View, android.app.Fragment> result) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+            for (android.app.Fragment fragment : fragmentManager.getFragments()) {
+                if (fragment.getView() != null) {
+                    result.put(fragment.getView(), fragment);
+                    findAllFragmentsWithViews(fragment.getChildFragmentManager(), result);
+                }
+            }
+        } else {
+            findAllFragmentsWithViewsPreO(fragmentManager, result);
+        }
     }
-  }
-
-  @NonNull
-  RequestManagerFragment getRequestManagerFragment(
-      @NonNull final android.app.FragmentManager fm, @Nullable android.app.Fragment parentHint) {
-    RequestManagerFragment current = (RequestManagerFragment) fm.findFragmentByTag(FRAGMENT_TAG);
-    if (current == null) {
-      current = pendingRequestManagerFragments.get(fm);
-      if (current == null) {
-        current = new RequestManagerFragment();
-        current.setParentFragmentHint(parentHint);
-        pendingRequestManagerFragments.put(fm, current);
-        fm.beginTransaction().add(current, FRAGMENT_TAG).commitAllowingStateLoss();
-        handler.obtainMessage(ID_REMOVE_FRAGMENT_MANAGER, fm).sendToTarget();
-      }
+
+    private void findAllFragmentsWithViewsPreO(
+            @NonNull android.app.FragmentManager fragmentManager,
+            @NonNull ArrayMap<View, android.app.Fragment> result) {
+        int index = 0;
+        while (true) {
+            tempBundle.putInt(FRAGMENT_INDEX_KEY, index++);
+            android.app.Fragment fragment = null;
+            try {
+                fragment = fragmentManager.getFragment(tempBundle, FRAGMENT_INDEX_KEY);
+            } catch (Exception e) {
+                // This generates log spam from FragmentManager anyway.
+            }
+            if (fragment == null) {
+                break;
+            }
+            if (fragment.getView() != null) {
+                result.put(fragment.getView(), fragment);
+                if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN_MR1) {
+                    findAllFragmentsWithViews(fragment.getChildFragmentManager(), result);
+                }
+            }
+        }
     }
-    return current;
-  }
-
-  @NonNull
-  private RequestManager fragmentGet(@NonNull Context context,
-      @NonNull android.app.FragmentManager fm,
-      @Nullable android.app.Fragment parentHint) {
-    RequestManagerFragment current = getRequestManagerFragment(fm, parentHint);
-    RequestManager requestManager = current.getRequestManager();
-    if (requestManager == null) {
-      // TODO(b/27524013): Factor out this Glide.get() call.
-      Glide glide = Glide.get(context);
-      requestManager =
-          factory.build(
-              glide, current.getGlideLifecycle(), current.getRequestManagerTreeNode(), context);
-      current.setRequestManager(requestManager);
+
+    @Nullable
+    private Activity findActivity(@NonNull Context context) {
+        if (context instanceof Activity) {
+            return (Activity) context;
+        } else if (context instanceof ContextWrapper) {
+            return findActivity(((ContextWrapper) context).getBaseContext());
+        } else {
+            return null;
+        }
     }
-    return requestManager;
-  }
-
-  @NonNull
-  SupportRequestManagerFragment getSupportRequestManagerFragment(
-      @NonNull final FragmentManager fm, @Nullable Fragment parentHint) {
-    SupportRequestManagerFragment current =
-        (SupportRequestManagerFragment) fm.findFragmentByTag(FRAGMENT_TAG);
-    if (current == null) {
-      current = pendingSupportRequestManagerFragments.get(fm);
-      if (current == null) {
-        current = new SupportRequestManagerFragment();
-        current.setParentFragmentHint(parentHint);
-        pendingSupportRequestManagerFragments.put(fm, current);
-        fm.beginTransaction().add(current, FRAGMENT_TAG).commitAllowingStateLoss();
-        handler.obtainMessage(ID_REMOVE_SUPPORT_FRAGMENT_MANAGER, fm).sendToTarget();
-      }
+
+    @TargetApi(Build.VERSION_CODES.JELLY_BEAN_MR1)
+    private static void assertNotDestroyed(@NonNull Activity activity) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1 && activity.isDestroyed()) {
+            throw new IllegalArgumentException("You cannot start a load for a destroyed activity");
+        }
     }
-    return current;
-  }
-
-  @NonNull
-  private RequestManager supportFragmentGet(@NonNull Context context, @NonNull FragmentManager fm,
-      @Nullable Fragment parentHint) {
-    SupportRequestManagerFragment current = getSupportRequestManagerFragment(fm, parentHint);
-    RequestManager requestManager = current.getRequestManager();
-    if (requestManager == null) {
-      // TODO(b/27524013): Factor out this Glide.get() call.
-      Glide glide = Glide.get(context);
-      requestManager =
-          factory.build(
-              glide, current.getGlideLifecycle(), current.getRequestManagerTreeNode(), context);
-      current.setRequestManager(requestManager);
+
+    @NonNull
+    @TargetApi(Build.VERSION_CODES.JELLY_BEAN_MR1)
+    public RequestManager get(@NonNull android.app.Fragment fragment) {
+        if (fragment.getActivity() == null) {
+            throw new IllegalArgumentException(
+                    "You cannot start a load on a fragment before it is attached");
+        }
+        if (Util.isOnBackgroundThread() || Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN_MR1) {
+            return get(fragment.getActivity().getApplicationContext());
+        } else {
+            android.app.FragmentManager fm = fragment.getChildFragmentManager();
+            return fragmentGet(fragment.getActivity(), fm, fragment);
+        }
     }
-    return requestManager;
-  }
-
-  @Override
-  public boolean handleMessage(Message message) {
-    boolean handled = true;
-    Object removed = null;
-    Object key = null;
-    switch (message.what) {
-      case ID_REMOVE_FRAGMENT_MANAGER:
-        android.app.FragmentManager fm = (android.app.FragmentManager) message.obj;
-        key = fm;
-        removed = pendingRequestManagerFragments.remove(fm);
-        break;
-      case ID_REMOVE_SUPPORT_FRAGMENT_MANAGER:
-        FragmentManager supportFm = (FragmentManager) message.obj;
-        key = supportFm;
-        removed = pendingSupportRequestManagerFragments.remove(supportFm);
-        break;
-      default:
-        handled = false;
-        break;
+
+    @NonNull
+    RequestManagerFragment getRequestManagerFragment(
+            @NonNull final android.app.FragmentManager fm, @Nullable android.app.Fragment parentHint) {
+        RequestManagerFragment current = (RequestManagerFragment) fm.findFragmentByTag(FRAGMENT_TAG);
+        if (current == null) {
+            current = pendingRequestManagerFragments.get(fm);
+            if (current == null) {
+                current = new RequestManagerFragment();
+                current.setParentFragmentHint(parentHint);
+                pendingRequestManagerFragments.put(fm, current);
+                fm.beginTransaction().add(current, FRAGMENT_TAG).commitAllowingStateLoss();
+                handler.obtainMessage(ID_REMOVE_FRAGMENT_MANAGER, fm).sendToTarget();
+            }
+        }
+        return current;
     }
-    if (handled && removed == null && Log.isLoggable(TAG, Log.WARN)) {
-      Log.w(TAG, "Failed to remove expected request manager fragment, manager: " + key);
+
+    @NonNull
+    private RequestManager fragmentGet(@NonNull Context context,
+                                       @NonNull android.app.FragmentManager fm,
+                                       @Nullable android.app.Fragment parentHint) {
+        //创建新的 fragment 绑定生命周期
+        RequestManagerFragment current = getRequestManagerFragment(fm, parentHint);
+        RequestManager requestManager = current.getRequestManager();
+        if (requestManager == null) {
+            // TODO(b/27524013): Factor out this Glide.get() call.
+            Glide glide = Glide.get(context);
+            requestManager =
+                    factory.build(
+                            glide, current.getGlideLifecycle(), current.getRequestManagerTreeNode(), context);
+            current.setRequestManager(requestManager);
+        }
+        return requestManager;
     }
-    return handled;
-  }
 
-  /**
-   * Used internally to create {@link RequestManager}s.
-   */
-  public interface RequestManagerFactory {
     @NonNull
-    RequestManager build(
-        @NonNull Glide glide,
-        @NonNull Lifecycle lifecycle,
-        @NonNull RequestManagerTreeNode requestManagerTreeNode,
-        @NonNull Context context);
-  }
-
-  private static final RequestManagerFactory DEFAULT_FACTORY = new RequestManagerFactory() {
+    SupportRequestManagerFragment getSupportRequestManagerFragment(
+            @NonNull final FragmentManager fm, @Nullable Fragment parentHint) {
+        SupportRequestManagerFragment current =
+                (SupportRequestManagerFragment) fm.findFragmentByTag(FRAGMENT_TAG);
+        if (current == null) {
+            current = pendingSupportRequestManagerFragments.get(fm);
+            if (current == null) {
+                current = new SupportRequestManagerFragment();
+                current.setParentFragmentHint(parentHint);
+                pendingSupportRequestManagerFragments.put(fm, current);
+                fm.beginTransaction().add(current, FRAGMENT_TAG).commitAllowingStateLoss();
+                handler.obtainMessage(ID_REMOVE_SUPPORT_FRAGMENT_MANAGER, fm).sendToTarget();
+            }
+        }
+        return current;
+    }
+
     @NonNull
+    private RequestManager supportFragmentGet(@NonNull Context context, @NonNull FragmentManager fm,
+                                              @Nullable Fragment parentHint) {
+        SupportRequestManagerFragment current = getSupportRequestManagerFragment(fm, parentHint);
+        RequestManager requestManager = current.getRequestManager();
+        if (requestManager == null) {
+            // TODO(b/27524013): Factor out this Glide.get() call.
+            Glide glide = Glide.get(context);
+            requestManager =
+                    factory.build(
+                            glide, current.getGlideLifecycle(), current.getRequestManagerTreeNode(), context);
+            current.setRequestManager(requestManager);
+        }
+        return requestManager;
+    }
+
     @Override
-    public RequestManager build(@NonNull Glide glide, @NonNull Lifecycle lifecycle,
-        @NonNull RequestManagerTreeNode requestManagerTreeNode, @NonNull Context context) {
-      return new RequestManager(glide, lifecycle, requestManagerTreeNode, context);
+    public boolean handleMessage(Message message) {
+        boolean handled = true;
+        Object removed = null;
+        Object key = null;
+        switch (message.what) {
+            case ID_REMOVE_FRAGMENT_MANAGER:
+                android.app.FragmentManager fm = (android.app.FragmentManager) message.obj;
+                key = fm;
+                removed = pendingRequestManagerFragments.remove(fm);
+                break;
+            case ID_REMOVE_SUPPORT_FRAGMENT_MANAGER:
+                FragmentManager supportFm = (FragmentManager) message.obj;
+                key = supportFm;
+                removed = pendingSupportRequestManagerFragments.remove(supportFm);
+                break;
+            default:
+                handled = false;
+                break;
+        }
+        if (handled && removed == null && Log.isLoggable(TAG, Log.WARN)) {
+            Log.w(TAG, "Failed to remove expected request manager fragment, manager: " + key);
+        }
+        return handled;
     }
-  };
+
+    /**
+     * Used internally to create {@link RequestManager}s.
+     */
+    public interface RequestManagerFactory {
+        @NonNull
+        RequestManager build(
+                @NonNull Glide glide,
+                @NonNull Lifecycle lifecycle,
+                @NonNull RequestManagerTreeNode requestManagerTreeNode,
+                @NonNull Context context);
+    }
+
+    private static final RequestManagerFactory DEFAULT_FACTORY = new RequestManagerFactory() {
+        @NonNull
+        @Override
+        public RequestManager build(@NonNull Glide glide, @NonNull Lifecycle lifecycle,
+                                    @NonNull RequestManagerTreeNode requestManagerTreeNode, @NonNull Context context) {
+            return new RequestManager(glide, lifecycle, requestManagerTreeNode, context);
+        }
+    };
 }
