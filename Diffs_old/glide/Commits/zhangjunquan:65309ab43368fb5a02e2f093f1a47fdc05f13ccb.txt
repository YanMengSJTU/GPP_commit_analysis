diff --git a/library/src/main/java/com/bumptech/glide/RequestManager.java b/library/src/main/java/com/bumptech/glide/RequestManager.java
index 9e0cdb6c3..bfb3b96f1 100644
--- a/library/src/main/java/com/bumptech/glide/RequestManager.java
+++ b/library/src/main/java/com/bumptech/glide/RequestManager.java
@@ -46,6 +46,8 @@
  * instantiating a new object, or to take advantage built in Activity and Fragment lifecycle
  * handling, use the static Glide.load methods with your Fragment or Activity.
  *
+ * 处理请求的管理类
+ *
  * @see Glide#with(android.app.Activity)
  * @see Glide#with(android.support.v4.app.FragmentActivity)
  * @see Glide#with(android.app.Fragment)
diff --git a/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java b/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java
index a8260fa81..5fd25697b 100644
--- a/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java
+++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java
@@ -32,6 +32,8 @@
 /**
  * A collection of static methods for creating new {@link com.bumptech.glide.RequestManager}s or
  * retrieving existing ones from activities and fragment.
+ *
+ * 生成处理请求管理类的工具类
  */
 public class RequestManagerRetriever implements Handler.Callback {
   @VisibleForTesting
@@ -81,6 +83,11 @@ public RequestManagerRetriever(@Nullable RequestManagerFactory factory) {
     handler = new Handler(Looper.getMainLooper(), this /* Callback */);
   }
 
+  /**
+   * 单例：获取 RequestManager
+   * @param context
+   * @return
+   */
   @NonNull
   private RequestManager getApplicationManager(@NonNull Context context) {
     // Either an application context or we're on a background thread.
@@ -111,7 +118,7 @@ private RequestManager getApplicationManager(@NonNull Context context) {
   public RequestManager get(@NonNull Context context) {
     if (context == null) {
       throw new IllegalArgumentException("You cannot start a load on a null Context");
-    } else if (Util.isOnMainThread() && !(context instanceof Application)) {
+    } else if (Util.isOnMainThread() && !(context instanceof Application)) {// 如果是主线程 & 不是 Application
       if (context instanceof FragmentActivity) {
         return get((FragmentActivity) context);
       } else if (context instanceof Activity) {
