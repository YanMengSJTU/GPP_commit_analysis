diff --git a/samples/hello/src/main/AndroidManifest.xml b/samples/hello/src/main/AndroidManifest.xml
index 5ed899c67..9817b3c04 100644
--- a/samples/hello/src/main/AndroidManifest.xml
+++ b/samples/hello/src/main/AndroidManifest.xml
@@ -2,8 +2,8 @@
 <manifest package="me.tikitoo.android.hello"
           xmlns:android="http://schemas.android.com/apk/res/android">
 
-    <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.INTERNET"/>
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
 
     <application
         android:allowBackup="true"
@@ -18,10 +18,14 @@
                 <category android:name="android.intent.category.LAUNCHER"/>
             </intent-filter>
         </activity>
+        <activity android:name=".NormalActivity" />
+        <activity android:name=".LoadDiffImageActivity" />
+
         <meta-data
             android:name="me.tikitoo.android.hello.HelloModule"
-            android:value="GlideModule"
-            />
+            android:value="GlideModule"/>
+
+
     </application>
 
 </manifest>
\ No newline at end of file
diff --git a/samples/hello/src/main/java/me/tikitoo/android/hello/Constants.java b/samples/hello/src/main/java/me/tikitoo/android/hello/Constants.java
new file mode 100644
index 000000000..f22d8d1cc
--- /dev/null
+++ b/samples/hello/src/main/java/me/tikitoo/android/hello/Constants.java
@@ -0,0 +1,26 @@
+package me.tikitoo.android.hello;
+
+public class Constants {
+    public static final String[] IMG_URLS = new String[] {
+            "https://static.pexels.com/photos/5854/sea-woman-legs-water-medium.jpg",
+            "https://static.pexels.com/photos/6245/kitchen-cooking-interior-decor-medium.jpg",
+            "https://static.pexels.com/photos/6041/nature-grain-moving-cereal-medium.jpg",
+            "https://static.pexels.com/photos/7116/mountains-water-trees-lake-medium.jpg",
+            "https://static.pexels.com/photos/6601/food-plate-yellow-white-medium.jpg",
+            "https://static.pexels.com/photos/6695/summer-sun-yellow-spring-medium.jpg",
+            "https://static.pexels.com/photos/7117/mountains-night-clouds-lake-medium.jpg",
+            "https://static.pexels.com/photos/7262/clouds-ocean-seagull-medium.jpg",
+            "https://static.pexels.com/photos/5968/wood-nature-dark-forest-medium.jpg",
+            "https://static.pexels.com/photos/6101/hands-woman-art-hand-medium.jpg",
+            "https://static.pexels.com/photos/6571/pexels-photo-medium.jpeg",
+            "https://static.pexels.com/photos/6740/food-sugar-lighting-milk-medium.jpg",
+            "https://static.pexels.com/photos/5659/sky-sunset-clouds-field-medium.jpg",
+            "https://static.pexels.com/photos/6945/sunset-summer-golden-hour-paul-filitchkin-medium.jpg",
+            "https://static.pexels.com/photos/6151/animal-cute-fur-white-medium.jpg",
+            "https://static.pexels.com/photos/5696/coffee-cup-water-glass-medium.jpg",
+            "https://static.pexels.com/photos/6789/flowers-petals-gift-flower-medium.jpg",
+            "https://static.pexels.com/photos/7202/summer-trees-sunlight-trail-medium.jpg",
+            "https://static.pexels.com/photos/7147/night-clouds-summer-trees-medium.jpg",
+            "https://static.pexels.com/photos/6342/woman-notebook-working-girl-medium.jpg"
+    };
+}
diff --git a/samples/hello/src/main/java/me/tikitoo/android/hello/HelloModule.java b/samples/hello/src/main/java/me/tikitoo/android/hello/HelloModule.java
index 0b1d20aba..fbb6f2e72 100644
--- a/samples/hello/src/main/java/me/tikitoo/android/hello/HelloModule.java
+++ b/samples/hello/src/main/java/me/tikitoo/android/hello/HelloModule.java
@@ -5,7 +5,6 @@
 
 import com.bumptech.glide.GlideBuilder;
 import com.bumptech.glide.Registry;
-import com.bumptech.glide.load.DecodeFormat;
 import com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool;
 import com.bumptech.glide.load.engine.cache.DiskCache;
 import com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper;
@@ -21,13 +20,13 @@
     public void applyOptions(Context context, GlideBuilder builder) {
         // /storage/emulated/0/Android/data/me.tikitoo.android.hello/cache/image_manager_disk_cache
         builder.setDiskCache(new ExternalCacheDiskCacheFactory(context));
-        customDiskCache(builder);
+//        customDiskCache(builder);
         MemorySizeCalculator memorySizeCalculator = new MemorySizeCalculator.Builder(context).build();
         int bitPoolSize = memorySizeCalculator.getBitmapPoolSize();
         int memoryCacheSize = memorySizeCalculator.getMemoryCacheSize();
         builder.setMemoryCache(new LruResourceCache(memoryCacheSize));
         builder.setBitmapPool(new LruBitmapPool(bitPoolSize));
-        builder.setDecodeFormat(DecodeFormat.PREFER_RGB_565);
+//        builder.setDecodeFormat(DecodeFormat.PREFER_RGB_565);
     }
 
     private void customDiskCache(GlideBuilder builder) {
diff --git a/samples/hello/src/main/java/me/tikitoo/android/hello/LoadDiffImageActivity.java b/samples/hello/src/main/java/me/tikitoo/android/hello/LoadDiffImageActivity.java
new file mode 100644
index 000000000..e5977e5b0
--- /dev/null
+++ b/samples/hello/src/main/java/me/tikitoo/android/hello/LoadDiffImageActivity.java
@@ -0,0 +1,102 @@
+package me.tikitoo.android.hello;
+
+import android.content.Context;
+import android.net.Uri;
+import android.os.Bundle;
+import android.os.Environment;
+import android.support.annotation.Nullable;
+import android.support.v7.app.AppCompatActivity;
+import android.view.View;
+import android.widget.Button;
+import android.widget.ImageView;
+
+import com.bumptech.glide.Glide;
+import com.bumptech.glide.RequestBuilder;
+import com.bumptech.glide.RequestManager;
+import com.bumptech.glide.request.RequestOptions;
+
+import static com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions.withCrossFade;
+
+public class LoadDiffImageActivity extends AppCompatActivity implements View.OnClickListener {
+
+    private ImageView mImageView;
+    private Button mResBtn;
+    private Button mFileBtn;
+    private Button mUriBtn;
+    private Button mUriResBtn;
+    private Button mErrorBtn;
+
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_load_diff_image);
+        initView();
+    }
+
+    private void init(Object object) {
+        RequestOptions requestOptions = new RequestOptions()
+                .placeholder(R.mipmap.ic_launcher)
+                .error(R.drawable.ic_http_black);
+
+        RequestManager requestManager = Glide.with(LoadDiffImageActivity.this);
+
+        RequestBuilder requestBuilder = requestManager.load(object)
+                .thumbnail(0.5F)
+                .apply(requestOptions)
+                .transition(withCrossFade());
+
+                requestBuilder.into(mImageView)
+        ;
+    }
+
+    private void loadDiff() {
+
+    }
+
+    private void initView() {
+        mImageView = (ImageView) findViewById(R.id.image_view);
+        mResBtn = (Button) findViewById(R.id.btn_res);
+        mFileBtn = (Button) findViewById(R.id.btn_file);
+        mUriBtn = (Button) findViewById(R.id.btn_uri);
+        mUriResBtn = (Button) findViewById(R.id.btn_uri_res);
+        mErrorBtn = (Button) findViewById(R.id.btn_error);
+        Button[] buttons = new Button[] {mResBtn, mFileBtn, mUriBtn, mUriResBtn, mErrorBtn};
+        for (int i = 0; i < buttons.length; i++) {
+            buttons[i].setOnClickListener(this);
+        }
+    }
+
+    @Override
+    public void onClick(View v) {
+        switch (v.getId()) {
+            case R.id.btn_res:
+                init(R.drawable.ic_accessible_black);
+                break;
+            case R.id.btn_file:
+                String str = Environment.getExternalStorageDirectory() + "/" + Environment.DIRECTORY_DOWNLOADS + "/";
+                String fileName = "001.jpg";
+                String fileStr = str + fileName;
+                init(fileStr);
+                break;
+            case R.id.btn_uri:
+                init(Uri.parse(Constants.IMG_URLS[3]));
+                break;
+            case R.id.btn_uri_res:
+                init(LoadDiffImageActivity.resourceIdToUri(this, R.drawable.ic_accessible_black));
+                break;
+            case R.id.btn_error:
+                init("fdafadf");
+                break;
+        }
+    }
+
+    public static final String ANDROID_RESOURCE = "android.resource://";
+    public static final String FOREWARD_SLASH = "/";
+
+    private static Uri resourceIdToUri(Context context, int resourceId) {
+        return Uri.parse(ANDROID_RESOURCE + context.getPackageName() + FOREWARD_SLASH + resourceId);
+    }
+}
+
+
+
diff --git a/samples/hello/src/main/java/me/tikitoo/android/hello/MainActivity.java b/samples/hello/src/main/java/me/tikitoo/android/hello/MainActivity.java
index 8d8548bc5..ae8bb9bbb 100644
--- a/samples/hello/src/main/java/me/tikitoo/android/hello/MainActivity.java
+++ b/samples/hello/src/main/java/me/tikitoo/android/hello/MainActivity.java
@@ -1,114 +1,37 @@
 package me.tikitoo.android.hello;
 
-import android.os.Bundle;
+import android.content.Intent;
 import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.view.View;
 import android.view.ViewGroup;
-import android.widget.ImageView;
+import android.widget.Button;
 import android.widget.LinearLayout;
 
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.RequestBuilder;
-import com.bumptech.glide.RequestManager;
-import com.bumptech.glide.load.DecodeFormat;
-import com.bumptech.glide.load.Key;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
-import com.bumptech.glide.request.RequestOptions;
-import com.bumptech.glide.request.target.Target;
-import com.bumptech.glide.signature.ObjectKey;
-
-import java.security.MessageDigest;
-
-public class MainActivity extends AppCompatActivity {
-    public static final String IMG_URL = "http://ww2.sinaimg.cn/large/68622377gw1f1o12qodaoj20760760t7.jpg";
-    
-    public static final String[] IMG_URLS = new String[] {
-            "https://static.pexels.com/photos/5854/sea-woman-legs-water-medium.jpg",
-            "https://static.pexels.com/photos/6245/kitchen-cooking-interior-decor-medium.jpg",
-            "https://static.pexels.com/photos/6770/light-road-lights-night-medium.jpg",
-            "https://static.pexels.com/photos/6041/nature-grain-moving-cereal-medium.jpg",
-            "https://static.pexels.com/photos/7116/mountains-water-trees-lake-medium.jpg",
-            "https://static.pexels.com/photos/6601/food-plate-yellow-white-medium.jpg",
-            "https://static.pexels.com/photos/6695/summer-sun-yellow-spring-medium.jpg",
-            "https://static.pexels.com/photos/7117/mountains-night-clouds-lake-medium.jpg",
-            "https://static.pexels.com/photos/7262/clouds-ocean-seagull-medium.jpg",
-            "https://static.pexels.com/photos/5968/wood-nature-dark-forest-medium.jpg",
-            "https://static.pexels.com/photos/6101/hands-woman-art-hand-medium.jpg",
-            "https://static.pexels.com/photos/6571/pexels-photo-medium.jpeg",
-            "https://static.pexels.com/photos/6740/food-sugar-lighting-milk-medium.jpg",
-            "https://static.pexels.com/photos/5659/sky-sunset-clouds-field-medium.jpg",
-            "https://static.pexels.com/photos/6945/sunset-summer-golden-hour-paul-filitchkin-medium.jpg",
-            "https://static.pexels.com/photos/6151/animal-cute-fur-white-medium.jpg",
-            "https://static.pexels.com/photos/5696/coffee-cup-water-glass-medium.jpg",
-            "https://static.pexels.com/photos/6789/flowers-petals-gift-flower-medium.jpg",
-            "https://static.pexels.com/photos/7202/summer-trees-sunlight-trail-medium.jpg",
-            "https://static.pexels.com/photos/7147/night-clouds-summer-trees-medium.jpg",
-            "https://static.pexels.com/photos/6342/woman-notebook-working-girl-medium.jpg"
-    };
-
+public class MainActivity extends AppCompatActivity implements View.OnClickListener {
+    String[] mStrings = new String[] {"Normal", "Diff"};
+    Class<?>[] mClasses = new Class<?>[] {NormalActivity.class, LoadDiffImageActivity.class};
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
-        ImageView defImg = (ImageView) findViewById(R.id.image_def);
         LinearLayout topLayot = (LinearLayout) findViewById(R.id.layout_top);
-        ImageView imageView;
-        for (String imgUrl : IMG_URLS) {
-            imageView = new ImageView(MainActivity.this);
-            imageView.setLayoutParams(
-                    new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,
-                    600));
-
-            showImage(imageView, imgUrl);
-            topLayot.addView(imageView);
+        for (int i = 0; i < mStrings.length; i++) {
+            Button button = new Button(this);
+            button.setLayoutParams(new LinearLayout.LayoutParams(
+                    ViewGroup.LayoutParams.MATCH_PARENT,
+                    ViewGroup.LayoutParams.WRAP_CONTENT));
+            button.setId(i);
+            button.setText(mStrings[i]);
+
+            button.setOnClickListener(this);
+            topLayot.addView(button);
         }
-
-
-
-        /*Glide.with(this)
-                .load(IMG_URL)
-                .apply(fitCenterTransform(this))
-                .into(defImg);*/
-
-    }
-
-    private void showImage(ImageView defImg, Object model) {
-        RequestOptions requestOptions = new RequestOptions()
-                .override(300, 200)
-                .format(DecodeFormat.PREFER_RGB_565)
-                .signature(new ObjectKey(model))
-                .diskCacheStrategy(DiskCacheStrategy.DATA)
-                .centerCrop(this);
-
-
-        RequestManager manager = Glide.with(this);
-
-        RequestBuilder builder = manager.load(model)
-                .thumbnail(0.5F)
-                .apply(requestOptions);
-        getTarget(defImg, builder);
-    }
-
-    private void getTarget(ImageView defImg, RequestBuilder builder) {
-        Target target = builder.into(defImg);
-        /*Target target2 = builder.into(new SimpleTarget<byte[]>(250, 250) {
-            @Override
-            public void onResourceReady(byte[] resource, Transition<? super byte[]> transition) {
-
-            }
-        });*/
     }
 
-    public class StringSignature implements Key {
-        private String url;
-
-        public StringSignature(String url) {
-            this.url = url;
-        }
-
-
-        @Override
-        public void updateDiskCacheKey(MessageDigest messageDigest) {
-//            messageDigest.update(ByteBuffer.allocate());
-        }
+    @Override
+    public void onClick(View v) {
+       Intent intent = new Intent(MainActivity.this, mClasses[v.getId()]);
+        startActivity(intent);
     }
 }
diff --git a/samples/hello/src/main/java/me/tikitoo/android/hello/NormalActivity.java b/samples/hello/src/main/java/me/tikitoo/android/hello/NormalActivity.java
new file mode 100644
index 000000000..fba51c7dc
--- /dev/null
+++ b/samples/hello/src/main/java/me/tikitoo/android/hello/NormalActivity.java
@@ -0,0 +1,90 @@
+package me.tikitoo.android.hello;
+
+import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+
+import com.bumptech.glide.Glide;
+import com.bumptech.glide.RequestBuilder;
+import com.bumptech.glide.RequestManager;
+import com.bumptech.glide.load.DecodeFormat;
+import com.bumptech.glide.load.Key;
+import com.bumptech.glide.load.engine.DiskCacheStrategy;
+import com.bumptech.glide.request.RequestOptions;
+import com.bumptech.glide.request.target.Target;
+
+import java.security.MessageDigest;
+
+public class NormalActivity extends AppCompatActivity {
+    public static final String IMG_URL = "http://ww2.sinaimg.cn/large/68622377gw1f1o12qodaoj20760760t7.jpg";
+    
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_normal);
+        ImageView defImg = (ImageView) findViewById(R.id.image_def);
+        LinearLayout topLayot = (LinearLayout) findViewById(R.id.layout_top);
+        ImageView imageView;
+        for (String imgUrl : Constants.IMG_URLS) {
+            imageView = new ImageView(NormalActivity.this);
+            imageView.setLayoutParams(
+                    new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,
+                    600));
+
+            showImage(imageView, imgUrl);
+            topLayot.addView(imageView);
+        }
+    }
+
+    private void showImage(ImageView defImg, Object model) {
+        RequestOptions requestOptions = new RequestOptions()
+                .override(300, 200)
+                .format(DecodeFormat.PREFER_RGB_565)
+//                .signature(new ObjectKey(model))
+                .diskCacheStrategy(DiskCacheStrategy.DATA)
+                .centerCrop(this);
+
+
+        RequestManager manager = Glide.with(this);
+
+        RequestBuilder builder = manager.load(model)
+                .thumbnail(0.5F)
+                .apply(requestOptions);
+        getTarget(defImg, builder);
+    }
+
+    private void getTarget(ImageView defImg, RequestBuilder builder) {
+        Target target = builder.into(defImg);
+        /*Target target2 = builder.into(new SimpleTarget<byte[]>(250, 250) {
+            @Override
+            public void onResourceReady(byte[] resource, Transition<? super byte[]> transition) {
+
+            }
+        });*/
+
+        /*builder.into(new SimpleTarget<Bitmap>() {
+            @Override
+            public void onResourceReady(Bitmap resource, Transition<? super Bitmap> transition) {
+
+            }
+        });*/
+    }
+
+    public class StringSignature implements Key {
+        private String url;
+
+        public StringSignature(String url) {
+            this.url = url;
+        }
+
+
+        @Override
+        public void updateDiskCacheKey(MessageDigest messageDigest) {
+//            messageDigest.update(ByteBuffer.allocate());
+        }
+    }
+}
diff --git a/samples/hello/src/main/res/drawable-xhdpi/ic_accessible_black.png b/samples/hello/src/main/res/drawable-xhdpi/ic_accessible_black.png
new file mode 100644
index 000000000..27475bbd9
Binary files /dev/null and b/samples/hello/src/main/res/drawable-xhdpi/ic_accessible_black.png differ
diff --git a/samples/hello/src/main/res/drawable-xhdpi/ic_http_black.png b/samples/hello/src/main/res/drawable-xhdpi/ic_http_black.png
new file mode 100644
index 000000000..e6bf97d93
Binary files /dev/null and b/samples/hello/src/main/res/drawable-xhdpi/ic_http_black.png differ
diff --git a/samples/hello/src/main/res/layout/activity_load_diff_image.xml b/samples/hello/src/main/res/layout/activity_load_diff_image.xml
new file mode 100644
index 000000000..49d2b1bac
--- /dev/null
+++ b/samples/hello/src/main/res/layout/activity_load_diff_image.xml
@@ -0,0 +1,56 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <ImageView
+        android:id="@+id/image_view"
+        android:layout_width="match_parent"
+        android:layout_height="200dp"/>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        >
+
+        <Button
+            android:id="@+id/btn_res"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/resource"/>
+
+        <Button
+            android:id="@+id/btn_file"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/file"/>
+
+        <Button
+            android:id="@+id/btn_uri"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/uri"/>
+
+        <Button
+            android:id="@+id/btn_uri_res"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/uri_res"/>
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal">
+
+        <Button
+            android:id="@+id/btn_error"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/uri_error"/>
+    </LinearLayout>
+</LinearLayout>
\ No newline at end of file
diff --git a/samples/hello/src/main/res/layout/activity_main.xml b/samples/hello/src/main/res/layout/activity_main.xml
index da91f193e..33b29e662 100644
--- a/samples/hello/src/main/res/layout/activity_main.xml
+++ b/samples/hello/src/main/res/layout/activity_main.xml
@@ -3,29 +3,18 @@
     xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
-    android:layout_height="match_parent"   >
+    android:layout_height="match_parent">
 
-<LinearLayout
-    android:id="@+id/layout_top"
-
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:paddingBottom="@dimen/activity_vertical_margin"
-    android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:paddingRight="@dimen/activity_horizontal_margin"
-    android:paddingTop="@dimen/activity_vertical_margin"
-    android:orientation="vertical"
-    tools:context="me.tikitoo.android.hello.MainActivity">
+    <LinearLayout
+        android:id="@+id/layout_top"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical"
+        android:paddingBottom="@dimen/activity_vertical_margin"
+        android:paddingLeft="@dimen/activity_horizontal_margin"
+        android:paddingRight="@dimen/activity_horizontal_margin"
+        android:paddingTop="@dimen/activity_vertical_margin">
 
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="Hello World!"/>
 
-    <ImageView
-        android:id="@+id/image_def"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        />
-</LinearLayout>
+    </LinearLayout>
 </ScrollView>
diff --git a/samples/hello/src/main/res/layout/activity_normal.xml b/samples/hello/src/main/res/layout/activity_normal.xml
new file mode 100644
index 000000000..6b856e750
--- /dev/null
+++ b/samples/hello/src/main/res/layout/activity_normal.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<ScrollView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <LinearLayout
+        android:id="@+id/layout_top"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical"
+        android:paddingBottom="@dimen/activity_vertical_margin"
+        android:paddingLeft="@dimen/activity_horizontal_margin"
+        android:paddingRight="@dimen/activity_horizontal_margin"
+        android:paddingTop="@dimen/activity_vertical_margin"
+        tools:context=".NormalActivity">
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Hello World!"/>
+
+        <ImageView
+            android:id="@+id/image_def"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            />
+    </LinearLayout>
+</ScrollView>
diff --git a/samples/hello/src/main/res/raw/ic_accessible_black_24px.svg b/samples/hello/src/main/res/raw/ic_accessible_black_24px.svg
new file mode 100644
index 000000000..8b34bb6bb
--- /dev/null
+++ b/samples/hello/src/main/res/raw/ic_accessible_black_24px.svg
@@ -0,0 +1,5 @@
+<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
+    <path d="M0 0h24v24H0z" fill="none"/>
+    <circle cx="12" cy="4" r="2"/>
+    <path d="M19 13v-2c-1.54.02-3.09-.75-4.07-1.83l-1.29-1.43c-.17-.19-.38-.34-.61-.45-.01 0-.01-.01-.02-.01H13c-.35-.2-.75-.3-1.19-.26C10.76 7.11 10 8.04 10 9.09V15c0 1.1.9 2 2 2h5v5h2v-5.5c0-1.1-.9-2-2-2h-3v-3.45c1.29 1.07 3.25 1.94 5 1.95zm-6.17 5c-.41 1.16-1.52 2-2.83 2-1.66 0-3-1.34-3-3 0-1.31.84-2.41 2-2.83V12.1c-2.28.46-4 2.48-4 4.9 0 2.76 2.24 5 5 5 2.42 0 4.44-1.72 4.9-4h-2.07z"/>
+</svg>
\ No newline at end of file
diff --git a/samples/hello/src/main/res/values/strings.xml b/samples/hello/src/main/res/values/strings.xml
index 78478bd2a..b9b88b6d4 100644
--- a/samples/hello/src/main/res/values/strings.xml
+++ b/samples/hello/src/main/res/values/strings.xml
@@ -1,3 +1,8 @@
 <resources>
     <string name="app_name">Hello</string>
+    <string name="resource">Resource</string>
+    <string name="file">File</string>
+    <string name="uri">Uri</string>
+    <string name="uri_res">Uri Res</string>
+    <string name="uri_error">Error</string>
 </resources>
