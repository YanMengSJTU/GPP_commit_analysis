diff --git a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoList.java b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoList.java
index 97652ca14..14d599e18 100644
--- a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoList.java
+++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoList.java
@@ -141,8 +141,9 @@ public void setPhotos(List<Photo> photos) {
 
     @Override
     public PhotoTitleViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        //often trigger for large list
         ((FlickrSearchActivity)getActivity()).showInterAd();
-        Log.d("haha","onCreateViewHolder");
+        //Log.d("haha","onCreateViewHolder");
       View view = inflater.inflate(R.layout.flickr_photo_list_item, parent, false);
       PhotoTitleViewHolder vh = new PhotoTitleViewHolder(view);
       preloadSizeProvider.setView(vh.imageView);
diff --git a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrSearchActivity.java b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrSearchActivity.java
index f28738b1c..f1c9d7fb0 100644
--- a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrSearchActivity.java
+++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrSearchActivity.java
@@ -129,7 +129,7 @@ public boolean onQueryTextChange(String newText) {
   public void onCreate(Bundle savedInstanceState) {
     this.AdInterTs = System.currentTimeMillis();
     mInterstitialAd = new InterstitialAd(this);
-    mInterstitialAd.setAdUnitId("ca-app-pub-3940256099942544/1033173712");
+    mInterstitialAd.setAdUnitId("ca-app-pub-7366328858638561/6816376338");
 
     mInterstitialAd.setAdListener(new AdListener() {
       @Override
@@ -204,19 +204,19 @@ private void requestNewInterstitial() {
   public void showInterAd() {
     long ts = System.currentTimeMillis();
     long elapsed = ts - this.AdInterTs;
-    if (elapsed > 50 * 1000){
+    if (elapsed > 3 * 60 * 1000){
       this.AdInterTs = ts;
     }
     else{
-      Log.d("hahaha", "time too short " + elapsed);
+      Log.d("hahaha", "time too short " + elapsed/1000);
       return;
     }
     if (mInterstitialAd.isLoaded()) {
       mInterstitialAd.show();
-      Log.d("hahaha", "ad 111");
+      Log.d("hahaha", "ad 111 ready");
     }
     else{
-      Log.d("hahaha", "ad 222");
+      Log.d("hahaha", "ad 222 not ready");
     }
   }
 
@@ -365,7 +365,7 @@ public CharSequence getPageTitle(int position) {
     }
 
     private Fragment pageToFragment(int position) {
-      Log.d("hahaha", Integer.toString(position));
+      //Log.d("hahaha", Integer.toString(position));
       //showInterAd();
       Page page = Page.values()[position];
       if (page == Page.SMALL) {
diff --git a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/api/Api.java b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/api/Api.java
index f7ee90f96..623014a80 100644
--- a/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/api/Api.java
+++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/api/Api.java
@@ -183,7 +183,7 @@ public void unregisterSearchListener(QueryListener queryListener) {
   }
 
   public void query(Query query) {
-      Log.d("hahaha",query.getUrl());
+      //Log.d("hahaha",query.getUrl());
     if (lastQueryResult != null && lastQueryResult.query.equals(query)) {
       for (QueryListener listener : queryListeners) {
         listener.onSearchCompleted(lastQueryResult.query, lastQueryResult.results);
