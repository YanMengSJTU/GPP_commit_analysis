diff --git a/library/src/main/java/com/bumptech/glide/request/target/BitmapImageViewTarget.java b/library/src/main/java/com/bumptech/glide/request/target/BitmapImageViewTarget.java
index e71d23779..aea8199f8 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/BitmapImageViewTarget.java
+++ b/library/src/main/java/com/bumptech/glide/request/target/BitmapImageViewTarget.java
@@ -20,6 +20,9 @@ public BitmapImageViewTarget(ImageView view) {
    */
   @Override
   protected void setResource(Bitmap resource) {
-    view.setImageBitmap(resource);
+    ImageView view = viewReference.get();
+    if (view != null) {
+      view.setImageBitmap(resource);
+    }
   }
 }
diff --git a/library/src/main/java/com/bumptech/glide/request/target/BitmapThumbnailImageViewTarget.java b/library/src/main/java/com/bumptech/glide/request/target/BitmapThumbnailImageViewTarget.java
index c4b247964..4e9be3f00 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/BitmapThumbnailImageViewTarget.java
+++ b/library/src/main/java/com/bumptech/glide/request/target/BitmapThumbnailImageViewTarget.java
@@ -15,6 +15,7 @@ public BitmapThumbnailImageViewTarget(ImageView view) {
 
   @Override
   protected Drawable getDrawable(Bitmap resource) {
-    return new BitmapDrawable(view.getResources(), resource);
+    ImageView view = viewReference.get();
+    return view != null ? new BitmapDrawable(view.getResources(), resource) : null;
   }
 }
diff --git a/library/src/main/java/com/bumptech/glide/request/target/DrawableImageViewTarget.java b/library/src/main/java/com/bumptech/glide/request/target/DrawableImageViewTarget.java
index e9ab75e01..769548f96 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/DrawableImageViewTarget.java
+++ b/library/src/main/java/com/bumptech/glide/request/target/DrawableImageViewTarget.java
@@ -15,6 +15,9 @@ public DrawableImageViewTarget(ImageView view) {
 
   @Override
   protected void setResource(@Nullable Drawable resource) {
-    view.setImageDrawable(resource);
+    ImageView view = viewReference.get();
+    if (view != null) {
+      view.setImageDrawable(resource);
+    }
   }
 }
diff --git a/library/src/main/java/com/bumptech/glide/request/target/ImageViewTarget.java b/library/src/main/java/com/bumptech/glide/request/target/ImageViewTarget.java
index eb4fa50ab..127084484 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/ImageViewTarget.java
+++ b/library/src/main/java/com/bumptech/glide/request/target/ImageViewTarget.java
@@ -30,7 +30,8 @@ public ImageViewTarget(ImageView view) {
   @Override
   @Nullable
   public Drawable getCurrentDrawable() {
-    return view.getDrawable();
+    ImageView view = viewReference.get();
+    return view != null ? view.getDrawable() : null;
   }
 
   /**
@@ -41,7 +42,10 @@ public Drawable getCurrentDrawable() {
    */
   @Override
   public void setDrawable(Drawable drawable) {
-    view.setImageDrawable(drawable);
+    ImageView view = viewReference.get();
+    if (view != null) {
+      view.setImageDrawable(drawable);
+    }
   }
 
   /**
diff --git a/library/src/main/java/com/bumptech/glide/request/target/ThumbnailImageViewTarget.java b/library/src/main/java/com/bumptech/glide/request/target/ThumbnailImageViewTarget.java
index c3d658f9b..c8e778600 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/ThumbnailImageViewTarget.java
+++ b/library/src/main/java/com/bumptech/glide/request/target/ThumbnailImageViewTarget.java
@@ -28,6 +28,11 @@ public ThumbnailImageViewTarget(ImageView view) {
 
   @Override
   protected void setResource(@Nullable T resource) {
+    ImageView view = viewReference.get();
+    if (view == null) {
+      return;
+    }
+
     ViewGroup.LayoutParams layoutParams = view.getLayoutParams();
     Drawable result = getDrawable(resource);
     if (layoutParams != null && layoutParams.width > 0 && layoutParams.height > 0) {
diff --git a/library/src/main/java/com/bumptech/glide/request/target/ViewTarget.java b/library/src/main/java/com/bumptech/glide/request/target/ViewTarget.java
index 37f0b01b5..f3f7567b3 100644
--- a/library/src/main/java/com/bumptech/glide/request/target/ViewTarget.java
+++ b/library/src/main/java/com/bumptech/glide/request/target/ViewTarget.java
@@ -44,11 +44,11 @@
   private static boolean isTagUsedAtLeastOnce = false;
   @Nullable private static Integer tagId = null;
 
-  protected final T view;
+  protected final WeakReference<T> viewReference;
   private final SizeDeterminer sizeDeterminer;
 
   public ViewTarget(T view) {
-    this.view = Preconditions.checkNotNull(view);
+    this.viewReference = new WeakReference<T>(Preconditions.checkNotNull(view));
     sizeDeterminer = new SizeDeterminer(view);
   }
 
@@ -56,7 +56,7 @@ public ViewTarget(T view) {
    * Returns the wrapped {@link android.view.View}.
    */
   public T getView() {
-    return view;
+    return viewReference.get();
   }
 
   /**
@@ -118,10 +118,20 @@ public Request getRequest() {
 
   @Override
   public String toString() {
-    return "Target for: " + view;
+    View view = viewReference.get();
+    if (view == null) {
+      return "Target for an already destroyed view.";
+    } else {
+      return "Target for: " + view;
+    }
   }
 
   private void setTag(@Nullable Object tag) {
+    View view = viewReference.get();
+    if (view == null) {
+      return;
+    }
+
     if (tagId == null) {
       isTagUsedAtLeastOnce = true;
       view.setTag(tag);
@@ -132,6 +142,10 @@ private void setTag(@Nullable Object tag) {
 
   @Nullable
   private Object getTag() {
+    View view = viewReference.get();
+    if (view == null) {
+      return null;
+    }
     if (tagId == null) {
       return view.getTag();
     } else {
diff --git a/library/src/main/java/com/bumptech/glide/request/transition/BitmapContainerTransitionFactory.java b/library/src/main/java/com/bumptech/glide/request/transition/BitmapContainerTransitionFactory.java
index 012d2009b..489b91ce8 100644
--- a/library/src/main/java/com/bumptech/glide/request/transition/BitmapContainerTransitionFactory.java
+++ b/library/src/main/java/com/bumptech/glide/request/transition/BitmapContainerTransitionFactory.java
@@ -4,6 +4,8 @@
 import android.graphics.Bitmap;
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
+import android.view.View;
+
 import com.bumptech.glide.load.DataSource;
 
 /**
@@ -46,9 +48,14 @@ public BitmapGlideAnimation(Transition<Drawable> transition) {
 
     @Override
     public boolean transition(R current, ViewAdapter adapter) {
-      Resources resources = adapter.getView().getResources();
-      Drawable currentBitmap = new BitmapDrawable(resources, getBitmap(current));
-      return transition.transition(currentBitmap, adapter);
+      View view = adapter.getView();
+      if (view == null) {
+        return false;
+      } else {
+        Resources resources = adapter.getView().getResources();
+        Drawable currentBitmap = new BitmapDrawable(resources, getBitmap(current));
+        return transition.transition(currentBitmap, adapter);
+      }
     }
   }
 }
diff --git a/library/src/main/java/com/bumptech/glide/request/transition/Transition.java b/library/src/main/java/com/bumptech/glide/request/transition/Transition.java
index 50debd7b9..b534a100b 100644
--- a/library/src/main/java/com/bumptech/glide/request/transition/Transition.java
+++ b/library/src/main/java/com/bumptech/glide/request/transition/Transition.java
@@ -25,6 +25,7 @@
     /**
      * Returns the wrapped {@link android.view.View}.
      */
+    @Nullable
     View getView();
 
     /**
