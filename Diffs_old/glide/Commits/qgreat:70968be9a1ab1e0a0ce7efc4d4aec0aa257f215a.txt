diff --git a/.idea/codeStyleSettings.xml b/.idea/codeStyleSettings.xml
deleted file mode 100644
index ebd90ff05..000000000
--- a/.idea/codeStyleSettings.xml
+++ /dev/null
@@ -1,564 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectCodeStyleSettingsManager">
-    <option name="PER_PROJECT_SETTINGS">
-      <value>
-        <option name="OTHER_INDENT_OPTIONS">
-          <value>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-            <option name="USE_TAB_CHARACTER" value="false" />
-            <option name="SMART_TABS" value="false" />
-            <option name="LABEL_INDENT_SIZE" value="0" />
-            <option name="LABEL_INDENT_ABSOLUTE" value="false" />
-            <option name="USE_RELATIVE_INDENTS" value="false" />
-          </value>
-        </option>
-        <option name="INSERT_INNER_CLASS_IMPORTS" value="true" />
-        <option name="CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND" value="999" />
-        <option name="NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND" value="999" />
-        <option name="PACKAGES_TO_USE_IMPORT_ON_DEMAND">
-          <value />
-        </option>
-        <option name="IMPORT_LAYOUT_TABLE">
-          <value>
-            <package name="" withSubpackages="true" static="true" />
-            <emptyLine />
-            <package name="" withSubpackages="true" static="false" />
-          </value>
-        </option>
-        <option name="RIGHT_MARGIN" value="100" />
-        <option name="JD_P_AT_EMPTY_LINES" value="false" />
-        <option name="JD_KEEP_EMPTY_PARAMETER" value="false" />
-        <option name="JD_KEEP_EMPTY_EXCEPTION" value="false" />
-        <option name="JD_KEEP_EMPTY_RETURN" value="false" />
-        <option name="KEEP_CONTROL_STATEMENT_IN_ONE_LINE" value="false" />
-        <option name="KEEP_BLANK_LINES_IN_CODE" value="1" />
-        <option name="KEEP_BLANK_LINES_BEFORE_RBRACE" value="0" />
-        <option name="ALIGN_MULTILINE_PARAMETERS" value="false" />
-        <option name="ALIGN_MULTILINE_FOR" value="false" />
-        <option name="SPACE_BEFORE_ARRAY_INITIALIZER_LBRACE" value="true" />
-        <option name="CALL_PARAMETERS_WRAP" value="1" />
-        <option name="METHOD_PARAMETERS_WRAP" value="1" />
-        <option name="EXTENDS_LIST_WRAP" value="1" />
-        <option name="THROWS_KEYWORD_WRAP" value="1" />
-        <option name="METHOD_CALL_CHAIN_WRAP" value="1" />
-        <option name="BINARY_OPERATION_WRAP" value="1" />
-        <option name="BINARY_OPERATION_SIGN_ON_NEXT_LINE" value="true" />
-        <option name="TERNARY_OPERATION_WRAP" value="1" />
-        <option name="TERNARY_OPERATION_SIGNS_ON_NEXT_LINE" value="true" />
-        <option name="FOR_STATEMENT_WRAP" value="1" />
-        <option name="ARRAY_INITIALIZER_WRAP" value="1" />
-        <option name="WRAP_COMMENTS" value="true" />
-        <option name="IF_BRACE_FORCE" value="3" />
-        <option name="DOWHILE_BRACE_FORCE" value="3" />
-        <option name="WHILE_BRACE_FORCE" value="3" />
-        <option name="FOR_BRACE_FORCE" value="3" />
-        <AndroidXmlCodeStyleSettings>
-          <option name="USE_CUSTOM_SETTINGS" value="true" />
-          <option name="LAYOUT_SETTINGS">
-            <value>
-              <option name="INSERT_BLANK_LINE_BEFORE_TAG" value="false" />
-            </value>
-          </option>
-        </AndroidXmlCodeStyleSettings>
-        <JSCodeStyleSettings>
-          <option name="INDENT_CHAINED_CALLS" value="false" />
-        </JSCodeStyleSettings>
-        <JavaCodeStyleSettings>
-          <option name="DO_NOT_WRAP_AFTER_SINGLE_ANNOTATION" value="true" />
-        </JavaCodeStyleSettings>
-        <Python>
-          <option name="USE_CONTINUATION_INDENT_FOR_ARGUMENTS" value="true" />
-        </Python>
-        <TypeScriptCodeStyleSettings>
-          <option name="INDENT_CHAINED_CALLS" value="false" />
-        </TypeScriptCodeStyleSettings>
-        <XML>
-          <option name="XML_ALIGN_ATTRIBUTES" value="false" />
-          <option name="XML_LEGACY_SETTINGS_IMPORTED" value="true" />
-        </XML>
-        <codeStyleSettings language="CSS">
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="ECMA Script Level 4">
-          <option name="KEEP_BLANK_LINES_IN_CODE" value="1" />
-          <option name="ALIGN_MULTILINE_PARAMETERS" value="false" />
-          <option name="ALIGN_MULTILINE_FOR" value="false" />
-          <option name="CALL_PARAMETERS_WRAP" value="1" />
-          <option name="METHOD_PARAMETERS_WRAP" value="1" />
-          <option name="EXTENDS_LIST_WRAP" value="1" />
-          <option name="BINARY_OPERATION_WRAP" value="1" />
-          <option name="BINARY_OPERATION_SIGN_ON_NEXT_LINE" value="true" />
-          <option name="TERNARY_OPERATION_WRAP" value="1" />
-          <option name="TERNARY_OPERATION_SIGNS_ON_NEXT_LINE" value="true" />
-          <option name="FOR_STATEMENT_WRAP" value="1" />
-          <option name="ARRAY_INITIALIZER_WRAP" value="1" />
-          <option name="IF_BRACE_FORCE" value="3" />
-          <option name="DOWHILE_BRACE_FORCE" value="3" />
-          <option name="WHILE_BRACE_FORCE" value="3" />
-          <option name="FOR_BRACE_FORCE" value="3" />
-          <option name="PARENT_SETTINGS_INSTALLED" value="true" />
-        </codeStyleSettings>
-        <codeStyleSettings language="HTML">
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="JAVA">
-          <option name="KEEP_CONTROL_STATEMENT_IN_ONE_LINE" value="false" />
-          <option name="KEEP_BLANK_LINES_IN_CODE" value="1" />
-          <option name="ALIGN_MULTILINE_PARAMETERS" value="false" />
-          <option name="ALIGN_MULTILINE_RESOURCES" value="false" />
-          <option name="ALIGN_MULTILINE_FOR" value="false" />
-          <option name="CALL_PARAMETERS_WRAP" value="1" />
-          <option name="METHOD_PARAMETERS_WRAP" value="1" />
-          <option name="EXTENDS_LIST_WRAP" value="1" />
-          <option name="THROWS_KEYWORD_WRAP" value="1" />
-          <option name="METHOD_CALL_CHAIN_WRAP" value="1" />
-          <option name="BINARY_OPERATION_WRAP" value="1" />
-          <option name="BINARY_OPERATION_SIGN_ON_NEXT_LINE" value="true" />
-          <option name="TERNARY_OPERATION_WRAP" value="1" />
-          <option name="TERNARY_OPERATION_SIGNS_ON_NEXT_LINE" value="true" />
-          <option name="KEEP_SIMPLE_BLOCKS_IN_ONE_LINE" value="true" />
-          <option name="KEEP_SIMPLE_METHODS_IN_ONE_LINE" value="true" />
-          <option name="KEEP_SIMPLE_LAMBDAS_IN_ONE_LINE" value="true" />
-          <option name="KEEP_SIMPLE_CLASSES_IN_ONE_LINE" value="true" />
-          <option name="FOR_STATEMENT_WRAP" value="1" />
-          <option name="ARRAY_INITIALIZER_WRAP" value="1" />
-          <option name="IF_BRACE_FORCE" value="3" />
-          <option name="DOWHILE_BRACE_FORCE" value="3" />
-          <option name="WHILE_BRACE_FORCE" value="3" />
-          <option name="FOR_BRACE_FORCE" value="3" />
-          <option name="PARENT_SETTINGS_INSTALLED" value="true" />
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="JSON">
-          <indentOptions>
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="JavaScript">
-          <option name="RIGHT_MARGIN" value="80" />
-          <option name="KEEP_BLANK_LINES_IN_CODE" value="1" />
-          <option name="ALIGN_MULTILINE_PARAMETERS" value="false" />
-          <option name="ALIGN_MULTILINE_FOR" value="false" />
-          <option name="CALL_PARAMETERS_WRAP" value="1" />
-          <option name="METHOD_PARAMETERS_WRAP" value="1" />
-          <option name="BINARY_OPERATION_WRAP" value="1" />
-          <option name="BINARY_OPERATION_SIGN_ON_NEXT_LINE" value="true" />
-          <option name="TERNARY_OPERATION_WRAP" value="1" />
-          <option name="TERNARY_OPERATION_SIGNS_ON_NEXT_LINE" value="true" />
-          <option name="FOR_STATEMENT_WRAP" value="1" />
-          <option name="ARRAY_INITIALIZER_WRAP" value="1" />
-          <option name="IF_BRACE_FORCE" value="3" />
-          <option name="DOWHILE_BRACE_FORCE" value="3" />
-          <option name="WHILE_BRACE_FORCE" value="3" />
-          <option name="FOR_BRACE_FORCE" value="3" />
-          <option name="PARENT_SETTINGS_INSTALLED" value="true" />
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="ObjectiveC">
-          <option name="KEEP_BLANK_LINES_BEFORE_RBRACE" value="1" />
-          <option name="BLANK_LINES_BEFORE_IMPORTS" value="0" />
-          <option name="BLANK_LINES_AFTER_IMPORTS" value="0" />
-          <option name="BLANK_LINES_AROUND_CLASS" value="0" />
-          <option name="BLANK_LINES_AROUND_METHOD" value="0" />
-          <option name="BLANK_LINES_AROUND_METHOD_IN_INTERFACE" value="0" />
-          <option name="ALIGN_MULTILINE_BINARY_OPERATION" value="false" />
-          <option name="BINARY_OPERATION_SIGN_ON_NEXT_LINE" value="true" />
-          <option name="FOR_STATEMENT_WRAP" value="1" />
-          <option name="ASSIGNMENT_WRAP" value="1" />
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="PROTO">
-          <option name="RIGHT_MARGIN" value="80" />
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="2" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="Python">
-          <option name="KEEP_BLANK_LINES_IN_CODE" value="1" />
-          <option name="RIGHT_MARGIN" value="80" />
-          <option name="ALIGN_MULTILINE_PARAMETERS" value="false" />
-          <option name="PARENT_SETTINGS_INSTALLED" value="true" />
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="SASS">
-          <indentOptions>
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="SCSS">
-          <indentOptions>
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="TypeScript">
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="XML">
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="2" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-          <arrangement>
-            <rules>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>xmlns:android</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>^$</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>xmlns:.*</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>^$</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:id</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>style</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>^$</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>^$</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:.*Style</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_width</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_height</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_weight</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_margin</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginTop</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginBottom</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginStart</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginEnd</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginLeft</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginRight</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_.*</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:padding</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingTop</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingBottom</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingStart</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingEnd</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingLeft</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingRight</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res-auto</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_NAMESPACE>http://schemas.android.com/tools</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_NAMESPACE>.*</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-            </rules>
-          </arrangement>
-        </codeStyleSettings>
-        <codeStyleSettings language="protobuf">
-          <option name="RIGHT_MARGIN" value="80" />
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="2" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-      </value>
-    </option>
-    <option name="USE_PER_PROJECT_SETTINGS" value="true" />
-  </component>
-</project>
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
index 1c2b4c84f..6560a9898 100644
--- a/.idea/inspectionProfiles/Project_Default.xml
+++ b/.idea/inspectionProfiles/Project_Default.xml
@@ -1,9 +1,36 @@
 <component name="InspectionProjectProfileManager">
   <profile version="1.0">
     <option name="myName" value="Project Default" />
-    <inspection_tool class="SerializableHasSerialVersionUIDField" enabled="true" level="WARNING" enabled_by_default="true">
-      <option name="ignoreAnonymousInnerClasses" value="false" />
-      <option name="superClassString" value="" />
+    <inspection_tool class="JavaDoc" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="TOP_LEVEL_CLASS_OPTIONS">
+        <value>
+          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
+          <option name="REQUIRED_TAGS" value="" />
+        </value>
+      </option>
+      <option name="INNER_CLASS_OPTIONS">
+        <value>
+          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
+          <option name="REQUIRED_TAGS" value="" />
+        </value>
+      </option>
+      <option name="METHOD_OPTIONS">
+        <value>
+          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
+          <option name="REQUIRED_TAGS" value="@return@param@throws or @exception" />
+        </value>
+      </option>
+      <option name="FIELD_OPTIONS">
+        <value>
+          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
+          <option name="REQUIRED_TAGS" value="" />
+        </value>
+      </option>
+      <option name="IGNORE_DEPRECATED" value="false" />
+      <option name="IGNORE_JAVADOC_PERIOD" value="true" />
+      <option name="IGNORE_DUPLICATED_THROWS" value="false" />
+      <option name="IGNORE_POINT_TO_ITSELF" value="false" />
+      <option name="myAdditionalJavadocTags" value="date" />
     </inspection_tool>
   </profile>
 </component>
\ No newline at end of file
diff --git a/.travis.yml b/.travis.yml
deleted file mode 100644
index 93bf4f945..000000000
--- a/.travis.yml
+++ /dev/null
@@ -1,46 +0,0 @@
-language: android
-sudo: false
-dist: trusty
-
-before_install:
-  - mkdir "$ANDROID_HOME/licenses" || true
-  - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55\nd56f5187479451eabf01fb78af6dfcb131a6481e" > "$ANDROID_HOME/licenses/android-sdk-license"
-  - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd\n504667f4c0de7af1a06de9f4b1727b84351f2910" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
-  - yes | $ANDROID_HOME/tools/bin/sdkmanager "build-tools;28.0.3" "platforms;android-28"
-
-android:
-  components:
-    # https://github.com/travis-ci/travis-ci/issues/6040#issuecomment-219367943
-    - tools
-    - tools
-
-jdk:
-  - oraclejdk8
-
-env:
-  matrix:
-    - COMPONENT=unit
-    - COMPONENT=firebase
-    - COMPONENT=instrumentation ANDROID_TARGET=16
-    - COMPONENT=instrumentation ANDROID_TARGET=17
-    - COMPONENT=instrumentation ANDROID_TARGET=18
-    - COMPONENT=samples
-
-before_script:
-  - ./scripts/travis_before_script.sh
-
-script:
-  - ./scripts/travis_script.sh
-
-after_success:
-  - ./scripts/travis_after_success.sh
-
-before_cache:
-  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
-  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
-cache:
-  directories:
-    - $HOME/.gradle/caches/
-    - $HOME/.gradle/wrapper/
-    - $HOME/.android/build-cache
-
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 910703705..514dd2446 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.6-all.zip
diff --git a/instrumentation/src/main/java/com/bumptech/glide/test/InstrumentationAppGlideModule.java b/instrumentation/src/main/java/com/bumptech/glide/test/InstrumentationAppGlideModule.java
index 056d6140a..1a76c3a3c 100644
--- a/instrumentation/src/main/java/com/bumptech/glide/test/InstrumentationAppGlideModule.java
+++ b/instrumentation/src/main/java/com/bumptech/glide/test/InstrumentationAppGlideModule.java
@@ -6,4 +6,4 @@
 @GlideModule
 public class InstrumentationAppGlideModule extends AppGlideModule {
   // Intentionally empty.
-}
+}
\ No newline at end of file
diff --git a/library/src/main/java/com/bumptech/glide/Glide.java b/library/src/main/java/com/bumptech/glide/Glide.java
index ce3b5eafb..f7cfe9fca 100644
--- a/library/src/main/java/com/bumptech/glide/Glide.java
+++ b/library/src/main/java/com/bumptech/glide/Glide.java
@@ -232,7 +232,9 @@ private static void initializeGlide(@NonNull Context context) {
   @SuppressWarnings("deprecation")
   private static void initializeGlide(@NonNull Context context, @NonNull GlideBuilder builder) {
     Context applicationContext = context.getApplicationContext();
+//    获取注解生成的GlideModules
     GeneratedAppGlideModule annotationGeneratedModule = getAnnotationGeneratedGlideModules();
+//    manifest里的GlideModule
     List<com.bumptech.glide.module.GlideModule> manifestModules = Collections.emptyList();
     if (annotationGeneratedModule == null || annotationGeneratedModule.isManifestParsingEnabled()) {
       manifestModules = new ManifestParser(applicationContext).parse();
@@ -254,7 +256,7 @@ private static void initializeGlide(@NonNull Context context, @NonNull GlideBuil
         iterator.remove();
       }
     }
-
+//只是打印日志
     if (Log.isLoggable(TAG, Log.DEBUG)) {
       for (com.bumptech.glide.module.GlideModule glideModule : manifestModules) {
         Log.d(TAG, "Discovered GlideModule from manifest: " + glideModule.getClass());
@@ -347,7 +349,7 @@ private static void throwIncorrectGlideModule(Exception e) {
     this.defaultRequestOptionsFactory = defaultRequestOptionsFactory;
 
     final Resources resources = context.getResources();
-
+// XXX: Registry的创建
     registry = new Registry();
     registry.register(new DefaultImageHeaderParser());
     // Right now we're only using this parser for HEIF images, which are only supported on OMR1+.
@@ -700,6 +702,7 @@ public MemoryCategory setMemoryCategory(@NonNull MemoryCategory memoryCategory)
   private static RequestManagerRetriever getRetriever(@Nullable Context context) {
     // Context could be null for other reasons (ie the user passes in null), but in practice it will
     // only occur due to errors with the Fragment lifecycle.
+
     Preconditions.checkNotNull(
         context,
         "You cannot start a load on a not yet attached View or a Fragment where getActivity() "
diff --git a/library/src/main/java/com/bumptech/glide/Registry.java b/library/src/main/java/com/bumptech/glide/Registry.java
index c5903fcf2..d018a013f 100644
--- a/library/src/main/java/com/bumptech/glide/Registry.java
+++ b/library/src/main/java/com/bumptech/glide/Registry.java
@@ -474,6 +474,7 @@ public Registry register(@NonNull ImageHeaderParser parser) {
   public <Data, TResource, Transcode> LoadPath<Data, TResource, Transcode> getLoadPath(
       @NonNull Class<Data> dataClass, @NonNull Class<TResource> resourceClass,
       @NonNull Class<Transcode> transcodeClass) {
+    // 这里首先从loadPathCache缓存中获取LoadPath对象，如果没有则调用getDecodePaths方法进行获取：
     LoadPath<Data, TResource, Transcode> result =
         loadPathCache.get(dataClass, resourceClass, transcodeClass);
     if (loadPathCache.isEmptyLoadPath(result)) {
diff --git a/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java b/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java
index e8f914b6e..42344cf52 100644
--- a/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java
+++ b/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java
@@ -56,6 +56,7 @@ public void loadData(@NonNull Priority priority,
       @NonNull DataCallback<? super InputStream> callback) {
     long startTime = LogTime.getLogTime();
     try {
+//      它会调用loadDataWithRedirects方法来返回一个InputStream输入流，来看看loadDataWithRedirects的源码
       InputStream result = loadDataWithRedirects(glideUrl.toURL(), 0, null, glideUrl.getHeaders());
       callback.onDataReady(result);
     } catch (IOException e) {
@@ -140,6 +141,7 @@ private static boolean isHttpRedirect(int statusCode) {
   private InputStream getStreamForSuccessfulRequest(HttpURLConnection urlConnection)
       throws IOException {
     if (TextUtils.isEmpty(urlConnection.getContentEncoding())) {
+      // 没有content encoding 需要特殊处理
       int contentLength = urlConnection.getContentLength();
       stream = ContentLengthInputStream.obtain(urlConnection.getInputStream(), contentLength);
     } else {
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/DecodeHelper.java b/library/src/main/java/com/bumptech/glide/load/engine/DecodeHelper.java
index 6a4283f1c..99bee6f15 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/DecodeHelper.java
+++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeHelper.java
@@ -14,6 +14,7 @@
 import com.bumptech.glide.load.model.ModelLoader;
 import com.bumptech.glide.load.model.ModelLoader.LoadData;
 import com.bumptech.glide.load.resource.UnitTransformation;
+
 import java.io.File;
 import java.util.ArrayList;
 import java.util.List;
@@ -22,222 +23,227 @@
 
 final class DecodeHelper<Transcode> {
 
-  private final List<LoadData<?>> loadData = new ArrayList<>();
-  private final List<Key> cacheKeys = new ArrayList<>();
-
-  private GlideContext glideContext;
-  private Object model;
-  private int width;
-  private int height;
-  private Class<?> resourceClass;
-  private DecodeJob.DiskCacheProvider diskCacheProvider;
-  private Options options;
-  private Map<Class<?>, Transformation<?>> transformations;
-  private Class<Transcode> transcodeClass;
-  private boolean isLoadDataSet;
-  private boolean isCacheKeysSet;
-  private Key signature;
-  private Priority priority;
-  private DiskCacheStrategy diskCacheStrategy;
-  private boolean isTransformationRequired;
-  private boolean isScaleOnlyOrNoTransform;
-
-  @SuppressWarnings("unchecked")
-  <R> void init(
-      GlideContext glideContext,
-      Object model,
-      Key signature,
-      int width,
-      int height,
-      DiskCacheStrategy diskCacheStrategy,
-      Class<?> resourceClass,
-      Class<R> transcodeClass,
-      Priority priority,
-      Options options,
-      Map<Class<?>, Transformation<?>> transformations,
-      boolean isTransformationRequired,
-      boolean isScaleOnlyOrNoTransform,
-      DiskCacheProvider diskCacheProvider) {
-    this.glideContext = glideContext;
-    this.model = model;
-    this.signature = signature;
-    this.width = width;
-    this.height = height;
-    this.diskCacheStrategy = diskCacheStrategy;
-    this.resourceClass = resourceClass;
-    this.diskCacheProvider = diskCacheProvider;
-    this.transcodeClass = (Class<Transcode>) transcodeClass;
-    this.priority = priority;
-    this.options = options;
-    this.transformations = transformations;
-    this.isTransformationRequired = isTransformationRequired;
-    this.isScaleOnlyOrNoTransform = isScaleOnlyOrNoTransform;
-
-  }
-
-  void clear() {
-    glideContext = null;
-    model = null;
-    signature = null;
-    resourceClass = null;
-    transcodeClass = null;
-    options = null;
-    priority = null;
-    transformations = null;
-    diskCacheStrategy = null;
-
-    loadData.clear();
-    isLoadDataSet = false;
-    cacheKeys.clear();
-    isCacheKeysSet = false;
-  }
-
-  DiskCache getDiskCache() {
-    return diskCacheProvider.getDiskCache();
-  }
-
-  DiskCacheStrategy getDiskCacheStrategy() {
-    return diskCacheStrategy;
-  }
-
-  Priority getPriority() {
-    return priority;
-  }
-
-  Options getOptions() {
-    return options;
-  }
-
-  Key getSignature() {
-    return signature;
-  }
-
-  int getWidth() {
-    return width;
-  }
-
-  int getHeight() {
-    return height;
-  }
-
-  ArrayPool getArrayPool() {
-    return glideContext.getArrayPool();
-  }
-
-  Class<?> getTranscodeClass() {
-    return transcodeClass;
-  }
-
-  Class<?> getModelClass() {
-    return model.getClass();
-  }
-
-  List<Class<?>> getRegisteredResourceClasses() {
-    return glideContext.getRegistry()
-        .getRegisteredResourceClasses(model.getClass(), resourceClass, transcodeClass);
-  }
-
-  boolean hasLoadPath(Class<?> dataClass) {
-    return getLoadPath(dataClass) != null;
-  }
-
-  <Data> LoadPath<Data, ?, Transcode> getLoadPath(Class<Data> dataClass) {
-    return glideContext.getRegistry().getLoadPath(dataClass, resourceClass, transcodeClass);
-  }
-
-  boolean isScaleOnlyOrNoTransform() {
-    return isScaleOnlyOrNoTransform;
-  }
-
-  @SuppressWarnings("unchecked")
-  <Z> Transformation<Z> getTransformation(Class<Z> resourceClass) {
-    Transformation<Z> result = (Transformation<Z>) transformations.get(resourceClass);
-    if (result == null) {
-      for (Entry<Class<?>, Transformation<?>> entry : transformations.entrySet()) {
-        if (entry.getKey().isAssignableFrom(resourceClass)) {
-          result = (Transformation<Z>) entry.getValue();
-          break;
-        }
-      }
-    }
-
-    if (result == null) {
-      if (transformations.isEmpty() && isTransformationRequired) {
-        throw new IllegalArgumentException(
-            "Missing transformation for " + resourceClass + ". If you wish to"
-                + " ignore unknown resource types, use the optional transformation methods.");
-      } else {
-        return UnitTransformation.get();
-      }
-    }
-    return result;
-  }
-
-  boolean isResourceEncoderAvailable(Resource<?> resource) {
-    return glideContext.getRegistry().isResourceEncoderAvailable(resource);
-  }
-
-  <Z> ResourceEncoder<Z> getResultEncoder(Resource<Z> resource) {
-    return glideContext.getRegistry().getResultEncoder(resource);
-  }
-
-  List<ModelLoader<File, ?>> getModelLoaders(File file)
-      throws Registry.NoModelLoaderAvailableException {
-    return glideContext.getRegistry().getModelLoaders(file);
-  }
-
-  boolean isSourceKey(Key key) {
-    List<LoadData<?>> loadData = getLoadData();
-    //noinspection ForLoopReplaceableByForEach to improve perf
-    for (int i = 0, size = loadData.size(); i < size; i++) {
-      LoadData<?> current = loadData.get(i);
-      if (current.sourceKey.equals(key)) {
-        return true;
-      }
-    }
-    return false;
-  }
-
-  List<LoadData<?>> getLoadData() {
-    if (!isLoadDataSet) {
-      isLoadDataSet = true;
-      loadData.clear();
-      List<ModelLoader<Object, ?>> modelLoaders = glideContext.getRegistry().getModelLoaders(model);
-      //noinspection ForLoopReplaceableByForEach to improve perf
-      for (int i = 0, size = modelLoaders.size(); i < size; i++) {
-        ModelLoader<Object, ?> modelLoader = modelLoaders.get(i);
-        LoadData<?> current =
-            modelLoader.buildLoadData(model, width, height, options);
-        if (current != null) {
-          loadData.add(current);
-        }
-      }
-    }
-    return loadData;
-  }
-
-  List<Key> getCacheKeys() {
-    if (!isCacheKeysSet) {
-      isCacheKeysSet = true;
-      cacheKeys.clear();
-      List<LoadData<?>> loadData = getLoadData();
-      //noinspection ForLoopReplaceableByForEach to improve perf
-      for (int i = 0, size = loadData.size(); i < size; i++) {
-        LoadData<?> data = loadData.get(i);
-        if (!cacheKeys.contains(data.sourceKey)) {
-          cacheKeys.add(data.sourceKey);
-        }
-        for (int j = 0; j < data.alternateKeys.size(); j++) {
-          if (!cacheKeys.contains(data.alternateKeys.get(j))) {
-            cacheKeys.add(data.alternateKeys.get(j));
-          }
-        }
-      }
-    }
-    return cacheKeys;
-  }
-
-  <X> Encoder<X> getSourceEncoder(X data) throws Registry.NoSourceEncoderAvailableException {
-    return glideContext.getRegistry().getSourceEncoder(data);
-  }
+	private final List<LoadData<?>> loadData = new ArrayList<>();
+	private final List<Key> cacheKeys = new ArrayList<>();
+
+	private GlideContext glideContext;
+	private Object model;
+	private int width;
+	private int height;
+	private Class<?> resourceClass;
+	private DecodeJob.DiskCacheProvider diskCacheProvider;
+	private Options options;
+	private Map<Class<?>, Transformation<?>> transformations;
+	private Class<Transcode> transcodeClass;
+	private boolean isLoadDataSet;
+	private boolean isCacheKeysSet;
+	private Key signature;
+	private Priority priority;
+	private DiskCacheStrategy diskCacheStrategy;
+	private boolean isTransformationRequired;
+	private boolean isScaleOnlyOrNoTransform;
+
+	@SuppressWarnings("unchecked")
+	<R> void init(
+			GlideContext glideContext,
+			Object model,
+			Key signature,
+			int width,
+			int height,
+			DiskCacheStrategy diskCacheStrategy,
+			Class<?> resourceClass,
+			Class<R> transcodeClass,
+			Priority priority,
+			Options options,
+			Map<Class<?>, Transformation<?>> transformations,
+			boolean isTransformationRequired,
+			boolean isScaleOnlyOrNoTransform,
+			DiskCacheProvider diskCacheProvider) {
+		this.glideContext = glideContext;
+		this.model = model;
+		this.signature = signature;
+		this.width = width;
+		this.height = height;
+		this.diskCacheStrategy = diskCacheStrategy;
+		this.resourceClass = resourceClass;
+		this.diskCacheProvider = diskCacheProvider;
+		this.transcodeClass = (Class<Transcode>) transcodeClass;
+		this.priority = priority;
+		this.options = options;
+		this.transformations = transformations;
+		this.isTransformationRequired = isTransformationRequired;
+		this.isScaleOnlyOrNoTransform = isScaleOnlyOrNoTransform;
+
+	}
+
+	void clear() {
+		glideContext = null;
+		model = null;
+		signature = null;
+		resourceClass = null;
+		transcodeClass = null;
+		options = null;
+		priority = null;
+		transformations = null;
+		diskCacheStrategy = null;
+
+		loadData.clear();
+		isLoadDataSet = false;
+		cacheKeys.clear();
+		isCacheKeysSet = false;
+	}
+
+	DiskCache getDiskCache() {
+		return diskCacheProvider.getDiskCache();
+	}
+
+	DiskCacheStrategy getDiskCacheStrategy() {
+		return diskCacheStrategy;
+	}
+
+	Priority getPriority() {
+		return priority;
+	}
+
+	Options getOptions() {
+		return options;
+	}
+
+	Key getSignature() {
+		return signature;
+	}
+
+	int getWidth() {
+		return width;
+	}
+
+	int getHeight() {
+		return height;
+	}
+
+	ArrayPool getArrayPool() {
+		return glideContext.getArrayPool();
+	}
+
+	Class<?> getTranscodeClass() {
+		return transcodeClass;
+	}
+
+	Class<?> getModelClass() {
+		return model.getClass();
+	}
+
+	List<Class<?>> getRegisteredResourceClasses() {
+		return glideContext.getRegistry()
+				.getRegisteredResourceClasses(model.getClass(), resourceClass, transcodeClass);
+	}
+
+	boolean hasLoadPath(Class<?> dataClass) {
+		return getLoadPath(dataClass) != null;
+	}
+
+	<Data> LoadPath<Data, ?, Transcode> getLoadPath(Class<Data> dataClass) {
+		return glideContext.getRegistry().getLoadPath(dataClass, resourceClass, transcodeClass);
+	}
+
+	boolean isScaleOnlyOrNoTransform() {
+		return isScaleOnlyOrNoTransform;
+	}
+
+	@SuppressWarnings("unchecked")
+	<Z> Transformation<Z> getTransformation(Class<Z> resourceClass) {
+		Transformation<Z> result = (Transformation<Z>) transformations.get(resourceClass);
+		if (result == null) {
+			for (Entry<Class<?>, Transformation<?>> entry : transformations.entrySet()) {
+				if (entry.getKey().isAssignableFrom(resourceClass)) {
+					result = (Transformation<Z>) entry.getValue();
+					break;
+				}
+			}
+		}
+
+		if (result == null) {
+			if (transformations.isEmpty() && isTransformationRequired) {
+				throw new IllegalArgumentException(
+						"Missing transformation for " + resourceClass + ". If you wish to"
+								+ " ignore unknown resource types, use the optional transformation methods.");
+			} else {
+				return UnitTransformation.get();
+			}
+		}
+		return result;
+	}
+
+	boolean isResourceEncoderAvailable(Resource<?> resource) {
+		return glideContext.getRegistry().isResourceEncoderAvailable(resource);
+	}
+
+	<Z> ResourceEncoder<Z> getResultEncoder(Resource<Z> resource) {
+		return glideContext.getRegistry().getResultEncoder(resource);
+	}
+
+	List<ModelLoader<File, ?>> getModelLoaders(File file)
+			throws Registry.NoModelLoaderAvailableException {
+		return glideContext.getRegistry().getModelLoaders(file);
+	}
+
+	boolean isSourceKey(Key key) {
+		List<LoadData<?>> loadData = getLoadData();
+		//noinspection ForLoopReplaceableByForEach to improve perf
+		for (int i = 0, size = loadData.size(); i < size; i++) {
+			LoadData<?> current = loadData.get(i);
+			if (current.sourceKey.equals(key)) {
+				return true;
+			}
+		}
+		return false;
+	}
+
+	List<LoadData<?>> getLoadData() {
+		if (!isLoadDataSet) {
+			isLoadDataSet = true;
+			loadData.clear();
+			// 在getLoadData方法中是调用GlideContext中的getRegistry方法来回去Registry对象，它是在Glide的构造方法中创建的
+			// 还记得吗？不记得的赶快去看看Glide的构造方法
+//			entries集合包含了那些对象和创建Entry对象所关联的类和工厂。
+			List<ModelLoader<Object, ?>> modelLoaders = glideContext.getRegistry().getModelLoaders(model);
+			//noinspection ForLoopReplaceableByForEach to improve perf
+			for (int i = 0, size = modelLoaders.size(); i < size; i++) {
+				ModelLoader<Object, ?> modelLoader = modelLoaders.get(i);
+//				modelLoaders集合中一定会包含一个ModelLoader是HttpUriLoader
+				LoadData<?> current =
+						modelLoader.buildLoadData(model, width, height, options);
+//				最后把LoadData对象返回，我们往上返回到SourceGenerator的startNext方法中：
+				if (current != null) {
+					loadData.add(current);
+				}
+			}
+		}
+		return loadData;
+	}
+
+	List<Key> getCacheKeys() {
+		if (!isCacheKeysSet) {
+			isCacheKeysSet = true;
+			cacheKeys.clear();
+			List<LoadData<?>> loadData = getLoadData();
+			//noinspection ForLoopReplaceableByForEach to improve perf
+			for (int i = 0, size = loadData.size(); i < size; i++) {
+				LoadData<?> data = loadData.get(i);
+				if (!cacheKeys.contains(data.sourceKey)) {
+					cacheKeys.add(data.sourceKey);
+				}
+				for (int j = 0; j < data.alternateKeys.size(); j++) {
+					if (!cacheKeys.contains(data.alternateKeys.get(j))) {
+						cacheKeys.add(data.alternateKeys.get(j));
+					}
+				}
+			}
+		}
+		return cacheKeys;
+	}
+
+	<X> Encoder<X> getSourceEncoder(X data) throws Registry.NoSourceEncoderAvailableException {
+		return glideContext.getRegistry().getSourceEncoder(data);
+	}
 }
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java
index 0f05483e0..054d875b5 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java
+++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java
@@ -232,6 +232,7 @@ public void run() {
         notifyFailed();
         return;
       }
+      // 主要就是在它里面执行的
       runWrapped();
     } catch (CallbackException e) {
       // If a callback not controlled by Glide throws an exception, we should avoid the Glide
@@ -305,6 +306,8 @@ private void runGenerators() {
     currentThread = Thread.currentThread();
     startFetchTime = LogTime.getLogTime();
     boolean isStarted = false;
+    // currentGenerator就是SourceGenerator对象
+   //   runGenerators最重要的就是执行了currentGenerator的startNext方法，这里将会真正的去加载网络资源：
     while (!isCancelled && currentGenerator != null
         && !(isStarted = currentGenerator.startNext())) {
       stage = getNextStage(stage);
@@ -415,6 +418,8 @@ private void decodeFromRetrievedData() {
     }
     Resource<R> resource = null;
     try {
+//      首先创建一个Resource类型的变量，通过decodeFromData方法把输入流解码并返回给resource，
+//      由此可也看出，解码主要是在decodeFromData方法中：
       resource = decodeFromData(currentFetcher, currentData, currentDataSource);
     } catch (GlideException e) {
       e.setLoggingDetails(currentAttemptingKey, currentDataSource);
@@ -469,6 +474,7 @@ private void notifyEncodeAndRelease(Resource<R> resource, DataSource dataSource)
       }
       return result;
     } finally {
+//      在这里已经体现loadData.fetcher这个fetcher的用意，主要是去关闭输入流和HttpUrlConnection的。
       fetcher.cleanup();
     }
   }
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java b/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java
index 919dc7584..a22ff3fe0 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java
+++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java
@@ -42,6 +42,8 @@ public DecodePath(Class<DataType> dataClass, Class<ResourceType> resourceClass,
 
   public Resource<Transcode> decode(DataRewinder<DataType> rewinder, int width, int height,
       @NonNull Options options, DecodeCallback<ResourceType> callback) throws GlideException {
+    // 核心代码
+    // 继续调用DecodePath的decodeResource方法去解析出数据
     Resource<ResourceType> decoded = decodeResource(rewinder, width, height, options);
     Resource<ResourceType> transformed = callback.onResourceDecoded(decoded);
     return transcoder.transcode(transformed, options);
@@ -52,6 +54,7 @@ public DecodePath(Class<DataType> dataClass, Class<ResourceType> resourceClass,
       int height, @NonNull Options options) throws GlideException {
     List<Throwable> exceptions = Preconditions.checkNotNull(listPool.acquire());
     try {
+      // 核心代码
       return decodeResourceWithList(rewinder, width, height, options, exceptions);
     } finally {
       listPool.release(exceptions);
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/Engine.java b/library/src/main/java/com/bumptech/glide/load/engine/Engine.java
index 54697616d..bdfce652a 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/Engine.java
+++ b/library/src/main/java/com/bumptech/glide/load/engine/Engine.java
@@ -5,6 +5,7 @@
 import android.support.annotation.VisibleForTesting;
 import android.support.v4.util.Pools;
 import android.util.Log;
+
 import com.bumptech.glide.GlideContext;
 import com.bumptech.glide.Priority;
 import com.bumptech.glide.load.DataSource;
@@ -22,6 +23,7 @@
 import com.bumptech.glide.util.Preconditions;
 import com.bumptech.glide.util.Synthetic;
 import com.bumptech.glide.util.pool.FactoryPools;
+
 import java.util.Map;
 import java.util.concurrent.Executor;
 
@@ -29,492 +31,510 @@
  * Responsible for starting loads and managing active and cached resources.
  */
 public class Engine implements EngineJobListener,
-    MemoryCache.ResourceRemovedListener,
-    EngineResource.ResourceListener {
-  private static final String TAG = "Engine";
-  private static final int JOB_POOL_SIZE = 150;
-  private static final boolean VERBOSE_IS_LOGGABLE = Log.isLoggable(TAG, Log.VERBOSE);
-  private final Jobs jobs;
-  private final EngineKeyFactory keyFactory;
-  private final MemoryCache cache;
-  private final EngineJobFactory engineJobFactory;
-  private final ResourceRecycler resourceRecycler;
-  private final LazyDiskCacheProvider diskCacheProvider;
-  private final DecodeJobFactory decodeJobFactory;
-  private final ActiveResources activeResources;
-
-  public Engine(
-      MemoryCache memoryCache,
-      DiskCache.Factory diskCacheFactory,
-      GlideExecutor diskCacheExecutor,
-      GlideExecutor sourceExecutor,
-      GlideExecutor sourceUnlimitedExecutor,
-      GlideExecutor animationExecutor,
-      boolean isActiveResourceRetentionAllowed) {
-    this(
-        memoryCache,
-        diskCacheFactory,
-        diskCacheExecutor,
-        sourceExecutor,
-        sourceUnlimitedExecutor,
-        animationExecutor,
-        /*jobs=*/ null,
-        /*keyFactory=*/ null,
-        /*activeResources=*/ null,
-        /*engineJobFactory=*/ null,
-        /*decodeJobFactory=*/ null,
-        /*resourceRecycler=*/ null,
-        isActiveResourceRetentionAllowed);
-  }
-
-  @VisibleForTesting
-  Engine(MemoryCache cache,
-      DiskCache.Factory diskCacheFactory,
-      GlideExecutor diskCacheExecutor,
-      GlideExecutor sourceExecutor,
-      GlideExecutor sourceUnlimitedExecutor,
-      GlideExecutor animationExecutor,
-      Jobs jobs,
-      EngineKeyFactory keyFactory,
-      ActiveResources activeResources,
-      EngineJobFactory engineJobFactory,
-      DecodeJobFactory decodeJobFactory,
-      ResourceRecycler resourceRecycler,
-      boolean isActiveResourceRetentionAllowed) {
-    this.cache = cache;
-    this.diskCacheProvider = new LazyDiskCacheProvider(diskCacheFactory);
-
-    if (activeResources == null) {
-      activeResources = new ActiveResources(isActiveResourceRetentionAllowed);
-    }
-    this.activeResources = activeResources;
-    activeResources.setListener(this);
-
-    if (keyFactory == null) {
-      keyFactory = new EngineKeyFactory();
-    }
-    this.keyFactory = keyFactory;
-
-    if (jobs == null) {
-      jobs = new Jobs();
-    }
-    this.jobs = jobs;
-
-    if (engineJobFactory == null) {
-      engineJobFactory =
-          new EngineJobFactory(
-              diskCacheExecutor,
-              sourceExecutor,
-              sourceUnlimitedExecutor,
-              animationExecutor,
-              /*engineJobListener=*/ this,
-              /*resourceListener=*/ this);
-    }
-    this.engineJobFactory = engineJobFactory;
-
-    if (decodeJobFactory == null) {
-      decodeJobFactory = new DecodeJobFactory(diskCacheProvider);
-    }
-    this.decodeJobFactory = decodeJobFactory;
-
-    if (resourceRecycler == null) {
-      resourceRecycler = new ResourceRecycler();
-    }
-    this.resourceRecycler = resourceRecycler;
-
-    cache.setResourceRemovedListener(this);
-  }
-
-  /**
-   * Starts a load for the given arguments.
-   *
-   * <p>Must be called on the main thread.
-   *
-   * <p>The flow for any request is as follows:
-   *
-   * <ul>
-   *   <li>Check the current set of actively used resources, return the active resource if present,
-   *       and move any newly inactive resources into the memory cache.
-   *   <li>Check the memory cache and provide the cached resource if present.
-   *   <li>Check the current set of in progress loads and add the cb to the in progress load if one
-   *       is present.
-   *   <li>Start a new load.
-   * </ul>
-   *
-   * <p>Active resources are those that have been provided to at least one request and have not yet
-   * been released. Once all consumers of a resource have released that resource, the resource then
-   * goes to cache. If the resource is ever returned to a new consumer from cache, it is re-added to
-   * the active resources. If the resource is evicted from the cache, its resources are recycled and
-   * re-used if possible and the resource is discarded. There is no strict requirement that
-   * consumers release their resources so active resources are held weakly.
-   *
-   * @param width The target width in pixels of the desired resource.
-   * @param height The target height in pixels of the desired resource.
-   * @param cb The callback that will be called when the load completes.
-   */
-  public synchronized <R> LoadStatus load(
-      GlideContext glideContext,
-      Object model,
-      Key signature,
-      int width,
-      int height,
-      Class<?> resourceClass,
-      Class<R> transcodeClass,
-      Priority priority,
-      DiskCacheStrategy diskCacheStrategy,
-      Map<Class<?>, Transformation<?>> transformations,
-      boolean isTransformationRequired,
-      boolean isScaleOnlyOrNoTransform,
-      Options options,
-      boolean isMemoryCacheable,
-      boolean useUnlimitedSourceExecutorPool,
-      boolean useAnimationPool,
-      boolean onlyRetrieveFromCache,
-      ResourceCallback cb,
-      Executor callbackExecutor) {
-    long startTime = VERBOSE_IS_LOGGABLE ? LogTime.getLogTime() : 0;
-
-    EngineKey key = keyFactory.buildKey(model, signature, width, height, transformations,
-        resourceClass, transcodeClass, options);
-
-    EngineResource<?> active = loadFromActiveResources(key, isMemoryCacheable);
-    if (active != null) {
-      cb.onResourceReady(active, DataSource.MEMORY_CACHE);
-      if (VERBOSE_IS_LOGGABLE) {
-        logWithTimeAndKey("Loaded resource from active resources", startTime, key);
-      }
-      return null;
-    }
-
-    EngineResource<?> cached = loadFromCache(key, isMemoryCacheable);
-    if (cached != null) {
-      cb.onResourceReady(cached, DataSource.MEMORY_CACHE);
-      if (VERBOSE_IS_LOGGABLE) {
-        logWithTimeAndKey("Loaded resource from cache", startTime, key);
-      }
-      return null;
-    }
-
-    EngineJob<?> current = jobs.get(key, onlyRetrieveFromCache);
-    if (current != null) {
-      current.addCallback(cb, callbackExecutor);
-      if (VERBOSE_IS_LOGGABLE) {
-        logWithTimeAndKey("Added to existing load", startTime, key);
-      }
-      return new LoadStatus(cb, current);
-    }
-
-    EngineJob<R> engineJob =
-        engineJobFactory.build(
-            key,
-            isMemoryCacheable,
-            useUnlimitedSourceExecutorPool,
-            useAnimationPool,
-            onlyRetrieveFromCache);
-
-    DecodeJob<R> decodeJob =
-        decodeJobFactory.build(
-            glideContext,
-            model,
-            key,
-            signature,
-            width,
-            height,
-            resourceClass,
-            transcodeClass,
-            priority,
-            diskCacheStrategy,
-            transformations,
-            isTransformationRequired,
-            isScaleOnlyOrNoTransform,
-            onlyRetrieveFromCache,
-            options,
-            engineJob);
-
-    jobs.put(key, engineJob);
-
-    engineJob.addCallback(cb, callbackExecutor);
-    engineJob.start(decodeJob);
-
-    if (VERBOSE_IS_LOGGABLE) {
-      logWithTimeAndKey("Started new load", startTime, key);
-    }
-    return new LoadStatus(cb, engineJob);
-  }
-
-  private static void logWithTimeAndKey(String log, long startTime, Key key) {
-    Log.v(TAG, log + " in " + LogTime.getElapsedMillis(startTime) + "ms, key: " + key);
-  }
-
-  @Nullable
-  private EngineResource<?> loadFromActiveResources(Key key, boolean isMemoryCacheable) {
-    if (!isMemoryCacheable) {
-      return null;
-    }
-    EngineResource<?> active = activeResources.get(key);
-    if (active != null) {
-      active.acquire();
-    }
-
-    return active;
-  }
-
-  private EngineResource<?> loadFromCache(Key key, boolean isMemoryCacheable) {
-    if (!isMemoryCacheable) {
-      return null;
-    }
-
-    EngineResource<?> cached = getEngineResourceFromCache(key);
-    if (cached != null) {
-      cached.acquire();
-      activeResources.activate(key, cached);
-    }
-    return cached;
-  }
-
-  private EngineResource<?> getEngineResourceFromCache(Key key) {
-    Resource<?> cached = cache.remove(key);
-
-    final EngineResource<?> result;
-    if (cached == null) {
-      result = null;
-    } else if (cached instanceof EngineResource) {
-      // Save an object allocation if we've cached an EngineResource (the typical case).
-      result = (EngineResource<?>) cached;
-    } else {
-      result = new EngineResource<>(
-          cached, /*isMemoryCacheable=*/ true, /*isRecyclable=*/ true, key, /*listener=*/ this);
-    }
-    return result;
-  }
-
-  public void release(Resource<?> resource) {
-    if (resource instanceof EngineResource) {
-      ((EngineResource<?>) resource).release();
-    } else {
-      throw new IllegalArgumentException("Cannot release anything but an EngineResource");
-    }
-  }
-
-  @SuppressWarnings("unchecked")
-  @Override
-  public synchronized void onEngineJobComplete(
-      EngineJob<?> engineJob, Key key, EngineResource<?> resource) {
-    // A null resource indicates that the load failed, usually due to an exception.
-    if (resource != null && resource.isMemoryCacheable()) {
-      activeResources.activate(key, resource);
-    }
-
-    jobs.removeIfCurrent(key, engineJob);
-  }
-
-  @Override
-  public synchronized void onEngineJobCancelled(EngineJob<?> engineJob, Key key) {
-    jobs.removeIfCurrent(key, engineJob);
-  }
-
-  @Override
-  public void onResourceRemoved(@NonNull final Resource<?> resource) {
-    resourceRecycler.recycle(resource);
-  }
-
-  @Override
-  public synchronized void onResourceReleased(Key cacheKey, EngineResource<?> resource) {
-    activeResources.deactivate(cacheKey);
-    if (resource.isMemoryCacheable()) {
-      cache.put(cacheKey, resource);
-    } else {
-      resourceRecycler.recycle(resource);
-    }
-  }
-
-  public void clearDiskCache() {
-    diskCacheProvider.getDiskCache().clear();
-  }
-
-  @VisibleForTesting
-  public void shutdown() {
-    engineJobFactory.shutdown();
-    diskCacheProvider.clearDiskCacheIfCreated();
-    activeResources.shutdown();
-  }
-
-  /**
-   * Allows a request to indicate it no longer is interested in a given load.
-   *
-   * <p>Non-final for mocking.
-   */
-  public class LoadStatus {
-    private final EngineJob<?> engineJob;
-    private final ResourceCallback cb;
-
-    LoadStatus(ResourceCallback cb, EngineJob<?> engineJob) {
-      this.cb = cb;
-      this.engineJob = engineJob;
-    }
-
-    public void cancel() {
-      // Acquire the Engine lock so that a new request can't get access to a particular EngineJob
-      // just after the EngineJob has been cancelled. Without this lock, we'd allow new requests
-      // to find the cancelling EngineJob in our Jobs data structure. With this lock, the EngineJob
-      // is both cancelled and removed from Jobs atomically.
-      synchronized (Engine.this) {
-        engineJob.removeCallback(cb);
-      }
-    }
-  }
-
-  private static class LazyDiskCacheProvider implements DecodeJob.DiskCacheProvider {
-
-    private final DiskCache.Factory factory;
-    private volatile DiskCache diskCache;
-
-    LazyDiskCacheProvider(DiskCache.Factory factory) {
-      this.factory = factory;
-    }
-
-    @VisibleForTesting
-    synchronized void clearDiskCacheIfCreated() {
-      if (diskCache == null) {
-        return;
-      }
-      diskCache.clear();
-    }
-
-    @Override
-    public DiskCache getDiskCache() {
-      if (diskCache == null) {
-        synchronized (this) {
-          if (diskCache == null) {
-            diskCache = factory.build();
-          }
-          if (diskCache == null) {
-            diskCache = new DiskCacheAdapter();
-          }
-        }
-      }
-      return diskCache;
-    }
-  }
-
-  @VisibleForTesting
-  static class DecodeJobFactory {
-    @Synthetic final DecodeJob.DiskCacheProvider diskCacheProvider;
-    @Synthetic final Pools.Pool<DecodeJob<?>> pool =
-        FactoryPools.threadSafe(JOB_POOL_SIZE,
-            new FactoryPools.Factory<DecodeJob<?>>() {
-          @Override
-          public DecodeJob<?> create() {
-            return new DecodeJob<>(diskCacheProvider, pool);
-          }
-        });
-    private int creationOrder;
-
-    DecodeJobFactory(DecodeJob.DiskCacheProvider diskCacheProvider) {
-      this.diskCacheProvider = diskCacheProvider;
-    }
-
-    @SuppressWarnings("unchecked")
-    <R> DecodeJob<R> build(GlideContext glideContext,
-        Object model,
-        EngineKey loadKey,
-        Key signature,
-        int width,
-        int height,
-        Class<?> resourceClass,
-        Class<R> transcodeClass,
-        Priority priority,
-        DiskCacheStrategy diskCacheStrategy,
-        Map<Class<?>, Transformation<?>> transformations,
-        boolean isTransformationRequired,
-        boolean isScaleOnlyOrNoTransform,
-        boolean onlyRetrieveFromCache,
-        Options options,
-        DecodeJob.Callback<R> callback) {
-      DecodeJob<R> result = Preconditions.checkNotNull((DecodeJob<R>) pool.acquire());
-      return result.init(
-          glideContext,
-          model,
-          loadKey,
-          signature,
-          width,
-          height,
-          resourceClass,
-          transcodeClass,
-          priority,
-          diskCacheStrategy,
-          transformations,
-          isTransformationRequired,
-          isScaleOnlyOrNoTransform,
-          onlyRetrieveFromCache,
-          options,
-          callback,
-          creationOrder++);
-    }
-  }
-
-  @VisibleForTesting
-  static class EngineJobFactory {
-    @Synthetic final GlideExecutor diskCacheExecutor;
-    @Synthetic final GlideExecutor sourceExecutor;
-    @Synthetic final GlideExecutor sourceUnlimitedExecutor;
-    @Synthetic final GlideExecutor animationExecutor;
-    @Synthetic final EngineJobListener engineJobListener;
-    @Synthetic final ResourceListener resourceListener;
-    @Synthetic final Pools.Pool<EngineJob<?>> pool =
-        FactoryPools.threadSafe(
-            JOB_POOL_SIZE,
-            new FactoryPools.Factory<EngineJob<?>>() {
-              @Override
-              public EngineJob<?> create() {
-                return new EngineJob<>(
-                    diskCacheExecutor,
-                    sourceExecutor,
-                    sourceUnlimitedExecutor,
-                    animationExecutor,
-                    engineJobListener,
-                    resourceListener,
-                    pool);
-              }
-            });
-
-    EngineJobFactory(
-        GlideExecutor diskCacheExecutor,
-        GlideExecutor sourceExecutor,
-        GlideExecutor sourceUnlimitedExecutor,
-        GlideExecutor animationExecutor,
-        EngineJobListener engineJobListener,
-        ResourceListener resourceListener) {
-      this.diskCacheExecutor = diskCacheExecutor;
-      this.sourceExecutor = sourceExecutor;
-      this.sourceUnlimitedExecutor = sourceUnlimitedExecutor;
-      this.animationExecutor = animationExecutor;
-      this.engineJobListener = engineJobListener;
-      this.resourceListener = resourceListener;
-    }
-
-    @VisibleForTesting
-    void shutdown() {
-      Executors.shutdownAndAwaitTermination(diskCacheExecutor);
-      Executors.shutdownAndAwaitTermination(sourceExecutor);
-      Executors.shutdownAndAwaitTermination(sourceUnlimitedExecutor);
-      Executors.shutdownAndAwaitTermination(animationExecutor);
-    }
-
-    @SuppressWarnings("unchecked")
-    <R> EngineJob<R> build(
-        Key key,
-        boolean isMemoryCacheable,
-        boolean useUnlimitedSourceGeneratorPool,
-        boolean useAnimationPool,
-        boolean onlyRetrieveFromCache) {
-      EngineJob<R> result = Preconditions.checkNotNull((EngineJob<R>) pool.acquire());
-      return result.init(
-          key,
-          isMemoryCacheable,
-          useUnlimitedSourceGeneratorPool,
-          useAnimationPool,
-          onlyRetrieveFromCache);
-    }
-  }
+		MemoryCache.ResourceRemovedListener,
+		EngineResource.ResourceListener {
+	private static final String TAG = "Engine";
+	private static final int JOB_POOL_SIZE = 150;
+	private static final boolean VERBOSE_IS_LOGGABLE = Log.isLoggable(TAG, Log.VERBOSE);
+	private final Jobs jobs;
+	private final EngineKeyFactory keyFactory;
+	private final MemoryCache cache;
+	private final EngineJobFactory engineJobFactory;
+	private final ResourceRecycler resourceRecycler;
+	private final LazyDiskCacheProvider diskCacheProvider;
+	private final DecodeJobFactory decodeJobFactory;
+	private final ActiveResources activeResources;
+
+	public Engine(
+			MemoryCache memoryCache,
+			DiskCache.Factory diskCacheFactory,
+			GlideExecutor diskCacheExecutor,
+			GlideExecutor sourceExecutor,
+			GlideExecutor sourceUnlimitedExecutor,
+			GlideExecutor animationExecutor,
+			boolean isActiveResourceRetentionAllowed) {
+		this(
+				memoryCache,
+				diskCacheFactory,
+				diskCacheExecutor,
+				sourceExecutor,
+				sourceUnlimitedExecutor,
+				animationExecutor,
+				/*jobs=*/ null,
+				/*keyFactory=*/ null,
+				/*activeResources=*/ null,
+				/*engineJobFactory=*/ null,
+				/*decodeJobFactory=*/ null,
+				/*resourceRecycler=*/ null,
+				isActiveResourceRetentionAllowed);
+	}
+
+	@VisibleForTesting
+	Engine(MemoryCache cache,
+		   DiskCache.Factory diskCacheFactory,
+		   GlideExecutor diskCacheExecutor,
+		   GlideExecutor sourceExecutor,
+		   GlideExecutor sourceUnlimitedExecutor,
+		   GlideExecutor animationExecutor,
+		   Jobs jobs,
+		   EngineKeyFactory keyFactory,
+		   ActiveResources activeResources,
+		   EngineJobFactory engineJobFactory,
+		   DecodeJobFactory decodeJobFactory,
+		   ResourceRecycler resourceRecycler,
+		   boolean isActiveResourceRetentionAllowed) {
+		this.cache = cache;
+		this.diskCacheProvider = new LazyDiskCacheProvider(diskCacheFactory);
+
+		if (activeResources == null) {
+			activeResources = new ActiveResources(isActiveResourceRetentionAllowed);
+		}
+		this.activeResources = activeResources;
+		activeResources.setListener(this);
+
+		if (keyFactory == null) {
+			keyFactory = new EngineKeyFactory();
+		}
+		this.keyFactory = keyFactory;
+
+		if (jobs == null) {
+			jobs = new Jobs();
+		}
+		this.jobs = jobs;
+
+		if (engineJobFactory == null) {
+			engineJobFactory =
+					new EngineJobFactory(
+							diskCacheExecutor,
+							sourceExecutor,
+							sourceUnlimitedExecutor,
+							animationExecutor,
+							/*engineJobListener=*/ this,
+							/*resourceListener=*/ this);
+		}
+		this.engineJobFactory = engineJobFactory;
+
+		if (decodeJobFactory == null) {
+			decodeJobFactory = new DecodeJobFactory(diskCacheProvider);
+		}
+		this.decodeJobFactory = decodeJobFactory;
+
+		if (resourceRecycler == null) {
+			resourceRecycler = new ResourceRecycler();
+		}
+		this.resourceRecycler = resourceRecycler;
+
+		cache.setResourceRemovedListener(this);
+	}
+
+	/**
+	 * Starts a load for the given arguments.
+	 *
+	 * <p>Must be called on the main thread.
+	 *
+	 * <p>The flow for any request is as follows:
+	 *
+	 * <ul>
+	 * <li>Check the current set of actively used resources, return the active resource if present,
+	 * and move any newly inactive resources into the memory cache.
+	 * <li>Check the memory cache and provide the cached resource if present.
+	 * <li>Check the current set of in progress loads and add the cb to the in progress load if one
+	 * is present.
+	 * <li>Start a new load.
+	 * </ul>
+	 *
+	 * <p>Active resources are those that have been provided to at least one request and have not yet
+	 * been released. Once all consumers of a resource have released that resource, the resource then
+	 * goes to cache. If the resource is ever returned to a new consumer from cache, it is re-added to
+	 * the active resources. If the resource is evicted from the cache, its resources are recycled and
+	 * re-used if possible and the resource is discarded. There is no strict requirement that
+	 * consumers release their resources so active resources are held weakly.
+	 *
+	 * @param width  The target width in pixels of the desired resource.
+	 * @param height The target height in pixels of the desired resource.
+	 * @param cb     The callback that will be called when the load completes.
+	 */
+	public synchronized <R> LoadStatus load(
+			GlideContext glideContext,
+			Object model,
+			Key signature,
+			int width,
+			int height,
+			Class<?> resourceClass,
+			Class<R> transcodeClass,
+			Priority priority,
+			DiskCacheStrategy diskCacheStrategy,
+			Map<Class<?>, Transformation<?>> transformations,
+			boolean isTransformationRequired,
+			boolean isScaleOnlyOrNoTransform,
+			Options options,
+			boolean isMemoryCacheable,
+			boolean useUnlimitedSourceExecutorPool,
+			boolean useAnimationPool,
+			boolean onlyRetrieveFromCache,
+			ResourceCallback cb,
+			Executor callbackExecutor) {
+		long startTime = VERBOSE_IS_LOGGABLE ? LogTime.getLogTime() : 0;
+//    通过keyFactory工厂来构建一个EngineKey对象，key关联着model，也就是url，它很根据model，
+// view的宽高等等属性来构建一个EngineKey对象，这个对象可以用来指定缓存地址，可以用来从缓存中查找资源等。
+		EngineKey key = keyFactory.buildKey(model, signature, width, height, transformations,
+				resourceClass, transcodeClass, options);
+//从弱引用 获取
+//		根据创建的key对象分别调用loadFromCache和loadFromActiveResources方法来从内存中查
+//		找是否有缓存资源，如果有，则回调cb.onResourceReady来直接设置图片了。
+		EngineResource<?> active = loadFromActiveResources(key, isMemoryCacheable);
+		if (active != null) {
+			cb.onResourceReady(active, DataSource.MEMORY_CACHE);
+			if (VERBOSE_IS_LOGGABLE) {
+				logWithTimeAndKey("Loaded resource from active resources", startTime, key);
+			}
+			return null;
+		}
+//get from LruCache
+		EngineResource<?> cached = loadFromCache(key, isMemoryCacheable);
+		if (cached != null) {
+			cb.onResourceReady(cached, DataSource.MEMORY_CACHE);
+			if (VERBOSE_IS_LOGGABLE) {
+				logWithTimeAndKey("Loaded resource from cache", startTime, key);
+			}
+			return null;
+		}
+//
+//④：分别使用engineJobFactory和decodeJobFactory构建EngineJob和DecodeJob对象，这两个对象是真正的加载资源的两个重要类，
+// EngineJob对象负责开启线程去加载资源，并且加载得资源后转换到主线程并进行回调；DecodeJob是真正的执行者，它就是去网络
+// 加载资源的地方，EngineJob开启线程，
+//		真正执行的是DecodeJob，DecodeJob之后完毕之后叫道EngineJob去分发回调。这就是这两个类的关系。
+		EngineJob<?> current = jobs.get(key, onlyRetrieveFromCache);
+		if (current != null) {
+			current.addCallback(cb, callbackExecutor);
+			if (VERBOSE_IS_LOGGABLE) {
+				logWithTimeAndKey("Added to existing load", startTime, key);
+			}
+			return new LoadStatus(cb, current);
+		}
+//		EngineJob和DecodeJob的构建是基本一致的，我们看看比较复杂的DecodeJob的构建：在build方法中，首先通过pool来创建
+// 一个DecodeJob对象，然后调用DecodeJob对象的init方法进行初始化，在初始化中值得注意的是调用了decodeHelper
+// 对象的init方法。decodeHelper方法是DecodeJob的重要辅助类，后面我们会详细的接触它。
+		EngineJob<R> engineJob =
+				engineJobFactory.build(
+						key,
+						isMemoryCacheable,
+						useUnlimitedSourceExecutorPool,
+						useAnimationPool,
+						onlyRetrieveFromCache);
+
+		DecodeJob<R> decodeJob =
+				decodeJobFactory.build(
+						glideContext,
+						model,
+						key,
+						signature,
+						width,
+						height,
+						resourceClass,
+						transcodeClass,
+						priority,
+						diskCacheStrategy,
+						transformations,
+						isTransformationRequired,
+						isScaleOnlyOrNoTransform,
+						onlyRetrieveFromCache,
+						options,
+						engineJob);
+
+		jobs.put(key, engineJob);
+//上面也提到回调，这里先cb添加到engineJob.addCallback();中，然后调用EngineJob的start方法来开启线程。
+		engineJob.addCallback(cb, callbackExecutor);
+		engineJob.start(decodeJob);
+
+		if (VERBOSE_IS_LOGGABLE) {
+			logWithTimeAndKey("Started new load", startTime, key);
+		}
+		return new LoadStatus(cb, engineJob);
+	}
+
+	private static void logWithTimeAndKey(String log, long startTime, Key key) {
+		Log.v(TAG, log + " in " + LogTime.getElapsedMillis(startTime) + "ms, key: " + key);
+	}
+
+	@Nullable
+	private EngineResource<?> loadFromActiveResources(Key key, boolean isMemoryCacheable) {
+		if (!isMemoryCacheable) {
+			return null;
+		}
+		EngineResource<?> active = activeResources.get(key);
+		if (active != null) {
+			active.acquire();
+		}
+
+		return active;
+	}
+
+	private EngineResource<?> loadFromCache(Key key, boolean isMemoryCacheable) {
+		if (!isMemoryCacheable) {
+			return null;
+		}
+
+		EngineResource<?> cached = getEngineResourceFromCache(key);
+		if (cached != null) {
+			cached.acquire();
+			activeResources.activate(key, cached);
+		}
+		return cached;
+	}
+
+	private EngineResource<?> getEngineResourceFromCache(Key key) {
+		Resource<?> cached = cache.remove(key);
+
+		final EngineResource<?> result;
+		if (cached == null) {
+			result = null;
+		} else if (cached instanceof EngineResource) {
+			// Save an object allocation if we've cached an EngineResource (the typical case).
+			result = (EngineResource<?>) cached;
+		} else {
+			result = new EngineResource<>(
+					cached, /*isMemoryCacheable=*/ true, /*isRecyclable=*/ true, key, /*listener=*/ this);
+		}
+		return result;
+	}
+
+	public void release(Resource<?> resource) {
+		if (resource instanceof EngineResource) {
+			((EngineResource<?>) resource).release();
+		} else {
+			throw new IllegalArgumentException("Cannot release anything but an EngineResource");
+		}
+	}
+
+	@SuppressWarnings("unchecked")
+	@Override
+	public synchronized void onEngineJobComplete(
+			EngineJob<?> engineJob, Key key, EngineResource<?> resource) {
+		// A null resource indicates that the load failed, usually due to an exception.
+		if (resource != null && resource.isMemoryCacheable()) {
+			activeResources.activate(key, resource);
+		}
+
+		jobs.removeIfCurrent(key, engineJob);
+	}
+
+	@Override
+	public synchronized void onEngineJobCancelled(EngineJob<?> engineJob, Key key) {
+		jobs.removeIfCurrent(key, engineJob);
+	}
+
+	@Override
+	public void onResourceRemoved(@NonNull final Resource<?> resource) {
+		resourceRecycler.recycle(resource);
+	}
+
+	@Override
+	public synchronized void onResourceReleased(Key cacheKey, EngineResource<?> resource) {
+		activeResources.deactivate(cacheKey);
+		if (resource.isMemoryCacheable()) {
+			cache.put(cacheKey, resource);
+		} else {
+			resourceRecycler.recycle(resource);
+		}
+	}
+
+	public void clearDiskCache() {
+		diskCacheProvider.getDiskCache().clear();
+	}
+
+	@VisibleForTesting
+	public void shutdown() {
+		engineJobFactory.shutdown();
+		diskCacheProvider.clearDiskCacheIfCreated();
+		activeResources.shutdown();
+	}
+
+	/**
+	 * Allows a request to indicate it no longer is interested in a given load.
+	 *
+	 * <p>Non-final for mocking.
+	 */
+	public class LoadStatus {
+		private final EngineJob<?> engineJob;
+		private final ResourceCallback cb;
+
+		LoadStatus(ResourceCallback cb, EngineJob<?> engineJob) {
+			this.cb = cb;
+			this.engineJob = engineJob;
+		}
+
+		public void cancel() {
+			// Acquire the Engine lock so that a new request can't get access to a particular EngineJob
+			// just after the EngineJob has been cancelled. Without this lock, we'd allow new requests
+			// to find the cancelling EngineJob in our Jobs data structure. With this lock, the EngineJob
+			// is both cancelled and removed from Jobs atomically.
+			synchronized (Engine.this) {
+				engineJob.removeCallback(cb);
+			}
+		}
+	}
+
+	private static class LazyDiskCacheProvider implements DecodeJob.DiskCacheProvider {
+
+		private final DiskCache.Factory factory;
+		private volatile DiskCache diskCache;
+
+		LazyDiskCacheProvider(DiskCache.Factory factory) {
+			this.factory = factory;
+		}
+
+		@VisibleForTesting
+		synchronized void clearDiskCacheIfCreated() {
+			if (diskCache == null) {
+				return;
+			}
+			diskCache.clear();
+		}
+
+		@Override
+		public DiskCache getDiskCache() {
+			if (diskCache == null) {
+				synchronized (this) {
+					if (diskCache == null) {
+						diskCache = factory.build();
+					}
+					if (diskCache == null) {
+						diskCache = new DiskCacheAdapter();
+					}
+				}
+			}
+			return diskCache;
+		}
+	}
+
+	@VisibleForTesting
+	static class DecodeJobFactory {
+		@Synthetic
+		final DecodeJob.DiskCacheProvider diskCacheProvider;
+		@Synthetic
+		final Pools.Pool<DecodeJob<?>> pool =
+				FactoryPools.threadSafe(JOB_POOL_SIZE,
+						new FactoryPools.Factory<DecodeJob<?>>() {
+							@Override
+							public DecodeJob<?> create() {
+								return new DecodeJob<>(diskCacheProvider, pool);
+							}
+						});
+		private int creationOrder;
+
+		DecodeJobFactory(DecodeJob.DiskCacheProvider diskCacheProvider) {
+			this.diskCacheProvider = diskCacheProvider;
+		}
+
+		@SuppressWarnings("unchecked")
+		<R> DecodeJob<R> build(GlideContext glideContext,
+							   Object model,
+							   EngineKey loadKey,
+							   Key signature,
+							   int width,
+							   int height,
+							   Class<?> resourceClass,
+							   Class<R> transcodeClass,
+							   Priority priority,
+							   DiskCacheStrategy diskCacheStrategy,
+							   Map<Class<?>, Transformation<?>> transformations,
+							   boolean isTransformationRequired,
+							   boolean isScaleOnlyOrNoTransform,
+							   boolean onlyRetrieveFromCache,
+							   Options options,
+							   DecodeJob.Callback<R> callback) {
+			DecodeJob<R> result = Preconditions.checkNotNull((DecodeJob<R>) pool.acquire());
+			return result.init(
+					glideContext,
+					model,
+					loadKey,
+					signature,
+					width,
+					height,
+					resourceClass,
+					transcodeClass,
+					priority,
+					diskCacheStrategy,
+					transformations,
+					isTransformationRequired,
+					isScaleOnlyOrNoTransform,
+					onlyRetrieveFromCache,
+					options,
+					callback,
+					creationOrder++);
+		}
+	}
+
+	@VisibleForTesting
+	static class EngineJobFactory {
+		@Synthetic
+		final GlideExecutor diskCacheExecutor;
+		@Synthetic
+		final GlideExecutor sourceExecutor;
+		@Synthetic
+		final GlideExecutor sourceUnlimitedExecutor;
+		@Synthetic
+		final GlideExecutor animationExecutor;
+		@Synthetic
+		final EngineJobListener engineJobListener;
+		@Synthetic
+		final ResourceListener resourceListener;
+		@Synthetic
+		final Pools.Pool<EngineJob<?>> pool =
+				FactoryPools.threadSafe(
+						JOB_POOL_SIZE,
+						new FactoryPools.Factory<EngineJob<?>>() {
+							@Override
+							public EngineJob<?> create() {
+								return new EngineJob<>(
+										diskCacheExecutor,
+										sourceExecutor,
+										sourceUnlimitedExecutor,
+										animationExecutor,
+										engineJobListener,
+										resourceListener,
+										pool);
+							}
+						});
+
+		EngineJobFactory(
+				GlideExecutor diskCacheExecutor,
+				GlideExecutor sourceExecutor,
+				GlideExecutor sourceUnlimitedExecutor,
+				GlideExecutor animationExecutor,
+				EngineJobListener engineJobListener,
+				ResourceListener resourceListener) {
+			this.diskCacheExecutor = diskCacheExecutor;
+			this.sourceExecutor = sourceExecutor;
+			this.sourceUnlimitedExecutor = sourceUnlimitedExecutor;
+			this.animationExecutor = animationExecutor;
+			this.engineJobListener = engineJobListener;
+			this.resourceListener = resourceListener;
+		}
+
+		@VisibleForTesting
+		void shutdown() {
+			Executors.shutdownAndAwaitTermination(diskCacheExecutor);
+			Executors.shutdownAndAwaitTermination(sourceExecutor);
+			Executors.shutdownAndAwaitTermination(sourceUnlimitedExecutor);
+			Executors.shutdownAndAwaitTermination(animationExecutor);
+		}
+
+		@SuppressWarnings("unchecked")
+		<R> EngineJob<R> build(
+				Key key,
+				boolean isMemoryCacheable,
+				boolean useUnlimitedSourceGeneratorPool,
+				boolean useAnimationPool,
+				boolean onlyRetrieveFromCache) {
+			EngineJob<R> result = Preconditions.checkNotNull((EngineJob<R>) pool.acquire());
+			return result.init(
+					key,
+					isMemoryCacheable,
+					useUnlimitedSourceGeneratorPool,
+					useAnimationPool,
+					onlyRetrieveFromCache);
+		}
+	}
 }
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/SourceGenerator.java b/library/src/main/java/com/bumptech/glide/load/engine/SourceGenerator.java
index 5a57b971b..6640e9fa7 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/SourceGenerator.java
+++ b/library/src/main/java/com/bumptech/glide/load/engine/SourceGenerator.java
@@ -40,6 +40,7 @@
 
   @Override
   public boolean startNext() {
+    //到这里就太关键了，因为很多人都死在这一步上
     if (dataToCache != null) {
       Object data = dataToCache;
       dataToCache = null;
@@ -103,6 +104,7 @@ public void cancel() {
   @Override
   public void onDataReady(Object data) {
     DiskCacheStrategy diskCacheStrategy = helper.getDiskCacheStrategy();
+    // XXX: 硬盘缓存相关代码
     if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {
       dataToCache = data;
       // We might be being called back on someone else's thread. Before doing anything, we should
diff --git a/library/src/main/java/com/bumptech/glide/load/model/stream/HttpUriLoader.java b/library/src/main/java/com/bumptech/glide/load/model/stream/HttpUriLoader.java
index 7ff6639b2..788b42939 100644
--- a/library/src/main/java/com/bumptech/glide/load/model/stream/HttpUriLoader.java
+++ b/library/src/main/java/com/bumptech/glide/load/model/stream/HttpUriLoader.java
@@ -31,6 +31,7 @@ public HttpUriLoader(ModelLoader<GlideUrl, InputStream> urlLoader) {
   @Override
   public LoadData<InputStream> buildLoadData(@NonNull Uri model, int width, int height,
       @NonNull Options options) {
+//    它会调用urlLoader.buildLoadData方法，这个urlLoader就是HttpGlideUrlLoader对象，再来看看：
     return urlLoader.buildLoadData(new GlideUrl(model.toString()), width, height, options);
   }
 
diff --git a/settings.gradle b/settings.gradle
index 360b59b47..7899234d2 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -26,5 +26,5 @@ include ':integration:okhttp3'
 include ':integration:gifencoder'
 include ':integration:recyclerview'
 include ':testutil'
-
-rootProject.name = 'glide-parent'
+// 如果制定了 glide-parent的话，外面的文件夹 名称应该改为glide-parent
+//rootProject.name = 'glide-parent'
