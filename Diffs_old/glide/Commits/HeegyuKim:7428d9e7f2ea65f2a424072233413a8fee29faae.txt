diff --git a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java
index cd0aa5248..5403db3bc 100644
--- a/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java
+++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java
@@ -41,6 +41,12 @@
   // Public API.
   @SuppressWarnings("WeakerAccess")
   public static final int LOOP_INTRINSIC = 0;
+
+  /**
+   *
+   */
+  public static final int SOURCE_FRAME = 0;
+
   private static final int GRAVITY = Gravity.FILL;
 
   private final GifState state;
@@ -71,6 +77,11 @@
    * The number of times to loop through the GIF animation.
    */
   private int maxLoopCount = LOOP_FOREVER;
+  /**
+   * GIF Animation drawing frame count per second
+   */
+  private int framePerSecond = SOURCE_FRAME;
+  private long lastDrawnTime = 0;
 
   private boolean applyGravity;
   private Paint paint;
@@ -198,6 +209,16 @@ private void resetLoopCount() {
     loopCount = 0;
   }
 
+  public int getFramePerSecond() {
+    return framePerSecond;
+  }
+
+  public void setFramePerSecond(int framePerSecond) {
+    Preconditions.checkArgument(framePerSecond >= 0,
+        "framePerSecond must be larger than 0 or SOURCE_FRAME");
+    this.framePerSecond = framePerSecond;
+  }
+
   /**
    * Starts the animation from the first frame. Can only be called while animation is not running.
    */
@@ -295,6 +316,8 @@ public void draw(@NonNull Canvas canvas) {
 
     Bitmap currentFrame = state.frameLoader.getCurrentFrame();
     canvas.drawBitmap(currentFrame, null, getDestRect(), getPaint());
+
+    lastDrawnTime = System.currentTimeMillis();
   }
 
   @Override
@@ -344,7 +367,8 @@ public void onFrameReady() {
       return;
     }
 
-    invalidateSelf();
+    if(checkFramePerSecond())
+      invalidateSelf();
 
     if (getFrameIndex() == getFrameCount() - 1) {
       loopCount++;
@@ -355,6 +379,18 @@ public void onFrameReady() {
     }
   }
 
+  private boolean checkFramePerSecond() {
+    if(framePerSecond != SOURCE_FRAME) {
+      long current = System.currentTimeMillis();
+      long delta = current - lastDrawnTime;
+      if(delta < 1000 / framePerSecond) {
+        // skip this drawing.
+        return false;
+      }
+    }
+    return true;
+  }
+
   @Override
   public ConstantState getConstantState() {
     return state;
diff --git a/myapplication/.gitignore b/myapplication/.gitignore
new file mode 100644
index 000000000..796b96d1c
--- /dev/null
+++ b/myapplication/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/myapplication/build.gradle b/myapplication/build.gradle
new file mode 100644
index 000000000..c737a0c53
--- /dev/null
+++ b/myapplication/build.gradle
@@ -0,0 +1,41 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 26
+
+
+
+    defaultConfig {
+        applicationId "kr.bitbyte.myapplication"
+        minSdkVersion 16
+        targetSdkVersion 26
+        versionCode 1
+        versionName "1.0"
+
+        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
+
+    }
+
+    buildTypes {
+        release {
+            postprocessing {
+                removeUnusedCode false
+                removeUnusedResources false
+                obfuscate false
+                optimizeCode false
+                proguardFile 'proguard-rules.pro'
+            }
+        }
+    }
+
+}
+
+dependencies {
+    implementation fileTree(include: ['*.jar'], dir: 'libs')
+    implementation 'com.android.support:appcompat-v7:26.1.0'
+    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
+    testImplementation 'junit:junit:4.12'
+    androidTestImplementation 'com.android.support.test:runner:1.0.2'
+    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
+    implementation project(':library')
+}
diff --git a/myapplication/proguard-rules.pro b/myapplication/proguard-rules.pro
new file mode 100644
index 000000000..f1b424510
--- /dev/null
+++ b/myapplication/proguard-rules.pro
@@ -0,0 +1,21 @@
+# Add project specific ProGuard rules here.
+# You can control the set of applied configuration files using the
+# proguardFiles setting in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
diff --git a/myapplication/src/androidTest/java/kr/bitbyte/myapplication/ExampleInstrumentedTest.java b/myapplication/src/androidTest/java/kr/bitbyte/myapplication/ExampleInstrumentedTest.java
new file mode 100644
index 000000000..e2895af33
--- /dev/null
+++ b/myapplication/src/androidTest/java/kr/bitbyte/myapplication/ExampleInstrumentedTest.java
@@ -0,0 +1,26 @@
+package kr.bitbyte.myapplication;
+
+import android.content.Context;
+import android.support.test.InstrumentationRegistry;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.junit.Assert.*;
+
+/**
+ * Instrumented test, which will execute on an Android device.
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+@RunWith(AndroidJUnit4.class)
+public class ExampleInstrumentedTest {
+  @Test
+  public void useAppContext() throws Exception {
+    // Context of the app under test.
+    Context appContext = InstrumentationRegistry.getTargetContext();
+
+    assertEquals("kr.bitbyte.myapplication", appContext.getPackageName());
+  }
+}
diff --git a/myapplication/src/main/AndroidManifest.xml b/myapplication/src/main/AndroidManifest.xml
new file mode 100644
index 000000000..97bdcc66d
--- /dev/null
+++ b/myapplication/src/main/AndroidManifest.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+  package="kr.bitbyte.myapplication">
+
+  <uses-permission android:name="android.permission.INTERNET" />
+  <application
+    android:allowBackup="true"
+    android:icon="@mipmap/ic_launcher"
+    android:label="@string/app_name"
+    android:roundIcon="@mipmap/ic_launcher_round"
+    android:supportsRtl="true"
+    android:theme="@style/AppTheme">
+    <activity android:name=".MainActivity">
+      <intent-filter>
+        <action android:name="android.intent.action.MAIN"/>
+
+        <category android:name="android.intent.category.LAUNCHER"/>
+      </intent-filter>
+    </activity>
+  </application>
+
+</manifest>
\ No newline at end of file
diff --git a/myapplication/src/main/java/kr/bitbyte/myapplication/MainActivity.java b/myapplication/src/main/java/kr/bitbyte/myapplication/MainActivity.java
new file mode 100644
index 000000000..263df16f4
--- /dev/null
+++ b/myapplication/src/main/java/kr/bitbyte/myapplication/MainActivity.java
@@ -0,0 +1,61 @@
+package kr.bitbyte.myapplication;
+
+import android.app.Activity;
+import android.support.annotation.Nullable;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.widget.ImageView;
+import com.bumptech.glide.Glide;
+import com.bumptech.glide.RequestManager;
+import com.bumptech.glide.load.DataSource;
+import com.bumptech.glide.load.engine.GlideException;
+import com.bumptech.glide.load.resource.gif.GifDrawable;
+import com.bumptech.glide.request.RequestListener;
+import com.bumptech.glide.request.target.Target;
+
+public class MainActivity
+    extends Activity
+{
+  class GifListener implements RequestListener<GifDrawable> {
+
+    int fps;
+
+    public GifListener(int fps) {
+      this.fps = fps;
+    }
+
+    @Override
+    public boolean onLoadFailed(@Nullable GlideException e, Object model,
+        Target<GifDrawable> target,
+        boolean isFirstResource) {
+      return false;
+    }
+
+    @Override
+    public boolean onResourceReady(GifDrawable resource, Object model, Target<GifDrawable> target,
+        DataSource dataSource, boolean isFirstResource) {
+      resource.setFramePerSecond(fps);
+      return false;
+    }
+  }
+
+  @Override
+  protected void onCreate(Bundle savedInstanceState) {
+    super.onCreate(savedInstanceState);
+    setContentView(R.layout.activity_main);
+
+
+//    String url = "https://media1.giphy.com/media/gGGYRTQOaNauY/giphy.gif";
+    String url = "https://media1.tenor.com/images/7cf033d5b2ee8939ea6c4a47e9b571d4/tenor.gif";
+    ImageView iv1 = findViewById(R.id.iv_1);
+    ImageView iv2 = findViewById(R.id.iv_2);
+
+    RequestManager glide = Glide.with(this);
+    glide.asGif().load(url).listener(
+        new GifListener(GifDrawable.SOURCE_FRAME)
+    ).into(iv1);
+    glide.asGif().load(url).listener(
+        new GifListener(5)
+    ).into(iv2);
+  }
+}
diff --git a/myapplication/src/main/res/drawable-v24/ic_launcher_foreground.xml b/myapplication/src/main/res/drawable-v24/ic_launcher_foreground.xml
new file mode 100644
index 000000000..18b8ab2cb
--- /dev/null
+++ b/myapplication/src/main/res/drawable-v24/ic_launcher_foreground.xml
@@ -0,0 +1,34 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:aapt="http://schemas.android.com/aapt"
+  android:height="108dp"
+  android:viewportHeight="108"
+  android:viewportWidth="108"
+  android:width="108dp">
+  <path
+    android:fillType="evenOdd"
+    android:pathData="M32,64C32,64 38.39,52.99 44.13,50.95C51.37,48.37 70.14,49.57 70.14,49.57L108.26,87.69L108,109.01L75.97,107.97L32,64Z"
+    android:strokeColor="#00000000"
+    android:strokeWidth="1">
+    <aapt:attr name="android:fillColor">
+      <gradient
+        android:endX="78.5885"
+        android:endY="90.9159"
+        android:startX="48.7653"
+        android:startY="61.0927"
+        android:type="linear">
+        <item
+          android:color="#44000000"
+          android:offset="0.0"/>
+        <item
+          android:color="#00000000"
+          android:offset="1.0"/>
+      </gradient>
+    </aapt:attr>
+  </path>
+  <path
+    android:fillColor="#FFFFFF"
+    android:fillType="nonZero"
+    android:pathData="M66.94,46.02L66.94,46.02C72.44,50.07 76,56.61 76,64L32,64C32,56.61 35.56,50.11 40.98,46.06L36.18,41.19C35.45,40.45 35.45,39.3 36.18,38.56C36.91,37.81 38.05,37.81 38.78,38.56L44.25,44.05C47.18,42.57 50.48,41.71 54,41.71C57.48,41.71 60.78,42.57 63.68,44.05L69.11,38.56C69.84,37.81 70.98,37.81 71.71,38.56C72.44,39.3 72.44,40.45 71.71,41.19L66.94,46.02ZM62.94,56.92C64.08,56.92 65,56.01 65,54.88C65,53.76 64.08,52.85 62.94,52.85C61.8,52.85 60.88,53.76 60.88,54.88C60.88,56.01 61.8,56.92 62.94,56.92ZM45.06,56.92C46.2,56.92 47.13,56.01 47.13,54.88C47.13,53.76 46.2,52.85 45.06,52.85C43.92,52.85 43,53.76 43,54.88C43,56.01 43.92,56.92 45.06,56.92Z"
+    android:strokeColor="#00000000"
+    android:strokeWidth="1"/>
+</vector>
diff --git a/myapplication/src/main/res/drawable/ic_launcher_background.xml b/myapplication/src/main/res/drawable/ic_launcher_background.xml
new file mode 100644
index 000000000..eba4b1fff
--- /dev/null
+++ b/myapplication/src/main/res/drawable/ic_launcher_background.xml
@@ -0,0 +1,171 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector
+  xmlns:android="http://schemas.android.com/apk/res/android"
+  android:height="108dp"
+  android:viewportHeight="108"
+  android:viewportWidth="108"
+  android:width="108dp">
+  <path
+    android:fillColor="#26A69A"
+    android:pathData="M0,0h108v108h-108z"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M9,0L9,108"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M19,0L19,108"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M29,0L29,108"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M39,0L39,108"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M49,0L49,108"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M59,0L59,108"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M69,0L69,108"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M79,0L79,108"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M89,0L89,108"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M99,0L99,108"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M0,9L108,9"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M0,19L108,19"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M0,29L108,29"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M0,39L108,39"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M0,49L108,49"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M0,59L108,59"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M0,69L108,69"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M0,79L108,79"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M0,89L108,89"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M0,99L108,99"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M19,29L89,29"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M19,39L89,39"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M19,49L89,49"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M19,59L89,59"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M19,69L89,69"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M19,79L89,79"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M29,19L29,89"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M39,19L39,89"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M49,19L49,89"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M59,19L59,89"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M69,19L69,89"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+  <path
+    android:fillColor="#00000000"
+    android:pathData="M79,19L79,89"
+    android:strokeColor="#33FFFFFF"
+    android:strokeWidth="0.8"/>
+</vector>
diff --git a/myapplication/src/main/res/layout/activity_main.xml b/myapplication/src/main/res/layout/activity_main.xml
new file mode 100644
index 000000000..4aad550c8
--- /dev/null
+++ b/myapplication/src/main/res/layout/activity_main.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+  xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto"
+  xmlns:tools="http://schemas.android.com/tools"
+  android:layout_width="match_parent"
+  android:layout_height="match_parent"
+  android:orientation="vertical"
+  tools:context="kr.bitbyte.myapplication.MainActivity">
+
+
+  <ImageView
+    android:id="@+id/iv_1"
+    android:layout_width="match_parent"
+    android:layout_height="0dp"
+    android:layout_weight="1"
+    />
+  <ImageView
+    android:id="@+id/iv_2"
+    android:layout_width="match_parent"
+    android:layout_height="0dp"
+    android:layout_weight="1"
+    />
+
+</LinearLayout>
diff --git a/myapplication/src/main/res/mipmap-anydpi-v26/ic_launcher.xml b/myapplication/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
new file mode 100644
index 000000000..6d5e5d094
--- /dev/null
+++ b/myapplication/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+  <background android:drawable="@drawable/ic_launcher_background"/>
+  <foreground android:drawable="@drawable/ic_launcher_foreground"/>
+</adaptive-icon>
\ No newline at end of file
diff --git a/myapplication/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml b/myapplication/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
new file mode 100644
index 000000000..6d5e5d094
--- /dev/null
+++ b/myapplication/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+  <background android:drawable="@drawable/ic_launcher_background"/>
+  <foreground android:drawable="@drawable/ic_launcher_foreground"/>
+</adaptive-icon>
\ No newline at end of file
diff --git a/myapplication/src/main/res/mipmap-hdpi/ic_launcher.png b/myapplication/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 000000000..a2f590828
Binary files /dev/null and b/myapplication/src/main/res/mipmap-hdpi/ic_launcher.png differ
diff --git a/myapplication/src/main/res/mipmap-hdpi/ic_launcher_round.png b/myapplication/src/main/res/mipmap-hdpi/ic_launcher_round.png
new file mode 100644
index 000000000..1b5239980
Binary files /dev/null and b/myapplication/src/main/res/mipmap-hdpi/ic_launcher_round.png differ
diff --git a/myapplication/src/main/res/mipmap-mdpi/ic_launcher.png b/myapplication/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 000000000..ff10afd6e
Binary files /dev/null and b/myapplication/src/main/res/mipmap-mdpi/ic_launcher.png differ
diff --git a/myapplication/src/main/res/mipmap-mdpi/ic_launcher_round.png b/myapplication/src/main/res/mipmap-mdpi/ic_launcher_round.png
new file mode 100644
index 000000000..115a4c768
Binary files /dev/null and b/myapplication/src/main/res/mipmap-mdpi/ic_launcher_round.png differ
diff --git a/myapplication/src/main/res/mipmap-xhdpi/ic_launcher.png b/myapplication/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 000000000..dcd3cd808
Binary files /dev/null and b/myapplication/src/main/res/mipmap-xhdpi/ic_launcher.png differ
diff --git a/myapplication/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/myapplication/src/main/res/mipmap-xhdpi/ic_launcher_round.png
new file mode 100644
index 000000000..459ca609d
Binary files /dev/null and b/myapplication/src/main/res/mipmap-xhdpi/ic_launcher_round.png differ
diff --git a/myapplication/src/main/res/mipmap-xxhdpi/ic_launcher.png b/myapplication/src/main/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100644
index 000000000..8ca12fe02
Binary files /dev/null and b/myapplication/src/main/res/mipmap-xxhdpi/ic_launcher.png differ
diff --git a/myapplication/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/myapplication/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
new file mode 100644
index 000000000..8e19b410a
Binary files /dev/null and b/myapplication/src/main/res/mipmap-xxhdpi/ic_launcher_round.png differ
diff --git a/myapplication/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/myapplication/src/main/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100644
index 000000000..b824ebdd4
Binary files /dev/null and b/myapplication/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ
diff --git a/myapplication/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/myapplication/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
new file mode 100644
index 000000000..4c19a13c2
Binary files /dev/null and b/myapplication/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png differ
diff --git a/myapplication/src/main/res/values/colors.xml b/myapplication/src/main/res/values/colors.xml
new file mode 100644
index 000000000..5a077b3a7
--- /dev/null
+++ b/myapplication/src/main/res/values/colors.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <color name="colorPrimary">#3F51B5</color>
+  <color name="colorPrimaryDark">#303F9F</color>
+  <color name="colorAccent">#FF4081</color>
+</resources>
diff --git a/myapplication/src/main/res/values/strings.xml b/myapplication/src/main/res/values/strings.xml
new file mode 100644
index 000000000..5efcebe98
--- /dev/null
+++ b/myapplication/src/main/res/values/strings.xml
@@ -0,0 +1,3 @@
+<resources>
+  <string name="app_name">My Application</string>
+</resources>
diff --git a/myapplication/src/main/res/values/styles.xml b/myapplication/src/main/res/values/styles.xml
new file mode 100644
index 000000000..705be2776
--- /dev/null
+++ b/myapplication/src/main/res/values/styles.xml
@@ -0,0 +1,11 @@
+<resources>
+
+  <!-- Base application theme. -->
+  <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+    <!-- Customize your theme here. -->
+    <item name="colorPrimary">@color/colorPrimary</item>
+    <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+    <item name="colorAccent">@color/colorAccent</item>
+  </style>
+
+</resources>
diff --git a/myapplication/src/test/java/kr/bitbyte/myapplication/ExampleUnitTest.java b/myapplication/src/test/java/kr/bitbyte/myapplication/ExampleUnitTest.java
new file mode 100644
index 000000000..4cc9ffc64
--- /dev/null
+++ b/myapplication/src/test/java/kr/bitbyte/myapplication/ExampleUnitTest.java
@@ -0,0 +1,17 @@
+package kr.bitbyte.myapplication;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+public class ExampleUnitTest {
+  @Test
+  public void addition_isCorrect() throws Exception {
+    assertEquals(4, 2 + 2);
+  }
+}
\ No newline at end of file
diff --git a/settings.gradle b/settings.gradle
index 360b59b47..849b6153b 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -2,7 +2,7 @@ exec {
     commandLine "git", "submodule", "update", "--init", "--recursive"
     ignoreExitValue true
 }
-include ':library'
+include ':library', ':myapplication'
 include ':library:pmd'
 include ':library:findbugs'
 include ':library:test'
