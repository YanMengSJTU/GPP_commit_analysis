diff --git a/README.md b/README.md
index 3ab88b264..f4bb5ed31 100644
--- a/README.md
+++ b/README.md
@@ -31,8 +31,8 @@ repositories {
 }
 
 dependencies {
-  implementation 'com.github.bumptech.glide:glide:4.8.0'
-  annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
+  implementation 'com.github.bumptech.glide:glide:4.9.0'
+  annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
 }
 ```
 
@@ -42,12 +42,12 @@ Or Maven:
 <dependency>
   <groupId>com.github.bumptech.glide</groupId>
   <artifactId>glide</artifactId>
-  <version>4.8.0</version>
+  <version>4.9.0</version>
 </dependency>
 <dependency>
   <groupId>com.github.bumptech.glide</groupId>
   <artifactId>compiler</artifactId>
-  <version>4.8.0</version>
+  <version>4.9.0</version>
   <optional>true</optional>
 </dependency>
 ```
@@ -76,7 +76,7 @@ Check out the [documentation][20] for pages on a variety of topics, and see the
 
 For Glide v3, see the [wiki][2].
 
-Simple use cases with Glide's [generated API][21] will look something like this:
+Simple use cases will look something like this:
 
 ```java
 // For a simple view:
@@ -84,7 +84,7 @@ Simple use cases with Glide's [generated API][21] will look something like this:
   ...
   ImageView imageView = (ImageView) findViewById(R.id.my_image_view);
 
-  GlideApp.with(this).load("http://goo.gl/gEgYUd").into(imageView);
+  Glide.with(this).load("http://goo.gl/gEgYUd").into(imageView);
 }
 
 // For a simple image list:
@@ -98,7 +98,7 @@ Simple use cases with Glide's [generated API][21] will look something like this:
 
   String url = myUrls.get(position);
 
-  GlideApp
+  Glide
     .with(myFragment)
     .load(url)
     .centerCrop()
@@ -111,7 +111,7 @@ Simple use cases with Glide's [generated API][21] will look something like this:
 
 Status
 ------
-Version 4 is now released and stable. Updates are currently released at least monthly with new features and bug fixes.
+Version 4 is now released and stable. Updates are released periodically with new features and bug fixes.
 
 Comments/bugs/questions/pull requests are always welcome! Please read [CONTRIBUTING.md][5] on how to report issues.
 
@@ -133,7 +133,7 @@ Build
 Building Glide with gradle is fairly straight forward:
 
 ```shell
-git clone https://github.com/bumptech/glide.git 
+git clone https://github.com/bumptech/glide.git
 cd glide
 ./gradlew jar
 ```
@@ -216,7 +216,6 @@ This is not an official Google product.
 [18]: https://github.com/bumptech/glide/issues?q=is%3Aissue+CircleImageView+OR+CircularImageView+OR+RoundedImageView
 [19]: https://github.com/wasabeef/glide-transformations
 [20]: https://bumptech.github.io/glide/
-[21]: https://bumptech.github.io/glide/doc/generatedapi.html
 [22]: https://muyangmin.github.io/glide-docs-cn/
 [23]: http://bumptech.github.io/glide/int/okhttp3.html
 [24]: http://bumptech.github.io/glide/int/volley.html
diff --git a/gradle.properties b/gradle.properties
index 58d6319a6..61bbde5fe 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,9 +1,9 @@
 org.gradle.daemon=true
 org.gradle.configureondemand=false
 
-VERSION_NAME=4.9.0-SNAPSHOT
+VERSION_NAME=4.10.0-SNAPSHOT
 VERSION_MAJOR=4
-VERSION_MINOR=9
+VERSION_MINOR=10
 VERSION_PATCH=0
 GROUP=com.github.bumptech.glide
 
diff --git a/library/findbugs-exclude.xml b/library/findbugs-exclude.xml
index f27b2c382..dee0fdbe5 100644
--- a/library/findbugs-exclude.xml
+++ b/library/findbugs-exclude.xml
@@ -54,4 +54,10 @@
       <Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS" />
     </Match>
 
+    <!-- Inconsistent synchronization is due to synchronizing on Engine/listener to avoid deadlock only. -->
+    <Match>
+      <Class name="com.bumptech.glide.load.engine.EngineResource" />
+      <Bug pattern="IS2_INCONSISTENT_SYNC" />
+    </Match>
+
 </FindBugsFilter>
diff --git a/library/src/main/java/com/bumptech/glide/load/engine/EngineResource.java b/library/src/main/java/com/bumptech/glide/load/engine/EngineResource.java
index 5a4cd298b..2ff397bdc 100644
--- a/library/src/main/java/com/bumptech/glide/load/engine/EngineResource.java
+++ b/library/src/main/java/com/bumptech/glide/load/engine/EngineResource.java
@@ -13,11 +13,12 @@
 class EngineResource<Z> implements Resource<Z> {
   private final boolean isCacheable;
   private final boolean isRecyclable;
+  private final Resource<Z> resource;
+
   private ResourceListener listener;
   private Key key;
   private int acquired;
   private boolean isRecycled;
-  private final Resource<Z> resource;
 
   interface ResourceListener {
     void onResourceReleased(Key key, EngineResource<?> resource);
@@ -97,12 +98,21 @@ synchronized void acquire() {
    * done with the resource. Generally external users should never call this method, the framework
    * will take care of this for you.
    */
-  synchronized void release() {
-    if (acquired <= 0) {
-      throw new IllegalStateException("Cannot release a recycled or not yet acquired resource");
-    }
-    if (--acquired == 0) {
-      listener.onResourceReleased(key, this);
+  // listener is effectively final.
+  @SuppressWarnings("SynchronizeOnNonFinalField")
+  void release() {
+    // To avoid deadlock, always acquire the listener lock before our lock so that the locking
+    // scheme is consistent (Engine -> EngineResource). Violating this order leads to deadlock
+    // (b/123646037).
+    synchronized (listener) {
+      synchronized (this) {
+        if (acquired <= 0) {
+          throw new IllegalStateException("Cannot release a recycled or not yet acquired resource");
+        }
+        if (--acquired == 0) {
+          listener.onResourceReleased(key, this);
+        }
+      }
     }
   }
 
