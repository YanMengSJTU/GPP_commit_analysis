diff --git a/TMessagesProj/src/main/AndroidManifest.xml b/TMessagesProj/src/main/AndroidManifest.xml
index fd7be431e..6f8b3a91c 100644
--- a/TMessagesProj/src/main/AndroidManifest.xml
+++ b/TMessagesProj/src/main/AndroidManifest.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="org.telegram.messenger"
-    android:versionCode="175"
+    android:versionCode="177"
     android:versionName="1.3.26">
 
     <supports-screens android:anyDensity="true"
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java b/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
index 93a15798c..e79e8fddc 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
@@ -30,11 +30,12 @@
 import java.util.regex.Pattern;
 
 public class ConnectionsManager implements Action.ActionDelegate, TcpConnection.TcpConnectionDelegate {
-    public static boolean DEBUG_VERSION = false;
+    public static boolean DEBUG_VERSION = true;
     public static int APP_ID = 2458;
     public static String APP_HASH = "5bce48dc7d331e62c955669eb7233217";
     public static String HOCKEY_APP_HASH = "your-hockeyapp-api-key-here";
     public static String GCM_SENDER_ID = "760348033672";
+    public static String SEND_LOGS_EMAIL = "email@gmail.com";
 
     private HashMap<Integer, Datacenter> datacenters = new HashMap<Integer, Datacenter>();
     private HashMap<Long, ArrayList<Long>> processedMessageIdsSet = new HashMap<Long, ArrayList<Long>>();
diff --git a/TMessagesProj/src/main/java/org/telegram/objects/MessageObject.java b/TMessagesProj/src/main/java/org/telegram/objects/MessageObject.java
index 5e85b9b46..b839212dc 100644
--- a/TMessagesProj/src/main/java/org/telegram/objects/MessageObject.java
+++ b/TMessagesProj/src/main/java/org/telegram/objects/MessageObject.java
@@ -376,9 +376,9 @@ private void generateLayout() {
         textLayoutBlocks = new ArrayList<TextLayoutBlock>();
 
         if (messageText instanceof Spannable) {
-            if (messageOwner.message != null && messageOwner.message.contains(".")) {
+            if (messageOwner.message != null && messageOwner.message.contains(".") && (messageOwner.message.contains(".com") || messageOwner.message.contains("http") || messageOwner.message.contains(".ru") || messageOwner.message.contains(".org") || messageOwner.message.contains(".net"))) {
                 Linkify.addLinks((Spannable)messageText, Linkify.WEB_URLS);
-            } else if (messageText.length() < 400) {
+            } else if (messageText.length() < 100) {
                 Linkify.addLinks((Spannable)messageText, Linkify.WEB_URLS | Linkify.EMAIL_ADDRESSES | Linkify.PHONE_NUMBERS);
             }
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
index 0211e210b..d3efc3b9a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
@@ -68,6 +68,7 @@
 
     private StaticLayout nameLayout;
     protected int nameWidth;
+    private float nameOffsetX = 0;
     protected boolean drawName = false;
 
     private StaticLayout forwardedNameLayout;
@@ -75,6 +76,7 @@
     protected boolean drawForwardedName = false;
     private int forwardNameX;
     private int forwardNameY;
+    private float forwardNameOffsetX = 0;
 
     private StaticLayout timeLayout;
     protected int timeWidth;
@@ -218,6 +220,7 @@ public void setMessageObject(MessageObject messageObject) {
             if (nameLayout.getLineCount() > 0) {
                 nameWidth = (int)Math.ceil(nameLayout.getLineWidth(0));
                 namesOffset += Utilities.dp(18);
+                nameOffsetX = nameLayout.getLineLeft(0);
             } else {
                 nameWidth = 0;
             }
@@ -240,6 +243,7 @@ public void setMessageObject(MessageObject messageObject) {
                 if (forwardedNameLayout.getLineCount() > 1) {
                     forwardedNameWidth = Math.max((int) Math.ceil(forwardedNameLayout.getLineWidth(0)), (int) Math.ceil(forwardedNameLayout.getLineWidth(1)));
                     namesOffset += Utilities.dp(36);
+                    forwardNameOffsetX = Math.min(forwardedNameLayout.getLineLeft(0), forwardedNameLayout.getLineLeft(1));
                 } else {
                     forwardedNameWidth = 0;
                 }
@@ -381,7 +385,7 @@ protected void onDraw(Canvas canvas) {
 
         if (drawName && nameLayout != null) {
             canvas.save();
-            canvas.translate(currentBackgroundDrawable.getBounds().left + Utilities.dp(19), Utilities.dp(10));
+            canvas.translate(currentBackgroundDrawable.getBounds().left + Utilities.dp(19) - nameOffsetX, Utilities.dp(10));
             namePaint.setColor(Utilities.getColorForId(currentUser.id));
             nameLayout.draw(canvas);
             canvas.restore();
@@ -398,7 +402,7 @@ protected void onDraw(Canvas canvas) {
                 forwardNameX = currentBackgroundDrawable.getBounds().left + Utilities.dp(19);
                 forwardNameY = Utilities.dp(10 + (drawName ? 18 : 0));
             }
-            canvas.translate(forwardNameX, forwardNameY);
+            canvas.translate(forwardNameX - forwardNameOffsetX, forwardNameY);
             forwardedNameLayout.draw(canvas);
             canvas.restore();
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
index cda68d560..7e9e34901 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
@@ -12,7 +12,6 @@
 import android.graphics.Canvas;
 import android.text.Spannable;
 import android.text.style.ClickableSpan;
-import android.util.Log;
 import android.view.MotionEvent;
 
 import org.telegram.messenger.Utilities;
@@ -30,6 +29,8 @@
     private int firstVisibleBlockNum = 0;
     private int totalVisibleBlocksCount = 0;
 
+    private boolean wasLayout = false;
+
     public ChatMessageCell(Context context, boolean isChat) {
         super(context, isChat);
         drawForwardedName = true;
@@ -88,9 +89,6 @@ public boolean onTouchEvent(MotionEvent event) {
     public void setVisiblePart(int position, int height) {
         visibleY = position;
         visibleHeight = height;
-        if (visibleY < 0) {
-            Log.e("tmessages", "vis = " + visibleY);
-        }
 
         int newFirst = -1, newLast = -1, newCount = 0;
 
@@ -126,6 +124,7 @@ private boolean intersect(float left1, float right1, float left2, float right2)
     @Override
     public void setMessageObject(MessageObject messageObject) {
         if (currentMessageObject != messageObject || isUserDataChanged()) {
+            wasLayout = false;
             pressedLink = null;
             int maxWidth;
             if (chat) {
@@ -173,7 +172,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
     protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
         super.onLayout(changed, left, top, right, bottom);
 
-        if (changed) {
+        if (changed || !wasLayout) {
             if (currentMessageObject.messageOwner.out) {
                 textX = layoutWidth - backgroundWidth + Utilities.dp(10);
                 textY = Utilities.dp(10) + namesOffset;
@@ -181,6 +180,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
                 textX = Utilities.dp(19) + (chat ? Utilities.dp(52) : 0);
                 textY = Utilities.dp(10) + namesOffset;
             }
+            wasLayout = true;
         }
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index f52cc5fc3..eec3f9d56 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -8,7 +8,6 @@
 
 package org.telegram.ui;
 
-import android.animation.Animator;
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.Context;
@@ -23,6 +22,7 @@
 import android.graphics.drawable.AnimationDrawable;
 import android.graphics.drawable.BitmapDrawable;
 import android.media.MediaPlayer;
+import android.media.MediaRecorder;
 import android.media.ThumbnailUtils;
 import android.net.Uri;
 import android.os.Bundle;
@@ -33,8 +33,12 @@
 import android.support.v7.view.ActionMode;
 import android.text.Editable;
 import android.text.Html;
+import android.text.Layout;
+import android.text.SpannableStringBuilder;
 import android.text.TextWatcher;
+import android.text.style.ClickableSpan;
 import android.text.style.ImageSpan;
+import android.util.Log;
 import android.util.TypedValue;
 import android.view.Display;
 import android.view.KeyEvent;
@@ -49,7 +53,6 @@
 import android.view.ViewParent;
 import android.view.ViewTreeObserver;
 import android.view.WindowManager;
-import android.view.animation.AccelerateDecelerateInterpolator;
 import android.view.inputmethod.EditorInfo;
 import android.view.inputmethod.InputMethodManager;
 import android.webkit.MimeTypeMap;
@@ -61,14 +64,14 @@
 import android.widget.ImageButton;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
+import android.widget.ListView;
 import android.widget.PopupWindow;
 import android.widget.ProgressBar;
 import android.widget.RelativeLayout;
 import android.widget.TextView;
 
 import org.telegram.PhoneFormat.PhoneFormat;
-import org.telegram.messenger.MediaController;
-import org.telegram.messenger.TLRPC;
+import org.telegram.TL.TLRPC;
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.FileLog;
 import org.telegram.objects.MessageObject;
@@ -81,14 +84,12 @@
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
-import org.telegram.ui.Cells.ChatAudioCell;
-import org.telegram.ui.Cells.ChatBaseCell;
-import org.telegram.ui.Cells.ChatMessageCell;
 import org.telegram.ui.Views.BackupImageView;
 import org.telegram.ui.Views.BaseFragment;
 import org.telegram.ui.Views.EmojiView;
 import org.telegram.ui.Views.LayoutListView;
 import org.telegram.ui.Views.MessageActionLayout;
+import org.telegram.ui.Views.MessageLayout;
 import org.telegram.ui.Views.OnSwipeTouchListener;
 import org.telegram.ui.Views.SizeNotifierRelativeLayout;
 
@@ -121,8 +122,6 @@
     private boolean ignoreTextChange = false;
     private TextView emptyView;
     private View bottomOverlay;
-    private View recordPanel;
-    private TextView recordTimeText;
     private TextView bottomOverlayText;
     private ImageButton audioSendButton;
     private MessageObject selectedObject;
@@ -144,6 +143,7 @@
     private TextView topPanelText;
     private long dialog_id;
     AlertDialog visibleDialog = null;
+    private final Rect mLastTouch = new Rect();
     private SizeNotifierRelativeLayout sizeNotifierRelativeLayout;
     private HashMap<Integer, MessageObject> selectedMessagesIds = new HashMap<Integer, MessageObject>();
     private HashMap<Integer, MessageObject> selectedMessagesCanCopyIds = new HashMap<Integer, MessageObject>();
@@ -160,6 +160,7 @@
     private long lastTypingTimeSend = 0;
     private int minDate = 0;
     private int progressTag = 0;
+    private int fontSize = 16;
     private boolean invalidateAfterAnimation = false;
     boolean first = true;
     private int unread_to_load = 0;
@@ -168,8 +169,7 @@
     private boolean unread_end_reached = true;
     private boolean loadingForward = false;
     private MessageObject unreadMessageObject = null;
-    private boolean recordingAudio = false;
-    private String lastTimeString = null;
+    //private boolean reloadAfterAnimation = false;
 
     private String currentPicturePath;
 
@@ -182,6 +182,10 @@
 
     private CharSequence lastPrintString;
 
+    private MediaRecorder audioRecorder = null;
+    private TLRPC.TL_audio recordingAudio = null;
+    private File recordingAudioFile = null;
+
     ActionMode mActionMode = null;
     private ActionMode.Callback mActionModeCallback = new ActionMode.Callback() {
         @Override
@@ -298,13 +302,11 @@ public boolean onFragmentCreate() {
         NotificationCenter.Instance.addObserver(this, FileLoader.FileDidFailedLoad);
         NotificationCenter.Instance.addObserver(this, FileLoader.FileDidLoaded);
         NotificationCenter.Instance.addObserver(this, FileLoader.FileLoadProgressChanged);
-        NotificationCenter.Instance.addObserver(this, MediaController.audioProgressDidChanged);
-        NotificationCenter.Instance.addObserver(this, MediaController.audioDidReset);
-        NotificationCenter.Instance.addObserver(this, MediaController.recordProgressChanged);
         NotificationCenter.Instance.addObserver(this, 997);
         loading = true;
         MessagesController.Instance.loadMessages(dialog_id, 0, 30, 0, true, 0, classGuid, true, false);
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        fontSize = preferences.getInt("fons_size", 16);
         sendByEnter = preferences.getBoolean("send_by_enter", false);
 
         if (currentChat != null) {
@@ -337,9 +339,6 @@ public void onFragmentDestroy() {
         NotificationCenter.Instance.removeObserver(this, FileLoader.FileDidLoaded);
         NotificationCenter.Instance.removeObserver(this, FileLoader.FileLoadProgressChanged);
         NotificationCenter.Instance.removeObserver(this, MessagesController.contactsDidLoaded);
-        NotificationCenter.Instance.removeObserver(this, MediaController.audioProgressDidChanged);
-        NotificationCenter.Instance.removeObserver(this, MediaController.audioDidReset);
-        NotificationCenter.Instance.removeObserver(this, MediaController.recordProgressChanged);
         NotificationCenter.Instance.removeObserver(this, 997);
         if (sizeNotifierRelativeLayout != null) {
             sizeNotifierRelativeLayout.delegate = null;
@@ -354,7 +353,6 @@ public void onFragmentDestroy() {
         } catch (Exception e) {
             FileLog.e("tmessages", e);
         }
-        MediaController.Instance.stopAudio();
     }
 
     @Override
@@ -390,8 +388,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
             progressView = fragmentView.findViewById(R.id.progressLayout);
             pagedownButton = fragmentView.findViewById(R.id.pagedown_button);
             audioSendButton = (ImageButton)fragmentView.findViewById(R.id.chat_audio_send_button);
-            recordPanel = fragmentView.findViewById(R.id.record_panel);
-            recordTimeText = (TextView)fragmentView.findViewById(R.id.recording_time_text);
             View progressViewInner = progressView.findViewById(R.id.progressLayoutInner);
 
             updateContactStatus();
@@ -465,7 +461,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
             }
             emptyView.setPadding(Utilities.dp(7), Utilities.dp(1), Utilities.dp(7), Utilities.dp(1));
 
-            if (currentUser != null && currentUser.id / 1000 == 333) {
+            if (currentUser != null && currentUser.id == 333000) {
                 emptyView.setText(R.string.GotAQuestion);
             }
 
@@ -479,8 +475,6 @@ public boolean onItemLongClick(AdapterView<?> adapter, View view, int position,
                 }
             });
 
-            final Rect scrollRect = new Rect();
-
             chatListView.setOnScrollListener(new AbsListView.OnScrollListener() {
                 @Override
                 public void onScrollStateChanged(AbsListView absListView, int i) {
@@ -512,14 +506,6 @@ public void onScroll(AbsListView absListView, int firstVisibleItem, int visibleI
                     } else {
                         showPagedownButton(false, false);
                     }
-                    for (int a = 0; a < visibleItemCount; a++) {
-                        View view = absListView.getChildAt(a);
-                        if (view instanceof ChatMessageCell) {
-                            ChatMessageCell messageCell = (ChatMessageCell)view;
-                            messageCell.getLocalVisibleRect(scrollRect);
-                            messageCell.setVisiblePart(scrollRect.top, scrollRect.bottom - scrollRect.top);
-                        }
-                    }
                 }
             });
 
@@ -596,23 +582,11 @@ public void onClick(View view) {
                 @Override
                 public boolean onTouch(View view, MotionEvent motionEvent) {
                     if (motionEvent.getAction() == MotionEvent.ACTION_DOWN) {
-                        recordingAudio = MediaController.Instance.startRecording(dialog_id);
-                        updateAudioRecordIntefrace();
-                    } else if (motionEvent.getAction() == MotionEvent.ACTION_UP || motionEvent.getAction() == MotionEvent.ACTION_CANCEL) {
-                        if (recordingAudio) {
-                            MediaController.Instance.stopRecording(true);
-                            recordingAudio = false;
-                            updateAudioRecordIntefrace();
-                        }
-                    } else if (motionEvent.getAction() == MotionEvent.ACTION_MOVE && recordingAudio) {
-                        if (motionEvent.getX() < -Utilities.dp(100)) {
-                            MediaController.Instance.stopRecording(false);
-                            recordingAudio = false;
-                            updateAudioRecordIntefrace();
-                        }
-                    }
-                    view.onTouchEvent(motionEvent);
-                    return true;
+                        startRecording();
+                    } else if (motionEvent.getAction() == MotionEvent.ACTION_UP) {
+                        stopRecording();
+                    }
+                    return false;
                 }
             });
 
@@ -620,7 +594,7 @@ public boolean onTouch(View view, MotionEvent motionEvent) {
                 @Override
                 public void onClick(View view) {
                     if (unread_end_reached || first_unread_id == 0) {
-                        chatListView.setSelectionFromTop(messages.size() - 1, -100000 - chatListView.getPaddingTop());
+                        chatListView.setSelectionFromTop(messages.size() - 1, -10000 - chatListView.getPaddingTop());
                     } else {
                         messages.clear();
                         messagesByDays.clear();
@@ -656,7 +630,7 @@ public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
 
                     if (message.length() != 0 && lastTypingTimeSend < System.currentTimeMillis() - 5000 && !ignoreTextChange) {
                         int currentTime = ConnectionsManager.Instance.getCurrentTime();
-                        if (currentUser != null && currentUser.status != null && currentUser.status.expires < currentTime) {
+                        if (currentUser != null && currentUser.status != null && currentUser.status.expires < currentTime && currentUser.status.was_online < currentTime) {
                             return;
                         }
                         lastTypingTimeSend = System.currentTimeMillis();
@@ -700,7 +674,9 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                         processRowSelect(view);
                         return;
                     }
-                    createMenu(view, true);
+                    if (!spanClicked(chatListView, view, R.id.chat_message_text)) {
+                        createMenu(view, true);
+                    }
                 }
             });
 
@@ -734,6 +710,12 @@ public void onSwipeLeft() {
                         avatarImageView.performClick();
                     }
                 }
+
+                @Override
+                public void onTouchUp(MotionEvent event) {
+                    mLastTouch.right = (int) event.getX();
+                    mLastTouch.bottom = (int) event.getY();
+                }
             });
 
             emptyView.setOnTouchListener(new OnSwipeTouchListener() {
@@ -766,68 +748,15 @@ public void onSwipeLeft() {
     }
 
     private void checkSendButton() {
-//        sendButton.setVisibility(View.VISIBLE);
-//        audioSendButton.setVisibility(View.INVISIBLE);
-        if (messsageEditText.length() > 0) {
-            sendButton.setVisibility(View.VISIBLE);
-            audioSendButton.setVisibility(View.INVISIBLE);
-        } else {
-            sendButton.setVisibility(View.INVISIBLE);
-            audioSendButton.setVisibility(View.VISIBLE);
-        }
-    }
-
-    private void updateAudioRecordIntefrace() {
-        if (recordingAudio) {
-            recordPanel.setVisibility(View.VISIBLE);
-            recordTimeText.setText("00:00");
-            lastTimeString = null;
-            if(android.os.Build.VERSION.SDK_INT > 12) {
-                recordPanel.setX(Utilities.displaySize.x);
-                recordPanel.animate().setInterpolator(new AccelerateDecelerateInterpolator()).setListener(new Animator.AnimatorListener() {
-                    @Override
-                    public void onAnimationStart(Animator animator) {
-                    }
-
-                    @Override
-                    public void onAnimationEnd(Animator animator) {
-                        recordPanel.setX(0);
-                    }
-
-                    @Override
-                    public void onAnimationCancel(Animator animator) {
-                    }
-
-                    @Override
-                    public void onAnimationRepeat(Animator animator) {
-                    }
-                }).setDuration(300).translationX(0).start();
-            }
-        } else {
-            if(android.os.Build.VERSION.SDK_INT > 12) {
-                recordPanel.animate().setInterpolator(new AccelerateDecelerateInterpolator()).setListener(new Animator.AnimatorListener() {
-                    @Override
-                    public void onAnimationStart(Animator animator) {
-
-                    }
-
-                    @Override
-                    public void onAnimationEnd(Animator animator) {
-                        recordPanel.setVisibility(View.GONE);
-                    }
-
-                    @Override
-                    public void onAnimationCancel(Animator animator) {
-                    }
-
-                    @Override
-                    public void onAnimationRepeat(Animator animator) {
-                    }
-                }).setDuration(300).translationX(Utilities.displaySize.x).start();
-            } else {
-                recordPanel.setVisibility(View.GONE);
-            }
-        }
+        sendButton.setVisibility(View.VISIBLE);
+        audioSendButton.setVisibility(View.INVISIBLE);
+//        if (messsageEditText.length() > 0) {
+//            sendButton.setVisibility(View.VISIBLE);
+//            audioSendButton.setVisibility(View.INVISIBLE);
+//        } else {
+//            sendButton.setVisibility(View.INVISIBLE);
+//            audioSendButton.setVisibility(View.VISIBLE);
+//        }
     }
 
     private void sendMessage() {
@@ -838,7 +767,7 @@ private void sendMessage() {
             chatListView.post(new Runnable() {
                 @Override
                 public void run() {
-                    chatListView.setSelectionFromTop(messages.size() - 1, -100000 - chatListView.getPaddingTop());
+                    chatListView.setSelectionFromTop(messages.size() - 1, -10000 - chatListView.getPaddingTop());
                 }
             });
         }
@@ -890,6 +819,84 @@ public void willBeHidden() {
         paused = true;
     }
 
+    private void startRecording() {
+        if (audioRecorder != null) {
+            return;
+        }
+
+        recordingAudio = new TLRPC.TL_audio();
+        recordingAudio.dc_id = Integer.MIN_VALUE;
+        recordingAudio.id = UserConfig.lastLocalId;
+        recordingAudio.user_id = UserConfig.clientUserId;
+        UserConfig.lastLocalId--;
+        UserConfig.saveConfig(false);
+
+        recordingAudioFile = new File(Utilities.getCacheDir(), MessageObject.getAttachFileName(recordingAudio));
+
+        audioRecorder = new MediaRecorder();
+        audioRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);
+        audioRecorder.setOutputFormat(MediaRecorder.OutputFormat.MPEG_4);
+        audioRecorder.setOutputFile(recordingAudioFile.getAbsolutePath());
+        if(android.os.Build.VERSION.SDK_INT >= 10) {
+            audioRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.AAC);
+        } else {
+            audioRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB);
+        }
+        audioRecorder.setAudioSamplingRate(24000);
+        audioRecorder.setAudioChannels(1);
+        audioRecorder.setAudioEncodingBitRate(16000);
+
+        try {
+            audioRecorder.prepare();
+            audioRecorder.start();
+        } catch (Exception e) {
+            Log.e("tmessages", "prepare() failed");
+        }
+    }
+
+    private void stopRecording() {
+        try {
+            audioRecorder.stop();
+            audioRecorder.release();
+            audioRecorder = null;
+
+            recordingAudio.date = ConnectionsManager.Instance.getCurrentTime();
+            recordingAudio.size = (int)recordingAudioFile.length();
+            recordingAudio.path = recordingAudioFile.getAbsolutePath();
+            int duration = 0;
+
+            MediaPlayer player = new MediaPlayer();
+            try {
+                player.setDataSource(recordingAudio.path);
+                player.prepare();
+                duration = player.getDuration();
+                recordingAudio.duration = duration / 1000;
+            } catch (Exception e) {
+                FileLog.e("tmessages", e);
+            } finally {
+                try {
+                    player.release();
+                    player = null;
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e);
+                }
+            }
+
+            if (duration > 500) {
+                MessagesController.Instance.sendMessage(recordingAudio, dialog_id);
+            } else {
+                recordingAudio = null;
+                recordingAudioFile.delete();
+                recordingAudioFile = null;
+            }
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
+            recordingAudio = null;
+            recordingAudioFile.delete();
+            recordingAudioFile = null;
+        }
+    }
+
     private void updateSecretStatus() {
         if (bottomOverlay == null) {
             return;
@@ -949,7 +956,7 @@ private void updateOnlineCount() {
         int currentTime = ConnectionsManager.Instance.getCurrentTime();
         for (TLRPC.TL_chatParticipant participant : info.participants) {
             TLRPC.User user = MessagesController.Instance.users.get(participant.user_id);
-            if (user != null && user.status != null && (user.status.expires > currentTime || user.id == UserConfig.clientUserId) && user.status.expires > 10000) {
+            if (user != null && user.status != null && (user.status.expires > currentTime || user.status.was_online > currentTime || user.id == UserConfig.clientUserId) && (user.status.expires > 10000 || user.status.was_online > 10000)) {
                 onlineCount++;
             }
         }
@@ -1034,14 +1041,9 @@ private void processRowSelect(View view) {
         if (parentView == null) {
             return;
         }
-        MessageObject message = null;
-        if (view instanceof ChatBaseCell) {
-            message = ((ChatBaseCell)view).getMessageObject();
-        } else {
-            ChatListRowHolderEx holder = (ChatListRowHolderEx)parentView.getTag();
-            message = holder.message;
-        }
+        ChatListRowHolderEx holder = (ChatListRowHolderEx)parentView.getTag();
 
+        MessageObject message = holder.message;
         if (getMessageType(message) < 2) {
             return;
         }
@@ -1085,7 +1087,7 @@ private void updateSubtitle() {
                 title.setCompoundDrawablePadding(0);
             }
         } else if (currentUser != null) {
-            if (currentUser.id / 1000 != 333 && ContactsController.Instance.contactsDict.get(currentUser.id) == null && (ContactsController.Instance.contactsDict.size() != 0 || !ContactsController.Instance.loadingContacts)) {
+            if (currentUser.id != 333000 && ContactsController.Instance.contactsDict.get(currentUser.id) == null && (ContactsController.Instance.contactsDict.size() != 0 || !ContactsController.Instance.loadingContacts)) {
                 if (currentUser.phone != null && currentUser.phone.length() != 0) {
                     actionBar.setTitle(PhoneFormat.Instance.format("+" + currentUser.phone));
                 } else {
@@ -1127,13 +1129,17 @@ private void updateSubtitle() {
                     actionBar.setSubtitle(getStringEntry(R.string.Offline));
                 } else {
                     int currentTime = ConnectionsManager.Instance.getCurrentTime();
-                    if (currentUser.status.expires > currentTime) {
+                    if (currentUser.status.expires > currentTime || currentUser.status.was_online > currentTime) {
                         actionBar.setSubtitle(getStringEntry(R.string.Online));
                     } else {
-                        if (currentUser.status.expires <= 10000) {
+                        if (currentUser.status.was_online <= 10000 && currentUser.status.expires <= 10000) {
                             actionBar.setSubtitle(getStringEntry(R.string.Invisible));
                         } else {
-                            actionBar.setSubtitle(Utilities.formatDateOnline(currentUser.status.expires));
+                            int value = currentUser.status.was_online;
+                            if (value == 0) {
+                                value = currentUser.status.expires;
+                            }
+                            actionBar.setSubtitle(Utilities.formatDateOnline(value));
                         }
                     }
                 }
@@ -1294,7 +1300,7 @@ public boolean processSendingText(String text) {
     }
 
     public void processSendingPhoto(String imageFilePath) {
-        if (imageFilePath == null || imageFilePath.length() == 0) {
+        if (imageFilePath == null) {
             return;
         }
         TLRPC.TL_photo photo = MessagesController.Instance.generatePhotoSizes(imageFilePath);
@@ -1307,49 +1313,8 @@ public void processSendingPhoto(String imageFilePath) {
         }
     }
 
-    public void processSendingDocument(String documentFilePath) {
-        if (documentFilePath == null || documentFilePath.length() == 0) {
-            return;
-        }
-        File f = new File(documentFilePath);
-        if (!f.exists() || f.length() == 0) {
-            return;
-        }
-        String name = f.getName();
-        if (name == null) {
-            name = "noname";
-        }
-        String ext = "";
-        int idx = documentFilePath.lastIndexOf(".");
-        if (idx != -1) {
-            ext = documentFilePath.substring(idx);
-        }
-        TLRPC.TL_document document = new TLRPC.TL_document();
-        document.thumb = new TLRPC.TL_photoSizeEmpty();
-        document.thumb.type = "s";
-        document.id = 0;
-        document.user_id = UserConfig.clientUserId;
-        document.date = ConnectionsManager.Instance.getCurrentTime();
-        document.file_name = name;
-        document.size = (int)f.length();
-        document.dc_id = 0;
-        document.path = documentFilePath;
-        if (ext.length() != 0) {
-            MimeTypeMap myMime = MimeTypeMap.getSingleton();
-            String mimeType = myMime.getMimeTypeFromExtension(ext.toLowerCase());
-            if (mimeType != null) {
-                document.mime_type = mimeType;
-            } else {
-                document.mime_type = "application/octet-stream";
-            }
-        } else {
-            document.mime_type = "application/octet-stream";
-        }
-        MessagesController.Instance.sendMessage(document, dialog_id);
-    }
-
     public void processSendingVideo(final String videoPath) {
-        if (videoPath == null || videoPath.length() == 0) {
+        if (videoPath == null) {
             return;
         }
         Bitmap thumb = ThumbnailUtils.createVideoThumbnail(videoPath, MediaStore.Video.Thumbnails.MINI_KIND);
@@ -1551,7 +1516,7 @@ public boolean onPreDraw() {
                                 chatListView.post(new Runnable() {
                                     @Override
                                     public void run() {
-                                        chatListView.setSelectionFromTop(messages.size() - 1, -100000 - chatListView.getPaddingTop());
+                                        chatListView.setSelectionFromTop(messages.size() - 1, -10000 - chatListView.getPaddingTop());
                                     }
                                 });
                             }
@@ -1756,7 +1721,7 @@ public void run() {
                                 chatListView.post(new Runnable() {
                                     @Override
                                     public void run() {
-                                        chatListView.setSelectionFromTop(messages.size() - 1, -100000 - chatListView.getPaddingTop());
+                                        chatListView.setSelectionFromTop(messages.size() - 1, -10000 - chatListView.getPaddingTop());
                                     }
                                 });
                             }
@@ -1910,12 +1875,6 @@ public void run() {
             }
         } else if (id == FileLoader.FileUploadProgressChanged) {
             String location = (String)args[0];
-            boolean enc = (Boolean)args[2];
-            if (enc && currentEncryptedChat == null) {
-                return;
-            } else if (!enc && currentEncryptedChat != null) {
-                return;
-            }
             ProgressBar bar;
             if ((bar = progressBarMap.get(location)) != null) {
                 Float progress = (Float)args[1];
@@ -1983,44 +1942,6 @@ public void run() {
                     updateVisibleRows();
                 }
             }
-        } else if (id == MediaController.audioDidReset) {
-            Integer mid = (Integer)args[0];
-            if (chatListView != null) {
-                int count = chatListView.getChildCount();
-                for (int a = 0; a < count; a++) {
-                    View view = chatListView.getChildAt(a);
-                    if (view instanceof ChatAudioCell) {
-                        ChatAudioCell cell = (ChatAudioCell)view;
-                        if (cell.getMessageObject() != null && cell.getMessageObject().messageOwner.id == mid) {
-                            cell.updateButtonState();
-                            break;
-                        }
-                    }
-                }
-            }
-        } else if (id == MediaController.audioProgressDidChanged) {
-            Integer mid = (Integer)args[0];
-            if (chatListView != null) {
-                int count = chatListView.getChildCount();
-                for (int a = 0; a < count; a++) {
-                    View view = chatListView.getChildAt(a);
-                    if (view instanceof ChatAudioCell) {
-                        ChatAudioCell cell = (ChatAudioCell)view;
-                        if (cell.getMessageObject() != null && cell.getMessageObject().messageOwner.id == mid) {
-                            cell.updateProgress();
-                            break;
-                        }
-                    }
-                }
-            }
-        } else if (id == MediaController.recordProgressChanged) {
-            Long time = (Long)args[0] / 1000;
-            String str = String.format("%02d:%02d", time / 60, time % 60);
-            if (lastTimeString == null || !lastPrintString.equals(str)) {
-                if (recordTimeText != null) {
-                    recordTimeText.setText(str);
-                }
-            }
         }
     }
 
@@ -2032,7 +1953,7 @@ private void updateContactStatus() {
             topPanel.setVisibility(View.GONE);
         } else {
             if (currentEncryptedChat != null && !(currentEncryptedChat instanceof TLRPC.TL_encryptedChat)
-                    || currentUser.id / 1000 == 333
+                    || currentUser.id == 333000
                     || (currentUser.phone != null && currentUser.phone.length() != 0 &&
                     ContactsController.Instance.contactsDict.get(currentUser.id) != null &&
                     (ContactsController.Instance.contactsDict.size() != 0 || !ContactsController.Instance.loadingContacts))) {
@@ -2089,7 +2010,7 @@ public void onClick(View v) {
                                 chatListView.post(new Runnable() {
                                     @Override
                                     public void run() {
-                                        chatListView.setSelectionFromTop(messages.size() - 1, -100000 - chatListView.getPaddingTop());
+                                        chatListView.setSelectionFromTop(messages.size() - 1, -10000 - chatListView.getPaddingTop());
                                     }
                                 });
                             }
@@ -2431,21 +2352,17 @@ public void onClick(View view) {
     }
 
     private View getRowParentView(View v) {
-        if (v instanceof ChatBaseCell) {
-            return v;
-        } else {
-            while (!(v.getTag() instanceof ChatListRowHolderEx)) {
-                ViewParent parent = v.getParent();
-                if (!(parent instanceof View)) {
-                    return null;
-                }
-                v = (View)v.getParent();
-                if (v == null) {
-                    return null;
-                }
+        while (!(v.getTag() instanceof ChatListRowHolderEx)) {
+            ViewParent parent = v.getParent();
+            if (!(parent instanceof View)) {
+                return null;
+            }
+            v = (View)v.getParent();
+            if (v == null) {
+                return null;
             }
-            return v;
         }
+        return v;
     }
 
     public void createMenu(View v, boolean single) {
@@ -2461,13 +2378,9 @@ public void createMenu(View v, boolean single) {
         if (parentView == null) {
             return;
         }
-        MessageObject message = null;
-        if (v instanceof ChatBaseCell) {
-            message = ((ChatBaseCell)v).getMessageObject();
-        } else {
-            ChatListRowHolderEx holder = (ChatListRowHolderEx)parentView.getTag();
-            message = holder.message;
-        }
+        ChatListRowHolderEx holder = (ChatListRowHolderEx)parentView.getTag();
+
+        MessageObject message = holder.message;
         final int type = getMessageType(message);
         if (single || type < 2) {
             if (type >= 0) {
@@ -2854,6 +2767,51 @@ public void onClick(DialogInterface dialogInterface, int i) {
         }
     }
 
+    private boolean spanClicked(ListView list, View view, int textViewId) {
+        final TextView widget = (TextView)view.findViewById(textViewId);
+        if (widget == null) {
+            return false;
+        }
+        try {
+            list.offsetRectIntoDescendantCoords(widget, mLastTouch);
+            int x = mLastTouch.right;
+            int y = mLastTouch.bottom;
+
+            x -= widget.getTotalPaddingLeft();
+            y -= widget.getTotalPaddingTop();
+            x += widget.getScrollX();
+            y += widget.getScrollY();
+
+            final Layout layout = widget.getLayout();
+            if (layout == null) {
+                return false;
+            }
+            final int line = layout.getLineForVertical(y);
+            final int off = layout.getOffsetForHorizontal(line, x);
+
+            final float left = layout.getLineLeft(line);
+            if (left > x || left + layout.getLineWidth(line) < x) {
+                return false;
+            }
+
+            final Editable buffer = new SpannableStringBuilder(widget.getText());
+            if (buffer == null) {
+                return false;
+            }
+            final ClickableSpan[] link = buffer.getSpans(off, off, ClickableSpan.class);
+
+            if (link.length == 0) {
+                return false;
+            }
+
+            link[0].onClick(widget);
+            return true;
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
+            return false;
+        }
+    }
+
     private void updateVisibleRows() {
         if (chatListView == null) {
             return;
@@ -2880,24 +2838,6 @@ private void updateVisibleRows() {
                     view.setBackgroundColor(0);
                 }
                 updateRowBackground(holder, disableSelection, selected);
-            } else if (view instanceof ChatBaseCell) {
-                ChatBaseCell cell = (ChatBaseCell)view;
-
-                boolean disableSelection = false;
-                boolean selected = false;
-                if (mActionMode != null) {
-                    if (selectedMessagesIds.containsKey(cell.getMessageObject().messageOwner.id)) {
-                        view.setBackgroundColor(0x6633b5e5);
-                        selected = true;
-                    } else {
-                        view.setBackgroundColor(0);
-                    }
-                    disableSelection = true;
-                } else {
-                    view.setBackgroundColor(0);
-                }
-
-                cell.setCheckPressed(!disableSelection, disableSelection && selected);
             }
         }
     }
@@ -2909,6 +2849,12 @@ private void updateRowBackground(ChatListRowHolderEx holder, boolean disableSele
                 holder.chatBubbleView.setBackgroundResource(R.drawable.chat_outgoing_photo_states);
             } else if (messageType == 3 || messageType == 5 || messageType == 7) {
                 holder.chatBubbleView.setBackgroundResource(R.drawable.chat_incoming_photo_states);
+            } else if (messageType == 0 || messageType == 8) {
+                holder.messageLayout.setBackgroundResource(R.drawable.chat_outgoing_text_states);
+                holder.messageLayout.setPadding(Utilities.dp(11), Utilities.dp(7), Utilities.dp(18), 0);
+            } else if (messageType == 1 || messageType == 9) {
+                holder.messageLayout.setBackgroundResource(R.drawable.chat_incoming_text_states);
+                holder.messageLayout.setPadding(Utilities.dp(19), Utilities.dp(7), Utilities.dp(9), 0);
             } else if (messageType == 12) {
                 holder.chatBubbleView.setBackgroundResource(R.drawable.chat_outgoing_text_states);
                 holder.chatBubbleView.setPadding(Utilities.dp(6), Utilities.dp(6), Utilities.dp(18), 0);
@@ -2921,6 +2867,9 @@ private void updateRowBackground(ChatListRowHolderEx holder, boolean disableSele
             } else if (messageType == 17) {
                 holder.chatBubbleView.setBackgroundResource(R.drawable.chat_incoming_text_states);
                 holder.chatBubbleView.setPadding(Utilities.dp(18), Utilities.dp(9), Utilities.dp(9), 0);
+            } else if (messageType == 18) {
+                holder.chatBubbleView.setBackgroundResource(R.drawable.chat_outgoing_text_states);
+                holder.chatBubbleView.setPadding(Utilities.dp(9), Utilities.dp(9), Utilities.dp(18), Utilities.dp(6));
             }
         } else {
             if (messageType == 2 || messageType == 4 || messageType == 6) {
@@ -2935,6 +2884,20 @@ private void updateRowBackground(ChatListRowHolderEx holder, boolean disableSele
                 } else {
                     holder.chatBubbleView.setBackgroundResource(R.drawable.msg_in_photo);
                 }
+            } else if (messageType == 0 || messageType == 8) {
+                if (selected) {
+                    holder.messageLayout.setBackgroundResource(R.drawable.msg_out_selected);
+                } else {
+                    holder.messageLayout.setBackgroundResource(R.drawable.msg_out);
+                }
+                holder.messageLayout.setPadding(Utilities.dp(11), Utilities.dp(7), Utilities.dp(18), 0);
+            } else if (messageType == 1 || messageType == 9) {
+                if (selected) {
+                    holder.messageLayout.setBackgroundResource(R.drawable.msg_in_selected);
+                } else {
+                    holder.messageLayout.setBackgroundResource(R.drawable.msg_in);
+                }
+                holder.messageLayout.setPadding(Utilities.dp(19), Utilities.dp(7), Utilities.dp(9), 0);
             } else if (messageType == 12) {
                 if (selected) {
                     holder.chatBubbleView.setBackgroundResource(R.drawable.msg_out_selected);
@@ -2963,6 +2926,13 @@ private void updateRowBackground(ChatListRowHolderEx holder, boolean disableSele
                     holder.chatBubbleView.setBackgroundResource(R.drawable.msg_in);
                 }
                 holder.chatBubbleView.setPadding(Utilities.dp(18), Utilities.dp(9), Utilities.dp(9), 0);
+            } else if (messageType == 18) {
+                if (selected) {
+                    holder.chatBubbleView.setBackgroundResource(R.drawable.msg_out_selected);
+                } else {
+                    holder.chatBubbleView.setBackgroundResource(R.drawable.msg_out);
+                }
+                holder.chatBubbleView.setPadding(Utilities.dp(9), Utilities.dp(9), Utilities.dp(18), Utilities.dp(6));
             }
         }
     }
@@ -3040,13 +3010,21 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             if (view == null) {
                 LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                 if (type == 0) {
-                    view = new ChatMessageCell(mContext, false);
+                    view = li.inflate(R.layout.chat_outgoing_text_layout, viewGroup, false);
                 } else if (type == 1) {
-                    view = new ChatMessageCell(mContext, currentChat != null);
+                    if (currentChat != null) {
+                        view = li.inflate(R.layout.chat_group_incoming_text_layout, viewGroup, false);
+                    } else {
+                        view = li.inflate(R.layout.chat_incoming_text_layout, viewGroup, false);
+                    }
                 } else if (type == 8) {
-                    view = new ChatMessageCell(mContext, false);
+                    view = li.inflate(R.layout.chat_outgoing_forward_layout, viewGroup, false);
                 } else if (type == 9) {
-                    view = new ChatMessageCell(mContext, currentChat != null);
+                    if (currentChat != null) {
+                        view = li.inflate(R.layout.chat_group_incoming_forward_layout, viewGroup, false);
+                    } else {
+                        view = li.inflate(R.layout.chat_incoming_forward_layout, viewGroup, false);
+                    }
                 } else if (type == 4) {
                     view = li.inflate(R.layout.chat_outgoing_location_layout, viewGroup, false);
                 } else if (type == 5) {
@@ -3094,31 +3072,27 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                         view = li.inflate(R.layout.chat_incoming_document_layout, viewGroup, false);
                     }
                 } else if (type == 18) {
-                    view = new ChatAudioCell(mContext, false);
+                    view = li.inflate(R.layout.chat_outgoing_audio_layout, viewGroup, false);
                 } else if (type == 19) {
-                    view = new ChatAudioCell(mContext, currentChat != null);
+                    if (currentChat != null) {
+                        view = li.inflate(R.layout.chat_group_incoming_document_layout, viewGroup, false);
+                    } else {
+                        view = li.inflate(R.layout.chat_incoming_document_layout, viewGroup, false);
+                    }
                 }
             }
 
-            if (view instanceof ChatBaseCell) {
-                ((ChatBaseCell)view).delegate = new ChatBaseCell.ChatBaseCellDelegate() {
-                    @Override
-                    public void didPressedUserAvatar(ChatBaseCell cell, TLRPC.User user) {
-                        if (user != null && user.id != UserConfig.clientUserId) {
-                            UserProfileActivity fragment = new UserProfileActivity();
-                            Bundle args = new Bundle();
-                            args.putInt("user_id", user.id);
-                            fragment.setArguments(args);
-                            ((ApplicationActivity)parentActivity).presentFragment(fragment, "user_" + user.id, false);
-                        }
-                    }
-                };
+            ChatListRowHolderEx holder = (ChatListRowHolderEx)view.getTag();
+            if (holder == null) {
+                holder = new ChatListRowHolderEx(view, type);
+                view.setTag(holder);
             }
+            holder.message = message;
 
             boolean selected = false;
             boolean disableSelection = false;
             if (mActionMode != null) {
-                if (selectedMessagesIds.containsKey(message.messageOwner.id)) {
+                if (selectedMessagesIds.containsKey(holder.message.messageOwner.id)) {
                     view.setBackgroundColor(0x6633b5e5);
                     selected = true;
                 } else {
@@ -3128,20 +3102,8 @@ public void didPressedUserAvatar(ChatBaseCell cell, TLRPC.User user) {
             } else {
                 view.setBackgroundColor(0);
             }
-
-            if (view instanceof ChatBaseCell) {
-                ((ChatBaseCell)view).setMessageObject(message);
-                ((ChatBaseCell)view).setCheckPressed(!disableSelection, disableSelection && selected);
-            } else {
-                ChatListRowHolderEx holder = (ChatListRowHolderEx)view.getTag();
-                if (holder == null) {
-                    holder = new ChatListRowHolderEx(view, type);
-                    view.setTag(holder);
-                }
-                holder.message = message;
-                updateRowBackground(holder, disableSelection, selected);
-                holder.update();
-            }
+            updateRowBackground(holder, disableSelection, selected);
+            holder.update();
 
             return view;
         }
@@ -3186,7 +3148,10 @@ public boolean isEmpty() {
         public BackupImageView avatarImageView;
         public TextView nameTextView;
         public TextView messageTextView;
+        public MessageLayout messageLayout;
         public MessageActionLayout messageLayoutAction;
+        public TextView forwardedUserText;
+        public TextView foewardedUserName;
         public TextView timeTextView;
         public BackupImageView photoImage;
         public ImageView halfCheckImage;
@@ -3216,6 +3181,18 @@ public void update() {
 
             int type = message.type;
 
+            if (type == 0 || type == 1 || type == 8 || type == 9) {
+                int width;
+                if (currentChat != null && (type == 1 || type == 9)) {
+                    width = displaySize.x - Utilities.dp(122);
+                } else {
+                    width = displaySize.x - Utilities.dp(80);
+                }
+                messageLayout.maxWidth = width;
+                messageLayout.messageTextView.setText(message.messageText);
+                messageLayout.messageTextView.setMaxWidth(width);
+            }
+
             if (timeTextView != null) {
                 timeTextView.setText(Utilities.formatterDay.format((long) (message.messageOwner.date) * 1000));
             }
@@ -3234,7 +3211,12 @@ public void update() {
                 nameTextView.setTextColor(Utilities.getColorForId(message.messageOwner.from_id));
             }
 
-            if (type == 2 || type == 3 || type == 6 || type == 7) {
+            if (type == 8 || type == 9) {
+                TLRPC.User fwdUser = MessagesController.Instance.users.get(message.messageOwner.fwd_from_id);
+                if (fwdUser != null) {
+                    forwardedUserText.setText(Html.fromHtml(getStringEntry(R.string.From) + " <b>" + Utilities.formatName(fwdUser.first_name, fwdUser.last_name) + "</b>"));
+                }
+            } else if (type == 2 || type == 3 || type == 6 || type == 7) {
                 int width = (int)(Math.min(displaySize.x, displaySize.y) * 0.7f);
                 int height = width + Utilities.dp(100);
                 if (type == 6 || type == 7) {
@@ -3440,7 +3422,7 @@ public void update() {
                 }
             }
 
-            if (message.messageOwner.id < 0 && message.messageOwner.send_state != MessagesController.MESSAGE_SEND_STATE_SEND_ERROR && message.messageOwner.send_state != MessagesController.MESSAGE_SEND_STATE_SENT) {
+            if (message.messageOwner.id < 0 && message.messageOwner.send_state != MessagesController.MESSAGE_SEND_STATE_SENT) {
                 if (MessagesController.Instance.sendingMessages.get(message.messageOwner.id) == null) {
                     message.messageOwner.send_state = MessagesController.MESSAGE_SEND_STATE_SEND_ERROR;
                 }
@@ -3557,8 +3539,7 @@ public void update() {
                         } else {
                             load = true;
                         }
-                    }
-                    if (load && message.messageOwner.attachPath != null && message.messageOwner.attachPath.length() != 0 || !load && (message.messageOwner.attachPath == null || message.messageOwner.attachPath.length() == 0)) {
+                    } else {
                         File cacheFile = null;
                         if (((message.type == 2 || message.type == 3) && photoFileName == null) || (cacheFile = new File(Utilities.getCacheDir(), fileName)).exists()) {
                             if (actionAttachButton != null) {
@@ -3575,7 +3556,6 @@ public void update() {
                             if (photoProgressView != null) {
                                 photoProgressView.setVisibility(View.GONE);
                             }
-                            load = false;
                         } else {
                             load = true;
                         }
@@ -3653,7 +3633,10 @@ public void update() {
         public ChatListRowHolderEx(View view, int type) {
             avatarImageView = (BackupImageView)view.findViewById(R.id.chat_group_avatar_image);
             nameTextView = (TextView)view.findViewById(R.id.chat_user_group_name);
+            messageLayout = (MessageLayout)view.findViewById(R.id.message_layout);
             messageLayoutAction = (MessageActionLayout)view.findViewById(R.id.message_action_layout);
+            forwardedUserText = (TextView)view.findViewById(R.id.chat_text_forward_name);
+            foewardedUserName = (TextView)view.findViewById(R.id.chat_text_forward_text);
             timeTextView = (TextView)view.findViewById(R.id.chat_time_text);
             photoImage = (BackupImageView)view.findViewById(R.id.chat_photo_image);
             halfCheckImage = (ImageView)view.findViewById(R.id.chat_row_halfcheck);
@@ -3672,7 +3655,7 @@ public ChatListRowHolderEx(View view, int type) {
             chatBubbleView = view.findViewById(R.id.chat_bubble_layout);
             photoProgressView = view.findViewById(R.id.photo_progress);
             if (messageTextView != null) {
-                messageTextView.setTextSize(TypedValue.COMPLEX_UNIT_SP, MessagesController.Instance.fontSize);
+                messageTextView.setTextSize(TypedValue.COMPLEX_UNIT_SP, fontSize);
             }
 
             if (actionProgress != null) {
@@ -3755,23 +3738,6 @@ public boolean onLongClick(View v) {
                 });
             }
 
-            if (contactAvatar != null) {
-                contactAvatar.setOnClickListener(new View.OnClickListener() {
-                    @Override
-                    public void onClick(View view) {
-                        if (message.type == 18 || message.type == 19) {
-                            if (message.messageOwner.media.audio.user_id != UserConfig.clientUserId && message.messageOwner.media.audio.user_id != 0) {
-                                UserProfileActivity fragment = new UserProfileActivity();
-                                Bundle args = new Bundle();
-                                args.putInt("user_id", message.messageOwner.media.audio.user_id);
-                                fragment.setArguments(args);
-                                ((ApplicationActivity)parentActivity).presentFragment(fragment, "user_" + message.messageOwner.media.audio.user_id, false);
-                            }
-                        }
-                    }
-                });
-            }
-
             if (actionAttachButton != null) {
                 actionAttachButton.setOnClickListener(new View.OnClickListener() {
                     @Override
@@ -3861,6 +3827,22 @@ public boolean onLongClick(View v) {
                     }
                 });
             }
+
+            if (forwardedUserText != null) {
+                forwardedUserText.setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View view) {
+                        TLRPC.User fwdUser = MessagesController.Instance.users.get(message.messageOwner.fwd_from_id);
+                        if (fwdUser != null && fwdUser.id != UserConfig.clientUserId) {
+                            UserProfileActivity fragment = new UserProfileActivity();
+                            Bundle args = new Bundle();
+                            args.putInt("user_id", fwdUser.id);
+                            fragment.setArguments(args);
+                            ((ApplicationActivity)parentActivity).presentFragment(fragment, "user_" + fwdUser.id, false);
+                        }
+                    }
+                });
+            }
         }
 
         private void alertUserOpenError() {
@@ -3919,8 +3901,7 @@ private void processOnClick(View view) {
                     String fileName = message.getFileName();
                     if (message.messageOwner.attachPath != null && message.messageOwner.attachPath.length() != 0) {
                         f = new File(message.messageOwner.attachPath);
-                    }
-                    if (f == null || f != null && !f.exists()) {
+                    } else {
                         f = new File(Utilities.getCacheDir(), fileName);
                     }
                     if (f != null && f.exists()) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index 8e8f0e5d9..8c229867d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -489,7 +489,7 @@ private void sendLogs() {
             }
             Intent i = new Intent(Intent.ACTION_SEND_MULTIPLE);
             i.setType("message/rfc822") ;
-            i.putExtra(Intent.EXTRA_EMAIL, new String[]{"drklo.2kb@gmail.com"});
+            i.putExtra(Intent.EXTRA_EMAIL, new String[]{ConnectionsManager.SEND_LOGS_EMAIL});
             i.putExtra(Intent.EXTRA_SUBJECT, "last logs");
             i.putParcelableArrayListExtra(Intent.EXTRA_STREAM, uris);
             startActivity(Intent.createChooser(i, "Select email application."));
diff --git a/TMessagesProj/src/main/res/values-de/strings.xml b/TMessagesProj/src/main/res/values-de/strings.xml
index 2c9ec0b9f..a152988c4 100644
--- a/TMessagesProj/src/main/res/values-de/strings.xml
+++ b/TMessagesProj/src/main/res/values-de/strings.xml
@@ -6,348 +6,348 @@
     <string name="AppName">Telegram</string>
 
     <!--signin view-->
-    <string name="YourPhone">Uw telefoon</string>
-    <string name="StartText">Bevestig uw landcode\nen voer uw telefoonnummer in.</string>
-    <string name="ChooseCountry">Kies een land</string>
-    <string name="WrongCountry">Verkeerde landcode</string>
+    <string name="YourPhone">Dein Telefon</string>
+    <string name="StartText">Bitte bestätige deine Landesvorwahl und deine Telefonnummer.</string>
+    <string name="ChooseCountry">Wähle dein Land</string>
+    <string name="WrongCountry">Falscher Ländercode</string>
 
     <!--code enter view-->
-    <string name="YourCode">Uw code</string>
-    <string name="SentSmsCode">We hebben een sms met een activatiecode naar uw telefoon verstuurd</string>
-    <string name="CallText">We bellen u over</string>
-    <string name="Calling">We bellen u…</string>
+    <string name="YourCode">Dein Code</string>
+    <string name="SentSmsCode">Wir haben dir eine SMS mit einem Aktivierungscode zugeschickt: </string>
+    <string name="CallText">Wir rufen dich an in</string>
+    <string name="Calling">Wir rufen dich an …</string>
     <string name="Code">Code</string>
-    <string name="WrongNumber">Verkeerd nummer?</string>
+    <string name="WrongNumber">Falsche Nummer?</string>
 
     <!--signup view-->
-    <string name="YourName">Uw naam</string>
-    <string name="RegisterText">Stel uw voor- en achternaam in</string>
+    <string name="YourName">Dein Name</string>
+    <string name="RegisterText">Gib deinen Vor- und Nachnamen ein</string>
     <!--<string name="RegisterText">Set up your name and picture</string>-->
-    <string name="FirstName">Voornaam (verplicht)</string>
-    <string name="LastName">Achternaam (optioneel)</string>
-    <string name="CancelRegistration">Registratie annuleren</string>
+    <string name="FirstName">Vorname (erforderlich)</string>
+    <string name="LastName">Nachname (optional)</string>
+    <string name="CancelRegistration">Registrierung abbrechen</string>
 
     <!--chats view-->
-    <string name="Chats">Gesprekken</string>
-    <string name="Search">Zoeken</string>
-    <string name="NewMessages">Nieuwe berichten</string>
-    <string name="Settings">Instellingen</string>
-    <string name="Contacts">Contacten</string>
-    <string name="NewGroup">Nieuwe groep</string>
-    <string name="Yesterday">gisteren</string>
-    <string name="NoResult">Geen resultaten</string>
-    <string name="NoChats">Nog geen gesprekken…</string>
-    <string name="NoChatsHelp">Start met een gesprek\ndoor op de Opstellen-knop rechtsboven te drukken\nof ga naar de contactenlijst.</string>
-    <string name="WaitingForNetwork">Wachten op het netwerk…</string>
-    <string name="Connecting">Verbinden…</string>
-    <string name="Updating">Updaten…</string>
-    <string name="NewSecretChat">Nieuw privégesprek</string>
-    <string name="AwaitingEncryption">Wacht op %s om online te komen…</string>
-    <string name="EncryptionRejected">Privégesprek geannuleerd</string>
-    <string name="EncryptionProcessing">Encryptiesleutels uitwisselen…</string>
-    <string name="EncryptedChatStartedOutgoing">%s neemt nu deel aan het privégesprek.</string>
-    <string name="EncryptedChatStartedIncoming">U neemt nu deel aan het privégesprek.</string>
-    <string name="ClearHistory">Verwijder gespreksgeschiedenis</string>
-    <string name="DeleteChat">Verwijder en sluit dit gesprek</string>
-    <string name="HiddenName">Verborgen naam</string>
-    <string name="SelectChat">Kies gesprek</string>
+    <string name="Chats">Chats</string>
+    <string name="Search">Suche</string>
+    <string name="NewMessages">Neue Nachrichten</string>
+    <string name="Settings">Einstellungen</string>
+    <string name="Contacts">Kontakte</string>
+    <string name="NewGroup">Neue Gruppe</string>
+    <string name="Yesterday">gestern</string>
+    <string name="NoResult">Keine Ergebnisse</string>
+    <string name="NoChats">Noch keine Chats …</string>
+    <string name="NoChatsHelp">Fange an Telegram zu nutzen, indem du\neine neue Nachricht erstellst (rechte obere Ecke)\noder deine Kontakte aufrufst.</string>
+    <string name="WaitingForNetwork">Warte auf Verbindung …</string>
+    <string name="Connecting">Verbinde …</string>
+    <string name="Updating">Aktualisiere …</string>
+    <string name="NewSecretChat">Neuer geheimer Chat</string>
+    <string name="AwaitingEncryption">Warte, bis %s online geht …</string>
+    <string name="EncryptionRejected">Geheimen Chat abgelehnt</string>
+    <string name="EncryptionProcessing">Tausche Schlüssel aus …</string>
+    <string name="EncryptedChatStartedOutgoing">%s ist deinem geheimen Chat beigetreten.</string>
+    <string name="EncryptedChatStartedIncoming">Du bist dem geheimen Chat beigetreten.</string>
+    <string name="ClearHistory">Verlauf löschen</string>
+    <string name="DeleteChat">Löschen und beenden</string>
+    <string name="HiddenName">Versteckter Name</string>
+    <string name="SelectChat">Chat auswählen</string>
 
     <!--documents view-->
-    <string name="SelectFile">Kies bestand</string>
-    <string name="FreeOfTotal">Vrij: %1$s van %2$s</string>
-    <string name="UnknownError">Onbekende fout</string>
-    <string name="AccessError">Toegangsfout</string>
-    <string name="NoFiles">Nog geen bestanden…</string>
-    <string name="FileUploadLimit">De bestandsgrootte mag niet groter zijn dan %1$s</string>
-    <string name="NotMounted">Geen opslagmedium gevonden</string>
-    <string name="UsbActive">USB-overdracht actief</string>
-    <string name="InternalStorage">Interne opslag</string>
-    <string name="ExternalStorage">Externe opslag</string>
-    <string name="SystemRoot">Systeemroot</string>
-    <string name="SdCard">SD-kaart</string>
+    <string name="SelectFile">Datei auswählen</string>
+    <string name="FreeOfTotal">Freier Speicher: %1$s von %2$s</string>
+    <string name="UnknownError">Unbekannter Fehler</string>
+    <string name="AccessError">Zugriffsfehler</string>
+    <string name="NoFiles">Noch keine Dateien …</string>
+    <string name="FileUploadLimit">Die Datei darf nicht größer als %1$s sein</string>
+    <string name="NotMounted">Speicher nicht eingebunden</string>
+    <string name="UsbActive">USB-Transfer aktiv</string>
+    <string name="InternalStorage">Interner Speicher</string>
+    <string name="ExternalStorage">Externer Speicher</string>
+    <string name="SystemRoot">Systemverzeichnis</string>
+    <string name="SdCard">SD-Karte</string>
 
     <!--chat view-->
-    <string name="Invisible">onzichtbaar</string>
-    <string name="Typing">aan het typen…</string>
-    <string name="Attach">Bijlage</string>
-    <string name="IsTyping">is aan het typen…</string>
-    <string name="AreTyping">zijn aan het typen…</string>
-    <string name="AndMoreTyping">en nog %d mensen</string>
-    <string name="GotAQuestion">Heeft u een vraag\nover Telegram?</string>
-    <string name="ChatTakePhoto">Neem foto</string>
-    <string name="ChatGallery">Gallerij</string>
-    <string name="ChatLocation">Locatie</string>
+    <string name="Invisible">unsichtbar</string>
+    <string name="Typing">tippt …</string>
+    <string name="Attach">Anhängen</string>
+    <string name="IsTyping">tippt …</string>
+    <string name="AreTyping">tippen …</string>
+    <string name="AndMoreTyping">und %d weitere Personen</string>
+    <string name="GotAQuestion">Du hast eine Frage\nzu Telegram?</string>
+    <string name="ChatTakePhoto">Foto aufnehmen</string>
+    <string name="ChatGallery">Galerie</string>
+    <string name="ChatLocation">Standort</string>
     <string name="ChatVideo">Video</string>
-    <string name="ChatDocument">Document</string>
-    <string name="NoMessages">Nog geen berichten hier…</string>
-    <string name="ViewPhoto">Bekijk foto</string>
-    <string name="ViewLocation">Bekijk locatie</string>
-    <string name="ViewVideo">Speel video</string>
-    <string name="ForwardedMessage">Doorgestuurd bericht</string>
-    <string name="From">Van</string>
-    <string name="NoRecent">Niets recents</string>
-    <string name="Members">leden</string>
-    <string name="Message">Bericht</string>
-    <string name="TypeMessage">Type bericht</string>
+    <string name="ChatDocument">Dokument</string>
+    <string name="NoMessages">Noch keine Nachrichten …</string>
+    <string name="ViewPhoto">Foto anzeigen</string>
+    <string name="ViewLocation">Standort anzeigen</string>
+    <string name="ViewVideo">Video abspielen</string>
+    <string name="ForwardedMessage">Weitergeleitete Nachricht</string>
+    <string name="From">Von</string>
+    <string name="NoRecent">Keine aktuellen</string>
+    <string name="Members">Mitglieder</string>
+    <string name="Message">Nachricht</string>
+    <string name="TypeMessage">Nachricht verfassen</string>
     <string name="DOWNLOAD">Download</string>
-    <string name="Selected">Geselecteerd:</string>
-    <string name="ShareMyContactInfo">DEEL MIJN CONTACTINFORMATIE</string>
-    <string name="AddToContacts">VOEG TOE AAN CONTACTEN</string>
-    <string name="EncryptedPlaceholderTitleIncoming">%s heeft u uitgenodigd voor een privégesprek.</string>
-    <string name="EncryptedPlaceholderTitleOutgoing">U heeft %s uitgenodigd voor een privégesprek.</string>
-    <string name="EncryptedDescriptionTitle">Privégesprekken:</string>
-    <string name="EncryptedDescription1">Gebruik end-to-end versleuteling</string>
-    <string name="EncryptedDescription2">Laat geen sporen achter op onze server</string>
-    <string name="EncryptedDescription3">Gebruik een automatische zelfdestructie-timer</string>
-    <string name="EncryptedDescription4">Doorsturen niet toestaan</string>
-    <string name="OneNewMessage">%1$d nieuw bericht</string>
-    <string name="FewNewMessages">%1$d nieuwe berichten</string>
-    <string name="YouWereKicked">U bent uit deze groep gezet</string>
-    <string name="YouLeft">U hebt deze groep verlaten</string>
-    <string name="DeleteThisGroup">Verwijder deze groep</string>
-    <string name="SlideToCancel">SCHUIF OM TE ANNULEREN</string>
-
+    <string name="Selected">Ausgewählt:</string>
+    <string name="ShareMyContactInfo">TEILE MEINE KONTAKTDATEN</string>
+    <string name="AddToContacts">ZU KONTAKTEN HINZUFÜGEN</string>
+    <string name="EncryptedPlaceholderTitleIncoming">%s hat dich zu einem geheimen Chat eingeladen.</string>
+    <string name="EncryptedPlaceholderTitleOutgoing">Du hast %s zu einem geheimen Chat eingeladen.</string>
+    <string name="EncryptedDescriptionTitle">Geheime Chats:</string>
+    <string name="EncryptedDescription1">Verwenden End-to-End Verschlüsselung</string>
+    <string name="EncryptedDescription2">Hinterlassen keine Spuren auf unseren Servern</string>
+    <string name="EncryptedDescription3">Haben einen Selbstzerstörungs-Timer</string>
+    <string name="EncryptedDescription4">Erlauben keine Weiterleitung von Nachrichten</string>
+    <string name="OneNewMessage">%1$d neue Nachricht</string>
+    <string name="FewNewMessages">%1$d neue Nachrichten</string>
+    <string name="YouWereKicked">Du wurdest aus der Gruppe entfernt</string>
+    <string name="YouLeft">Du hast die Gruppe verlassen</string>
+    <string name="DeleteThisGroup">Diese Gruppe löschen</string>
+    <string name="SlideToCancel">WISCHEN UM ABZUBRECHEN</string>
+    
     <!--notification-->
-    <string name="EncryptedChatRequested">Privégesprek aangevraagd</string>
-    <string name="EncryptedChatAccepted">Privégesprek geaccepteerd</string>
-    <string name="MessageLifetimeChanged">%1$s heeft de zelfdestructie-timer ingesteld op %2$s</string>
-    <string name="MessageLifetimeChangedOutgoing">U heeft de zelfdestructie-timer ingesteld op %1$s</string>
-    <string name="MessageLifetimeRemoved">%1$s heeft de zelfdestructie-timer uitgeschakeld</string>
-    <string name="MessageLifetimeYouRemoved">U heeft de zelfdestructie-timer uitgeschakeld</string>
-    <string name="MessageLifetime2s">2 seconden</string>
-    <string name="MessageLifetime5s">5 seconden</string>
-    <string name="MessageLifetime1m">1 minuut</string>
-    <string name="MessageLifetime1h">1 uur</string>
-    <string name="MessageLifetime1d">1 dag</string>
-    <string name="MessageLifetime1w">1 week</string>
-    <string name="YouHaveNewMessage">U heeft een nieuw bericht</string>
+    <string name="EncryptedChatRequested">Geheimen Chat angefordert</string>
+    <string name="EncryptedChatAccepted">Geheimen Chat angenommen</string>
+    <string name="MessageLifetimeChanged">%1$s hat den Selbstzerstörungs-Timer auf %2$s gesetzt</string>
+    <string name="MessageLifetimeChangedOutgoing">Du hast den Selbstzerstörungs-Timer auf %1$s gesetzt</string>
+    <string name="MessageLifetimeRemoved">%1$s hat den Selbstzerstörungs-Timer deaktivert</string>
+    <string name="MessageLifetimeYouRemoved">Du hast den Selbstzerstörungs-Timer deaktivert</string>
+    <string name="MessageLifetime2s">2 Sekunden</string>
+    <string name="MessageLifetime5s">5 Sekunden</string>
+    <string name="MessageLifetime1m">1 Minute</string>
+    <string name="MessageLifetime1h">1 Stunde</string>
+    <string name="MessageLifetime1d">1 Tag</string>
+    <string name="MessageLifetime1w">1 Woche</string>
+    <string name="YouHaveNewMessage">Du hast eine neue Nachricht</string>
     <string name="NotificationMessageText">%1$s: %2$s</string>
-    <string name="NotificationMessageNoText">%1$s heeft u een bericht gestuurd</string>
-    <string name="NotificationMessagePhoto">%1$s heeft u een foto gestuurd</string>
-    <string name="NotificationMessageVideo">%1$s heeft u een video gestuurd</string>
-    <string name="NotificationMessageContact">%1$s heeft een contact met u gedeeld</string>
-    <string name="NotificationMessageMap">%1$s heeft u een kaart gestuurd</string>
-    <string name="NotificationMessageDocument">%1$s heeft u een document gestuurd</string>
-    <string name="NotificationMessageAudio">%1$s heeft u een geluidsbestand gestuurd</string>
+    <string name="NotificationMessageNoText">%1$s hat dir eine Nachricht gesendet</string>
+    <string name="NotificationMessagePhoto">%1$s hat dir ein Foto gesendet</string>
+    <string name="NotificationMessageVideo">%1$s hat dir ein Video gesendet</string>
+    <string name="NotificationMessageContact">%1$s hat dir einen Kontakt gesendet</string>
+    <string name="NotificationMessageMap">%1$s hat dir einen Standort gesendet</string>
+    <string name="NotificationMessageDocument">%1$s hat dir ein Dokument gesendet</string>
+    <string name="NotificationMessageAudio">%1$s hat dir eine Audio-Datei gesendet</string>
     <string name="NotificationMessageGroupText">%1$s @ %2$s: %3$s</string>
-    <string name="NotificationMessageGroupNoText">%1$s heeft een bericht gestuurd naar de groep %2$s</string>
-    <string name="NotificationMessageGroupPhoto">%1$s heeft een foto gestuurd naar de groep %2$s</string>
-    <string name="NotificationMessageGroupVideo">%1$s heeft een video gestuurd naar de groep %2$s</string>
-    <string name="NotificationMessageGroupContact">%1$s heeft een contact gedeeld met de groep %2$s</string>
-    <string name="NotificationMessageGroupMap">%1$s heeft een kaart gestuurd naar de groep %2$s</string>
-    <string name="NotificationMessageGroupDocument">%1$s heeft een document gestuurd naar de groep %2$s</string>
-    <string name="NotificationMessageGroupAudio">%1$s heeft een audiobestand gestuurd naar de groep %2$s</string>
-    <string name="NotificationInvitedToGroup">%1$s heeft u uitgenodigd voor de groep %2$s</string>
-    <string name="NotificationEditedGroupName">%1$s heeft de naam van de groep %2$s aangepast</string>
-    <string name="NotificationEditedGroupPhoto">%1$s heeft de foto van de groep %2$s aangepast</string>
-    <string name="NotificationGroupAddMember">%1$s nodigt %3$s uit voor de groep %2$s</string>
-    <string name="NotificationGroupKickMember">%1$s zette %3$s uit de groep %2$s</string>
-    <string name="NotificationGroupKickYou">%1$s heeft u uit de groep %2$s gezet</string>
-    <string name="NotificationGroupLeftMember">%1$s heeft de groep %2$s verlaten</string>
-    <string name="NotificationContactJoined">%1$s heeft nu Telegram!</string>
-    <string name="NotificationUnrecognizedDevice">%1$s,\nWe hebben een nieuwe aanmelding op uw account gedetecteerd van een nieuw apparaat op 2$s\n\nApparaat: %3$s\nLocatie: %4$s\n\nAls u dit niet was, kunt u naar Instellingen - Alle andere sessies beëindigen.\n\nHet Telegram Team</string>
-    <string name="NotificationContactNewPhoto">%1$s heeft zijn profielfoto aangepast</string>
+    <string name="NotificationMessageGroupNoText">%1$s hat eine Nachricht an die Gruppe %2$s gesendet</string>
+    <string name="NotificationMessageGroupPhoto">%1$s hat ein Foto an die Gruppe %2$s gesendet</string>
+    <string name="NotificationMessageGroupVideo">%1$s hat ein Video an die Gruppe %2$s gesendet</string>
+    <string name="NotificationMessageGroupContact">%1$s hat einen Kontakt an die Gruppe %2$s gesendet</string>
+    <string name="NotificationMessageGroupMap">%1$s hat einen Standort an die Gruppe %2$s gesendet</string>
+    <string name="NotificationMessageGroupDocument">%1$s hat ein Dokument an die Gruppe %2$s gesendet</string>
+    <string name="NotificationMessageGroupAudio">%1$s hat eine Audio-Datei an die Gruppe %2$s gesendet</string>
+    <string name="NotificationInvitedToGroup">%1$s hat dich in die Gruppe %2$s eingeladen</string>
+    <string name="NotificationEditedGroupName">%1$s hat den Namen der Gruppe %2$s geändert</string>
+    <string name="NotificationEditedGroupPhoto">%1$s hat das Foto der Gruppe %2$s bearbeitet</string>
+    <string name="NotificationGroupAddMember">%1$s hat %3$s in die Gruppe %2$s eingeladen</string>
+    <string name="NotificationGroupKickMember">%1$s hat %3$s aus der Gruppe %2$s entfernt</string>
+    <string name="NotificationGroupKickYou">%1$s hat dich aus der Gruppe %2$s entfernt</string>
+    <string name="NotificationGroupLeftMember">%1$s hat die Gruppe %2$s verlassen</string>
+    <string name="NotificationContactJoined">%1$s benutzt jetzt Telegram!</string>
+    <string name="NotificationUnrecognizedDevice">%1$s,\n\nwir haben einen Zugriff auf dein Konto von einem neuen Gerät am %2$s erkannt.\n\nGerät: %3$s\nStandort: %4$s\n\nWenn du das nicht gewesen bist, kannst du in den Einstellungen alle Sitzungen beenden.\n\nDanke,\ndas Telegram Team</string>
+    <string name="NotificationContactNewPhoto">%1$s hat das Profilbild geändert</string>
 
     <!--contacts view-->
-    <string name="SelectContact">Contactpersoon selecteren</string>
-    <string name="NoContacts">Nog geen contactpersonen</string>
-    <string name="InviteText">Hey, zullen we overstappen op Telegram: http://telegram.org/dl2</string>
-    <string name="TodayAt">vandaag om</string>
-    <string name="YesterdayAt">gisteren om</string>
-    <string name="OtherAt">om</string>
-    <string name="Online">online</string>
-    <string name="Offline">offline</string>
-    <string name="LastSeen">laatst gezien:</string>
-    <string name="LastSeenDate">laatst gezien:</string>
-    <string name="InviteFriends">Vrienden uitnodigen</string>
+    <string name="SelectContact">Kontakt auswählen</string>
+    <string name="NoContacts">Noch keine Kontakte</string>
+    <string name="InviteText">Hey, lass uns zu Telegram wechseln: http://telegram.org/dl2</string>
+    <string name="TodayAt">heute um</string>
+    <string name="YesterdayAt">gestern um</string>
+    <string name="OtherAt">um</string>
+    <string name="Online">Online</string>
+    <string name="Offline">Offline</string>
+    <string name="LastSeen">Zuletzt online</string>
+    <string name="LastSeenDate">Zuletzt online</string>
+    <string name="InviteFriends">Freunde einladen</string>
 
     <!--group create view-->
-    <string name="SendMessageTo">Bericht sturen naar…</string>
-    <string name="EnterGroupNamePlaceholder">Groepsnaam invullen</string>
-    <string name="MEMBER">LID</string>
-    <string name="GroupName">Groepsnaam</string>
-    <string name="MEMBERS">LEDEN</string>
-    <string name="AllContacts">ALLE CONTACTPERSONEN</string>
+    <string name="SendMessageTo">Sende Nachricht an …</string>
+    <string name="EnterGroupNamePlaceholder">Gruppennamen eingeben</string>
+    <string name="MEMBER">MITGLIED</string>
+    <string name="GroupName">Gruppenname</string>
+    <string name="MEMBERS">MITGLIEDER</string>
+    <string name="AllContacts">ALLE KONTAKTE</string>
 
     <!--group info view-->
-    <string name="EnterGroupNameTitle">GROEPSNAAM INVULLEN</string>
-    <string name="SharedMedia">Gedeelde media</string>
-    <string name="GroupInfo">Groepsinformatie</string>
-    <string name="SHAREDMEDIA">GEDEELDE MEDIA</string>
-    <string name="SETTINGS">INSTELLINGEN</string>
-    <string name="AddMember">Lid toevoegen</string>
-    <string name="DeleteAndExit">Verwijderen en groep verlaten</string>
-    <string name="Notifications">Meldingen</string>
-    <string name="KickFromGroup">Uit de groep zetten</string>
+    <string name="EnterGroupNameTitle">GRUPPENNAMEN EINGEBEN</string>
+    <string name="SharedMedia">Geteilte Medien</string>
+    <string name="GroupInfo">Gruppeninfo</string>
+    <string name="SHAREDMEDIA">GETEILTE MEDIEN</string>
+    <string name="SETTINGS">EINSTELLUNGEN</string>
+    <string name="AddMember">Mitglied hinzufügen</string>
+    <string name="DeleteAndExit">Gruppe löschen und verlassen</string>
+    <string name="Notifications">Benachrichtigungen</string>
+    <string name="KickFromGroup">Aus Gruppe entfernen</string>
 
     <!--contact info view-->
-    <string name="ShareContact">Delen</string>
-    <string name="AddContact">Toevoegen</string>
-    <string name="BlockContact">Blokkeren</string>
-    <string name="EditContact">Bewerken</string>
-    <string name="DeleteContact">Verwijderen</string>
-    <string name="PhoneHome">THUIS</string>
-    <string name="PhoneMobile">MOBIEL</string>
-    <string name="PhoneWork">WERK</string>
-    <string name="PhoneOther">OVERIG</string>
-    <string name="PhoneMain">HOOFD</string>
-    <string name="ContactInfo">Contactgegevens</string>
-    <string name="PHONE">TELEFOON</string>
-    <string name="StartEncryptedChat">Privégesprek starten</string>
-    <string name="CreateEncryptedChatError">Er is een fout opgetreden.</string>
-    <string name="CreateEncryptedChatOutdatedError">Kan geen privégesprek starten met %1$s.\n\n%2$s gebruikt een oudere versie van Telegram en moet eerst een update installeren.</string>
-    <string name="SecretTitle">Privégesprek</string>
-    <string name="EncryptionKey">Encryptiesleutel</string>
-    <string name="MessageLifetime">Zelfdestructie-timer</string>
-    <string name="ShortMessageLifetimeForever">Uit</string>
-    <string name="ShortMessageLifetime2s">2s</string>
-    <string name="ShortMessageLifetime5s">5s</string>
-    <string name="ShortMessageLifetime1m">1m</string>
-    <string name="ShortMessageLifetime1h">1u</string>
-    <string name="ShortMessageLifetime1d">1d</string>
-    <string name="ShortMessageLifetime1w">1w</string>
-    <string name="EncryptionKeyDescription">Deze afbeelding is een weergave van de encryptiesleutel van het privégesprek met <![CDATA[<b>]]>%1$s<![CDATA[</b>]]>.<![CDATA[<br><br>]]>Als deze afbeelding er hetzelfde uitziet als op de telefoon van<![CDATA[<b>]]>%2$s<![CDATA[</b>]]>, dan is uw gesprek 200%% veilig.<![CDATA[<br><br>]]>Lees meer op telegram.org</string>
+    <string name="ShareContact">Teilen</string>
+    <string name="AddContact">Hinzufügen</string>
+    <string name="BlockContact">Blockieren</string>
+    <string name="EditContact">Bearbeiten</string>
+    <string name="DeleteContact">Löschen</string>
+    <string name="PhoneHome">FESTNETZ</string>
+    <string name="PhoneMobile">MOBIL</string>
+    <string name="PhoneWork">ARBEIT</string>
+    <string name="PhoneOther">ANDERE</string>
+    <string name="PhoneMain">HAUPTNUMMER</string>
+    <string name="ContactInfo">Kontaktdaten</string>
+    <string name="PHONE">TELEFON</string>
+    <string name="StartEncryptedChat">Geheimen Chat starten</string>
+    <string name="CreateEncryptedChatError">Es ist ein Fehler aufgetreten.</string>
+    <string name="CreateEncryptedChatOutdatedError">Konnte keinen geheimen Chat mit %1$s starten.\n\n%2$s benutzt eine ältere Version von Telegram und muss diese erst aktualisieren.</string>
+    <string name="SecretTitle">Geheimer Chat</string>
+    <string name="EncryptionKey">Geheimer Schlüssel</string>
+    <string name="MessageLifetime">Selbstzerstörungs-Timer</string>
+    <string name="ShortMessageLifetimeForever">Aus</string>
+    <string name="ShortMessageLifetime2s">2 Sek.</string>
+    <string name="ShortMessageLifetime5s">5 Sek.</string>
+    <string name="ShortMessageLifetime1m">1 Min.</string>
+    <string name="ShortMessageLifetime1h">1 Std.</string>
+    <string name="ShortMessageLifetime1d">1 Tag</string>
+    <string name="ShortMessageLifetime1w">1 Woche</string>
+    <string name="EncryptionKeyDescription">Dieses Bild ist eine Visualisierung des geheimen Schlüssels für den geheimen Chat mit <![CDATA[<b>]]>%1$s<![CDATA[</b>]]>.<![CDATA[<br><br>]]>Wenn dieses Bild auf <![CDATA[<b>]]>%2$s\s<![CDATA[</b>]]> Telefon genau so aussieht, ist euer Chat zu 200%% sicher.<![CDATA[<br><br>]]>Erfahre mehr über die Sicherheit auf telegram.org</string>
 
     <!--settings view-->
-    <string name="ResetNotificationsText">Alle meldingsinstellingen naar standaardinstellingen herstellen</string>
-    <string name="TextSize">Tekstgrootte berichten</string>
-    <string name="AskAQuestion">Stel een vraag</string>
-    <string name="EnableAnimations">Animaties inschakelen</string>
-    <string name="Unblock">Deblokkeren</string>
-    <string name="UnblockText">Druk langdurig op een gebruiker om deze te deblokkeren.</string>
-    <string name="NoBlocked">Nog geen geblokkeerde gebruikers</string>
-    <string name="YourPhoneNumber">UW TELEFOONNUMMER</string>
-    <string name="MessageNotifications">BERICHTMELDINGEN</string>
-    <string name="Alert">Melding</string>
-    <string name="MessagePreview">Bericht weergeven</string>
-    <string name="GroupNotifications">GROEPSMELDINGEN</string>
-    <string name="Sound">Geluid</string>
-    <string name="InAppNotifications">IN-APP MELDINGEN</string>
-    <string name="InAppSounds">In-App geluiden</string>
-    <string name="InAppVibrate">In-App trillen</string>
-    <string name="Vibrate">Trillen</string>
-    <string name="InAppPreview">In-App weergave</string>
-    <string name="Reset">HERSTELLEN</string>
-    <string name="ResetAllNotifications">Alle meldingen herstellen</string>
-    <string name="UndoAllCustom">Maak alle aangepaste instellingen voor meldingen ongedaan voor alle contacten en groepen</string>
-    <string name="NotificationsAndSounds">Meldingen en geluiden</string>
-    <string name="BlockedUsers">Geblokkeerde gebruikers</string>
-    <string name="SaveIncomingPhotos">Inkomende foto\’s bewaren</string>
-    <string name="LogOut">Uitloggen</string>
-    <string name="YourFirstNameAndLastName">UW VOOR- EN ACHTERNAAM</string>
-    <string name="NoSound">Geen geluid</string>
-    <string name="Default">Standaard</string>
-    <string name="Support">ONDERSTEUNING</string>
-    <string name="ChatBackground">Gespreksachtergrond</string>
-    <string name="MessagesSettings">BERICHTEN</string>
-    <string name="SendByEnter">Versturen met Enter</string>
-    <string name="TerminateAllSessions">Alle andere sessies beëindigen</string>
-    <string name="AutomaticPhotoDownload">AUTOMATISCH FOTO\’S DOWNLOADEN</string>
-    <string name="AutomaticPhotoDownloadGroups">Groepen</string>
-    <string name="AutomaticPhotoDownloadPrivateChats">Privégesprekken</string>
-    <string name="Events">GEBEURTENISSEN</string>
-    <string name="ContactJoined">Contact aangemeld bij Telegram</string>
+    <string name="ResetNotificationsText">Alle Einstellungen für Benachrichtigungen zurücksetzen</string>
+    <string name="TextSize">Textgröße für Nachrichten</string>
+    <string name="AskAQuestion">Eine Frage stellen</string>
+    <string name="EnableAnimations">Animationen aktivieren</string>
+    <string name="Unblock">Entsperren</string>
+    <string name="UnblockText">Tippe und halte einen Benutzer um ihn freizugeben.</string>
+    <string name="NoBlocked">Keine blockierten Benutzer</string>
+    <string name="YourPhoneNumber">DEINE TELEFONNUMMER</string>
+    <string name="MessageNotifications">BENACHRICHTIGUNGEN FÜR NACHRICHTEN</string>
+    <string name="Alert">Warnung</string>
+    <string name="MessagePreview">Nachrichtenvorschau</string>
+    <string name="GroupNotifications">BENACHRICHTIGUNGEN FÜR GRUPPEN</string>
+    <string name="Sound">Ton</string>
+    <string name="InAppNotifications">IN-APP BENACHRICHTIGUNGEN</string>
+    <string name="InAppSounds">In-App Töne</string>
+    <string name="InAppVibrate">In-App Vibration</string>
+    <string name="Vibrate">Vibrieren</string>
+    <string name="InAppPreview">In-App Vorschau</string>
+    <string name="Reset">ZURÜCKSETZEN</string>
+    <string name="ResetAllNotifications">Alle Benachrichtigungen zurücksetzen</string>
+    <string name="UndoAllCustom">Setze alle benutzerdefinierten Benachrichtigungen für deine Kontakte zurück</string>
+    <string name="NotificationsAndSounds">Benachrichtigungen und Töne</string>
+    <string name="BlockedUsers">Blockierte Benutzer</string>
+    <string name="SaveIncomingPhotos">Speichere eingehende Bilder</string>
+    <string name="LogOut">Abmelden</string>
+    <string name="YourFirstNameAndLastName">DEIN VOR- UND NACHNAME</string>
+    <string name="NoSound">Kein Ton</string>
+    <string name="Default">Standard</string>
+    <string name="Support">SUPPORT</string>
+    <string name="ChatBackground">Chat-Hintergrundbild</string>
+    <string name="MessagesSettings">NACHRICHTEN</string>
+    <string name="SendByEnter">Mit <![CDATA[<b>Enter</b>]]> senden</string>
+    <string name="TerminateAllSessions">Alle anderen Sitzungen beenden</string>
+    <string name="AutomaticPhotoDownload">AUTOMATISCHER BILDERDOWNLOAD</string>
+    <string name="AutomaticPhotoDownloadGroups">Gruppen</string>
+    <string name="AutomaticPhotoDownloadPrivateChats">Private Chats</string>
+    <string name="Events">EVENTS</string>
+    <string name="ContactJoined">Kontakt ist Telegram beigetreten</string>
 
     <!--media view-->
-    <string name="NoMedia">Nog geen media gedeeld</string>
-    <string name="CancelDownload">Downloaden annuleren</string>
+    <string name="NoMedia">Noch keine geteilten Medien vorhanden</string>
+    <string name="CancelDownload">Download abbrechen</string>
 
     <!--map view-->
-    <string name="MyLocation">Mijn locatie</string>
-    <string name="Map">Kaart</string>
-    <string name="Satellite">Luchtfoto</string>
-    <string name="Hybrid">Hybride</string>
-    <string name="MetersAway">m verderop</string>
-    <string name="KMetersAway">km verderop</string>
-    <string name="SendLocation">Locatie verzenden</string>
-    <string name="ShareLocation">Locatie delen</string>
+    <string name="MyLocation">Mein Standort</string>
+    <string name="Map">Karte</string>
+    <string name="Satellite">Satellit</string>
+    <string name="Hybrid">Hybrid</string>
+    <string name="MetersAway">m entfernt</string>
+    <string name="KMetersAway">km entfernt</string>
+    <string name="SendLocation">Sende Standort</string>
+    <string name="ShareLocation">Teile Standort</string>
 
     <!--photo gallery view-->
-    <string name="ShowAllMedia">Alle media tonen</string>
-    <string name="SaveToGallery">Naar galerij opslaan</string>
-    <string name="Of">van</string>
-    <string name="Gallery">Galerij</string>
+    <string name="ShowAllMedia">Zeige alle Medien</string>
+    <string name="SaveToGallery">In der Galerie speichern</string>
+    <string name="Of">von</string>
+    <string name="Gallery">Galerie</string>
 
     <!--button titles-->
-    <string name="Next">Volgende</string>
-    <string name="Back">Vorige</string>
-    <string name="Done">Klaar</string>
-    <string name="Open">Open</string>
-    <string name="Cancel">Annuleren</string>
-    <string name="Add">Toevoegen</string>
-    <string name="Edit">Bewerken</string>
-    <string name="Send">Versturen</string>
-    <string name="Call">Bellen</string>
-    <string name="Copy">Kopiëren</string>
-    <string name="Delete">Verwijderen</string>
-    <string name="Forward">Doorsturen</string>
-    <string name="Retry">Opnieuw proberen</string>
-    <string name="FromCamera">Van camera</string>
-    <string name="FromGalley">Van galerij</string>
-    <string name="DeletePhoto">Foto verwijderen</string>
-    <string name="OpenPhoto">Foto openen</string>
-    <string name="Set">Instellen</string>
+    <string name="Next">Weiter</string>
+    <string name="Back">Zurück</string>
+    <string name="Done">Fertig</string>
+    <string name="Open">Öffnen</string>
+    <string name="Cancel">Abbrechen</string>
+    <string name="Add">Hinzufügen</string>
+    <string name="Edit">Bearbeiten</string>
+    <string name="Send">Senden</string>
+    <string name="Call">Anrufen</string>
+    <string name="Copy">Kopieren</string>
+    <string name="Delete">Löschen</string>
+    <string name="Forward">Weiterleiten</string>
+    <string name="Retry">Erneut versuchen</string>
+    <string name="FromCamera">Von der Kamera</string>
+    <string name="FromGalley">Von der Galerie</string>
+    <string name="DeletePhoto">Foto löschen</string>
+    <string name="OpenPhoto">Foto öffnen</string>
+    <string name="Set">Wählen</string>
     <string name="OK">OK</string>
 
     <!--messages-->
-    <string name="ActionKickUser">un1 heeft un2 verwijderd</string>
-    <string name="ActionLeftUser">un1 heeft de groep verlaten</string>
-    <string name="ActionAddUser">un1 heeft un2 toegevoegd</string>
-    <string name="ActionRemovedPhoto">un1 heeft de groepsfoto verwijderd</string>
-    <string name="ActionChangedPhoto">un1 heeft de groepsfoto veranderd</string>
-    <string name="ActionChangedTitle">un1 heeft de groepsnaam veranderd naar un2</string>
-    <string name="ActionCreateGroup">un1 heeft de groep gemaakt</string>
-    <string name="ActionYouKickUser">U hebt un2 verwijderd</string>
-    <string name="ActionYouLeftUser">U hebt de groep verlaten</string>
-    <string name="ActionYouAddUser">U hebt un2 toegevoegd</string>
-    <string name="ActionYouRemovedPhoto">U heeft de groepsafbeelding verwijderd</string>
-    <string name="ActionYouChangedPhoto">U heeft de groepsafbeelding veranderd</string>
-    <string name="ActionYouChangedTitle">U heeft de groepsnaam veranderd in un2</string>
-    <string name="ActionYouCreateGroup">U heeft de groep gemaakt</string>
-    <string name="ActionKickUserYou">un1 heeft u verwijderd</string>
-    <string name="ActionAddUserYou">un1 heeft u toegevoegd</string>
-    <string name="UnsuppotedMedia">Dit bericht wordt niet ondersteund op uw versie van Telegram.</string>
+    <string name="ActionKickUser">un1 hat un2 aus der Gruppe entfernt</string>
+    <string name="ActionLeftUser">un1 hat die Gruppe verlassen</string>
+    <string name="ActionAddUser">un1 hat un2 hinzugefügt</string>
+    <string name="ActionRemovedPhoto">un1 hat das Gruppenbild gelöscht</string>
+    <string name="ActionChangedPhoto">un1 hat das Gruppenbild geändert</string>
+    <string name="ActionChangedTitle">un1 hat den Namen der Gruppe zu un2 geändert</string>
+    <string name="ActionCreateGroup">un1 hat die Gruppe erstellt</string>
+    <string name="ActionYouKickUser">Du hast un2 aus der Gruppe entfernt</string>
+    <string name="ActionYouLeftUser">Du hast die Gruppe verlassen</string>
+    <string name="ActionYouAddUser">Du hast un2 hinzugefügt</string>
+    <string name="ActionYouRemovedPhoto">Du hast das Gruppenbild gelöscht</string>
+    <string name="ActionYouChangedPhoto">Du hast das Gruppenbild geändert</string>
+    <string name="ActionYouChangedTitle">Du hast den Gruppennamen zu un2 geändert</string>
+    <string name="ActionYouCreateGroup">Du hast die Gruppe erstellt</string>
+    <string name="ActionKickUserYou">un1 hat dich aus der Gruppe entfernt</string>
+    <string name="ActionAddUserYou">un1 hat dich hinzugefügt</string>
+    <string name="UnsuppotedMedia">Diese Nachricht wird von deiner Telegram-Version nicht unterstützt.</string>
     <string name="AttachPhoto">Foto</string>
     <string name="AttachVideo">Video</string>
-    <string name="AttachLocation">Locatie</string>
-    <string name="AttachContact">Contactpersoon</string>
-    <string name="AttachDocument">Document</string>
-    <string name="AttachAudio">Geluid</string>
-    <string name="FromYou">U</string>
+    <string name="AttachLocation">Standort</string>
+    <string name="AttachContact">Kontakt</string>
+    <string name="AttachDocument">Dokument</string>
+    <string name="AttachAudio">Audio</string>
+    <string name="FromYou">Du</string>
 
     <!--Alert messages-->
-    <string name="InvalidPhoneNumber">Ongeldig telefoonnummer</string>
-    <string name="CodeExpired">Code verlopen, log opnieuw in</string>
-    <string name="FloodWait">Te veel pogingen, probeer het later nogmaals</string>
-    <string name="InvalidCode">Ongeldige code</string>
-    <string name="InvalidFirstName">Ongeldige voornaam</string>
-    <string name="InvalidLastName">Ongeldige achternaam</string>
-    <string name="Loading">Laden…</string>
-    <string name="NoPlayerInstalled">U heeft geen videospeler, installeer een videospeler om verder te gaan</string>
-    <string name="NoHandleAppInstalled">U heeft geen enkele applicatie die MIME type \‘%1$s\’ kan verwerken, installeer hier een applicatie voor om verder te gaan</string>
-    <string name="InviteUser">Deze gebruiker heeft nog geen Telegram, uitnodiging sturen?</string>
-    <string name="AreYouSure">Weet u het zeker?</string>
-    <string name="AddContactQ">Contactpersoon toevoegen?</string>
-    <string name="AddToTheGroup">%1$s aan de groep toevoegen?</string>
-    <string name="ForwardMessagesTo">Berichten doorsturen naar %1$s?</string>
-    <string name="DeleteChatQuestion">Deze chat verwijderen?</string>
+    <string name="InvalidPhoneNumber">Ungültige Telefonnummer</string>
+    <string name="CodeExpired">Code ist abgelaufen, bitte melde dich erneut an</string>
+    <string name="FloodWait">Zu viele Versuche in zu kurzer Zeit, versuche es bitte später erneut.</string>
+    <string name="InvalidCode">Ungültiger Code</string>
+    <string name="InvalidFirstName">Ungültiger Vorname</string>
+    <string name="InvalidLastName">Ungültiger Nachname</string>
+    <string name="Loading">Lädt …</string>
+    <string name="NoPlayerInstalled">Du hast keinen Videoplayer. Bitte installiere einen um fortzufahren.</string>
+    <string name="NoHandleAppInstalled">Du hast keine App, die den Dokumententyp \'%1$s\' öffnen kann.</string>
+    <string name="InviteUser">Dieser Benutzer hat noch kein Telegram. Möchtest du ihn einladen?</string>
+    <string name="AreYouSure">Bist du sicher?</string>
+    <string name="AddContactQ">Kontakt hinzufügen?</string>
+    <string name="AddToTheGroup">%1$s zur Gruppe hinzufügen?</string>
+    <string name="ForwardMessagesTo">Nachrichten an %1$s weiterleiten?</string>
+    <string name="DeleteChatQuestion">Diesen Chat löschen?</string>
 
     <!--Intro view-->
     <string name="Page1Title">Telegram</string>
-    <string name="Page2Title">Snel</string>
-    <string name="Page3Title">Gratis</string>
-    <string name="Page4Title">Veilig</string>
-    <string name="Page5Title">Krachtig</string>
-    <string name="Page6Title">In de cloud</string>
-    <string name="Page7Title">Privé</string>
-    <string name="Page1Message">Welkom in het tijdperk van snel en veilig chatten</string>
-    <string name="Page2Message"><![CDATA[<b>Telegram</b>]]> bezorgt berichten sneller<![CDATA[<br/>]]>dan elke andere app</string>
-    <string name="Page3Message"><![CDATA[<b>Telegram</b>]]> is altijd gratis. Geen advertenties.<![CDATA[<br/>]]>Geen abonnementskosten</string>
-    <string name="Page4Message"><![CDATA[<b>Telegram</b>]]> beveiligt uw berichten<![CDATA[<br/>]]>tegen hackers</string>
-    <string name="Page5Message"><![CDATA[<b>Telegram</b>]]> heeft geen beperkingen op de grootte<![CDATA[<br/>]]>van uw media en gesprekken</string>
-    <string name="Page6Message"><![CDATA[<b>Telegram</b>]]> biedt toegang tot uw berichten<![CDATA[<br/>]]>vanaf meerdere apparaten</string>
-    <string name="Page7Message"><![CDATA[<b>Telegram</b>]]> berichten zijn sterk versleuteld<![CDATA[<br/>]]>en kunnen zichzelf vernietigen</string>
-    <string name="StartMessaging">Start met chatten</string>
+    <string name="Page2Title">Schnell</string>
+    <string name="Page3Title">Kostenlos</string>
+    <string name="Page4Title">Sicher</string>
+    <string name="Page5Title">Leistungsstark</string>
+    <string name="Page6Title">Cloud-Basiert</string>
+    <string name="Page7Title">Vertraulich</string>
+    <string name="Page1Message">Willkommen im Zeitalter der sicheren und schnellen Kommunikation.</string>
+    <string name="Page2Message"><![CDATA[<b>Telegram</b>]]> stellt Nachrichten schneller<![CDATA[<br/>]]>zu als andere Anwendungen</string>
+    <string name="Page3Message"><![CDATA[<b>Telegram</b>]]> ist für immer kostenlos.<![CDATA[<br/>]]>Keine Werbung. Keine wiederkehrenden Kosten.</string>
+    <string name="Page4Message"><![CDATA[<b>Telegram</b>]]> schützt deine Nachrichten<![CDATA[<br/>]]>vor Hacker-Angriffen</string>
+    <string name="Page5Message"><![CDATA[<b>Telegram</b>]]> hat keine Grenzen in Sachen<![CDATA[<br/>]]>Größe deiner Chats und Medien</string>
+    <string name="Page6Message"><![CDATA[<b>Telegram</b>]]> lässt sich von verschiedenen<![CDATA[<br/>]]>Geräten gleichzeitig nutzen</string>
+    <string name="Page7Message"><![CDATA[<b>Telegram</b>]]>-Nachrichten sind stark<![CDATA[<br/>]]>verschlüsselt und können sich selbst zerstören</string>
+    <string name="StartMessaging">Jetzt beginnen</string>
 
     <!--Don't change this! Not for localization!-->
     <string name="CacheTag">CACHE_TAG</string>
