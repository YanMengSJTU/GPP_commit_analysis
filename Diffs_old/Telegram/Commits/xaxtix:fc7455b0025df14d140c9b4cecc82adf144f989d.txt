diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BottomSheet.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BottomSheet.java
index 69ab12b86..65244130c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BottomSheet.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BottomSheet.java
@@ -474,7 +474,7 @@ public boolean canDismiss() {
         public BottomSheetCell(Context context, int type) {
             super(context);
 
-            setBackground(Theme.getSelectorDrawable(false));
+            setBackgroundDrawable(Theme.getSelectorDrawable(false));
             //setPadding(AndroidUtilities.dp(16), 0, AndroidUtilities.dp(16), 0);
 
             imageView = new ImageView(context);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 1d8171b52..a0fa58ff8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -11832,7 +11832,6 @@ private void hideActionMode() {
         cantDeleteMessagesCount = 0;
         canEditMessagesCount = 0;
         cantForwardMessagesCount = 0;
-
         if (chatActivityEnterView != null && ChatObject.canWriteToChat(currentChat)) {
             EditTextCaption editTextCaption = chatActivityEnterView.getEditField();
             editTextCaption.requestFocus();
@@ -13886,6 +13885,7 @@ public void didPressUrl(MessageObject messageObject, final CharacterStyle url, b
                     private boolean isHashTag(String str){
                         return str.startsWith("@") || str.startsWith("#") || str.startsWith("$");
                     }
+
                     private void openHashTag(String str) {
                         if (str.startsWith("@")) {
                             String username = str.substring(1).toLowerCase();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
index ad2cba91e..0c2d8c3b1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
@@ -1078,10 +1078,8 @@ public void afterTextChanged(Editable editable) {
 
             botButton = new ImageView(context);
             botButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_messagePanelIcons), PorterDuff.Mode.MULTIPLY));
-
             botButtonDrawable = new ReplaceableIconDrawable(context);
             botButtonDrawable.setIcon(R.drawable.input_bot2, false);
-
             botButton.setImageDrawable(botButtonDrawable);
             botButton.setScaleType(ImageView.ScaleType.CENTER);
             botButton.setVisibility(GONE);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/RecyclerListView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/RecyclerListView.java
index 24d40f1fb..0d2c201e9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/RecyclerListView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/RecyclerListView.java
@@ -1387,11 +1387,6 @@ public void onChildAttachedToWindow(View child) {
         super.onChildAttachedToWindow(child);
     }
 
-    @Override
-    public void refreshDrawableState() {
-        super.refreshDrawableState();
-    }
-
     @Override
     protected void drawableStateChanged() {
         super.drawableStateChanged();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ScrollSlidingTextTabStrip.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ScrollSlidingTextTabStrip.java
index 70cdfaac5..8e8b556eb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ScrollSlidingTextTabStrip.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ScrollSlidingTextTabStrip.java
@@ -363,16 +363,6 @@ public void setEnabled(boolean enabled) {
         }
     }
 
-
-    public void selectTabWithId(int id) {
-        int position = idToPosition.get(id, -1);
-        if (position < 0) {
-            return;
-        }
-        currentPosition = position;
-        selectedTabId = id;
-    }
-
     public void selectTabWithId(int id, float progress) {
         int position = idToPosition.get(id, -1);
         if (position < 0) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
index 85fb3464c..2b4a9a2b3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
@@ -237,7 +237,7 @@ public Float get(MediaActivity object) {
                     object.parentView.getLocationInWindow(coords);
                     object.clipTopAddition = (int) (actionBar.getHeight() + actionBar.getTranslationY() + mediaPages[0].listView.getPinnedHeader().getHeight());
                     if (fragmentContextView != null && fragmentContextView.getVisibility() == View.VISIBLE) {
-                        object.clipTopAddition += dp(36);
+                        object.clipTopAddition += AndroidUtilities.dp(36);
                     }
                     return object;
                 }
@@ -456,7 +456,7 @@ public boolean needPlayMessage(MessageObject messageObject) {
         if (TextUtils.isEmpty(actionBar.getTitle())) {
             actionBar.setTitle(LocaleController.getString("SharedContentTitle", R.string.SharedContentTitle));
         }
-        actionBar.setExtraHeight(dp(44));
+        actionBar.setExtraHeight(AndroidUtilities.dp(44));
         actionBar.setAllowOverlayTitle(false);
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
             @Override
@@ -608,7 +608,6 @@ public void onPageSelected(int id, boolean forward) {
                 if (mediaPages[0].selectedType == id) {
                     return;
                 }
-
                 swipeBackEnabled = id == scrollSlidingTextTabStrip.getFirstTabId();
                 mediaPages[1].selectedType = id;
                 mediaPages[1].setVisibility(View.VISIBLE);
@@ -628,11 +627,9 @@ public void onPageScrolled(float progress) {
                     mediaPages[0].setTranslationX(progress * mediaPages[0].getMeasuredWidth());
                     mediaPages[1].setTranslationX(progress * mediaPages[0].getMeasuredWidth() - mediaPages[0].getMeasuredWidth());
                 }
-
                 if (!startedTracking) {
                     updateSearchItemView(progress);
                 }
-
                 if (progress == 1) {
                     MediaPage tempPage = mediaPages[0];
                     mediaPages[0] = mediaPages[1];
@@ -748,11 +745,9 @@ public void onTextChanged(EditText editText) {
 
             private boolean prepareForMoving(MotionEvent ev, boolean forward) {
                 int id = scrollSlidingTextTabStrip.getNextPageId(forward);
-
                 if (id < 0) {
                     return false;
                 }
-
                 getParent().requestDisallowInterceptTouchEvent(true);
                 maybeStartTracking = false;
                 swipeBackEnabled = false;
@@ -763,7 +758,6 @@ private boolean prepareForMoving(MotionEvent ev, boolean forward) {
                 mediaPages[1].selectedType = id;
                 mediaPages[1].setVisibility(View.VISIBLE);
                 animatingForward = forward;
-
                 switchToCurrentSelectedMode(true);
                 if (forward) {
                     mediaPages[1].setTranslationX(mediaPages[0].getMeasuredWidth());
@@ -793,7 +787,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                         continue;
                     }
                     if (mediaPages[a].listView != null) {
-                        mediaPages[a].listView.setPadding(0, actionBarHeight + additionalPadding, 0, dp(4));
+                        mediaPages[a].listView.setPadding(0, actionBarHeight + additionalPadding, 0, AndroidUtilities.dp(4));
                     }
                     if (mediaPages[a].emptyView != null) {
                         mediaPages[a].emptyView.setPadding(0, actionBarHeight + additionalPadding, 0, 0);
@@ -841,7 +835,7 @@ public void setPadding(int left, int top, int right, int bottom) {
                         mediaPages[a].progressView.setPadding(0, actionBarHeight + additionalPadding, 0, 0);
                     }
                     if (mediaPages[a].listView != null) {
-                        mediaPages[a].listView.setPadding(0, actionBarHeight + additionalPadding, 0, dp(4));
+                        mediaPages[a].listView.setPadding(0, actionBarHeight + additionalPadding, 0, AndroidUtilities.dp(4));
                         mediaPages[a].listView.checkSection();
                     }
                 }
@@ -1004,8 +998,6 @@ public boolean onTouchEvent(MotionEvent ev) {
                             tabsAnimation = new AnimatorSet();
                             float velX = velocityTracker.getXVelocity();
                             float velY = velocityTracker.getYVelocity();
-
-
                             if (additionalOffset != 0) {
                                 if (Math.abs(velX) > 1500) {
                                     backAnimation = animatingForward ? velX > 0 : velX < 0;
@@ -1019,7 +1011,6 @@ public boolean onTouchEvent(MotionEvent ev) {
                             } else {
                                 backAnimation = Math.abs(x) < mediaPages[0].getMeasuredWidth() / 3.0f && (Math.abs(velX) < 3500 || Math.abs(velX) < Math.abs(velY));
                             }
-
                             float dx;
                             if (backAnimation) {
                                 dx = Math.abs(x);
@@ -1069,7 +1060,6 @@ public boolean onTouchEvent(MotionEvent ev) {
                                 @Override
                                 public void onAnimationEnd(Animator animator) {
                                     tabsAnimation = null;
-
                                     if (backAnimation) {
                                         mediaPages[1].setVisibility(View.GONE);
                                         updateSearchItemView(0f);
@@ -1079,12 +1069,9 @@ public void onAnimationEnd(Animator animator) {
                                         mediaPages[0] = mediaPages[1];
                                         mediaPages[1] = tempPage;
                                         mediaPages[1].setVisibility(View.GONE);
-
                                         swipeBackEnabled = mediaPages[0].selectedType == scrollSlidingTextTabStrip.getFirstTabId();
                                         scrollSlidingTextTabStrip.selectTabWithId(mediaPages[0].selectedType, 1.0f);
                                     }
-
-
                                     tabsAnimationInProgress = false;
                                     maybeStartTracking = false;
                                     startedTracking = false;
@@ -1278,7 +1265,7 @@ protected void onDraw(Canvas canvas) {
             mediaPages[a].emptyTextView.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteGrayText2));
             mediaPages[a].emptyTextView.setGravity(Gravity.CENTER);
             mediaPages[a].emptyTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 17);
-            mediaPages[a].emptyTextView.setPadding(dp(40), 0, dp(40), dp(128));
+            mediaPages[a].emptyTextView.setPadding(AndroidUtilities.dp(40), 0, AndroidUtilities.dp(40), AndroidUtilities.dp(128));
             mediaPages[a].emptyView.addView(mediaPages[a].emptyTextView, LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER, 0, 24, 0, 0));
 
             mediaPages[a].progressView = new LinearLayout(context) {
@@ -1785,7 +1772,7 @@ private void updateTabs() {
             actionBar.setExtraHeight(0);
         } else {
             scrollSlidingTextTabStrip.setVisibility(View.VISIBLE);
-            actionBar.setExtraHeight(dp(44));
+            actionBar.setExtraHeight(AndroidUtilities.dp(44));
         }
         int id = scrollSlidingTextTabStrip.getCurrentTabId();
         if (id >= 0) {
@@ -1800,14 +1787,11 @@ private void switchToCurrentSelectedMode(boolean animated) {
         for (int a = 0; a < mediaPages.length; a++) {
             mediaPages[a].listView.stopScroll();
         }
-
         savedPositions.put(
                 mediaPages[0].selectedType,
                 mediaPages[0].layoutManager.findFirstVisibleItemPosition()
         );
-
         int a = animated ? 1 : 0;
-
         RecyclerView.Adapter currentAdapter = mediaPages[a].listView.getAdapter();
         if (searching && searchWas) {
             if (animated) {
@@ -1943,7 +1927,6 @@ private void switchToCurrentSelectedMode(boolean animated) {
                 }
             }
             mediaPages[a].emptyTextView.setPadding(dp(40), 0, dp(40), dp(128));
-
             if (!sharedMediaData[mediaPages[a].selectedType].loading && !sharedMediaData[mediaPages[a].selectedType].endReached[0] && sharedMediaData[mediaPages[a].selectedType].messages.isEmpty()) {
                 sharedMediaData[mediaPages[a].selectedType].loading = true;
                 DataQuery.getInstance(currentAccount).loadMedia(dialog_id, 50, 0, mediaPages[a].selectedType, 1, classGuid);
@@ -2138,14 +2121,14 @@ private void fixLayoutInternal(int num) {
 
         if (AndroidUtilities.isTablet()) {
             columnsCount = 4;
-            mediaPages[num].emptyTextView.setPadding(dp(40), 0, dp(40), dp(128));
+            mediaPages[num].emptyTextView.setPadding(AndroidUtilities.dp(40), 0, AndroidUtilities.dp(40), AndroidUtilities.dp(128));
         } else {
             if (rotation == Surface.ROTATION_270 || rotation == Surface.ROTATION_90) {
                 columnsCount = 6;
-                mediaPages[num].emptyTextView.setPadding(dp(40), 0, dp(40), 0);
+                mediaPages[num].emptyTextView.setPadding(AndroidUtilities.dp(40), 0, AndroidUtilities.dp(40), 0);
             } else {
                 columnsCount = 4;
-                mediaPages[num].emptyTextView.setPadding(dp(40), 0, dp(40), dp(128));
+                mediaPages[num].emptyTextView.setPadding(AndroidUtilities.dp(40), 0, AndroidUtilities.dp(40), AndroidUtilities.dp(128));
             }
         }
         if (num == 0) {
@@ -2169,7 +2152,6 @@ public void onLinkLongPress(final String urlFinal) {
             for (int i = 0; i < mediaPages.length; i++) {
                 if (mediaPages[i] != null) mediaPages[i].listView.clearSelector();
             }
-
             BottomSheet.Builder builder = new BottomSheet.Builder(getParentActivity());
             builder.setTitle(urlFinal);
             builder.setItems(new CharSequence[]{LocaleController.getString("Open", R.string.Open), LocaleController.getString("Copy", R.string.Copy)}, (dialog, which) -> {
@@ -2248,7 +2230,7 @@ public View getSectionHeaderView(int section, View view) {
                     break;
                 case 2:
                 default:
-                    view = new LoadingCell(mContext, dp(32), dp(54));
+                    view = new LoadingCell(mContext, AndroidUtilities.dp(32), AndroidUtilities.dp(54));
                     break;
             }
             return new RecyclerListView.Holder(view);
@@ -2362,7 +2344,7 @@ public View getSectionHeaderView(int section, View view) {
                     view = new SharedDocumentCell(mContext);
                     break;
                 case 2:
-                    view = new LoadingCell(mContext, dp(32), dp(54));
+                    view = new LoadingCell(mContext, AndroidUtilities.dp(32), AndroidUtilities.dp(54));
                     break;
                 case 3:
                 default:
@@ -2544,7 +2526,7 @@ public boolean didLongClickItem(SharedPhotoVideoCell cell, int index, MessageObj
                     break;
                 case 2:
                 default:
-                    view = new LoadingCell(mContext, dp(32), dp(74));
+                    view = new LoadingCell(mContext, AndroidUtilities.dp(32), AndroidUtilities.dp(74));
                     break;
             }
             return new RecyclerListView.Holder(view);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
index b8448cc48..4d5f8b7c6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
@@ -1419,7 +1419,6 @@ private void checkListViewScroll() {
         if (top >= 0 && holder != null && holder.getAdapterPosition() == 0) {
             newOffset = top;
         }
-
         int childCount = listView.getChildCount();
         if(listView.getMeasuredHeight() != lastKnownListHeight){
             bottomOffset = 0;
@@ -1438,7 +1437,6 @@ private void checkListViewScroll() {
             bottomOffset = listView.getMeasuredHeight() - bottomOffset;
         }
         if(bottomOffset < 0) bottomOffset = 0;
-
         if (extraHeight != newOffset) {
             extraHeight = newOffset;
             topView.invalidate();
@@ -2641,7 +2639,6 @@ private void updateRowsIds() {
                 addMemberRow = rowCount++;
             }
         }
-
         bottomOffsetRow = rowCount++;
     }
 
