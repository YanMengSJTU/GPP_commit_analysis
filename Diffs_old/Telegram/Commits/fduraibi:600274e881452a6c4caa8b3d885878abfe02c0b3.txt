diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index 73b4abe33..05c54b180 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -81,7 +81,7 @@ android {
     defaultConfig {
         minSdkVersion 8
         targetSdkVersion 19
-        versionCode 244
-        versionName "1.4.15"
+        versionCode 257
+        versionName "1.5.4"
     }
 }
diff --git a/TMessagesProj/config/debug/AndroidManifest.xml b/TMessagesProj/config/debug/AndroidManifest.xml
index bbe69a129..9a736a980 100644
--- a/TMessagesProj/config/debug/AndroidManifest.xml
+++ b/TMessagesProj/config/debug/AndroidManifest.xml
@@ -1,6 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="org.telegram.messenger">
+    package="org.telegram.messenger"
+    android:installLocation="auto">
 
     <uses-feature android:name="android.hardware.location.gps" android:required="false" />
     <uses-feature android:name="android.hardware.location.network" android:required="false" />
diff --git a/TMessagesProj/config/foss/AndroidManifest.xml b/TMessagesProj/config/foss/AndroidManifest.xml
index a20d76eac..17b3445ef 100644
--- a/TMessagesProj/config/foss/AndroidManifest.xml
+++ b/TMessagesProj/config/foss/AndroidManifest.xml
@@ -1,6 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="org.telegram.messenger">
+    package="org.telegram.messenger"
+    android:installLocation="auto">
 
     <application
         android:allowBackup="false"
diff --git a/TMessagesProj/config/release/AndroidManifest.xml b/TMessagesProj/config/release/AndroidManifest.xml
index bbe69a129..9a736a980 100644
--- a/TMessagesProj/config/release/AndroidManifest.xml
+++ b/TMessagesProj/config/release/AndroidManifest.xml
@@ -1,6 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="org.telegram.messenger">
+    package="org.telegram.messenger"
+    android:installLocation="auto">
 
     <uses-feature android:name="android.hardware.location.gps" android:required="false" />
     <uses-feature android:name="android.hardware.location.network" android:required="false" />
diff --git a/TMessagesProj/jni/Android.mk b/TMessagesProj/jni/Android.mk
index 2a4ee466a..a59d6aa37 100755
--- a/TMessagesProj/jni/Android.mk
+++ b/TMessagesProj/jni/Android.mk
@@ -1,12 +1,13 @@
 LOCAL_PATH := $(call my-dir)
 
 include $(CLEAR_VARS)
+LOCAL_PRELINK_MODULE := false
 LOCAL_MODULE 	:= tmessages
-LOCAL_CFLAGS 	:= -w -std=gnu99 -O3 -DNULL=0 -DSOCKLEN_T=socklen_t -DLOCALE_NOT_USED -D_LARGEFILE_SOURCE=1 -D_FILE_OFFSET_BITS=64
+LOCAL_CFLAGS 	:= -w -std=gnu99 -O3 -DNULL=0 -DSOCKLEN_T=socklen_t -DLOCALE_NOT_USED -D_LARGEFILE_SOURCE=1 -D_FILE_OFFSET_BITS=64 -DLOG_DISABLED
 LOCAL_CFLAGS 	+= -Drestrict='' -D__EMX__ -DOPUS_BUILD -DFIXED_POINT -DUSE_ALLOCA -DHAVE_LRINT -DHAVE_LRINTF -fno-math-errno
 LOCAL_CFLAGS 	+= -DANDROID_NDK -DDISABLE_IMPORTGL -fno-strict-aliasing -fprefetch-loop-arrays -DAVOID_TABLES -DANDROID_TILE_BASED_DECODE -DANDROID_ARMV6_IDCT
 LOCAL_CPPFLAGS 	:= -DBSD=1 -ffast-math -O3 -funroll-loops
-LOCAL_LDLIBS 	:= -llog -lm -ljnigraphics
+#LOCAL_LDLIBS 	:= -llog
 
 LOCAL_SRC_FILES     := \
 ./opus/src/opus.c \
diff --git a/TMessagesProj/jni/image.c b/TMessagesProj/jni/image.c
index e60eed7b8..1482314d3 100644
--- a/TMessagesProj/jni/image.c
+++ b/TMessagesProj/jni/image.c
@@ -1,7 +1,6 @@
 #include <jni.h>
 #include <stdio.h>
 #include <setjmp.h>
-#include <android/bitmap.h>
 #include <libjpeg/jpeglib.h>
 #include "utils.h"
 
@@ -17,23 +16,23 @@ METHODDEF(void) my_error_exit(j_common_ptr cinfo) {
     longjmp(myerr->setjmp_buffer, 1);
 }
 
-JNIEXPORT void Java_org_telegram_messenger_Utilities_loadBitmap(JNIEnv *env, jclass class, jstring path, jobject bitmap, int scale) {
+JNIEXPORT void Java_org_telegram_messenger_Utilities_loadBitmap(JNIEnv *env, jclass class, jstring path, jintArray bitmap, int scale, int format, int width, int height) {
     
-    AndroidBitmapInfo info;
     int i;
     
-    if ((i = AndroidBitmap_getInfo(env, bitmap, &info)) >= 0) {
-        char *fileName = (*env)->GetStringUTFChars(env, path, NULL);
-        FILE *infile;
+    char *fileName = (*env)->GetStringUTFChars(env, path, NULL);
+    FILE *infile;
+    
+    if ((infile = fopen(fileName, "rb"))) {
+        struct my_error_mgr jerr;
+        struct jpeg_decompress_struct cinfo;
+        
+        cinfo.err = jpeg_std_error(&jerr.pub);
+        jerr.pub.error_exit = my_error_exit;
         
-        if ((infile = fopen(fileName, "rb"))) {
-            struct my_error_mgr jerr;
-            struct jpeg_decompress_struct cinfo;
-            
-            cinfo.err = jpeg_std_error(&jerr.pub);
-            jerr.pub.error_exit = my_error_exit;
-            
-            if (!setjmp(jerr.setjmp_buffer)) {
+        if (!setjmp(jerr.setjmp_buffer)) {
+            unsigned char *bitmapBuf = (*env)->GetPrimitiveArrayCritical(env, bitmap, 0);
+            if (bitmapBuf) {
                 jpeg_create_decompress(&cinfo);
                 jpeg_stdio_src(&cinfo, infile);
                 
@@ -45,60 +44,60 @@ JNIEXPORT void Java_org_telegram_messenger_Utilities_loadBitmap(JNIEnv *env, jcl
                 jpeg_start_decompress(&cinfo);
                 int row_stride = cinfo.output_width * cinfo.output_components;
                 JSAMPARRAY buffer = (*cinfo.mem->alloc_sarray) ((j_common_ptr) &cinfo, JPOOL_IMAGE, row_stride, 1);
+                int stride = width;
+                if (format == 0) {
+                    stride *= 4;
+                } else if (format == 1) {
+                    stride *= 2;
+                }
+
+                unsigned char *pixels = bitmapBuf;
+
+                int rowCount = min(cinfo.output_height, height);
+                int colCount = min(cinfo.output_width, width);
                 
-                unsigned char *pixels;
-                if ((i = AndroidBitmap_lockPixels(env, bitmap, &pixels)) >= 0) {
+                while (cinfo.output_scanline < rowCount) {
+                    jpeg_read_scanlines(&cinfo, buffer, 1);
                     
-                    int rowCount = min(cinfo.output_height, info.height);
-                    int colCount = min(cinfo.output_width, info.width);
-                    
-                    while (cinfo.output_scanline < rowCount) {
-                        jpeg_read_scanlines(&cinfo, buffer, 1);
-                        
-                        if (info.format == ANDROID_BITMAP_FORMAT_RGBA_8888) {
-                            if (cinfo.out_color_space == JCS_GRAYSCALE) {
-                                for (i = 0; i < colCount; i++) {
-                                    float alpha = buffer[0][i] / 255.0f;
-                                    pixels[i * 4] *= alpha;
-                                    pixels[i * 4 + 1] *= alpha;
-                                    pixels[i * 4 + 2] *= alpha;
-                                    pixels[i * 4 + 3] = buffer[0][i];
-                                }
-                            } else {
-                                int c = 0;
-                                for (i = 0; i < colCount; i++) {
-                                    pixels[i * 4] = buffer[0][i * 3];
-                                    pixels[i * 4 + 1] = buffer[0][i * 3 + 1];
-                                    pixels[i * 4 + 2] = buffer[0][i * 3 + 2];
-                                    pixels[i * 4 + 3] = 255;
-                                    c += 4;
-                                }
+                    if (format == 0) {
+                        if (cinfo.out_color_space == JCS_GRAYSCALE) {
+                            for (i = 0; i < colCount; i++) {
+                                float alpha = buffer[0][i] / 255.0f;
+                                pixels[i * 4] *= alpha;
+                                pixels[i * 4 + 1] *= alpha;
+                                pixels[i * 4 + 2] *= alpha;
+                                pixels[i * 4 + 3] = buffer[0][i];
+                            }
+                        } else {
+                            int c = 0;
+                            for (i = 0; i < colCount; i++) {
+                                pixels[i * 4] = buffer[0][i * 3 + 2];
+                                pixels[i * 4 + 1] = buffer[0][i * 3 + 1];
+                                pixels[i * 4 + 2] = buffer[0][i * 3];
+                                pixels[i * 4 + 3] = 255;
+                                c += 4;
                             }
-                        } else if (info.format == ANDROID_BITMAP_FORMAT_RGB_565) {
-                            
                         }
+                    } else if (format == 1) {
                         
-                        pixels += info.stride;
                     }
                     
-                    AndroidBitmap_unlockPixels(env, bitmap);
-                } else {
-                    throwException(env, "AndroidBitmap_lockPixels() failed ! error=%d", i);
+                    pixels += stride;
                 }
-                
+                (*env)->ReleasePrimitiveArrayCritical(env, bitmap, bitmapBuf, 0);
                 jpeg_finish_decompress(&cinfo);
             } else {
-                throwException(env, "the JPEG code has signaled an error");
+                throwException(env, "can't get bitmap buff");
             }
-            
-            jpeg_destroy_decompress(&cinfo);
-            fclose(infile);
         } else {
-            throwException(env, "can't open %s\n", fileName);
+            throwException(env, "the JPEG code has signaled an error");
         }
         
-        (*env)->ReleaseStringUTFChars(env, path, fileName);
+        jpeg_destroy_decompress(&cinfo);
+        fclose(infile);
     } else {
-        throwException(env, "AndroidBitmap_getInfo() failed ! error=%d", i);
+        throwException(env, "can't open %s", fileName);
     }
+    
+    (*env)->ReleaseStringUTFChars(env, path, fileName);
 }
diff --git a/TMessagesProj/jni/utils.h b/TMessagesProj/jni/utils.h
index d18734f87..34805a1d7 100644
--- a/TMessagesProj/jni/utils.h
+++ b/TMessagesProj/jni/utils.h
@@ -5,10 +5,17 @@
 #include <jni.h>
 
 #define LOG_TAG "tmessages_native"
+#ifndef LOG_DISABLED
 #define LOGI(...) __android_log_print(ANDROID_LOG_INFO, LOG_TAG, __VA_ARGS__)
 #define LOGD(...) __android_log_print(ANDROID_LOG_DEBUG, LOG_TAG, __VA_ARGS__)
 #define LOGE(...) __android_log_print(ANDROID_LOG_ERROR, LOG_TAG, __VA_ARGS__)
 #define LOGV(...) __android_log_print(ANDROID_LOG_VERBOSE, LOG_TAG, __VA_ARGS__)
+#else
+#define LOGI(...)
+#define LOGD(...)
+#define LOGE(...)
+#define LOGV(...)
+#endif
 
 #ifndef max
 #define max(x, y) ((x) > (y)) ? (x) : (y)
diff --git a/TMessagesProj/libs/armeabi-v7a/libtmessages.so b/TMessagesProj/libs/armeabi-v7a/libtmessages.so
index d3d44495a..8dc7dfa9d 100755
Binary files a/TMessagesProj/libs/armeabi-v7a/libtmessages.so and b/TMessagesProj/libs/armeabi-v7a/libtmessages.so differ
diff --git a/TMessagesProj/libs/armeabi/libtmessages.so b/TMessagesProj/libs/armeabi/libtmessages.so
index 690ed1698..b8cbef400 100755
Binary files a/TMessagesProj/libs/armeabi/libtmessages.so and b/TMessagesProj/libs/armeabi/libtmessages.so differ
diff --git a/TMessagesProj/libs/x86/libtmessages.so b/TMessagesProj/libs/x86/libtmessages.so
index ffce8b6d5..cf6e040f3 100755
Binary files a/TMessagesProj/libs/x86/libtmessages.so and b/TMessagesProj/libs/x86/libtmessages.so differ
diff --git a/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteDatabase.java b/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteDatabase.java
index b960f817b..9d1da19e0 100755
--- a/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteDatabase.java
+++ b/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteDatabase.java
@@ -17,7 +17,7 @@
 public class SQLiteDatabase {
 	private final int sqliteHandle;
 
-	private final Map<String, SQLitePreparedStatement> preparedMap;
+	private final Map<String, SQLitePreparedStatement> preparedMap = new HashMap<String, SQLitePreparedStatement>();
 	private boolean isOpen = false;
     private boolean inTransaction = false;
 
@@ -28,7 +28,6 @@ public int getSQLiteHandle() {
 	public SQLiteDatabase(String fileName) throws SQLiteException {
 		sqliteHandle = opendb(fileName, ApplicationLoader.applicationContext.getFilesDir().getPath());
 		isOpen = true;
-		preparedMap = new HashMap<String, SQLitePreparedStatement>();
 	}
 
 	public boolean tableExists(String tableName) throws SQLiteException {
@@ -47,7 +46,7 @@ public void execute(String sql, Object... args) throws SQLiteException {
 		}
 	}
 
-    public SQLitePreparedStatement executeFast(String sql) throws SQLiteException{
+    public SQLitePreparedStatement executeFast(String sql) throws SQLiteException {
         return new SQLitePreparedStatement(this, sql, true);
     }
 
@@ -64,29 +63,6 @@ public Integer executeInt(String sql, Object... args) throws SQLiteException {
 		}
 	}
 
-	public int executeIntOrThrow(String sql, Object... args) throws SQLiteException, SQLiteNoRowException {
-		checkOpened();
-		Integer val = executeInt(sql, args);
-		if (val != null) {
-			return val;
-		}
-
-		throw new SQLiteNoRowException();
-	}
-
-	public String executeString(String sql, Object... args) throws SQLiteException {
-		checkOpened();
-		SQLiteCursor cursor = query(sql, args);
-		try {
-			if (!cursor.next()) {
-				return null;
-			}
-			return cursor.stringValue(0);
-		} finally {
-			cursor.dispose();
-		}
-	}
-
 	public SQLiteCursor query(String sql, Object... args) throws SQLiteException {
 		checkOpened();
 		SQLitePreparedStatement stmt = preparedMap.get(sql);
@@ -110,6 +86,7 @@ public void close() {
 				for (SQLitePreparedStatement stmt : preparedMap.values()) {
 					stmt.finalizeQuery();
 				}
+                commitTransaction();
 				closedb(sqliteHandle);
 			} catch (SQLiteException e) {
                 FileLog.e("tmessages", e.getMessage(), e);
@@ -139,6 +116,9 @@ public void beginTransaction() throws SQLiteException {
     }
 
     public void commitTransaction() {
+        if (!inTransaction) {
+            return;
+        }
         inTransaction = false;
         commitTransaction(sqliteHandle);
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/BuffersStorage.java b/TMessagesProj/src/main/java/org/telegram/messenger/BuffersStorage.java
index 5d25fae38..d495ab8c1 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/BuffersStorage.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/BuffersStorage.java
@@ -126,23 +126,33 @@ public void reuseFreeBuffer(ByteBufferDesc buffer) {
         }
         if (buffer.buffer.capacity() == 128) {
             synchronized (freeBuffers128) {
-                freeBuffers128.add(buffer);
+                if (freeBuffers128.size() < 10) {
+                    freeBuffers128.add(buffer);
+                }
             }
         } else if (buffer.buffer.capacity() == 1024 + 200) {
             synchronized (freeBuffers1024) {
-                freeBuffers1024.add(buffer);
+                if (freeBuffers1024.size() < 10) {
+                    freeBuffers1024.add(buffer);
+                }
             }
         } else if (buffer.buffer.capacity() == 4096 + 200) {
             synchronized (freeBuffers4096) {
-                freeBuffers4096.add(buffer);
+                if (freeBuffers4096.size() < 10) {
+                    freeBuffers4096.add(buffer);
+                }
             }
         } else if (buffer.buffer.capacity() == 16384 + 200) {
             synchronized (freeBuffers16384) {
-                freeBuffers16384.add(buffer);
+                if (freeBuffers16384.size() < 10) {
+                    freeBuffers16384.add(buffer);
+                }
             }
         } else if (buffer.buffer.capacity() == 40000) {
             synchronized (freeBuffers32768) {
-                freeBuffers32768.add(buffer);
+                if (freeBuffers32768.size() < 10) {
+                    freeBuffers32768.add(buffer);
+                }
             }
         }
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java b/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
index 88454987c..196831d96 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
@@ -65,6 +65,7 @@
     private long lastPingTime = System.currentTimeMillis();
     private long lastPushPingTime = System.currentTimeMillis();
     private int nextSleepTimeout = 30000;
+    private long nextPingId = 0;
 
     private static volatile ConnectionsManager Instance = null;
     public static ConnectionsManager getInstance() {
@@ -148,15 +149,33 @@ public void run() {
             if (datacenters != null) {
                 MessagesController.getInstance().updateTimerProc();
                 Datacenter datacenter = datacenterWithId(currentDatacenterId);
-                if (datacenter != null && datacenter.authKey != null) {
-                    if (lastPingTime < System.currentTimeMillis() - 19000) {
-                        lastPingTime = System.currentTimeMillis();
-                        generatePing();
-                    }
-                    if (!updatingDcSettings && lastDcUpdateTime < (int)(System.currentTimeMillis() / 1000) - DC_UPDATE_TIME) {
-                        updateDcSettings(0);
+                if (datacenter != null) {
+                    if (datacenter.authKey != null) {
+                        if (lastPingTime < System.currentTimeMillis() - 19000) {
+                            lastPingTime = System.currentTimeMillis();
+                            generatePing();
+                        }
+                        if (!updatingDcSettings && lastDcUpdateTime < (int) (System.currentTimeMillis() / 1000) - DC_UPDATE_TIME) {
+                            updateDcSettings(0);
+                        }
+                        processRequestQueue(0, 0);
+                    } else {
+                        boolean notFound = true;
+                        for (Action actor : actionQueue) {
+                            if (actor instanceof HandshakeAction) {
+                                HandshakeAction eactor = (HandshakeAction)actor;
+                                if (eactor.datacenter.datacenterId == datacenter.datacenterId) {
+                                    notFound = false;
+                                    break;
+                                }
+                            }
+                        }
+                        if (notFound) {
+                            HandshakeAction actor = new HandshakeAction(datacenter);
+                            actor.delegate = ConnectionsManager.this;
+                            dequeueActor(actor, true);
+                        }
                     }
-                    processRequestQueue(0, 0);
                 }
             }
 
@@ -316,7 +335,7 @@ public void run() {
                     }
                 }
 
-                if (currentDatacenterId != 0 && UserConfig.clientActivated) {
+                if (currentDatacenterId != 0 && UserConfig.isClientActivated()) {
                     Datacenter datacenter = datacenterWithId(currentDatacenterId);
                     if (datacenter.authKey == null) {
                         currentDatacenterId = 0;
@@ -614,7 +633,7 @@ public void run() {
                         datacenter.pushConnection.connect();
                         generatePing(datacenter, true);
                     } else {
-                        if (UserConfig.clientActivated && !UserConfig.registeredForInternalPush) {
+                        if (UserConfig.isClientActivated() && !UserConfig.registeredForInternalPush) {
                             registerForPush();
                         }
                     }
@@ -704,7 +723,7 @@ public void run(TLObject response, TLRPC.TL_error error) {
                 }
                 updatingDcSettings = false;
             }
-        }, null, true, RPCRequest.RPCRequestClassEnableUnauthorized | RPCRequest.RPCRequestClassGeneric, dcNum == 0 ? currentDatacenterId : dcNum);
+        }, null, true, RPCRequest.RPCRequestClassEnableUnauthorized | RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassWithoutLogin, dcNum == 0 ? currentDatacenterId : dcNum);
     }
 
     public long performRpc(final TLObject rpc, final RPCRequest.RPCRequestDelegate completionBlock, final RPCRequest.RPCProgressDelegate progressBlock, boolean requiresCompletion, int requestClass) {
@@ -764,8 +783,12 @@ TLObject wrapInLayer(TLObject object, int datacenterId, RPCRequest request) {
         return object;
     }
 
-    public static volatile long nextCallToken = 0;
+    public static volatile long nextCallToken = 1;
     long performRpc(final TLObject rpc, final RPCRequest.RPCRequestDelegate completionBlock, final RPCRequest.RPCProgressDelegate progressBlock, final RPCRequest.RPCQuickAckDelegate quickAckBlock, final boolean requiresCompletion, final int requestClass, final int datacenterId) {
+        if (!UserConfig.isClientActivated() && (requestClass & RPCRequest.RPCRequestClassWithoutLogin) == 0) {
+            FileLog.e("tmessages", "can't do request without login " + rpc);
+            return 0;
+        }
 
         final long requestToken = nextCallToken++;
 
@@ -801,6 +824,9 @@ public void run() {
     }
 
     public void cancelRpc(final long token, final boolean notifyServer) {
+        if (token == 0) {
+            return;
+        }
         Utilities.stageQueue.postRunnable(new Runnable() {
             @Override
             public void run() {
@@ -850,20 +876,17 @@ public static boolean isNetworkOnline() {
         try {
             ConnectivityManager cm = (ConnectivityManager)ApplicationLoader.applicationContext.getSystemService(Context.CONNECTIVITY_SERVICE);
             NetworkInfo netInfo = cm.getActiveNetworkInfo();
-            if (netInfo != null && netInfo.isConnected()) {
+            if (netInfo != null && (netInfo.isConnectedOrConnecting() || netInfo.isRoaming() || netInfo.isAvailable())) {
                 return true;
             }
 
             netInfo = cm.getNetworkInfo(ConnectivityManager.TYPE_MOBILE);
-            if (netInfo.isConnected()) {
-                return true;
-            }
 
-            if (netInfo != null && netInfo.getState() == NetworkInfo.State.CONNECTED) {
+            if (netInfo != null && (netInfo.isConnectedOrConnecting() || netInfo.isRoaming() || netInfo.isAvailable())) {
                 return true;
             } else {
                 netInfo = cm.getNetworkInfo(ConnectivityManager.TYPE_WIFI);
-                if(netInfo != null && netInfo.getState() == NetworkInfo.State.CONNECTED) {
+                if(netInfo != null && (netInfo.isConnectedOrConnecting() || netInfo.isRoaming() || netInfo.isAvailable())) {
                     return true;
                 }
             }
@@ -1492,7 +1515,7 @@ private void processRequestQueue(int requestClass, int _datacenterId) {
         }
 
         for (int num : unauthorizedDatacenterIds) {
-            if (num != currentDatacenterId && num != movingToDatacenterId && UserConfig.clientUserId != 0) {
+            if (num != currentDatacenterId && num != movingToDatacenterId && UserConfig.isClientActivated()) {
                 boolean notFound = true;
                 for (Action actor : actionQueue) {
                     if (actor instanceof ExportAuthorizationAction) {
@@ -1768,7 +1791,7 @@ public void run(TLObject response, TLRPC.TL_error error) {
                     saveSession();
                 }
             }
-        }, null, true, RPCRequest.RPCRequestClassGeneric, datacenter.datacenterId);
+        }, null, true, RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassWithoutLogin, datacenter.datacenterId);
     }
 
     void messagesConfirmed(final long requestMsgId) {
@@ -1900,11 +1923,11 @@ void processMessage(TLObject message, long messageId, int messageSeqNo, long mes
 
                 saveSession();
 
-                if (datacenter.datacenterId == currentDatacenterId && UserConfig.clientActivated) {
-                    if ((connection.transportRequestClass & RPCRequest.RPCRequestClassGeneric) != 0) {
-                        MessagesController.getInstance().getDifference();
-                    } else if ((connection.transportRequestClass & RPCRequest.RPCRequestClassPush) != 0) {
+                if (datacenter.datacenterId == currentDatacenterId && UserConfig.isClientActivated()) {
+                    if ((connection.transportRequestClass & RPCRequest.RPCRequestClassPush) != 0) {
                         registerForPush();
+                    } else if ((connection.transportRequestClass & RPCRequest.RPCRequestClassGeneric) != 0) {
+                        MessagesController.getInstance().getDifference();
                     }
                 }
                 connection.addProcessedSession(newSession.unique_id);
@@ -1929,7 +1952,7 @@ void processMessage(TLObject message, long messageId, int messageSeqNo, long mes
                 connection.addProcessedMessageId(innerMessageId);
             }
         } else if (message instanceof TLRPC.TL_pong) {
-            if (UserConfig.clientActivated && !UserConfig.registeredForInternalPush && (connection.transportRequestClass & RPCRequest.RPCRequestClassPush) != 0) {
+            if (UserConfig.isClientActivated() && !UserConfig.registeredForInternalPush && (connection.transportRequestClass & RPCRequest.RPCRequestClassPush) != 0) {
                 registerForPush();
             }
             TLRPC.TL_pong pong = (TLRPC.TL_pong)message;
@@ -2141,7 +2164,7 @@ void processMessage(TLObject message, long messageId, int messageSeqNo, long mes
                                 isError = true;
                                 if (datacenter.datacenterId == currentDatacenterId || datacenter.datacenterId == movingToDatacenterId) {
                                     if ((request.flags & RPCRequest.RPCRequestClassGeneric) != 0) {
-                                        if (UserConfig.clientActivated) {
+                                        if (UserConfig.isClientActivated()) {
                                             UserConfig.clearConfig();
                                             Utilities.RunOnUIThread(new Runnable() {
                                                 @Override
@@ -2315,7 +2338,6 @@ void generatePing() {
         }
     }
 
-    static long nextPingId = 0;
     private ByteBufferDesc generatePingData(TcpConnection connection) {
         if (connection == null) {
             return null;
@@ -2325,6 +2347,17 @@ private ByteBufferDesc generatePingData(TcpConnection connection) {
         ping.ping_id = nextPingId++;
         ping.disconnect_delay = 35;
         pingIdToDate.put(ping.ping_id, (int)(System.currentTimeMillis() / 1000));
+        if (pingIdToDate.size() > 20) {
+            ArrayList<Long> itemsToDelete = new ArrayList<Long>();
+            for (Long pid : pingIdToDate.keySet()) {
+                if (pid < nextPingId - 10) {
+                    itemsToDelete.add(pid);
+                }
+            }
+            for (Long pid : itemsToDelete) {
+                pingIdToDate.remove(pid);
+            }
+        }
 
         NetworkMessage networkMessage = new NetworkMessage();
         networkMessage.protoMessage = wrapMessage(ping, connection, false);
@@ -2580,6 +2613,13 @@ public void run() {
                 });
             }
         }
+        if (length == 4) {
+            int error = data.readInt32();
+            FileLog.e("tmessages", "mtproto error = " + error);
+            connection.suspendConnection(true);
+            connection.connect();
+            return;
+        }
         Datacenter datacenter = datacenterWithId(connection.getDatacenterId());
 
         long keyId = data.readInt64();
@@ -2703,7 +2743,7 @@ void moveToDatacenter(final int datacenterId) {
         clearRequestsForRequestClass(RPCRequest.RPCRequestClassDownloadMedia, currentDatacenter);
         clearRequestsForRequestClass(RPCRequest.RPCRequestClassUploadMedia, currentDatacenter);
 
-        if (UserConfig.clientUserId != 0) {
+        if (UserConfig.isClientActivated()) {
             TLRPC.TL_auth_exportAuthorization exportAuthorization = new TLRPC.TL_auth_exportAuthorization();
             exportAuthorization.dc_id = datacenterId;
 
@@ -2714,7 +2754,7 @@ public void run(TLObject response, TLRPC.TL_error error) {
                         movingAuthorization = (TLRPC.TL_auth_exportedAuthorization)response;
                         authorizeOnMovingDatacenter();
                     } else {
-                        Utilities.globalQueue.postRunnable(new Runnable() {
+                        Utilities.stageQueue.postRunnable(new Runnable() {
                             @Override
                             public void run() {
                                 moveToDatacenter(datacenterId);
@@ -2722,7 +2762,7 @@ public void run() {
                         }, 1000);
                     }
                 }
-            }, null, true, RPCRequest.RPCRequestClassGeneric, currentDatacenterId);
+            }, null, true, RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassWithoutLogin, currentDatacenterId);
         } else {
             authorizeOnMovingDatacenter();
         }
@@ -2760,7 +2800,7 @@ void authorizeOnMovingDatacenter() {
 
         if (movingAuthorization != null) {
             TLRPC.TL_auth_importAuthorization importAuthorization = new TLRPC.TL_auth_importAuthorization();
-            importAuthorization.id = UserConfig.clientUserId;
+            importAuthorization.id = UserConfig.getClientUserId();
             importAuthorization.bytes = movingAuthorization.bytes;
             performRpc(importAuthorization, new RPCRequest.RPCRequestDelegate() {
                 @Override
@@ -2772,7 +2812,7 @@ public void run(TLObject response, TLRPC.TL_error error) {
                         moveToDatacenter(movingToDatacenterId);
                     }
                 }
-            }, null, true, RPCRequest.RPCRequestClassGeneric, datacenter.datacenterId);
+            }, null, true, RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassWithoutLogin, datacenter.datacenterId);
         } else {
             authorizedOnMovingDatacenter();
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ContactsController.java b/TMessagesProj/src/main/java/org/telegram/messenger/ContactsController.java
index 4cbb77033..27e1ab1c5 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ContactsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ContactsController.java
@@ -30,7 +30,8 @@
 
 public class ContactsController {
     private Account currentAccount;
-    public boolean loadingContacts = false;
+    private boolean loadingContacts = false;
+    private static final Integer loadContactsSync = 1;
     private boolean ignoreChanges = false;
     private boolean contactsSyncInProgress = false;
     private final Integer observerLock = 1;
@@ -118,10 +119,10 @@ public void checkAppAccount() {
         AccountManager am = AccountManager.get(ApplicationLoader.applicationContext);
         Account[] accounts = am.getAccountsByType("org.telegram.account");
         boolean recreateAccount = false;
-        if (UserConfig.currentUser != null) {
+        if (UserConfig.isClientActivated()) {
             if (accounts.length == 1) {
                 Account acc = accounts[0];
-                if (!acc.name.equals(UserConfig.currentUser.phone)) {
+                if (!acc.name.equals(UserConfig.getCurrentUser().phone)) {
                     recreateAccount = true;
                 } else {
                     currentAccount = acc;
@@ -139,9 +140,9 @@ public void checkAppAccount() {
             for (Account c : accounts) {
                 am.removeAccount(c, null, null);
             }
-            if (UserConfig.currentUser != null) {
+            if (UserConfig.isClientActivated()) {
                 try {
-                    currentAccount = new Account(UserConfig.currentUser.phone, "org.telegram.account");
+                    currentAccount = new Account(UserConfig.getCurrentUser().phone, "org.telegram.account");
                     am.addAccountExplicitly(currentAccount, "", null);
                 } catch (Exception e) {
                     FileLog.e("tmessages", e);
@@ -230,13 +231,20 @@ private boolean checkContactsInternal() {
     }
 
     public void readContacts() {
-        if (loadingContacts) {
-            return;
+        synchronized (loadContactsSync) {
+            if (loadingContacts) {
+                return;
+            }
+            loadingContacts = true;
         }
+
         Utilities.stageQueue.postRunnable(new Runnable() {
             @Override
             public void run() {
                 if (!contacts.isEmpty() || contactsLoaded) {
+                    synchronized (loadContactsSync) {
+                        loadingContacts = false;
+                    }
                     return;
                 }
                 loadContacts(true, false);
@@ -423,15 +431,15 @@ public void performSyncPhoneBook(final HashMap<Integer, Contact> contactHashMap,
             public void run() {
 
                 boolean disableDeletion = true; //disable contacts deletion, because phone numbers can't be compared due to different numbers format
-                if (schedule) {
+                /*if (schedule) {
                     try {
                         AccountManager am = AccountManager.get(ApplicationLoader.applicationContext);
                         Account[] accounts = am.getAccountsByType("org.telegram.account");
                         boolean recreateAccount = false;
-                        if (UserConfig.currentUser != null) {
+                        if (UserConfig.isClientActivated()) {
                             if (accounts.length != 1) {
                                 FileLog.e("tmessages", "detected account deletion!");
-                                currentAccount = new Account(UserConfig.currentUser.phone, "org.telegram.account");
+                                currentAccount = new Account(UserConfig.getCurrentUser().phone, "org.telegram.account");
                                 am.addAccountExplicitly(currentAccount, "", null);
                                 Utilities.RunOnUIThread(new Runnable() {
                                     @Override
@@ -444,7 +452,7 @@ public void run() {
                     } catch (Exception e) {
                         FileLog.e("tmessages", e);
                     }
-                }
+                }*/
 
                 boolean request = requ;
                 if (request && first) {
@@ -748,13 +756,16 @@ public void run() {
         });
     }
 
+    public boolean isLoadingContacts() {
+        synchronized (loadContactsSync) {
+            return loadingContacts;
+        }
+    }
+
     public void loadContacts(boolean fromCache, boolean cacheEmpty) {
-        Utilities.RunOnUIThread(new Runnable() {
-            @Override
-            public void run() {
-                loadingContacts = true;
-            }
-        });
+        synchronized (loadContactsSync) {
+            loadingContacts = true;
+        }
         if (fromCache) {
             FileLog.e("tmessages", "load contacts from cache");
             MessagesStorage.getInstance().getContacts();
@@ -776,7 +787,9 @@ public void run(TLObject response, TLRPC.TL_error error) {
                             Utilities.RunOnUIThread(new Runnable() {
                                 @Override
                                 public void run() {
-                                    loadingContacts = false;
+                                    synchronized (loadContactsSync) {
+                                        loadingContacts = false;
+                                    }
                                     NotificationCenter.getInstance().postNotificationName(MessagesController.contactsDidLoaded);
                                 }
                             });
@@ -800,8 +813,8 @@ public void run() {
                         MessagesController.getInstance().users.putIfAbsent(user.id, user);
                     } else {
                         MessagesController.getInstance().users.put(user.id, user);
-                        if (user.id == UserConfig.clientUserId) {
-                            UserConfig.currentUser = user;
+                        if (user.id == UserConfig.getClientUserId()) {
+                            UserConfig.setCurrentUser(user);
                         }
                     }
                 }
@@ -840,7 +853,7 @@ public void run() {
                         }
 
                         for (TLRPC.TL_contact contact : contactsArr) {
-                            if (usersDict.get(contact.user_id) == null && contact.user_id != UserConfig.clientUserId) {
+                            if (usersDict.get(contact.user_id) == null && contact.user_id != UserConfig.getClientUserId()) {
                                 loadContacts(false, true);
                                 FileLog.e("tmessages", "contacts are broken, load from server");
                                 return;
@@ -953,7 +966,9 @@ public void run() {
                                 usersSectionsDict = sectionsDict;
                                 sortedUsersSectionsArray = sortedSectionsArray;
                                 if (from != 2) {
-                                    loadingContacts = false;
+                                    synchronized (loadContactsSync) {
+                                        loadingContacts = false;
+                                    }
                                 }
                                 performWriteContactsToPhoneBook();
                                 updateUnregisteredContacts(contactsArr);
@@ -1180,7 +1195,7 @@ private void performWriteContactsToPhoneBookInternal(ArrayList<TLRPC.TL_contact>
     private void performWriteContactsToPhoneBook() {
         final ArrayList<TLRPC.TL_contact> contactsArray = new ArrayList<TLRPC.TL_contact>();
         contactsArray.addAll(contacts);
-        Utilities.globalQueue.postRunnable(new Runnable() {
+        Utilities.photoBookQueue.postRunnable(new Runnable() {
             @Override
             public void run() {
                 performWriteContactsToPhoneBookInternal(contactsArray);
@@ -1237,7 +1252,7 @@ private void applyContactsUpdates(ArrayList<Integer> ids, ConcurrentHashMap<Inte
         }
 
         for (final Integer uid : contactsTD) {
-            Utilities.globalQueue.postRunnable(new Runnable() {
+            Utilities.photoBookQueue.postRunnable(new Runnable() {
                 @Override
                 public void run() {
                     deleteContactFromPhoneBook(uid);
@@ -1467,7 +1482,7 @@ public void run(TLObject response, TLRPC.TL_error error) {
 //                }
 
                 for (final TLRPC.User u : res.users) {
-                    Utilities.globalQueue.postRunnable(new Runnable() {
+                    Utilities.photoBookQueue.postRunnable(new Runnable() {
                         @Override
                         public void run() {
                             addContactToPhoneBook(u, true);
@@ -1533,7 +1548,7 @@ public void run(TLObject response, TLRPC.TL_error error) {
                     return;
                 }
                 MessagesStorage.getInstance().deleteContacts(uids);
-                Utilities.globalQueue.postRunnable(new Runnable() {
+                Utilities.photoBookQueue.postRunnable(new Runnable() {
                     @Override
                     public void run() {
                         for (TLRPC.User user : users) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/DispatchQueue.java b/TMessagesProj/src/main/java/org/telegram/messenger/DispatchQueue.java
index 7c717140b..bb260020a 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/DispatchQueue.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/DispatchQueue.java
@@ -11,7 +11,6 @@
 import android.os.Handler;
 import android.os.Looper;
 import android.os.Message;
-import android.util.Log;
 
 public class DispatchQueue extends Thread {
     public volatile Handler handler = null;
@@ -68,6 +67,12 @@ public void postRunnable(Runnable runnable, int delay) {
         }
     }
 
+    public void cleanupQueue() {
+        if (handler != null) {
+            handler.removeCallbacksAndMessages(null);
+        }
+    }
+
     public void run() {
         Looper.prepare();
         synchronized (handlerSyncObject) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/Emoji.java b/TMessagesProj/src/main/java/org/telegram/messenger/Emoji.java
index e4f3aa2e8..3d78d9be4 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/Emoji.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/Emoji.java
@@ -13,7 +13,6 @@
 import java.util.HashMap;
 import java.util.Locale;
 
-import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.graphics.Canvas;
 import android.graphics.ColorFilter;
@@ -35,8 +34,21 @@
 	private static int drawImgSize, bigImgSize;
 	private static boolean inited = false;
 	private static Paint placeholderPaint;
-	private static Bitmap emojiBmp[] = new Bitmap[5];
+	private static EmojiBitmap emojiBmp[] = new EmojiBitmap[5];
 	private static boolean loadingEmoji[] = new boolean[5];
+    private static int emojiFullSize;
+
+    private static class EmojiBitmap {
+        public int[] colors;
+        public int width;
+        public int height;
+
+        public EmojiBitmap(int[] colors, int width, int height) {
+            this.colors = colors;
+            this.width = width;
+            this.height = height;
+        }
+    }
 
     private static final int[] cols = {
             13, 10, 15, 10, 14
@@ -191,22 +203,21 @@
                     0x00000000D83DDD34L, 0x00000000D83DDD35L, 0x00000000D83DDD3BL, 0x00000000D83DDD36L, 0x00000000D83DDD37L, 0x00000000D83DDD38L, 0x00000000D83DDD39L}};
 	
 	static {
-        int imgSize = 30;
         if (Utilities.density <= 1.0f) {
-            imgSize = 30;
+            emojiFullSize = 30;
         } else if (Utilities.density <= 1.5f) {
-            imgSize = 45;
+            emojiFullSize = 45;
         } else if (Utilities.density <= 2.0f) {
-            imgSize = 60;
+            emojiFullSize = 60;
         } else {
-            imgSize = 90;
+            emojiFullSize = 90;
         }
 		drawImgSize = Utilities.dp(20);
 		bigImgSize = Utilities.dp(30);
 
 		for (int j = 1; j < data.length; j++) {
 			for (int i = 0; i < data[j].length; i++) {
-				Rect rect = new Rect((i % cols[j - 1]) * imgSize, (i / cols[j - 1]) * imgSize, (i % cols[j - 1] + 1) * imgSize, (i / cols[j - 1] + 1) * imgSize);
+				Rect rect = new Rect((i % cols[j - 1]) * emojiFullSize, (i / cols[j - 1]) * emojiFullSize, emojiFullSize, emojiFullSize);
 				rects.put(data[j][i], new DrawableInfo(rect, (byte)(j - 1)));
 			}
 		}
@@ -701,8 +712,8 @@ public static CharSequence fixSBEmoji(CharSequence cs) {
 
         return s;
     }
-
-	private static Bitmap loadEmoji(final int page) {
+    
+	private static void loadEmoji(final int page) {
 		try {
             float scale = 1.0f;
             int imageResize = 1;
@@ -730,8 +741,10 @@ private static Bitmap loadEmoji(final int page) {
             opts.inJustDecodeBounds = true;
             BitmapFactory.decodeFile(imageFile.getAbsolutePath(), opts);
 
-            final Bitmap colorsBitmap = Bitmap.createBitmap(opts.outWidth / imageResize, opts.outHeight / imageResize, Bitmap.Config.ARGB_8888);
-            Utilities.loadBitmap(imageFile.getAbsolutePath(), colorsBitmap, imageResize);
+            int width = opts.outWidth / imageResize;
+            int height = opts.outHeight / imageResize;
+            int[] bitmap = new int[width * height];
+            Utilities.loadBitmap(imageFile.getAbsolutePath(), bitmap, imageResize, 0, width, height);
 
             imageName = String.format(Locale.US, "emoji%.01fx_a_%d.jpg", scale, page);
             imageFile = ApplicationLoader.applicationContext.getFileStreamPath(imageName);
@@ -741,21 +754,19 @@ private static Bitmap loadEmoji(final int page) {
                 is.close();
             }
 
-            Utilities.loadBitmap(imageFile.getAbsolutePath(), colorsBitmap, imageResize);
+            Utilities.loadBitmap(imageFile.getAbsolutePath(), bitmap, imageResize, 0, width, height);
 
+            final EmojiBitmap emojiBitmap = new EmojiBitmap(bitmap, width, height);
             Utilities.RunOnUIThread(new Runnable() {
                 @Override
                 public void run() {
-                    emojiBmp[page] = colorsBitmap;
+                    emojiBmp[page] = emojiBitmap;
                     NotificationCenter.getInstance().postNotificationName(999);
                 }
             });
-
-			return colorsBitmap;
 		} catch(Throwable x) {
             FileLog.e("tmessages", "Error loading emoji", x);
         }
-		return null;
 	}
 	
 	private static void loadEmojiAsync(final int page) {
@@ -807,7 +818,7 @@ public static Drawable getEmojiBigDrawable(long code) {
         private DrawableInfo info;
 		boolean fullSize = false;
 		private static Paint paint;
-		
+
 		static {
 			paint = new Paint();
             paint.setFlags(Paint.FILTER_BITMAP_FLAG | Paint.ANTI_ALIAS_FLAG);
@@ -819,20 +830,25 @@ public EmojiDrawable(DrawableInfo i) {
 		
 		@Override
 		public void draw(Canvas canvas) {
-			if (emojiBmp[info.page] == null) {
+            EmojiBitmap bitmap = emojiBmp[info.page];
+			if (bitmap == null) {
                 loadEmojiAsync(info.page);
 				canvas.drawRect(getBounds(), placeholderPaint);
 				return;
 			}
-			Rect b = copyBounds();
-			int cX = b.centerX(), cY = b.centerY();
-			b.left = cX - (fullSize ? bigImgSize : drawImgSize) / 2;
-			b.right = cX + (fullSize ? bigImgSize : drawImgSize) / 2;
-			b.top = cY - (fullSize ? bigImgSize : drawImgSize) / 2;
-			b.bottom = cY + (fullSize ? bigImgSize : drawImgSize) / 2;
-            if (!canvas.quickReject(b.left, b.top, b.right, b.bottom, Canvas.EdgeType.AA)) {
-                canvas.drawBitmap(emojiBmp[info.page], info.rect, b, paint);
+            float scale = 1;
+            int offset = 0;
+            if (fullSize) {
+                scale = (float) bigImgSize / (float) emojiFullSize;
+                offset = (getBounds().width() - bigImgSize) / 2;
+            } else {
+                scale = (float) getBounds().width() / (float) emojiFullSize;
             }
+
+            canvas.save();
+            canvas.scale(scale, scale);
+            canvas.drawBitmap(bitmap.colors, info.rect.top * bitmap.width + info.rect.left, bitmap.width, offset, offset, info.rect.right, info.rect.bottom, true, paint);
+            canvas.restore();
 		}
 
 		@Override
@@ -882,64 +898,74 @@ public static CharSequence replaceEmoji(CharSequence cs, Paint.FontMetricsInt fo
         }
         long buf = 0;
         int emojiCount = 0;
-        for (int i = 0; i < cs.length(); i++) {
-            char c = cs.charAt(i);
-            if (c == 0xD83C || c == 0xD83D || (buf != 0 && (buf & 0xFFFFFFFF00000000L) == 0 && (c >= 0xDDE6 && c <= 0xDDFA))) {
-                buf <<= 16;
-                buf |= c;
-            } else if (buf > 0 && (c & 0xF000) == 0xD000) {
-                buf <<= 16;
-                buf |= c;
-                Drawable d = Emoji.getEmojiDrawable(buf);
-                if (d != null) {
-                    EmojiSpan span = new EmojiSpan(d, DynamicDrawableSpan.ALIGN_BOTTOM, size, fontMetrics);
-                    emojiCount++;
-                    if (c>= 0xDDE6 && c <= 0xDDFA) {
-                        s.setSpan(span, i - 3, i + 1, 0);
-                    } else {
-                        s.setSpan(span, i - 1, i + 1, 0);
-                    }
-                }
-                buf = 0;
-            } else if (c == 0x20E3) {
-                if (i > 0) {
-                    char c2 = cs.charAt(i - 1);
-                    if ((c2 >= '0' && c2 <= '9') || c2 == '#') {
-                        buf = c2;
-                        buf <<= 16;
-                        buf |= c;
-                        Drawable d = Emoji.getEmojiDrawable(buf);
-                        if (d != null) {
-                            EmojiSpan span = new EmojiSpan(d, DynamicDrawableSpan.ALIGN_BOTTOM, size, fontMetrics);
-                            emojiCount++;
+        try {
+            for (int i = 0; i < cs.length(); i++) {
+                char c = cs.charAt(i);
+                if (c == 0xD83C || c == 0xD83D || (buf != 0 && (buf & 0xFFFFFFFF00000000L) == 0 && (c >= 0xDDE6 && c <= 0xDDFA))) {
+                    buf <<= 16;
+                    buf |= c;
+                } else if (buf > 0 && (c & 0xF000) == 0xD000) {
+                    buf <<= 16;
+                    buf |= c;
+                    Drawable d = Emoji.getEmojiDrawable(buf);
+                    if (d != null) {
+                        EmojiSpan span = new EmojiSpan(d, DynamicDrawableSpan.ALIGN_BOTTOM, size, fontMetrics);
+                        emojiCount++;
+                        if (c>= 0xDDE6 && c <= 0xDDFA) {
+                            s.setSpan(span, i - 3, i + 1, 0);
+                        } else {
                             s.setSpan(span, i - 1, i + 1, 0);
                         }
-                        buf = 0;
+                    }
+                    buf = 0;
+                } else if (c == 0x20E3) {
+                    if (i > 0) {
+                        char c2 = cs.charAt(i - 1);
+                        if ((c2 >= '0' && c2 <= '9') || c2 == '#') {
+                            buf = c2;
+                            buf <<= 16;
+                            buf |= c;
+                            Drawable d = Emoji.getEmojiDrawable(buf);
+                            if (d != null) {
+                                EmojiSpan span = new EmojiSpan(d, DynamicDrawableSpan.ALIGN_BOTTOM, size, fontMetrics);
+                                emojiCount++;
+                                s.setSpan(span, i - 1, i + 1, 0);
+                            }
+                            buf = 0;
+                        }
+                    }
+                } else if (inArray(c, emojiChars)) {
+                    Drawable d = Emoji.getEmojiDrawable(c);
+                    if (d != null) {
+                        EmojiSpan span = new EmojiSpan(d, DynamicDrawableSpan.ALIGN_BOTTOM, size, fontMetrics);
+                        emojiCount++;
+                        s.setSpan(span, i, i + 1, 0);
                     }
                 }
-            } else if (inArray(c, emojiChars)) {
-                Drawable d = Emoji.getEmojiDrawable(c);
-                if (d != null) {
-                    EmojiSpan span = new EmojiSpan(d, DynamicDrawableSpan.ALIGN_BOTTOM, size, fontMetrics);
-                    emojiCount++;
-                    s.setSpan(span, i, i + 1, 0);
+                if (emojiCount >= 200) {
+                    break;
                 }
             }
-            if (emojiCount >= 200) {
-                break;
-            }
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
+            return cs;
         }
         return s;
     }
 
     public static class EmojiSpan extends ImageSpan {
         private Paint.FontMetricsInt fontMetrics = null;
-        private int size = Utilities.dp(20);
+        int size = Utilities.dp(20);
 
         public EmojiSpan(Drawable d, int verticalAlignment, int s, Paint.FontMetricsInt original) {
             super(d, verticalAlignment);
             fontMetrics = original;
-            size = s;
+            if (original != null) {
+                size = Math.abs(fontMetrics.descent) + Math.abs(fontMetrics.ascent);
+                if (size == 0) {
+                    size = Utilities.dp(20);
+                }
+            }
         }
 
         @Override
@@ -968,6 +994,9 @@ public int getSize(Paint paint, CharSequence text, int start, int end, Paint.Fon
                     fm.top = fontMetrics.top;
                     fm.bottom = fontMetrics.bottom;
                 }
+                if (getDrawable() != null) {
+                    getDrawable().setBounds(0, 0, size, size);
+                }
                 return size;
             }
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ExportAuthorizationAction.java b/TMessagesProj/src/main/java/org/telegram/messenger/ExportAuthorizationAction.java
index a27d9a280..be79765a3 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ExportAuthorizationAction.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ExportAuthorizationAction.java
@@ -85,6 +85,6 @@ public void run() {
                     }
                 }
             }
-        }, null, true, RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassEnableUnauthorized, datacenter.datacenterId);
+        }, null, true, RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassEnableUnauthorized | RPCRequest.RPCRequestClassWithoutLogin, datacenter.datacenterId);
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/FileLoadOperation.java b/TMessagesProj/src/main/java/org/telegram/messenger/FileLoadOperation.java
index 1a2b32b63..b3b641bf7 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/FileLoadOperation.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/FileLoadOperation.java
@@ -11,6 +11,10 @@
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.os.Build;
+import android.provider.MediaStore;
+import android.util.Log;
+
+import org.telegram.ui.ApplicationLoader;
 
 import java.io.RandomAccessFile;
 import java.net.URL;
@@ -158,14 +162,24 @@ public void run() {
         boolean ignoreCache = false;
         boolean onlyCache = false;
         boolean isLocalFile = false;
+        Long mediaId = null;
         String fileNameFinal = null;
         String fileNameTemp = null;
         String fileNameIv = null;
         if (httpUrl != null) {
             if (!httpUrl.startsWith("http")) {
+                if (httpUrl.startsWith("thumb://")) {
+                    int idx = httpUrl.indexOf(":", 8);
+                    if (idx >= 0) {
+                        String media = httpUrl.substring(8, idx);
+                        mediaId = Long.parseLong(media);
+                        fileNameFinal = httpUrl.substring(idx + 1);
+                    }
+                } else {
+                    fileNameFinal = httpUrl;
+                }
                 onlyCache = true;
                 isLocalFile = true;
-                fileNameFinal = httpUrl;
             } else {
                 fileNameFinal = Utilities.MD5(httpUrl);
                 fileNameTemp = fileNameFinal + "_temp.jpg";
@@ -197,6 +211,7 @@ public void run() {
             cacheFileFinal = new File(Utilities.getCacheDir(), fileNameFinal);
         }
         final boolean dontDelete = isLocalFile;
+        final Long mediaIdFinal = mediaId;
         if ((exist = cacheFileFinal.exists()) && !ignoreCache) {
             FileLoader.cacheOutQueue.postRunnable(new Runnable() {
                 @Override
@@ -206,15 +221,18 @@ public void run() {
                         if (FileLoader.getInstance().runtimeHack != null) {
                             delay = 60;
                         }
-                        if (FileLoader.lastCacheOutTime != 0 && FileLoader.lastCacheOutTime > System.currentTimeMillis() - delay) {
+                        if (mediaIdFinal != null) {
+                            delay = 0;
+                        }
+                        if (delay != 0 && FileLoader.lastCacheOutTime != 0 && FileLoader.lastCacheOutTime > System.currentTimeMillis() - delay) {
                             Thread.sleep(delay);
                         }
                         FileLoader.lastCacheOutTime = System.currentTimeMillis();
                         if (state != 1) {
                             return;
                         }
+
                         if (needBitmapCreate) {
-                            FileInputStream is = new FileInputStream(cacheFileFinal);
                             BitmapFactory.Options opts = new BitmapFactory.Options();
 
                             float w_filter = 0;
@@ -223,9 +241,14 @@ public void run() {
                                 String args[] = filter.split("_");
                                 w_filter = Float.parseFloat(args[0]) * Utilities.density;
                                 h_filter = Float.parseFloat(args[1]) * Utilities.density;
-
                                 opts.inJustDecodeBounds = true;
-                                BitmapFactory.decodeFile(cacheFileFinal.getAbsolutePath(), opts);
+
+                                if (mediaIdFinal != null) {
+                                    MediaStore.Images.Thumbnails.getThumbnail(ApplicationLoader.applicationContext.getContentResolver(), mediaIdFinal, MediaStore.Images.Thumbnails.MINI_KIND, opts);
+                                } else {
+                                    BitmapFactory.decodeFile(cacheFileFinal.getAbsolutePath(), opts);
+                                }
+
                                 float photoW = opts.outWidth;
                                 float photoH = opts.outHeight;
                                 float scaleFactor = Math.max(photoW / w_filter, photoH / h_filter);
@@ -242,14 +265,20 @@ public void run() {
                                 opts.inPreferredConfig = Bitmap.Config.RGB_565;
                             }
                             opts.inDither = false;
-                            image = BitmapFactory.decodeStream(is, null, opts);
-                            is.close();
+                            if (mediaIdFinal != null) {
+                                image = MediaStore.Images.Thumbnails.getThumbnail(ApplicationLoader.applicationContext.getContentResolver(), mediaIdFinal, MediaStore.Images.Thumbnails.MINI_KIND, null);
+                            }
+                            if (image == null) {
+                                FileInputStream is = new FileInputStream(cacheFileFinal);
+                                image = BitmapFactory.decodeStream(is, null, opts);
+                                is.close();
+                            }
                             if (image == null) {
                                 if (!dontDelete && (cacheFileFinal.length() == 0 || filter == null)) {
                                    cacheFileFinal.delete();
                                 }
                             } else {
-                                if (filter != null && image != null) {
+                                if (filter != null) {
                                     float bitmapW = image.getWidth();
                                     float bitmapH = image.getHeight();
                                     if (bitmapW != w_filter && bitmapW > w_filter) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/FileLog.java b/TMessagesProj/src/main/java/org/telegram/messenger/FileLog.java
index 7daea61f7..0b15d2d72 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/FileLog.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/FileLog.java
@@ -110,7 +110,7 @@ public void run() {
         }
     }
 
-    public static void e(final String tag, final Exception e) {
+    public static void e(final String tag, final Throwable e) {
         if (!BuildVars.DEBUG_VERSION) {
             return;
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/HandshakeAction.java b/TMessagesProj/src/main/java/org/telegram/messenger/HandshakeAction.java
index 0abc8340a..d86bdbd5e 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/HandshakeAction.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/HandshakeAction.java
@@ -209,7 +209,7 @@ void processMessage(TLObject message, long messageId) {
                 ByteBuffer data = ByteBuffer.wrap(resPq.pq);
                 final long pqf = data.getLong();
                 final long messageIdf = messageId;
-                Utilities.globalQueue.postRunnable(new Runnable() {
+                new Thread(new Runnable() {
                     @Override
                     public void run() {
 
@@ -281,7 +281,7 @@ public void run() {
                             }
                         });
                     }
-                });
+                }).start();
             } else {
                 FileLog.e("tmessages", "***** Error: invalid handshake nonce");
                 beginHandshake(false);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/LocaleController.java b/TMessagesProj/src/main/java/org/telegram/messenger/LocaleController.java
index a748474b5..3b80c2a19 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/LocaleController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/LocaleController.java
@@ -160,6 +160,22 @@ public LocaleController() {
         sortedLanguages.add(localeInfo);
         languagesDict.put(localeInfo.shortName, localeInfo);
 
+        localeInfo = new LocaleInfo();
+        localeInfo.name = "Português (Brasil)";
+        localeInfo.nameEnglish = "Portuguese (Brazil)";
+        localeInfo.shortName = "pt_BR";
+        localeInfo.pathToFile = null;
+        sortedLanguages.add(localeInfo);
+        languagesDict.put(localeInfo.shortName, localeInfo);
+
+        localeInfo = new LocaleInfo();
+        localeInfo.name = "Português (Portugal)";
+        localeInfo.nameEnglish = "Portuguese (Portugal)";
+        localeInfo.shortName = "pt_PT";
+        localeInfo.pathToFile = null;
+        sortedLanguages.add(localeInfo);
+        languagesDict.put(localeInfo.shortName, localeInfo);
+
         loadOtherLanguages();
 
         for (LocaleInfo locale : otherLanguages) {
@@ -382,7 +398,12 @@ public void applyLanguage(LocaleInfo localeInfo, boolean override, boolean fromF
         try {
             Locale newLocale = null;
             if (localeInfo.shortName != null) {
-                newLocale = new Locale(localeInfo.shortName);
+                String[] args = localeInfo.shortName.split("_");
+                if (args.length == 1) {
+                    newLocale = new Locale(localeInfo.shortName);
+                } else {
+                    newLocale = new Locale(args[0], args[1]);
+                }
                 if (newLocale != null) {
                     if (override) {
                         languageOverride = localeInfo.shortName;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
index e93cef0f6..b3f900a2e 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
@@ -79,6 +79,48 @@ public AudioBuffer(int capacity) {
         long pcmOffset;
     }
 
+    private static final String[] projectionPhotos = {
+            MediaStore.Images.Media._ID,
+            MediaStore.Images.Media.BUCKET_ID,
+            MediaStore.Images.Media.BUCKET_DISPLAY_NAME,
+            MediaStore.Images.Media.DATA,
+            MediaStore.Images.Media.DATE_TAKEN,
+            MediaStore.Images.Media.ORIENTATION
+    };
+
+    public static class AlbumEntry {
+        public int bucketId;
+        public String bucketName;
+        public PhotoEntry coverPhoto;
+        public ArrayList<PhotoEntry> photos = new ArrayList<PhotoEntry>();
+
+        public AlbumEntry(int bucketId, String bucketName, PhotoEntry coverPhoto) {
+            this.bucketId = bucketId;
+            this.bucketName = bucketName;
+            this.coverPhoto = coverPhoto;
+        }
+
+        public void addPhoto(PhotoEntry photoEntry) {
+            photos.add(photoEntry);
+        }
+    }
+
+    public static class PhotoEntry {
+        public int bucketId;
+        public int imageId;
+        public long dateTaken;
+        public String path;
+        public int orientation;
+
+        public PhotoEntry(int bucketId, int imageId, long dateTaken, String path, int orientation) {
+            this.bucketId = bucketId;
+            this.imageId = imageId;
+            this.dateTaken = dateTaken;
+            this.path = path;
+            this.orientation = orientation;
+        }
+    }
+
     public final static int audioProgressDidChanged = 50001;
     public final static int audioDidReset = 50002;
     public final static int recordProgressChanged = 50003;
@@ -86,6 +128,7 @@ public AudioBuffer(int capacity) {
     public final static int recordStartError = 50005;
     public final static int recordStopped = 50006;
     public final static int screenshotTook = 50007;
+    public final static int albumsDidLoaded = 50008;
 
     private HashMap<String, ArrayList<WeakReference<FileDownloadProgressListener>>> loadingFileObservers = new HashMap<String, ArrayList<WeakReference<FileDownloadProgressListener>>>();
     private HashMap<Integer, String> observersByTag = new HashMap<Integer, String>();
@@ -412,7 +455,7 @@ public void startMediaObserver() {
     }
 
     public void stopMediaObserver() {
-        if (android.os.Build.VERSION.SDK_INT < 10) { //disable while it's not perferct
+        if (android.os.Build.VERSION.SDK_INT > 0) { //disable while it's not perferct
             return;
         }
         if (stopMediaObserverRunnable == null) {
@@ -906,6 +949,7 @@ public void run() {
                     currentTotalPcmDuration = getTotalPcmDuration();
 
                     audioTrackPlayer = new AudioTrack(AudioManager.STREAM_MUSIC, 48000, AudioFormat.CHANNEL_OUT_MONO, AudioFormat.ENCODING_PCM_16BIT, playerBufferSize, AudioTrack.MODE_STREAM);
+                    audioTrackPlayer.setStereoVolume(1.0f, 1.0f);
                     //audioTrackPlayer.setNotificationMarkerPosition((int)currentTotalPcmDuration);
                     audioTrackPlayer.setPlaybackPositionUpdateListener(new AudioTrack.OnPlaybackPositionUpdateListener() {
                         @Override
@@ -1099,7 +1143,7 @@ public void run() {
                 recordingAudio = new TLRPC.TL_audio();
                 recordingAudio.dc_id = Integer.MIN_VALUE;
                 recordingAudio.id = UserConfig.lastLocalId;
-                recordingAudio.user_id = UserConfig.clientUserId;
+                recordingAudio.user_id = UserConfig.getClientUserId();
                 UserConfig.lastLocalId--;
                 UserConfig.saveConfig(false);
 
@@ -1308,7 +1352,7 @@ public static void saveFile(String path, String fullPath, Context context, final
 
             final ProgressDialog finalProgress = progressDialog;
 
-            Utilities.globalQueue.postRunnable(new Runnable() {
+            new Thread(new Runnable() {
                 @Override
                 public void run() {
                     try {
@@ -1383,7 +1427,7 @@ public void run() {
                         });
                     }
                 }
-            });
+            }).start();
         }
     }
 
@@ -1492,7 +1536,7 @@ public static boolean isGif(Uri uri) {
         return false;
     }
 
-    public static String copyDocumentToCache(Uri uri) {
+    public static String copyDocumentToCache(Uri uri, String ext) {
         ParcelFileDescriptor parcelFD = null;
         FileInputStream input = null;
         FileOutputStream output = null;
@@ -1501,7 +1545,7 @@ public static String copyDocumentToCache(Uri uri) {
             UserConfig.lastLocalId--;
             parcelFD = ApplicationLoader.applicationContext.getContentResolver().openFileDescriptor(uri, "r");
             input = new FileInputStream(parcelFD.getFileDescriptor());
-            File f = new File(Utilities.getCacheDir(), String.format(Locale.US, "%d.gif", id));
+            File f = new File(Utilities.getCacheDir(), String.format(Locale.US, "%d.%s", id, ext));
             output = new FileOutputStream(f);
             input.getChannel().transferTo(0, input.getChannel().size(), output.getChannel());
             UserConfig.saveConfig(false);
@@ -1533,4 +1577,84 @@ public static String copyDocumentToCache(Uri uri) {
         }
         return null;
     }
+
+    public static void loadGalleryPhotosAlbums(final int guid) {
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+                final ArrayList<AlbumEntry> albumsSorted = new ArrayList<AlbumEntry>();
+                HashMap<Integer, AlbumEntry> albums = new HashMap<Integer, AlbumEntry>();
+                AlbumEntry allPhotosAlbum = null;
+                String cameraFolder = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM).getAbsolutePath() + "/" + "Camera/";
+                Integer cameraAlbumId = null;
+
+                Cursor cursor = null;
+                try {
+                    cursor = MediaStore.Images.Media.query(ApplicationLoader.applicationContext.getContentResolver(), MediaStore.Images.Media.EXTERNAL_CONTENT_URI, projectionPhotos, "", null, MediaStore.Images.Media.DATE_TAKEN + " DESC");
+                    if (cursor != null) {
+                        int imageIdColumn = cursor.getColumnIndex(MediaStore.Images.Media._ID);
+                        int bucketIdColumn = cursor.getColumnIndex(MediaStore.Images.Media.BUCKET_ID);
+                        int bucketNameColumn = cursor.getColumnIndex(MediaStore.Images.Media.BUCKET_DISPLAY_NAME);
+                        int dataColumn = cursor.getColumnIndex(MediaStore.Images.Media.DATA);
+                        int dateColumn = cursor.getColumnIndex(MediaStore.Images.Media.DATE_TAKEN);
+                        int orientationColumn = cursor.getColumnIndex(MediaStore.Images.Media.ORIENTATION);
+
+                        while (cursor.moveToNext()) {
+                            int imageId = cursor.getInt(imageIdColumn);
+                            int bucketId = cursor.getInt(bucketIdColumn);
+                            String bucketName = cursor.getString(bucketNameColumn);
+                            String path = cursor.getString(dataColumn);
+                            long dateTaken = cursor.getLong(dateColumn);
+                            int orientation = cursor.getInt(orientationColumn);
+
+                            if (path == null || path.length() == 0) {
+                                continue;
+                            }
+
+                            PhotoEntry photoEntry = new PhotoEntry(bucketId, imageId, dateTaken, path, orientation);
+
+                            if (allPhotosAlbum == null) {
+                                allPhotosAlbum = new AlbumEntry(0, LocaleController.getString("AllPhotos", R.string.AllPhotos), photoEntry);
+                                albumsSorted.add(0, allPhotosAlbum);
+                            }
+                            if (allPhotosAlbum != null) {
+                                allPhotosAlbum.addPhoto(photoEntry);
+                            }
+
+                            AlbumEntry albumEntry = albums.get(bucketId);
+                            if (albumEntry == null) {
+                                albumEntry = new AlbumEntry(bucketId, bucketName, photoEntry);
+                                albums.put(bucketId, albumEntry);
+                                if (cameraAlbumId == null && cameraFolder != null && path != null && path.startsWith(cameraFolder)) {
+                                    albumsSorted.add(0, albumEntry);
+                                    cameraAlbumId = bucketId;
+                                } else {
+                                    albumsSorted.add(albumEntry);
+                                }
+                            }
+
+                            albumEntry.addPhoto(photoEntry);
+                        }
+                    }
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e);
+                } finally {
+                    if (cursor != null) {
+                        try {
+                            cursor.close();
+                        } catch (Exception e) {
+                            FileLog.e("tmessages", e);
+                        }
+                    }
+                }
+                final Integer cameraAlbumIdFinal = cameraAlbumId;
+                Utilities.RunOnUIThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        NotificationCenter.getInstance().postNotificationName(albumsDidLoaded, guid, albumsSorted, cameraAlbumIdFinal);
+                    }
+                });
+            }
+        }).start();
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index d61baf311..661b3eea6 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -220,7 +220,7 @@ public void addSupportUser() {
             return null;
         }
         TLRPC.InputUser inputUser = null;
-        if (user.id == UserConfig.clientUserId) {
+        if (user.id == UserConfig.getClientUserId()) {
             inputUser = new TLRPC.TL_inputUserSelf();
         } else if (user instanceof TLRPC.TL_userForeign || user instanceof TLRPC.TL_userRequest) {
             inputUser = new TLRPC.TL_inputUserForeign();
@@ -253,7 +253,7 @@ public void didReceivedNotification(int id, Object... args) {
                 if (obj.messageOwner.to_id.chat_id != 0) {
                     uid = -obj.messageOwner.to_id.chat_id;
                 } else {
-                    if (obj.messageOwner.to_id.user_id == UserConfig.clientUserId) {
+                    if (obj.messageOwner.to_id.user_id == UserConfig.getClientUserId()) {
                         obj.messageOwner.to_id.user_id = obj.messageOwner.from_id;
                     }
                     uid = obj.messageOwner.to_id.user_id;
@@ -471,8 +471,8 @@ public void run() {
                             users.putIfAbsent(user.id, user);
                         } else {
                             users.put(user.id, user);
-                            if (user.id == UserConfig.clientUserId) {
-                                UserConfig.currentUser = user;
+                            if (user.id == UserConfig.getClientUserId()) {
+                                UserConfig.setCurrentUser(user);
                             }
                         }
                     }
@@ -726,8 +726,8 @@ public void run(TLObject response, TLRPC.TL_error error) {
                         public void run() {
                             for (TLRPC.User user : res.users) {
                                 users.put(user.id, user);
-                                if (user.id == UserConfig.clientUserId) {
-                                    UserConfig.currentUser = user;
+                                if (user.id == UserConfig.getClientUserId()) {
+                                    UserConfig.setCurrentUser(user);
                                 }
                             }
                             for (TLRPC.Chat chat : res.chats) {
@@ -747,8 +747,8 @@ public void run() {
                             users.putIfAbsent(user.id, user);
                         } else {
                             users.put(user.id, user);
-                            if (user.id == UserConfig.clientUserId) {
-                                UserConfig.currentUser = user;
+                            if (user.id == UserConfig.getClientUserId()) {
+                                UserConfig.setCurrentUser(user);
                             }
                         }
                     }
@@ -763,7 +763,7 @@ public void updateTimerProc() {
 
         checkDeletingTask();
 
-        if (UserConfig.clientUserId != 0) {
+        if (UserConfig.isClientActivated()) {
             if (ApplicationLoader.lastPauseTime == 0) {
                 if (statusSettingState != 1 && (lastStatusUpdateTime == 0 || lastStatusUpdateTime <= System.currentTimeMillis() - 55000 || offlineSent)) {
                     statusSettingState = 1;
@@ -1024,15 +1024,15 @@ public void run() {
                     public void run() {
                         for (TLRPC.User u : messagesRes.users) {
                             if (isCache) {
-                                if (u.id == UserConfig.clientUserId || u.id / 1000 == 333) {
+                                if (u.id == UserConfig.getClientUserId() || u.id / 1000 == 333) {
                                     users.put(u.id, u);
                                 } else {
                                     users.putIfAbsent(u.id, u);
                                 }
                             } else {
                                 users.put(u.id, u);
-                                if (u.id == UserConfig.clientUserId) {
-                                    UserConfig.currentUser = u;
+                                if (u.id == UserConfig.getClientUserId()) {
+                                    UserConfig.setCurrentUser(u);
                                 }
                             }
                         }
@@ -1197,15 +1197,15 @@ public void run() {
                         public void run() {
                             for (TLRPC.User u : dialogsRes.users) {
                                 if (isCache) {
-                                    if (u.id == UserConfig.clientUserId || u.id / 1000 == 333) {
+                                    if (u.id == UserConfig.getClientUserId() || u.id / 1000 == 333) {
                                         users.put(u.id, u);
                                     } else {
                                         users.putIfAbsent(u.id, u);
                                     }
                                 } else {
                                     users.put(u.id, u);
-                                    if (u.id == UserConfig.clientUserId) {
-                                        UserConfig.currentUser = u;
+                                    if (u.id == UserConfig.getClientUserId()) {
+                                        UserConfig.setCurrentUser(u);
                                     }
                                 }
                             }
@@ -1265,15 +1265,15 @@ public void run() {
                     public void run() {
                         for (TLRPC.User u : dialogsRes.users) {
                             if (isCache) {
-                                if (u.id == UserConfig.clientUserId || u.id / 1000 == 333) {
+                                if (u.id == UserConfig.getClientUserId() || u.id / 1000 == 333) {
                                     users.put(u.id, u);
                                 } else {
                                     users.putIfAbsent(u.id, u);
                                 }
                             } else {
                                 users.put(u.id, u);
-                                if (u.id == UserConfig.clientUserId) {
-                                    UserConfig.currentUser = u;
+                                if (u.id == UserConfig.getClientUserId()) {
+                                    UserConfig.setCurrentUser(u);
                                 }
                             }
                         }
@@ -1378,7 +1378,7 @@ public int compare(TLRPC.TL_dialog tl_dialog, TLRPC.TL_dialog tl_dialog2) {
         } else {
             UserConfig.saveConfig(false);
             TLRPC.TL_photo photo = new TLRPC.TL_photo();
-            photo.user_id = UserConfig.clientUserId;
+            photo.user_id = UserConfig.getClientUserId();
             photo.date = ConnectionsManager.getInstance().getCurrentTime();
             photo.sizes = sizes;
             photo.caption = "";
@@ -1634,11 +1634,11 @@ public void sendTTLMessage(TLRPC.EncryptedChat encryptedChat) {
         newMsg.action = new TLRPC.TL_messageActionTTLChange();
         newMsg.action.ttl = encryptedChat.ttl;
         newMsg.local_id = newMsg.id = UserConfig.getNewMessageId();
-        newMsg.from_id = UserConfig.clientUserId;
+        newMsg.from_id = UserConfig.getClientUserId();
         newMsg.unread = true;
         newMsg.dialog_id = ((long)encryptedChat.id) << 32;
         newMsg.to_id = new TLRPC.TL_peerUser();
-        if (encryptedChat.participant_id == UserConfig.clientUserId) {
+        if (encryptedChat.participant_id == UserConfig.getClientUserId()) {
             newMsg.to_id.user_id = encryptedChat.admin_id;
         } else {
             newMsg.to_id.user_id = encryptedChat.participant_id;
@@ -1683,11 +1683,11 @@ public void sendScreenshotMessage(TLRPC.EncryptedChat encryptedChat, ArrayList<L
         newMsg.action.encryptedAction = action;
 
         newMsg.local_id = newMsg.id = UserConfig.getNewMessageId();
-        newMsg.from_id = UserConfig.clientUserId;
+        newMsg.from_id = UserConfig.getClientUserId();
         newMsg.unread = true;
         newMsg.dialog_id = ((long)encryptedChat.id) << 32;
         newMsg.to_id = new TLRPC.TL_peerUser();
-        if (encryptedChat.participant_id == UserConfig.clientUserId) {
+        if (encryptedChat.participant_id == UserConfig.getClientUserId()) {
             newMsg.to_id.user_id = encryptedChat.admin_id;
         } else {
             newMsg.to_id.user_id = encryptedChat.participant_id;
@@ -1877,7 +1877,7 @@ private void sendMessage(String message, double lat, double lon, TLRPC.TL_photo
             return;
         }
         newMsg.local_id = newMsg.id = UserConfig.getNewMessageId();
-        newMsg.from_id = UserConfig.clientUserId;
+        newMsg.from_id = UserConfig.getClientUserId();
         newMsg.unread = true;
         newMsg.dialog_id = peer;
         int lower_id = (int)peer;
@@ -1909,7 +1909,7 @@ private void sendMessage(String message, double lat, double lon, TLRPC.TL_photo
         } else {
             encryptedChat = encryptedChats.get((int)(peer >> 32));
             newMsg.to_id = new TLRPC.TL_peerUser();
-            if (encryptedChat.participant_id == UserConfig.clientUserId) {
+            if (encryptedChat.participant_id == UserConfig.getClientUserId()) {
                 newMsg.to_id.user_id = encryptedChat.admin_id;
             } else {
                 newMsg.to_id.user_id = encryptedChat.participant_id;
@@ -2641,12 +2641,12 @@ public void fileDidUploaded(final String location, final TLRPC.InputFile file, f
                 @Override
                 public void run(TLObject response, TLRPC.TL_error error) {
                     if (error == null) {
-                        TLRPC.User user = users.get(UserConfig.clientUserId);
+                        TLRPC.User user = users.get(UserConfig.getClientUserId());
                         if (user == null) {
-                            user = UserConfig.currentUser;
+                            user = UserConfig.getCurrentUser();
                             users.put(user.id, user);
                         } else {
-                            UserConfig.currentUser = user;
+                            UserConfig.setCurrentUser(user);
                         }
                         if (user == null) {
                             return;
@@ -2758,8 +2758,8 @@ public void run() {
                     public void run() {
                         for (TLRPC.User user : res.users) {
                             users.put(user.id, user);
-                            if (user.id == UserConfig.clientUserId) {
-                                UserConfig.currentUser = user;
+                            if (user.id == UserConfig.getClientUserId()) {
+                                UserConfig.setCurrentUser(user);
                             }
                         }
                         for (TLRPC.Chat chat : res.chats) {
@@ -2827,8 +2827,8 @@ public void run(TLObject response, TLRPC.TL_error error) {
                     public void run() {
                         for (TLRPC.User user : res.users) {
                             users.put(user.id, user);
-                            if (user.id == UserConfig.clientUserId) {
-                                UserConfig.currentUser = user;
+                            if (user.id == UserConfig.getClientUserId()) {
+                                UserConfig.setCurrentUser(user);
                             }
                         }
                         for (TLRPC.Chat chat : res.chats) {
@@ -2850,7 +2850,7 @@ public void run() {
                             }
                             TLRPC.TL_chatParticipant newPart = new TLRPC.TL_chatParticipant();
                             newPart.user_id = user.id;
-                            newPart.inviter_id = UserConfig.clientUserId;
+                            newPart.inviter_id = UserConfig.getClientUserId();
                             newPart.date = ConnectionsManager.getInstance().getCurrentTime();
                             info.participants.add(0, newPart);
                             MessagesStorage.getInstance().updateChatInfo(info.chat_id, info, true);
@@ -2905,14 +2905,14 @@ public void run(TLObject response, TLRPC.TL_error error) {
                     public void run() {
                         for (TLRPC.User user : res.users) {
                             users.put(user.id, user);
-                            if (user.id == UserConfig.clientUserId) {
-                                UserConfig.currentUser = user;
+                            if (user.id == UserConfig.getClientUserId()) {
+                                UserConfig.setCurrentUser(user);
                             }
                         }
                         for (TLRPC.Chat chat : res.chats) {
                             chats.put(chat.id, chat);
                         }
-                        if (user.id != UserConfig.clientUserId) {
+                        if (user.id != UserConfig.getClientUserId()) {
                             final ArrayList<MessageObject> messagesObj = new ArrayList<MessageObject>();
                             messagesObj.add(new MessageObject(res.message, users));
                             TLRPC.Chat chat = res.chats.get(0);
@@ -2939,7 +2939,7 @@ public void run() {
                     }
                 });
 
-                if (user.id != UserConfig.clientUserId) {
+                if (user.id != UserConfig.getClientUserId()) {
                     final ArrayList<TLRPC.Message> messages = new ArrayList<TLRPC.Message>();
                     messages.add(res.message);
                     MessagesStorage.getInstance().putMessages(messages, true, true);
@@ -2984,8 +2984,8 @@ public void run(TLObject response, TLRPC.TL_error error) {
                     public void run() {
                         for (TLRPC.User user : res.users) {
                             users.put(user.id, user);
-                            if (user.id == UserConfig.clientUserId) {
-                                UserConfig.currentUser = user;
+                            if (user.id == UserConfig.getClientUserId()) {
+                                UserConfig.setCurrentUser(user);
                             }
                         }
                         for (TLRPC.Chat chat : res.chats) {
@@ -3050,8 +3050,8 @@ public void run(TLObject response, TLRPC.TL_error error) {
                     public void run() {
                         for (TLRPC.User user : res.users) {
                             users.put(user.id, user);
-                            if (user.id == UserConfig.clientUserId) {
-                                UserConfig.currentUser = user;
+                            if (user.id == UserConfig.getClientUserId()) {
+                                UserConfig.setCurrentUser(user);
                             }
                         }
                         for (TLRPC.Chat chat : res.chats) {
@@ -3104,9 +3104,11 @@ public void run(TLObject response, TLRPC.TL_error error) {
                 }
             }, null, true, RPCRequest.RPCRequestClassGeneric);
         }
+    }
 
-        TLRPC.TL_auth_logOut req2 = new TLRPC.TL_auth_logOut();
-        ConnectionsManager.getInstance().performRpc(req2, new RPCRequest.RPCRequestDelegate() {
+    public void logOut() {
+        TLRPC.TL_auth_logOut req = new TLRPC.TL_auth_logOut();
+        ConnectionsManager.getInstance().performRpc(req, new RPCRequest.RPCRequestDelegate() {
             @Override
             public void run(TLObject response, TLRPC.TL_error error) {
 
@@ -3115,7 +3117,7 @@ public void run(TLObject response, TLRPC.TL_error error) {
     }
 
     public void registerForPush(final String regid) {
-        if (regid == null || regid.length() == 0 || registeringForPush || UserConfig.clientUserId == 0) {
+        if (regid == null || regid.length() == 0 || registeringForPush || UserConfig.getClientUserId() == 0) {
             return;
         }
         if (UserConfig.registeredForPush && regid.equals(UserConfig.pushString)) {
@@ -3347,8 +3349,8 @@ public void run(TLObject response, TLRPC.TL_error error) {
                         public void run() {
                             for (TLRPC.User user : res.users) {
                                 users.put(user.id, user);
-                                if (user.id == UserConfig.clientUserId) {
-                                    UserConfig.currentUser = user;
+                                if (user.id == UserConfig.getClientUserId()) {
+                                    UserConfig.setCurrentUser(user);
                                 }
                             }
                             for (TLRPC.Chat chat : res.chats) {
@@ -3429,7 +3431,7 @@ public void run() {
                                                 if (message.to_id.chat_id != 0) {
                                                     uid = -message.to_id.chat_id;
                                                 } else {
-                                                    if (message.to_id.user_id == UserConfig.clientUserId) {
+                                                    if (message.to_id.user_id == UserConfig.getClientUserId()) {
                                                         message.to_id.user_id = message.from_id;
                                                     }
                                                     uid = message.to_id.user_id;
@@ -3557,7 +3559,7 @@ public void run() {
                             if (printUpdate) {
                                 NotificationCenter.getInstance().postNotificationName(updateInterfaces, UPDATE_MASK_USER_PRINT);
                             }
-                            if (obj.messageOwner.from_id != UserConfig.clientUserId) {
+                            if (obj.messageOwner.from_id != UserConfig.getClientUserId()) {
                                 long dialog_id;
                                 if (obj.messageOwner.to_id.chat_id != 0) {
                                     dialog_id = -obj.messageOwner.to_id.chat_id;
@@ -3620,7 +3622,7 @@ public void run() {
                             if (printUpdate) {
                                 NotificationCenter.getInstance().postNotificationName(updateInterfaces, UPDATE_MASK_USER_PRINT);
                             }
-                            if (obj.messageOwner.from_id != UserConfig.clientUserId) {
+                            if (obj.messageOwner.from_id != UserConfig.getClientUserId()) {
                                 long dialog_id;
                                 if (obj.messageOwner.to_id.chat_id != 0) {
                                     dialog_id = -obj.messageOwner.to_id.chat_id;
@@ -3783,8 +3785,8 @@ public void run() {
                     if (usersArr != null) {
                         for (TLRPC.User user : usersArr) {
                             users.put(user.id, user);
-                            if (user.id == UserConfig.clientUserId) {
-                                UserConfig.currentUser = user;
+                            if (user.id == UserConfig.getClientUserId()) {
+                                UserConfig.setCurrentUser(user);
                             }
                         }
                     }
@@ -3818,7 +3820,7 @@ public void run() {
                 if (upd.message.to_id.chat_id != 0) {
                     uid = -upd.message.to_id.chat_id;
                 } else {
-                    if (upd.message.to_id.user_id == UserConfig.clientUserId) {
+                    if (upd.message.to_id.user_id == UserConfig.getClientUserId()) {
                         upd.message.to_id.user_id = upd.message.from_id;
                     }
                     uid = upd.message.to_id.user_id;
@@ -3830,7 +3832,7 @@ public void run() {
                 }
                 arr.add(obj);
                 MessagesStorage.lastPtsValue = update.pts;
-                if (upd.message.from_id != UserConfig.clientUserId && upd.message.to_id != null) {
+                if (upd.message.from_id != UserConfig.getClientUserId() && upd.message.to_id != null) {
                     if (uid != openned_dialog_id || ApplicationLoader.lastPauseTime != 0) {
                         lastMessage = obj;
                     }
@@ -3846,7 +3848,7 @@ public void run() {
             } else if (update instanceof TLRPC.TL_updateRestoreMessages) {
                 MessagesStorage.lastPtsValue = update.pts;
             } else if (update instanceof TLRPC.TL_updateUserTyping || update instanceof TLRPC.TL_updateChatUserTyping) {
-                if (update.user_id != UserConfig.clientUserId) {
+                if (update.user_id != UserConfig.getClientUserId()) {
                     long uid = -update.chat_id;
                     if (uid == 0) {
                         uid = update.user_id;
@@ -3926,7 +3928,7 @@ public void run() {
                     newMessage.date = update.date;
                     newMessage.from_id = update.user_id;
                     newMessage.to_id = new TLRPC.TL_peerUser();
-                    newMessage.to_id.user_id = UserConfig.clientUserId;
+                    newMessage.to_id.user_id = UserConfig.getClientUserId();
                     newMessage.out = false;
                     newMessage.dialog_id = update.user_id;
 
@@ -3938,15 +3940,12 @@ public void run() {
                         messages.put(newMessage.dialog_id, arr);
                     }
                     arr.add(obj);
-                    if (newMessage.from_id != UserConfig.clientUserId && newMessage.to_id != null) {
+                    if (newMessage.from_id != UserConfig.getClientUserId() && newMessage.to_id != null) {
                         if (newMessage.dialog_id != openned_dialog_id || ApplicationLoader.lastPauseTime != 0) {
                             lastMessage = obj;
                         }
                     }
                 }
-//                if (!contactsIds.contains(update.user_id)) {
-//                    contactsIds.add(update.user_id);
-//                }
             } else if (update instanceof TLRPC.TL_updateContactLink) {
                 if (update.my_link instanceof TLRPC.TL_contacts_myLinkContact || update.my_link instanceof TLRPC.TL_contacts_myLinkRequested && update.my_link.contact) {
                     int idx = contactsIds.indexOf(-update.user_id);
@@ -3978,7 +3977,7 @@ public void run() {
                 newMessage.date = update.date;
                 newMessage.from_id = 333000;
                 newMessage.to_id = new TLRPC.TL_peerUser();
-                newMessage.to_id.user_id = UserConfig.clientUserId;
+                newMessage.to_id.user_id = UserConfig.getClientUserId();
                 newMessage.out = false;
                 newMessage.dialog_id = 333000;
 
@@ -3990,7 +3989,7 @@ public void run() {
                     messages.put(newMessage.dialog_id, arr);
                 }
                 arr.add(obj);
-                if (newMessage.from_id != UserConfig.clientUserId && newMessage.to_id != null) {
+                if (newMessage.from_id != UserConfig.getClientUserId() && newMessage.to_id != null) {
                     if (newMessage.dialog_id != openned_dialog_id || ApplicationLoader.lastPauseTime != 0) {
                         lastMessage = obj;
                     }
@@ -4011,7 +4010,7 @@ public void run() {
                         messages.put(uid, arr);
                     }
                     arr.add(obj);
-                    if (message.from_id != UserConfig.clientUserId && message.to_id != null) {
+                    if (message.from_id != UserConfig.getClientUserId() && message.to_id != null) {
                         if (uid != openned_dialog_id || ApplicationLoader.lastPauseTime != 0) {
                             lastMessage = obj;
                         }
@@ -4059,7 +4058,7 @@ public void run() {
 
                 if (newChat instanceof TLRPC.TL_encryptedChatRequested && existingChat == null) {
                     int user_id = newChat.participant_id;
-                    if (user_id == UserConfig.clientUserId) {
+                    if (user_id == UserConfig.getClientUserId()) {
                         user_id = newChat.admin_id;
                     }
                     TLRPC.User user = users.get(user_id);
@@ -4354,7 +4353,7 @@ private void playNotificationSound() {
     }
 
     private void showInAppNotification(MessageObject messageObject) {
-        if (!UserConfig.clientActivated) {
+        if (!UserConfig.isClientActivated()) {
             return;
         }
         if (ApplicationLoader.lastPauseTime != 0) {
@@ -4373,7 +4372,7 @@ private void showInAppNotification(MessageObject messageObject) {
         int user_id = messageObject.messageOwner.to_id.user_id;
         if (user_id == 0) {
             user_id = messageObject.messageOwner.from_id;
-        } else if (user_id == UserConfig.clientUserId) {
+        } else if (user_id == UserConfig.getClientUserId()) {
             user_id = messageObject.messageOwner.from_id;
         }
 
@@ -4456,7 +4455,7 @@ private void showInAppNotification(MessageObject messageObject) {
                                 msg = LocaleController.formatString("NotificationContactNewPhoto", R.string.NotificationContactNewPhoto, Utilities.formatName(user.first_name, user.last_name));
                             } else if (messageObject.messageOwner.action instanceof TLRPC.TL_messageActionLoginUnknownLocation) {
                                 String date = String.format("%s %s %s", LocaleController.formatterYear.format(((long)messageObject.messageOwner.date) * 1000), LocaleController.getString("OtherAt", R.string.OtherAt), LocaleController.formatterDay.format(((long)messageObject.messageOwner.date) * 1000));
-                                msg = LocaleController.formatString("NotificationUnrecognizedDevice", R.string.NotificationUnrecognizedDevice, UserConfig.currentUser.first_name, date, messageObject.messageOwner.action.title, messageObject.messageOwner.action.address);
+                                msg = LocaleController.formatString("NotificationUnrecognizedDevice", R.string.NotificationUnrecognizedDevice, UserConfig.getCurrentUser().first_name, date, messageObject.messageOwner.action.title, messageObject.messageOwner.action.address);
                             }
                         } else {
                             if (messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaEmpty) {
@@ -4486,7 +4485,7 @@ private void showInAppNotification(MessageObject messageObject) {
                     if (preferences.getBoolean("EnablePreviewGroup", true)) {
                         if (messageObject.messageOwner instanceof TLRPC.TL_messageService) {
                             if (messageObject.messageOwner.action instanceof TLRPC.TL_messageActionChatAddUser) {
-                                if (messageObject.messageOwner.action.user_id == UserConfig.clientUserId) {
+                                if (messageObject.messageOwner.action.user_id == UserConfig.getClientUserId()) {
                                     msg = LocaleController.formatString("NotificationInvitedToGroup", R.string.NotificationInvitedToGroup, Utilities.formatName(user.first_name, user.last_name), chat.title);
                                 } else {
                                     TLRPC.User u2 = users.get(messageObject.messageOwner.action.user_id);
@@ -4500,7 +4499,7 @@ private void showInAppNotification(MessageObject messageObject) {
                             } else if (messageObject.messageOwner.action instanceof TLRPC.TL_messageActionChatEditPhoto || messageObject.messageOwner.action instanceof TLRPC.TL_messageActionChatDeletePhoto) {
                                 msg = LocaleController.formatString("NotificationEditedGroupPhoto", R.string.NotificationEditedGroupPhoto, Utilities.formatName(user.first_name, user.last_name), chat.title);
                             } else if (messageObject.messageOwner.action instanceof TLRPC.TL_messageActionChatDeleteUser) {
-                                if (messageObject.messageOwner.action.user_id == UserConfig.clientUserId) {
+                                if (messageObject.messageOwner.action.user_id == UserConfig.getClientUserId()) {
                                     msg = LocaleController.formatString("NotificationGroupKickYou", R.string.NotificationGroupKickYou, Utilities.formatName(user.first_name, user.last_name), chat.title);
                                 } else if (messageObject.messageOwner.action.user_id == user.id) {
                                     msg = LocaleController.formatString("NotificationGroupLeftMember", R.string.NotificationGroupLeftMember, Utilities.formatName(user.first_name, user.last_name), chat.title);
@@ -4597,9 +4596,9 @@ private void showInAppNotification(MessageObject messageObject) {
 
             if (choosenSoundPath != null && !choosenSoundPath.equals("NoSound")) {
                 if (choosenSoundPath.equals(defaultPath)) {
-                    mBuilder.setSound(Settings.System.DEFAULT_NOTIFICATION_URI);
+                    mBuilder.setSound(Settings.System.DEFAULT_NOTIFICATION_URI, AudioManager.STREAM_NOTIFICATION);
                 } else {
-                    mBuilder.setSound(Uri.parse(choosenSoundPath));
+                    mBuilder.setSound(Uri.parse(choosenSoundPath), AudioManager.STREAM_NOTIFICATION);
                 }
             }
 
@@ -4611,7 +4610,6 @@ private void showInAppNotification(MessageObject messageObject) {
             notification.ledOnMS = 1000;
             notification.ledOffMS = 1000;
             if (needVibrate) {
-                notification.defaults = Notification.DEFAULT_VIBRATE;
                 notification.vibrate = new long[]{0, 100, 0, 100};
             } else {
                 notification.vibrate = new long[]{0, 0};
@@ -4765,7 +4763,7 @@ public int compare(TLRPC.TL_dialog tl_dialog, TLRPC.TL_dialog tl_dialog2) {
             if (object != null) {
 
                 int from_id = chat.admin_id;
-                if (from_id == UserConfig.clientUserId) {
+                if (from_id == UserConfig.getClientUserId()) {
                     from_id = chat.participant_id;
                 }
 
@@ -4779,7 +4777,7 @@ public int compare(TLRPC.TL_dialog tl_dialog, TLRPC.TL_dialog tl_dialog2) {
                     newMessage.from_id = from_id;
                     newMessage.to_id = new TLRPC.TL_peerUser();
                     newMessage.random_id = message.random_id;
-                    newMessage.to_id.user_id = UserConfig.clientUserId;
+                    newMessage.to_id.user_id = UserConfig.getClientUserId();
                     newMessage.out = false;
                     newMessage.unread = true;
                     newMessage.dialog_id = ((long)chat.id) << 32;
@@ -4924,7 +4922,7 @@ public int compare(TLRPC.TL_dialog tl_dialog, TLRPC.TL_dialog tl_dialog2) {
                         newMessage.date = message.date;
                         newMessage.from_id = from_id;
                         newMessage.to_id = new TLRPC.TL_peerUser();
-                        newMessage.to_id.user_id = UserConfig.clientUserId;
+                        newMessage.to_id.user_id = UserConfig.getClientUserId();
                         newMessage.out = false;
                         newMessage.dialog_id = ((long)chat.id) << 32;
                         MessagesStorage.getInstance().updateEncryptedChatTTL(chat);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java
index 2cf722f2f..1466d87bd 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java
@@ -36,6 +36,11 @@
     public static byte[] secretPBytes = null;
     public static int secretG = 0;
 
+    private int lastSavedSeq = 0;
+    private int lastSavedPts = 0;
+    private int lastSavedDate = 0;
+    private int lastSavedQts = 0;
+
     public static final int wallpapersDidLoaded = 171;
 
     private static volatile MessagesStorage Instance = null;
@@ -168,6 +173,7 @@ public void openDatabase() {
     }
 
     public void cleanUp() {
+        storageQueue.cleanupQueue();
         storageQueue.postRunnable(new Runnable() {
             @Override
             public void run() {
@@ -176,6 +182,12 @@ public void run() {
                 lastPtsValue = 0;
                 lastQtsValue = 0;
                 lastSecretVersion = 0;
+
+                lastSavedSeq = 0;
+                lastSavedPts = 0;
+                lastSavedDate = 0;
+                lastSavedQts = 0;
+
                 secretPBytes = null;
                 secretG = 0;
                 if (database != null) {
@@ -186,6 +198,7 @@ public void run() {
                     cacheFile.delete();
                     cacheFile = null;
                 }
+                storageQueue.cleanupQueue();
                 openDatabase();
             }
         });
@@ -218,6 +231,9 @@ public void saveDiffParams(final int seq, final int pts, final int date, final i
             @Override
             public void run() {
                 try {
+                    if (lastSavedSeq == seq && lastSavedPts == pts && lastSavedDate == date && lastQtsValue == qts) {
+                        return;
+                    }
                     SQLitePreparedStatement state = database.executeFast("UPDATE params SET seq = ?, pts = ?, date = ?, qts = ? WHERE id = 1");
                     state.bindInteger(1, seq);
                     state.bindInteger(2, pts);
@@ -225,6 +241,10 @@ public void run() {
                     state.bindInteger(4, qts);
                     state.step();
                     state.dispose();
+                    lastSavedSeq = seq;
+                    lastSavedPts = pts;
+                    lastSavedDate = date;
+                    lastSavedQts = qts;
                 } catch (Exception e) {
                     FileLog.e("tmessages", e);
                 }
@@ -781,7 +801,7 @@ public void run() {
                                 if (userData != null) {
                                     SerializedData data = new SerializedData(userData);
                                     TLRPC.User user = (TLRPC.User)TLClassStore.Instance().TLdeserialize(data, data.readInt32());
-                                    if (user.id == UserConfig.clientUserId) {
+                                    if (user.id == UserConfig.getClientUserId()) {
                                         continue;
                                     }
                                     if (user.status != null) {
@@ -1018,7 +1038,7 @@ public void run() {
                     String uids = "";
                     while (cursor.next()) {
                         int user_id = cursor.intValue(0);
-                        if (user_id == UserConfig.clientUserId) {
+                        if (user_id == UserConfig.getClientUserId()) {
                             continue;
                         }
                         TLRPC.TL_contact contact = new TLRPC.TL_contact();
@@ -1838,6 +1858,7 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
                         state.bindInteger(2, count);
                         state.step();
                     }
+                    cursor.dispose();
                 }
                 state.dispose();
             }
@@ -2484,7 +2505,7 @@ public void run() {
                 ArrayList<TLRPC.EncryptedChat> encryptedChats = new ArrayList<TLRPC.EncryptedChat>();
                 try {
                     ArrayList<Integer> usersToLoad = new ArrayList<Integer>();
-                    usersToLoad.add(UserConfig.clientUserId);
+                    usersToLoad.add(UserConfig.getClientUserId());
                     ArrayList<Integer> chatsToLoad = new ArrayList<Integer>();
                     ArrayList<Integer> encryptedToLoad = new ArrayList<Integer>();
                     SQLiteCursor cursor = database.queryFinalized(String.format(Locale.US, "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid ORDER BY d.date DESC LIMIT %d,%d", offset, count));
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/NativeLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/NativeLoader.java
index 6c3b014e3..6228edcba 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/NativeLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/NativeLoader.java
@@ -16,6 +16,7 @@
 import java.io.FileOutputStream;
 import java.io.InputStream;
 import java.io.OutputStream;
+import java.io.OutputStreamWriter;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipFile;
 
@@ -30,6 +31,49 @@
 
     private static volatile boolean nativeLoaded = false;
 
+    public static void cleanNativeLog(Context context) {
+        try {
+            File sdCard = context.getFilesDir();
+            if (sdCard == null) {
+                return;
+            }
+            File file = new File(sdCard, "nativeer.log");
+            if (file == null || !file.exists()) {
+                return;
+            }
+            file.delete();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    public static void writeNativeError(Context context, String info, Throwable throwable) {
+        try {
+            File sdCard = context.getFilesDir();
+            if (sdCard == null) {
+                return;
+            }
+            File file = new File(sdCard, "nativeer.log");
+            if (file == null) {
+                return;
+            }
+
+            FileOutputStream stream = new FileOutputStream(file);
+            OutputStreamWriter streamWriter = new OutputStreamWriter(stream);
+            streamWriter.write("info" + "\n");
+            streamWriter.write(throwable + "\n");
+            StackTraceElement[] stack = throwable.getStackTrace();
+            for (StackTraceElement el : stack) {
+                streamWriter.write(el + "\n");
+            }
+            streamWriter.flush();
+            streamWriter.close();
+            stream.close();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
     private static File getNativeLibraryDir(Context context) {
         File f = null;
         if (context != null) {
@@ -48,6 +92,55 @@ private static File getNativeLibraryDir(Context context) {
         return null;
     }
 
+    private static boolean loadFromZip(Context context, File destLocalFile, String folder) {
+        ZipFile zipFile = null;
+        InputStream stream = null;
+        try {
+            zipFile = new ZipFile(context.getApplicationInfo().sourceDir);
+            ZipEntry entry = zipFile.getEntry("lib/" + folder + "/libtmessages.so");
+            if (entry == null) {
+                throw new Exception("Unable to find file in apk:" + "lib/" + folder + "/libtmessages.so");
+            }
+            stream = zipFile.getInputStream(entry);
+
+            OutputStream out = new FileOutputStream(destLocalFile);
+            byte[] buf = new byte[4096];
+            int len;
+            while ((len = stream.read(buf)) > 0) {
+                Thread.yield();
+                out.write(buf, 0, len);
+            }
+            out.close();
+
+            try {
+                System.load(destLocalFile.getAbsolutePath());
+                nativeLoaded = true;
+            } catch (Error e) {
+                FileLog.e("tmessages", e);
+                writeNativeError(context, "after zip", e);
+            }
+            return true;
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
+            writeNativeError(context, "zip", e);
+        } finally {
+            if (stream != null) {
+                try {
+                    stream.close();
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e);
+                }
+            }
+            if (zipFile != null) {
+                try {
+                    zipFile.close();
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e);
+                }
+            }
+        }
+        return false;
+    }
 
     public static synchronized void initNativeLibs(Context context) {
         if (nativeLoaded) {
@@ -55,6 +148,8 @@ public static synchronized void initNativeLibs(Context context) {
         }
 
         try {
+            cleanNativeLog(context);
+
             String folder = null;
             long libSize = 0;
             long libSize2 = 0;
@@ -82,6 +177,7 @@ public static synchronized void initNativeLibs(Context context) {
                 }
             } catch (Exception e) {
                 FileLog.e("tmessages", e);
+                writeNativeError(context, "arch", e);
                 folder = "armeabi";
                 libSize = sizes[0];
                 libSize2 = sizes[1];
@@ -96,8 +192,9 @@ public static synchronized void initNativeLibs(Context context) {
                         System.loadLibrary("tmessages");
                         nativeLoaded = true;
                         return;
-                    } catch (Exception e) {
-                        e.printStackTrace();
+                    } catch (Error e) {
+                        FileLog.e("tmessages", e);
+                        writeNativeError(context, "normal", e);
                     }
                 }
             }
@@ -110,8 +207,9 @@ public static synchronized void initNativeLibs(Context context) {
                         System.load(destLocalFile.getAbsolutePath());
                         nativeLoaded = true;
                         return;
-                    } catch (Exception e) {
-                        e.printStackTrace();
+                    } catch (Error e) {
+                        FileLog.e("tmessages", e);
+                        writeNativeError(context, "local", e);
                     }
                 } else {
                     destLocalFile.delete();
@@ -120,51 +218,21 @@ public static synchronized void initNativeLibs(Context context) {
 
             FileLog.e("tmessages", "Library not found, arch = " + folder);
 
-            ZipFile zipFile = null;
-            InputStream stream = null;
-            try {
-                zipFile = new ZipFile(context.getApplicationInfo().sourceDir);
-                ZipEntry entry = zipFile.getEntry("lib/" + folder + "/libtmessages.so");
-                if (entry == null) {
-                    throw new Exception("Unable to find file in apk:" + "lib/" + folder + "/libtmessages.so");
-                }
-                stream = zipFile.getInputStream(entry);
-
-                OutputStream out = new FileOutputStream(destLocalFile);
-                byte[] buf = new byte[4096];
-                int len;
-                while ((len = stream.read(buf)) > 0) {
-                    Thread.yield();
-                    out.write(buf, 0, len);
-                }
-                out.close();
-
-                System.load(destLocalFile.getAbsolutePath());
-                nativeLoaded = true;
-                return;
-            } catch (Exception e) {
-                FileLog.e("tmessages", e);
-            } finally {
-                if (stream != null) {
-                    try {
-                        stream.close();
-                    } catch (Exception e) {
-                        FileLog.e("tmessages", e);
-                    }
-                }
-                if (zipFile != null) {
-                    try {
-                        zipFile.close();
-                    } catch (Exception e) {
-                        FileLog.e("tmessages", e);
-                    }
-                }
+            if (!loadFromZip(context, destLocalFile, folder) && folder.equals("armeabi-v7a")) {
+                folder = "armeabi";
+                loadFromZip(context, destLocalFile, folder);
             }
         } catch (Throwable e) {
             e.printStackTrace();
+            writeNativeError(context, "", e);
         }
 
-        System.loadLibrary("tmessages");
-        nativeLoaded = true;
+        try {
+            System.loadLibrary("tmessages");
+            nativeLoaded = true;
+        } catch (Error e) {
+            writeNativeError(context, "last chance", e);
+            FileLog.e("tmessages", e);
+        }
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/RPCRequest.java b/TMessagesProj/src/main/java/org/telegram/messenger/RPCRequest.java
index e444d9837..831b91f98 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/RPCRequest.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/RPCRequest.java
@@ -28,6 +28,7 @@
     public static int RPCRequestClassFailOnServerErrors = 16;
     public static int RPCRequestClassCanCompress = 32;
     public static int RPCRequestClassPush = 64;
+    public static int RPCRequestClassWithoutLogin = 128;
 
     static int RPCRequestClassTransportMask = (RPCRequestClassGeneric | RPCRequestClassDownloadMedia | RPCRequestClassUploadMedia);
 
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/TcpConnection.java b/TMessagesProj/src/main/java/org/telegram/messenger/TcpConnection.java
index 660354c77..2bc8153c5 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/TcpConnection.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/TcpConnection.java
@@ -81,30 +81,6 @@ public int getDatacenterId() {
 
     public void connect() {
         if (!ConnectionsManager.isNetworkOnline()) {
-            synchronized (timerSync) {
-                reconnectTimer = new Timer();
-                reconnectTimer.schedule(new TimerTask() {
-                    @Override
-                    public void run() {
-                        selector.scheduleTask(new Runnable() {
-                            @Override
-                            public void run() {
-                                try {
-                                    synchronized (timerSync) {
-                                        if (reconnectTimer != null) {
-                                            reconnectTimer.cancel();
-                                            reconnectTimer = null;
-                                        }
-                                    }
-                                } catch (Exception e2) {
-                                    FileLog.e("tmessages", e2);
-                                }
-                                connect();
-                            }
-                        });
-                    }
-                }, 500);
-            }
             if (delegate != null) {
                 final TcpConnectionDelegate finalDelegate = delegate;
                 Utilities.stageQueue.postRunnable(new Runnable() {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
index 6bdf8d0d3..4869a96f0 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
@@ -17,9 +17,7 @@
 import java.io.File;
 
 public class UserConfig {
-    public static TLRPC.User currentUser;
-    public static int clientUserId = 0;
-    public static boolean clientActivated = false;
+    private static TLRPC.User currentUser;
     public static boolean registeredForPush = false;
     public static boolean registeredForInternalPush = false;
     public static String pushString = "";
@@ -62,8 +60,6 @@ public static void saveConfig(boolean withFile, File oldFile) {
                     if (withFile) {
                         SerializedData data = new SerializedData();
                         currentUser.serializeToStream(data);
-                        clientUserId = currentUser.id;
-                        clientActivated = true;
                         String userString = Base64.encodeToString(data.toByteArray(), Base64.DEFAULT);
                         editor.putString("user", userString);
                     }
@@ -80,6 +76,30 @@ public static void saveConfig(boolean withFile, File oldFile) {
         }
     }
 
+    public static boolean isClientActivated() {
+        synchronized (sync) {
+            return currentUser != null;
+        }
+    }
+
+    public static int getClientUserId() {
+        synchronized (sync) {
+            return currentUser != null ? currentUser.id : 0;
+        }
+    }
+
+    public static TLRPC.User getCurrentUser() {
+        synchronized (sync) {
+            return currentUser;
+        }
+    }
+
+    public static void setCurrentUser(TLRPC.User user) {
+        synchronized (sync) {
+            currentUser = user;
+        }
+    }
+
     public static void loadConfig() {
         synchronized (sync) {
             final File configFile = new File(ApplicationLoader.applicationContext.getFilesDir(), "user.dat");
@@ -90,8 +110,6 @@ public static void loadConfig() {
                     if (ver == 1) {
                         int constructor = data.readInt32();
                         currentUser = (TLRPC.TL_userSelf)TLClassStore.Instance().TLdeserialize(data, constructor);
-                        clientUserId = currentUser.id;
-                        clientActivated = true;
                         MessagesStorage.lastDateValue = data.readInt32();
                         MessagesStorage.lastPtsValue = data.readInt32();
                         MessagesStorage.lastSeqValue = data.readInt32();
@@ -119,8 +137,6 @@ public void run() {
                     } else if (ver == 2) {
                         int constructor = data.readInt32();
                         currentUser = (TLRPC.TL_userSelf)TLClassStore.Instance().TLdeserialize(data, constructor);
-                        clientUserId = currentUser.id;
-                        clientActivated = true;
 
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing", Context.MODE_PRIVATE);
                         registeredForPush = preferences.getBoolean("registeredForPush", false);
@@ -164,21 +180,13 @@ public void run() {
                     if (userBytes != null) {
                         SerializedData data = new SerializedData(userBytes);
                         currentUser = (TLRPC.TL_userSelf)TLClassStore.Instance().TLdeserialize(data, data.readInt32());
-                        clientUserId = currentUser.id;
-                        clientActivated = true;
                     }
                 }
-                if (currentUser == null) {
-                    clientActivated = false;
-                    clientUserId = 0;
-                }
             }
         }
     }
 
     public static void clearConfig() {
-        clientUserId = 0;
-        clientActivated = false;
         currentUser = null;
         registeredForInternalPush = false;
         registeredForPush = false;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java b/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
index ea76ec3f1..525e6face 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
@@ -15,8 +15,8 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.pm.ActivityInfo;
+import android.content.res.Configuration;
 import android.database.Cursor;
-import android.graphics.Bitmap;
 import android.graphics.Point;
 import android.graphics.Typeface;
 import android.net.Uri;
@@ -34,10 +34,12 @@
 import android.view.inputmethod.InputMethodManager;
 
 import net.hockeyapp.android.CrashManager;
+import net.hockeyapp.android.CrashManagerListener;
 import net.hockeyapp.android.UpdateManager;
 
 import org.telegram.ui.ApplicationLoader;
 
+import java.io.BufferedReader;
 import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
 import java.io.File;
@@ -45,6 +47,7 @@
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
+import java.io.InputStreamReader;
 import java.io.OutputStream;
 import java.math.BigInteger;
 import java.nio.ByteBuffer;
@@ -87,6 +90,8 @@
 
     public static volatile DispatchQueue stageQueue = new DispatchQueue("stageQueue");
     public static volatile DispatchQueue globalQueue = new DispatchQueue("globalQueue");
+    public static volatile DispatchQueue searchQueue = new DispatchQueue("searchQueue");
+    public static volatile DispatchQueue photoBookQueue = new DispatchQueue("photoBookQueue");
 
     public static int[] arrColors = {0xffee4928, 0xff41a903, 0xffe09602, 0xff0f94ed, 0xff8f3bf7, 0xfffc4380, 0xff00a1c4, 0xffeb7002};
     public static int[] arrUsersAvatars = {
@@ -153,7 +158,7 @@
     public native static long doPQNative(long _what);
     public native static byte[] aesIgeEncryption(byte[] _what, byte[] _key, byte[] _iv, boolean encrypt, boolean changeIv, int len);
     public native static void aesIgeEncryption2(ByteBuffer _what, byte[] _key, byte[] _iv, boolean encrypt, boolean changeIv, int len);
-    public native static void loadBitmap(String path, Bitmap bitmap, int scale);
+    public native static void loadBitmap(String path, int[] bitmap, int scale, int format, int width, int height);
 
     public static void lockOrientation(Activity activity) {
         if (prevOrientation != -10) {
@@ -164,19 +169,47 @@ public static void lockOrientation(Activity activity) {
             WindowManager manager = (WindowManager)activity.getSystemService(Activity.WINDOW_SERVICE);
             if (manager != null && manager.getDefaultDisplay() != null) {
                 int rotation = manager.getDefaultDisplay().getRotation();
+                int orientation = activity.getResources().getConfiguration().orientation;
+
                 if (rotation == Surface.ROTATION_270) {
-                    if (Build.VERSION.SDK_INT >= 9) {
-                        activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE);
+                    if (orientation == Configuration.ORIENTATION_PORTRAIT) {
+                        activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
                     } else {
-                        activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
+                        if (Build.VERSION.SDK_INT >= 9) {
+                            activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE);
+                        } else {
+                            activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
+                        }
                     }
                 } else if (rotation == Surface.ROTATION_90) {
-                    activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
+                    if (orientation == Configuration.ORIENTATION_PORTRAIT) {
+                        if (Build.VERSION.SDK_INT >= 9) {
+                            activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_REVERSE_PORTRAIT);
+                        } else {
+                            activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
+                        }
+                    } else {
+                        activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
+                    }
                 } else if (rotation == Surface.ROTATION_0) {
-                    activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
+                    if (orientation == Configuration.ORIENTATION_LANDSCAPE) {
+                        activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
+                    } else {
+                        activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
+                    }
                 } else {
-                    if (Build.VERSION.SDK_INT >= 9) {
-                        activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_REVERSE_PORTRAIT);
+                    if (orientation == Configuration.ORIENTATION_LANDSCAPE) {
+                        if (Build.VERSION.SDK_INT >= 9) {
+                            activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE);
+                        } else {
+                            activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
+                        }
+                    } else {
+                        if (Build.VERSION.SDK_INT >= 9) {
+                            activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_REVERSE_PORTRAIT);
+                        } else {
+                            activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
+                        }
                     }
                 }
             }
@@ -231,10 +264,17 @@ public static String parseIntToString(String value) {
     public static File getCacheDir() {
         if (externalCacheNotAvailableState == 1 || externalCacheNotAvailableState == 0 && Environment.getExternalStorageState().startsWith(Environment.MEDIA_MOUNTED)) {
             externalCacheNotAvailableState = 1;
-            return ApplicationLoader.applicationContext.getExternalCacheDir();
+            File file = ApplicationLoader.applicationContext.getExternalCacheDir();
+            if (file != null) {
+                return file;
+            }
         }
         externalCacheNotAvailableState = 2;
-        return ApplicationLoader.applicationContext.getCacheDir();
+        File file = ApplicationLoader.applicationContext.getCacheDir();
+        if (file != null) {
+            return file;
+        }
+        return new File("");
     }
 
     public static String bytesToHex(byte[] bytes) {
@@ -668,7 +708,7 @@ public static int getColorIndex(int id) {
         try {
             String str;
             if (id >= 0) {
-                str = String.format(Locale.US, "%d%d", id, UserConfig.clientUserId);
+                str = String.format(Locale.US, "%d%d", id, UserConfig.getClientUserId());
             } else {
                 str = String.format(Locale.US, "%d", id);
             }
@@ -949,7 +989,47 @@ public static String formatFileSize(long size) {
     }
 
     public static void checkForCrashes(Activity context) {
-        CrashManager.register(context, BuildVars.HOCKEY_APP_HASH);
+        CrashManager.register(context, BuildVars.HOCKEY_APP_HASH, new CrashManagerListener() {
+            @Override
+            public boolean includeDeviceData() {
+                return true;
+            }
+
+            @Override
+            public String getDescription() {
+                String description = "";
+
+                try {
+                    File sdCard = ApplicationLoader.applicationContext.getFilesDir();
+                    if (sdCard == null) {
+                        return description;
+                    }
+                    File file = new File(sdCard, "nativeer.log");
+                    if (file == null || !file.exists()) {
+                        return description;
+                    }
+
+                    FileInputStream inputStream = new FileInputStream(file);
+                    BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));
+
+                    StringBuilder log = new StringBuilder();
+                    String line;
+                    while ((line = bufferedReader.readLine()) != null) {
+                        log.append(line);
+                        log.append("\n");
+                    }
+                    bufferedReader.close();
+                    inputStream.close();
+                    description = log.toString();
+
+                    NativeLoader.cleanNativeLog(ApplicationLoader.applicationContext);
+                } catch (Exception e) {
+                    e.printStackTrace();
+                }
+
+                return description;
+            }
+        });
     }
 
     public static void checkForUpdates(Activity context) {
diff --git a/TMessagesProj/src/main/java/org/telegram/objects/MessageObject.java b/TMessagesProj/src/main/java/org/telegram/objects/MessageObject.java
index a2731261d..2d79ca802 100644
--- a/TMessagesProj/src/main/java/org/telegram/objects/MessageObject.java
+++ b/TMessagesProj/src/main/java/org/telegram/objects/MessageObject.java
@@ -108,7 +108,7 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
                         if (who != null && fromUser != null) {
                             if (isFromMe()) {
                                 messageText = LocaleController.getString("ActionYouKickUser", R.string.ActionYouKickUser).replace("un2", Utilities.formatName(who.first_name, who.last_name));
-                            } else if (message.action.user_id == UserConfig.clientUserId) {
+                            } else if (message.action.user_id == UserConfig.getClientUserId()) {
                                 messageText = LocaleController.getString("ActionKickUserYou", R.string.ActionKickUserYou).replace("un1", Utilities.formatName(fromUser.first_name, fromUser.last_name));
                             } else {
                                 messageText = LocaleController.getString("ActionKickUser", R.string.ActionKickUser).replace("un2", Utilities.formatName(who.first_name, who.last_name)).replace("un1", Utilities.formatName(fromUser.first_name, fromUser.last_name));
@@ -125,7 +125,7 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
                     if (whoUser != null && fromUser != null) {
                         if (isFromMe()) {
                             messageText = LocaleController.getString("ActionYouAddUser", R.string.ActionYouAddUser).replace("un2", Utilities.formatName(whoUser.first_name, whoUser.last_name));
-                        } else if (message.action.user_id == UserConfig.clientUserId) {
+                        } else if (message.action.user_id == UserConfig.getClientUserId()) {
                             messageText = LocaleController.getString("ActionAddUserYou", R.string.ActionAddUserYou).replace("un1", Utilities.formatName(fromUser.first_name, fromUser.last_name));
                         } else {
                             messageText = LocaleController.getString("ActionAddUser", R.string.ActionAddUser).replace("un2", Utilities.formatName(whoUser.first_name, whoUser.last_name)).replace("un1", Utilities.formatName(fromUser.first_name, fromUser.last_name));
@@ -207,7 +207,7 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
                     }
                 } else if (message.action instanceof TLRPC.TL_messageActionLoginUnknownLocation) {
                     String date = String.format("%s %s %s", LocaleController.formatterYear.format(((long)message.date) * 1000), LocaleController.getString("OtherAt", R.string.OtherAt), LocaleController.formatterDay.format(((long)message.date) * 1000));
-                    messageText = LocaleController.formatString("NotificationUnrecognizedDevice", R.string.NotificationUnrecognizedDevice, UserConfig.currentUser.first_name, date, message.action.title, message.action.address);
+                    messageText = LocaleController.formatString("NotificationUnrecognizedDevice", R.string.NotificationUnrecognizedDevice, UserConfig.getCurrentUser().first_name, date, message.action.title, message.action.address);
                 } else if (message.action instanceof TLRPC.TL_messageActionUserJoined) {
                     if (fromUser != null) {
                         messageText = LocaleController.formatString("NotificationContactJoined", R.string.NotificationContactJoined, Utilities.formatName(fromUser.first_name, fromUser.last_name));
@@ -550,6 +550,6 @@ public boolean isOut() {
     }
 
     public boolean isFromMe() {
-        return messageOwner.from_id == UserConfig.clientUserId;
+        return messageOwner.from_id == UserConfig.getClientUserId();
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivitySearchAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivitySearchAdapter.java
index 99bcfcb75..0da5808d1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivitySearchAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivitySearchAdapter.java
@@ -72,7 +72,7 @@ private void processSearch(final String query) {
             public void run() {
                 final ArrayList<TLRPC.TL_contact> contactsCopy = new ArrayList<TLRPC.TL_contact>();
                 contactsCopy.addAll(ContactsController.getInstance().contacts);
-                Utilities.globalQueue.postRunnable(new Runnable() {
+                Utilities.searchQueue.postRunnable(new Runnable() {
                     @Override
                     public void run() {
                         String q = query.trim().toLowerCase();
@@ -87,7 +87,7 @@ public void run() {
                         for (TLRPC.TL_contact contact : contactsCopy) {
                             TLRPC.User user = MessagesController.getInstance().users.get(contact.user_id);
                             if (user.first_name != null && user.first_name.toLowerCase().startsWith(q) || user.last_name != null && user.last_name.toLowerCase().startsWith(q)) {
-                                if (user.id == UserConfig.clientUserId) {
+                                if (user.id == UserConfig.getClientUserId()) {
                                     continue;
                                 }
                                 resultArrayNames.add(Utilities.generateSearchName(user.first_name, user.last_name, q));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ApplicationLoader.java b/TMessagesProj/src/main/java/org/telegram/ui/ApplicationLoader.java
index 42ddb9889..48f1c2331 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ApplicationLoader.java
@@ -20,7 +20,7 @@
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
 import android.content.res.Configuration;
-import android.graphics.Bitmap;
+import android.graphics.drawable.Drawable;
 import android.os.AsyncTask;
 import android.os.Handler;
 import android.os.PowerManager;
@@ -53,7 +53,7 @@
     private static final String PROPERTY_APP_VERSION = "appVersion";
     private static final int PLAY_SERVICES_RESOLUTION_REQUEST = 9000;
     public static long lastPauseTime;
-    public static Bitmap cachedWallpaper = null;
+    public static Drawable cachedWallpaper = null;
 
     public static volatile Context applicationContext = null;
     public static volatile Handler applicationHandler = null;
@@ -93,7 +93,7 @@ public static void postInitApplication() {
         }
 
         UserConfig.loadConfig();
-        if (UserConfig.currentUser != null) {
+        if (UserConfig.getCurrentUser() != null) {
             boolean changed = false;
             SharedPreferences preferences = applicationContext.getSharedPreferences("Notifications", MODE_PRIVATE);
             int v = preferences.getInt("v", 0);
@@ -122,8 +122,8 @@ public static void postInitApplication() {
                 editor.commit();
             }
 
-            MessagesController.getInstance().users.put(UserConfig.clientUserId, UserConfig.currentUser);
-            ConnectionsManager.getInstance().applyCountryPortNumber(UserConfig.currentUser.phone);
+            MessagesController.getInstance().users.put(UserConfig.getClientUserId(), UserConfig.getCurrentUser());
+            ConnectionsManager.getInstance().applyCountryPortNumber(UserConfig.getCurrentUser().phone);
             ConnectionsManager.getInstance().initPushConnection();
         }
 
@@ -294,12 +294,14 @@ public void run() {
                 UserConfig.pushString = regid;
                 UserConfig.registeredForPush = !isNew;
                 UserConfig.saveConfig(false);
-                Utilities.RunOnUIThread(new Runnable() {
-                    @Override
-                    public void run() {
-                        MessagesController.getInstance().registerForPush(regid);
-                    }
-                });
+                if (UserConfig.getClientUserId() != 0) {
+                    Utilities.RunOnUIThread(new Runnable() {
+                        @Override
+                        public void run() {
+                            MessagesController.getInstance().registerForPush(regid);
+                        }
+                    });
+                }
             }
         });
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java
index d50c274fe..10d5c1cda 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java
@@ -65,7 +65,7 @@ public ChatAudioCell(Context context) {
         TAG = MediaController.getInstance().generateObserverTag();
 
         avatarImage = new ImageReceiver();
-        avatarImage.parentView = new WeakReference<View>(this);
+        avatarImage.parentView = this;
         seekBar = new SeekBar(context);
         seekBar.delegate = this;
         progressView = new ProgressView();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
index da1731a17..552b411fc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
@@ -20,7 +20,6 @@
 import android.view.HapticFeedbackConstants;
 import android.view.MotionEvent;
 import android.view.SoundEffectConstants;
-import android.view.View;
 import android.view.ViewConfiguration;
 
 import org.telegram.messenger.LocaleController;
@@ -31,8 +30,6 @@
 import org.telegram.objects.MessageObject;
 import org.telegram.ui.Views.ImageReceiver;
 
-import java.lang.ref.WeakReference;
-
 public class ChatBaseCell extends BaseCell {
 
     public static interface ChatBaseCellDelegate {
@@ -149,7 +146,7 @@ public ChatBaseCell(Context context, boolean isMedia) {
         init();
         media = isMedia;
         avatarImage = new ImageReceiver();
-        avatarImage.parentView = new WeakReference<View>(this);
+        avatarImage.parentView = this;
     }
 
     @Override
@@ -236,7 +233,7 @@ protected boolean isUserDataChanged() {
 
         newUser = MessagesController.getInstance().users.get(currentMessageObject.messageOwner.fwd_from_id);
         newNameString = null;
-        if (drawForwardedName && currentMessageObject.messageOwner instanceof TLRPC.TL_messageForwarded) {
+        if (newUser != null && drawForwardedName && currentMessageObject.messageOwner instanceof TLRPC.TL_messageForwarded) {
             newNameString = Utilities.formatName(newUser.first_name, newUser.last_name);
         }
         return currentForwardNameString == null && newNameString != null || currentForwardNameString != null && newNameString == null || currentForwardNameString != null && newNameString != null && !currentForwardNameString.equals(newNameString);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java
index 15370536f..fcc82fc41 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java
@@ -105,7 +105,7 @@ public ChatMediaCell(Context context) {
         TAG = MediaController.getInstance().generateObserverTag();
 
         photoImage = new ImageReceiver();
-        photoImage.parentView = new WeakReference<View>(this);
+        photoImage.parentView = this;
         progressView = new ProgressView();
         progressView.setProgressColors(0x802a2a2a, 0xffffffff);
     }
@@ -417,6 +417,10 @@ public void setMessageObject(MessageObject messageObject) {
                             w = (int) (currentPhotoObject.photoOwner.w / hScale);
                         }
                     }
+                    int timeWidthTotal = timeWidth + Utilities.dp(14 + (currentMessageObject.isOut() ? 20 : 0));
+                    if (w < timeWidthTotal) {
+                        w = timeWidthTotal;
+                    }
 
                     photoWidth = w;
                     photoHeight = h;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatOrUserCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatOrUserCell.java
index a092f8b75..3a6563775 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatOrUserCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatOrUserCell.java
@@ -16,7 +16,6 @@
 import android.text.StaticLayout;
 import android.text.TextPaint;
 import android.text.TextUtils;
-import android.view.View;
 
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.LocaleController;
@@ -28,8 +27,6 @@
 import org.telegram.messenger.Utilities;
 import org.telegram.ui.Views.ImageReceiver;
 
-import java.lang.ref.WeakReference;
-
 public class ChatOrUserCell extends BaseCell {
     private static TextPaint namePaint;
     private static TextPaint nameEncryptedPaint;
@@ -97,7 +94,7 @@ private void init() {
 
         if (avatarImage == null) {
             avatarImage = new ImageReceiver();
-            avatarImage.parentView = new WeakReference<View>(this);
+            avatarImage.parentView = this;
         }
 
         if (cellLayout == null) {
@@ -347,7 +344,7 @@ public void build(int width, int height) {
                     onlineString = subLabel;
                 } else {
                     onlineString = LocaleController.formatUserStatus(user);
-                    if (user != null && (user.id == UserConfig.clientUserId || user.status != null && user.status.expires > ConnectionsManager.getInstance().getCurrentTime())) {
+                    if (user != null && (user.id == UserConfig.getClientUserId() || user.status != null && user.status.expires > ConnectionsManager.getInstance().getCurrentTime())) {
                         currentOnlinePaint = onlinePaint;
                         onlineString = LocaleController.getString("Online", R.string.Online);
                     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
index 88dcaac00..e549d4bfb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
@@ -16,7 +16,6 @@
 import android.text.StaticLayout;
 import android.text.TextPaint;
 import android.text.TextUtils;
-import android.view.View;
 
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.LocaleController;
@@ -30,8 +29,6 @@
 import org.telegram.objects.MessageObject;
 import org.telegram.ui.Views.ImageReceiver;
 
-import java.lang.ref.WeakReference;
-
 public class DialogCell extends BaseCell {
     private static TextPaint namePaint;
     private static TextPaint nameEncryptedPaint;
@@ -134,7 +131,7 @@ private void init() {
 
         if (avatarImage == null) {
             avatarImage = new ImageReceiver();
-            avatarImage.parentView = new WeakReference<View>(this);
+            avatarImage.parentView = this;
         }
 
         if (cellLayout == null) {
@@ -426,7 +423,7 @@ public void build(int width, int height) {
                         } else if (encryptedChat instanceof TLRPC.TL_encryptedChatDiscarded) {
                             messageString = LocaleController.getString("EncryptionRejected", R.string.EncryptionRejected);
                         } else if (encryptedChat instanceof TLRPC.TL_encryptedChat) {
-                            if (encryptedChat.admin_id == UserConfig.clientUserId) {
+                            if (encryptedChat.admin_id == UserConfig.getClientUserId()) {
                                 if (user != null && user.first_name != null) {
                                     messageString = LocaleController.formatString("EncryptedChatStartedOutgoing", R.string.EncryptedChatStartedOutgoing, user.first_name);
                                 } else {
@@ -550,7 +547,7 @@ public void build(int width, int height) {
                 nameString = chat.title;
             } else if (user != null) {
                 if (user.id / 1000 != 333 && ContactsController.getInstance().contactsDict.get(user.id) == null) {
-                    if (ContactsController.getInstance().contactsDict.size() == 0 && (!ContactsController.getInstance().contactsLoaded || ContactsController.getInstance().loadingContacts)) {
+                    if (ContactsController.getInstance().contactsDict.size() == 0 && (!ContactsController.getInstance().contactsLoaded || ContactsController.getInstance().isLoadingContacts())) {
                         nameString = Utilities.formatName(user.first_name, user.last_name);
                     } else {
                         if (user.phone != null && user.phone.length() != 0) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index fc3b36bb6..4aa393402 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -21,7 +21,7 @@
 import android.graphics.Bitmap;
 import android.graphics.Rect;
 import android.graphics.drawable.AnimationDrawable;
-import android.graphics.drawable.BitmapDrawable;
+import android.graphics.drawable.Drawable;
 import android.media.MediaPlayer;
 import android.media.ThumbnailUtils;
 import android.net.Uri;
@@ -60,6 +60,7 @@
 import android.widget.ProgressBar;
 import android.widget.RelativeLayout;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.LocaleController;
@@ -101,7 +102,10 @@
 import java.util.HashMap;
 import java.util.concurrent.Semaphore;
 
-public class ChatActivity extends BaseFragment implements SizeNotifierRelativeLayout.SizeNotifierRelativeLayoutDelegate, NotificationCenter.NotificationCenterDelegate, MessagesActivity.MessagesActivityDelegate, DocumentSelectActivity.DocumentSelectActivityDelegate, PhotoViewer.PhotoViewerProvider {
+public class ChatActivity extends BaseFragment implements SizeNotifierRelativeLayout.SizeNotifierRelativeLayoutDelegate,
+        NotificationCenter.NotificationCenterDelegate, MessagesActivity.MessagesActivityDelegate,
+        DocumentSelectActivity.DocumentSelectActivityDelegate, PhotoViewer.PhotoViewerProvider,
+        PhotoPickerActivity.PhotoPickerActivityDelegate {
 
     private View timeItem;
     private View menuItem;
@@ -415,7 +419,8 @@ public void onFragmentDestroy() {
 
     public View createView(LayoutInflater inflater, ViewGroup container) {
         if (fragmentView == null) {
-            actionBarLayer.setDisplayHomeAsUpEnabled(true);
+            actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
+            actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
             actionBarLayer.setActionBarMenuOnItemClick(new ActionBarLayer.ActionBarMenuOnItemClick() {
                 @Override
                 public void onItemClick(int id) {
@@ -439,30 +444,26 @@ public void onItemClick(int id) {
                             FileLog.e("tmessages", e);
                         }
                     } else if (id == attach_gallery) {
-                        try {
-                            Intent photoPickerIntent = new Intent(Intent.ACTION_PICK);
-                            photoPickerIntent.setType("image/*");
-                            getParentActivity().startActivityForResult(photoPickerIntent, 1);
-                        } catch (Exception e) {
-                            FileLog.e("tmessages", e);
-                        }
+                        PhotoPickerActivity fragment = new PhotoPickerActivity();
+                        fragment.setDelegate(ChatActivity.this);
+                        presentFragment(fragment);
                     } else if (id == attach_video) {
                         try {
                             Intent pickIntent = new Intent();
                             pickIntent.setType("video/*");
                             pickIntent.setAction(Intent.ACTION_GET_CONTENT);
-                            pickIntent.putExtra(MediaStore.EXTRA_SIZE_LIMIT, (long)(1024 * 1024 * 1000));
+                            pickIntent.putExtra(MediaStore.EXTRA_SIZE_LIMIT, (long) (1024 * 1024 * 1000));
                             Intent takeVideoIntent = new Intent(MediaStore.ACTION_VIDEO_CAPTURE);
                             File video = Utilities.generateVideoPath();
                             if (video != null) {
-                                if(android.os.Build.VERSION.SDK_INT > 16) {
+                                if (android.os.Build.VERSION.SDK_INT > 16) {
                                     takeVideoIntent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(video));
                                 }
-                                takeVideoIntent.putExtra(MediaStore.EXTRA_SIZE_LIMIT, (long)(1024 * 1024 * 1000));
+                                takeVideoIntent.putExtra(MediaStore.EXTRA_SIZE_LIMIT, (long) (1024 * 1024 * 1000));
                                 currentPicturePath = video.getAbsolutePath();
                             }
                             Intent chooserIntent = Intent.createChooser(pickIntent, "");
-                            chooserIntent.putExtra(Intent.EXTRA_INITIAL_INTENTS, new Intent[] { takeVideoIntent });
+                            chooserIntent.putExtra(Intent.EXTRA_INITIAL_INTENTS, new Intent[]{takeVideoIntent});
 
                             getParentActivity().startActivityForResult(chooserIntent, 2);
                         } catch (Exception e) {
@@ -515,11 +516,11 @@ public void onItemClick(int id) {
                             str += messageObject.messageOwner.message;
                         }
                         if (str.length() != 0) {
-                            if(android.os.Build.VERSION.SDK_INT < 11) {
-                                android.text.ClipboardManager clipboard = (android.text.ClipboardManager)ApplicationLoader.applicationContext.getSystemService(Context.CLIPBOARD_SERVICE);
+                            if (android.os.Build.VERSION.SDK_INT < 11) {
+                                android.text.ClipboardManager clipboard = (android.text.ClipboardManager) ApplicationLoader.applicationContext.getSystemService(Context.CLIPBOARD_SERVICE);
                                 clipboard.setText(str);
                             } else {
-                                android.content.ClipboardManager clipboard = (android.content.ClipboardManager)ApplicationLoader.applicationContext.getSystemService(Context.CLIPBOARD_SERVICE);
+                                android.content.ClipboardManager clipboard = (android.content.ClipboardManager) ApplicationLoader.applicationContext.getSystemService(Context.CLIPBOARD_SERVICE);
                                 android.content.ClipData clip = android.content.ClipData.newPlainText("label", str);
                                 clipboard.setPrimaryClip(clip);
                             }
@@ -553,6 +554,7 @@ public void onItemClick(int id) {
                     }
                 }
             });
+
             updateSubtitle();
 
             if (currentEncryptedChat != null) {
@@ -643,33 +645,41 @@ public void onItemClick(int id) {
 
             updateContactStatus();
 
-            ImageView backgroundImage = (ImageView) fragmentView.findViewById(R.id.background_image);
-
             SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
             int selectedBackground = preferences.getInt("selectedBackground", 1000001);
             int selectedColor = preferences.getInt("selectedColor", 0);
             if (selectedColor != 0) {
-                backgroundImage.setBackgroundColor(selectedColor);
+                contentView.setBackgroundColor(selectedColor);
                 chatListView.setCacheColorHint(selectedColor);
             } else {
                 chatListView.setCacheColorHint(0);
-                if (selectedBackground == 1000001) {
-                    backgroundImage.setImageResource(R.drawable.background_hd);
-                } else {
-                    File toFile = new File(ApplicationLoader.applicationContext.getFilesDir(), "wallpaper.jpg");
-                    if (toFile.exists()) {
-                        if (ApplicationLoader.cachedWallpaper != null) {
-                            backgroundImage.setImageBitmap(ApplicationLoader.cachedWallpaper);
-                        } else {
-                            backgroundImage.setImageURI(Uri.fromFile(toFile));
-                            if (backgroundImage.getDrawable() instanceof BitmapDrawable) {
-                                ApplicationLoader.cachedWallpaper = ((BitmapDrawable)backgroundImage.getDrawable()).getBitmap();
+                try {
+                    if (selectedBackground == 1000001) {
+                        ((SizeNotifierRelativeLayout) contentView).setBackgroundImage(R.drawable.background_hd);
+                    } else {
+                        File toFile = new File(ApplicationLoader.applicationContext.getFilesDir(), "wallpaper.jpg");
+                        if (toFile.exists()) {
+                            if (ApplicationLoader.cachedWallpaper != null) {
+                                ((SizeNotifierRelativeLayout) contentView).setBackgroundImage(ApplicationLoader.cachedWallpaper);
+                            } else {
+                                Drawable drawable = Drawable.createFromPath(toFile.getAbsolutePath());
+                                if (drawable != null) {
+                                    ((SizeNotifierRelativeLayout) contentView).setBackgroundImage(drawable);
+                                    ApplicationLoader.cachedWallpaper = drawable;
+                                } else {
+                                    contentView.setBackgroundColor(-2693905);
+                                    chatListView.setCacheColorHint(-2693905);
+                                }
                             }
+                            isCustomTheme = true;
+                        } else {
+                            ((SizeNotifierRelativeLayout) contentView).setBackgroundImage(R.drawable.background_hd);
                         }
-                        isCustomTheme = true;
-                    } else {
-                        backgroundImage.setImageResource(R.drawable.background_hd);
                     }
+                } catch (Exception e) {
+                    contentView.setBackgroundColor(-2693905);
+                    chatListView.setCacheColorHint(-2693905);
+                    FileLog.e("tmessages", e);
                 }
             }
 
@@ -686,7 +696,7 @@ public void onItemClick(int id) {
                 View v = contentView.findViewById(R.id.secret_placeholder);
                 v.setVisibility(View.VISIBLE);
 
-                if (currentEncryptedChat.admin_id == UserConfig.clientUserId) {
+                if (currentEncryptedChat.admin_id == UserConfig.getClientUserId()) {
                     if (currentUser.first_name.length() > 0) {
                         secretViewStatusTextView.setText(LocaleController.formatString("EncryptedPlaceholderTitleOutgoing", R.string.EncryptedPlaceholderTitleOutgoing, currentUser.first_name));
                     } else {
@@ -989,6 +999,9 @@ public void afterTextChanged(Editable editable) {
             bottomOverlayChat.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View view) {
+                    if (getParentActivity() == null) {
+                        return;
+                    }
                     AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                     builder.setMessage(LocaleController.getString("AreYouSure", R.string.AreYouSure));
                     builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
@@ -1262,6 +1275,9 @@ private void checkActionBarMenu() {
             timerButton.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View view) {
+                    if (getParentActivity() == null) {
+                        return;
+                    }
                     AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                     builder.setTitle(LocaleController.getString("MessageLifetime", R.string.MessageLifetime));
                     builder.setItems(new CharSequence[]{
@@ -1347,7 +1363,7 @@ private void updateOnlineCount() {
         int currentTime = ConnectionsManager.getInstance().getCurrentTime();
         for (TLRPC.TL_chatParticipant participant : info.participants) {
             TLRPC.User user = MessagesController.getInstance().users.get(participant.user_id);
-            if (user != null && user.status != null && (user.status.expires > currentTime || user.id == UserConfig.clientUserId) && user.status.expires > 10000) {
+            if (user != null && user.status != null && (user.status.expires > currentTime || user.id == UserConfig.getClientUserId()) && user.status.expires > 10000) {
                 onlineCount++;
             }
         }
@@ -1505,7 +1521,7 @@ private void updateSubtitle() {
         if (currentChat != null) {
             actionBarLayer.setTitle(currentChat.title);
         } else if (currentUser != null) {
-            if (currentUser.id / 1000 != 333 && ContactsController.getInstance().contactsDict.get(currentUser.id) == null && (ContactsController.getInstance().contactsDict.size() != 0 || !ContactsController.getInstance().loadingContacts)) {
+            if (currentUser.id / 1000 != 333 && ContactsController.getInstance().contactsDict.get(currentUser.id) == null && (ContactsController.getInstance().contactsDict.size() != 0 || !ContactsController.getInstance().isLoadingContacts())) {
                 if (currentUser.phone != null && currentUser.phone.length() != 0) {
                     actionBarLayer.setTitle(PhoneFormat.getInstance().format("+" + currentUser.phone));
                 } else {
@@ -1635,6 +1651,7 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
                 currentPicturePath = null;
             } else if (requestCode == 1) {
                 if (data == null || data.getData() == null) {
+                    showAttachmentError();
                     return;
                 }
                 String tempPath = Utilities.getPath(data.getData());
@@ -1645,7 +1662,7 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
                 } else if (tempPath == null) {
                     isGif = MediaController.isGif(data.getData());
                     if (isGif) {
-                        tempPath = MediaController.copyDocumentToCache(data.getData());
+                        tempPath = MediaController.copyDocumentToCache(data.getData(), "gif");
                     }
                 }
 
@@ -1688,10 +1705,32 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
                     currentPicturePath = null;
                 }
                 processSendingVideo(videoPath);
+            } else if (requestCode == 21) {
+                if (data == null || data.getData() == null) {
+                    showAttachmentError();
+                    return;
+                }
+                String tempPath = Utilities.getPath(data.getData());
+                if (tempPath == null) {
+                    tempPath = MediaController.copyDocumentToCache(data.getData(), "file");
+                }
+                if (tempPath == null) {
+                    showAttachmentError();
+                    return;
+                }
+                processSendingDocument(tempPath);
             }
         }
     }
 
+    private void showAttachmentError() {
+        if (getParentActivity() == null) {
+            return;
+        }
+        Toast toast = Toast.makeText(getParentActivity(), LocaleController.getString("UnsupportedAttachment", R.string.UnsupportedAttachment), Toast.LENGTH_SHORT);
+        toast.show();
+    }
+
     @Override
     public void saveSelfArgs(Bundle args) {
         if (currentPicturePath != null) {
@@ -1731,6 +1770,60 @@ public void processSendingPhoto(String imageFilePath, Uri imageUri) {
         }
     }
 
+    public void processSendingPhotos(ArrayList<String> paths, ArrayList<Uri> uris) {
+        if (paths == null && uris == null || paths != null && paths.isEmpty() || uris != null && uris.isEmpty()) {
+            return;
+        }
+        final ArrayList<String> pathsCopy = new ArrayList<String>();
+        final ArrayList<Uri> urisCopy = new ArrayList<Uri>();
+        if (paths != null) {
+            pathsCopy.addAll(paths);
+        }
+        if (uris != null) {
+            urisCopy.addAll(uris);
+        }
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+                int count = !pathsCopy.isEmpty() ? pathsCopy.size() : urisCopy.size();
+                String path = null;
+                Uri uri = null;
+                for (int a = 0; a < count; a++) {
+                    if (!pathsCopy.isEmpty()) {
+                        path = pathsCopy.get(a);
+                    } else if (!urisCopy.isEmpty()) {
+                        uri = urisCopy.get(a);
+                    }
+
+                    boolean isGif = false;
+                    if (path != null && path.endsWith(".gif")) {
+                        final String finalPath = path;
+                        Utilities.RunOnUIThread(new Runnable() {
+                            @Override
+                            public void run() {
+                                processSendingDocument(finalPath);
+                            }
+                        });
+                    } else {
+                        final TLRPC.TL_photo photo = MessagesController.getInstance().generatePhotoSizes(path, uri);
+                        Utilities.RunOnUIThread(new Runnable() {
+                            @Override
+                            public void run() {
+                                if (photo != null) {
+                                    MessagesController.getInstance().sendMessage(photo, dialog_id);
+                                    if (chatListView != null) {
+                                        chatListView.setSelection(messages.size() + 1);
+                                    }
+                                    scrollToTopOnResume = true;
+                                }
+                            }
+                        });
+                    }
+                }
+            }
+        }).start();
+    }
+
     public void processSendingDocument(String documentFilePath) {
         if (documentFilePath == null || documentFilePath.length() == 0) {
             return;
@@ -1750,7 +1843,7 @@ public void processSendingDocument(String documentFilePath) {
         }
         TLRPC.TL_document document = new TLRPC.TL_document();
         document.id = 0;
-        document.user_id = UserConfig.clientUserId;
+        document.user_id = UserConfig.getClientUserId();
         document.date = ConnectionsManager.getInstance().getCurrentTime();
         document.file_name = name;
         document.size = (int)f.length();
@@ -1998,7 +2091,7 @@ public void run() {
                             View firstVisView = chatListView.getChildAt(chatListView.getChildCount() - 1);
                             int top = ((firstVisView == null) ? 0 : firstVisView.getTop()) - chatListView.getPaddingTop();
                             chatAdapter.notifyDataSetChanged();
-                            chatListView.setSelectionFromTop(firstVisPos + newRowsCount, top);
+                            chatListView.setSelectionFromTop(firstVisPos + newRowsCount - (endReached ? 1 : 0), top);
                         }
 
                         if (paused) {
@@ -2253,9 +2346,7 @@ public void run() {
                         dayArr.remove(obj);
                         if (dayArr.isEmpty()) {
                             messagesByDays.remove(obj.dateKey);
-                            if (index != -1) {
-                                messages.remove(index);
-                            }
+                            messages.remove(index);
                         }
                         updated = true;
                     }
@@ -2485,7 +2576,7 @@ private void updateContactStatus() {
                     || currentUser instanceof TLRPC.TL_userEmpty || currentUser instanceof TLRPC.TL_userDeleted
                     || (currentUser.phone != null && currentUser.phone.length() != 0 &&
                     ContactsController.getInstance().contactsDict.get(currentUser.id) != null &&
-                    (ContactsController.getInstance().contactsDict.size() != 0 || !ContactsController.getInstance().loadingContacts))) {
+                    (ContactsController.getInstance().contactsDict.size() != 0 || !ContactsController.getInstance().isLoadingContacts()))) {
                 topPanel.setVisibility(View.GONE);
             } else {
                 topPanel.setVisibility(View.VISIBLE);
@@ -2528,6 +2619,9 @@ public void onClick(View v) {
                         topPanel.setOnClickListener(new View.OnClickListener() {
                             @Override
                             public void onClick(View v) {
+                                if (getParentActivity() == null) {
+                                    return;
+                                }
                                 AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                                 builder.setMessage(LocaleController.getString("AreYouSure", R.string.AreYouSure));
                                 builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
@@ -2536,7 +2630,7 @@ public void onClick(View v) {
                                     public void onClick(DialogInterface dialogInterface, int i) {
                                         MessagesController.getInstance().hidenAddToContacts.put(currentUser.id, currentUser);
                                         topPanel.setVisibility(View.GONE);
-                                        MessagesController.getInstance().sendMessage(UserConfig.currentUser, dialog_id);
+                                        MessagesController.getInstance().sendMessage(UserConfig.getCurrentUser(), dialog_id);
                                         chatListView.post(new Runnable() {
                                             @Override
                                             public void run() {
@@ -2650,9 +2744,6 @@ public void onResume() {
             scrollToTopUnReadOnResume = false;
             scrollToTopOnResume = false;
         }
-        if (emojiView != null) {
-            emojiView.loadRecents();
-        }
         paused = false;
         if (readWhenResume && !messages.isEmpty()) {
             readWhenResume = false;
@@ -2687,6 +2778,22 @@ public void run() {
         }
     }
 
+    @Override
+    public void didSelectPhotos(ArrayList<String> photos) {
+        processSendingPhotos(photos, null);
+    }
+
+    @Override
+    public void startPhotoSelectActivity() {
+        try {
+            Intent photoPickerIntent = new Intent(Intent.ACTION_PICK);
+            photoPickerIntent.setType("image/*");
+            getParentActivity().startActivityForResult(photoPickerIntent, 1);
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
+        }
+    }
+
     @Override
     public void onBeginSlide() {
         super.onBeginSlide();
@@ -2762,6 +2869,7 @@ private void updateInformationForScreenshotDetector() {
     }
 
     private void fixLayout() {
+        final int lastPos = chatListView.getLastVisiblePosition();
         ViewTreeObserver obs = chatListView.getViewTreeObserver();
         obs.addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener() {
             @Override
@@ -2785,6 +2893,14 @@ public boolean onPreDraw() {
                     params.height = height;
                     avatarImageView.setLayoutParams(params);
                 }
+                if (lastPos >= messages.size() - 1) {
+                    chatListView.post(new Runnable() {
+                        @Override
+                        public void run() {
+                            chatListView.setSelectionFromTop(messages.size() - 1, -100000 - chatListView.getPaddingTop());
+                        }
+                    });
+                }
                 return false;
             }
         });
@@ -2818,10 +2934,6 @@ public void createMenu(View v, boolean single) {
             return;
         }
 
-        selectedObject = null;
-        forwaringMessage = null;
-        selectedMessagesCanCopyIds.clear();
-        selectedMessagesIds.clear();
         View parentView = getRowParentView(v);
         if (parentView == null) {
             return;
@@ -2834,9 +2946,18 @@ public void createMenu(View v, boolean single) {
             message = holder.message;
         }
         final int type = getMessageType(message);
+
+        selectedObject = null;
+        forwaringMessage = null;
+        selectedMessagesCanCopyIds.clear();
+        selectedMessagesIds.clear();
+
         if (single || type < 2) {
             if (type >= 0) {
                 selectedObject = message;
+                if (getParentActivity() == null) {
+                    return;
+                }
                 AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
 
                 CharSequence[] items = null;
@@ -2876,6 +2997,9 @@ public void createMenu(View v, boolean single) {
                 builder.setItems(items, new DialogInterface.OnClickListener() {
                     @Override
                     public void onClick(DialogInterface dialogInterface, int i) {
+                        if (selectedObject == null) {
+                            return;
+                        }
                         if (type == 0) {
                             if (i == 0) {
                                 processSelectedOption(0);
@@ -2980,6 +3104,9 @@ public void onClick(DialogInterface dialogInterface, int i) {
                                     if (LocaleController.getInstance().applyLanguageFile(locFile)) {
                                         presentFragment(new LanguageSelectActivity());
                                     } else {
+                                        if (getParentActivity() == null) {
+                                            return;
+                                        }
                                         AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                                         builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
                                         builder.setMessage(LocaleController.getString("IncorrectLocalization", R.string.IncorrectLocalization));
@@ -3147,7 +3274,7 @@ public void didSelectFile(DocumentSelectActivity activity, String path, String n
         activity.finishFragment();
         TLRPC.TL_document document = new TLRPC.TL_document();
         document.id = 0;
-        document.user_id = UserConfig.clientUserId;
+        document.user_id = UserConfig.getClientUserId();
         document.date = ConnectionsManager.getInstance().getCurrentTime();
         document.file_name = name;
         document.size = (int)size;
@@ -3182,6 +3309,17 @@ public void didSelectFile(DocumentSelectActivity activity, String path, String n
         MessagesController.getInstance().sendMessage(document, dialog_id);
     }
 
+    @Override
+    public void startDocumentSelectActivity() {
+        try {
+            Intent photoPickerIntent = new Intent(Intent.ACTION_PICK);
+            photoPickerIntent.setType("*/*");
+            getParentActivity().startActivityForResult(photoPickerIntent, 21);
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
+        }
+    }
+
     @Override
     public void didSelectDialog(MessagesActivity activity, long did) {
         if (dialog_id != 0 && (forwaringMessage != null || !selectedMessagesIds.isEmpty())) {
@@ -3261,9 +3399,12 @@ public boolean onBackPressed() {
 
     public boolean isGoogleMapsInstalled() {
         try {
-            ApplicationInfo info = ApplicationLoader.applicationContext.getPackageManager().getApplicationInfo("com.google.android.apps.maps", 0 );
+            ApplicationInfo info = ApplicationLoader.applicationContext.getPackageManager().getApplicationInfo("com.google.android.apps.maps", 0);
             return true;
         } catch(PackageManager.NameNotFoundException e) {
+            if (getParentActivity() == null) {
+                return false;
+            }
             AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
             builder.setMessage("Install Google Maps?");
             builder.setCancelable(true);
@@ -3384,6 +3525,9 @@ private void updateRowBackground(ChatListRowHolderEx holder, boolean disableSele
     }
 
     private void alertUserOpenError(MessageObject message) {
+        if (getParentActivity() == null) {
+            return;
+        }
         AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
         builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
         builder.setPositiveButton(R.string.OK, null);
@@ -3396,7 +3540,7 @@ private void alertUserOpenError(MessageObject message) {
     }
 
     @Override
-    public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation) {
+    public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) {
         if (messageObject == null) {
             return null;
         }
@@ -3441,9 +3585,25 @@ private void alertUserOpenError(MessageObject message) {
     }
 
     @Override
-    public void willHidePhotoViewer() {
-        updateVisibleRows();
-    }
+    public void willSwitchFromPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) { }
+
+    @Override
+    public void willHidePhotoViewer() { }
+
+    @Override
+    public boolean isPhotoChecked(int index) { return false; }
+
+    @Override
+    public void setPhotoChecked(int index) { }
+
+    @Override
+    public void cancelButtonPressed() { }
+
+    @Override
+    public void sendButtonPressed(int index) { }
+
+    @Override
+    public int getSelectedCount() { return 0; }
 
     private class ChatAdapter extends BaseAdapter {
 
@@ -3567,7 +3727,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 ((ChatBaseCell)view).delegate = new ChatBaseCell.ChatBaseCellDelegate() {
                     @Override
                     public void didPressedUserAvatar(ChatBaseCell cell, TLRPC.User user) {
-                        if (user != null && user.id != UserConfig.clientUserId) {
+                        if (user != null && user.id != UserConfig.getClientUserId()) {
                             Bundle args = new Bundle();
                             args.putInt("user_id", user.id);
                             presentFragment(new UserProfileActivity(args));
@@ -3778,7 +3938,7 @@ public void update() {
                     }
                     int placeHolderId = Utilities.getUserAvatarForId(contactUser.id);
                     contactAvatar.setImage(photo, "50_50", placeHolderId);
-                    if (contactUser.id != UserConfig.clientUserId && ContactsController.getInstance().contactsDict.get(contactUser.id) == null) {
+                    if (contactUser.id != UserConfig.getClientUserId() && ContactsController.getInstance().contactsDict.get(contactUser.id) == null) {
                         addContactView.setVisibility(View.VISIBLE);
                     } else {
                         addContactView.setVisibility(View.GONE);
@@ -4084,7 +4244,7 @@ public void onClick(View view) {
                                 processRowSelect(view);
                                 return;
                             }
-                            if (message.messageOwner.media.user_id != UserConfig.clientUserId) {
+                            if (message.messageOwner.media.user_id != UserConfig.getClientUserId()) {
                                 TLRPC.User user = null;
                                 if (message.messageOwner.media.user_id != 0) {
                                     user = MessagesController.getInstance().users.get(message.messageOwner.media.user_id);
@@ -4097,6 +4257,9 @@ public void onClick(View view) {
                                     if (message.messageOwner.media.phone_number == null || message.messageOwner.media.phone_number.length() == 0) {
                                         return;
                                     }
+                                    if (getParentActivity() == null) {
+                                        return;
+                                    }
                                     AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                                     builder.setItems(new CharSequence[] {LocaleController.getString("Copy", R.string.Copy), LocaleController.getString("Call", R.string.Call)}, new DialogInterface.OnClickListener() {
                                                 @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java
index 76e5d9bb5..36ee8a5f4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java
@@ -31,6 +31,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.MessagesStorage;
 import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLog;
@@ -51,6 +52,7 @@
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.HashMap;
+import java.util.concurrent.Semaphore;
 
 public class ChatProfileActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, ContactsActivity.ContactsActivityDelegate, PhotoViewer.PhotoViewerProvider {
     private ListView listView;
@@ -63,6 +65,7 @@
     private int totalMediaCount = -1;
     private int onlineCount = -1;
     private ArrayList<Integer> sortedUsers = new ArrayList<Integer>();
+    private TLRPC.Chat currentChat;
 
     private int avatarRow;
     private int settingsSectionRow;
@@ -85,12 +88,35 @@ public ChatProfileActivity(Bundle args) {
     @Override
     public boolean onFragmentCreate() {
         super.onFragmentCreate();
+
+        chat_id = getArguments().getInt("chat_id", 0);
+        currentChat = MessagesController.getInstance().chats.get(chat_id);
+        if (currentChat == null) {
+            final Semaphore semaphore = new Semaphore(0);
+            MessagesStorage.getInstance().storageQueue.postRunnable(new Runnable() {
+                @Override
+                public void run() {
+                    currentChat = MessagesStorage.getInstance().getChat(chat_id);
+                    semaphore.release();
+                }
+            });
+            try {
+                semaphore.acquire();
+            } catch (Exception e) {
+                FileLog.e("tmessages", e);
+            }
+            if (currentChat != null) {
+                MessagesController.getInstance().chats.put(currentChat.id, currentChat);
+            } else {
+                return false;
+            }
+        }
+
         NotificationCenter.getInstance().addObserver(this, MessagesController.updateInterfaces);
         NotificationCenter.getInstance().addObserver(this, MessagesController.chatInfoDidLoaded);
         NotificationCenter.getInstance().addObserver(this, MessagesController.mediaCountDidLoaded);
         NotificationCenter.getInstance().addObserver(this, MessagesController.closeChats);
 
-        chat_id = getArguments().getInt("chat_id", 0);
         updateOnlineCount();
         MessagesController.getInstance().getMediaCount(-chat_id, classGuid, true);
         avatarUpdater.delegate = new AvatarUpdater.AvatarUpdaterDelegate() {
@@ -144,7 +170,8 @@ public void onFragmentDestroy() {
 
     public View createView(LayoutInflater inflater, ViewGroup container) {
         if (fragmentView == null) {
-            actionBarLayer.setDisplayHomeAsUpEnabled(true);
+            actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
+            actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
             actionBarLayer.setTitle(LocaleController.getString("GroupInfo", R.string.GroupInfo));
             actionBarLayer.setActionBarMenuOnItemClick(new ActionBarLayer.ActionBarMenuOnItemClick() {
                 @Override
@@ -171,11 +198,15 @@ public void onItemClick(int id) {
                 @Override
                 public boolean onItemLongClick(AdapterView<?> adapterView, View view, int i, long l) {
                     if (i > membersSectionRow && i < addMemberRow) {
+                        if (getParentActivity() == null) {
+                            return false;
+                        }
+
                         TLRPC.TL_chatParticipant user = info.participants.get(sortedUsers.get(i - membersSectionRow - 1));
-                        if (user.user_id == UserConfig.clientUserId) {
+                        if (user.user_id == UserConfig.getClientUserId()) {
                             return false;
                         }
-                        if (info.admin_id != UserConfig.clientUserId && user.inviter_id != UserConfig.clientUserId) {
+                        if (info.admin_id != UserConfig.getClientUserId() && user.inviter_id != UserConfig.getClientUserId()) {
                             return false;
                         }
                         selectedUser = user;
@@ -239,13 +270,16 @@ public void onItemClick(AdapterView<?> adapterView, View view, final int i, long
                         openAddMenu();
                     } else if (i > membersSectionRow && i < addMemberRow) {
                         int user_id = info.participants.get(sortedUsers.get(i - membersSectionRow - 1)).user_id;
-                        if (user_id == UserConfig.clientUserId) {
+                        if (user_id == UserConfig.getClientUserId()) {
                             return;
                         }
                         Bundle args = new Bundle();
                         args.putInt("user_id", user_id);
                         presentFragment(new UserProfileActivity(args));
                     } else if (i == settingsVibrateRow || i == settingsNotificationsRow) {
+                        if (getParentActivity() == null) {
+                            return;
+                        }
                         AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                         builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
                         builder.setItems(new CharSequence[] {
@@ -331,13 +365,14 @@ public void saveSelfArgs(Bundle args) {
 
     @Override
     public void restoreSelfArgs(Bundle args) {
+        MessagesController.getInstance().loadChatInfo(chat_id);
         if (avatarUpdater != null) {
             avatarUpdater.currentPicturePath = args.getString("path");
         }
     }
 
     @Override
-    public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation) {
+    public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) {
         if (fileLocation == null) {
             return null;
         }
@@ -368,9 +403,25 @@ public void restoreSelfArgs(Bundle args) {
     }
 
     @Override
-    public void willHidePhotoViewer() {
+    public void willSwitchFromPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) { }
 
-    }
+    @Override
+    public void willHidePhotoViewer() { }
+
+    @Override
+    public boolean isPhotoChecked(int index) { return false; }
+
+    @Override
+    public void setPhotoChecked(int index) { }
+
+    @Override
+    public void cancelButtonPressed() { }
+
+    @Override
+    public void sendButtonPressed(int index) { }
+
+    @Override
+    public int getSelectedCount() { return 0; }
 
     public void didReceivedNotification(int id, Object... args) {
         if (id == MessagesController.updateInterfaces) {
@@ -440,7 +491,7 @@ private void updateOnlineCount() {
         int i = 0;
         for (TLRPC.TL_chatParticipant participant : info.participants) {
             TLRPC.User user = MessagesController.getInstance().users.get(participant.user_id);
-            if (user != null && user.status != null && (user.status.expires > currentTime || user.id == UserConfig.clientUserId) && user.status.expires > 10000) {
+            if (user != null && user.status != null && (user.status.expires > currentTime || user.id == UserConfig.getClientUserId()) && user.status.expires > 10000) {
                 onlineCount++;
             }
             sortedUsers.add(i);
@@ -455,14 +506,14 @@ public int compare(Integer lhs, Integer rhs) {
                 Integer status1 = 0;
                 Integer status2 = 0;
                 if (user1 != null && user1.status != null) {
-                    if (user1.id == UserConfig.clientUserId) {
+                    if (user1.id == UserConfig.getClientUserId()) {
                         status1 = ConnectionsManager.getInstance().getCurrentTime() + 50000;
                     } else {
                         status1 = user1.status.expires;
                     }
                 }
                 if (user2 != null && user2.status != null) {
-                    if (user2.id == UserConfig.clientUserId) {
+                    if (user2.id == UserConfig.getClientUserId()) {
                         status2 = ConnectionsManager.getInstance().getCurrentTime() + 50000;
                     } else {
                         status2 = user2.status.expires;
@@ -517,7 +568,7 @@ private void kickUser(TLRPC.TL_chatParticipant user) {
         } else {
             NotificationCenter.getInstance().removeObserver(this, MessagesController.closeChats);
             NotificationCenter.getInstance().postNotificationName(MessagesController.closeChats);
-            MessagesController.getInstance().deleteUserFromChat(chat_id, MessagesController.getInstance().users.get(UserConfig.clientUserId), info);
+            MessagesController.getInstance().deleteUserFromChat(chat_id, MessagesController.getInstance().users.get(UserConfig.getClientUserId()), info);
             MessagesController.getInstance().deleteDialog(-chat_id, 0, false);
             finishFragment();
         }
@@ -586,6 +637,9 @@ public void onClick(View view) {
                     button2.setOnClickListener(new View.OnClickListener() {
                         @Override
                         public void onClick(View view) {
+                            if (getParentActivity() == null) {
+                                return;
+                            }
                             AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                             CharSequence[] items;
                             int type;
@@ -740,6 +794,9 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     textView.setOnClickListener(new View.OnClickListener() {
                         @Override
                         public void onClick(View view) {
+                            if (getParentActivity() == null) {
+                                return;
+                            }
                             AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                             builder.setMessage(LocaleController.getString("AreYouSure", R.string.AreYouSure));
                             builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileChangeNameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileChangeNameActivity.java
index f3532402d..1902d8fb2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileChangeNameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileChangeNameActivity.java
@@ -67,9 +67,9 @@ public void onClick(View view) {
                 }
             });
 
-            cancelButton.setText(LocaleController.getString("Cancel", R.string.Cancel));
+            cancelButton.setText(LocaleController.getString("Cancel", R.string.Cancel).toUpperCase());
             TextView textView = (TextView)doneButton.findViewById(R.id.done_button_text);
-            textView.setText(LocaleController.getString("Done", R.string.Done));
+            textView.setText(LocaleController.getString("Done", R.string.Done).toUpperCase());
 
             fragmentView = inflater.inflate(R.layout.chat_profile_change_name_layout, container, false);
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
index 5c8622281..552e5f889 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
@@ -87,9 +87,9 @@ public void onClick(View view) {
                 }
             });
 
-            cancelButton.setText(LocaleController.getString("Cancel", R.string.Cancel));
+            cancelButton.setText(LocaleController.getString("Cancel", R.string.Cancel).toUpperCase());
             TextView textView = (TextView)doneButton.findViewById(R.id.done_button_text);
-            textView.setText(LocaleController.getString("Done", R.string.Done));
+            textView.setText(LocaleController.getString("Done", R.string.Done).toUpperCase());
 
             fragmentView = inflater.inflate(R.layout.contact_add_layout, container, false);
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
index 3b778713c..5d1e82f1f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
@@ -115,7 +115,8 @@ public void onFragmentDestroy() {
     @Override
     public View createView(LayoutInflater inflater, ViewGroup container) {
         if (fragmentView == null) {
-            actionBarLayer.setDisplayHomeAsUpEnabled(true);
+            actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
+            actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
             if (destroyAfterSelect) {
                 actionBarLayer.setTitle(LocaleController.getString("SelectContact", R.string.SelectContact));
             } else {
@@ -145,6 +146,7 @@ public void onSearchCollapse() {
                     searchWas = false;
                     ViewGroup group = (ViewGroup) listView.getParent();
                     listView.setAdapter(listViewAdapter);
+                    listViewAdapter.notifyDataSetChanged();
                     if (!LocaleController.isRTL) {
                         listView.setPadding(Utilities.dp(16), listView.getPaddingTop(), Utilities.dp(30), listView.getPaddingBottom());
                     } else {
@@ -170,6 +172,7 @@ public void onTextChanged(EditText editText) {
                         if (listView != null) {
                             listView.setPadding(Utilities.dp(16), listView.getPaddingTop(), Utilities.dp(16), listView.getPaddingBottom());
                             listView.setAdapter(searchListViewAdapter);
+                            searchListViewAdapter.notifyDataSetChanged();
                             if(android.os.Build.VERSION.SDK_INT >= 11) {
                                 listView.setFastScrollAlwaysVisible(false);
                             }
@@ -204,7 +207,7 @@ public void onTextChanged(EditText editText) {
                 public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                     if (searching && searchWas) {
                         TLRPC.User user = searchListViewAdapter.getItem(i);
-                        if (user == null || user.id == UserConfig.clientUserId) {
+                        if (user == null || user.id == UserConfig.getClientUserId()) {
                             return;
                         }
                         if (returnAsResult) {
@@ -262,7 +265,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                         }
 
                         if (user != null) {
-                            if (user.id == UserConfig.clientUserId) {
+                            if (user.id == UserConfig.getClientUserId()) {
                                 return;
                             }
                             if (returnAsResult) {
@@ -287,7 +290,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                             if (!contact.phones.isEmpty()) {
                                 usePhone = contact.phones.get(0);
                             }
-                            if (usePhone == null) {
+                            if (usePhone == null || getParentActivity() == null) {
                                 return;
                             }
                             AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
@@ -336,6 +339,9 @@ public void onScroll(AbsListView absListView, int firstVisibleItem, int visibleI
 
     private void didSelectResult(final TLRPC.User user, boolean useAlert) {
         if (useAlert && selectAlertString != null) {
+            if (getParentActivity() == null) {
+                return;
+            }
             AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
             builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
             builder.setMessage(LocaleController.formatStringSimple(selectAlertString, Utilities.formatName(user.first_name, user.last_name)));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java
index 372326e42..665ce4f3f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java
@@ -118,7 +118,8 @@ public void onFragmentDestroy() {
     @Override
     public View createView(LayoutInflater inflater, ViewGroup container) {
         if (fragmentView == null) {
-            actionBarLayer.setDisplayHomeAsUpEnabled(true);
+            actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
+            actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
             actionBarLayer.setTitle(LocaleController.getString("ChooseCountry", R.string.ChooseCountry));
 
             actionBarLayer.setActionBarMenuOnItemClick(new ActionBarLayer.ActionBarMenuOnItemClick() {
@@ -279,7 +280,7 @@ public void run() {
     }
 
     private void processSearch(final String query) {
-        Utilities.globalQueue.postRunnable(new Runnable() {
+        Utilities.searchQueue.postRunnable(new Runnable() {
             @Override
             public void run() {
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
index 4c7c0edb2..5aee769cb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
@@ -29,6 +29,8 @@
 import org.telegram.messenger.R;
 import org.telegram.messenger.Utilities;
 import org.telegram.ui.Views.ActionBar.ActionBarLayer;
+import org.telegram.ui.Views.ActionBar.ActionBarMenu;
+import org.telegram.ui.Views.ActionBar.ActionBarMenuItem;
 import org.telegram.ui.Views.BackupImageView;
 import org.telegram.ui.Views.ActionBar.BaseFragment;
 
@@ -44,6 +46,7 @@
 
     public static abstract interface DocumentSelectActivityDelegate {
         public void didSelectFile(DocumentSelectActivity activity, String path, String name, String ext, long size);
+        public void startDocumentSelectActivity();
     }
 
     private ListView listView;
@@ -126,16 +129,24 @@ public View createView(LayoutInflater inflater, ViewGroup container) {
         }
 
         if (fragmentView == null) {
-            actionBarLayer.setDisplayHomeAsUpEnabled(true);
+            actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
+            actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
             actionBarLayer.setTitle(LocaleController.getString("SelectFile", R.string.SelectFile));
             actionBarLayer.setActionBarMenuOnItemClick(new ActionBarLayer.ActionBarMenuOnItemClick() {
                 @Override
                 public void onItemClick(int id) {
                     if (id == -1) {
                         finishFragment();
+                    } else if (id == 1) {
+                        if (delegate != null) {
+                            delegate.startDocumentSelectActivity();
+                        }
+                        finishFragment(false);
                     }
                 }
             });
+            ActionBarMenu menu = actionBarLayer.createMenu();
+            ActionBarMenuItem item = menu.addItem(1, R.drawable.ic_ab_other);
 
             fragmentView = inflater.inflate(R.layout.document_select_layout, container, false);
             listAdapter = new ListAdapter(getParentActivity());
@@ -289,7 +300,10 @@ public int compare(File lhs, File rhs) {
         return true;
     }
 
-    private void showErrorBox(String error){
+    private void showErrorBox(String error) {
+        if (getParentActivity() == null) {
+            return;
+        }
         new AlertDialog.Builder(getParentActivity())
                 .setTitle(LocaleController.getString("AppName", R.string.AppName))
                 .setMessage(error)
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
index 0dc953a84..1192082d0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
@@ -123,7 +123,8 @@ public void onFragmentDestroy() {
     @Override
     public View createView(LayoutInflater inflater, ViewGroup container) {
         if (fragmentView == null) {
-            actionBarLayer.setDisplayHomeAsUpEnabled(true);
+            actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
+            actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
             actionBarLayer.setTitle(LocaleController.getString("NewGroup", R.string.NewGroup));
             actionBarLayer.setSubtitle(String.format("%d/200 %s", selectedContacts.size(), LocaleController.getString("Members", R.string.Members)));
 
@@ -381,7 +382,7 @@ private void processSearch(final String query) {
             public void run() {
                 final ArrayList<TLRPC.TL_contact> contactsCopy = new ArrayList<TLRPC.TL_contact>();
                 contactsCopy.addAll(ContactsController.getInstance().contacts);
-                Utilities.globalQueue.postRunnable(new Runnable() {
+                Utilities.searchQueue.postRunnable(new Runnable() {
                     @Override
                     public void run() {
                         if (query.length() == 0) {
@@ -396,7 +397,7 @@ public void run() {
                         for (TLRPC.TL_contact contact : contactsCopy) {
                             TLRPC.User user = MessagesController.getInstance().users.get(contact.user_id);
                             if (user.first_name.toLowerCase().startsWith(q) || user.last_name.toLowerCase().startsWith(q)) {
-                                if (user.id == UserConfig.clientUserId) {
+                                if (user.id == UserConfig.getClientUserId()) {
                                     continue;
                                 }
                                 resultArrayNames.add(Utilities.generateSearchName(user.first_name, user.last_name, q));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java
index 2262bc953..da86a8149 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java
@@ -118,7 +118,8 @@ public void onFragmentDestroy() {
     @Override
     public View createView(LayoutInflater inflater, ViewGroup container) {
         if (fragmentView == null) {
-            actionBarLayer.setDisplayHomeAsUpEnabled(true);
+            actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
+            actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
             actionBarLayer.setTitle(LocaleController.getString("NewGroup", R.string.NewGroup));
 
             actionBarLayer.setActionBarMenuOnItemClick(new ActionBarLayer.ActionBarMenuOnItemClick() {
@@ -167,7 +168,7 @@ public void onClick(DialogInterface dialog, int which) {
             View doneItem = menu.addItemResource(done_button, R.layout.group_create_done_layout);
 
             TextView doneTextView = (TextView)doneItem.findViewById(R.id.done_button);
-            doneTextView.setText(LocaleController.getString("Done", R.string.Done));
+            doneTextView.setText(LocaleController.getString("Done", R.string.Done).toUpperCase());
 
             fragmentView = inflater.inflate(R.layout.group_create_final_layout, container, false);
 
@@ -175,7 +176,9 @@ public void onClick(DialogInterface dialog, int which) {
             button2.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View view) {
-
+                    if (getParentActivity() == null) {
+                        return;
+                    }
                     AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
 
                     CharSequence[] items;
@@ -205,6 +208,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
             });
 
             avatarImage = (BackupImageView)fragmentView.findViewById(R.id.settings_avatar_image);
+            avatarImage.setImageResource(R.drawable.group_blue);
 
             nameTextView = (EditText)fragmentView.findViewById(R.id.bubble_input_text);
             nameTextView.setHint(LocaleController.getString("EnterGroupNamePlaceholder", R.string.EnterGroupNamePlaceholder));
@@ -301,7 +305,7 @@ public void run() {
                     }
                     Bundle args2 = new Bundle();
                     args2.putInt("chat_id", (Integer)args[0]);
-                    presentFragment(new ChatActivity(args2));
+                    presentFragment(new ChatActivity(args2), true);
                 }
             });
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java
index a8bfda4af..f3010c792 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java
@@ -45,7 +45,8 @@ public boolean onFragmentCreate() {
     @Override
     public View createView(LayoutInflater inflater, ViewGroup container) {
         if (fragmentView == null) {
-            actionBarLayer.setDisplayHomeAsUpEnabled(true);
+            actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
+            actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
             actionBarLayer.setTitle(LocaleController.getString("EncryptionKey", R.string.EncryptionKey));
             actionBarLayer.setTitleIcon(R.drawable.ic_lock_white, Utilities.dp(4));
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java
index 33fb8927f..b8fa101be 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java
@@ -17,6 +17,7 @@
 import android.text.Html;
 import android.view.View;
 import android.view.ViewGroup;
+import android.view.Window;
 import android.view.animation.Animation;
 import android.view.animation.AnimationUtils;
 import android.widget.ImageView;
@@ -42,6 +43,7 @@
     protected void onCreate(Bundle savedInstanceState) {
         setTheme(R.style.Theme_TMessages);
         super.onCreate(savedInstanceState);
+        requestWindowFeature(Window.FEATURE_NO_TITLE);
 
         setContentView(R.layout.intro_layout);
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java
index 6475797ec..7d207af1b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java
@@ -48,7 +48,8 @@
     @Override
     public View createView(LayoutInflater inflater, ViewGroup container) {
         if (fragmentView == null) {
-            actionBarLayer.setDisplayHomeAsUpEnabled(true);
+            actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
+            actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
             actionBarLayer.setTitle(LocaleController.getString("Language", R.string.Language));
 
             actionBarLayer.setActionBarMenuOnItemClick(new ActionBarLayer.ActionBarMenuOnItemClick() {
@@ -142,7 +143,7 @@ public boolean onItemLongClick(AdapterView<?> adapterView, View view, int i, lon
                             localeInfo = LocaleController.getInstance().sortedLanguages.get(i);
                         }
                     }
-                    if (localeInfo == null || localeInfo.pathToFile == null) {
+                    if (localeInfo == null || localeInfo.pathToFile == null || getParentActivity() == null) {
                         return false;
                     }
                     final LocaleController.LocaleInfo finalLocaleInfo = localeInfo;
@@ -231,7 +232,7 @@ public void run() {
     }
 
     private void processSearch(final String query) {
-        Utilities.globalQueue.postRunnable(new Runnable() {
+        Utilities.searchQueue.postRunnable(new Runnable() {
             @Override
             public void run() {
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index 55cc58220..ed4ebbc7d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -59,16 +59,12 @@
     private ArrayList<String> documentsPathArray = null;
     private ArrayList<TLRPC.User> contactsToSend = null;
     private int currentConnectionState;
-    private View statusView;
-    private View backStatusButton;
-    private View statusBackground;
-    private TextView statusText;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         ApplicationLoader.postInitApplication();
 
-        if (!UserConfig.clientActivated) {
+        if (!UserConfig.isClientActivated()) {
             Intent intent = getIntent();
             if (intent != null && intent.getAction() != null && (Intent.ACTION_SEND.equals(intent.getAction()) || intent.getAction().equals(Intent.ACTION_SEND_MULTIPLE))) {
                 super.onCreateFinish(savedInstanceState);
@@ -104,21 +100,8 @@ protected void onCreate(Bundle savedInstanceState) {
         NotificationCenter.getInstance().addObserver(this, 702);
         NotificationCenter.getInstance().addObserver(this, 703);
 
-        statusView = getLayoutInflater().inflate(R.layout.updating_state_layout, null);
-        statusBackground = statusView.findViewById(R.id.back_button_background);
-        backStatusButton = statusView.findViewById(R.id.back_button);
-        statusText = (TextView)statusView.findViewById(R.id.status_text);
-        statusBackground.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                if (fragmentsStack.size() > 1) {
-                    onBackPressed();
-                }
-            }
-        });
-
         if (fragmentsStack.isEmpty()) {
-            if (!UserConfig.clientActivated) {
+            if (!UserConfig.isClientActivated()) {
                 addFragmentToStack(new LoginActivity());
             } else {
                 addFragmentToStack(new MessagesActivity(null));
@@ -186,7 +169,7 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
         imagesPathArray = null;
         documentsPathArray = null;
 
-        if ((getIntent().getFlags() & Intent.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY) == 0) {
+        if ((intent.getFlags() & Intent.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY) == 0) {
 
             if (intent != null && intent.getAction() != null && !restore) {
                 if (Intent.ACTION_SEND.equals(intent.getAction())) {
@@ -297,7 +280,7 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
                             } else if (tempPath == null) {
                                 isGif = MediaController.isGif(uri);
                                 if (isGif) {
-                                    documentPath = MediaController.copyDocumentToCache(uri);
+                                    documentPath = MediaController.copyDocumentToCache(uri, "gif");
                                 }
                             }
                             if (!isGif || documentPath == null) {
@@ -342,7 +325,7 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
                                     } else if (tempPath == null) {
                                         isGif = MediaController.isGif(uri);
                                         if (isGif) {
-                                            tempPath = MediaController.copyDocumentToCache(uri);
+                                            tempPath = MediaController.copyDocumentToCache(uri, "gif");
                                         }
                                     }
                                     if (isGif && tempPath != null) {
@@ -407,10 +390,10 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
                 }
             }
 
-            if (getIntent().getAction() != null && getIntent().getAction().startsWith("com.tmessages.openchat") && !restore) {
-                int chatId = getIntent().getIntExtra("chatId", 0);
-                int userId = getIntent().getIntExtra("userId", 0);
-                int encId = getIntent().getIntExtra("encId", 0);
+            if (intent.getAction() != null && intent.getAction().startsWith("com.tmessages.openchat") && !restore) {
+                int chatId = intent.getIntExtra("chatId", 0);
+                int userId = intent.getIntExtra("userId", 0);
+                int encId = intent.getIntExtra("encId", 0);
                 if (chatId != 0) {
                     TLRPC.Chat chat = MessagesController.getInstance().chats.get(chatId);
                     if (chat != null) {
@@ -434,7 +417,7 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
         }
 
         if (push_user_id != 0) {
-            if (push_user_id == UserConfig.clientUserId) {
+            if (push_user_id == UserConfig.getClientUserId()) {
                 open_settings = 1;
             } else {
                 Bundle args = new Bundle();
@@ -477,7 +460,7 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
             showLastFragment();
         }
 
-        getIntent().setAction(null);
+        intent.setAction(null);
     }
 
     @Override
@@ -518,9 +501,7 @@ public void didSelectDialog(MessagesActivity messageFragment, long dialog_id) {
                 fragment.processSendingDocument(documentPath);
             }
             if (imagesPathArray != null) {
-                for (Uri path : imagesPathArray) {
-                    fragment.processSendingPhoto(null, path);
-                }
+                fragment.processSendingPhotos(null, imagesPathArray);
             }
             if (documentsPathArray != null) {
                 for (String path : documentsPathArray) {
@@ -579,7 +560,7 @@ protected void onResume() {
         Utilities.checkForCrashes(this);
         Utilities.checkForUpdates(this);
         ApplicationLoader.resetLastPauseTime();
-        updateActionBar();
+        actionBar.setBackOverlayVisible(currentConnectionState != 0);
         try {
             NotificationManager mNotificationManager = (NotificationManager)this.getSystemService(Context.NOTIFICATION_SERVICE);
             mNotificationManager.cancel(1);
@@ -678,39 +659,26 @@ public void didReceivedNotification(int id, Object... args) {
             if (currentConnectionState != state) {
                 FileLog.e("tmessages", "switch to state " + state);
                 currentConnectionState = state;
-                updateActionBar();
+                actionBar.setBackOverlayVisible(currentConnectionState != 0);
             }
         }
     }
 
-    public void updateActionBar() {
-        if (currentConnectionState != 0 && statusView != null) {
-            onShowFragment();
-            if (currentConnectionState == 1) {
-                statusText.setText(getString(R.string.WaitingForNetwork));
-            } else if (currentConnectionState == 2) {
-                statusText.setText(getString(R.string.Connecting));
-            } else if (currentConnectionState == 3) {
-                statusText.setText(getString(R.string.Updating));
-            }
-
-            statusText.measure(View.MeasureSpec.makeMeasureSpec(800, View.MeasureSpec.AT_MOST), View.MeasureSpec.makeMeasureSpec(100, View.MeasureSpec.AT_MOST));
-            actionBar.setBackOverlay(statusView, (statusText.getMeasuredWidth() + Utilities.dp(54)));
-        } else {
-            actionBar.setBackOverlay(null, 0);
-        }
-    }
-
     @Override
-    protected void onShowFragment() {
-        if (statusView != null) {
-            if (fragmentsStack.size() > 1) {
-                backStatusButton.setVisibility(View.VISIBLE);
-                statusBackground.setEnabled(true);
-            } else {
-                backStatusButton.setVisibility(View.GONE);
-                statusBackground.setEnabled(false);
-            }
+    public void onOverlayShow(View view, BaseFragment fragment) {
+        if (view == null || fragment == null || fragmentsStack.isEmpty()) {
+            return;
+        }
+        View backStatusButton = view.findViewById(R.id.back_button);
+        TextView statusText = (TextView)view.findViewById(R.id.status_text);
+        backStatusButton.setVisibility(fragmentsStack.get(0) == fragment ? View.GONE : View.VISIBLE);
+        view.setEnabled(fragmentsStack.get(0) != fragment);
+        if (currentConnectionState == 1) {
+            statusText.setText(LocaleController.getString("WaitingForNetwork", R.string.WaitingForNetwork));
+        } else if (currentConnectionState == 2) {
+            statusText.setText(LocaleController.getString("Connecting", R.string.Connecting));
+        } else if (currentConnectionState == 3) {
+            statusText.setText(LocaleController.getString("Updating", R.string.Updating));
         }
     }
 
@@ -732,6 +700,7 @@ protected void onSaveInstanceState(Bundle outState) {
                 } else if (lastFragment instanceof SettingsWallpapersActivity) {
                     outState.putString("fragment", "wallpapers");
                 } else if (lastFragment instanceof ChatProfileActivity && args != null) {
+                    outState.putBundle("args", args);
                     outState.putString("fragment", "chat_profile");
                 }
                 lastFragment.saveSelfArgs(outState);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
index d246d92f3..aacb381f4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
@@ -80,7 +80,8 @@ public void onFragmentDestroy() {
     @Override
     public View createView(LayoutInflater inflater, ViewGroup container) {
         if (fragmentView == null) {
-            actionBarLayer.setDisplayHomeAsUpEnabled(true);
+            actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
+            actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
             if (messageObject != null) {
                 actionBarLayer.setTitle(LocaleController.getString("ChatLocation", R.string.ChatLocation));
             } else {
@@ -313,7 +314,11 @@ public void didReceivedNotification(int id, Object... args) {
     public void onPause() {
         super.onPause();
         if (mapView != null) {
-            mapView.onPause();
+            try {
+                mapView.onPause();
+            } catch (Exception e) {
+                FileLog.e("tmessages", e);
+            }
         }
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
index e779d8ab9..d19df2b59 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
@@ -10,6 +10,7 @@
 
 import android.animation.Animator;
 import android.app.AlertDialog;
+import android.app.ProgressDialog;
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.os.Bundle;
@@ -17,6 +18,8 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.animation.AccelerateDecelerateInterpolator;
+import android.widget.FrameLayout;
+import android.widget.ScrollView;
 import android.widget.TextView;
 
 import org.telegram.messenger.FileLog;
@@ -34,6 +37,7 @@
 public class LoginActivity extends BaseFragment implements SlideView.SlideViewDelegate {
     private int currentViewNum = 0;
     private SlideView[] views = new SlideView[3];
+    private ProgressDialog progressDialog;
 
     private final static int done_button = 1;
 
@@ -56,7 +60,7 @@ public void onFragmentDestroy() {
     @Override
     public View createView(LayoutInflater inflater, ViewGroup container) {
         if (fragmentView == null) {
-            actionBarLayer.setDisplayUseLogoEnabled(true);
+            actionBarLayer.setDisplayUseLogoEnabled(true, R.drawable.ic_ab_logo);
             actionBarLayer.setTitle(LocaleController.getString("AppName", R.string.AppName));
 
             actionBarLayer.setActionBarMenuOnItemClick(new ActionBarLayer.ActionBarMenuOnItemClick() {
@@ -71,7 +75,7 @@ public void onItemClick(int id) {
             ActionBarMenu menu = actionBarLayer.createMenu();
             View doneItem = menu.addItemResource(done_button, R.layout.group_create_done_layout);
             TextView doneTextView = (TextView)doneItem.findViewById(R.id.done_button);
-            doneTextView.setText(LocaleController.getString("Done", R.string.Done));
+            doneTextView.setText(LocaleController.getString("Done", R.string.Done).toUpperCase());
 
             fragmentView = inflater.inflate(R.layout.login_layout, container, false);
 
@@ -79,6 +83,19 @@ public void onItemClick(int id) {
             views[1] = (SlideView)fragmentView.findViewById(R.id.login_page2);
             views[2] = (SlideView)fragmentView.findViewById(R.id.login_page3);
 
+            try {
+                if (views[0] == null || views[1] == null || views[2] == null) {
+                    FrameLayout parent = (FrameLayout)((ScrollView) fragmentView).getChildAt(0);
+                    for (int a = 0; a < views.length; a++) {
+                        if (views[a] == null) {
+                            views[a] = (SlideView)parent.getChildAt(a);
+                        }
+                    }
+                }
+            } catch (Exception e) {
+                FileLog.e("tmessages", e);
+            }
+
             actionBarLayer.setTitle(views[0].getHeaderName());
 
             Bundle savedInstanceState = loadCurrentState();
@@ -205,29 +222,38 @@ public boolean onBackPressed() {
 
     @Override
     public void needShowAlert(final String text) {
-        if (text == null) {
+        if (text == null || getParentActivity() == null) {
             return;
         }
-        getParentActivity().runOnUiThread(new Runnable() {
-            @Override
-            public void run() {
-                AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
-                builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
-                builder.setMessage(text);
-                builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), null);
-                showAlertDialog(builder);
-            }
-        });
+        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+        builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
+        builder.setMessage(text);
+        builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), null);
+        showAlertDialog(builder);
     }
 
     @Override
     public void needShowProgress() {
-        Utilities.ShowProgressDialog(getParentActivity(), LocaleController.getString("Loading", R.string.Loading));
+        if (getParentActivity() == null || getParentActivity().isFinishing() || progressDialog != null) {
+            return;
+        }
+        progressDialog = new ProgressDialog(getParentActivity());
+        progressDialog.setMessage(LocaleController.getString("Loading", R.string.Loading));
+        progressDialog.setCanceledOnTouchOutside(false);
+        progressDialog.setCancelable(false);
+        progressDialog.show();
     }
 
     @Override
     public void needHideProgress() {
-        Utilities.HideProgressDialog(getParentActivity());
+        if (progressDialog == null) {
+            return;
+        }
+        try {
+            progressDialog.dismiss();
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
+        }
     }
 
     public void setPage(int page, boolean animated, Bundle params, boolean back) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivityPhoneView.java b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivityPhoneView.java
index 786cdcf33..6d228ad8d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivityPhoneView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivityPhoneView.java
@@ -57,6 +57,7 @@
     private boolean ignoreSelection = false;
     private boolean ignoreOnTextChange = false;
     private boolean ignoreOnPhoneChange = false;
+    private boolean nextPressed = false;
 
     public LoginActivityPhoneView(Context context) {
         super(context);
@@ -319,6 +320,9 @@ public void onNothingSelected(AdapterView<?> adapterView) {
 
     @Override
     public void onNextPressed() {
+        if (nextPressed) {
+            return;
+        }
         if (countryState == 1) {
             delegate.needShowAlert(LocaleController.getString("ChooseCountry", R.string.ChooseCountry));
             return;
@@ -345,48 +349,47 @@ public void onNextPressed() {
         final Bundle params = new Bundle();
         params.putString("phone", "+" + codeField.getText() + phoneField.getText());
         params.putString("phoneFormated", phone);
-
+        nextPressed = true;
         delegate.needShowProgress();
         ConnectionsManager.getInstance().performRpc(req, new RPCRequest.RPCRequestDelegate() {
             @Override
-            public void run(TLObject response, TLRPC.TL_error error) {
-                if (error == null) {
-                    final TLRPC.TL_auth_sentCode res = (TLRPC.TL_auth_sentCode)response;
-                    params.putString("phoneHash", res.phone_code_hash);
-                    params.putInt("calltime", res.send_call_timeout * 1000);
-                    if (res.phone_registered) {
-                        params.putString("registered", "true");
-                    }
-                    Utilities.RunOnUIThread(new Runnable() {
-                        @Override
-                        public void run() {
+            public void run(final TLObject response, final TLRPC.TL_error error) {
+                Utilities.RunOnUIThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        nextPressed = false;
+                        if (error == null) {
+                            final TLRPC.TL_auth_sentCode res = (TLRPC.TL_auth_sentCode)response;
+                            params.putString("phoneHash", res.phone_code_hash);
+                            params.putInt("calltime", res.send_call_timeout * 1000);
+                            if (res.phone_registered) {
+                                params.putString("registered", "true");
+                            }
                             if (delegate != null) {
                                 delegate.setPage(1, true, params, false);
                             }
-                        }
-                    });
-                } else {
-                    if (delegate != null) {
-                        if (error.text != null) {
-                            if (error.text.contains("PHONE_NUMBER_INVALID")) {
-                                delegate.needShowAlert(LocaleController.getString("InvalidPhoneNumber", R.string.InvalidPhoneNumber));
-                            } else if (error.text.contains("PHONE_CODE_EMPTY") || error.text.contains("PHONE_CODE_INVALID")) {
-                                delegate.needShowAlert(LocaleController.getString("InvalidCode", R.string.InvalidCode));
-                            } else if (error.text.contains("PHONE_CODE_EXPIRED")) {
-                                delegate.needShowAlert(LocaleController.getString("CodeExpired", R.string.CodeExpired));
-                            } else if (error.text.contains("FLOOD_WAIT")) {
-                                delegate.needShowAlert(LocaleController.getString("FloodWait", R.string.FloodWait));
-                            } else {
-                                delegate.needShowAlert(error.text);
+                        } else {
+                            if (delegate != null && error.text != null) {
+                                if (error.text.contains("PHONE_NUMBER_INVALID")) {
+                                    delegate.needShowAlert(LocaleController.getString("InvalidPhoneNumber", R.string.InvalidPhoneNumber));
+                                } else if (error.text.contains("PHONE_CODE_EMPTY") || error.text.contains("PHONE_CODE_INVALID")) {
+                                    delegate.needShowAlert(LocaleController.getString("InvalidCode", R.string.InvalidCode));
+                                } else if (error.text.contains("PHONE_CODE_EXPIRED")) {
+                                    delegate.needShowAlert(LocaleController.getString("CodeExpired", R.string.CodeExpired));
+                                } else if (error.text.startsWith("FLOOD_WAIT")) {
+                                    delegate.needShowAlert(LocaleController.getString("FloodWait", R.string.FloodWait));
+                                } else {
+                                    delegate.needShowAlert(error.text);
+                                }
                             }
                         }
+                        if (delegate != null) {
+                            delegate.needHideProgress();
+                        }
                     }
-                }
-                if (delegate != null) {
-                    delegate.needHideProgress();
-                }
+                });
             }
-        }, null, true, RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassFailOnServerErrors);
+        }, null, true, RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassFailOnServerErrors | RPCRequest.RPCRequestClassWithoutLogin);
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivityRegisterView.java b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivityRegisterView.java
index 1f234b4af..221db4cc0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivityRegisterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivityRegisterView.java
@@ -39,6 +39,7 @@
     private String phoneHash;
     private String phoneCode;
     private Bundle currentParams;
+    private boolean nextPressed = false;
 
     public LoginActivityRegisterView(Context context) {
         super(context);
@@ -122,32 +123,37 @@ public void setParams(Bundle params) {
 
     @Override
     public void onNextPressed() {
+        if (nextPressed) {
+            return;
+        }
+        nextPressed = true;
         TLRPC.TL_auth_signUp req = new TLRPC.TL_auth_signUp();
         req.phone_code = phoneCode;
         req.phone_code_hash = phoneHash;
         req.phone_number = requestPhone;
         req.first_name = firstNameField.getText().toString();
         req.last_name = lastNameField.getText().toString();
-        delegate.needShowProgress();
+        if (delegate != null) {
+            delegate.needShowProgress();
+        }
         ConnectionsManager.getInstance().performRpc(req, new RPCRequest.RPCRequestDelegate() {
             @Override
-            public void run(TLObject response, TLRPC.TL_error error) {
-                if (delegate != null) {
-                    delegate.needHideProgress();
-                }
-                if (error == null) {
-                    final TLRPC.TL_auth_authorization res = (TLRPC.TL_auth_authorization)response;
-                    Utilities.RunOnUIThread(new Runnable() {
-                        @Override
-                        public void run() {
+            public void run(final TLObject response, final TLRPC.TL_error error) {
+                Utilities.RunOnUIThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        nextPressed = false;
+                        if (delegate != null) {
+                            delegate.needHideProgress();
+                        }
+                        if (error == null) {
+                            final TLRPC.TL_auth_authorization res = (TLRPC.TL_auth_authorization)response;
                             TLRPC.TL_userSelf user = (TLRPC.TL_userSelf)res.user;
                             UserConfig.clearConfig();
                             MessagesStorage.getInstance().cleanUp();
                             MessagesController.getInstance().cleanUp();
                             ConnectionsManager.getInstance().cleanUp();
-                            UserConfig.currentUser = user;
-                            UserConfig.clientActivated = true;
-                            UserConfig.clientUserId = user.id;
+                            UserConfig.setCurrentUser(user);
                             UserConfig.saveConfig(true);
                             ArrayList<TLRPC.User> users = new ArrayList<TLRPC.User>();
                             users.add(user);
@@ -159,27 +165,27 @@ public void run() {
                                 delegate.needFinishActivity();
                             }
                             ConnectionsManager.getInstance().initPushConnection();
-                        }
-                    });
-                } else {
-                    if (delegate != null) {
-                        if (error.text.contains("PHONE_NUMBER_INVALID")) {
-                            delegate.needShowAlert(LocaleController.getString("InvalidPhoneNumber", R.string.InvalidPhoneNumber));
-                        } else if (error.text.contains("PHONE_CODE_EMPTY") || error.text.contains("PHONE_CODE_INVALID")) {
-                            delegate.needShowAlert(LocaleController.getString("InvalidCode", R.string.InvalidCode));
-                        } else if (error.text.contains("PHONE_CODE_EXPIRED")) {
-                            delegate.needShowAlert(LocaleController.getString("CodeExpired", R.string.CodeExpired));
-                        } else if (error.text.contains("FIRSTNAME_INVALID")) {
-                            delegate.needShowAlert(LocaleController.getString("InvalidFirstName", R.string.InvalidFirstName));
-                        } else if (error.text.contains("LASTNAME_INVALID")) {
-                            delegate.needShowAlert(LocaleController.getString("InvalidLastName", R.string.InvalidLastName));
                         } else {
-                            delegate.needShowAlert(error.text);
+                            if (delegate != null) {
+                                if (error.text.contains("PHONE_NUMBER_INVALID")) {
+                                    delegate.needShowAlert(LocaleController.getString("InvalidPhoneNumber", R.string.InvalidPhoneNumber));
+                                } else if (error.text.contains("PHONE_CODE_EMPTY") || error.text.contains("PHONE_CODE_INVALID")) {
+                                    delegate.needShowAlert(LocaleController.getString("InvalidCode", R.string.InvalidCode));
+                                } else if (error.text.contains("PHONE_CODE_EXPIRED")) {
+                                    delegate.needShowAlert(LocaleController.getString("CodeExpired", R.string.CodeExpired));
+                                } else if (error.text.contains("FIRSTNAME_INVALID")) {
+                                    delegate.needShowAlert(LocaleController.getString("InvalidFirstName", R.string.InvalidFirstName));
+                                } else if (error.text.contains("LASTNAME_INVALID")) {
+                                    delegate.needShowAlert(LocaleController.getString("InvalidLastName", R.string.InvalidLastName));
+                                } else {
+                                    delegate.needShowAlert(error.text);
+                                }
+                            }
                         }
                     }
-                }
+                });
             }
-        }, null, true, RPCRequest.RPCRequestClassGeneric);
+        }, null, true, RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassWithoutLogin);
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivitySmsView.java b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivitySmsView.java
index cfee4afb3..79789af97 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivitySmsView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivitySmsView.java
@@ -48,10 +48,11 @@
     private Bundle currentParams;
 
     private Timer timeTimer;
-    private final Integer timerSync = 1;
+    private static final Integer timerSync = 1;
     private volatile int time = 60000;
     private double lastCurrentTime;
     private boolean waitingForSms = false;
+    private boolean nextPressed = false;
 
     public LoginActivitySmsView(Context context) {
         super(context);
@@ -129,18 +130,17 @@ public void setParams(Bundle params) {
         Utilities.showKeyboard(codeField);
         codeField.requestFocus();
 
-        try {
-            synchronized(timerSync) {
-                if (timeTimer != null) {
-                    timeTimer.cancel();
-                    timeTimer = null;
-                }
-            }
-        } catch (Exception e) {
-            FileLog.e("tmessages", e);
-        }
+        destroyTimer();
         timeText.setText(String.format("%s 1:00", LocaleController.getString("CallText", R.string.CallText)));
         lastCurrentTime = System.currentTimeMillis();
+
+        createTimer();
+    }
+
+    private void createTimer() {
+        if (timeTimer != null) {
+            return;
+        }
         timeTimer = new Timer();
         timeTimer.schedule(new TimerTask() {
             @Override
@@ -158,12 +158,7 @@ public void run() {
                             timeText.setText(String.format("%s %d:%02d", LocaleController.getString("CallText", R.string.CallText), minutes, seconds));
                         } else {
                             timeText.setText(LocaleController.getString("Calling", R.string.Calling));
-                            synchronized(timerSync) {
-                                if (timeTimer != null) {
-                                    timeTimer.cancel();
-                                    timeTimer = null;
-                                }
-                            }
+                            destroyTimer();
                             TLRPC.TL_auth_sendCall req = new TLRPC.TL_auth_sendCall();
                             req.phone_number = requestPhone;
                             req.phone_code_hash = phoneHash;
@@ -171,7 +166,7 @@ public void run() {
                                 @Override
                                 public void run(TLObject response, TLRPC.TL_error error) {
                                 }
-                            }, null, true, RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassFailOnServerErrors);
+                            }, null, true, RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassFailOnServerErrors | RPCRequest.RPCRequestClassWithoutLogin);
                         }
                     }
                 });
@@ -179,15 +174,7 @@ public void run(TLObject response, TLRPC.TL_error error) {
         }, 0, 1000);
     }
 
-    @Override
-    public void onNextPressed() {
-        waitingForSms = false;
-        Utilities.setWaitingForSms(false);
-        NotificationCenter.getInstance().removeObserver(this, 998);
-        final TLRPC.TL_auth_signIn req = new TLRPC.TL_auth_signIn();
-        req.phone_number = requestPhone;
-        req.phone_code = codeField.getText().toString();
-        req.phone_code_hash = phoneHash;
+    private void destroyTimer() {
         try {
             synchronized(timerSync) {
                 if (timeTimer != null) {
@@ -198,142 +185,84 @@ public void onNextPressed() {
         } catch (Exception e) {
             FileLog.e("tmessages", e);
         }
+    }
+
+    @Override
+    public void onNextPressed() {
+        if (nextPressed) {
+            return;
+        }
+        nextPressed = true;
+        waitingForSms = false;
+        Utilities.setWaitingForSms(false);
+        NotificationCenter.getInstance().removeObserver(this, 998);
+        final TLRPC.TL_auth_signIn req = new TLRPC.TL_auth_signIn();
+        req.phone_number = requestPhone;
+        req.phone_code = codeField.getText().toString();
+        req.phone_code_hash = phoneHash;
+        destroyTimer();
         if (delegate != null) {
             delegate.needShowProgress();
         }
         ConnectionsManager.getInstance().performRpc(req, new RPCRequest.RPCRequestDelegate() {
             @Override
-            public void run(TLObject response, TLRPC.TL_error error) {
-                if (delegate != null) {
-                    delegate.needHideProgress();
-                }
-                if (error == null) {
-                    final TLRPC.TL_auth_authorization res = (TLRPC.TL_auth_authorization)response;
-                    Utilities.RunOnUIThread(new Runnable() {
-                        @Override
-                        public void run() {
-                            if (delegate == null) {
-                                return;
-                            }
-                            try {
-                                synchronized(timerSync) {
-                                    if (timeTimer != null) {
-                                        timeTimer.cancel();
-                                        timeTimer = null;
-                                    }
-                                }
-                            } catch (Exception e) {
-                                FileLog.e("tmessages", e);
-                            }
+            public void run(final TLObject response, final TLRPC.TL_error error) {
+                Utilities.RunOnUIThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        if (delegate == null) {
+                            return;
+                        }
+                        delegate.needHideProgress();
+                        nextPressed = false;
+                        if (error == null) {
+                            TLRPC.TL_auth_authorization res = (TLRPC.TL_auth_authorization)response;
+                            destroyTimer();
                             UserConfig.clearConfig();
                             MessagesStorage.getInstance().cleanUp();
                             MessagesController.getInstance().cleanUp();
                             ConnectionsManager.getInstance().cleanUp();
-                            UserConfig.currentUser = res.user;
-                            UserConfig.clientActivated = true;
-                            UserConfig.clientUserId = res.user.id;
+                            UserConfig.setCurrentUser(res.user);
                             UserConfig.saveConfig(true);
                             ArrayList<TLRPC.User> users = new ArrayList<TLRPC.User>();
-                            users.add(UserConfig.currentUser);
+                            users.add(res.user);
                             MessagesStorage.getInstance().putUsersAndChats(users, null, true, true);
                             MessagesController.getInstance().users.put(res.user.id, res.user);
                             ContactsController.getInstance().checkAppAccount();
-                            if (delegate != null) {
-                                delegate.needFinishActivity();
-                            }
+                            delegate.needFinishActivity();
                             ConnectionsManager.getInstance().initPushConnection();
-                        }
-                    });
-                } else {
-                    if (error.text.contains("PHONE_NUMBER_UNOCCUPIED") && registered == null) {
-                        Utilities.RunOnUIThread(new Runnable() {
-                            @Override
-                            public void run() {
+                        } else {
+                            if (error.text.contains("PHONE_NUMBER_UNOCCUPIED") && registered == null) {
                                 Bundle params = new Bundle();
                                 params.putString("phoneFormated", requestPhone);
                                 params.putString("phoneHash", phoneHash);
                                 params.putString("code", req.phone_code);
                                 delegate.setPage(2, true, params, false);
-                                try {
-                                    synchronized(timerSync) {
-                                        if (timeTimer != null) {
-                                            timeTimer.cancel();
-                                            timeTimer = null;
-                                        }
-                                    }
-                                } catch (Exception e) {
-                                    FileLog.e("tmessages", e);
-                                }
-                            }
-                        });
-                    } else {
-                        if (timeTimer == null) {
-                            timeTimer = new Timer();
-                            timeTimer.schedule(new TimerTask() {
-                                @Override
-                                public void run() {
-                                    double currentTime = System.currentTimeMillis();
-                                    double diff = currentTime - lastCurrentTime;
-                                    time -= diff;
-                                    lastCurrentTime = currentTime;
-                                    Utilities.RunOnUIThread(new Runnable() {
-                                        @Override
-                                        public void run() {
-                                            if (time >= 1000) {
-                                                int minutes = time / 1000 / 60;
-                                                int seconds = time / 1000 - minutes * 60;
-                                                timeText.setText(String.format("%s %d:%02d", LocaleController.getString("CallText", R.string.CallText), minutes, seconds));
-                                            } else {
-                                                timeText.setText(LocaleController.getString("Calling", R.string.Calling));
-                                                synchronized(timerSync) {
-                                                    if (timeTimer != null) {
-                                                        timeTimer.cancel();
-                                                        timeTimer = null;
-                                                    }
-                                                }
-                                                TLRPC.TL_auth_sendCall req = new TLRPC.TL_auth_sendCall();
-                                                req.phone_number = requestPhone;
-                                                req.phone_code_hash = phoneHash;
-                                                ConnectionsManager.getInstance().performRpc(req, new RPCRequest.RPCRequestDelegate() {
-                                                    @Override
-                                                    public void run(TLObject response, TLRPC.TL_error error) {
-                                                    }
-                                                }, null, true, RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassFailOnServerErrors);
-                                            }
-                                        }
-                                    });
-                                }
-                            }, 0, 1000);
-                        }
-                        if (delegate != null) {
-                            if (error.text.contains("PHONE_NUMBER_INVALID")) {
-                                delegate.needShowAlert(LocaleController.getString("InvalidPhoneNumber", R.string.InvalidPhoneNumber));
-                            } else if (error.text.contains("PHONE_CODE_EMPTY") || error.text.contains("PHONE_CODE_INVALID")) {
-                                delegate.needShowAlert(LocaleController.getString("InvalidCode", R.string.InvalidCode));
-                            } else if (error.text.contains("PHONE_CODE_EXPIRED")) {
-                                delegate.needShowAlert(LocaleController.getString("CodeExpired", R.string.CodeExpired));
+                                destroyTimer();
                             } else {
-                                delegate.needShowAlert(error.text);
+                                createTimer();
+                                if (error.text.contains("PHONE_NUMBER_INVALID")) {
+                                    delegate.needShowAlert(LocaleController.getString("InvalidPhoneNumber", R.string.InvalidPhoneNumber));
+                                } else if (error.text.contains("PHONE_CODE_EMPTY") || error.text.contains("PHONE_CODE_INVALID")) {
+                                    delegate.needShowAlert(LocaleController.getString("InvalidCode", R.string.InvalidCode));
+                                } else if (error.text.contains("PHONE_CODE_EXPIRED")) {
+                                    delegate.needShowAlert(LocaleController.getString("CodeExpired", R.string.CodeExpired));
+                                } else if (error.text.startsWith("FLOOD_WAIT")) {
+                                    delegate.needShowAlert(LocaleController.getString("FloodWait", R.string.FloodWait));
+                                } else {
+                                    delegate.needShowAlert(error.text);
+                                }
                             }
                         }
                     }
-                }
+                });
             }
-        }, null, true, RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassFailOnServerErrors);
+        }, null, true, RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassFailOnServerErrors | RPCRequest.RPCRequestClassWithoutLogin);
     }
 
     @Override
     public void onBackPressed() {
-        try {
-            synchronized(timerSync) {
-                if (timeTimer != null) {
-                    timeTimer.cancel();
-                    timeTimer = null;
-                }
-            }
-        } catch (Exception e) {
-            FileLog.e("tmessages", e);
-        }
+        destroyTimer();
         currentParams = null;
         Utilities.setWaitingForSms(false);
         NotificationCenter.getInstance().removeObserver(this, 998);
@@ -345,16 +274,7 @@ public void onDestroyActivity() {
         super.onDestroyActivity();
         Utilities.setWaitingForSms(false);
         NotificationCenter.getInstance().removeObserver(this, 998);
-        try {
-            synchronized(timerSync) {
-                if (timeTimer != null) {
-                    timeTimer.cancel();
-                    timeTimer = null;
-                }
-            }
-        } catch (Exception e) {
-            FileLog.e("tmessages", e);
-        }
+        destroyTimer();
         waitingForSms = false;
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
index 22323f834..6df22b7ac 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
@@ -46,7 +46,6 @@
     private HashMap<Integer, MessageObject> messagesDict = new HashMap<Integer, MessageObject>();
     private long dialog_id;
     private int totalCount = 0;
-    private int orientation = 0;
     private int itemWidth = 100;
     private boolean loading = false;
     private boolean endReached = false;
@@ -87,7 +86,8 @@ public void onFragmentDestroy() {
     @Override
     public View createView(LayoutInflater inflater, ViewGroup container) {
         if (fragmentView == null) {
-            actionBarLayer.setDisplayHomeAsUpEnabled(true);
+            actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
+            actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
             actionBarLayer.setTitle(LocaleController.getString("SharedMedia", R.string.SharedMedia));
             actionBarLayer.setActionBarMenuOnItemClick(new ActionBarLayer.ActionBarMenuOnItemClick() {
                 @Override
@@ -264,7 +264,7 @@ public void onConfigurationChanged(android.content.res.Configuration newConfig)
     }
 
     @Override
-    public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation) {
+    public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) {
         if (messageObject == null) {
             return null;
         }
@@ -296,9 +296,25 @@ public void onConfigurationChanged(android.content.res.Configuration newConfig)
     }
 
     @Override
-    public void willHidePhotoViewer() {
+    public void willSwitchFromPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) { }
 
-    }
+    @Override
+    public void willHidePhotoViewer() { }
+
+    @Override
+    public boolean isPhotoChecked(int index) { return false; }
+
+    @Override
+    public void setPhotoChecked(int index) { }
+
+    @Override
+    public void cancelButtonPressed() { }
+
+    @Override
+    public void sendButtonPressed(int index) { }
+
+    @Override
+    public int getSelectedCount() { return 0; }
 
     private void fixLayout() {
         if (listView != null) {
@@ -310,12 +326,10 @@ public boolean onPreDraw() {
                     int rotation = manager.getDefaultDisplay().getRotation();
 
                     if (rotation == Surface.ROTATION_270 || rotation == Surface.ROTATION_90) {
-                        orientation = 1;
                         listView.setNumColumns(6);
                         itemWidth = getParentActivity().getResources().getDisplayMetrics().widthPixels / 6 - Utilities.dp(2) * 5;
                         listView.setColumnWidth(itemWidth);
                     } else {
-                        orientation = 0;
                         listView.setNumColumns(4);
                         itemWidth = getParentActivity().getResources().getDisplayMetrics().widthPixels / 4 - Utilities.dp(2) * 3;
                         listView.setColumnWidth(itemWidth);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/MessagesActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/MessagesActivity.java
index cfe02edf0..3350ba3dc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/MessagesActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/MessagesActivity.java
@@ -164,10 +164,10 @@ public void onTextChanged(EditText editText) {
                 }
             });
             if (onlySelect) {
-                actionBarLayer.setDisplayHomeAsUpEnabled(true);
+                actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
                 actionBarLayer.setTitle(LocaleController.getString("SelectChat", R.string.SelectChat));
             } else {
-                actionBarLayer.setDisplayUseLogoEnabled(true);
+                actionBarLayer.setDisplayUseLogoEnabled(true, R.drawable.ic_ab_logo);
                 actionBarLayer.setTitle(LocaleController.getString("AppName", R.string.AppName));
                 menu.addItem(messages_list_menu_new_messages, R.drawable.ic_ab_compose);
                 ActionBarMenuItem item = menu.addItem(0, R.drawable.ic_ab_other);
@@ -176,6 +176,7 @@ public void onTextChanged(EditText editText) {
                 item.addSubItem(messages_list_menu_contacts, LocaleController.getString("Contacts", R.string.Contacts), 0);
                 item.addSubItem(messages_list_menu_settings, LocaleController.getString("Settings", R.string.Settings), 0);
             }
+            actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
 
             actionBarLayer.setActionBarMenuOnItemClick(new ActionBarLayer.ActionBarMenuOnItemClick() {
                 @Override
@@ -296,7 +297,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
             messagesListView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
                 @Override
                 public boolean onItemLongClick(AdapterView<?> adapterView, View view, int i, long l) {
-                    if (onlySelect || searching && searchWas) {
+                    if (onlySelect || searching && searchWas || getParentActivity() == null) {
                         return false;
                     }
                     TLRPC.TL_dialog dialog;
@@ -323,7 +324,7 @@ public void onClick(DialogInterface dialog, int which) {
                                 if (which == 0) {
                                     MessagesController.getInstance().deleteDialog(selectedDialog, 0, true);
                                 } else if (which == 1) {
-                                    MessagesController.getInstance().deleteUserFromChat((int) -selectedDialog, MessagesController.getInstance().users.get(UserConfig.clientUserId), null);
+                                    MessagesController.getInstance().deleteUserFromChat((int) -selectedDialog, MessagesController.getInstance().users.get(UserConfig.getClientUserId()), null);
                                     MessagesController.getInstance().deleteDialog(selectedDialog, 0, false);
                                 }
                             }
@@ -454,6 +455,9 @@ public void setDelegate(MessagesActivityDelegate delegate) {
 
     private void didSelectResult(final long dialog_id, boolean useAlert) {
         if (useAlert && selectAlertString != null) {
+            if (getParentActivity() == null) {
+                return;
+            }
             AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
             builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
             int lower_part = (int)dialog_id;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java
index c5d6ff9a9..6c2feab37 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java
@@ -353,9 +353,9 @@ public void onClick(View v) {
                 }
             });
 
-            cancelButton.setText(LocaleController.getString("Cancel", R.string.Cancel));
+            cancelButton.setText(LocaleController.getString("Cancel", R.string.Cancel).toUpperCase());
             TextView textView = (TextView)doneButton.findViewById(R.id.done_button_text);
-            textView.setText(LocaleController.getString("Done", R.string.Done));
+            textView.setText(LocaleController.getString("Done", R.string.Done).toUpperCase());
 
             fragmentView = view = new PhotoCropView(getParentActivity());
             fragmentView.setLayoutParams(new FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT, FrameLayout.LayoutParams.MATCH_PARENT));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
new file mode 100644
index 000000000..98e9c0da1
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
@@ -0,0 +1,578 @@
+/*
+ * This is the source code of Telegram for Android v. 1.4.x.
+ * It is licensed under GNU GPL v. 2 or later.
+ * You should have received a copy of the license in this archive (see LICENSE).
+ *
+ * Copyright Nikolai Kudashov, 2013-2014.
+ */
+
+package org.telegram.ui;
+
+import android.app.Activity;
+import android.content.Context;
+import android.os.Build;
+import android.view.LayoutInflater;
+import android.view.Surface;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewTreeObserver;
+import android.view.WindowManager;
+import android.widget.AdapterView;
+import android.widget.BaseAdapter;
+import android.widget.Button;
+import android.widget.GridView;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.MediaController;
+import org.telegram.messenger.MessagesController;
+import org.telegram.messenger.NotificationCenter;
+import org.telegram.messenger.R;
+import org.telegram.messenger.TLRPC;
+import org.telegram.messenger.Utilities;
+import org.telegram.objects.MessageObject;
+import org.telegram.ui.Views.ActionBar.ActionBarLayer;
+import org.telegram.ui.Views.ActionBar.ActionBarMenu;
+import org.telegram.ui.Views.ActionBar.BaseFragment;
+import org.telegram.ui.Views.BackupImageView;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+
+public class PhotoPickerActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, PhotoViewer.PhotoViewerProvider {
+
+    public static interface PhotoPickerActivityDelegate {
+        public abstract void didSelectPhotos(ArrayList<String> photos);
+        public abstract void startPhotoSelectActivity();
+    }
+
+    private ArrayList<MediaController.AlbumEntry> albumsSorted = null;
+    private HashMap<Integer, MediaController.PhotoEntry> selectedPhotos = new HashMap<Integer, MediaController.PhotoEntry>();
+    private Integer cameraAlbumId = null;
+    private boolean loading = false;
+    private MediaController.AlbumEntry selectedAlbum = null;
+
+    private GridView listView;
+    private ListAdapter listAdapter;
+    private View progressView;
+    private TextView emptyView;
+    private View doneButton;
+    private TextView doneButtonTextView;
+    private TextView doneButtonBadgeTextView;
+    private int itemWidth = 100;
+    private boolean sendPressed = false;
+
+    private PhotoPickerActivityDelegate delegate;
+
+    @Override
+    public boolean onFragmentCreate() {
+        loading = true;
+        MediaController.loadGalleryPhotosAlbums(classGuid);
+        NotificationCenter.getInstance().addObserver(this, MediaController.albumsDidLoaded);
+        NotificationCenter.getInstance().addObserver(this, MessagesController.closeChats);
+        return super.onFragmentCreate();
+    }
+
+    @Override
+    public void onFragmentDestroy() {
+        NotificationCenter.getInstance().removeObserver(this, MediaController.albumsDidLoaded);
+        NotificationCenter.getInstance().removeObserver(this, MessagesController.closeChats);
+        super.onFragmentDestroy();
+    }
+
+    @Override
+    public View createView(LayoutInflater inflater, ViewGroup container) {
+        if (fragmentView == null) {
+            actionBarLayer.setBackgroundColor(0xff333333);
+            actionBarLayer.setItemsBackground(R.drawable.bar_selector_picker);
+            actionBarLayer.setDisplayUseLogoEnabled(true, R.drawable.gallery);
+            actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.photo_back);
+            actionBarLayer.setTitle(LocaleController.getString("Gallery", R.string.Gallery));
+            actionBarLayer.setActionBarMenuOnItemClick(new ActionBarLayer.ActionBarMenuOnItemClick() {
+                @Override
+                public void onItemClick(int id) {
+                    if (id == -1) {
+                        if (selectedAlbum != null) {
+                            selectedAlbum = null;
+                            actionBarLayer.setTitle(LocaleController.getString("Gallery", R.string.Gallery));
+                            fixLayoutInternal();
+                        } else {
+                            if (Build.VERSION.SDK_INT < 11) {
+                                listView.setAdapter(null);
+                                listView = null;
+                                listAdapter = null;
+                            }
+                            finishFragment();
+                        }
+                    } else if (id == 1) {
+                        if (delegate != null) {
+                            finishFragment(false);
+                            delegate.startPhotoSelectActivity();
+                        }
+                    }
+                }
+            });
+
+            ActionBarMenu menu = actionBarLayer.createMenu();
+            menu.addItem(1, R.drawable.ic_ab_other_white2);
+
+            fragmentView = inflater.inflate(R.layout.photo_picker_layout, container, false);
+
+            emptyView = (TextView)fragmentView.findViewById(R.id.searchEmptyView);
+            emptyView.setText(LocaleController.getString("NoPhotos", R.string.NoPhotos));
+            listView = (GridView)fragmentView.findViewById(R.id.media_grid);
+            progressView = fragmentView.findViewById(R.id.progressLayout);
+
+            Button cancelButton = (Button)fragmentView.findViewById(R.id.cancel_button);
+            cancelButton.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View view) {
+                    finishFragment();
+                }
+            });
+            doneButton = fragmentView.findViewById(R.id.done_button);
+            doneButton.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View view) {
+                    sendSelectedPhotos();
+                }
+            });
+
+            cancelButton.setText(LocaleController.getString("Cancel", R.string.Cancel).toUpperCase());
+            doneButtonTextView = (TextView)doneButton.findViewById(R.id.done_button_text);
+            doneButtonTextView.setText(LocaleController.getString("Send", R.string.Send).toUpperCase());
+            doneButtonBadgeTextView = (TextView)doneButton.findViewById(R.id.done_button_badge);
+
+            listView.setAdapter(listAdapter = new ListAdapter(getParentActivity()));
+            listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+                @Override
+                public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
+                    if (selectedAlbum == null) {
+                        if (i < 0 || i >= albumsSorted.size()) {
+                            return;
+                        }
+                        selectedAlbum = albumsSorted.get(i);
+                        actionBarLayer.setTitle(selectedAlbum.bucketName);
+                        fixLayoutInternal();
+                    } else {
+                        if (i < 0 || i >= selectedAlbum.photos.size()) {
+                            return;
+                        }
+                        PhotoViewer.getInstance().openPhotoForSelect(selectedAlbum.photos, i, PhotoPickerActivity.this);
+                    }
+                }
+            });
+            if (loading && (albumsSorted == null || albumsSorted != null && albumsSorted.isEmpty())) {
+                progressView.setVisibility(View.VISIBLE);
+                listView.setEmptyView(null);
+            } else {
+                progressView.setVisibility(View.GONE);
+                listView.setEmptyView(emptyView);
+            }
+            updateSelectedCount();
+        } else {
+            ViewGroup parent = (ViewGroup)fragmentView.getParent();
+            if (parent != null) {
+                parent.removeView(fragmentView);
+            }
+        }
+        return fragmentView;
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        if (listAdapter != null) {
+            listAdapter.notifyDataSetChanged();
+        }
+        fixLayout();
+    }
+
+    @Override
+    public void onConfigurationChanged(android.content.res.Configuration newConfig) {
+        super.onConfigurationChanged(newConfig);
+        fixLayout();
+    }
+
+    @SuppressWarnings("unchecked")
+    @Override
+    public void didReceivedNotification(int id, Object... args) {
+        if (id == MediaController.albumsDidLoaded) {
+            int guid = (Integer)args[0];
+            if (classGuid == guid) {
+                albumsSorted = (ArrayList<MediaController.AlbumEntry>)args[1];
+                if (args[2] != null) {
+                    cameraAlbumId = (Integer) args[2];
+                }
+                if (progressView != null) {
+                    progressView.setVisibility(View.GONE);
+                }
+                if (listView != null && listView.getEmptyView() == null) {
+                    listView.setEmptyView(emptyView);
+                }
+                if (listAdapter != null) {
+                    listAdapter.notifyDataSetChanged();
+                }
+                loading = false;
+            }
+        } else if (id == MessagesController.closeChats) {
+            removeSelfFromStack();
+        }
+    }
+
+    @Override
+    public boolean onBackPressed() {
+        if (selectedAlbum != null) {
+            selectedAlbum = null;
+            actionBarLayer.setTitle(LocaleController.getString("Gallery", R.string.Gallery));
+            fixLayoutInternal();
+            return false;
+        }
+        return super.onBackPressed();
+    }
+
+    @Override
+    public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) {
+        if (selectedAlbum == null) {
+            return null;
+        }
+        int count = listView.getChildCount();
+
+        for (int a = 0; a < count; a++) {
+            View view = listView.getChildAt(a);
+            BackupImageView imageView = (BackupImageView)view.findViewById(R.id.media_photo_image);
+            if (imageView != null) {
+                int num = (Integer)imageView.getTag();
+                if (num < 0 || num >= selectedAlbum.photos.size()) {
+                    continue;
+                }
+                if (num == index) {
+                    int coords[] = new int[2];
+                    imageView.getLocationInWindow(coords);
+                    PhotoViewer.PlaceProviderObject object = new PhotoViewer.PlaceProviderObject();
+                    object.viewX = coords[0];
+                    object.viewY = coords[1] - Utilities.statusBarHeight;
+                    object.parentView = listView;
+                    object.imageReceiver = imageView.imageReceiver;
+                    object.thumb = object.imageReceiver.getBitmap();
+                    View frameView = view.findViewById(R.id.photo_frame);
+                    frameView.setVisibility(View.GONE);
+                    ImageView checkImageView = (ImageView)view.findViewById(R.id.photo_check);
+                    checkImageView.setVisibility(View.GONE);
+                    return object;
+                }
+            }
+        }
+        return null;
+    }
+
+    @Override
+    public void willSwitchFromPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) {
+        int count = listView.getChildCount();
+        for (int a = 0; a < count; a++) {
+            View view = listView.getChildAt(a);
+            int num = (Integer)view.getTag();
+            if (num < 0 || num >= selectedAlbum.photos.size()) {
+                continue;
+            }
+            if (num == index) {
+                View frameView = view.findViewById(R.id.photo_frame);
+                frameView.setVisibility(View.VISIBLE);
+                ImageView checkImageView = (ImageView)view.findViewById(R.id.photo_check);
+                checkImageView.setVisibility(View.VISIBLE);
+                break;
+            }
+        }
+    }
+
+    @Override
+    public void willHidePhotoViewer() {
+        if (listAdapter != null) {
+            listAdapter.notifyDataSetChanged();
+        }
+    }
+
+    @Override
+    public boolean isPhotoChecked(int index) {
+        if (selectedAlbum == null || index < 0 || index >= selectedAlbum.photos.size()) {
+            return false;
+        }
+        MediaController.PhotoEntry photoEntry = selectedAlbum.photos.get(index);
+        return selectedPhotos.containsKey(photoEntry.imageId);
+    }
+
+    @Override
+    public void setPhotoChecked(int index) {
+        if (selectedAlbum == null || index < 0 || index >= selectedAlbum.photos.size()) {
+            return;
+        }
+        MediaController.PhotoEntry photoEntry = selectedAlbum.photos.get(index);
+        if (selectedPhotos.containsKey(photoEntry.imageId)) {
+            selectedPhotos.remove(photoEntry.imageId);
+        } else {
+            selectedPhotos.put(photoEntry.imageId, photoEntry);
+        }
+        int count = listView.getChildCount();
+
+        for (int a = 0; a < count; a++) {
+            View view = listView.getChildAt(a);
+            int num = (Integer)view.getTag();
+            if (num == index) {
+                updateSelectedPhoto(view, photoEntry);
+                break;
+            }
+        }
+        updateSelectedCount();
+    }
+
+    @Override
+    public void cancelButtonPressed() {
+        finishFragment();
+    }
+
+    @Override
+    public void sendButtonPressed(int index) {
+        if (selectedPhotos.isEmpty()) {
+            if (index < 0 || index >= selectedAlbum.photos.size()) {
+                return;
+            }
+            MediaController.PhotoEntry photoEntry = selectedAlbum.photos.get(index);
+            selectedPhotos.put(photoEntry.imageId, photoEntry);
+        }
+        sendSelectedPhotos();
+    }
+
+    @Override
+    public int getSelectedCount() {
+        return selectedPhotos.size();
+    }
+
+    public void setDelegate(PhotoPickerActivityDelegate delegate) {
+        this.delegate = delegate;
+    }
+
+    private void sendSelectedPhotos() {
+        if (selectedPhotos.isEmpty() || delegate == null || sendPressed) {
+            return;
+        }
+        sendPressed = true;
+        ArrayList<String> photos = new ArrayList<String>();
+        for (HashMap.Entry<Integer, MediaController.PhotoEntry> entry : selectedPhotos.entrySet()) {
+            MediaController.PhotoEntry photoEntry = entry.getValue();
+            if (photoEntry.path != null) {
+                photos.add(photoEntry.path);
+            }
+        }
+        delegate.didSelectPhotos(photos);
+        finishFragment();
+    }
+
+    private void fixLayout() {
+        if (listView != null) {
+            ViewTreeObserver obs = listView.getViewTreeObserver();
+            obs.addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener() {
+                @Override
+                public boolean onPreDraw() {
+                    fixLayoutInternal();
+                    if (listView != null) {
+                        listView.getViewTreeObserver().removeOnPreDrawListener(this);
+                    }
+                    return false;
+                }
+            });
+        }
+    }
+
+    private void fixLayoutInternal() {
+        if (getParentActivity() == null) {
+            return;
+        }
+        int position = listView.getFirstVisiblePosition();
+        WindowManager manager = (WindowManager)ApplicationLoader.applicationContext.getSystemService(Activity.WINDOW_SERVICE);
+        int rotation = manager.getDefaultDisplay().getRotation();
+
+        int columnsCount = 2;
+        if (selectedAlbum != null) {
+            if (rotation == Surface.ROTATION_270 || rotation == Surface.ROTATION_90) {
+                columnsCount = 5;
+            } else {
+                columnsCount = 3;
+            }
+        } else {
+            if (rotation == Surface.ROTATION_270 || rotation == Surface.ROTATION_90) {
+                columnsCount = 4;
+            }
+        }
+        listView.setNumColumns(columnsCount);
+        itemWidth = (getParentActivity().getResources().getDisplayMetrics().widthPixels - ((columnsCount + 1) * Utilities.dp(4))) / columnsCount;
+        listView.setColumnWidth(itemWidth);
+
+        listAdapter.notifyDataSetChanged();
+        listView.setSelection(position);
+    }
+
+    private void updateSelectedCount() {
+        if (selectedPhotos.isEmpty()) {
+            doneButtonTextView.setTextColor(0xff999999);
+            doneButtonTextView.setCompoundDrawablesWithIntrinsicBounds(R.drawable.selectphoto_small_grey, 0, 0, 0);
+            doneButtonBadgeTextView.setVisibility(View.GONE);
+            doneButton.setEnabled(false);
+        } else {
+            doneButtonTextView.setTextColor(0xffffffff);
+            doneButtonTextView.setCompoundDrawablesWithIntrinsicBounds(0, 0, 0, 0);
+            doneButtonBadgeTextView.setVisibility(View.VISIBLE);
+            doneButtonBadgeTextView.setText("" + selectedPhotos.size());
+            doneButton.setEnabled(true);
+        }
+    }
+
+    private void updateSelectedPhoto(View view, MediaController.PhotoEntry photoEntry) {
+        View frameView = view.findViewById(R.id.photo_frame);
+        ImageView checkImageView = (ImageView)view.findViewById(R.id.photo_check);
+        if (selectedPhotos.containsKey(photoEntry.imageId)) {
+            frameView.setBackgroundResource(R.drawable.photoborder);
+            checkImageView.setImageResource(R.drawable.selectphoto_small_active);
+            checkImageView.setBackgroundColor(0xff42d1f6);
+        } else {
+            frameView.setBackgroundDrawable(null);
+            checkImageView.setImageResource(R.drawable.selectphoto_small);
+            checkImageView.setBackgroundColor(0x501c1c1c);
+        }
+    }
+
+    private class ListAdapter extends BaseAdapter {
+        private Context mContext;
+
+        public ListAdapter(Context context) {
+            mContext = context;
+        }
+
+        @Override
+        public boolean areAllItemsEnabled() {
+            return true;
+        }
+
+        @Override
+        public boolean isEnabled(int i) {
+            return true;
+        }
+
+        @Override
+        public int getCount() {
+            if (selectedAlbum != null) {
+                return selectedAlbum.photos.size();
+            }
+            return albumsSorted != null ? albumsSorted.size() : 0;
+        }
+
+        @Override
+        public Object getItem(int i) {
+            return null;
+        }
+
+        @Override
+        public long getItemId(int i) {
+            return i;
+        }
+
+        @Override
+        public boolean hasStableIds() {
+            return true;
+        }
+
+        @Override
+        public View getView(int i, View view, ViewGroup viewGroup) {
+            int type = getItemViewType(i);
+            if (type == 0) {
+                if (view == null) {
+                    LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+                    view = li.inflate(R.layout.photo_picker_album_layout, viewGroup, false);
+                }
+                ViewGroup.LayoutParams params = view.getLayoutParams();
+                params.width = itemWidth;
+                params.height = itemWidth;
+                view.setLayoutParams(params);
+
+                MediaController.AlbumEntry albumEntry = albumsSorted.get(i);
+                BackupImageView imageView = (BackupImageView)view.findViewById(R.id.media_photo_image);
+                if (albumEntry.coverPhoto != null && albumEntry.coverPhoto.path != null) {
+                    imageView.setImage("thumb://" + albumEntry.coverPhoto.imageId + ":" + albumEntry.coverPhoto.path, null, R.drawable.nophotos);
+                } else {
+                    imageView.setImageResource(R.drawable.nophotos);
+                }
+                TextView textView = (TextView)view.findViewById(R.id.album_name);
+                textView.setText(albumEntry.bucketName);
+                if (cameraAlbumId != null && albumEntry.bucketId == cameraAlbumId) {
+
+                } else {
+
+                }
+                textView = (TextView)view.findViewById(R.id.album_count);
+                textView.setText("" + albumEntry.photos.size());
+            } else if (type == 1) {
+                if (view == null) {
+                    LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+                    view = li.inflate(R.layout.photo_picker_photo_layout, viewGroup, false);
+                    View checkImageView = view.findViewById(R.id.photo_check_frame);
+                    checkImageView.setOnClickListener(new View.OnClickListener() {
+                        @Override
+                        public void onClick(View v) {
+                            MediaController.PhotoEntry photoEntry = selectedAlbum.photos.get((Integer)((View)v.getParent()).getTag());
+                            if (selectedPhotos.containsKey(photoEntry.imageId)) {
+                                selectedPhotos.remove(photoEntry.imageId);
+                            } else {
+                                selectedPhotos.put(photoEntry.imageId, photoEntry);
+                            }
+                            updateSelectedPhoto((View)v.getParent(), photoEntry);
+                            updateSelectedCount();
+                        }
+                    });
+                }
+                ViewGroup.LayoutParams params = view.getLayoutParams();
+                params.width = itemWidth;
+                params.height = itemWidth;
+                view.setLayoutParams(params);
+
+                MediaController.PhotoEntry photoEntry = selectedAlbum.photos.get(i);
+                BackupImageView imageView = (BackupImageView)view.findViewById(R.id.media_photo_image);
+                imageView.setTag(i);
+                view.setTag(i);
+                if (photoEntry.path != null) {
+                    imageView.setImage("thumb://" + photoEntry.imageId + ":" + photoEntry.path, null, R.drawable.nophotos);
+                } else {
+                    imageView.setImageResource(R.drawable.nophotos);
+                }
+                updateSelectedPhoto(view, photoEntry);
+                boolean showing = PhotoViewer.getInstance().isShowingImage(photoEntry.path);
+                imageView.imageReceiver.setVisible(!showing, false);
+                View frameView = view.findViewById(R.id.photo_frame);
+                frameView.setVisibility(showing ? View.GONE : View.VISIBLE);
+                ImageView checkImageView = (ImageView)view.findViewById(R.id.photo_check);
+                checkImageView.setVisibility(showing ? View.GONE : View.VISIBLE);
+            }
+            return view;
+        }
+
+        @Override
+        public int getItemViewType(int i) {
+            if (selectedAlbum != null) {
+                return 1;
+            }
+            return 0;
+        }
+
+        @Override
+        public int getViewTypeCount() {
+            return 2;
+        }
+
+        @Override
+        public boolean isEmpty() {
+            if (selectedAlbum != null) {
+                return selectedAlbum.photos.isEmpty();
+            }
+            return albumsSorted == null || albumsSorted.isEmpty();
+        }
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index 8e7646c8f..44c2633d9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -12,6 +12,7 @@
 import android.animation.AnimatorListenerAdapter;
 import android.animation.AnimatorSet;
 import android.animation.ObjectAnimator;
+import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
@@ -26,13 +27,18 @@
 import android.view.GestureDetector;
 import android.view.Gravity;
 import android.view.MotionEvent;
+import android.view.Surface;
 import android.view.VelocityTracker;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.ViewTreeObserver;
 import android.view.WindowManager;
 import android.view.animation.AlphaAnimation;
+import android.view.animation.Animation;
+import android.view.animation.AnimationSet;
 import android.view.animation.DecelerateInterpolator;
+import android.view.animation.ScaleAnimation;
+import android.widget.Button;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
 import android.widget.ProgressBar;
@@ -60,10 +66,10 @@
 import org.telegram.ui.Views.ImageReceiver;
 
 import java.io.File;
-import java.lang.ref.WeakReference;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.HashMap;
+import java.util.Locale;
 
 public class PhotoViewer implements NotificationCenter.NotificationCenterDelegate, GestureDetector.OnGestureListener, GestureDetector.OnDoubleTapListener {
     private int classGuid;
@@ -77,7 +83,8 @@
     private boolean isActionBarVisible = true;
 
     private WindowManager.LayoutParams windowLayoutParams;
-    private FrameLayoutTouchListener containerView;
+    private FrameLayoutDrawer containerView;
+    private FrameLayoutTouchListener windowView;
     private ClippingImageView animatingImageView;
     private FrameLayout bottomLayout;
     private TextView nameTextView;
@@ -86,11 +93,18 @@
     private ActionBarMenuItem menuItem;
     private ColorDrawable backgroundDrawable = new ColorDrawable(0xff000000);
     private OverlayView currentOverlay;
+    private ImageView checkImageView;
+    private View pickerView;
+    private TextView doneButtonTextView;
+    private TextView doneButtonBadgeTextView;
     private boolean canShowBottom = true;
     private boolean overlayViewVisible = true;
 
-    private boolean animationInProgress = false;
+    private int animationInProgress = 0;
+    private PlaceProviderObject showAfterAnimation;
+    private PlaceProviderObject hideAfterAnimation;
     private boolean disableShowCheck = false;
+    private Animation.AnimationListener animationListener;
 
     private ImageReceiver leftImage = new ImageReceiver();
     private ImageReceiver centerImage = new ImageReceiver();
@@ -100,6 +114,7 @@
     private TLRPC.FileLocation currentFileLocation;
     private String currentFileName;
     private PlaceProviderObject currentPlaceObject;
+    private String currentPathObject;
     private Bitmap currentThumb = null;
 
     private int avatarsUserId;
@@ -152,6 +167,7 @@
     private HashMap<Integer, MessageObject> imagesByIds = new HashMap<Integer, MessageObject>();
     private ArrayList<TLRPC.FileLocation> imagesArrLocations = new ArrayList<TLRPC.FileLocation>();
     private ArrayList<Integer> imagesArrLocationsSizes = new ArrayList<Integer>();
+    private ArrayList<MediaController.PhotoEntry> imagesArrLocals = new ArrayList<MediaController.PhotoEntry>();
 
     private final static int gallery_menu_save = 1;
     private final static int gallery_menu_showall = 2;
@@ -199,8 +215,14 @@ public void onClick(View v) {
     }
 
     public static interface PhotoViewerProvider {
-        public PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation);
+        public PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index);
+        public void willSwitchFromPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index);
         public void willHidePhotoViewer();
+        public boolean isPhotoChecked(int index);
+        public void setPhotoChecked(int index);
+        public void cancelButtonPressed();
+        public void sendButtonPressed(int index);
+        public int getSelectedCount();
     }
 
     private static class FrameLayoutTouchListener extends FrameLayout {
@@ -213,11 +235,6 @@ public boolean onTouchEvent(MotionEvent event) {
             return getInstance().onTouchEvent(event);
         }
 
-        @Override
-        protected void onDraw(Canvas canvas) {
-            getInstance().onDraw(canvas);
-        }
-
         @Override
         protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
             super.onLayout(changed, left, top, right, bottom);
@@ -225,6 +242,26 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
         }
     }
 
+    private static class FrameLayoutDrawer extends FrameLayout {
+        public FrameLayoutDrawer(Context context) {
+            super(context);
+            setWillNotDraw(false);
+        }
+
+        @Override
+        protected void onAnimationEnd() {
+            super.onAnimationEnd();
+            if (getInstance().animationListener != null) {
+                getInstance().animationListener.onAnimationEnd(null);
+            }
+        }
+
+        @Override
+        protected void onDraw(Canvas canvas) {
+            getInstance().onDraw(canvas);
+        }
+    }
+
     private static volatile PhotoViewer Instance = null;
     public static PhotoViewer getInstance() {
         PhotoViewer localInstance = Instance;
@@ -275,13 +312,18 @@ public void didReceivedNotification(int id, Object... args) {
                 imagesArrLocations.clear();
                 imagesArrLocationsSizes.clear();
                 for (TLRPC.Photo photo : photos) {
-                    if (photo instanceof TLRPC.TL_photoEmpty) {
+                    if (photo instanceof TLRPC.TL_photoEmpty || photo.sizes == null) {
                         continue;
                     }
                     TLRPC.PhotoSize sizeFull = PhotoObject.getClosestPhotoSizeWithSize(photo.sizes, 640, 640);
                     if (sizeFull != null) {
-                        if (currentFileLocation != null && sizeFull.location.local_id == currentFileLocation.local_id && sizeFull.location.volume_id == currentFileLocation.volume_id) {
-                            setToImage = imagesArrLocations.size();
+                        if (currentFileLocation != null) {
+                            for (TLRPC.PhotoSize size : photo.sizes) {
+                                if (size.location.local_id == currentFileLocation.local_id && size.location.volume_id == currentFileLocation.volume_id) {
+                                    setToImage = imagesArrLocations.size();
+                                    break;
+                                }
+                            }
                         }
                         imagesArrLocations.add(sizeFull.location);
                         imagesArrLocationsSizes.add(sizeFull.size);
@@ -292,6 +334,8 @@ public void didReceivedNotification(int id, Object... args) {
                 if (setToImage != -1) {
                     setImageIndex(setToImage, true);
                 } else {
+                    imagesArrLocations.add(0, currentFileLocation);
+                    imagesArrLocationsSizes.add(0, 0);
                     setImageIndex(0, true);
                 }
                 if (fromCache) {
@@ -388,9 +432,21 @@ public void didReceivedNotification(int id, Object... args) {
     public void setParentActivity(Activity activity) {
         parentActivity = activity;
 
-        containerView = new FrameLayoutTouchListener(activity);
-        containerView.setBackgroundDrawable(backgroundDrawable);
+        windowView = new FrameLayoutTouchListener(activity);
+        windowView.setBackgroundDrawable(backgroundDrawable);
+        windowView.setFocusable(false);
+
+        animatingImageView = new ClippingImageView(windowView.getContext());
+        windowView.addView(animatingImageView);
+
+        containerView = new FrameLayoutDrawer(activity);
         containerView.setFocusable(false);
+        windowView.addView(containerView);
+        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)containerView.getLayoutParams();
+        layoutParams.width = FrameLayout.LayoutParams.MATCH_PARENT;
+        layoutParams.height = FrameLayout.LayoutParams.MATCH_PARENT;
+        layoutParams.gravity = Gravity.TOP | Gravity.LEFT;
+        containerView.setLayoutParams(layoutParams);
 
         windowLayoutParams = new WindowManager.LayoutParams();
         windowLayoutParams.height = WindowManager.LayoutParams.MATCH_PARENT;
@@ -400,19 +456,16 @@ public void setParentActivity(Activity activity) {
         windowLayoutParams.type = WindowManager.LayoutParams.TYPE_APPLICATION;
         windowLayoutParams.flags = WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE;
 
-        animatingImageView = new ClippingImageView(containerView.getContext());
-        containerView.addView(animatingImageView);
-
         actionBar = new ActionBar(activity);
         containerView.addView(actionBar);
-        actionBar.setBackgroundColor(0xdd000000);
-        actionBar.setItemsBackground(R.drawable.bar_selector_white);
-        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)actionBar.getLayoutParams();
+        actionBar.setBackgroundColor(0x7F000000);
+        layoutParams = (FrameLayout.LayoutParams)actionBar.getLayoutParams();
         layoutParams.width = FrameLayout.LayoutParams.MATCH_PARENT;
         actionBar.setLayoutParams(layoutParams);
         actionBarLayer = actionBar.createLayer();
-        actionBarLayer.setDisplayHomeAsUpEnabled(true);
-        actionBarLayer.setTitle(LocaleController.getString("Gallery", R.string.Gallery));
+        actionBarLayer.setItemsBackground(R.drawable.bar_selector_white);
+        actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.photo_back);
+        actionBarLayer.setTitle(LocaleController.formatString("Of", R.string.Of, 1, 1));
         actionBar.setCurrentActionBarLayer(actionBarLayer);
 
         actionBarLayer.setActionBarMenuOnItemClick(new ActionBarLayer.ActionBarMenuOnItemClick() {
@@ -494,7 +547,7 @@ public boolean canOpenMenu() {
         layoutParams.height = Utilities.dp(48);
         layoutParams.gravity = Gravity.BOTTOM | Gravity.LEFT;
         bottomLayout.setLayoutParams(layoutParams);
-        bottomLayout.setBackgroundColor(0xdd000000);
+        bottomLayout.setBackgroundColor(0x7F000000);
 
         ImageView shareButton = new ImageView(containerView.getContext());
         shareButton.setImageResource(R.drawable.ic_ab_share_white);
@@ -593,6 +646,40 @@ public void onClick(View v) {
         layoutParams.topMargin = Utilities.dp(26);
         dateTextView.setLayoutParams(layoutParams);
 
+        pickerView = parentActivity.getLayoutInflater().inflate(R.layout.photo_picker_bottom_layout, null);
+        containerView.addView(pickerView);
+        Button cancelButton = (Button)pickerView.findViewById(R.id.cancel_button);
+        cancelButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                if (placeProvider != null) {
+                    placeProvider.cancelButtonPressed();
+                    closePhoto(false);
+                }
+            }
+        });
+        View doneButton = pickerView.findViewById(R.id.done_button);
+        doneButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                if (placeProvider != null) {
+                    placeProvider.sendButtonPressed(currentIndex);
+                    closePhoto(false);
+                }
+            }
+        });
+
+        layoutParams = (FrameLayout.LayoutParams)pickerView.getLayoutParams();
+        layoutParams.width = FrameLayout.LayoutParams.MATCH_PARENT;
+        layoutParams.height = Utilities.dp(48);
+        layoutParams.gravity = Gravity.BOTTOM;
+        pickerView.setLayoutParams(layoutParams);
+
+        cancelButton.setText(LocaleController.getString("Cancel", R.string.Cancel).toUpperCase());
+        doneButtonTextView = (TextView)doneButton.findViewById(R.id.done_button_text);
+        doneButtonTextView.setText(LocaleController.getString("Send", R.string.Send).toUpperCase());
+        doneButtonBadgeTextView = (TextView)doneButton.findViewById(R.id.done_button_badge);
+
         progressBar = new ProgressBar(containerView.getContext(), null, android.R.attr.progressBarStyleHorizontal);
         progressBar.setVisibility(View.GONE);
         progressBar.setMax(100);
@@ -610,32 +697,67 @@ public void onClick(View v) {
         gestureDetector = new GestureDetector(containerView.getContext(), this);
         gestureDetector.setOnDoubleTapListener(this);
 
-        centerImage.parentView = new WeakReference<View>(containerView);
-        leftImage.parentView = new WeakReference<View>(containerView);
-        rightImage.parentView = new WeakReference<View>(containerView);
+        centerImage.parentView = containerView;
+        leftImage.parentView = containerView;
+        rightImage.parentView = containerView;
 
         currentOverlay = new OverlayView(containerView.getContext());
         containerView.addView(currentOverlay);
         currentOverlay.setVisibility(View.GONE);
+
+        checkImageView = new ImageView(containerView.getContext());
+        containerView.addView(checkImageView);
+        checkImageView.setVisibility(View.GONE);
+        checkImageView.setScaleType(ImageView.ScaleType.CENTER);
+        checkImageView.setImageResource(R.drawable.selectphoto_large);
+        layoutParams = (FrameLayout.LayoutParams)checkImageView.getLayoutParams();
+        layoutParams.width = Utilities.dp(46);
+        layoutParams.height = Utilities.dp(46);
+        layoutParams.gravity = Gravity.RIGHT;
+        layoutParams.rightMargin = Utilities.dp(10);
+        WindowManager manager = (WindowManager)ApplicationLoader.applicationContext.getSystemService(Activity.WINDOW_SERVICE);
+        int rotation = manager.getDefaultDisplay().getRotation();
+        if (rotation == Surface.ROTATION_270 || rotation == Surface.ROTATION_90) {
+            layoutParams.topMargin = Utilities.dp(48);
+        } else {
+            layoutParams.topMargin = Utilities.dp(58);
+        }
+        checkImageView.setLayoutParams(layoutParams);
+        checkImageView.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if (placeProvider != null) {
+                    placeProvider.setPhotoChecked(currentIndex);
+                    if (placeProvider.isPhotoChecked(currentIndex)) {
+                        checkImageView.setBackgroundColor(0xff42d1f6);
+                    } else {
+                        checkImageView.setBackgroundColor(0x801c1c1c);
+                    }
+                    updateSelectedCount();
+                }
+            }
+        });
     }
 
     private void toggleOverlayView(boolean show) {
         if (overlayViewVisible == show) {
             return;
         }
-        overlayViewVisible = show;
-        if (android.os.Build.VERSION.SDK_INT >= 11) {
-            AnimatorSet animatorSet = new AnimatorSet();
-            animatorSet.playTogether(
-                    ObjectAnimator.ofFloat(currentOverlay, "alpha", show ? 1.0f : 0.0f)
-            );
-            animatorSet.setDuration(200);
-            animatorSet.start();
-        } else {
-            AlphaAnimation animation = new AlphaAnimation(show ? 0.0f : 1.0f, show ? 1.0f : 0.0f);
-            animation.setDuration(200);
-            animation.setFillAfter(true);
-            currentOverlay.startAnimation(animation);
+        if (currentOverlay.getVisibility() == View.VISIBLE) {
+            overlayViewVisible = show;
+            if (android.os.Build.VERSION.SDK_INT >= 11) {
+                AnimatorSet animatorSet = new AnimatorSet();
+                animatorSet.playTogether(
+                        ObjectAnimator.ofFloat(currentOverlay, "alpha", show ? 1.0f : 0.0f)
+                );
+                animatorSet.setDuration(200);
+                animatorSet.start();
+            } else {
+                AlphaAnimation animation = new AlphaAnimation(show ? 0.0f : 1.0f, show ? 1.0f : 0.0f);
+                animation.setDuration(200);
+                animation.setFillAfter(true);
+                currentOverlay.startAnimation(animation);
+            }
         }
     }
 
@@ -828,8 +950,25 @@ private String getFileName(int index, TLRPC.InputFileLocation fileLocation) {
         return null;
     }
 
+    private void updateSelectedCount() {
+        if (placeProvider == null) {
+            return;
+        }
+        int count = placeProvider.getSelectedCount();
+        if (count == 0) {
+            doneButtonTextView.setTextColor(0xffffffff);
+            doneButtonTextView.setCompoundDrawablesWithIntrinsicBounds(R.drawable.selectphoto_small, 0, 0, 0);
+            doneButtonBadgeTextView.setVisibility(View.GONE);
+        } else {
+            doneButtonTextView.setTextColor(0xffffffff);
+            doneButtonTextView.setCompoundDrawablesWithIntrinsicBounds(0, 0, 0, 0);
+            doneButtonBadgeTextView.setVisibility(View.VISIBLE);
+            doneButtonBadgeTextView.setText("" + count);
+        }
+    }
+
     private void updateActionOverlays() {
-        if (currentMessageObject == null) {
+        if (currentMessageObject == null || currentFileName == null) {
             currentOverlay.setVisibility(View.GONE);
             return;
         }
@@ -868,10 +1007,11 @@ private void updateActionOverlays() {
         }
     }
 
-    private void onPhotoShow(final MessageObject messageObject, final TLRPC.FileLocation fileLocation, final ArrayList<MessageObject> messages, int index, final PlaceProviderObject object) {
+    private void onPhotoShow(final MessageObject messageObject, final TLRPC.FileLocation fileLocation, final ArrayList<MessageObject> messages, final ArrayList<MediaController.PhotoEntry> photos, int index, final PlaceProviderObject object) {
         classGuid = ConnectionsManager.getInstance().generateClassGuid();
         currentMessageObject = null;
         currentFileLocation = null;
+        currentPathObject = null;
         currentIndex = -1;
         currentFileName = null;
         avatarsUserId = 0;
@@ -882,13 +1022,19 @@ private void onPhotoShow(final MessageObject messageObject, final TLRPC.FileLoca
         loadingMoreImages = false;
         cacheEndReached = false;
         opennedFromMedia = false;
+        canShowBottom = true;
         imagesArr.clear();
         imagesArrLocations.clear();
         imagesArrLocationsSizes.clear();
+        imagesArrLocals.clear();
         imagesByIds.clear();
         imagesArrTemp.clear();
         imagesByIdsTemp.clear();
         currentThumb = object.thumb;
+        menuItem.setVisibility(View.VISIBLE);
+        bottomLayout.setVisibility(View.VISIBLE);
+        checkImageView.setVisibility(View.GONE);
+        pickerView.setVisibility(View.GONE);
 
         if (messageObject != null && messages == null) {
             imagesArr.add(messageObject);
@@ -901,7 +1047,7 @@ private void onPhotoShow(final MessageObject messageObject, final TLRPC.FileLoca
                     if (messageObject.messageOwner.to_id.chat_id != 0) {
                         currentDialogId = -messageObject.messageOwner.to_id.chat_id;
                     } else {
-                        if (messageObject.messageOwner.to_id.user_id == UserConfig.clientUserId) {
+                        if (messageObject.messageOwner.to_id.user_id == UserConfig.getClientUserId()) {
                             currentDialogId = messageObject.messageOwner.from_id;
                         } else {
                             currentDialogId = messageObject.messageOwner.to_id.user_id;
@@ -912,17 +1058,15 @@ private void onPhotoShow(final MessageObject messageObject, final TLRPC.FileLoca
             } else {
                 menuItem.hideSubItem(gallery_menu_showall);
             }
-            bottomLayout.setVisibility(View.VISIBLE);
-            canShowBottom = true;
             setImageIndex(0, true);
         } else if (fileLocation != null) {
             avatarsUserId = object.user_id;
             imagesArrLocations.add(fileLocation);
             imagesArrLocationsSizes.add(object.size);
             bottomLayout.setVisibility(View.GONE);
+            canShowBottom = false;
             menuItem.hideSubItem(gallery_menu_showall);
             setImageIndex(0, true);
-            canShowBottom = false;
         } else if (messages != null) {
             imagesArr.addAll(messages);
             Collections.reverse(imagesArr);
@@ -941,7 +1085,7 @@ private void onPhotoShow(final MessageObject messageObject, final TLRPC.FileLoca
                 if (messageObject.messageOwner.to_id.chat_id != 0) {
                     currentDialogId = -messageObject.messageOwner.to_id.chat_id;
                 } else {
-                    if (messageObject.messageOwner.to_id.user_id == UserConfig.clientUserId) {
+                    if (messageObject.messageOwner.to_id.user_id == UserConfig.getClientUserId()) {
                         currentDialogId = messageObject.messageOwner.from_id;
                     } else {
                         currentDialogId = messageObject.messageOwner.to_id.user_id;
@@ -950,6 +1094,15 @@ private void onPhotoShow(final MessageObject messageObject, final TLRPC.FileLoca
             }
             opennedFromMedia = true;
             setImageIndex(index, true);
+        } else if (photos != null) {
+            checkImageView.setVisibility(View.VISIBLE);
+            menuItem.setVisibility(View.GONE);
+            imagesArrLocals.addAll(photos);
+            setImageIndex(index, true);
+            pickerView.setVisibility(View.VISIBLE);
+            bottomLayout.setVisibility(View.GONE);
+            canShowBottom = false;
+            updateSelectedCount();
         }
 
         if (currentDialogId != 0 && totalImagesCount == 0) {
@@ -966,6 +1119,7 @@ public void setImageIndex(int index, boolean init) {
         if (!init) {
             currentThumb = null;
         }
+        placeProvider.willSwitchFromPhoto(currentMessageObject, currentFileLocation, currentIndex);
         int prevIndex = currentIndex;
         currentIndex = index;
         currentFileName = getFileName(index, null);
@@ -988,23 +1142,34 @@ public void setImageIndex(int index, boolean init) {
                 }
                 actionBarLayer.setTitle(LocaleController.formatString("Of", R.string.Of, (totalImagesCount - imagesArr.size()) + currentIndex + 1, totalImagesCount));
             }
-            updateActionOverlays();
         } else if (!imagesArrLocations.isEmpty()) {
             currentFileLocation = imagesArrLocations.get(index);
-            if (imagesArrLocations.size() > 1) {
-                actionBarLayer.setTitle(LocaleController.formatString("Of", R.string.Of, currentIndex + 1, imagesArrLocations.size()));
+            actionBarLayer.setTitle(LocaleController.formatString("Of", R.string.Of, currentIndex + 1, imagesArrLocations.size()));
+        } else if (!imagesArrLocals.isEmpty()) {
+            currentPathObject = imagesArrLocals.get(index).path;
+            actionBarLayer.setTitle(LocaleController.formatString("Of", R.string.Of, currentIndex + 1, imagesArrLocals.size()));
+
+            if (placeProvider.isPhotoChecked(currentIndex)) {
+                checkImageView.setBackgroundColor(0xff42d1f6);
+            } else {
+                checkImageView.setBackgroundColor(0x801c1c1c);
             }
         }
 
-        if (!init) {
-            if (currentPlaceObject != null) {
+
+        if (android.os.Build.VERSION.SDK_INT >= 11 && currentPlaceObject != null) {
+            if (animationInProgress == 0) {
                 currentPlaceObject.imageReceiver.setVisible(true, true);
+            } else {
+                showAfterAnimation = currentPlaceObject;
             }
         }
-        currentPlaceObject = placeProvider.getPlaceForPhoto(currentMessageObject, currentFileLocation);
-        if (!init) {
-            if (currentPlaceObject != null) {
+        currentPlaceObject = placeProvider.getPlaceForPhoto(currentMessageObject, currentFileLocation, currentIndex);
+        if (android.os.Build.VERSION.SDK_INT >= 11 && currentPlaceObject != null) {
+            if (animationInProgress == 0) {
                 currentPlaceObject.imageReceiver.setVisible(false, true);
+            } else {
+                hideAfterAnimation = currentPlaceObject;
             }
         }
 
@@ -1033,7 +1198,7 @@ public void setImageIndex(int index, boolean init) {
         canDragDown = true;
         changingPage = false;
         switchImageAfterAnimation = 0;
-        canZoom = !currentFileName.endsWith("mp4");
+        canZoom = currentFileName == null || !currentFileName.endsWith("mp4");
         updateMinMax(scale);
 
         if (prevIndex == -1) {
@@ -1080,79 +1245,102 @@ public void setImageIndex(int index, boolean init) {
         } else {
             progressBar.setVisibility(View.GONE);
         }
+        updateActionOverlays();
     }
 
     private void setIndexToImage(ImageReceiver imageReceiver, int index) {
-        int size[] = new int[1];
-        TLRPC.FileLocation fileLocation = getFileLocation(index, size);
-
-        if (fileLocation != null) {
-            MessageObject messageObject = null;
-            if (!imagesArr.isEmpty()) {
-                messageObject = imagesArr.get(index);
+        if (!imagesArrLocals.isEmpty()) {
+            if (index >= 0 && index < imagesArrLocals.size()) {
+                MediaController.PhotoEntry photoEntry = imagesArrLocals.get(index);
+                Bitmap placeHolder = null;
+                if (currentThumb != null && imageReceiver == centerImage) {
+                    placeHolder = currentThumb;
+                }
+                int size = (int)(800 / Utilities.density);
+                imageReceiver.setImage(photoEntry.path, String.format(Locale.US, "%d_%d", size, size), placeHolder != null ? new BitmapDrawable(null, placeHolder) : null);
+            } else {
+                imageReceiver.setImageBitmap((Bitmap) null);
             }
+        } else {
+            int size[] = new int[1];
+            TLRPC.FileLocation fileLocation = getFileLocation(index, size);
+
+            if (fileLocation != null) {
+                MessageObject messageObject = null;
+                if (!imagesArr.isEmpty()) {
+                    messageObject = imagesArr.get(index);
+                }
 
-            if (messageObject != null && messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaVideo) {
-                if (messageObject.imagePreview != null) {
-                    imageReceiver.setImageBitmap(messageObject.imagePreview);
-                } else if (messageObject.messageOwner.media.video.thumb != null) {
+                if (messageObject != null && messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaVideo) {
+                    if (messageObject.imagePreview != null) {
+                        imageReceiver.setImageBitmap(messageObject.imagePreview);
+                    } else if (messageObject.messageOwner.media.video.thumb != null) {
+                        Bitmap placeHolder = null;
+                        if (currentThumb != null && imageReceiver == centerImage) {
+                            placeHolder = currentThumb;
+                        }
+                        imageReceiver.setImage(fileLocation, null, placeHolder != null ? new BitmapDrawable(null, placeHolder) : null, size[0]);
+                    } else {
+                        imageReceiver.setImageBitmap(parentActivity.getResources().getDrawable(R.drawable.photoview_placeholder));
+                    }
+                } else {
                     Bitmap placeHolder = null;
+                    if (messageObject != null) {
+                        placeHolder = messageObject.imagePreview;
+                    }
                     if (currentThumb != null && imageReceiver == centerImage) {
                         placeHolder = currentThumb;
                     }
                     imageReceiver.setImage(fileLocation, null, placeHolder != null ? new BitmapDrawable(null, placeHolder) : null, size[0]);
-                } else {
-                    imageReceiver.setImageBitmap(parentActivity.getResources().getDrawable(R.drawable.photoview_placeholder));
                 }
             } else {
-                Bitmap placeHolder = null;
-                if (messageObject != null) {
-                    placeHolder = messageObject.imagePreview;
-                }
-                if (currentThumb != null && imageReceiver == centerImage) {
-                    placeHolder = currentThumb;
+                if (size[0] == 0) {
+                    imageReceiver.setImageBitmap((Bitmap) null);
+                } else {
+                    imageReceiver.setImageBitmap(parentActivity.getResources().getDrawable(R.drawable.photoview_placeholder));
                 }
-                imageReceiver.setImage(fileLocation, null, placeHolder != null ? new BitmapDrawable(null, placeHolder) : null, size[0]);
-            }
-        } else {
-            if (size[0] == 0) {
-                imageReceiver.setImageBitmap((Bitmap) null);
-            } else {
-                imageReceiver.setImageBitmap(parentActivity.getResources().getDrawable(R.drawable.photoview_placeholder));
             }
         }
     }
 
     public boolean isShowingImage(MessageObject object) {
-        return !disableShowCheck && object != null && currentMessageObject != null && currentMessageObject.messageOwner.id == object.messageOwner.id;
+        return android.os.Build.VERSION.SDK_INT >= 11 && isVisible && !disableShowCheck && object != null && currentMessageObject != null && currentMessageObject.messageOwner.id == object.messageOwner.id;
     }
 
     public boolean isShowingImage(TLRPC.FileLocation object) {
-        return !disableShowCheck && object != null && currentFileLocation != null && object.local_id == currentFileLocation.local_id && object.volume_id == currentFileLocation.volume_id && object.dc_id == currentFileLocation.dc_id;
+        return android.os.Build.VERSION.SDK_INT >= 11 && isVisible && !disableShowCheck && object != null && currentFileLocation != null && object.local_id == currentFileLocation.local_id && object.volume_id == currentFileLocation.volume_id && object.dc_id == currentFileLocation.dc_id;
+    }
+
+    public boolean isShowingImage(String object) {
+        return android.os.Build.VERSION.SDK_INT >= 11 && isVisible && !disableShowCheck && object != null && currentPathObject != null && object.equals(currentPathObject);
     }
 
     public void openPhoto(final MessageObject messageObject, final PhotoViewerProvider provider) {
-        openPhoto(messageObject, null, null, 0, provider);
+        openPhoto(messageObject, null, null, null, 0, provider);
     }
 
     public void openPhoto(final TLRPC.FileLocation fileLocation, final PhotoViewerProvider provider) {
-        openPhoto(null, fileLocation, null, 0, provider);
+        openPhoto(null, fileLocation, null, null, 0, provider);
     }
 
     public void openPhoto(final ArrayList<MessageObject> messages, final int index, final PhotoViewerProvider provider) {
-        openPhoto(messages.get(index), null, messages, index, provider);
+        openPhoto(messages.get(index), null, messages, null, index, provider);
     }
 
-    public void openPhoto(final MessageObject messageObject, final TLRPC.FileLocation fileLocation, final ArrayList<MessageObject> messages, final int index, final PhotoViewerProvider provider) {
-        if (parentActivity == null || isVisible || provider == null || animationInProgress || messageObject == null && fileLocation == null && messages == null) {
+    public void openPhotoForSelect(final ArrayList<MediaController.PhotoEntry> photos, final int index, final PhotoViewerProvider provider) {
+        openPhoto(null, null, null, photos, index, provider);
+    }
+
+    public void openPhoto(final MessageObject messageObject, final TLRPC.FileLocation fileLocation, final ArrayList<MessageObject> messages, final ArrayList<MediaController.PhotoEntry> photos, final int index, final PhotoViewerProvider provider) {
+        if (parentActivity == null || isVisible || provider == null || animationInProgress != 0 || messageObject == null && fileLocation == null && messages == null && photos == null) {
             return;
         }
-        final PlaceProviderObject object = provider.getPlaceForPhoto(messageObject, fileLocation);
+        final PlaceProviderObject object = provider.getPlaceForPhoto(messageObject, fileLocation, index);
         if (object == null) {
             return;
         }
 
-        actionBarLayer.setTitle(LocaleController.getString("Gallery", R.string.Gallery));
+        actionBarLayer.setTitle(LocaleController.formatString("Of", R.string.Of, 1, 1));
         NotificationCenter.getInstance().addObserver(this, FileLoader.FileDidFailedLoad);
         NotificationCenter.getInstance().addObserver(this, FileLoader.FileDidLoaded);
         NotificationCenter.getInstance().addObserver(this, FileLoader.FileLoadProgressChanged);
@@ -1162,14 +1350,15 @@ public void openPhoto(final MessageObject messageObject, final TLRPC.FileLocatio
 
         placeProvider = provider;
         WindowManager wm = (WindowManager) parentActivity.getSystemService(Context.WINDOW_SERVICE);
-        wm.addView(containerView, windowLayoutParams);
+        wm.addView(windowView, windowLayoutParams);
 
         if (velocityTracker == null) {
             velocityTracker = VelocityTracker.obtain();
         }
 
         disableShowCheck = true;
-        onPhotoShow(messageObject, fileLocation, messages, index, object);
+        animationInProgress = 1;
+        onPhotoShow(messageObject, fileLocation, messages, photos, index, object);
         isVisible = true;
         backgroundDrawable.setAlpha(255);
         toggleActionBar(true, false);
@@ -1178,8 +1367,6 @@ public void openPhoto(final MessageObject messageObject, final TLRPC.FileLocatio
         if(android.os.Build.VERSION.SDK_INT >= 11) {
             Utilities.lockOrientation(parentActivity);
 
-            animationInProgress = true;
-
             animatingImageView.setVisibility(View.VISIBLE);
             animatingImageView.setImageBitmap(object.thumb);
 
@@ -1208,6 +1395,7 @@ public boolean onPreDraw() {
                     float xPos = (Utilities.displaySize.x - width) / 2.0f;
                     float yPos = (Utilities.displaySize.y - Utilities.statusBarHeight - height) / 2.0f;
                     int clipHorizontal = Math.abs(object.imageReceiver.drawRegion.left - object.imageReceiver.imageX);
+                    int clipVertical = Math.abs(object.imageReceiver.drawRegion.top - object.imageReceiver.imageY);
 
                     int coords2[] = new int[2];
                     object.parentView.getLocationInWindow(coords2);
@@ -1219,6 +1407,8 @@ public boolean onPreDraw() {
                     if (clipBottom < 0) {
                         clipBottom = 0;
                     }
+                    clipTop = Math.max(clipTop, clipVertical);
+                    clipBottom = Math.max(clipBottom, clipVertical);
 
                     AnimatorSet animatorSet = new AnimatorSet();
                     animatorSet.playTogether(
@@ -1230,19 +1420,24 @@ public boolean onPreDraw() {
                             ObjectAnimator.ofInt(animatingImageView, "clipHorizontal", clipHorizontal, 0),
                             ObjectAnimator.ofInt(animatingImageView, "clipTop", clipTop, 0),
                             ObjectAnimator.ofInt(animatingImageView, "clipBottom", clipBottom, 0),
-                            ObjectAnimator.ofFloat(actionBar, "alpha", 0.0f, 1.0f),
-                            ObjectAnimator.ofFloat(bottomLayout, "alpha", 0.0f, 1.0f),
-                            ObjectAnimator.ofFloat(progressBar, "alpha", 0.0f, 1.0f),
-                            ObjectAnimator.ofFloat(currentOverlay, "alpha", 0.0f, 1.0f)
+                            ObjectAnimator.ofFloat(containerView, "alpha", 0.0f, 1.0f),
+                            ObjectAnimator.ofFloat(currentOverlay, "alpha", 1.0f)
                     );
 
                     animatorSet.setDuration(250);
                     animatorSet.addListener(new AnimatorListenerAdapter() {
                         @Override
                         public void onAnimationEnd(Animator animation) {
-                            animationInProgress = false;
+                            animationInProgress = 0;
+                            containerView.invalidate();
                             animatingImageView.setVisibility(View.GONE);
                             Utilities.unlockOrientation(parentActivity);
+                            if (showAfterAnimation != null) {
+                                showAfterAnimation.imageReceiver.setVisible(true, true);
+                            }
+                            if (hideAfterAnimation != null) {
+                                hideAfterAnimation.imageReceiver.setVisible(false, true);
+                            }
                         }
                     });
                     animatorSet.start();
@@ -1252,19 +1447,34 @@ public void onAnimationEnd(Animator animation) {
                         public void onDraw() {
                             disableShowCheck = false;
                             animatingImageView.setOnDrawListener(null);
-                            object.imageReceiver.setVisible(false, true);
+                            if (android.os.Build.VERSION.SDK_INT >= 11) {
+                                object.imageReceiver.setVisible(false, true);
+                            }
                         }
                     });
                     return true;
                 }
             });
         } else {
+            animationInProgress = 0;
+            containerView.invalidate();
+            AnimationSet animationSet = new AnimationSet(true);
+            AlphaAnimation animation = new AlphaAnimation(0.0f, 1.0f);
+            animation.setDuration(150);
+            animation.setFillAfter(false);
+            animationSet.addAnimation(animation);
+            ScaleAnimation scaleAnimation = new ScaleAnimation(0.9f, 1.0f, 0.9f, 1.0f, Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF, 0.5f);
+            scaleAnimation.setDuration(150);
+            scaleAnimation.setFillAfter(false);
+            animationSet.addAnimation(scaleAnimation);
+            animationSet.setDuration(150);
+            containerView.startAnimation(animationSet);
             disableShowCheck = false;
         }
     }
 
     public void closePhoto(boolean animated) {
-        if (parentActivity == null || !isVisible || animationInProgress) {
+        if (parentActivity == null || !isVisible || animationInProgress != 0) {
             return;
         }
 
@@ -1283,14 +1493,16 @@ public void closePhoto(boolean animated) {
             velocityTracker.recycle();
             velocityTracker = null;
         }
+        ConnectionsManager.getInstance().cancelRpcsForClassGuid(classGuid);
 
-        final PlaceProviderObject object = placeProvider.getPlaceForPhoto(currentMessageObject, currentFileLocation);
+        final PlaceProviderObject object = placeProvider.getPlaceForPhoto(currentMessageObject, currentFileLocation, currentIndex);
 
         if(android.os.Build.VERSION.SDK_INT >= 11 && animated) {
             Utilities.lockOrientation(parentActivity);
 
-            animationInProgress = true;
+            animationInProgress = 1;
             animatingImageView.setVisibility(View.VISIBLE);
+            containerView.invalidate();
 
             AnimatorSet animatorSet = new AnimatorSet();
 
@@ -1319,8 +1531,11 @@ public void closePhoto(boolean animated) {
             animatingImageView.setScaleY(scale * scale2);
 
             if (object != null) {
-                object.imageReceiver.setVisible(false, true);
+                if (android.os.Build.VERSION.SDK_INT >= 11) {
+                    object.imageReceiver.setVisible(false, true);
+                }
                 int clipHorizontal = Math.abs(object.imageReceiver.drawRegion.left - object.imageReceiver.imageX);
+                int clipVertical = Math.abs(object.imageReceiver.drawRegion.top - object.imageReceiver.imageY);
 
                 int coords2[] = new int[2];
                 object.parentView.getLocationInWindow(coords2);
@@ -1333,6 +1548,9 @@ public void closePhoto(boolean animated) {
                     clipBottom = 0;
                 }
 
+                clipTop = Math.max(clipTop, clipVertical);
+                clipBottom = Math.max(clipBottom, clipVertical);
+
                 animatorSet.playTogether(
                         ObjectAnimator.ofFloat(animatingImageView, "scaleX", 1),
                         ObjectAnimator.ofFloat(animatingImageView, "scaleY", 1),
@@ -1342,20 +1560,14 @@ public void closePhoto(boolean animated) {
                         ObjectAnimator.ofInt(animatingImageView, "clipHorizontal", clipHorizontal),
                         ObjectAnimator.ofInt(animatingImageView, "clipTop", clipTop),
                         ObjectAnimator.ofInt(animatingImageView, "clipBottom", clipBottom),
-                        ObjectAnimator.ofFloat(actionBar, "alpha", 0.0f),
-                        ObjectAnimator.ofFloat(bottomLayout, "alpha", 0.0f),
-                        ObjectAnimator.ofFloat(progressBar, "alpha", 0.0f),
-                        ObjectAnimator.ofFloat(currentOverlay, "alpha", 0.0f)
+                        ObjectAnimator.ofFloat(containerView, "alpha", 0.0f)
                 );
             } else {
                 animatorSet.playTogether(
                         ObjectAnimator.ofInt(backgroundDrawable, "alpha", 0),
-                        ObjectAnimator.ofFloat(actionBar, "alpha", 0.0f),
                         ObjectAnimator.ofFloat(animatingImageView, "alpha", 0.0f),
-                        ObjectAnimator.ofFloat(bottomLayout, "alpha", 0.0f),
-                        ObjectAnimator.ofFloat(progressBar, "alpha", 0.0f),
                         ObjectAnimator.ofFloat(animatingImageView, "translationY", translationY >= 0 ? Utilities.displaySize.y : -Utilities.displaySize.y),
-                        ObjectAnimator.ofFloat(currentOverlay, "alpha", 0.0f)
+                        ObjectAnimator.ofFloat(containerView, "alpha", 0.0f)
                 );
             }
 
@@ -1364,13 +1576,44 @@ public void closePhoto(boolean animated) {
                 @Override
                 public void onAnimationEnd(Animator animation) {
                     Utilities.unlockOrientation(parentActivity);
-                    animationInProgress = false;
+                    animationInProgress = 0;
                     onPhotoClosed(object);
                 }
             });
             animatorSet.start();
         } else {
-            onPhotoClosed(object);
+            AnimationSet animationSet = new AnimationSet(true);
+            AlphaAnimation animation = new AlphaAnimation(1.0f, 0.0f);
+            animation.setDuration(150);
+            animation.setFillAfter(false);
+            animationSet.addAnimation(animation);
+            ScaleAnimation scaleAnimation = new ScaleAnimation(1.0f, 0.9f, 1.0f, 0.9f, Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF, 0.5f);
+            scaleAnimation.setDuration(150);
+            scaleAnimation.setFillAfter(false);
+            animationSet.addAnimation(scaleAnimation);
+            animationSet.setDuration(150);
+            animationInProgress = 2;
+            animationSet.setAnimationListener(animationListener = new Animation.AnimationListener() {
+                @Override
+                public void onAnimationStart(Animation animation) {
+
+                }
+
+                @Override
+                public void onAnimationEnd(Animation animation) {
+                    if (animationListener != null) {
+                        animationInProgress = 0;
+                        onPhotoClosed(object);
+                        animationListener = null;
+                    }
+                }
+
+                @Override
+                public void onAnimationRepeat(Animation animation) {
+
+                }
+            });
+            containerView.startAnimation(animationSet);
         }
     }
 
@@ -1378,19 +1621,26 @@ private void onPhotoClosed(PlaceProviderObject object) {
         disableShowCheck = true;
         currentMessageObject = null;
         currentFileLocation = null;
+        currentPathObject = null;
         currentThumb = null;
         centerImage.setImageBitmap((Bitmap)null);
         leftImage.setImageBitmap((Bitmap) null);
         rightImage.setImageBitmap((Bitmap)null);
-        if (object != null) {
+        if (android.os.Build.VERSION.SDK_INT >= 11 && object != null) {
             object.imageReceiver.setVisible(true, true);
         }
         containerView.post(new Runnable() {
             @Override
             public void run() {
                 animatingImageView.setImageBitmap(null);
-                WindowManager wm = (WindowManager) parentActivity.getSystemService(Context.WINDOW_SERVICE);
-                wm.removeView(containerView);
+                try {
+                    WindowManager wm = (WindowManager) parentActivity.getSystemService(Context.WINDOW_SERVICE);
+                    if (windowView.getParent() != null) {
+                        wm.removeView(windowView);
+                    }
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e);
+                }
             }
         });
         if (placeProvider != null) {
@@ -1422,7 +1672,7 @@ private void updateMinMax(float scale) {
     }
 
     private boolean onTouchEvent(MotionEvent ev) {
-        if (animationInProgress || animationStartTime != 0) {
+        if (animationInProgress != 0 || animationStartTime != 0) {
             if (animationStartTime == 0) {
                 Utilities.unlockOrientation(parentActivity);
             }
@@ -1650,7 +1900,7 @@ private void animateTo(float newScale, float newTx, float newTy, boolean isZoom)
     }
 
     private void onDraw(Canvas canvas) {
-        if (animationInProgress || !isVisible) {
+        if (animationInProgress == 1 || !isVisible && animationInProgress != 2) {
             return;
         }
 
@@ -1777,17 +2027,37 @@ private void onDraw(Canvas canvas) {
         canvas.restore();
     }
 
+    @SuppressLint("DrawAllocation")
     private void onLayout(boolean changed, int left, int top, int right, int bottom) {
         if(changed) {
             scale = 1;
             translationX = 0;
             translationY = 0;
             updateMinMax(scale);
+
+            if (checkImageView != null) {
+                checkImageView.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener() {
+                    @Override
+                    public boolean onPreDraw() {
+                        checkImageView.getViewTreeObserver().removeOnPreDrawListener(this);
+                        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)checkImageView.getLayoutParams();
+                        WindowManager manager = (WindowManager)ApplicationLoader.applicationContext.getSystemService(Activity.WINDOW_SERVICE);
+                        int rotation = manager.getDefaultDisplay().getRotation();
+                        if (rotation == Surface.ROTATION_270 || rotation == Surface.ROTATION_90) {
+                            layoutParams.topMargin = Utilities.dp(48);
+                        } else {
+                            layoutParams.topMargin = Utilities.dp(58);
+                        }
+                        checkImageView.setLayoutParams(layoutParams);
+                        return false;
+                    }
+                });
+            }
         }
     }
 
     private void onActionClick(View view) {
-        if (currentMessageObject == null) {
+        if (currentMessageObject == null || currentFileName == null) {
             return;
         }
         boolean loadFile = false;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index 4818e1fa8..587fb768d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -128,15 +128,15 @@ public void didUploadedPhoto(TLRPC.InputFile file, TLRPC.PhotoSize small, TLRPC.
                     @Override
                     public void run(TLObject response, TLRPC.TL_error error) {
                         if (error == null) {
-                            TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.clientUserId);
+                            TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.getClientUserId());
                             if (user == null) {
-                                user = UserConfig.currentUser;
+                                user = UserConfig.getCurrentUser();
                                 if (user == null) {
                                     return;
                                 }
                                 MessagesController.getInstance().users.put(user.id, user);
                             } else {
-                                UserConfig.currentUser = user;
+                                UserConfig.setCurrentUser(user);
                             }
                             if (user == null) {
                                 return;
@@ -222,7 +222,8 @@ public void onFragmentDestroy() {
     @Override
     public View createView(LayoutInflater inflater, ViewGroup container) {
         if (fragmentView == null) {
-            actionBarLayer.setDisplayHomeAsUpEnabled(true);
+            actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
+            actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
             actionBarLayer.setTitle(LocaleController.getString("Settings", R.string.Settings));
             actionBarLayer.setActionBarMenuOnItemClick(new ActionBarLayer.ActionBarMenuOnItemClick() {
                 @Override
@@ -241,6 +242,9 @@ public void onItemClick(int id) {
                 @Override
                 public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {
                     if (i == textSizeRow) {
+                        if (getParentActivity() == null) {
+                            return;
+                        }
                         AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                         builder.setTitle(LocaleController.getString("TextSize", R.string.TextSize));
                         builder.setItems(new CharSequence[]{String.format("%d", 12), String.format("%d", 13), String.format("%d", 14), String.format("%d", 15), String.format("%d", 16), String.format("%d", 17), String.format("%d", 18), String.format("%d", 19), String.format("%d", 20), String.format("%d", 21), String.format("%d", 22), String.format("%d", 23), String.format("%d", 24)}, new DialogInterface.OnClickListener() {
@@ -274,6 +278,9 @@ public void onClick(DialogInterface dialog, int which) {
                     } else if (i == backgroundRow) {
                         presentFragment(new SettingsWallpapersActivity());
                     } else if (i == askQuestionRow) {
+                        if (getParentActivity() == null) {
+                            return;
+                        }
                         final TextView message = new TextView(getParentActivity());
                         message.setText(Html.fromHtml(LocaleController.getString("AskAQuestionInfo", R.string.AskAQuestionInfo)));
                         message.setTextSize(18);
@@ -304,6 +311,9 @@ public void onClick(DialogInterface dialogInterface, int i) {
                             listView.invalidateViews();
                         }
                     } else if (i == terminateSessionsRow) {
+                        if (getParentActivity() == null) {
+                            return;
+                        }
                         AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                         builder.setMessage(LocaleController.getString("AreYouSure", R.string.AreYouSure));
                         builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
@@ -313,16 +323,27 @@ public void onClick(DialogInterface dialogInterface, int i) {
                                 TLRPC.TL_auth_resetAuthorizations req = new TLRPC.TL_auth_resetAuthorizations();
                                 ConnectionsManager.getInstance().performRpc(req, new RPCRequest.RPCRequestDelegate() {
                                     @Override
-                                    public void run(TLObject response, TLRPC.TL_error error) {
-                                        if (error == null && response instanceof TLRPC.TL_boolTrue) {
-                                            Toast toast = Toast.makeText(getParentActivity(), R.string.TerminateAllSessions, Toast.LENGTH_SHORT);
-                                            toast.show();
-                                        } else {
-                                            Toast toast = Toast.makeText(getParentActivity(), R.string.UnknownError, Toast.LENGTH_SHORT);
-                                            toast.show();
-                                        }
+                                    public void run(final TLObject response, final TLRPC.TL_error error) {
+                                        Utilities.RunOnUIThread(new Runnable() {
+                                            @Override
+                                            public void run() {
+                                                if (getParentActivity() == null) {
+                                                    return;
+                                                }
+                                                if (error == null && response instanceof TLRPC.TL_boolTrue) {
+                                                    Toast toast = Toast.makeText(getParentActivity(), LocaleController.getString("TerminateAllSessions", R.string.TerminateAllSessions), Toast.LENGTH_SHORT);
+                                                    toast.show();
+                                                } else {
+                                                    Toast toast = Toast.makeText(getParentActivity(), LocaleController.getString("UnknownError", R.string.UnknownError), Toast.LENGTH_SHORT);
+                                                    toast.show();
+                                                }
+                                            }
+                                        });
                                         UserConfig.registeredForPush = false;
+                                        UserConfig.registeredForInternalPush = false;
+                                        UserConfig.saveConfig(false);
                                         MessagesController.getInstance().registerForPush(UserConfig.pushString);
+                                        ConnectionsManager.getInstance().initPushConnection();
                                     }
                                 }, null, true, RPCRequest.RPCRequestClassGeneric);
                             }
@@ -332,6 +353,9 @@ public void run(TLObject response, TLRPC.TL_error error) {
                     } else if (i == languageRow) {
                         presentFragment(new LanguageSelectActivity());
                     } else if (i == switchBackendButtonRow) {
+                        if (getParentActivity() == null) {
+                            return;
+                        }
                         AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                         builder.setMessage(LocaleController.getString("AreYouSure", R.string.AreYouSure));
                         builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
@@ -353,6 +377,9 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     } else if (i == contactsReimportRow) {
 
                     } else if (i == contactsSortRow) {
+                        if (getParentActivity() == null) {
+                            return;
+                        }
                         AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                         builder.setTitle(LocaleController.getString("SortBy", R.string.SortBy));
                         builder.setItems(new CharSequence[] {
@@ -374,6 +401,9 @@ public void onClick(DialogInterface dialog, int which) {
                         builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
                         showAlertDialog(builder);
                     } else if (i == photoDownloadChatRow || i == photoDownloadPrivateRow || i == audioDownloadChatRow || i == audioDownloadPrivateRow) {
+                        if (getParentActivity() == null) {
+                            return;
+                        }
                         AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                         builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
                         builder.setItems(new CharSequence[] {
@@ -424,11 +454,11 @@ public void onClick(DialogInterface dialog, int which) {
     }
 
     @Override
-    public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation) {
+    public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) {
         if (fileLocation == null) {
             return null;
         }
-        TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.clientUserId);
+        TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.getClientUserId());
         if (user != null && user.photo != null && user.photo.photo_big != null) {
             TLRPC.FileLocation photoBig = user.photo.photo_big;
             if (photoBig.local_id == fileLocation.local_id && photoBig.volume_id == fileLocation.volume_id && photoBig.dc_id == fileLocation.dc_id) {
@@ -444,7 +474,7 @@ public void onClick(DialogInterface dialog, int which) {
                         object.viewY = coords[1] - Utilities.statusBarHeight;
                         object.parentView = listView;
                         object.imageReceiver = avatarImage.imageReceiver;
-                        object.user_id = UserConfig.clientUserId;
+                        object.user_id = UserConfig.getClientUserId();
                         object.thumb = object.imageReceiver.getBitmap();
                         object.size = -1;
                         return object;
@@ -456,9 +486,25 @@ public void onClick(DialogInterface dialog, int which) {
     }
 
     @Override
-    public void willHidePhotoViewer() {
+    public void willSwitchFromPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) { }
 
-    }
+    @Override
+    public void willHidePhotoViewer() { }
+
+    @Override
+    public boolean isPhotoChecked(int index) { return false; }
+
+    @Override
+    public void setPhotoChecked(int index) { }
+
+    @Override
+    public void cancelButtonPressed() { }
+
+    @Override
+    public void sendButtonPressed(int index) { }
+
+    @Override
+    public int getSelectedCount() { return 0; }
 
     public void performAskAQuestion() {
         final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
@@ -661,13 +707,16 @@ public void onClick(View view) {
                     button2.setOnClickListener(new View.OnClickListener() {
                         @Override
                         public void onClick(View view) {
+                            if (getParentActivity() == null) {
+                                return;
+                            }
                             AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
 
                             CharSequence[] items;
 
-                            TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.clientUserId);
+                            TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.getClientUserId());
                             if (user == null) {
-                                user = UserConfig.currentUser;
+                                user = UserConfig.getCurrentUser();
                             }
                             if (user == null) {
                                 return;
@@ -685,7 +734,7 @@ public void onClick(View view) {
                                 @Override
                                 public void onClick(DialogInterface dialogInterface, int i) {
                                     if (i == 0 && full) {
-                                        TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.clientUserId);
+                                        TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.getClientUserId());
                                         if (user != null && user.photo != null && user.photo.photo_big != null) {
                                             PhotoViewer.getInstance().openPhoto(user.photo.photo_big, SettingsActivity.this);
                                         }
@@ -697,28 +746,28 @@ public void onClick(DialogInterface dialogInterface, int i) {
                                         TLRPC.TL_photos_updateProfilePhoto req = new TLRPC.TL_photos_updateProfilePhoto();
                                         req.id = new TLRPC.TL_inputPhotoEmpty();
                                         req.crop = new TLRPC.TL_inputPhotoCropAuto();
-                                        UserConfig.currentUser.photo = new TLRPC.TL_userProfilePhotoEmpty();
-                                        TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.clientUserId);
+                                        UserConfig.getCurrentUser().photo = new TLRPC.TL_userProfilePhotoEmpty();
+                                        TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.getClientUserId());
                                         if (user == null) {
-                                            user = UserConfig.currentUser;
+                                            user = UserConfig.getCurrentUser();
                                         }
                                         if (user == null) {
                                             return;
                                         }
                                         if (user != null) {
-                                            user.photo = UserConfig.currentUser.photo;
+                                            user.photo = UserConfig.getCurrentUser().photo;
                                         }
                                         NotificationCenter.getInstance().postNotificationName(MessagesController.updateInterfaces, MessagesController.UPDATE_MASK_ALL);
                                         ConnectionsManager.getInstance().performRpc(req, new RPCRequest.RPCRequestDelegate() {
                                             @Override
                                             public void run(TLObject response, TLRPC.TL_error error) {
                                                 if (error == null) {
-                                                    TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.clientUserId);
+                                                    TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.getClientUserId());
                                                     if (user == null) {
-                                                        user = UserConfig.currentUser;
+                                                        user = UserConfig.getCurrentUser();
                                                         MessagesController.getInstance().users.put(user.id, user);
                                                     } else {
-                                                        UserConfig.currentUser = user;
+                                                        UserConfig.setCurrentUser(user);
                                                     }
                                                     if (user == null) {
                                                         return;
@@ -751,9 +800,9 @@ public void run() {
                 textView = (TextView)view.findViewById(R.id.settings_name);
                 Typeface typeface = Utilities.getTypeface("fonts/rmedium.ttf");
                 textView.setTypeface(typeface);
-                TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.clientUserId);
+                TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.getClientUserId());
                 if (user == null) {
-                    user = UserConfig.currentUser;
+                    user = UserConfig.getCurrentUser();
                 }
                 if (user != null) {
                     textView.setText(Utilities.formatName(user.first_name, user.last_name));
@@ -798,7 +847,7 @@ public void run() {
                 TextView textView = (TextView)view.findViewById(R.id.settings_row_text);
                 View divider = view.findViewById(R.id.settings_row_divider);
                 if (i == numberRow) {
-                    TLRPC.User user = UserConfig.currentUser;
+                    TLRPC.User user = UserConfig.getCurrentUser();
                     if (user != null && user.phone != null && user.phone.length() != 0) {
                         textView.setText(PhoneFormat.getInstance().format("+" + user.phone));
                     } else {
@@ -893,6 +942,9 @@ public void run() {
                     textView.setOnClickListener(new View.OnClickListener() {
                         @Override
                         public void onClick(View view) {
+                            if (getParentActivity() == null) {
+                                return;
+                            }
                             AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                             builder.setMessage(LocaleController.getString("AreYouSure", R.string.AreYouSure));
                             builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
@@ -901,10 +953,10 @@ public void onClick(View view) {
                                 public void onClick(DialogInterface dialogInterface, int i) {
                                     NotificationCenter.getInstance().postNotificationName(1234);
                                     MessagesController.getInstance().unregistedPush();
+                                    MessagesController.getInstance().logOut();
+                                    UserConfig.clearConfig();
                                     MessagesStorage.getInstance().cleanUp();
                                     MessagesController.getInstance().cleanUp();
-                                    ConnectionsManager.getInstance().cleanUp();
-                                    UserConfig.clearConfig();
                                 }
                             });
                             builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsBlockedUsers.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsBlockedUsers.java
index ced697f97..3b250a4bb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsBlockedUsers.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsBlockedUsers.java
@@ -67,7 +67,8 @@ public void onFragmentDestroy() {
     @Override
     public View createView(LayoutInflater inflater, ViewGroup container) {
         if (fragmentView == null) {
-            actionBarLayer.setDisplayHomeAsUpEnabled(true);
+            actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
+            actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
             actionBarLayer.setTitle(LocaleController.getString("BlockedUsers", R.string.BlockedUsers));
             actionBarLayer.setActionBarMenuOnItemClick(new ActionBarLayer.ActionBarMenuOnItemClick() {
                 @Override
@@ -119,7 +120,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
             listView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
                 @Override
                 public boolean onItemLongClick(AdapterView<?> adapterView, View view, int i, long l) {
-                    if (i >= blockedContacts.size()) {
+                    if (i >= blockedContacts.size() || getParentActivity() == null) {
                         return true;
                     }
                     selectedUserId = blockedContacts.get(i).user_id;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsChangeNameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsChangeNameActivity.java
index e45734fc7..15b8578d0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsChangeNameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsChangeNameActivity.java
@@ -59,15 +59,15 @@ public void onClick(View view) {
                 }
             });
 
-            cancelButton.setText(LocaleController.getString("Cancel", R.string.Cancel));
+            cancelButton.setText(LocaleController.getString("Cancel", R.string.Cancel).toUpperCase());
             TextView textView = (TextView)doneButton.findViewById(R.id.done_button_text);
-            textView.setText(LocaleController.getString("Done", R.string.Done));
+            textView.setText(LocaleController.getString("Done", R.string.Done).toUpperCase());
 
             fragmentView = inflater.inflate(R.layout.settings_change_name_layout, container, false);
 
-            TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.clientUserId);
+            TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.getClientUserId());
             if (user == null) {
-                user = UserConfig.currentUser;
+                user = UserConfig.getCurrentUser();
             }
 
             firstNameField = (EditText)fragmentView.findViewById(R.id.first_name_field);
@@ -126,12 +126,12 @@ public void onResume() {
 
     private void saveName() {
         TLRPC.TL_account_updateProfile req = new TLRPC.TL_account_updateProfile();
-        if (UserConfig.currentUser == null || lastNameField.getText() == null || firstNameField.getText() == null) {
+        if (UserConfig.getCurrentUser() == null || lastNameField.getText() == null || firstNameField.getText() == null) {
             return;
         }
-        UserConfig.currentUser.first_name = req.first_name = firstNameField.getText().toString();
-        UserConfig.currentUser.last_name = req.last_name = lastNameField.getText().toString();
-        TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.clientUserId);
+        UserConfig.getCurrentUser().first_name = req.first_name = firstNameField.getText().toString();
+        UserConfig.getCurrentUser().last_name = req.last_name = lastNameField.getText().toString();
+        TLRPC.User user = MessagesController.getInstance().users.get(UserConfig.getClientUserId());
         if (user != null) {
             user.first_name = req.first_name;
             user.last_name = req.last_name;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
index 4acc174e6..35a1ee78f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
@@ -97,7 +97,8 @@ public boolean onFragmentCreate() {
     @Override
     public View createView(LayoutInflater inflater, ViewGroup container) {
         if (fragmentView == null) {
-            actionBarLayer.setDisplayHomeAsUpEnabled(true);
+            actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
+            actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
             actionBarLayer.setTitle(LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds));
             actionBarLayer.setActionBarMenuOnItemClick(new ActionBarLayer.ActionBarMenuOnItemClick() {
                 @Override
@@ -216,7 +217,7 @@ public void run() {
                                             listView.invalidateViews();
                                         }
                                         if (getParentActivity() != null) {
-                                            Toast toast = Toast.makeText(getParentActivity(), R.string.ResetNotificationsText, Toast.LENGTH_SHORT);
+                                            Toast toast = Toast.makeText(getParentActivity(), LocaleController.getString("ResetNotificationsText", R.string.ResetNotificationsText), Toast.LENGTH_SHORT);
                                             toast.show();
                                         }
                                     }
@@ -269,6 +270,9 @@ public void run() {
                             listView.invalidateViews();
                             ApplicationLoader.startPushService();
                         } else {
+                            if (getParentActivity() == null) {
+                                return;
+                            }
                             AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                             builder.setMessage(LocaleController.getString("NotificationsServiceDisableInfo", R.string.NotificationsServiceDisableInfo));
                             builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsWallpapersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsWallpapersActivity.java
index 29e48d807..c68f428ea 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsWallpapersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsWallpapersActivity.java
@@ -143,9 +143,9 @@ public void onClick(View view) {
                 }
             });
 
-            cancelButton.setText(LocaleController.getString("Cancel", R.string.Cancel));
+            cancelButton.setText(LocaleController.getString("Cancel", R.string.Cancel).toUpperCase());
             TextView textView = (TextView)doneButton.findViewById(R.id.done_button_text);
-            textView.setText(LocaleController.getString("Set", R.string.Set));
+            textView.setText(LocaleController.getString("Set", R.string.Set).toUpperCase());
 
             fragmentView = inflater.inflate(R.layout.settings_wallpapers_layout, container, false);
             listAdapter = new ListAdapter(getParentActivity());
@@ -158,6 +158,9 @@ public void onClick(View view) {
                 @Override
                 public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                     if (i == 0) {
+                        if (getParentActivity() == null) {
+                            return;
+                        }
                         AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
 
                         CharSequence[] items = new CharSequence[] {LocaleController.getString("FromCamera", R.string.FromCamera), LocaleController.getString("FromGalley", R.string.FromGalley), LocaleController.getString("Cancel", R.string.Cancel)};
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java
index 597f3e487..15e387b73 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java
@@ -134,7 +134,8 @@ private void updateRowsIds() {
     @Override
     public View createView(LayoutInflater inflater, ViewGroup container) {
         if (fragmentView == null) {
-            actionBarLayer.setDisplayHomeAsUpEnabled(true);
+            actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
+            actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
             if (dialog_id != 0) {
                 actionBarLayer.setTitle(LocaleController.getString("SecretTitle", R.string.SecretTitle));
                 actionBarLayer.setTitleIcon(R.drawable.ic_lock_white, Utilities.dp(4));
@@ -180,7 +181,7 @@ public void run(TLObject response, TLRPC.TL_error error) {
                         presentFragment(new ContactAddActivity(args));
                     } else if (id == delete_contact) {
                         final TLRPC.User user = MessagesController.getInstance().users.get(user_id);
-                        if (user == null) {
+                        if (user == null || getParentActivity() == null) {
                             return;
                         }
                         AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
@@ -212,6 +213,9 @@ public void onClick(DialogInterface dialogInterface, int i) {
             startSecretButton.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View view) {
+                    if (getParentActivity() == null) {
+                        return;
+                    }
                     AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                     builder.setMessage(LocaleController.getString("AreYouSure", R.string.AreYouSure));
                     builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
@@ -238,6 +242,9 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 @Override
                 public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {
                     if (i == settingsVibrateRow || i == settingsNotificationsRow) {
+                        if (getParentActivity() == null) {
+                            return;
+                        }
                         AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                         builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
                         builder.setItems(new CharSequence[] {
@@ -312,6 +319,9 @@ public void onClick(DialogInterface dialog, int which) {
                         args.putInt("chat_id", (int)(dialog_id >> 32));
                         presentFragment(new IdenticonActivity(args));
                     } else if (i == settingsTimerRow) {
+                        if (getParentActivity() == null) {
+                            return;
+                        }
                         AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                         builder.setTitle(LocaleController.getString("MessageLifetime", R.string.MessageLifetime));
                         builder.setItems(new CharSequence[]{
@@ -454,7 +464,7 @@ public void onResume() {
     }
 
     @Override
-    public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation) {
+    public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) {
         if (fileLocation == null) {
             return null;
         }
@@ -486,9 +496,25 @@ public void onResume() {
     }
 
     @Override
-    public void willHidePhotoViewer() {
+    public void willSwitchFromPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) { }
 
-    }
+    @Override
+    public void willHidePhotoViewer() { }
+
+    @Override
+    public boolean isPhotoChecked(int index) { return false; }
+
+    @Override
+    public void setPhotoChecked(int index) { }
+
+    @Override
+    public void cancelButtonPressed() { }
+
+    @Override
+    public void sendButtonPressed(int index) { }
+
+    @Override
+    public int getSelectedCount() { return 0; }
 
     private void createActionBarMenu() {
         ActionBarMenu menu = actionBarLayer.createMenu();
@@ -640,7 +666,7 @@ public void onClick(View view) {
                     view.setOnClickListener(new View.OnClickListener() {
                         @Override
                         public void onClick(View view) {
-                            if (user.phone == null || user.phone.length() == 0) {
+                            if (user.phone == null || user.phone.length() == 0 || getParentActivity() == null) {
                                 return;
                             }
                             selectedPhone = user.phone;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBar.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBar.java
index 13dc763ce..a2309d722 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBar.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBar.java
@@ -29,10 +29,8 @@
     private static Drawable logoDrawable;
     protected ActionBarLayer currentLayer = null;
     private ActionBarLayer previousLayer = null;
-    private View currentBackOverlay;
     private View shadowView = null;
-    private int currentBackOverlayWidth;
-    protected int itemsBackgroundResourceId;
+    private boolean isBackOverlayVisible;
 
     public ActionBar(Context context) {
         super(context);
@@ -88,42 +86,19 @@ public void setCurrentActionBarLayer(ActionBarLayer layer) {
         layoutParams.height = LayoutParams.MATCH_PARENT;
         layoutParams.gravity = Gravity.TOP | Gravity.LEFT;
         layer.setLayoutParams(layoutParams);
-        updateBackOverlay(MeasureSpec.makeMeasureSpec(getMeasuredWidth(), MeasureSpec.EXACTLY), MeasureSpec.makeMeasureSpec(getMeasuredHeight(), MeasureSpec.EXACTLY));
+        currentLayer.setBackOverlayVisible(isBackOverlayVisible);
         if(android.os.Build.VERSION.SDK_INT >= 11) {
             layer.setAlpha(1);
         }
     }
 
-    public void setBackOverlay(View view, int width) {
-        if (currentBackOverlay != null) {
-            removeView(currentBackOverlay);
-        }
-        if (view != null) {
-            addView(view);
-        }
-        currentBackOverlayWidth = width;
-        currentBackOverlay = view;
-        updateBackOverlay(MeasureSpec.makeMeasureSpec(getMeasuredWidth(), MeasureSpec.EXACTLY), MeasureSpec.makeMeasureSpec(getMeasuredHeight(), MeasureSpec.EXACTLY));
-    }
-
-    private void updateBackOverlay(int widthMeasureSpec, int heightMeasureSpec) {
+    public void setBackOverlayVisible(boolean visible) {
+        isBackOverlayVisible = visible;
         if (currentLayer != null) {
-            currentLayer.setBackLayoutVisible(currentLayer.isSearchFieldVisible || currentBackOverlay == null ? VISIBLE : INVISIBLE);
-        }
-        if (currentBackOverlay != null) {
-            ViewGroup.LayoutParams layoutParams = currentBackOverlay.getLayoutParams();
-            if (currentLayer != null) {
-                currentBackOverlay.setVisibility(currentLayer.isSearchFieldVisible ? GONE : VISIBLE);
-                currentLayer.measure(widthMeasureSpec, heightMeasureSpec);
-                layoutParams.width = Math.min(currentBackOverlayWidth, currentLayer.getBackLayoutWidth());
-            } else {
-                currentBackOverlay.setVisibility(VISIBLE);
-                layoutParams.width = LayoutParams.WRAP_CONTENT;
-            }
-            if (layoutParams.width != 0) {
-                layoutParams.height = LayoutParams.MATCH_PARENT;
-                currentBackOverlay.setLayoutParams(layoutParams);
-            }
+            currentLayer.setBackOverlayVisible(visible);
+        }
+        if (previousLayer != null) {
+            previousLayer.setBackOverlayVisible(visible);
         }
     }
 
@@ -143,6 +118,7 @@ public void prepareForMoving(ActionBarLayer layer) {
         layer.setLayoutParams(layoutParams);
         shadowView.setX(-Utilities.dp(2));
         shadowView.setVisibility(VISIBLE);
+        previousLayer.setBackOverlayVisible(isBackOverlayVisible);
     }
 
     public void stopMoving(boolean backAnimation) {
@@ -154,6 +130,7 @@ public void stopMoving(boolean backAnimation) {
             removeView(currentLayer);
             currentLayer = previousLayer;
             currentLayer.setAlpha(1);
+            previousLayer = null;
         } else {
             removeView(previousLayer);
             previousLayer = null;
@@ -193,7 +170,6 @@ public void setupAnimations(ArrayList<Animator> animators, boolean back) {
 
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        updateBackOverlay(widthMeasureSpec, heightMeasureSpec);
         if (getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {
             super.onMeasure(widthMeasureSpec, MeasureSpec.makeMeasureSpec(Utilities.dp(40), MeasureSpec.EXACTLY));
         } else {
@@ -206,8 +182,4 @@ public void onMenuButtonPressed() {
             currentLayer.onMenuButtonPressed();
         }
     }
-
-    public void setItemsBackground(int resourceId) {
-        itemsBackgroundResourceId = resourceId;
-    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarActivity.java
index 7ba3eccf6..a047a6e53 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarActivity.java
@@ -13,9 +13,11 @@
 import android.animation.ObjectAnimator;
 import android.app.Activity;
 import android.content.Context;
+import android.content.Intent;
 import android.content.res.Configuration;
 import android.os.Build;
 import android.os.Bundle;
+import android.os.Handler;
 import android.view.ActionMode;
 import android.view.Gravity;
 import android.view.KeyEvent;
@@ -24,6 +26,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.ViewTreeObserver;
+import android.view.Window;
 import android.view.WindowManager;
 import android.view.animation.Animation;
 import android.view.animation.AnimationUtils;
@@ -37,9 +40,21 @@
 
 public class ActionBarActivity extends Activity {
 
+    private class FrameLayoutAnimationListener extends FrameLayout {
+        public FrameLayoutAnimationListener(Context context) {
+            super(context);
+        }
+
+        @Override
+        protected void onAnimationEnd() {
+            super.onAnimationEnd();
+            ActionBarActivity.this.onAnimationEnd();
+        }
+    }
+
     protected ActionBar actionBar;
-    private FrameLayout containerView;
-    private FrameLayout containerViewBack;
+    private FrameLayoutAnimationListener containerView;
+    private FrameLayoutAnimationListener containerViewBack;
     protected FrameLayout contentView;
     private View shadowView;
 
@@ -56,6 +71,8 @@
     private long transitionAnimationStartTime;
     private boolean inActionMode = false;
     private int startedTrackingPointerId;
+    private Runnable onCloseAnimationEndRunnable = null;
+    private Runnable onOpenAnimationEndRunnable = null;
 
     private class FrameLayoutTouch extends FrameLayout {
         public FrameLayoutTouch(Context context) {
@@ -96,6 +113,7 @@ protected void onCreateFinish(Bundle savedInstanceState) {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        requestWindowFeature(Window.FEATURE_NO_TITLE);
 
         try {
             openAnimation = AnimationUtils.loadAnimation(this, R.anim.scale_in);
@@ -110,10 +128,10 @@ protected void onCreate(Bundle savedInstanceState) {
         contentView = new FrameLayoutTouch(this);
         setContentView(contentView, new ViewGroup.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT, FrameLayout.LayoutParams.MATCH_PARENT));
 
-        containerViewBack = new FrameLayout(this);
+        containerViewBack = new FrameLayoutAnimationListener(this);
         contentView.addView(containerViewBack);
 
-        containerView = new FrameLayout(this);
+        containerView = new FrameLayoutAnimationListener(this);
         contentView.addView(containerView);
 
         shadowView = new FrameLayout(this);
@@ -126,7 +144,6 @@ protected void onCreate(Bundle savedInstanceState) {
         shadowView.setVisibility(View.INVISIBLE);
 
         actionBar = new ActionBar(this);
-        actionBar.setItemsBackground(R.drawable.bar_selector);
         contentView.addView(actionBar);
         layoutParams = actionBar.getLayoutParams();
         layoutParams.width = FrameLayout.LayoutParams.MATCH_PARENT;
@@ -153,12 +170,20 @@ public void onConfigurationChanged(android.content.res.Configuration newConfig)
     protected void onResume() {
         super.onResume();
         fixLayout();
+        if (transitionAnimationInProgress) {
+            if (onCloseAnimationEndRunnable != null) {
+                closeAnimation.cancel();
+                onCloseAnimationEnd(false);
+            } else if (onOpenAnimationEndRunnable != null) {
+                openAnimation.cancel();
+                onOpenAnimationEnd(false);
+            }
+        }
         if (!fragmentsStack.isEmpty()) {
             BaseFragment lastFragment = fragmentsStack.get(fragmentsStack.size() - 1);
             lastFragment.onResume();
 
             actionBar.setCurrentActionBarLayer(lastFragment.actionBarLayer);
-            onShowFragment();
         }
     }
 
@@ -184,7 +209,7 @@ private void onSlideAnimationEnd(boolean backAnimation) {
             lastFragment.setParentActivity(null);
             fragmentsStack.remove(fragmentsStack.size() - 1);
 
-            FrameLayout temp = containerView;
+            FrameLayoutAnimationListener temp = containerView;
             containerView = containerViewBack;
             containerViewBack = temp;
             ViewGroup parent = (ViewGroup)containerView.getParent();
@@ -361,7 +386,7 @@ public void onBackPressed() {
                 onFinish();
                 finish();
             } else if (!fragmentsStack.isEmpty()) {
-                closeLastFragment();
+                closeLastFragment(true);
             }
         }
     }
@@ -377,6 +402,7 @@ public void onLowMemory() {
     public boolean checkTransitionAnimation() {
         if (transitionAnimationInProgress && transitionAnimationStartTime < System.currentTimeMillis() - 400) {
             transitionAnimationInProgress = false;
+            onAnimationEnd();
         }
         return transitionAnimationInProgress;
     }
@@ -434,7 +460,7 @@ public ActionBar getInternalActionBar() {
         return actionBar;
     }
 
-    private void presentFragmentInternalRemoveOld(boolean removeLast, BaseFragment fragment) {
+    private void presentFragmentInternalRemoveOld(boolean removeLast, final BaseFragment fragment) {
         if (fragment == null) {
             return;
         }
@@ -451,6 +477,7 @@ private void presentFragmentInternalRemoveOld(boolean removeLast, BaseFragment f
                 }
             }
         }
+        containerViewBack.setVisibility(View.GONE);
     }
 
     public boolean presentFragment(BaseFragment fragment) {
@@ -471,13 +498,10 @@ public boolean presentFragment(final BaseFragment fragment, final boolean remove
         boolean needAnimation = openAnimation != null && !forceWithoutAnimation && getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).getBoolean("view_animations", true);
 
         final BaseFragment currentFragment = !fragmentsStack.isEmpty() ? fragmentsStack.get(fragmentsStack.size() - 1) : null;
-        if (!needAnimation) {
-            presentFragmentInternalRemoveOld(removeLast, currentFragment);
-        }
 
         fragment.setParentActivity(this);
         View fragmentView = fragment.createView(getLayoutInflater(), null);
-        containerView.addView(fragmentView);
+        containerViewBack.addView(fragmentView);
         ViewGroup.LayoutParams layoutParams = fragmentView.getLayoutParams();
         layoutParams.width = FrameLayout.LayoutParams.MATCH_PARENT;
         layoutParams.height = FrameLayout.LayoutParams.MATCH_PARENT;
@@ -488,31 +512,31 @@ public boolean presentFragment(final BaseFragment fragment, final boolean remove
         if (fragmentView.getBackground() == null) {
             fragmentView.setBackgroundColor(0xffffffff);
         }
-        onShowFragment();
+
+        FrameLayoutAnimationListener temp = containerView;
+        containerView = containerViewBack;
+        containerViewBack = temp;
+        containerView.setVisibility(View.VISIBLE);
+        ViewGroup parent = (ViewGroup)containerView.getParent();
+        parent.removeView(containerView);
+        parent.addView(containerView, 1);
+
+        if (!needAnimation) {
+            presentFragmentInternalRemoveOld(removeLast, currentFragment);
+        }
+
         if (needAnimation) {
             transitionAnimationStartTime = System.currentTimeMillis();
             transitionAnimationInProgress = true;
-            openAnimation.reset();
-            openAnimation.setAnimationListener(new Animation.AnimationListener() {
+            onOpenAnimationEndRunnable = new Runnable() {
                 @Override
-                public void onAnimationStart(Animation animation) {
-
-                }
-
-                @Override
-                public void onAnimationEnd(Animation animation) {
-                    transitionAnimationInProgress = false;
-                    transitionAnimationStartTime = 0;
-                    fragment.onOpenAnimationEnd();
+                public void run() {
                     presentFragmentInternalRemoveOld(removeLast, currentFragment);
+                    fragment.onOpenAnimationEnd();
                 }
-
-                @Override
-                public void onAnimationRepeat(Animation animation) {
-
-                }
-            });
-            fragmentView.startAnimation(openAnimation);
+            };
+            openAnimation.reset();
+            containerView.startAnimation(openAnimation);
         } else {
             fragment.onOpenAnimationEnd();
         }
@@ -533,25 +557,31 @@ private void closeLastFragmentInternalRemoveOld(BaseFragment fragment) {
         fragment.onFragmentDestroy();
         fragment.setParentActivity(null);
         fragmentsStack.remove(fragment);
+        containerViewBack.setVisibility(View.GONE);
+        ViewGroup parent = (ViewGroup)containerView.getParent();
+        parent.removeView(containerViewBack);
+        parent.addView(containerViewBack, 0);
     }
 
-    public void closeLastFragment() {
+    public void closeLastFragment(boolean animated) {
         if (fragmentsStack.size() <= 1 || checkTransitionAnimation()) {
             return;
         }
         if (getCurrentFocus() != null) {
             Utilities.hideKeyboard(getCurrentFocus());
         }
-        boolean needAnimation = openAnimation != null && getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).getBoolean("view_animations", true);
+        boolean needAnimation = animated && closeAnimation != null && getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).getBoolean("view_animations", true);
         final BaseFragment currentFragment = fragmentsStack.get(fragmentsStack.size() - 1);
         BaseFragment previousFragment = fragmentsStack.get(fragmentsStack.size() - 2);
-        if (!needAnimation) {
-            closeLastFragmentInternalRemoveOld(currentFragment);
-        }
+
+        FrameLayoutAnimationListener temp = containerView;
+        containerView = containerViewBack;
+        containerViewBack = temp;
+        containerView.setVisibility(View.VISIBLE);
 
         previousFragment.setParentActivity(this);
         View fragmentView = previousFragment.createView(getLayoutInflater(), null);
-        containerView.addView(fragmentView, 0);
+        containerView.addView(fragmentView);
         ViewGroup.LayoutParams layoutParams = fragmentView.getLayoutParams();
         layoutParams.width = FrameLayout.LayoutParams.MATCH_PARENT;
         layoutParams.height = FrameLayout.LayoutParams.MATCH_PARENT;
@@ -561,30 +591,22 @@ public void closeLastFragment() {
         if (fragmentView.getBackground() == null) {
             fragmentView.setBackgroundColor(0xffffffff);
         }
-        onShowFragment();
+
+        if (!needAnimation) {
+            closeLastFragmentInternalRemoveOld(currentFragment);
+        }
+
         if (needAnimation) {
             transitionAnimationStartTime = System.currentTimeMillis();
             transitionAnimationInProgress = true;
             closeAnimation.reset();
-            closeAnimation.setAnimationListener(new Animation.AnimationListener() {
-                @Override
-                public void onAnimationStart(Animation animation) {
-
-                }
-
+            onCloseAnimationEndRunnable = new Runnable() {
                 @Override
-                public void onAnimationEnd(Animation animation) {
-                    transitionAnimationInProgress = false;
-                    transitionAnimationStartTime = 0;
+                public void run() {
                     closeLastFragmentInternalRemoveOld(currentFragment);
                 }
-
-                @Override
-                public void onAnimationRepeat(Animation animation) {
-
-                }
-            });
-            currentFragment.fragmentView.startAnimation(closeAnimation);
+            };
+            containerViewBack.startAnimation(closeAnimation);
         }
     }
 
@@ -602,7 +624,6 @@ public void showLastFragment() {
         if (fragmentView.getBackground() == null) {
             fragmentView.setBackgroundColor(0xffffffff);
         }
-        onShowFragment();
     }
 
     public void removeFragmentFromStack(BaseFragment fragment) {
@@ -622,10 +643,6 @@ protected void onFinish() {
 
     }
 
-    protected void onShowFragment() {
-
-    }
-
     public void showActionBar() {
         actionBar.setVisibility(View.VISIBLE);
         needLayout();
@@ -644,6 +661,10 @@ public boolean onKeyUp(int keyCode, KeyEvent event) {
         return super.onKeyUp(keyCode, event);
     }
 
+    public void onOverlayShow(View view, BaseFragment fragment) {
+
+    }
+
     @Override
     public void onActionModeStarted(ActionMode mode) {
         super.onActionModeStarted(mode);
@@ -661,4 +682,74 @@ public void onActionModeFinished(ActionMode mode) {
     public boolean onPreIme() {
         return false;
     }
+
+    private void onCloseAnimationEnd(boolean post) {
+        if (transitionAnimationInProgress && onCloseAnimationEndRunnable != null) {
+            transitionAnimationInProgress = false;
+            transitionAnimationStartTime = 0;
+            if (post) {
+                new Handler().post(new Runnable() {
+                    public void run() {
+                        onCloseAnimationEndRunnable.run();
+                        onCloseAnimationEndRunnable = null;
+                    }
+                });
+            } else {
+                onCloseAnimationEndRunnable.run();
+                onCloseAnimationEndRunnable = null;
+            }
+        }
+    }
+
+    private void onOpenAnimationEnd(boolean post) {
+        if (transitionAnimationInProgress && onOpenAnimationEndRunnable != null) {
+            transitionAnimationInProgress = false;
+            transitionAnimationStartTime = 0;
+            if (post) {
+                new Handler().post(new Runnable() {
+                    public void run() {
+                        onOpenAnimationEndRunnable.run();
+                        onOpenAnimationEndRunnable = null;
+                    }
+                });
+            } else {
+                onOpenAnimationEndRunnable.run();
+                onOpenAnimationEndRunnable = null;
+            }
+        }
+    }
+
+    private void onAnimationEnd() {
+        onCloseAnimationEnd(false);
+        onOpenAnimationEnd(false);
+    }
+
+    @Override
+    public void startActivityForResult(final Intent intent, final int requestCode) {
+        if (transitionAnimationInProgress) {
+            if (onCloseAnimationEndRunnable != null) {
+                closeAnimation.cancel();
+                onCloseAnimationEnd(false);
+            } else if (onOpenAnimationEndRunnable != null) {
+                openAnimation.cancel();
+                onOpenAnimationEnd(false);
+            }
+            containerView.invalidate();
+            if (intent != null) {
+                try {
+                    ActionBarActivity.super.startActivityForResult(intent, requestCode);
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e);
+                }
+            }
+        } else {
+            if (intent != null) {
+                try {
+                    super.startActivityForResult(intent, requestCode);
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e);
+                }
+            }
+        }
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarLayer.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarLayer.java
index 7f22c6c7b..0a210714e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarLayer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarLayer.java
@@ -43,11 +43,16 @@ public boolean canOpenMenu() {
     private TextView subTitleTextView;
     private ActionBarMenu menu;
     private ActionBarMenu actionMode;
+    private int logoResourceId;
+    private int backResourceId;
     protected ActionBar parentActionBar;
     private boolean oldUseLogo;
     private boolean oldUseBack;
-    private boolean isBackLayoutHidden = false;
+    private View actionOverlay;
     protected boolean isSearchFieldVisible;
+    protected int itemsBackgroundResourceId;
+    private boolean isBackOverlayVisible;
+    protected BaseFragment parentFragment;
     public ActionBarMenuOnItemClick actionBarMenuOnItemClick;
 
     public ActionBarLayer(Context context, ActionBar actionBar) {
@@ -60,7 +65,6 @@ public ActionBarLayer(Context context, ActionBar actionBar) {
         layoutParams.height = LayoutParams.FILL_PARENT;
         layoutParams.gravity = Gravity.TOP | Gravity.LEFT;
         backButtonFrameLayout.setLayoutParams(layoutParams);
-        backButtonFrameLayout.setBackgroundResource(actionBar.itemsBackgroundResourceId);
         backButtonFrameLayout.setPadding(0, 0, Utilities.dp(4), 0);
         backButtonFrameLayout.setOnClickListener(new OnClickListener() {
             @Override
@@ -207,28 +211,31 @@ public void positionMenu(int width, int height) {
         menu.measure(width, height);
     }
 
-    public void setDisplayUseLogoEnabled(boolean value) {
+    public void setDisplayUseLogoEnabled(boolean value, int resource) {
         if (value && logoImageView == null) {
+            logoResourceId = resource;
             logoImageView = new ImageView(getContext());
             logoImageView.setScaleType(ImageView.ScaleType.CENTER_INSIDE);
-            logoImageView.setImageResource(R.drawable.ic_ab_logo);
             backButtonFrameLayout.addView(logoImageView);
-            positionLogoImage(getMeasuredHeight());
-        } else if (logoImageView != null) {
+        }
+        if (logoImageView != null) {
             logoImageView.setVisibility(value ? VISIBLE : GONE);
+            logoImageView.setImageResource(resource);
+            positionLogoImage(getMeasuredHeight());
         }
     }
 
-    public void setDisplayHomeAsUpEnabled(boolean value) {
+    public void setDisplayHomeAsUpEnabled(boolean value, int resource) {
         if (value && backButtonImageView == null) {
+            backResourceId = resource;
             backButtonImageView = new ImageView(getContext());
-            backButtonImageView.setImageResource(R.drawable.ic_ab_back);
             backButtonFrameLayout.addView(backButtonImageView);
-            positionBackImage(getMeasuredHeight());
         }
         if (backButtonImageView != null) {
             backButtonImageView.setVisibility(value ? VISIBLE : GONE);
             backButtonFrameLayout.setEnabled(value);
+            backButtonImageView.setImageResource(resource);
+            positionBackImage(getMeasuredHeight());
         }
     }
 
@@ -335,18 +342,6 @@ public void setCustomView(int resourceId) {
         addView(view);
     }
 
-    public void setBackLayoutVisible(int visibility) {
-        isBackLayoutHidden = visibility != VISIBLE;
-        backButtonFrameLayout.setVisibility(isSearchFieldVisible ? VISIBLE : visibility);
-    }
-
-    public int getBackLayoutWidth() {
-        if (menu != null) {
-            return getMeasuredWidth() - menu.getMeasuredWidth();
-        }
-        return getMeasuredWidth();
-    }
-
     public ActionBarMenu createActionMode() {
         if (actionMode != null) {
             return actionMode;
@@ -404,22 +399,17 @@ protected void onSearchFieldVisibilityChanged(boolean visible) {
         backButtonFrameLayout.setPadding(0, 0, visible ? 0 : Utilities.dp(4), 0);
         if (visible) {
             oldUseLogo = logoImageView != null && logoImageView.getVisibility() == VISIBLE;
-            setDisplayUseLogoEnabled(true);
+            setDisplayUseLogoEnabled(true, R.drawable.ic_ab_search);
         } else {
-            setDisplayUseLogoEnabled(oldUseLogo);
+            setDisplayUseLogoEnabled(oldUseLogo, logoResourceId);
         }
         if (visible) {
             oldUseBack = backButtonImageView != null && backButtonImageView.getVisibility() == VISIBLE;
-            setDisplayHomeAsUpEnabled(true);
-        } else {
-            setDisplayHomeAsUpEnabled(oldUseBack);
-        }
-        if (visible) {
-            backButtonFrameLayout.setVisibility(VISIBLE);
+            setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
         } else {
-            backButtonFrameLayout.setVisibility(isBackLayoutHidden ? INVISIBLE : VISIBLE);
+            setDisplayHomeAsUpEnabled(oldUseBack, backResourceId);
         }
-        logoImageView.setImageResource(visible ? R.drawable.ic_ab_search : R.drawable.ic_ab_logo);
+        positionBackOverlay(getMeasuredWidth(), getMeasuredHeight());
     }
 
     public void closeSearchField() {
@@ -435,6 +425,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         positionBackImage(MeasureSpec.getSize(heightMeasureSpec));
         positionMenu(MeasureSpec.getSize(widthMeasureSpec), MeasureSpec.getSize(heightMeasureSpec));
         positionTitle(MeasureSpec.getSize(widthMeasureSpec), MeasureSpec.getSize(heightMeasureSpec));
+        positionBackOverlay(MeasureSpec.getSize(widthMeasureSpec), MeasureSpec.getSize(heightMeasureSpec));
         super.onMeasure(widthMeasureSpec, heightMeasureSpec);
     }
 
@@ -459,4 +450,52 @@ protected void onPause() {
             menu.hideAllPopupMenus();
         }
     }
+
+    public void setBackOverlay(int resourceId) {
+        LayoutInflater li = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+        actionOverlay = li.inflate(resourceId, null);
+        addView(actionOverlay);
+        actionOverlay.setVisibility(GONE);
+        actionOverlay.setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if (actionBarMenuOnItemClick != null) {
+                    actionBarMenuOnItemClick.onItemClick(-1);
+                }
+            }
+        });
+    }
+
+    public void setBackOverlayVisible(boolean visible) {
+        if (actionOverlay == null) {
+            return;
+        }
+        isBackOverlayVisible = visible;
+        positionBackOverlay(getMeasuredWidth(), getMeasuredHeight());
+        if (visible) {
+            ((ActionBarActivity)getContext()).onOverlayShow(actionOverlay, parentFragment);
+        }
+    }
+
+    private void positionBackOverlay(int widthMeasureSpec, int heightMeasureSpec) {
+        if (actionOverlay == null) {
+            return;
+        }
+        backButtonFrameLayout.setVisibility(isSearchFieldVisible || actionOverlay == null || actionOverlay.getVisibility() == GONE ? VISIBLE : INVISIBLE);
+        actionOverlay.setVisibility(!isSearchFieldVisible && isBackOverlayVisible ? VISIBLE : GONE);
+        if (actionOverlay.getVisibility() == VISIBLE) {
+            ViewGroup.LayoutParams layoutParams = actionOverlay.getLayoutParams();
+            layoutParams.width = LayoutParams.WRAP_CONTENT;
+            layoutParams.height = LayoutParams.MATCH_PARENT;
+            actionOverlay.setLayoutParams(layoutParams);
+            actionOverlay.measure(widthMeasureSpec, heightMeasureSpec);
+            layoutParams.width = Math.min(actionOverlay.getMeasuredWidth() + Utilities.dp(4), widthMeasureSpec - (menu != null ? menu.getMeasuredWidth() : 0));
+            actionOverlay.setLayoutParams(layoutParams);
+        }
+    }
+
+    public void setItemsBackground(int resourceId) {
+        itemsBackgroundResourceId = resourceId;
+        backButtonFrameLayout.setBackgroundResource(itemsBackgroundResourceId);
+    }
 }
\ No newline at end of file
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarMenu.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarMenu.java
index 87abb9c2d..823eb704b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarMenu.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarMenu.java
@@ -49,7 +49,7 @@ public View addItemResource(int id, int resourceId) {
         addView(view);
         LinearLayout.LayoutParams layoutParams = (LinearLayout.LayoutParams)view.getLayoutParams();
         layoutParams.height = FrameLayout.LayoutParams.FILL_PARENT;
-        view.setBackgroundResource(parentActionBar.itemsBackgroundResourceId);
+        view.setBackgroundResource(parentActionBarLayer.itemsBackgroundResourceId);
         view.setLayoutParams(layoutParams);
         view.setOnClickListener(new OnClickListener() {
             @Override
@@ -61,7 +61,7 @@ public void onClick(View view) {
     }
 
     public ActionBarMenuItem addItem(int id, int icon) {
-        ActionBarMenuItem menuItem = new ActionBarMenuItem(getContext(), this, parentActionBar);
+        ActionBarMenuItem menuItem = new ActionBarMenuItem(getContext(), this, parentActionBar, parentActionBarLayer.itemsBackgroundResourceId);
         menuItem.setTag(id);
         menuItem.setScaleType(ImageView.ScaleType.CENTER);
         menuItem.setImageResource(icon);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarMenuItem.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarMenuItem.java
index 5d244836a..33b977b7a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarMenuItem.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarMenuItem.java
@@ -46,9 +46,9 @@
     private boolean isSearchField = false;
     private ActionBarMenuItemSearchListener listener;
 
-    public ActionBarMenuItem(Context context, ActionBarMenu menu, ActionBar actionBar) {
+    public ActionBarMenuItem(Context context, ActionBarMenu menu, ActionBar actionBar, int background) {
         super(context);
-        setBackgroundResource(actionBar.itemsBackgroundResourceId);
+        setBackgroundResource(background);
         parentMenu = menu;
         parentActionBar = actionBar;
     }
@@ -121,13 +121,14 @@ public void toggleSubMenu() {
         }
         if (popupWindow == null) {
             popupWindow = new ActionBarPopupWindow(popupLayout, FrameLayout.LayoutParams.WRAP_CONTENT, FrameLayout.LayoutParams.WRAP_CONTENT);
-            popupWindow.setFocusable(true);
             popupWindow.setBackgroundDrawable(new BitmapDrawable());
             popupWindow.setOutsideTouchable(true);
             popupWindow.setClippingEnabled(true);
             popupWindow.setInputMethodMode(ActionBarPopupWindow.INPUT_METHOD_NOT_NEEDED);
             popupWindow.setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_UNSPECIFIED);
+            popupLayout.measure(MeasureSpec.makeMeasureSpec(Utilities.dp(1000), MeasureSpec.AT_MOST), MeasureSpec.makeMeasureSpec(Utilities.dp(1000), MeasureSpec.AT_MOST));
         }
+        popupWindow.setFocusable(true);
         if (popupLayout.getMeasuredWidth() == 0) {
             popupWindow.showAsDropDown(this, parentActionBar.getMeasuredWidth() - popupLayout.getMeasuredWidth() - getLeft() - parentMenu.getLeft(), 0);
             popupWindow.update(this, parentActionBar.getMeasuredWidth() - popupLayout.getMeasuredWidth() - getLeft() - parentMenu.getLeft(), 0, -1, -1);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarPopupWindow.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarPopupWindow.java
index a011316d1..d9ce0163b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarPopupWindow.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarPopupWindow.java
@@ -152,6 +152,7 @@ public void showAtLocation(View parent, int gravity, int x, int y) {
 
     @Override
     public void dismiss() {
+        setFocusable(false);
         super.dismiss();
         unregisterListener();
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/BaseFragment.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/BaseFragment.java
index 456e5dba6..2082c2e52 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/BaseFragment.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/BaseFragment.java
@@ -61,16 +61,22 @@ public void setParentActivity(ActionBarActivity activity) {
                     actionBarLayer.onDestroy();
                 }
                 actionBarLayer = parentActivity.getInternalActionBar().createLayer();
+                actionBarLayer.parentFragment = this;
                 actionBarLayer.setBackgroundResource(R.color.header);
+                actionBarLayer.setItemsBackground(R.drawable.bar_selector);
             }
         }
     }
 
     public void finishFragment() {
+        finishFragment(true);
+    }
+
+    public void finishFragment(boolean animated) {
         if (isFinished || parentActivity == null) {
             return;
         }
-        parentActivity.closeLastFragment();
+        parentActivity.closeLastFragment(animated);
     }
 
     public void removeSelfFromStack() {
@@ -194,9 +200,13 @@ protected void showAlertDialog(AlertDialog.Builder builder) {
         if (parentActivity == null || parentActivity.checkTransitionAnimation() || parentActivity.animationInProgress || parentActivity.startedTracking) {
             return;
         }
-        if (visibleDialog != null && visibleDialog.isShowing()) {
-            visibleDialog.dismiss();
-            visibleDialog = null;
+        try {
+            if (visibleDialog != null) {
+                visibleDialog.dismiss();
+                visibleDialog = null;
+            }
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
         }
         visibleDialog = builder.show();
         visibleDialog.setCanceledOnTouchOutside(true);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/BackupImageView.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/BackupImageView.java
index a16a5dabc..598b4e501 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/BackupImageView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/BackupImageView.java
@@ -41,7 +41,7 @@ public BackupImageView(Context context, AttributeSet attrs, int defStyleAttr) {
 
     private void init() {
         imageReceiver = new ImageReceiver();
-        imageReceiver.parentView = new WeakReference<View>(this);
+        imageReceiver.parentView = this;
     }
 
     public void setImage(TLRPC.FileLocation path, String filter, int placeholder) {
@@ -98,31 +98,4 @@ protected void onDraw(Canvas canvas) {
         imageReceiver.imageH = getHeight();
         imageReceiver.draw(canvas, 0, 0, imageReceiver.imageW, imageReceiver.imageH);
     }
-
-    /*
-
-    public void setImageResourceMy(int resId) {
-        if (ignoreLayout) {
-            makeRequest = false;
-        }
-        super.setImageResource(resId);
-        if (ignoreLayout) {
-            makeRequest = true;
-        }
-    }
-
-
-
-    public void setImageBitmapMy(Bitmap bitmap) {
-        if (ignoreLayout) {
-            makeRequest = false;
-        }
-        super.setImageBitmap(bitmap);
-        if (ignoreLayout) {
-            makeRequest = true;
-        }
-    }
-
-    @Override
-    */
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/EmojiView.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/EmojiView.java
index b1cb7f009..f1cd9a09b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/EmojiView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/EmojiView.java
@@ -100,62 +100,58 @@ private String convert(long paramLong) {
     }
 
     private void init() {
-        setOrientation(1);
-        for (int i = 0; ; i++) {
-            if (i >= Emoji.data.length) {
-                setBackgroundDrawable(new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM, new int[] { 0xFF606060, 0xFFD0D0D0 }));
-                pager = new ViewPager(getContext());
-                pager.setAdapter(new EmojiPagesAdapter());
-                PagerSlidingTabStrip tabs = new PagerSlidingTabStrip(getContext());
-                tabs.setViewPager(this.pager);
-                tabs.setShouldExpand(true);
-                tabs.setIndicatorColor(0xff33b5e5);
-                tabs.setIndicatorHeight(Utilities.dpf(2.0f));
-                tabs.setUnderlineHeight(Utilities.dpf(2.0f));
-                tabs.setUnderlineColor(1711276032);
-                tabs.setTabBackground(0);
-                LinearLayout localLinearLayout = new LinearLayout(getContext());
-                localLinearLayout.setOrientation(0);
-                localLinearLayout.addView(tabs, new LinearLayout.LayoutParams(-1, -1, 1.0F));
-                ImageView localImageView = new ImageView(getContext());
-                localImageView.setImageResource(R.drawable.ic_emoji_backspace);
-                localImageView.setScaleType(ImageView.ScaleType.CENTER);
-                localImageView.setBackgroundResource(R.drawable.bg_emoji_bs);
-                localImageView.setOnClickListener(new View.OnClickListener() {
-                    public void onClick(View paramAnonymousView) {
-                        if (EmojiView.this.listener != null) {
-                            EmojiView.this.listener.onBackspace();
-                        }
-                    }
-                });
-                localImageView.setOnLongClickListener(new View.OnLongClickListener() {
-                    public boolean onLongClick(View paramAnonymousView) {
-                        EmojiView.this.getContext().getSharedPreferences("emoji", 0).edit().clear().commit();
-                        return true;
-                    }
-                });
-                localLinearLayout.addView(localImageView, new LinearLayout.LayoutParams(Utilities.dpf(61.0f), -1));
-                this.recentsWrap = new FrameLayout(getContext());
-                this.recentsWrap.addView(this.views.get(0));
-                TextView localTextView = new TextView(getContext());
-                localTextView.setText(LocaleController.getString("NoRecent", R.string.NoRecent));
-                localTextView.setTextSize(18.0f);
-                localTextView.setTextColor(-7829368);
-                localTextView.setGravity(17);
-                this.recentsWrap.addView(localTextView);
-                this.views.get(0).setEmptyView(localTextView);
-                addView(localLinearLayout, new LinearLayout.LayoutParams(-1, Utilities.dpf(48.0f)));
-                addView(this.pager);
-                loadRecents();
-                return;
-            }
-            GridView localGridView = new GridView(getContext());
-            localGridView.setColumnWidth(Utilities.dpf(45.0f));
-            localGridView.setNumColumns(-1);
+        setOrientation(LinearLayout.VERTICAL);
+        for (int i = 0; i < Emoji.data.length; i++) {
+            GridView gridView = new GridView(getContext());
+            gridView.setColumnWidth(Utilities.dpf(45.0f));
+            gridView.setNumColumns(-1);
+            views.add(gridView);
+
             EmojiGridAdapter localEmojiGridAdapter = new EmojiGridAdapter(Emoji.data[i]);
-            localGridView.setAdapter(localEmojiGridAdapter);
-            this.adapters.add(localEmojiGridAdapter);
-            this.views.add(localGridView);
+            gridView.setAdapter(localEmojiGridAdapter);
+            adapters.add(localEmojiGridAdapter);
+        }
+
+        setBackgroundDrawable(new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM, new int[] { -14145496, -16777216 }));
+        pager = new ViewPager(getContext());
+        pager.setAdapter(new EmojiPagesAdapter());
+        PagerSlidingTabStrip tabs = new PagerSlidingTabStrip(getContext());
+        tabs.setViewPager(pager);
+        tabs.setShouldExpand(true);
+        tabs.setIndicatorColor(0xff33b5e5);
+        tabs.setIndicatorHeight(Utilities.dpf(2.0f));
+        tabs.setUnderlineHeight(Utilities.dpf(2.0f));
+        tabs.setUnderlineColor(1711276032);
+        tabs.setTabBackground(0);
+        LinearLayout localLinearLayout = new LinearLayout(getContext());
+        localLinearLayout.setOrientation(LinearLayout.HORIZONTAL);
+        localLinearLayout.addView(tabs, new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT, 1.0f));
+        ImageView localImageView = new ImageView(getContext());
+        localImageView.setImageResource(R.drawable.ic_emoji_backspace);
+        localImageView.setScaleType(ImageView.ScaleType.CENTER);
+        localImageView.setBackgroundResource(R.drawable.bg_emoji_bs);
+        localImageView.setOnClickListener(new View.OnClickListener() {
+            public void onClick(View view) {
+                if (EmojiView.this.listener != null) {
+                    EmojiView.this.listener.onBackspace();
+                }
+            }
+        });
+        localLinearLayout.addView(localImageView, new LinearLayout.LayoutParams(Utilities.dpf(61.0f), LayoutParams.MATCH_PARENT));
+        recentsWrap = new FrameLayout(getContext());
+        recentsWrap.addView(views.get(0));
+        TextView localTextView = new TextView(getContext());
+        localTextView.setText(LocaleController.getString("NoRecent", R.string.NoRecent));
+        localTextView.setTextSize(18.0f);
+        localTextView.setTextColor(-7829368);
+        localTextView.setGravity(17);
+        recentsWrap.addView(localTextView);
+        views.get(0).setEmptyView(localTextView);
+        addView(localLinearLayout, new LinearLayout.LayoutParams(-1, Utilities.dpf(48.0f)));
+        addView(pager);
+        loadRecents();
+        if (Emoji.data[0] == null || Emoji.data[0].length == 0) {
+            pager.setCurrentItem(1);
         }
     }
 
@@ -236,11 +232,11 @@ public void onMeasure(int paramAnonymousInt1, int paramAnonymousInt2) {
                     }
                 };
                 localObject.setOnClickListener(new View.OnClickListener() {
-                    public void onClick(View paramAnonymousView) {
+                    public void onClick(View view) {
                         if (EmojiView.this.listener != null) {
-                            EmojiView.this.listener.onEmojiSelected(EmojiView.this.convert((Long)paramAnonymousView.getTag()));
+                            EmojiView.this.listener.onEmojiSelected(EmojiView.this.convert((Long)view.getTag()));
                         }
-                        EmojiView.this.addToRecent((Long)paramAnonymousView.getTag());
+                        EmojiView.this.addToRecent((Long)view.getTag());
                     }
                 });
                 localObject.setBackgroundResource(R.drawable.list_selector);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/ImageReceiver.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/ImageReceiver.java
index 625466633..77b73196f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/ImageReceiver.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/ImageReceiver.java
@@ -21,8 +21,6 @@
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.Utilities;
 
-import java.lang.ref.WeakReference;
-
 public class ImageReceiver {
     private TLRPC.FileLocation last_path = null;
     private String last_httpUrl = null;
@@ -33,7 +31,7 @@
     private boolean isPlaceholder = false;
     private Drawable currentImage = null;
     public Integer TAG = null;
-    public WeakReference<View> parentView = null;
+    public View parentView = null;
     public int imageX = 0, imageY = 0, imageW = 0, imageH = 0;
     public Rect drawRegion = new Rect();
     private boolean isVisible = true;
@@ -94,10 +92,16 @@ public void setImage(TLRPC.FileLocation path, String httpUrl, String filter, Dra
         if (img == null) {
             isPlaceholder = true;
             FileLoader.getInstance().loadImage(path, httpUrl, this, filter, true, size);
+            if (parentView != null) {
+                parentView.invalidate();
+            }
         } else {
             selfSetting = true;
             setImageBitmap(img, currentPath);
             selfSetting = false;
+            if (parentView != null) {
+                parentView.invalidate();
+            }
         }
     }
 
@@ -108,12 +112,8 @@ public void setImageBitmap(Bitmap bitmap, String imgKey) {
         isPlaceholder = false;
         FileLoader.getInstance().incrementUseCount(currentPath);
         currentImage = new BitmapDrawable(null, bitmap);
-        if (!selfSetting && parentView != null && parentView.get() != null) {
-            if (imageW != 0) {
-                parentView.get().invalidate(imageX, imageY, imageX + imageW, imageY + imageH);
-            } else {
-                parentView.get().invalidate();
-            }
+        if (!selfSetting && parentView != null) {
+            parentView.invalidate();
         }
     }
 
@@ -246,11 +246,8 @@ public void setVisible(boolean value, boolean invalidate) {
             return;
         }
         isVisible = value;
-        if (invalidate) {
-            View parent = parentView.get();
-            if (parent != null) {
-                parent.invalidate();
-            }
+        if (invalidate && parentView != null) {
+            parentView.invalidate();
         }
     }
 
@@ -259,6 +256,6 @@ public boolean getVisible() {
     }
 
     public boolean hasImage() {
-        return currentImage != null || last_placeholder != null || currentPath != null;
+        return currentImage != null || last_placeholder != null || currentPath != null || last_httpUrl != null;
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/PinnedHeaderListView.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/PinnedHeaderListView.java
index f4c272852..6d31c0b40 100755
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/PinnedHeaderListView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/PinnedHeaderListView.java
@@ -17,6 +17,8 @@
 import android.widget.*;
 import android.widget.AbsListView.OnScrollListener;
 
+import org.telegram.messenger.FileLog;
+
 public class PinnedHeaderListView extends ListView implements OnScrollListener, View.OnTouchListener {
 
     private OnScrollListener mOnScrollListener;
@@ -69,6 +71,9 @@ public void setPinHeaders(boolean shouldPin) {
 
     @Override
     public void setAdapter(ListAdapter adapter) {
+        if (mAdapter == adapter) {
+            return;
+        }
         mCurrentHeader = null;
         if (adapter instanceof PinnedSectionedHeaderAdapter) {
             mAdapter = (PinnedSectionedHeaderAdapter) adapter;
@@ -80,14 +85,14 @@ public void setAdapter(ListAdapter adapter) {
 
     @Override
     public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {
-        if (mAdapter == null) {
-            return;
-        }
         if (mOnScrollListener != null) {
             mOnScrollListener.onScroll(view, firstVisibleItem, visibleItemCount, totalItemCount);
         }
+        if (mAdapter == null) {
+            return;
+        }
 
-        if (mAdapter == null || mAdapter.getCount() == 0 || !mShouldPin || (firstVisibleItem < getHeaderViewsCount())) {
+        if (mAdapter.getCount() == 0 || !mShouldPin || (firstVisibleItem < getHeaderViewsCount())) {
             mCurrentHeader = null;
             mHeaderOffset = 0.0f;
             for (int i = firstVisibleItem; i < firstVisibleItem + visibleItemCount; i++) {
@@ -131,9 +136,6 @@ public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCoun
 
     @Override
     public void onScrollStateChanged(AbsListView view, int scrollState) {
-        if (mAdapter == null) {
-            return;
-        }
         if (mOnScrollListener != null) {
             mOnScrollListener.onScrollStateChanged(view, scrollState);
         }
@@ -173,7 +175,11 @@ private void ensurePinnedHeaderLayout(View header, boolean forceLayout) {
             } else {
                 heightSpec = MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED);
             }
-            header.measure(widthSpec, heightSpec);
+            try {
+                header.measure(widthSpec, heightSpec);
+            } catch (Exception e) {
+                FileLog.e("tmessages", e);
+            }
             header.layout(0, 0, header.getMeasuredWidth(), header.getMeasuredHeight());
         }
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/SizeNotifierRelativeLayout.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/SizeNotifierRelativeLayout.java
index a2b81dd2f..13b594bd9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/SizeNotifierRelativeLayout.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/SizeNotifierRelativeLayout.java
@@ -9,8 +9,9 @@
 package org.telegram.ui.Views;
 
 import android.content.Context;
+import android.graphics.Canvas;
 import android.graphics.Rect;
-import android.util.Log;
+import android.graphics.drawable.Drawable;
 import android.widget.RelativeLayout;
 
 import org.telegram.messenger.Utilities;
@@ -18,6 +19,7 @@
 public class SizeNotifierRelativeLayout extends RelativeLayout {
 
     private Rect rect = new Rect();
+    private Drawable backgroundDrawable;
     public SizeNotifierRelativeLayoutDelegate delegate;
 
     public abstract interface SizeNotifierRelativeLayoutDelegate {
@@ -36,6 +38,14 @@ public SizeNotifierRelativeLayout(android.content.Context context, android.util.
         super(context, attrs, defStyle);
     }
 
+    public void setBackgroundImage(int resourceId) {
+        backgroundDrawable = getResources().getDrawable(resourceId);
+    }
+
+    public void setBackgroundImage(Drawable bitmap) {
+        backgroundDrawable = bitmap;
+    }
+
     @Override
     protected void onLayout(boolean changed, int l, int t, int r, int b) {
         super.onLayout(changed, l, t, r, b);
@@ -46,4 +56,19 @@ protected void onLayout(boolean changed, int l, int t, int r, int b) {
             delegate.onSizeChanged(keyboardHeight);
         }
     }
+
+    @Override
+    protected void onDraw(Canvas canvas) {
+        if (backgroundDrawable != null) {
+            float scaleX = (float)Utilities.displaySize.x / (float)backgroundDrawable.getIntrinsicWidth();
+            float scaleY = (float)Utilities.displaySize.y / (float)backgroundDrawable.getIntrinsicHeight();
+            float scale = scaleX < scaleY ? scaleY : scaleX;
+            int width = (int)Math.ceil(backgroundDrawable.getIntrinsicWidth() * scale);
+            int height = (int)Math.ceil(backgroundDrawable.getIntrinsicHeight() * scale);
+            int x = (Utilities.displaySize.x - width) / 2;
+            int y = (Utilities.displaySize.y - height) / 2;
+            backgroundDrawable.setBounds(x, y, x + width, y + height);
+            backgroundDrawable.draw(canvas);
+        }
+    }
 }
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/gallery.png b/TMessagesProj/src/main/res/drawable-hdpi/gallery.png
new file mode 100755
index 000000000..6bd0cda83
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/gallery.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/ic_ab_other_white2.png b/TMessagesProj/src/main/res/drawable-hdpi/ic_ab_other_white2.png
new file mode 100755
index 000000000..936d968c3
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/ic_ab_other_white2.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/nophotos.9.png b/TMessagesProj/src/main/res/drawable-hdpi/nophotos.9.png
new file mode 100644
index 000000000..27c40f747
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/nophotos.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/photo_back.png b/TMessagesProj/src/main/res/drawable-hdpi/photo_back.png
new file mode 100755
index 000000000..c9eb0018d
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/photo_back.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/photobadge.9.png b/TMessagesProj/src/main/res/drawable-hdpi/photobadge.9.png
new file mode 100644
index 000000000..e6d9b2289
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/photobadge.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/photoborder.9.png b/TMessagesProj/src/main/res/drawable-hdpi/photoborder.9.png
new file mode 100644
index 000000000..3eb03a164
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/photoborder.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/selectphoto_large.png b/TMessagesProj/src/main/res/drawable-hdpi/selectphoto_large.png
new file mode 100755
index 000000000..e718ed06b
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/selectphoto_large.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/selectphoto_small.png b/TMessagesProj/src/main/res/drawable-hdpi/selectphoto_small.png
new file mode 100755
index 000000000..7a023ec07
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/selectphoto_small.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/selectphoto_small_active.png b/TMessagesProj/src/main/res/drawable-hdpi/selectphoto_small_active.png
new file mode 100755
index 000000000..7a023ec07
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/selectphoto_small_active.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/selectphoto_small_grey.png b/TMessagesProj/src/main/res/drawable-hdpi/selectphoto_small_grey.png
new file mode 100755
index 000000000..6cf4bcda9
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/selectphoto_small_grey.png differ
diff --git a/TMessagesProj/src/main/res/drawable-ldpi/gallery.png b/TMessagesProj/src/main/res/drawable-ldpi/gallery.png
new file mode 100755
index 000000000..08b2617e0
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-ldpi/gallery.png differ
diff --git a/TMessagesProj/src/main/res/drawable-ldpi/ic_ab_other_white2.png b/TMessagesProj/src/main/res/drawable-ldpi/ic_ab_other_white2.png
new file mode 100755
index 000000000..9ff5bd3e7
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-ldpi/ic_ab_other_white2.png differ
diff --git a/TMessagesProj/src/main/res/drawable-ldpi/nophotos.9.png b/TMessagesProj/src/main/res/drawable-ldpi/nophotos.9.png
new file mode 100644
index 000000000..05a2c8199
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-ldpi/nophotos.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-ldpi/photo_back.png b/TMessagesProj/src/main/res/drawable-ldpi/photo_back.png
new file mode 100755
index 000000000..14f9ad5e8
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-ldpi/photo_back.png differ
diff --git a/TMessagesProj/src/main/res/drawable-ldpi/photobadge.9.png b/TMessagesProj/src/main/res/drawable-ldpi/photobadge.9.png
new file mode 100644
index 000000000..0173130bd
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-ldpi/photobadge.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-ldpi/photoborder.9.png b/TMessagesProj/src/main/res/drawable-ldpi/photoborder.9.png
new file mode 100644
index 000000000..2a33e9d66
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-ldpi/photoborder.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-ldpi/selectphoto_large.png b/TMessagesProj/src/main/res/drawable-ldpi/selectphoto_large.png
new file mode 100755
index 000000000..c0558b25f
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-ldpi/selectphoto_large.png differ
diff --git a/TMessagesProj/src/main/res/drawable-ldpi/selectphoto_small.png b/TMessagesProj/src/main/res/drawable-ldpi/selectphoto_small.png
new file mode 100755
index 000000000..fb868f484
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-ldpi/selectphoto_small.png differ
diff --git a/TMessagesProj/src/main/res/drawable-ldpi/selectphoto_small_active.png b/TMessagesProj/src/main/res/drawable-ldpi/selectphoto_small_active.png
new file mode 100755
index 000000000..1b18412d6
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-ldpi/selectphoto_small_active.png differ
diff --git a/TMessagesProj/src/main/res/drawable-ldpi/selectphoto_small_grey.png b/TMessagesProj/src/main/res/drawable-ldpi/selectphoto_small_grey.png
new file mode 100755
index 000000000..c31d5db9d
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-ldpi/selectphoto_small_grey.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/gallery.png b/TMessagesProj/src/main/res/drawable-mdpi/gallery.png
new file mode 100755
index 000000000..4eef8a0a9
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/gallery.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/ic_ab_other_white2.png b/TMessagesProj/src/main/res/drawable-mdpi/ic_ab_other_white2.png
new file mode 100755
index 000000000..23433a4b8
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/ic_ab_other_white2.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/nophotos.9.png b/TMessagesProj/src/main/res/drawable-mdpi/nophotos.9.png
new file mode 100644
index 000000000..30f05e378
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/nophotos.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/photo_back.png b/TMessagesProj/src/main/res/drawable-mdpi/photo_back.png
new file mode 100755
index 000000000..22a1fe263
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/photo_back.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/photobadge.9.png b/TMessagesProj/src/main/res/drawable-mdpi/photobadge.9.png
new file mode 100644
index 000000000..9a2e146fb
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/photobadge.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/photoborder.9.png b/TMessagesProj/src/main/res/drawable-mdpi/photoborder.9.png
new file mode 100644
index 000000000..75b581198
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/photoborder.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/selectphoto_large.png b/TMessagesProj/src/main/res/drawable-mdpi/selectphoto_large.png
new file mode 100755
index 000000000..f8799c402
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/selectphoto_large.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/selectphoto_small.png b/TMessagesProj/src/main/res/drawable-mdpi/selectphoto_small.png
new file mode 100755
index 000000000..051f23a6f
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/selectphoto_small.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/selectphoto_small_active.png b/TMessagesProj/src/main/res/drawable-mdpi/selectphoto_small_active.png
new file mode 100755
index 000000000..051f23a6f
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/selectphoto_small_active.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/selectphoto_small_grey.png b/TMessagesProj/src/main/res/drawable-mdpi/selectphoto_small_grey.png
new file mode 100755
index 000000000..0dcf76705
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/selectphoto_small_grey.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/gallery.png b/TMessagesProj/src/main/res/drawable-xhdpi/gallery.png
new file mode 100755
index 000000000..3d14800a8
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/gallery.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/ic_ab_other_white2.png b/TMessagesProj/src/main/res/drawable-xhdpi/ic_ab_other_white2.png
new file mode 100755
index 000000000..8a5215911
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/ic_ab_other_white2.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/nophotos.9.png b/TMessagesProj/src/main/res/drawable-xhdpi/nophotos.9.png
new file mode 100644
index 000000000..3d70646b3
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/nophotos.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/photo_back.png b/TMessagesProj/src/main/res/drawable-xhdpi/photo_back.png
new file mode 100755
index 000000000..21dcdebe2
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/photo_back.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/photobadge.9.png b/TMessagesProj/src/main/res/drawable-xhdpi/photobadge.9.png
new file mode 100644
index 000000000..7d778da73
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/photobadge.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/photoborder.9.png b/TMessagesProj/src/main/res/drawable-xhdpi/photoborder.9.png
new file mode 100644
index 000000000..77ba09d40
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/photoborder.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/selectphoto_large.png b/TMessagesProj/src/main/res/drawable-xhdpi/selectphoto_large.png
new file mode 100755
index 000000000..090543233
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/selectphoto_large.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/selectphoto_small.png b/TMessagesProj/src/main/res/drawable-xhdpi/selectphoto_small.png
new file mode 100755
index 000000000..5b817801c
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/selectphoto_small.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/selectphoto_small_active.png b/TMessagesProj/src/main/res/drawable-xhdpi/selectphoto_small_active.png
new file mode 100755
index 000000000..95d818a44
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/selectphoto_small_active.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/selectphoto_small_grey.png b/TMessagesProj/src/main/res/drawable-xhdpi/selectphoto_small_grey.png
new file mode 100755
index 000000000..598676b91
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/selectphoto_small_grey.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/gallery.png b/TMessagesProj/src/main/res/drawable-xxhdpi/gallery.png
new file mode 100755
index 000000000..516f851e8
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/gallery.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_ab_other_white2.png b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_ab_other_white2.png
new file mode 100755
index 000000000..d259309d6
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_ab_other_white2.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/nophotos.9.png b/TMessagesProj/src/main/res/drawable-xxhdpi/nophotos.9.png
new file mode 100644
index 000000000..123b71b56
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/nophotos.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/photo_back.png b/TMessagesProj/src/main/res/drawable-xxhdpi/photo_back.png
new file mode 100755
index 000000000..83b69df05
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/photo_back.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/photobadge.9.png b/TMessagesProj/src/main/res/drawable-xxhdpi/photobadge.9.png
new file mode 100644
index 000000000..3e4f234a2
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/photobadge.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/photoborder.9.png b/TMessagesProj/src/main/res/drawable-xxhdpi/photoborder.9.png
new file mode 100644
index 000000000..b46d44547
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/photoborder.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/selectphoto_large.png b/TMessagesProj/src/main/res/drawable-xxhdpi/selectphoto_large.png
new file mode 100755
index 000000000..d22cfb8ff
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/selectphoto_large.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/selectphoto_small.png b/TMessagesProj/src/main/res/drawable-xxhdpi/selectphoto_small.png
new file mode 100755
index 000000000..7620f457e
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/selectphoto_small.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/selectphoto_small_active.png b/TMessagesProj/src/main/res/drawable-xxhdpi/selectphoto_small_active.png
new file mode 100755
index 000000000..11ac540b6
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/selectphoto_small_active.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/selectphoto_small_grey.png b/TMessagesProj/src/main/res/drawable-xxhdpi/selectphoto_small_grey.png
new file mode 100755
index 000000000..935604b4d
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/selectphoto_small_grey.png differ
diff --git a/TMessagesProj/src/main/res/drawable/bar_selector_picker.xml b/TMessagesProj/src/main/res/drawable/bar_selector_picker.xml
new file mode 100644
index 000000000..3a705f195
--- /dev/null
+++ b/TMessagesProj/src/main/res/drawable/bar_selector_picker.xml
@@ -0,0 +1,27 @@
+<!--
+  ~ This is the source code of Telegram for Android v. 1.4.x.
+  ~ It is licensed under GNU GPL v. 2 or later.
+  ~ You should have received a copy of the license in this archive (see LICENSE).
+  ~
+  ~ Copyright Nikolai Kudashov, 2013-2014.
+  -->
+
+<selector
+    xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_pressed="true">
+        <shape android:shape="rectangle">
+            <solid android:color="#ff3d3d3d" />
+        </shape>
+    </item>
+    <item android:state_focused="true">
+        <shape android:shape="rectangle">
+            <solid android:color="#ff3d3d3d" />
+        </shape>
+    </item>
+    <item android:state_selected="true">
+        <shape android:shape="rectangle">
+            <solid android:color="#ff3d3d3d" />
+        </shape>
+    </item>
+    <item android:drawable="@drawable/transparent" />
+</selector>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout-ar/document_item.xml b/TMessagesProj/src/main/res/layout-ar/document_item.xml
index d83e00d30..96d3d776e 100644
--- a/TMessagesProj/src/main/res/layout-ar/document_item.xml
+++ b/TMessagesProj/src/main/res/layout-ar/document_item.xml
@@ -69,7 +69,6 @@
         android:id="@+id/docs_item_thumb"
         android:layout_width="55dp"
         android:layout_height="42dp"
-        android:scaleType="centerCrop"
         android:layout_marginTop="11dp"
         android:layout_gravity="top|right"/>
 
diff --git a/TMessagesProj/src/main/res/layout-ar/group_create_final_layout.xml b/TMessagesProj/src/main/res/layout-ar/group_create_final_layout.xml
index bfc162130..aea3bd3b2 100644
--- a/TMessagesProj/src/main/res/layout-ar/group_create_final_layout.xml
+++ b/TMessagesProj/src/main/res/layout-ar/group_create_final_layout.xml
@@ -21,8 +21,7 @@
             <org.telegram.ui.Views.BackupImageView
                 android:id="@+id/settings_avatar_image"
                 android:layout_width="fill_parent"
-                android:layout_height="fill_parent"
-                android:src="@drawable/group_blue"/>
+                android:layout_height="fill_parent"/>
 
             <ImageButton
                 android:id="@+id/settings_change_avatar_button"
diff --git a/TMessagesProj/src/main/res/layout-ar/group_create_row_layout.xml b/TMessagesProj/src/main/res/layout-ar/group_create_row_layout.xml
index d2eaad58c..3505f73aa 100644
--- a/TMessagesProj/src/main/res/layout-ar/group_create_row_layout.xml
+++ b/TMessagesProj/src/main/res/layout-ar/group_create_row_layout.xml
@@ -10,7 +10,6 @@
         android:layout_width="50dp"
         android:layout_height="50dp"
         android:id="@+id/messages_list_row_avatar"
-        android:contentDescription=""
         android:layout_marginTop="8dp"
         android:layout_gravity="top|right"/>
 
diff --git a/TMessagesProj/src/main/res/layout-ar/location_view_layout.xml b/TMessagesProj/src/main/res/layout-ar/location_view_layout.xml
index 97a2be17c..68445322f 100644
--- a/TMessagesProj/src/main/res/layout-ar/location_view_layout.xml
+++ b/TMessagesProj/src/main/res/layout-ar/location_view_layout.xml
@@ -22,7 +22,6 @@
         <org.telegram.ui.Views.BackupImageView
             android:layout_width="64dp"
             android:layout_height="64dp"
-            android:contentDescription=""
             android:id="@+id/location_avatar_view"
             android:layout_marginRight="12dp"
             android:layout_marginTop="16dp"
diff --git a/TMessagesProj/src/main/res/layout-ar/notification_layout.xml b/TMessagesProj/src/main/res/layout-ar/notification_layout.xml
index 71df49163..5b1d7ca66 100644
--- a/TMessagesProj/src/main/res/layout-ar/notification_layout.xml
+++ b/TMessagesProj/src/main/res/layout-ar/notification_layout.xml
@@ -5,17 +5,20 @@
     android:id="@+id/container_view"
     android:orientation="vertical">
 
-    <FrameLayout android:layout_width="fill_parent"
+    <FrameLayout
+        android:layout_width="fill_parent"
         android:layout_height="0dp"
         android:layout_weight="1"
         android:background="#ffffff">
 
-        <org.telegram.ui.Views.BackupImageView android:layout_height="48dp"
+        <org.telegram.ui.Views.BackupImageView
+            android:layout_height="48dp"
             android:layout_width="48dp"
             android:id="@+id/avatar_image"
             android:layout_gravity="right|top"/>
 
-        <FrameLayout android:layout_width="fill_parent"
+        <FrameLayout
+            android:layout_width="fill_parent"
             android:layout_height="fill_parent"
             android:layout_marginLeft="40dp"
             android:orientation="vertical"
@@ -23,7 +26,8 @@
             android:layout_gravity="top|right"
             android:id="@+id/text_layout">
 
-            <TextView android:layout_height="wrap_content"
+            <TextView
+                android:layout_height="wrap_content"
                 android:layout_width="wrap_content"
                 android:gravity="right|center"
                 android:textSize="15dp"
@@ -34,7 +38,8 @@
                 android:layout_gravity="top|right"
                 android:singleLine="true"/>
 
-            <TextView android:layout_height="wrap_content"
+            <TextView
+                android:layout_height="wrap_content"
                 android:layout_width="wrap_content"
                 android:gravity="right|center"
                 android:textColor="#000000"
@@ -47,7 +52,8 @@
 
         </FrameLayout>
 
-        <ImageView android:layout_height="40dp"
+        <ImageView
+            android:layout_height="40dp"
             android:layout_width="40dp"
             android:layout_gravity="left|center"
             android:src="@drawable/ic_profile_cross"
diff --git a/TMessagesProj/src/main/res/layout/chat_action_change_photo_layout.xml b/TMessagesProj/src/main/res/layout/chat_action_change_photo_layout.xml
index 500e7b768..73b62564b 100644
--- a/TMessagesProj/src/main/res/layout/chat_action_change_photo_layout.xml
+++ b/TMessagesProj/src/main/res/layout/chat_action_change_photo_layout.xml
@@ -37,7 +37,6 @@
         android:layout_width="64dp"
         android:layout_height="64dp"
         android:layout_marginTop="5dp"
-        android:scaleType="fitCenter"
         android:id="@+id/chat_photo_image"/>
 
 </LinearLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/chat_group_incoming_contact_layout.xml b/TMessagesProj/src/main/res/layout/chat_group_incoming_contact_layout.xml
index f86882572..0445491b5 100644
--- a/TMessagesProj/src/main/res/layout/chat_group_incoming_contact_layout.xml
+++ b/TMessagesProj/src/main/res/layout/chat_group_incoming_contact_layout.xml
@@ -14,7 +14,6 @@
         android:layout_height="42dp"
         android:layout_marginLeft="6dp"
         android:id="@+id/chat_group_avatar_image"
-        android:scaleType="fitCenter"
         android:layout_marginBottom="2dp"
         android:layout_marginRight="4dp"
         android:layout_gravity="bottom"/>
@@ -34,7 +33,8 @@
             android:id="@+id/shared_layout"
             android:layout_weight="1">
 
-            <org.telegram.ui.Views.BackupImageView android:layout_height="42dp"
+            <org.telegram.ui.Views.BackupImageView
+                android:layout_height="42dp"
                 android:layout_width="42dp"
                 android:id="@+id/contact_avatar"/>
 
diff --git a/TMessagesProj/src/main/res/layout/chat_group_incoming_document_layout.xml b/TMessagesProj/src/main/res/layout/chat_group_incoming_document_layout.xml
index 27931020e..85bf92b61 100644
--- a/TMessagesProj/src/main/res/layout/chat_group_incoming_document_layout.xml
+++ b/TMessagesProj/src/main/res/layout/chat_group_incoming_document_layout.xml
@@ -13,7 +13,6 @@
         android:layout_height="42dp"
         android:layout_marginLeft="6dp"
         android:id="@+id/chat_group_avatar_image"
-        android:scaleType="fitCenter"
         android:layout_marginBottom="2dp"
         android:layout_marginRight="4dp"
         android:layout_gravity="bottom"/>
@@ -38,8 +37,6 @@
                 android:layout_width="42dp"
                 android:layout_height="42dp"
                 android:background="#40b7c9d7"
-                android:src="@drawable/doc_blue"
-                android:scaleType="center"
                 android:id="@+id/contact_avatar"/>
 
             <org.telegram.ui.Views.TightTextView
diff --git a/TMessagesProj/src/main/res/layout/chat_group_incoming_location_layout.xml b/TMessagesProj/src/main/res/layout/chat_group_incoming_location_layout.xml
index 75f035410..d10dbcf43 100644
--- a/TMessagesProj/src/main/res/layout/chat_group_incoming_location_layout.xml
+++ b/TMessagesProj/src/main/res/layout/chat_group_incoming_location_layout.xml
@@ -14,7 +14,6 @@
         android:layout_height="42dp"
         android:layout_marginLeft="6dp"
         android:id="@+id/chat_group_avatar_image"
-        android:scaleType="fitCenter"
         android:layout_marginBottom="2dp"
         android:layout_gravity="bottom"/>
 
@@ -31,7 +30,6 @@
             android:layout_width="100dp"
             android:layout_margin="6dp"
             android:layout_gravity="top"
-            android:scaleType="centerCrop"
             android:id="@+id/chat_photo_image"/>
 
         <LinearLayout
diff --git a/TMessagesProj/src/main/res/layout/chat_header_layout.xml b/TMessagesProj/src/main/res/layout/chat_header_layout.xml
index 8fb0b2f79..35e9b977d 100644
--- a/TMessagesProj/src/main/res/layout/chat_header_layout.xml
+++ b/TMessagesProj/src/main/res/layout/chat_header_layout.xml
@@ -1,9 +1,10 @@
 <?xml version="1.0" encoding="utf-8"?>
 
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_alignParentRight="true">
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:layout_alignParentRight="true">
 
     <org.telegram.ui.Views.BackupImageView
             android:layout_height="48dp"
diff --git a/TMessagesProj/src/main/res/layout/chat_incoming_contact_layout.xml b/TMessagesProj/src/main/res/layout/chat_incoming_contact_layout.xml
index 946a2649c..d7643a8a3 100644
--- a/TMessagesProj/src/main/res/layout/chat_incoming_contact_layout.xml
+++ b/TMessagesProj/src/main/res/layout/chat_incoming_contact_layout.xml
@@ -21,7 +21,8 @@
             android:id="@+id/shared_layout"
             android:layout_weight="1">
 
-            <org.telegram.ui.Views.BackupImageView android:layout_height="42dp"
+            <org.telegram.ui.Views.BackupImageView
+                android:layout_height="42dp"
                 android:layout_width="42dp"
                 android:id="@+id/contact_avatar"/>
 
@@ -57,18 +58,21 @@
         </FrameLayout>
 
 
-        <FrameLayout android:layout_width="wrap_content"
+        <FrameLayout
+            android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:layout_marginLeft="8dp"
             android:layout_gravity="top"
             android:id="@+id/add_contact_view">
 
-            <FrameLayout android:layout_height="54dp"
+            <FrameLayout
+                android:layout_height="54dp"
                 android:layout_width="1dp"
                 android:background="#e8e8e8"
                 android:paddingRight="8dp"/>
 
-            <ImageView android:layout_width="38dp"
+            <ImageView
+                android:layout_width="38dp"
                 android:layout_height="54dp"
                 android:src="@drawable/ic_ab_add_member"
                 android:scaleType="center"
@@ -79,4 +83,5 @@
         </FrameLayout>
 
     </LinearLayout>
+
 </FrameLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/chat_incoming_document_layout.xml b/TMessagesProj/src/main/res/layout/chat_incoming_document_layout.xml
index 5946e62d1..eb562cf14 100644
--- a/TMessagesProj/src/main/res/layout/chat_incoming_document_layout.xml
+++ b/TMessagesProj/src/main/res/layout/chat_incoming_document_layout.xml
@@ -29,7 +29,6 @@
                 android:layout_height="42dp"
                 android:background="#40b7c9d7"
                 android:src="@drawable/doc_blue"
-                android:scaleType="center"
                 android:id="@+id/contact_avatar"/>
 
             <TextView
diff --git a/TMessagesProj/src/main/res/layout/chat_incoming_location_layout.xml b/TMessagesProj/src/main/res/layout/chat_incoming_location_layout.xml
index 53ce3ce41..5e25a7a86 100644
--- a/TMessagesProj/src/main/res/layout/chat_incoming_location_layout.xml
+++ b/TMessagesProj/src/main/res/layout/chat_incoming_location_layout.xml
@@ -22,7 +22,6 @@
             android:layout_width="wrap_content"
             android:layout_margin="6dp"
             android:layout_gravity="top"
-            android:scaleType="centerCrop"
             android:minHeight="100dp"
             android:minWidth="100dp"
             android:id="@+id/chat_photo_image"/>
diff --git a/TMessagesProj/src/main/res/layout/chat_layout.xml b/TMessagesProj/src/main/res/layout/chat_layout.xml
index 9d7f7137d..b0b79a514 100644
--- a/TMessagesProj/src/main/res/layout/chat_layout.xml
+++ b/TMessagesProj/src/main/res/layout/chat_layout.xml
@@ -4,12 +4,6 @@
     android:layout_height="match_parent"
     android:id="@+id/chat_layout">
 
-    <ImageView
-        android:layout_height="fill_parent"
-        android:layout_width="fill_parent"
-        android:id="@+id/background_image"
-        android:scaleType="centerCrop"/>
-
     <org.telegram.ui.Views.FrameLayoutFixed
         android:layout_height="fill_parent"
         android:layout_width="fill_parent"
diff --git a/TMessagesProj/src/main/res/layout/chat_outgoing_contact_layout.xml b/TMessagesProj/src/main/res/layout/chat_outgoing_contact_layout.xml
index a9d847728..f047bc8b6 100644
--- a/TMessagesProj/src/main/res/layout/chat_outgoing_contact_layout.xml
+++ b/TMessagesProj/src/main/res/layout/chat_outgoing_contact_layout.xml
@@ -16,19 +16,22 @@
         android:layout_gravity="top|right"
         android:id="@+id/chat_bubble_layout">
 
-        <FrameLayout android:layout_width="wrap_content"
+        <FrameLayout
+            android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:layout_marginRight="8dp"
             android:layout_gravity="top"
             android:id="@+id/add_contact_view">
 
-            <FrameLayout android:layout_height="54dp"
+            <FrameLayout
+                android:layout_height="54dp"
                 android:layout_width="1dp"
                 android:background="#aa70b15c"
                 android:paddingLeft="8dp"
                 android:layout_gravity="right"/>
 
-            <ImageView android:layout_width="40dp"
+            <ImageView
+                android:layout_width="40dp"
                 android:layout_height="54dp"
                 android:src="@drawable/ic_ab_add_member"
                 android:scaleType="center"
@@ -38,16 +41,19 @@
 
         </FrameLayout>
 
-        <FrameLayout android:layout_height="58dp"
+        <FrameLayout
+            android:layout_height="58dp"
             android:layout_width="0dp"
             android:id="@+id/shared_layout"
             android:layout_weight="1">
 
-            <org.telegram.ui.Views.BackupImageView android:layout_height="42dp"
+            <org.telegram.ui.Views.BackupImageView
+                android:layout_height="42dp"
                 android:layout_width="42dp"
                 android:id="@+id/contact_avatar"/>
 
-            <TextView android:layout_height="wrap_content"
+            <TextView
+                android:layout_height="wrap_content"
                 android:layout_width="wrap_content"
                 android:scrollHorizontally="true"
                 android:paddingLeft="51dp"
@@ -59,7 +65,8 @@
                 android:ellipsize="end"
                 android:id="@+id/chat_user_group_name"/>
 
-            <TextView android:layout_height="wrap_content"
+            <TextView
+                android:layout_height="wrap_content"
                 android:layout_width="wrap_content"
                 android:paddingLeft="51dp"
                 android:layout_marginTop="20dp"
@@ -68,7 +75,8 @@
                 android:maxLines="1"
                 android:id="@+id/phone_text_view"/>
 
-            <LinearLayout android:layout_width="wrap_content"
+            <LinearLayout
+                android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:id="@+id/chat_time_layout"
                 android:layout_gravity="bottom|right">
diff --git a/TMessagesProj/src/main/res/layout/chat_outgoing_document_layout.xml b/TMessagesProj/src/main/res/layout/chat_outgoing_document_layout.xml
index 3e33ed78d..66044546d 100644
--- a/TMessagesProj/src/main/res/layout/chat_outgoing_document_layout.xml
+++ b/TMessagesProj/src/main/res/layout/chat_outgoing_document_layout.xml
@@ -80,8 +80,6 @@
                 android:layout_width="42dp"
                 android:layout_height="42dp"
                 android:background="#408ed057"
-                android:src="@drawable/doc_green"
-                android:scaleType="center"
                 android:id="@+id/contact_avatar"/>
 
             <org.telegram.ui.Views.TightTextView
diff --git a/TMessagesProj/src/main/res/layout/chat_outgoing_location_layout.xml b/TMessagesProj/src/main/res/layout/chat_outgoing_location_layout.xml
index 911cc17f7..459e185f9 100644
--- a/TMessagesProj/src/main/res/layout/chat_outgoing_location_layout.xml
+++ b/TMessagesProj/src/main/res/layout/chat_outgoing_location_layout.xml
@@ -39,7 +39,6 @@
             android:layout_width="wrap_content"
             android:layout_margin="6dp"
             android:layout_gravity="top"
-            android:scaleType="centerCrop"
             android:minHeight="100dp"
             android:minWidth="100dp"
             android:id="@+id/chat_photo_image"/>
diff --git a/TMessagesProj/src/main/res/layout/document_item.xml b/TMessagesProj/src/main/res/layout/document_item.xml
index aa20aba2b..f2511bcef 100644
--- a/TMessagesProj/src/main/res/layout/document_item.xml
+++ b/TMessagesProj/src/main/res/layout/document_item.xml
@@ -59,7 +59,6 @@
         android:id="@+id/docs_item_thumb"
         android:layout_width="55dp"
         android:layout_height="42dp"
-        android:scaleType="centerCrop"
         android:layout_marginTop="11dp"
         android:layout_gravity="top|left"/>
 
diff --git a/TMessagesProj/src/main/res/layout/group_create_final_layout.xml b/TMessagesProj/src/main/res/layout/group_create_final_layout.xml
index 2970282e3..1095df7c9 100644
--- a/TMessagesProj/src/main/res/layout/group_create_final_layout.xml
+++ b/TMessagesProj/src/main/res/layout/group_create_final_layout.xml
@@ -21,8 +21,7 @@
             <org.telegram.ui.Views.BackupImageView
                 android:id="@+id/settings_avatar_image"
                 android:layout_width="fill_parent"
-                android:layout_height="fill_parent"
-                android:src="@drawable/group_blue"/>
+                android:layout_height="fill_parent"/>
 
             <ImageButton
                 android:id="@+id/settings_change_avatar_button"
diff --git a/TMessagesProj/src/main/res/layout/group_create_row_layout.xml b/TMessagesProj/src/main/res/layout/group_create_row_layout.xml
index 6323c035e..d72de6d6b 100644
--- a/TMessagesProj/src/main/res/layout/group_create_row_layout.xml
+++ b/TMessagesProj/src/main/res/layout/group_create_row_layout.xml
@@ -10,7 +10,6 @@
         android:layout_width="50dp"
         android:layout_height="50dp"
         android:id="@+id/messages_list_row_avatar"
-        android:contentDescription=""
         android:layout_marginTop="8dp"
         android:layout_gravity="top"/>
 
diff --git a/TMessagesProj/src/main/res/layout/location_view_layout.xml b/TMessagesProj/src/main/res/layout/location_view_layout.xml
index 9eda596f8..a5285024c 100644
--- a/TMessagesProj/src/main/res/layout/location_view_layout.xml
+++ b/TMessagesProj/src/main/res/layout/location_view_layout.xml
@@ -22,7 +22,6 @@
         <org.telegram.ui.Views.BackupImageView
             android:layout_width="64dp"
             android:layout_height="64dp"
-            android:contentDescription=""
             android:id="@+id/location_avatar_view"
             android:layout_marginLeft="12dp"
             android:layout_marginTop="16dp"
diff --git a/TMessagesProj/src/main/res/layout/media_layout.xml b/TMessagesProj/src/main/res/layout/media_layout.xml
index f8e949071..405fbcce8 100644
--- a/TMessagesProj/src/main/res/layout/media_layout.xml
+++ b/TMessagesProj/src/main/res/layout/media_layout.xml
@@ -16,6 +16,7 @@
         android:numColumns="auto_fit"
         android:stretchMode="columnWidth"
         android:gravity="center"
+        android:listSelector="@drawable/list_selector"
         android:layout_gravity="top"/>
 
     <TextView android:layout_width="match_parent"
diff --git a/TMessagesProj/src/main/res/layout/media_photo_layout.xml b/TMessagesProj/src/main/res/layout/media_photo_layout.xml
index b60a04d28..c3a16aae9 100644
--- a/TMessagesProj/src/main/res/layout/media_photo_layout.xml
+++ b/TMessagesProj/src/main/res/layout/media_photo_layout.xml
@@ -1,10 +1,11 @@
-<?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-             android:layout_width="100dp"
-             android:layout_height="100dp">
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="100dp"
+    android:layout_height="100dp">
+
     <org.telegram.ui.Views.BackupImageView
         android:id="@+id/media_photo_image"
         android:layout_width="fill_parent"
-        android:layout_height="fill_parent"
-        android:scaleType="centerCrop"/>
+        android:layout_height="fill_parent"/>
+
 </FrameLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/media_video_layout.xml b/TMessagesProj/src/main/res/layout/media_video_layout.xml
index 6bcdc3293..810f77f3b 100644
--- a/TMessagesProj/src/main/res/layout/media_video_layout.xml
+++ b/TMessagesProj/src/main/res/layout/media_video_layout.xml
@@ -6,8 +6,7 @@
     <org.telegram.ui.Views.BackupImageView
         android:id="@+id/media_photo_image"
         android:layout_width="fill_parent"
-        android:layout_height="fill_parent"
-        android:scaleType="centerCrop"/>
+        android:layout_height="fill_parent"/>
 
     <LinearLayout
         android:layout_width="wrap_content"
diff --git a/TMessagesProj/src/main/res/layout/photo_picker_album_layout.xml b/TMessagesProj/src/main/res/layout/photo_picker_album_layout.xml
new file mode 100644
index 000000000..1773bc96d
--- /dev/null
+++ b/TMessagesProj/src/main/res/layout/photo_picker_album_layout.xml
@@ -0,0 +1,46 @@
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="100dp"
+    android:layout_height="100dp"
+    android:layout_gravity="top">
+
+    <org.telegram.ui.Views.BackupImageView
+        android:id="@+id/media_photo_image"
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"/>
+
+    <LinearLayout
+        android:layout_width="fill_parent"
+        android:layout_height="28dp"
+        android:layout_gravity="bottom"
+        android:orientation="horizontal"
+        android:background="#7f000000">
+
+        <TextView
+            android:layout_height="fill_parent"
+            android:layout_width="0dp"
+            android:id="@+id/album_name"
+            android:textSize="13dp"
+            android:gravity="center_vertical"
+            android:textColor="#ffffffff"
+            android:layout_weight="1"
+            android:singleLine="true"
+            android:ellipsize="end"
+            android:maxLines="1"
+            android:layout_marginLeft="8dp"/>
+
+        <TextView
+            android:layout_height="fill_parent"
+            android:layout_width="wrap_content"
+            android:id="@+id/album_count"
+            android:textSize="13dp"
+            android:gravity="center_vertical"
+            android:textColor="#ffaaaaaa"
+            android:singleLine="true"
+            android:maxLines="1"
+            android:layout_marginLeft="4dp"
+            android:layout_marginRight="4dp"/>
+
+    </LinearLayout>
+
+</FrameLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/photo_picker_bottom_layout.xml b/TMessagesProj/src/main/res/layout/photo_picker_bottom_layout.xml
new file mode 100644
index 000000000..07777cb07
--- /dev/null
+++ b/TMessagesProj/src/main/res/layout/photo_picker_bottom_layout.xml
@@ -0,0 +1,69 @@
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_gravity="bottom"
+    android:orientation="horizontal"
+    android:layout_width="fill_parent"
+    android:layout_height="48dp"
+    android:background="#ff333333">
+
+    <Button
+        android:textSize="14dp"
+        android:textColor="#ffffff"
+        android:id="@+id/cancel_button"
+        android:background="@drawable/bar_selector_picker"
+        android:paddingLeft="3dp"
+        android:layout_width="0.0dip"
+        android:layout_height="fill_parent"
+        android:layout_weight="1.0"
+        android:textStyle="bold"/>
+
+    <View
+        android:layout_gravity="center_vertical"
+        android:background="#5c5c5c"
+        android:layout_width="1px"
+        android:layout_height="28dp" />
+
+    <FrameLayout
+        android:id="@+id/done_button"
+        android:background="@drawable/bar_selector_picker"
+        android:paddingRight="3dp"
+        android:clickable="true"
+        android:layout_width="0.0dip"
+        android:layout_height="fill_parent"
+        android:layout_weight="1.0">
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            android:layout_gravity="center">
+
+            <TextView
+                android:textSize="13dp"
+                android:textColor="#ffffff"
+                android:gravity="center"
+                android:background="@drawable/photobadge"
+                android:layout_gravity="center"
+                android:layout_width="wrap_content"
+                android:layout_height="19dp"
+                android:id="@+id/done_button_badge"
+                android:paddingLeft="6dp"
+                android:paddingRight="6dp"
+                android:textStyle="bold"
+                android:layout_marginRight="10dp"/>
+
+            <TextView
+                android:textSize="14dp"
+                android:textColor="#ffffff"
+                android:gravity="center"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:id="@+id/done_button_text"
+                android:drawablePadding="8dp"
+                android:textStyle="bold"/>
+
+        </LinearLayout>
+
+    </FrameLayout>
+
+</LinearLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/photo_picker_layout.xml b/TMessagesProj/src/main/res/layout/photo_picker_layout.xml
new file mode 100644
index 000000000..5dae18975
--- /dev/null
+++ b/TMessagesProj/src/main/res/layout/photo_picker_layout.xml
@@ -0,0 +1,55 @@
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:background="#ff000000"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:layout_gravity="top">
+
+    <GridView
+        android:id="@+id/media_grid"
+        android:paddingBottom="4dp"
+        android:paddingTop="4dp"
+        android:paddingLeft="4dp"
+        android:paddingRight="4dp"
+        android:layout_marginBottom="48dp"
+        android:clipToPadding="false"
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"
+        android:drawSelectorOnTop="true"
+        android:verticalSpacing="4dp"
+        android:horizontalSpacing="4dp"
+        android:numColumns="auto_fit"
+        android:stretchMode="columnWidth"
+        android:gravity="center"
+        android:layout_gravity="top"
+        android:scrollbars="none"
+        android:listSelector="@drawable/list_selector"/>
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:textColor="#808080"
+        android:gravity="center"
+        android:textSize="24dp"
+        android:id="@+id/searchEmptyView"
+        android:visibility="gone"
+        android:layout_marginBottom="48dp"/>
+
+    <LinearLayout
+        android:id="@+id/progressLayout"
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"
+        android:gravity="center"
+        android:orientation="vertical"
+        android:visibility="gone"
+        android:layout_marginBottom="48dp">
+
+        <ProgressBar
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"/>
+
+    </LinearLayout>
+
+    <include layout="@layout/photo_picker_bottom_layout"/>
+
+</FrameLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/photo_picker_photo_layout.xml b/TMessagesProj/src/main/res/layout/photo_picker_photo_layout.xml
new file mode 100644
index 000000000..a0a6f9142
--- /dev/null
+++ b/TMessagesProj/src/main/res/layout/photo_picker_photo_layout.xml
@@ -0,0 +1,34 @@
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="100dp"
+    android:layout_height="100dp"
+    android:layout_gravity="top">
+
+    <org.telegram.ui.Views.BackupImageView
+        android:id="@+id/media_photo_image"
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"/>
+
+    <FrameLayout
+        android:layout_height="fill_parent"
+        android:layout_width="fill_parent"
+        android:id="@+id/photo_frame"/>
+
+    <FrameLayout
+        android:layout_width="42dp"
+        android:layout_height="42dp"
+        android:layout_gravity="right"
+        android:id="@+id/photo_check_frame">
+
+        <ImageView
+            android:layout_height="30dp"
+            android:layout_width="30dp"
+            android:id="@+id/photo_check"
+            android:layout_gravity="right"
+            android:layout_marginTop="2dp"
+            android:scaleType="center"
+            android:layout_marginRight="2dp"/>
+
+    </FrameLayout>
+
+</FrameLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/settings_wallpapers_other_row.xml b/TMessagesProj/src/main/res/layout/settings_wallpapers_other_row.xml
index f7873c527..2412415d3 100644
--- a/TMessagesProj/src/main/res/layout/settings_wallpapers_other_row.xml
+++ b/TMessagesProj/src/main/res/layout/settings_wallpapers_other_row.xml
@@ -6,7 +6,6 @@
     <org.telegram.ui.Views.BackupImageView
         android:layout_height="100dp"
         android:layout_width="100dp"
-        android:scaleType="centerCrop"
         android:id="@+id/image"
         android:layout_gravity="bottom"
         android:background="#5A475866"/>
diff --git a/TMessagesProj/src/main/res/layout/updating_state_layout.xml b/TMessagesProj/src/main/res/layout/updating_state_layout.xml
index da95e9a67..815cbbe85 100644
--- a/TMessagesProj/src/main/res/layout/updating_state_layout.xml
+++ b/TMessagesProj/src/main/res/layout/updating_state_layout.xml
@@ -16,15 +16,17 @@
         android:layout_gravity="center_vertical|left"
         android:layout_marginLeft="12dp"/>
 
-    <ImageView android:layout_height="wrap_content"
+    <ImageView
+        android:layout_height="wrap_content"
         android:layout_width="wrap_content"
         android:src="@drawable/ic_ab_back"
         android:layout_gravity="center_vertical|left"
         android:layout_marginLeft="3dp"
         android:id="@+id/back_button"/>
 
-    <TextView android:layout_height="wrap_content"
-        android:layout_width="wrap_content"
+    <TextView
+        android:layout_height="wrap_content"
+        android:layout_width="fill_parent"
         android:layout_marginLeft="52dp"
         android:textColor="#ffffff"
         android:textSize="17dp"
diff --git a/TMessagesProj/src/main/res/values-ar/strings.xml b/TMessagesProj/src/main/res/values-ar/strings.xml
index c6bd34279..48fb53180 100644
--- a/TMessagesProj/src/main/res/values-ar/strings.xml
+++ b/TMessagesProj/src/main/res/values-ar/strings.xml
@@ -64,7 +64,7 @@
     <string name="NoFiles">لا يوجد ملفات بعد...</string>
     <string name="FileUploadLimit">حجم الملف لا يمكن أن يكون أكبر من %1$s</string>
     <string name="NotMounted">الذاكرة غير مثبتة</string>
-    <string name="UsbActive">نقل اليو إس بي مفعل</string>
+    <string name="UsbActive">نقل USB مفعل</string>
     <string name="InternalStorage">الذاكرة الداخلية</string>
     <string name="ExternalStorage">الذاكرة الخارجية</string>
     <string name="SystemRoot">جذر النظام</string>
@@ -94,7 +94,7 @@
     <string name="Message">الرسالة</string>
     <string name="TypeMessage">أكتب رسالة</string>
     <string name="DOWNLOAD">تحميل</string>
-    <string name="Selected">محددة: %d</string>
+    <string name="Selected">تم تحديد : %d</string>
     <string name="ShareMyContactInfo">شارك جهة الاتصال الخاصة بي</string>
     <string name="AddToContacts">أضف لجهات الاتصال</string>
     <string name="EncryptedPlaceholderTitleIncoming">%s قام بدعوتك لمحادثة سرية</string>
@@ -108,11 +108,12 @@
     <string name="FewNewMessages">%1$d رسائل جديدة</string>
     <string name="YouWereKicked">لقد تم إخراجك من هذه المجموعة</string>
     <string name="YouLeft">لقد قمت بمغادرة المجموعة</string>
-    <string name="DeleteThisGroup">حذف المجموعة</string>
-    <string name="DeleteThisChat">Delete this chat</string>
+    <string name="DeleteThisGroup">حذف هذه المجموعة</string>
+    <string name="DeleteThisChat">حذف هذه الدردشة</string>
     <string name="SlideToCancel">قم بالسحب للإلغاء</string>
     <string name="SaveToDownloads">حفظ في الجهاز</string>
     <string name="ApplyLocalizationFile">تطبيق ملف التعريب</string>
+    <string name="UnsupportedAttachment">Unsupported attachment</string>
 
     <!--notification-->
     <string name="EncryptedChatRequested">تم طلب محادثة سرية</string>
@@ -133,7 +134,7 @@
     <string name="NotificationMessagePhoto">%1$s قام بإرسال صورة لك</string>
     <string name="NotificationMessageVideo">%1$s قام بإرسال مقطع مرئي لك</string>
     <string name="NotificationMessageContact">%1$s قام بإرسال جهة اتصال لك</string>
-    <string name="NotificationMessageMap">%1$s قام بإرسال خريطة لك</string>
+    <string name="NotificationMessageMap">%1$s قام بإرسال موقع لك</string>
     <string name="NotificationMessageDocument">%1$s قام بإرسال مستند لك</string>
     <string name="NotificationMessageAudio">%1$s قام بإرسال مقطع صوتي لك</string>
     <string name="NotificationMessageGroupText">%1$s @ %2$s: %3$s</string>
@@ -141,7 +142,7 @@
     <string name="NotificationMessageGroupPhoto">%1$s قام بإرسال صورة للمجموعة %2$s</string>
     <string name="NotificationMessageGroupVideo">%1$s قام بإرسال مقطع مرئي للمجموعة %2$s</string>
     <string name="NotificationMessageGroupContact">%1$s قام بإرسال جهة اتصال للمجموعة %2$s</string>
-    <string name="NotificationMessageGroupMap">%1$s قام بإرسال خريطة للمجموعة %2$s</string>
+    <string name="NotificationMessageGroupMap">%1$s قام بإرسال موقع للمجموعة %2$s</string>
     <string name="NotificationMessageGroupDocument">%1$s قام بإرسال مستند للمجموعة %2$s</string>
     <string name="NotificationMessageGroupAudio">%1$s قام بإرسال مقطع صوتي للمجموعة %2$s</string>
     <string name="NotificationInvitedToGroup">%1$s قام بدعوتك للمجموعة %2$s</string>
@@ -250,27 +251,28 @@
     <string name="SendByEnter">أرسل بزر الإدخال</string>
     <string name="TerminateAllSessions">سجل الخروج من كافة الأجهزة الأخرى</string>
     <string name="AutomaticPhotoDownload">تنزيل الصور تلقائيًا</string>
-    <string name="AutomaticAudioDownload">تنزيل رسائل الصوت تلقائيا</string>
+    <string name="AutomaticAudioDownload">تنزيل رسائل الصوت تلقائياً</string>
     <string name="AutomaticPhotoDownloadGroups">المجموعات</string>
     <string name="AutomaticPhotoDownloadPrivateChats">المحادثات</string>
     <string name="Events">الأحداث</string>
-    <string name="InvisibleStatus">اخفاء الحالة</string>
     <string name="ContactJoined">اشترك صديق في تيليجرام</string>
     <string name="Pebble">PEBBLE</string>
     <string name="Language">اللغة</string>
-    <string name="AskAQuestionInfo">نرجو الأخذ بالعلم أن الدعم الفني في تيليجرام يقوم به مجموعة من المتطوعين. نحاول الرد بسرعة قدر المستطاع، لكن ربما نستغرق القليل من الوقت.<![CDATA[<br><br>]]>يرجى الإطلاع على <![CDATA[<a href="http://telegram.org/faq/ar">صفحة الأسئلة الأكثر شيوعًا</a>]]>: يوجد بها حلول للمشاكل وإجابات لمعظم الأسئلة.</string>
-    <string name="AskButton">اسأل متطوع</string>
-    <string name="TelegramFaq">Telegram FAQ</string>
+    <string name="AskAQuestionInfo">نرجو الأخذ بالعلم أن الدعم الفني في تيليجرام يقوم به مجموعة من المتطوعين. نحاول الرد بسرعة قدر المستطاع، لكن ربما نستغرق القليل من الوقت.<![CDATA[<br><br>]]>يرجى الإطلاع على <![CDATA[<a href="http://telegram.org/faq/ar">الأسئلة الشائعة عن تيليجرام</a>]]>: يوجد بها حلول للمشاكل وإجابات لمعظم الأسئلة.</string>
+    <string name="AskButton">اسأل أحد المتطوعين</string>
+    <string name="TelegramFaq">الأسئلة الشائعة عن تيليجرام</string>
     <string name="TelegramFaqUrl">https://telegram.org/faq/ar</string>
-    <string name="DeleteLocalization">Delete localization?</string>
-    <string name="IncorrectLocalization">Incorrect localization file</string>
-    <string name="Enabled">Enabled</string>
-    <string name="Disabled">Disabled</string>
-    <string name="NotificationsService">Notifications Service</string>
-    <string name="NotificationsServiceDisableInfo">If google play services are enough for you to receive notifications, you can disable Notifications Service. However we recommend you to leave it enabled to keep app running in background and receive instant notifications.</string>
-    <string name="SortBy">Sort By</string>
-    <string name="ImportContacts">Import Contacts</string>
-    <string name="WiFiOnly">via WiFi only</string>
+    <string name="DeleteLocalization">حذف التعريب؟</string>
+    <string name="IncorrectLocalization">ملف التعريب غير صحيح</string>
+    <string name="Enabled">تمكين</string>
+    <string name="Disabled">تعطيل</string>
+    <string name="NotificationsService">خدمة الإشعارات</string>
+    <string name="NotificationsServiceDisableInfo">إذا كانت خدمات Google play كافية بالنسبة لك لتلقي الإشعارات ، يمكنك تعطيل \" خدمة الإشعارات \" . ومع ذلك نحن نوصي بترك هذه الخدمة مفعلة للحفاظ على تشغيل التطبيق في الخلفية ، ولتلقي إشعارات الدردشة .</string>
+    <string name="SortBy">فرز حسب</string>
+    <string name="ImportContacts">استيراد جهات الاتصال</string>
+    <string name="WiFiOnly">بواسطة WiFi فقط</string>
+    <string name="SortFirstName">الاسم الأول</string>
+    <string name="SortLastName">اسم العائلة</string>
 
     <!--media view-->
     <string name="NoMedia">لا توجد وسائط بعد</string>
@@ -291,6 +293,8 @@
     <string name="SaveToGallery">حفظ في الجهاز</string>
     <string name="Of">%1$d من %2$d</string>
     <string name="Gallery">الألبوم</string>
+    <string name="AllPhotos">All Photos</string>
+    <string name="NoPhotos">No photos yet</string>
 
     <!--button titles-->
     <string name="Next">التالي</string>
@@ -316,7 +320,7 @@
     <string name="OK">موافق</string>
 
     <!--messages-->
-    <string name="ActionKickUser">un1 قام بإخراج un2</string>
+    <string name="ActionKickUser">un1 أزال un2</string>
     <string name="ActionLeftUser">غادر المجموعة العضو un1</string>
     <string name="ActionAddUser">un1 قام بإضافة un2</string>
     <string name="ActionRemovedPhoto">تمت إزالة صورة المجموعة من قِبَل un1</string>
@@ -332,7 +336,7 @@
     <string name="ActionYouCreateGroup">لقد قمت بإنشاء المجموعة</string>
     <string name="ActionKickUserYou">un1 قام بإخراجك</string>
     <string name="ActionAddUserYou">un1 قام بإضافتك</string>
-    <string name="UnsuppotedMedia">نسخة تيليجرام التي تستخدمها لا تدعم هذه الرسالة</string>
+    <string name="UnsuppotedMedia">نسخة تيليجرام الموجودة لديك لا تدعم هذه الرسالة. الرجاء التحديث لأحدث نسخة:\nhttp://telegram.org/update</string>
     <string name="AttachPhoto">صورة</string>
     <string name="AttachVideo">مقطع مرئي</string>
     <string name="AttachLocation">موقع</string>
@@ -340,8 +344,8 @@
     <string name="AttachDocument">مستند</string>
     <string name="AttachAudio">مقطع صوتي</string>
     <string name="FromYou">أنت</string>
-    <string name="ActionTakeScreenshootYou">You took a screenshot!</string>
-    <string name="ActionTakeScreenshoot">un1 took a screenshot!</string>
+    <string name="ActionTakeScreenshootYou">أنت أخذت لقطة للشاشة !</string>
+    <string name="ActionTakeScreenshoot">un1 أخذ لقطة للشاشة !</string>
 
     <!--Alert messages-->
     <string name="InvalidPhoneNumber">رقم الهاتف غير صحيح</string>
@@ -379,4 +383,4 @@
 
     <!--Don't change this! Not for localization!-->
     <string name="CacheTag">CACHE_TAG</string>
-</resources>
+</resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-de/strings.xml b/TMessagesProj/src/main/res/values-de/strings.xml
index 1b626516a..ec96fd4fe 100644
--- a/TMessagesProj/src/main/res/values-de/strings.xml
+++ b/TMessagesProj/src/main/res/values-de/strings.xml
@@ -12,14 +12,14 @@
     <!--signin view-->
     <string name="YourPhone">Dein Telefon</string>
     <string name="StartText">Bitte bestätige deine Landesvorwahl und deine Telefonnummer.</string>
-    <string name="ChooseCountry">Wähle dein Land</string>
+    <string name="ChooseCountry">Wähle ein Land</string>
     <string name="WrongCountry">Falsche Landesvorwahl</string>
 
     <!--code enter view-->
     <string name="YourCode">Dein Code</string>
-    <string name="SentSmsCode">Wir haben dir eine SMS mit einem Aktivierungscode zugeschickt: </string>
+    <string name="SentSmsCode">Wir haben dir eine SMS mit einem Aktivierungscode zugeschickt</string>
     <string name="CallText">Wir rufen dich an in</string>
-    <string name="Calling">Wir rufen dich an …</string>
+    <string name="Calling">Wir rufen dich an…</string>
     <string name="Code">Code</string>
     <string name="WrongNumber">Falsche Nummer?</string>
 
@@ -40,15 +40,15 @@
     <string name="NewGroup">Neue Gruppe</string>
     <string name="Yesterday">gestern</string>
     <string name="NoResult">Keine Ergebnisse</string>
-    <string name="NoChats">Noch keine Chats …</string>
+    <string name="NoChats">Noch keine Chats…</string>
     <string name="NoChatsHelp">Beginne Telegram zu nutzen, indem du\neine neue Nachricht erstellst (rechte obere Ecke)\noder deine Kontakte aufrufst.</string>
-    <string name="WaitingForNetwork">Warte auf Verbindung …</string>
-    <string name="Connecting">Verbinde …</string>
-    <string name="Updating">Aktualisiere …</string>
+    <string name="WaitingForNetwork">Warte auf Verbindung…</string>
+    <string name="Connecting">Verbinde…</string>
+    <string name="Updating">Aktualisiere…</string>
     <string name="NewSecretChat">Neuer geheimer Chat</string>
-    <string name="AwaitingEncryption">Warte, bis %s online geht …</string>
+    <string name="AwaitingEncryption">Warte, bis %s online geht…</string>
     <string name="EncryptionRejected">Geheimen Chat abgelehnt</string>
-    <string name="EncryptionProcessing">Tausche Schlüssel aus …</string>
+    <string name="EncryptionProcessing">Tausche Schlüssel aus…</string>
     <string name="EncryptedChatStartedOutgoing">%s ist deinem geheimen Chat beigetreten.</string>
     <string name="EncryptedChatStartedIncoming">Du bist dem geheimen Chat beigetreten.</string>
     <string name="ClearHistory">Verlauf löschen</string>
@@ -61,7 +61,7 @@
     <string name="FreeOfTotal">Freier Speicher: %1$s von %2$s</string>
     <string name="UnknownError">Unbekannter Fehler</string>
     <string name="AccessError">Zugriffsfehler</string>
-    <string name="NoFiles">Noch keine Dateien …</string>
+    <string name="NoFiles">Noch keine Dateien…</string>
     <string name="FileUploadLimit">Die Datei darf nicht größer als %1$s sein</string>
     <string name="NotMounted">Speicher nicht eingebunden</string>
     <string name="UsbActive">USB-Transfer aktiv</string>
@@ -72,10 +72,10 @@
 
     <!--chat view-->
     <string name="Invisible">unsichtbar</string>
-    <string name="Typing">schreibt …</string>
+    <string name="Typing">schreibt…</string>
     <string name="Attach">Anhängen</string>
-    <string name="IsTyping">schreibt</string>
-    <string name="AreTyping">tippen …</string>
+    <string name="IsTyping">schreibt...</string>
+    <string name="AreTyping">tippen…</string>
     <string name="AndMoreTyping">und %d weitere Personen</string>
     <string name="GotAQuestion">Du hast eine Frage\nzu Telegram?</string>
     <string name="ChatTakePhoto">Foto aufnehmen</string>
@@ -83,7 +83,7 @@
     <string name="ChatLocation">Standort</string>
     <string name="ChatVideo">Video</string>
     <string name="ChatDocument">Dokument</string>
-    <string name="NoMessages">Noch keine Nachrichten …</string>
+    <string name="NoMessages">Noch keine Nachrichten…</string>
     <string name="ViewPhoto">Foto anzeigen</string>
     <string name="ViewLocation">Standort anzeigen</string>
     <string name="ViewVideo">Video abspielen</string>
@@ -100,7 +100,7 @@
     <string name="EncryptedPlaceholderTitleIncoming">%s hat dich zu einem geheimen Chat eingeladen.</string>
     <string name="EncryptedPlaceholderTitleOutgoing">Du hast %s zu einem geheimen Chat eingeladen.</string>
     <string name="EncryptedDescriptionTitle">Geheime Chats:</string>
-    <string name="EncryptedDescription1">Verwenden Ende-zu-Ende-Verschlüsselung</string>
+    <string name="EncryptedDescription1">Verwenden End-to-End-Verschlüsselung</string>
     <string name="EncryptedDescription2">Hinterlassen keine Spuren auf unseren Servern</string>
     <string name="EncryptedDescription3">Haben einen Selbstzerstörungs-Timer</string>
     <string name="EncryptedDescription4">Erlauben keine Weiterleitung von Nachrichten</string>
@@ -109,10 +109,11 @@
     <string name="YouWereKicked">Du wurdest aus der Gruppe entfernt</string>
     <string name="YouLeft">Du hast die Gruppe verlassen</string>
     <string name="DeleteThisGroup">Diese Gruppe löschen</string>
-    <string name="DeleteThisChat">Delete this chat</string>
+    <string name="DeleteThisChat">Diesen Chat löschen</string>
     <string name="SlideToCancel">WISCHEN UM ABZUBRECHEN</string>
-    <string name="SaveToDownloads">In Ordner Downloads speichern</string>
-    <string name="ApplyLocalizationFile">Sprachdatei benutzen</string>
+    <string name="SaveToDownloads">Im Ordner Downloads speichern</string>
+    <string name="ApplyLocalizationFile">Standort-Datei benutzen</string>
+    <string name="UnsupportedAttachment">Unsupported attachment</string>
 
     <!--notification-->
     <string name="EncryptedChatRequested">Geheimen Chat angefordert</string>
@@ -152,7 +153,7 @@
     <string name="NotificationGroupKickYou">%1$s hat dich aus der Gruppe %2$s entfernt</string>
     <string name="NotificationGroupLeftMember">%1$s hat die Gruppe %2$s verlassen</string>
     <string name="NotificationContactJoined">%1$s benutzt jetzt Telegram!</string>
-    <string name="NotificationUnrecognizedDevice">%1$s,\n\nwir haben einen Zugriff auf dein Konto von einem neuen Gerät am %2$s erkannt.\n\nGerät: %3$s\nStandort: %4$s\n\nWenn du das nicht gewesen bist, kannst du in den Einstellungen alle Sitzungen beenden.\n\nDanke,\ndas Telegram Team</string>
+    <string name="NotificationUnrecognizedDevice">%1$s,\n\nwir haben einen Zugriff auf dein Konto von einem neuen Gerät am %2$s erkannt.\n\nGerät: %3$s\nStandort: %4$s\n\nWenn du das nicht warst, kannst du in den Einstellungen alle Sitzungen beenden.\n\nDanke,\ndas Telegram Team</string>
     <string name="NotificationContactNewPhoto">%1$s hat das Profilbild geändert</string>
 
     <!--contacts view-->
@@ -163,13 +164,13 @@
     <string name="YesterdayAt">gestern um</string>
     <string name="OtherAt">um</string>
     <string name="Online">online</string>
-    <string name="Offline">Offline</string>
+    <string name="Offline">offline</string>
     <string name="LastSeen">zul. online</string>
     <string name="LastSeenDate">zul. online</string>
     <string name="InviteFriends">Freunde einladen</string>
 
     <!--group create view-->
-    <string name="SendMessageTo">Sende Nachricht an …</string>
+    <string name="SendMessageTo">Sende Nachricht an…</string>
     <string name="EnterGroupNamePlaceholder">Gruppennamen eingeben</string>
     <string name="MEMBER">MITGLIED</string>
     <string name="GroupName">Gruppenname</string>
@@ -236,7 +237,7 @@
     <string name="InAppPreview">In-App-Vorschau</string>
     <string name="Reset">ZURÜCKSETZEN</string>
     <string name="ResetAllNotifications">Alle Benachrichtigungs-Einstellungen zurücksetzen</string>
-    <string name="UndoAllCustom">Setze alle benutzerdefinierten Einstellungen für Benachrichtigungen zurück</string>
+    <string name="UndoAllCustom">Setzt alle benutzerdefinierten Einstellungen für Benachrichtigungen zurück</string>
     <string name="NotificationsAndSounds">Benachrichtigungen</string>
     <string name="BlockedUsers">Blockierte Benutzer</string>
     <string name="SaveIncomingPhotos">Speichere eingehende Bilder</string>
@@ -257,19 +258,21 @@
     <string name="ContactJoined">Kontakt ist Telegram beigetreten</string>
     <string name="Pebble">PEBBLE</string>
     <string name="Language">Sprache</string>
-    <string name="AskAQuestionInfo">Bedenke bitte, dass der Telegram Support von Freiwilligen geleistet wird. Wir versuchen so schnell wie möglich zu antworten. Dies kann jedoch manchmal etwas länger dauern.<![CDATA[<br><br>]]>Bitte schau in den <![CDATA[<a href="http://telegram.org/faq#general">Telegram FAQ</a>]]>: nach. Dort findest du Antworten auf die meisten Fragen und wichtige Tipps zur <![CDATA[<a href="http://telegram.org/faq#troubleshooting">Problemlösung</a>]]>.</string>
+    <string name="AskAQuestionInfo">Bedenke bitte, dass der Telegram Support von Freiwilligen geleistet wird. Wir versuchen so schnell wie möglich zu antworten. Dies kann jedoch manchmal etwas länger dauern.<![CDATA[<br><br>]]>Bitte schau in den <![CDATA[<a href="http://telegram.org/faq#general">Telegram FAQ</a>]]> nach. Dort findest du Antworten auf die meisten Fragen und wichtige Tipps zur <![CDATA[<a href="http://telegram.org/faq#troubleshooting">Problemlösung</a>]]>.</string>
     <string name="AskButton">Frage einen Freiwilligen</string>
     <string name="TelegramFaq">Telegram-FAQ</string>
     <string name="TelegramFaqUrl">https://telegram.org/faq</string>
     <string name="DeleteLocalization">Lokalisierung löschen?</string>
     <string name="IncorrectLocalization">Falsche Sprachdatei</string>
-    <string name="Enabled">Enabled</string>
-    <string name="Disabled">Disabled</string>
-    <string name="NotificationsService">Notifications Service</string>
-    <string name="NotificationsServiceDisableInfo">If google play services are enough for you to receive notifications, you can disable Notifications Service. However we recommend you to leave it enabled to keep app running in background and receive instant notifications.</string>
-    <string name="SortBy">Sort By</string>
-    <string name="ImportContacts">Import Contacts</string>
-    <string name="WiFiOnly">via WiFi only</string>
+    <string name="Enabled">Aktiviert</string>
+    <string name="Disabled">Deaktiviert</string>
+    <string name="NotificationsService">Dienst für Benachrichtigungen</string>
+    <string name="NotificationsServiceDisableInfo">Sofern Google Play Dienste ausreichend für deine Benachrichtigungen sind, kannst du unseren Benachrichtigungsdienst abschalten. Wir empfehlen allerdings, unseren Dienst dauerhaft aktiviert zu lassen um über neue Nachrichten in Echtzeit informiert zu werden.</string>
+    <string name="SortBy">sortiert nach</string>
+    <string name="ImportContacts">Kontakte importieren</string>
+    <string name="WiFiOnly">nur über WLAN</string>
+    <string name="SortFirstName">Vorname</string>
+    <string name="SortLastName">Nachname</string>
 
     <!--media view-->
     <string name="NoMedia">Noch keine geteilten Medien vorhanden</string>
@@ -282,7 +285,7 @@
     <string name="Hybrid">Hybrid</string>
     <string name="MetersAway">m entfernt</string>
     <string name="KMetersAway">km entfernt</string>
-    <string name="SendLocation">Sende Standort</string>
+    <string name="SendLocation">Standort senden</string>
     <string name="ShareLocation">Teile Standort</string>
 
     <!--photo gallery view-->
@@ -290,6 +293,8 @@
     <string name="SaveToGallery">In der Galerie speichern</string>
     <string name="Of">%1$d von %2$d</string>
     <string name="Gallery">Galerie</string>
+    <string name="AllPhotos">All Photos</string>
+    <string name="NoPhotos">No photos yet</string>
 
     <!--button titles-->
     <string name="Next">Weiter</string>
@@ -329,7 +334,7 @@
     <string name="ActionYouCreateGroup">Du hast die Gruppe erstellt</string>
     <string name="ActionKickUserYou">un1 hat dich aus der Gruppe entfernt</string>
     <string name="ActionAddUserYou">un1 hat dich hinzugefügt</string>
-    <string name="UnsuppotedMedia">Diese Nachricht wird auf deiner Version von Telegram nicht unterstützt. Bitte aktualisiere die App um sie zu sehen: http://telegram.org/update</string>
+    <string name="UnsuppotedMedia">Diese Nachricht wird von deiner Telegram-Version nicht unterstützt. Bitte aktualisiere die App um sie zu sehen: http://telegram.org/update</string>
     <string name="AttachPhoto">Foto</string>
     <string name="AttachVideo">Video</string>
     <string name="AttachLocation">Standort</string>
@@ -337,8 +342,8 @@
     <string name="AttachDocument">Dokument</string>
     <string name="AttachAudio">Audio</string>
     <string name="FromYou">Du</string>
-    <string name="ActionTakeScreenshootYou">You took a screenshot!</string>
-    <string name="ActionTakeScreenshoot">un1 took a screenshot!</string>
+    <string name="ActionTakeScreenshootYou">Du hast ein Bildschirmfoto gemacht!</string>
+    <string name="ActionTakeScreenshoot">un1 hat ein Bildschirmfoto gemacht!</string>
 
     <!--Alert messages-->
     <string name="InvalidPhoneNumber">Ungültige Telefonnummer</string>
@@ -347,7 +352,7 @@
     <string name="InvalidCode">Ungültiger Code</string>
     <string name="InvalidFirstName">Ungültiger Vorname</string>
     <string name="InvalidLastName">Ungültiger Nachname</string>
-    <string name="Loading">Lädt …</string>
+    <string name="Loading">Lädt…</string>
     <string name="NoPlayerInstalled">Du hast keinen Videoplayer. Bitte installiere einen um fortzufahren.</string>
     <string name="NoHandleAppInstalled">Du hast keine App, die den Dokumententyp \'%1$s\' öffnen kann.</string>
     <string name="InviteUser">Dieser Benutzer hat noch kein Telegram. Möchtest du ihn einladen?</string>
@@ -369,7 +374,7 @@
     <string name="Page2Message"><![CDATA[<b>Telegram</b>]]> stellt Nachrichten schneller zu als andere Anwendungen</string>
     <string name="Page3Message"><![CDATA[<b>Telegram</b>]]> ist für immer kostenlos. Keine Werbung. Keine wiederkehrenden Kosten.</string>
     <string name="Page4Message"><![CDATA[<b>Telegram</b>]]> schützt deine Nachrichten vor Hacker-Angriffen</string>
-    <string name="Page5Message"><![CDATA[<b>Telegram</b>]]> hat keine Grenzen in Sachen Größe deiner Chats und Medien</string>
+    <string name="Page5Message"><![CDATA[<b>Telegram</b>]]> unterstützt unbegrenzt große Chats und Mediendateien</string>
     <string name="Page6Message"><![CDATA[<b>Telegram</b>]]> lässt sich von verschiedenen Geräten gleichzeitig nutzen</string>
     <string name="Page7Message"><![CDATA[<b>Telegram</b>]]>-Nachrichten sind stark verschlüsselt und können sich selbst zerstören</string>
     <string name="StartMessaging">Jetzt beginnen</string>
diff --git a/TMessagesProj/src/main/res/values-es/strings.xml b/TMessagesProj/src/main/res/values-es/strings.xml
index 80afd8a70..648fd6a77 100644
--- a/TMessagesProj/src/main/res/values-es/strings.xml
+++ b/TMessagesProj/src/main/res/values-es/strings.xml
@@ -94,7 +94,7 @@
     <string name="Message">Mensaje</string>
     <string name="TypeMessage">Escribe un mensaje</string>
     <string name="DOWNLOAD">Descargar</string>
-    <string name="Selected">Elegidos: %d</string>
+    <string name="Selected">Seleccionado: %d</string>
     <string name="ShareMyContactInfo">COMPARTIR MI INFORMACIÓN DE CONTACTO</string>
     <string name="AddToContacts">AÑADIR A CONTACTOS</string>
     <string name="EncryptedPlaceholderTitleIncoming">%s te ha invitado a un chat secreto.</string>
@@ -109,10 +109,11 @@
     <string name="YouWereKicked">Has sido expulsado de este grupo</string>
     <string name="YouLeft">Has abandonado este grupo</string>
     <string name="DeleteThisGroup">Eliminar este grupo</string>
-    <string name="DeleteThisChat">Delete this chat</string>
+    <string name="DeleteThisChat">Eliminar esta conversación</string>
     <string name="SlideToCancel">DESLIZA PARA CANCELAR</string>
     <string name="SaveToDownloads">Guardar en descargas</string>
-    <string name="ApplyLocalizationFile">Aplicar fichero de localización</string>
+    <string name="ApplyLocalizationFile">Aplicar archivo de traducción</string>
+    <string name="UnsupportedAttachment">Unsupported attachment</string>
 
     <!--notification-->
     <string name="EncryptedChatRequested">Chat secreto solicitado</string>
@@ -247,7 +248,7 @@
     <string name="Support">SOPORTE</string>
     <string name="ChatBackground">Fondo de chat</string>
     <string name="MessagesSettings">MENSAJES</string>
-    <string name="SendByEnter">Enviar con ‘Enter’</string>
+    <string name="SendByEnter">Enviar con \'Intro\'</string>
     <string name="TerminateAllSessions">Cerrar todas las otras sesiones</string>
     <string name="AutomaticPhotoDownload">DESCARGA AUTOMÁTICA DE FOTOS</string>
     <string name="AutomaticAudioDownload">DESCARGA AUTOMÁTICA DE AUDIO</string>
@@ -257,19 +258,21 @@
     <string name="ContactJoined">Un contacto se unió a Telegram</string>
     <string name="Pebble">PEBBLE</string>
     <string name="Language">Idioma</string>
-    <string name="AskAQuestionInfo">Por favor, ten en cuenta que el Soporte de Telegram está hecho por voluntarios. Intentamos responder lo antes posible, pero puede tomar un tiempo.<![CDATA[<br><br>]]>Por favor, echa un vistazo a las <![CDATA[<a href=“http://telegram.org/faq/es”>Preguntas Frecuentes de Telegram</a>]]>: tiene importantes <![CDATA[<a href=“http://telegram.org/faq/es#solucin-de-problemas”>Soluciones a problemas</a>]]> y respuestas para la mayoría de las preguntas.</string>
+    <string name="AskAQuestionInfo">Por favor, ten en cuenta que el Soporte de Telegram está hecho por voluntarios. Intentamos responder lo antes posible, pero puede tomar un tiempo.<![CDATA[<br><br>]]>Por favor, echa un vistazo a las <![CDATA[<a href=“http://telegram.org/faq/es”>Preguntas Frecuentes de Telegram</a>]]>: tienen importantes <![CDATA[<a href=“http://telegram.org/faq/es#solucin-de-problemas”>soluciones a problemas</a>]]> y respuestas para la mayoría de las preguntas.</string>
     <string name="AskButton">Preguntar</string>
     <string name="TelegramFaq">Preguntas frecuentes</string>
     <string name="TelegramFaqUrl">https://telegram.org/faq/es</string>
-    <string name="DeleteLocalization">¿Eliminar localización?</string>
-    <string name="IncorrectLocalization">Fichero de localización incorrecto</string>
-    <string name="Enabled">Enabled</string>
-    <string name="Disabled">Disabled</string>
-    <string name="NotificationsService">Notifications Service</string>
-    <string name="NotificationsServiceDisableInfo">If google play services are enough for you to receive notifications, you can disable Notifications Service. However we recommend you to leave it enabled to keep app running in background and receive instant notifications.</string>
-    <string name="SortBy">Sort By</string>
-    <string name="ImportContacts">Import Contacts</string>
-    <string name="WiFiOnly">via WiFi only</string>
+    <string name="DeleteLocalization">¿Eliminar traducción?</string>
+    <string name="IncorrectLocalization">Archivo de traducción incorrecto</string>
+    <string name="Enabled">Activado</string>
+    <string name="Disabled">Desactivado</string>
+    <string name="NotificationsService">Servicio de notificaciones</string>
+    <string name="NotificationsServiceDisableInfo">Si los servicios de google play son suficientes para recibir notificaciones, puedes desactivar el \'Servicio de notificaciones\'. Sin embargo, te recomendamos activarlos para mantener la aplicación funcionando en segundo plano y recibir notificaciones de forma instantánea.</string>
+    <string name="SortBy">Ordenar por</string>
+    <string name="ImportContacts">Importar contactos</string>
+    <string name="WiFiOnly">Sólo vía WiFi</string>
+    <string name="SortFirstName">Nombre</string>
+    <string name="SortLastName">Apellido</string>
 
     <!--media view-->
     <string name="NoMedia">No hay fotos ni vídeos compartidos aún</string>
@@ -290,6 +293,8 @@
     <string name="SaveToGallery">Guardar en galería</string>
     <string name="Of">%1$d de %2$d</string>
     <string name="Gallery">Galería</string>
+    <string name="AllPhotos">All Photos</string>
+    <string name="NoPhotos">No photos yet</string>
 
     <!--button titles-->
     <string name="Next">Siguiente</string>
@@ -329,7 +334,7 @@
     <string name="ActionYouCreateGroup">Creaste el grupo</string>
     <string name="ActionKickUserYou">un1 te expulsó</string>
     <string name="ActionAddUserYou">un1 te añadió</string>
-    <string name="UnsuppotedMedia">Este mensaje no está soportado en tu versión de Telegram.</string>
+    <string name="UnsuppotedMedia">Este mensaje no lo admite tu versión de Telegram. Actualiza la app para verlo: http://telegram.org/update</string>
     <string name="AttachPhoto">Foto</string>
     <string name="AttachVideo">Vídeo</string>
     <string name="AttachLocation">Ubicación</string>
@@ -337,8 +342,8 @@
     <string name="AttachDocument">Archivo</string>
     <string name="AttachAudio">Audio</string>
     <string name="FromYou">Tú</string>
-    <string name="ActionTakeScreenshootYou">You took a screenshot!</string>
-    <string name="ActionTakeScreenshoot">un1 took a screenshot!</string>
+    <string name="ActionTakeScreenshootYou">¡Hiciste una captura de pantalla!</string>
+    <string name="ActionTakeScreenshoot">¡un1 hizo una captura de pantalla!</string>
 
     <!--Alert messages-->
     <string name="InvalidPhoneNumber">Número de teléfono inválido</string>
@@ -366,12 +371,12 @@
     <string name="Page6Title">Basada en la nube</string>
     <string name="Page7Title">Privada</string>
     <string name="Page1Message">Bienvenidos a la era de la mensajería rápida y segura.</string>
-    <string name="Page2Message"><![CDATA[<b>Telegram</b>]]> entrega mensajes más rápido que cualquier otra aplicación.</string>
-    <string name="Page3Message"><![CDATA[<b>Telegram</b>]]> es gratis para siempre. Sin publicidad. Sin cuotas de suscripción.</string>
-    <string name="Page4Message"><![CDATA[<b>Telegram</b>]]> mantiene tus mensajes a salvo del ataque de hackers.</string>
-    <string name="Page5Message"><![CDATA[<b>Telegram</b>]]> no tiene límites en el tamaño de tus chats y archivos.</string>
-    <string name="Page6Message"><![CDATA[<b>Telegram</b>]]> te permite acceder a tus mensajes desde múltiples dispositivos.</string>
-    <string name="Page7Message">Los mensajes de <![CDATA[<b>Telegram</b>]]> están fuertemente cifrados y se pueden autodestruir.</string>
+    <string name="Page2Message"><![CDATA[<b>Telegram</b>]]> entrega mensajes más rápido que<![CDATA[<br/>]]>cualquier otra aplicación.</string>
+    <string name="Page3Message"><![CDATA[<b>Telegram</b>]]> es gratis para siempre. Sin publicidad.<![CDATA[<br/>]]>Sin cuotas de suscripción.</string>
+    <string name="Page4Message"><![CDATA[<b>Telegram</b>]]> mantiene tus mensajes<![CDATA[<br/>]]>a salvo del ataque de hackers.</string>
+    <string name="Page5Message"><![CDATA[<b>Telegram</b>]]> no tiene límites en el tamaño de tus<![CDATA[<br/>]]>chats y archivos.</string>
+    <string name="Page6Message"><![CDATA[<b>Telegram</b>]]> te permite acceder a tus mensajes<![CDATA[<br/>]]>desde múltiples dispositivos.</string>
+    <string name="Page7Message">Los mensajes de <![CDATA[<b>Telegram</b>]]> están fuertemente<![CDATA[<br/>]]>cifrados y se pueden autodestruir.</string>
     <string name="StartMessaging">Empieza a conversar</string>
 
     <!--Don't change this! Not for localization!-->
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index 1ed6fa4db..0b3a29421 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -94,7 +94,7 @@
     <string name="Message">Messaggio</string>
     <string name="TypeMessage">Scrivi il messaggio</string>
     <string name="DOWNLOAD">Scarica</string>
-    <string name="Selected">Selezionato: %d</string>
+    <string name="Selected">Selezionati: %d</string>
     <string name="ShareMyContactInfo">CONDIVIDI LE MIE INFORMAZIONI DI CONTATTO</string>
     <string name="AddToContacts">AGGIUNGI AI CONTATTI</string>
     <string name="EncryptedPlaceholderTitleIncoming">%s ti ha mandato un invito a una chat privata.</string>
@@ -109,10 +109,11 @@
     <string name="YouWereKicked">Sei stato espulso da questo gruppo</string>
     <string name="YouLeft">Hai lasciato il gruppo</string>
     <string name="DeleteThisGroup">Elimina questo gruppo</string>
-    <string name="DeleteThisChat">Delete this chat</string>
+    <string name="DeleteThisChat">Elimina questa chat</string>
     <string name="SlideToCancel">TRASCINA PER ANNULLARE</string>
     <string name="SaveToDownloads">Salva in download</string>
     <string name="ApplyLocalizationFile">Applica file di localizzazione</string>
+    <string name="UnsupportedAttachment">Unsupported attachment</string>
 
     <!--notification-->
     <string name="EncryptedChatRequested">Chat segreta richiesta</string>
@@ -263,13 +264,15 @@
     <string name="TelegramFaqUrl">https://telegram.org/faq</string>
     <string name="DeleteLocalization">Eliminare la localizzazione?</string>
     <string name="IncorrectLocalization">File della localizzazione non valido</string>
-    <string name="Enabled">Enabled</string>
-    <string name="Disabled">Disabled</string>
-    <string name="NotificationsService">Notifications Service</string>
-    <string name="NotificationsServiceDisableInfo">If google play services are enough for you to receive notifications, you can disable Notifications Service. However we recommend you to leave it enabled to keep app running in background and receive instant notifications.</string>
-    <string name="SortBy">Sort By</string>
-    <string name="ImportContacts">Import Contacts</string>
-    <string name="WiFiOnly">via WiFi only</string>
+    <string name="Enabled">Abilitato</string>
+    <string name="Disabled">Disabilitato</string>
+    <string name="NotificationsService">Servizio notifiche</string>
+    <string name="NotificationsServiceDisableInfo">Se i servizi di Google Play ti bastano per ricevere le notifiche, puoi disabilitare il Servizio notifiche. Tuttavia sarebbe meglio lasciarlo abilitato al fine di mantenere l\'applicazione attiva in background e ricevere notifiche istantanee.</string>
+    <string name="SortBy">Ordina per</string>
+    <string name="ImportContacts">Importa contatti</string>
+    <string name="WiFiOnly">Solo tramite WiFi</string>
+    <string name="SortFirstName">Nome</string>
+    <string name="SortLastName">Cognome</string>
 
     <!--media view-->
     <string name="NoMedia">Nessun media condiviso</string>
@@ -290,6 +293,8 @@
     <string name="SaveToGallery">Salva nella galleria</string>
     <string name="Of">%1$d di %2$d</string>
     <string name="Gallery">Galleria</string>
+    <string name="AllPhotos">Tutte le foto</string>
+    <string name="NoPhotos">Ancora nessuna foto</string>
 
     <!--button titles-->
     <string name="Next">Avanti</string>
@@ -337,8 +342,8 @@
     <string name="AttachDocument">Documento</string>
     <string name="AttachAudio">Audio</string>
     <string name="FromYou">Tu</string>
-    <string name="ActionTakeScreenshootYou">You took a screenshot!</string>
-    <string name="ActionTakeScreenshoot">un1 took a screenshot!</string>
+    <string name="ActionTakeScreenshootYou">Hai catturato la schermata!</string>
+    <string name="ActionTakeScreenshoot">un1 ha catturato la schermata!</string>
 
     <!--Alert messages-->
     <string name="InvalidPhoneNumber">Numero di telefono non valido</string>
diff --git a/TMessagesProj/src/main/res/values-nl/strings.xml b/TMessagesProj/src/main/res/values-nl/strings.xml
index 48f82d53d..62e8b7962 100644
--- a/TMessagesProj/src/main/res/values-nl/strings.xml
+++ b/TMessagesProj/src/main/res/values-nl/strings.xml
@@ -10,22 +10,22 @@
     <string name="LanguageCode">nl</string>
 
     <!--signin view-->
-    <string name="YourPhone">Uw telefoon</string>
-    <string name="StartText">Bevestig uw landcode\nen voer uw telefoonnummer in.</string>
+    <string name="YourPhone">Je telefoon</string>
+    <string name="StartText">Bevestig je landcode\nen voer je telefoonnummer in.</string>
     <string name="ChooseCountry">Kies een land</string>
     <string name="WrongCountry">Onjuist landcode</string>
 
     <!--code enter view-->
-    <string name="YourCode">Uw code</string>
-    <string name="SentSmsCode">We hebben een sms met een activatiecode verzonden naar uw telefoon</string>
-    <string name="CallText">We bellen u over</string>
-    <string name="Calling">We bellen u…</string>
+    <string name="YourCode">Je code</string>
+    <string name="SentSmsCode">We hebben een sms met een activatiecode verzonden naar je telefoon</string>
+    <string name="CallText">We bellen je over</string>
+    <string name="Calling">We bellen je…</string>
     <string name="Code">Code</string>
-    <string name="WrongNumber">Verkeerde nummer?</string>
+    <string name="WrongNumber">Verkeerd nummer?</string>
 
     <!--signup view-->
-    <string name="YourName">Uw naam</string>
-    <string name="RegisterText">Voer uw voor- en achternaam in</string>
+    <string name="YourName">Je naam</string>
+    <string name="RegisterText">Voer je voor- en achternaam in</string>
     <!--<string name="RegisterText">Set up your name and picture</string>-->
     <string name="FirstName">Voornaam (verplicht)</string>
     <string name="LastName">Achternaam (optioneel)</string>
@@ -50,7 +50,7 @@
     <string name="EncryptionRejected">Privégesprek geannuleerd</string>
     <string name="EncryptionProcessing">Encryptiesleutels uitwisselen…</string>
     <string name="EncryptedChatStartedOutgoing">%s neemt nu deel aan het privégesprek.</string>
-    <string name="EncryptedChatStartedIncoming">U neemt nu deel aan het privégesprek.</string>
+    <string name="EncryptedChatStartedIncoming">Je neemt nu deel aan het privégesprek.</string>
     <string name="ClearHistory">Geschiedenis wissen</string>
     <string name="DeleteChat">Verwijderen en verlaten</string>
     <string name="HiddenName">Verborgen naam</string>
@@ -77,7 +77,7 @@
     <string name="IsTyping">is aan het typen…</string>
     <string name="AreTyping">zijn aan het typen…</string>
     <string name="AndMoreTyping">en nog %d personen</string>
-    <string name="GotAQuestion">Hebt u een vraag\nover Telegram?</string>
+    <string name="GotAQuestion">Heb je een vraag\nover Telegram?</string>
     <string name="ChatTakePhoto">Foto maken</string>
     <string name="ChatGallery">Galerij</string>
     <string name="ChatLocation">Locatie</string>
@@ -97,8 +97,8 @@
     <string name="Selected">Geselecteerd: %d</string>
     <string name="ShareMyContactInfo">MIJN CONTACTGEGEVENS DELEN</string>
     <string name="AddToContacts">TOEVOEGEN AAN CONTACTEN</string>
-    <string name="EncryptedPlaceholderTitleIncoming">%s heeft u uitgenodigd voor een privégesprek.</string>
-    <string name="EncryptedPlaceholderTitleOutgoing">U hebt %s uitgenodigd voor een privégesprek.</string>
+    <string name="EncryptedPlaceholderTitleIncoming">%s heeft je uitgenodigd voor een privégesprek.</string>
+    <string name="EncryptedPlaceholderTitleOutgoing">Je hebt %s uitgenodigd voor een privégesprek.</string>
     <string name="EncryptedDescriptionTitle">Privégesprekken:</string>
     <string name="EncryptedDescription1">gebruiken end-to-endversleuteling</string>
     <string name="EncryptedDescription2">laten geen sporen achter op onze server</string>
@@ -106,36 +106,37 @@
     <string name="EncryptedDescription4">staan doorsturen niet toe</string>
     <string name="OneNewMessage">%1$d nieuw bericht</string>
     <string name="FewNewMessages">%1$d nieuwe berichten</string>
-    <string name="YouWereKicked">U bent verwijderd uit deze groep</string>
-    <string name="YouLeft">U hebt deze groep verlaten</string>
+    <string name="YouWereKicked">Je bent verwijderd uit deze groep</string>
+    <string name="YouLeft">Je hebt deze groep verlaten</string>
     <string name="DeleteThisGroup">Deze groep verwijderen</string>
-    <string name="DeleteThisChat">Delete this chat</string>
+    <string name="DeleteThisChat">Verwijder dit gesprek</string>
     <string name="SlideToCancel">SLEEP OM TE ANNULEREN</string>
     <string name="SaveToDownloads">Opslaan in Downloads</string>
     <string name="ApplyLocalizationFile">Vertaling toepassen</string>
+    <string name="UnsupportedAttachment">Unsupported attachment</string>
 
     <!--notification-->
     <string name="EncryptedChatRequested">Privégesprek aangevraagd</string>
     <string name="EncryptedChatAccepted">Privégesprek gestart</string>
     <string name="MessageLifetimeChanged">%1$s heeft de verlooptijd ingesteld op %2$s</string>
-    <string name="MessageLifetimeChangedOutgoing">U hebt de verlooptijd ingesteld op %1$s</string>
+    <string name="MessageLifetimeChangedOutgoing">Je hebt de verlooptijd ingesteld op %1$s</string>
     <string name="MessageLifetimeRemoved">%1$s heeft de verlooptijd uitgeschakeld</string>
-    <string name="MessageLifetimeYouRemoved">U hebt de verlooptijd uitgeschakeld</string>
+    <string name="MessageLifetimeYouRemoved">Je hebt de verlooptijd uitgeschakeld</string>
     <string name="MessageLifetime2s">2 seconden</string>
     <string name="MessageLifetime5s">5 seconden</string>
     <string name="MessageLifetime1m">1 minuut</string>
     <string name="MessageLifetime1h">1 uur</string>
     <string name="MessageLifetime1d">1 dag</string>
     <string name="MessageLifetime1w">1 week</string>
-    <string name="YouHaveNewMessage">U hebt een nieuw bericht</string>
+    <string name="YouHaveNewMessage">Je hebt een nieuw bericht</string>
     <string name="NotificationMessageText">%1$s: %2$s</string>
-    <string name="NotificationMessageNoText">%1$s heeft u een bericht gestuurd</string>
-    <string name="NotificationMessagePhoto">%1$s heeft u een foto gestuurd</string>
-    <string name="NotificationMessageVideo">%1$s heeft u een video gestuurd</string>
-    <string name="NotificationMessageContact">%1$s heeft een contact met u gedeeld</string>
-    <string name="NotificationMessageMap">%1$s heeft u een locatie gestuurd</string>
-    <string name="NotificationMessageDocument">%1$s heeft u een document gestuurd</string>
-    <string name="NotificationMessageAudio">%1$s heeft u een geluidsbestand gestuurd</string>
+    <string name="NotificationMessageNoText">%1$s heeft je een bericht gestuurd</string>
+    <string name="NotificationMessagePhoto">%1$s heeft je een foto gestuurd</string>
+    <string name="NotificationMessageVideo">%1$s heeft je een video gestuurd</string>
+    <string name="NotificationMessageContact">%1$s heeft een contact met je gedeeld</string>
+    <string name="NotificationMessageMap">%1$s heeft je een locatie gestuurd</string>
+    <string name="NotificationMessageDocument">%1$s heeft je een document gestuurd</string>
+    <string name="NotificationMessageAudio">%1$s heeft je een geluidsbestand gestuurd</string>
     <string name="NotificationMessageGroupText">%1$s @ %2$s: %3$s</string>
     <string name="NotificationMessageGroupNoText">%1$s heeft een bericht gestuurd naar de groep %2$s</string>
     <string name="NotificationMessageGroupPhoto">%1$s heeft een foto gestuurd naar de groep %2$s</string>
@@ -144,21 +145,21 @@
     <string name="NotificationMessageGroupMap">%1$s heeft een locatie gestuurd naar de groep %2$s</string>
     <string name="NotificationMessageGroupDocument">%1$s heeft een document gestuurd naar de groep %2$s</string>
     <string name="NotificationMessageGroupAudio">%1$s heeft een geluidsbestand gestuurd naar de groep %2$s</string>
-    <string name="NotificationInvitedToGroup">%1$s heeft u uitgenodigd voor de groep %2$s</string>
+    <string name="NotificationInvitedToGroup">%1$s heeft je uitgenodigd voor de groep %2$s</string>
     <string name="NotificationEditedGroupName">%1$s heeft de naam van de groep %2$s gewijzigd</string>
     <string name="NotificationEditedGroupPhoto">%1$s heeft de afbeelding van de groep %2$s gewijzigd</string>
     <string name="NotificationGroupAddMember">%1$s heeft %3$s uitgenodigd voor de groep %2$s</string>
     <string name="NotificationGroupKickMember">%1$s heeft %3$s verwijderd uit de groep %2$s</string>
-    <string name="NotificationGroupKickYou">%1$s heeft u verwijderd uit de groep %2$s</string>
+    <string name="NotificationGroupKickYou">%1$s heeft je verwijderd uit de groep %2$s</string>
     <string name="NotificationGroupLeftMember">%1$s heeft de groep %2$s verlaten</string>
     <string name="NotificationContactJoined">%1$s heeft nu Telegram!</string>
-    <string name="NotificationUnrecognizedDevice">%1$s,\nEr is op uw account ingelogd vanaf een nieuw apparaat op %2$s\n\nApparaat: %3$s\nLocatie: %4$s\n\nAls u dit niet was, kunt u alle sessies beëindigen via de instellingen.\n\nHet Telegram-team</string>
+    <string name="NotificationUnrecognizedDevice">%1$s,\nEr is op je account ingelogd vanaf een nieuw apparaat op %2$s\n\nApparaat: %3$s\nLocatie: %4$s\n\nAls jij dit niet was, kun je alle sessies beëindigen via Instellingen – Alle andere sessies beëindigen.\n\nHet Telegram-team</string>
     <string name="NotificationContactNewPhoto">%1$s heeft zijn/haar profielfoto gewijzigd</string>
 
     <!--contacts view-->
     <string name="SelectContact">Kies een contact</string>
     <string name="NoContacts">Nog geen contacten</string>
-    <string name="InviteText">Hoi, zullen we overstappen op Telegram? http://telegram.org/dl2</string>
+    <string name="InviteText">Hey! Zullen we overstappen op Telegram? http://telegram.org/dl2</string>
     <string name="TodayAt">vandaag om</string>
     <string name="YesterdayAt">gisteren om</string>
     <string name="OtherAt">om</string>
@@ -213,7 +214,7 @@
     <string name="ShortMessageLifetime1h">1u</string>
     <string name="ShortMessageLifetime1d">1d</string>
     <string name="ShortMessageLifetime1w">1w</string>
-    <string name="EncryptionKeyDescription">Dit is een weergave van de encryptiesleutel voor dit privégesprek met <![CDATA[<b>]]>%1$s<![CDATA[</b>]]>.<![CDATA[<br><br>]]>Als deze afbeelding er bij <![CDATA[<b>]]>%2$s<![CDATA[</b>]]> hetzelfde uitziet, is uw gesprek 200%% beveiligd.<![CDATA[<br><br>]]>Lees meer op telegram.org.</string>
+    <string name="EncryptionKeyDescription">Dit is een weergave van de encryptiesleutel voor dit privégesprek met <![CDATA[<b>]]>%1$s<![CDATA[</b>]]>.<![CDATA[<br><br>]]>Als deze afbeelding er bij <![CDATA[<b>]]>%2$s<![CDATA[</b>]]> hetzelfde uitziet, is jullie gesprek 200%% beveiligd.<![CDATA[<br><br>]]>Lees meer op telegram.org.</string>
 
     <!--settings view-->
     <string name="ResetNotificationsText">Alle meldingsinstellingen herstellen</string>
@@ -222,18 +223,18 @@
     <string name="EnableAnimations">Animaties</string>
     <string name="Unblock">Deblokkeren</string>
     <string name="UnblockText">Houd een gebruiker ingedrukt om hem/haar te deblokkeren.</string>
-    <string name="NoBlocked">Nog geen geblokkeerde gebruikers</string>
-    <string name="YourPhoneNumber">UW TELEFOONNUMMER</string>
+    <string name="NoBlocked">Geen geblokkeerde gebruikers</string>
+    <string name="YourPhoneNumber">JE TELEFOONNUMMER</string>
     <string name="MessageNotifications">BERICHTMELDINGEN</string>
     <string name="Alert">Waarschuwing</string>
-    <string name="MessagePreview">Voorbeeld van berichten</string>
+    <string name="MessagePreview">Voorvertoning</string>
     <string name="GroupNotifications">GROEPSMELDINGEN</string>
     <string name="Sound">Geluid</string>
-    <string name="InAppNotifications">IN-APP MELDINGEN</string>
-    <string name="InAppSounds">In-app geluiden</string>
-    <string name="InAppVibrate">In-app trillen</string>
+    <string name="InAppNotifications">IN-APP BERICHTGEVING</string>
+    <string name="InAppSounds">Geluiden</string>
+    <string name="InAppVibrate">Trillen</string>
     <string name="Vibrate">Trillen</string>
-    <string name="InAppPreview">In-app voorbeelden</string>
+    <string name="InAppPreview">Voorvertoningen</string>
     <string name="Reset">RESETTEN</string>
     <string name="ResetAllNotifications">Alle meldingen resetten</string>
     <string name="UndoAllCustom">Alle aangepaste meldingsinstellingen ongedaan maken voor alle contacten en groepen.</string>
@@ -241,7 +242,7 @@
     <string name="BlockedUsers">Geblokkeerde gebruikers</string>
     <string name="SaveIncomingPhotos">Inkomende foto\'s opslaan</string>
     <string name="LogOut">Uitloggen</string>
-    <string name="YourFirstNameAndLastName">UW VOOR- EN ACHTERNAAM</string>
+    <string name="YourFirstNameAndLastName">JE VOOR- EN ACHTERNAAM</string>
     <string name="NoSound">Geen geluid</string>
     <string name="Default">Standaard</string>
     <string name="Support">ONDERSTEUNING</string>
@@ -257,19 +258,21 @@
     <string name="ContactJoined">Contact lid geworden van Telegram</string>
     <string name="Pebble">PEBBLE</string>
     <string name="Language">Taal</string>
-    <string name="AskAQuestionInfo">Houd er rekening mee dat de ondersteuning van Telegram door vrijwilligers wordt gedaan. We doen ons best om zo snel als mogelijk te antwoorden, maar het kan even even duren.<![CDATA[<br><br>]]>Bekijk ook de <![CDATA[<a href="http://telegram.org/faq#general">veelgestelde vragen (FAQ)</a>]]>: hier staan de antwoorden op de meeste vragen en belangrijke tips voor <![CDATA[<a href="http://telegram.org/faq#troubleshooting">het oplossen van problemen</a>]]>.</string>
+    <string name="AskAQuestionInfo">Houd er rekening mee dat de ondersteuning van Telegram door vrijwilligers wordt gedaan. We doen ons best om zo snel mogelijk te antwoorden, maar het kan even even duren.<![CDATA[<br><br>]]>Bekijk ook de <![CDATA[<a href="http://telegram.org/faq#general">veelgestelde vragen</a>]]>: hier staan de antwoorden op de meeste vragen en belangrijke tips voor <![CDATA[<a href="http://telegram.org/faq#troubleshooting">het oplossen van problemen</a>]]>.</string>
     <string name="AskButton">Vraag een vrijwilliger</string>
-    <string name="TelegramFaq">Telegram veelgestelde vragen (FAQ)</string>
+    <string name="TelegramFaq">Veelgestelde vragen</string>
     <string name="TelegramFaqUrl">https://telegram.org/faq</string>
     <string name="DeleteLocalization">Verwijder vertaling?</string>
     <string name="IncorrectLocalization">Ongeldig vertalingsbestand</string>
-    <string name="Enabled">Enabled</string>
-    <string name="Disabled">Disabled</string>
-    <string name="NotificationsService">Notifications Service</string>
-    <string name="NotificationsServiceDisableInfo">If google play services are enough for you to receive notifications, you can disable Notifications Service. However we recommend you to leave it enabled to keep app running in background and receive instant notifications.</string>
-    <string name="SortBy">Sort By</string>
-    <string name="ImportContacts">Import Contacts</string>
-    <string name="WiFiOnly">via WiFi only</string>
+    <string name="Enabled">Inschakelen</string>
+    <string name="Disabled">Uitschakelen</string>
+    <string name="NotificationsService">Meldingenservice</string>
+    <string name="NotificationsServiceDisableInfo">Als google play services genoeg is om notificaties te ontvangen, kan de meldingenservice worden uitgeschakeld. Echter, we adviseren de service ingeschakeld te laten zodat de app in de achtergrond blijft draaien en meldingen direct worden ontvangen.</string>
+    <string name="SortBy">Sorteren op</string>
+    <string name="ImportContacts">Importeer contacten</string>
+    <string name="WiFiOnly">Alleen via WiFi</string>
+    <string name="SortFirstName">Voornaam</string>
+    <string name="SortLastName">Achternaam</string>
 
     <!--media view-->
     <string name="NoMedia">Nog geen media gedeeld</string>
@@ -290,6 +293,8 @@
     <string name="SaveToGallery">Opslaan in galerij</string>
     <string name="Of">%1$d van %2$d</string>
     <string name="Gallery">Galerij</string>
+    <string name="AllPhotos">Alle foto\'s</string>
+    <string name="NoPhotos">Nog geen foto\'s</string>
 
     <!--button titles-->
     <string name="Next">Volgende</string>
@@ -320,25 +325,25 @@
     <string name="ActionChangedPhoto">un1 heeft de groepsafbeelding gewijzigd</string>
     <string name="ActionChangedTitle">un1 heeft de groepsnaam gewijzigd naar un2</string>
     <string name="ActionCreateGroup">un1 heeft de groep gemaakt</string>
-    <string name="ActionYouKickUser">U hebt un2 verwijderd</string>
-    <string name="ActionYouLeftUser">U hebt de groep verlaten</string>
-    <string name="ActionYouAddUser">U hebt un2 toegevoegd</string>
-    <string name="ActionYouRemovedPhoto">U hebt de groepsafbeelding verwijderd</string>
-    <string name="ActionYouChangedPhoto">U hebt de groepsafbeelding gewijzigd</string>
-    <string name="ActionYouChangedTitle">U hebt de groepsnaam gewijzigd naar un2</string>
-    <string name="ActionYouCreateGroup">U hebt de groep gemaakt</string>
-    <string name="ActionKickUserYou">un1 heeft u verwijderd</string>
-    <string name="ActionAddUserYou">un1 heeft u toegevoegd</string>
-    <string name="UnsuppotedMedia">Dit bericht wordt niet ondersteund door uw versie van Telegram. Werk Telegram bij om dit bericht te bekijken: http://telegram.org/update</string>
+    <string name="ActionYouKickUser">Je hebt un2 verwijderd</string>
+    <string name="ActionYouLeftUser">Je hebt de groep verlaten</string>
+    <string name="ActionYouAddUser">Je hebt un2 toegevoegd</string>
+    <string name="ActionYouRemovedPhoto">Je hebt de groepsafbeelding verwijderd</string>
+    <string name="ActionYouChangedPhoto">Je hebt de groepsafbeelding gewijzigd</string>
+    <string name="ActionYouChangedTitle">Je hebt de groepsnaam gewijzigd naar un2</string>
+    <string name="ActionYouCreateGroup">Je hebt de groep gemaakt</string>
+    <string name="ActionKickUserYou">un1 heeft je verwijderd</string>
+    <string name="ActionAddUserYou">un1 heeft je toegevoegd</string>
+    <string name="UnsuppotedMedia">Dit bericht wordt niet ondersteund door jouw versie van Telegram. Werk Telegram bij om dit bericht te bekijken: http://telegram.org/update</string>
     <string name="AttachPhoto">Foto</string>
     <string name="AttachVideo">Video</string>
     <string name="AttachLocation">Locatie</string>
     <string name="AttachContact">Contact</string>
     <string name="AttachDocument">Document</string>
     <string name="AttachAudio">Geluidsbestand</string>
-    <string name="FromYou">U</string>
-    <string name="ActionTakeScreenshootYou">You took a screenshot!</string>
-    <string name="ActionTakeScreenshoot">un1 took a screenshot!</string>
+    <string name="FromYou">Jij</string>
+    <string name="ActionTakeScreenshootYou">Je hebt een schermafbeelding gemaakt!</string>
+    <string name="ActionTakeScreenshoot">un1 maakte een schermafbeeling!</string>
 
     <!--Alert messages-->
     <string name="InvalidPhoneNumber">Ongeldig telefoonnummer</string>
@@ -348,10 +353,10 @@
     <string name="InvalidFirstName">Ongeldige voornaam</string>
     <string name="InvalidLastName">Ongeldige achternaam</string>
     <string name="Loading">Bezig met laden…</string>
-    <string name="NoPlayerInstalled">U hebt geen mediaspeler. Installeer een mediaspeler om door te gaan.</string>
-    <string name="NoHandleAppInstalled">U hebt geen applicaties die het MIME-type \'%1$s\' ondersteunen. Installeer een geschikte applicatie om door te gaan.</string>
-    <string name="InviteUser">Deze gebruiker heeft nog geen Telegram. Wilt u een uitnodiging sturen?</string>
-    <string name="AreYouSure">Weet u het zeker?</string>
+    <string name="NoPlayerInstalled">Je hebt geen mediaspeler. Installeer een mediaspeler om door te gaan.</string>
+    <string name="NoHandleAppInstalled">Je hebt geen applicaties die het MIME-type \'%1$s\' ondersteunen. Installeer een geschikte applicatie om door te gaan.</string>
+    <string name="InviteUser">Deze gebruiker heeft nog geen Telegram. Wil je een uitnodiging sturen?</string>
+    <string name="AreYouSure">Weet je het zeker?</string>
     <string name="AddContactQ">Contact toevoegen?</string>
     <string name="AddToTheGroup">%1$s toevoegen aan de groep?</string>
     <string name="ForwardMessagesTo">Berichten doorsturen naar %1$s?</string>
@@ -368,9 +373,9 @@
     <string name="Page1Message">Welkom in het tijdperk van snel en veilig chatten</string>
     <string name="Page2Message"><![CDATA[<b>Telegram</b>]]> bezorgt berichten sneller dan elke andere app</string>
     <string name="Page3Message"><![CDATA[<b>Telegram</b>]]> is altijd gratis. Geen advertenties. Geen abonnementskosten</string>
-    <string name="Page4Message"><![CDATA[<b>Telegram</b>]]> beveiligt uw berichten tegen hackers</string>
-    <string name="Page5Message"><![CDATA[<b>Telegram</b>]]> heeft geen beperkingen op de grootte van uw media en gesprekken</string>
-    <string name="Page6Message"><![CDATA[<b>Telegram</b>]]> biedt toegang tot uw berichten vanaf meerdere apparaten</string>
+    <string name="Page4Message"><![CDATA[<b>Telegram</b>]]> beveiligt je berichten tegen hackers</string>
+    <string name="Page5Message"><![CDATA[<b>Telegram</b>]]> heeft geen beperkingen op de grootte van je media en gesprekken</string>
+    <string name="Page6Message"><![CDATA[<b>Telegram</b>]]> biedt toegang tot je berichten vanaf meerdere apparaten</string>
     <string name="Page7Message"><![CDATA[<b>Telegram</b>]]> berichten zijn sterk versleuteld en kunnen zichzelf vernietigen</string>
     <string name="StartMessaging">Begin nu met chatten</string>
 
diff --git a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
new file mode 100644
index 000000000..78e1cbb65
--- /dev/null
+++ b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
@@ -0,0 +1,384 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<!--https://www.transifex.com/projects/p/telegram/language/pt_BR/members/-->
+
+<resources>
+    <string name="AppName">Telegram</string>
+
+    <string name="LanguageName">Português (Brasil)</string>
+    <string name="LanguageNameInEnglish">Portuguese (Brazil)</string>
+    <string name="LanguageCode">pt_BR</string>
+
+    <!--signin view-->
+    <string name="YourPhone">Seu número</string>
+    <string name="StartText">Por favor confirme o código do seu país\ne digite o número do seu telefone.</string>
+    <string name="ChooseCountry">Escolha um país</string>
+    <string name="WrongCountry">Código do país incorreto</string>
+
+    <!--code enter view-->
+    <string name="YourCode">Seu código</string>
+    <string name="SentSmsCode">Enviamos um SMS com um código de ativação para o seu telefone</string>
+    <string name="CallText">Vamos te ligar em</string>
+    <string name="Calling">Estamos te ligando...</string>
+    <string name="Code">Código</string>
+    <string name="WrongNumber">Número incorreto?</string>
+
+    <!--signup view-->
+    <string name="YourName">Seu nome</string>
+    <string name="RegisterText">Configure seu nome e sobrenome</string>
+    <!--<string name="RegisterText">Set up your name and picture</string>-->
+    <string name="FirstName">Nome (obrigatório)</string>
+    <string name="LastName">Sobrenome (opcional)</string>
+    <string name="CancelRegistration">Cancelar registro</string>
+
+    <!--chats view-->
+    <string name="Chats">Conversas</string>
+    <string name="Search">Busca</string>
+    <string name="NewMessages">Novas mensagens</string>
+    <string name="Settings">Configurações</string>
+    <string name="Contacts">Contatos</string>
+    <string name="NewGroup">Novo Grupo</string>
+    <string name="Yesterday">ontem</string>
+    <string name="NoResult">Nenhum resultado</string>
+    <string name="NoChats">Ainda não há conversas...</string>
+    <string name="NoChatsHelp">Comece a conversar pressionando o\nbotão \'Nova Mensagem\' no canto superior direito\nou vá para a seção \'Contatos\'</string>
+    <string name="WaitingForNetwork">Aguardando rede...</string>
+    <string name="Connecting">Conectando...</string>
+    <string name="Updating">Atualizando...</string>
+    <string name="NewSecretChat">Nova Conversa Secreta</string>
+    <string name="AwaitingEncryption">Esperando %s se conectar...</string>
+    <string name="EncryptionRejected">Conversa secreta cancelada</string>
+    <string name="EncryptionProcessing">Trocando chaves de criptografia...</string>
+    <string name="EncryptedChatStartedOutgoing">%s entrou na conversa secreta</string>
+    <string name="EncryptedChatStartedIncoming">Você entrou na conversa secreta</string>
+    <string name="ClearHistory">Limpar histórico</string>
+    <string name="DeleteChat">Apagar e sair</string>
+    <string name="HiddenName">Nome oculto</string>
+    <string name="SelectChat">Selecione uma Conversa</string>
+
+    <!--documents view-->
+    <string name="SelectFile">Selecione um Arquivo</string>
+    <string name="FreeOfTotal">Disponível %1$s de %2$s</string>
+    <string name="UnknownError">Erro desconhecido</string>
+    <string name="AccessError">Erro de acesso</string>
+    <string name="NoFiles">Ainda não há arquivos</string>
+    <string name="FileUploadLimit">Tamanho do arquivo não deve ser maior que %1$s</string>
+    <string name="NotMounted">Armazenamento não está montado</string>
+    <string name="UsbActive">Transferência USB ativa</string>
+    <string name="InternalStorage">Armazenamento Interno</string>
+    <string name="ExternalStorage">Armazenamento Externo</string>
+    <string name="SystemRoot">Administrador do Sistema</string>
+    <string name="SdCard">Cartão SD</string>
+
+    <!--chat view-->
+    <string name="Invisible">invisível</string>
+    <string name="Typing">escrevendo...</string>
+    <string name="Attach">Anexar</string>
+    <string name="IsTyping">está escrevendo...</string>
+    <string name="AreTyping">estão escrevendo...</string>
+    <string name="AndMoreTyping">e %d mais pessoas</string>
+    <string name="GotAQuestion">Tem alguma dúvida\nsobre o Telegram?</string>
+    <string name="ChatTakePhoto">Tirar foto</string>
+    <string name="ChatGallery">Galeria</string>
+    <string name="ChatLocation">Localização</string>
+    <string name="ChatVideo">Vídeo</string>
+    <string name="ChatDocument">Documento</string>
+    <string name="NoMessages">Ainda não há mensagem aqui...</string>
+    <string name="ViewPhoto">Ver Foto</string>
+    <string name="ViewLocation">Ver Localização</string>
+    <string name="ViewVideo">Tocar Vídeo</string>
+    <string name="ForwardedMessage">Mensagem encaminhada</string>
+    <string name="From">De</string>
+    <string name="NoRecent">Nada recente</string>
+    <string name="Members">membros</string>
+    <string name="Message">Mensagem</string>
+    <string name="TypeMessage">Escrever mensagem</string>
+    <string name="DOWNLOAD">Baixar</string>
+    <string name="Selected">%d selecionado</string>
+    <string name="ShareMyContactInfo">COMPARTILHAR MINHAS INFORMAÇÕES DE CONTATO</string>
+    <string name="AddToContacts">ADICIONAR AOS CONTATOS</string>
+    <string name="EncryptedPlaceholderTitleIncoming">%s convidou você para uma conversa secreta.</string>
+    <string name="EncryptedPlaceholderTitleOutgoing">Você convidou %s para uma conversa secreta.</string>
+    <string name="EncryptedDescriptionTitle">Conversas secretas:</string>
+    <string name="EncryptedDescription1">Utilizam criptografia ponto a ponto</string>
+    <string name="EncryptedDescription2">Não deixam rastro em nossos servidores</string>
+    <string name="EncryptedDescription3">Têm temporizador para a autodestruição das mensagens</string>
+    <string name="EncryptedDescription4">Não permitem o reencaminhamento</string>
+    <string name="OneNewMessage">%1$d nova mensagem</string>
+    <string name="FewNewMessages">%1$d novas mensagens</string>
+    <string name="YouWereKicked">Você foi removido deste grupo</string>
+    <string name="YouLeft">Você saiu deste grupo</string>
+    <string name="DeleteThisGroup">Apagar este grupo</string>
+    <string name="DeleteThisChat">Apagar esta conversa</string>
+    <string name="SlideToCancel">DESLIZE PARA CANCELAR</string>
+    <string name="SaveToDownloads">Salvar em downloads</string>
+    <string name="ApplyLocalizationFile">Aplicar arquivo de localização</string>
+    <string name="UnsupportedAttachment">Unsupported attachment</string>
+
+    <!--notification-->
+    <string name="EncryptedChatRequested">Conversa secreta solicitada</string>
+    <string name="EncryptedChatAccepted">Conversa secreta iniciada</string>
+    <string name="MessageLifetimeChanged">%1$s estabeleceu o tempo de autodestruição para %2$s </string>
+    <string name="MessageLifetimeChangedOutgoing">Você estabeleceu o tempo de autodestruição para %1$s</string>
+    <string name="MessageLifetimeRemoved">%1$s desativou o temporizador de autodestruição</string>
+    <string name="MessageLifetimeYouRemoved">Você desativou o temporizador de autodestruição</string>
+    <string name="MessageLifetime2s">2 segundos</string>
+    <string name="MessageLifetime5s">5 segundos</string>
+    <string name="MessageLifetime1m">1 minuto</string>
+    <string name="MessageLifetime1h">1 hora</string>
+    <string name="MessageLifetime1d">1 dia</string>
+    <string name="MessageLifetime1w">1 semana</string>
+    <string name="YouHaveNewMessage">Você tem uma nova mensagem</string>
+    <string name="NotificationMessageText">%1$s: %2$s</string>
+    <string name="NotificationMessageNoText">%1$s te enviou uma mensagem</string>
+    <string name="NotificationMessagePhoto">%1$s te enviou uma foto</string>
+    <string name="NotificationMessageVideo">%1$s te enviou um vídeo</string>
+    <string name="NotificationMessageContact">%1$s compartilhou um contato com você</string>
+    <string name="NotificationMessageMap">%1$s mandou uma localização</string>
+    <string name="NotificationMessageDocument">%1$s te enviou um documento</string>
+    <string name="NotificationMessageAudio">%1$s te enviou um áudio</string>
+    <string name="NotificationMessageGroupText">%1$s @ %2$s: %3$s</string>
+    <string name="NotificationMessageGroupNoText">%1$s enviou uma mensagem para o grupo %2$s</string>
+    <string name="NotificationMessageGroupPhoto">%1$s enviou uma foto para o grupo %2$s</string>
+    <string name="NotificationMessageGroupVideo">%1$s enviou um vídeo para o grupo %2$s</string>
+    <string name="NotificationMessageGroupContact">%1$s compartilhou um contato para o grupo %2$s</string>
+    <string name="NotificationMessageGroupMap">%1$s mandou uma localização para o grupo %2$s</string>
+    <string name="NotificationMessageGroupDocument">%1$s enviou um documento para o grupo %2$s</string>
+    <string name="NotificationMessageGroupAudio">%1$s enviou um áudio para o grupo %2$s</string>
+    <string name="NotificationInvitedToGroup">%1$s convidou você para o grupo %2$s</string>
+    <string name="NotificationEditedGroupName">%1$s editou o nome do grupo %2$s</string>
+    <string name="NotificationEditedGroupPhoto">%1$s editou a foto do grupo %2$s</string>
+    <string name="NotificationGroupAddMember">%1$s convidou %3$s para o grupo %2$s</string>
+    <string name="NotificationGroupKickMember">%1$s removeu %3$s do grupo %2$s</string>
+    <string name="NotificationGroupKickYou">%1$s removeu você do grupo %2$s</string>
+    <string name="NotificationGroupLeftMember">%1$s saiu do grupo %2$s</string>
+    <string name="NotificationContactJoined">%1$s entrou para o Telegram!</string>
+    <string name="NotificationUnrecognizedDevice">%1$s,\nNós detectamos um acesso à sua conta de um novo dispositivo em %2$s\n\nDispositivo: %3$s\nLocalização: %4$s\n\nCaso não tenha sido você, vá para Configurações – Encerrar todas as sessões.\n\nObrigado,\nA equipe do Telegram</string>
+    <string name="NotificationContactNewPhoto">%1$s atualizou a foto do perfil</string>
+
+    <!--contacts view-->
+    <string name="SelectContact">Selecionar Contato</string>
+    <string name="NoContacts">Ainda não há contatos</string>
+    <string name="InviteText">Ei, vamos mudar para o Telegram: http://telegram.org/dl2</string>
+    <string name="TodayAt">hoje à(s)</string>
+    <string name="YesterdayAt">ontem à(s)</string>
+    <string name="OtherAt">em</string>
+    <string name="Online">online</string>
+    <string name="Offline">offline</string>
+    <string name="LastSeen">visto pela última vez</string>
+    <string name="LastSeenDate">visto pela última vez em</string>
+    <string name="InviteFriends">Convidar Amigos</string>
+
+    <!--group create view-->
+    <string name="SendMessageTo">Enviar mensagem para...</string>
+    <string name="EnterGroupNamePlaceholder">Digite o nome do grupo</string>
+    <string name="MEMBER">MEMBRO</string>
+    <string name="GroupName">Nome do grupo</string>
+    <string name="MEMBERS">MEMBROS</string>
+    <string name="AllContacts">TODOS OS CONTATOS</string>
+
+    <!--group info view-->
+    <string name="EnterGroupNameTitle">DIGITE O NOME DO GRUPO</string>
+    <string name="SharedMedia">Mídia compartilhada</string>
+    <string name="GroupInfo">Informações do Grupo</string>
+    <string name="SHAREDMEDIA">MÍDIA COMPARTILHADA</string>
+    <string name="SETTINGS">CONFIGURAÇÕES</string>
+    <string name="AddMember">Adicionar membro</string>
+    <string name="DeleteAndExit">Apagar e sair do grupo</string>
+    <string name="Notifications">Notificações</string>
+    <string name="KickFromGroup">Remover do grupo</string>
+
+    <!--contact info view-->
+    <string name="ShareContact">Compartilhar</string>
+    <string name="AddContact">Adicionar</string>
+    <string name="BlockContact">Bloquear</string>
+    <string name="EditContact">Editar</string>
+    <string name="DeleteContact">Apagar</string>
+    <string name="PhoneHome">CASA</string>
+    <string name="PhoneMobile">CELULAR</string>
+    <string name="PhoneWork">TRABALHO</string>
+    <string name="PhoneOther">OUTRO</string>
+    <string name="PhoneMain">PRINCIPAL</string>
+    <string name="ContactInfo">Informações do Contato</string>
+    <string name="PHONE">TELEFONE</string>
+    <string name="StartEncryptedChat">Iniciar Conversa Secreta</string>
+    <string name="CreateEncryptedChatError">Ocorreu um erro.</string>
+    <string name="CreateEncryptedChatOutdatedError">Não é possível criar uma conversa secreta com %1$s.\n\n%2$s está usando uma versão antiga do Telegram e precisa ser atualizada.</string>
+    <string name="SecretTitle">Conversa Secreta</string>
+    <string name="EncryptionKey">Chave criptográfica</string>
+    <string name="MessageLifetime">Tempo de autodestruição</string>
+    <string name="ShortMessageLifetimeForever">Desativado</string>
+    <string name="ShortMessageLifetime2s">2s</string>
+    <string name="ShortMessageLifetime5s">5s</string>
+    <string name="ShortMessageLifetime1m">1m</string>
+    <string name="ShortMessageLifetime1h">1h</string>
+    <string name="ShortMessageLifetime1d">1d</string>
+    <string name="ShortMessageLifetime1w">1 sem.</string>
+    <string name="EncryptionKeyDescription">Esta imagem é uma visualização da chave criptográfica para esta conversa secreta com <![CDATA[<b>]]>%1$s.<![CDATA[</b>]]>.<![CDATA[<br><br>]]>Se esta imagem aparecer da mesma forma no telefone de <![CDATA[<b>]]>%2$s\'s<![CDATA[</b>]]>, sua conversa é 200%% segura.<![CDATA[<br><br>]]>Saiba mais em telegram.org</string>
+
+    <!--settings view-->
+    <string name="ResetNotificationsText">Restaurar todas as configurações de notificação</string>
+    <string name="TextSize">Tamanho do texto nas mensagens</string>
+    <string name="AskAQuestion">Fazer uma pergunta</string>
+    <string name="EnableAnimations">Permitir animações</string>
+    <string name="Unblock">Desbloquear</string>
+    <string name="UnblockText">Toque e segure no usuário para desbloquear</string>
+    <string name="NoBlocked">Nenhum usuário bloqueado</string>
+    <string name="YourPhoneNumber">SEU NÚMERO DE TELEFONE</string>
+    <string name="MessageNotifications">NOTIFICAÇÕES DE MENSAGENS</string>
+    <string name="Alert">Alerta</string>
+    <string name="MessagePreview">Visualização de Mensagem</string>
+    <string name="GroupNotifications">NOTIFICAÇÕES DO GRUPO</string>
+    <string name="Sound">Som</string>
+    <string name="InAppNotifications">NOTIFICAÇÕES NO APLICATIVO</string>
+    <string name="InAppSounds">Sons no Aplicativo</string>
+    <string name="InAppVibrate">Vibração no Aplicativo</string>
+    <string name="Vibrate">Vibrar</string>
+    <string name="InAppPreview">Visualização no Aplicativo</string>
+    <string name="Reset">LIMPAR</string>
+    <string name="ResetAllNotifications">Limpar todas as notificações</string>
+    <string name="UndoAllCustom">Desfazer todas as configurações de notificação para todos os seus contatos e grupos</string>
+    <string name="NotificationsAndSounds">Notificações e Sons</string>
+    <string name="BlockedUsers">Usuários bloqueados</string>
+    <string name="SaveIncomingPhotos">Salvar fotos que chegam</string>
+    <string name="LogOut">Sair</string>
+    <string name="YourFirstNameAndLastName">SEU NOME E SOBRENOME</string>
+    <string name="NoSound">Sem som</string>
+    <string name="Default">Padrão</string>
+    <string name="Support">SUPORTE</string>
+    <string name="ChatBackground">Papel de parede</string>
+    <string name="MessagesSettings">MENSAGENS</string>
+    <string name="SendByEnter">Enviar usando \'Enter\'</string>
+    <string name="TerminateAllSessions">Terminar todas as outras sessões</string>
+    <string name="AutomaticPhotoDownload">BAIXAR FOTOS AUTOMÁTICAMENTE</string>
+    <string name="AutomaticAudioDownload">BAIXAR ÁUDIO AUTOMATICAMENTE</string>
+    <string name="AutomaticPhotoDownloadGroups">Grupos</string>
+    <string name="AutomaticPhotoDownloadPrivateChats">Conversas Privadas</string>
+    <string name="Events">EVENTOS</string>
+    <string name="ContactJoined">Contato entrou para o Telegram</string>
+    <string name="Pebble">PEBBLE</string>
+    <string name="Language">Idioma</string>
+    <string name="AskAQuestionInfo">Por favor compreenda que o Telegram é feito por voluntários. Tentamos responder o mais rápido possível, mas pode demorar um pouco. <![CDATA[<br><br>]]>Por favor acesse o <![CDATA[<a href="http://telegram.org/faq#general">FAQ do Telegram</a>]]>: temos respostas para algumas questões, assim como dicas importantes à <![CDATA[<a href="http://telegram.org/faq#troubleshooting">resolução de problemas</a>]]>.</string>
+    <string name="AskButton">Pergunte a um voluntário</string>
+    <string name="TelegramFaq">FAQ do Telegram</string>
+    <string name="TelegramFaqUrl">https://telegram.org/faq</string>
+    <string name="DeleteLocalization">Apagar localização?</string>
+    <string name="IncorrectLocalization">Arquivo de localização incorreto</string>
+    <string name="Enabled">Ativado</string>
+    <string name="Disabled">Desativado</string>
+    <string name="NotificationsService">Serviço de Notificações</string>
+    <string name="NotificationsServiceDisableInfo">Se os serviços do Google Play forem suficientes para você receber as notificações, você pode desabilitar o \"Serviço de Notificações\". Porém, nós recomendamos deixá-lo ativo para que o aplicativo continue rodando em segundo plano e recebendo notificações instantâneas.</string>
+    <string name="SortBy">Ordenar Por</string>
+    <string name="ImportContacts">Importar Contatos</string>
+    <string name="WiFiOnly">Unicamente com WiFi</string>
+    <string name="SortFirstName">Primeiro nome</string>
+    <string name="SortLastName">Sobrenome</string>
+
+    <!--media view-->
+    <string name="NoMedia">Ainda não há mídia compartilhada</string>
+    <string name="CancelDownload">Cancelar Download</string>
+
+    <!--map view-->
+    <string name="MyLocation">Minha localização</string>
+    <string name="Map">Mapa</string>
+    <string name="Satellite">Satélite</string>
+    <string name="Hybrid">Híbrido</string>
+    <string name="MetersAway">m de distância</string>
+    <string name="KMetersAway">km de distância</string>
+    <string name="SendLocation">Enviar Localização</string>
+    <string name="ShareLocation">Compartilhar Localização</string>
+
+    <!--photo gallery view-->
+    <string name="ShowAllMedia">Mostrar todas as mídias</string>
+    <string name="SaveToGallery">Salvar na galeria</string>
+    <string name="Of">%1$d de %2$d</string>
+    <string name="Gallery">Galeria</string>
+    <string name="AllPhotos">Todas as fotos</string>
+    <string name="NoPhotos">Ainda não há fotos</string>
+
+    <!--button titles-->
+    <string name="Next">Próximo</string>
+    <string name="Back">Voltar</string>
+    <string name="Done">Concluído</string>
+    <string name="Open">Abrir</string>
+    <string name="Cancel">Cancelar</string>
+    <string name="Add">Adicionar</string>
+    <string name="Edit">Editar</string>
+    <string name="Send">Enviar</string>
+    <string name="Call">Ligar</string>
+    <string name="Copy">Copiar</string>
+    <string name="Delete">Apagar</string>
+    <string name="Forward">Encaminhar</string>
+    <string name="Retry">Tentar novamente</string>
+    <string name="FromCamera">Câmera</string>
+    <string name="FromGalley">Galeria</string>
+    <string name="DeletePhoto">Apagar foto</string>
+    <string name="OpenPhoto"> Abrir foto</string>
+    <string name="Set">Aplicar</string>
+    <string name="OK">OK</string>
+
+    <!--messages-->
+    <string name="ActionKickUser">un1 removeu un2</string>
+    <string name="ActionLeftUser">un1 saiu do grupo</string>
+    <string name="ActionAddUser">un1 adicionou un2</string>
+    <string name="ActionRemovedPhoto">un1 removeu foto do grupo</string>
+    <string name="ActionChangedPhoto">un1 mudou a foto do grupo</string>
+    <string name="ActionChangedTitle">un1 mudou o nome do grupo para un2</string>
+    <string name="ActionCreateGroup">un1 criou o grupo</string>
+    <string name="ActionYouKickUser">Você removeu un2</string>
+    <string name="ActionYouLeftUser">Você saiu do grupo</string>
+    <string name="ActionYouAddUser">Você adicionou un2</string>
+    <string name="ActionYouRemovedPhoto">Você removeu a foto do grupo</string>
+    <string name="ActionYouChangedPhoto">Você mudou a foto do grupo</string>
+    <string name="ActionYouChangedTitle">Você mudou o nome do grupo para un2</string>
+    <string name="ActionYouCreateGroup">Você criou o grupo</string>
+    <string name="ActionKickUserYou">un1 removeu você</string>
+    <string name="ActionAddUserYou">un1 adicionou você</string>
+    <string name="UnsuppotedMedia">Esta mensagem não é suportada na sua versão do Telegram. Para visualiza-la atualize seu aplicativo em http://telegram.org/update</string>
+    <string name="AttachPhoto">Foto</string>
+    <string name="AttachVideo">Vídeo</string>
+    <string name="AttachLocation">Localização</string>
+    <string name="AttachContact">Contato</string>
+    <string name="AttachDocument">Documento</string>
+    <string name="AttachAudio">Áudio</string>
+    <string name="FromYou">Você</string>
+    <string name="ActionTakeScreenshootYou">Você realizou uma captura da tela!</string>
+    <string name="ActionTakeScreenshoot">un1 realizou uma captura da tela!</string>
+
+    <!--Alert messages-->
+    <string name="InvalidPhoneNumber">Número de telefone inválido</string>
+    <string name="CodeExpired">O código expirou. Por favor, identifique-se novamente.</string>
+    <string name="FloodWait">Muitas tentativas. Por favor, tente novamente mais tarde.</string>
+    <string name="InvalidCode">Código inválido</string>
+    <string name="InvalidFirstName">Nome inválido</string>
+    <string name="InvalidLastName">Sobrenome inválido</string>
+    <string name="Loading">Carregando...</string>
+    <string name="NoPlayerInstalled">Você não possui um reprodutor de vídeo, instale um para continuar</string>
+    <string name="NoHandleAppInstalled">Você não possui algum aplicativo que pode lidar com o tipo MIME \'%1$s\'. Por favor, instale um para continuar</string>
+    <string name="InviteUser">Este usuário ainda não possui Telegram, deseja enviar um convite?</string>
+    <string name="AreYouSure">Você tem certeza?</string>
+    <string name="AddContactQ">Adicionar contato?</string>
+    <string name="AddToTheGroup">Adicionar %1$s ao grupo?</string>
+    <string name="ForwardMessagesTo">Encaminhar mensagem para %1$s?</string>
+    <string name="DeleteChatQuestion">Apagar esta conversa?</string>
+
+    <!--Intro view-->
+    <string name="Page1Title">Telegram</string>
+    <string name="Page2Title">Rápido</string>
+    <string name="Page3Title">Gratuito</string>
+    <string name="Page4Title">Seguro</string>
+    <string name="Page5Title">Poderoso</string>
+    <string name="Page6Title">Baseado na nuvem</string>
+    <string name="Page7Title">Privado</string>
+    <string name="Page1Message">Bem-vindo à era das mensagens rápidas e seguras</string>
+    <string name="Page2Message"><![CDATA[<b>Telegram</b>]]> envia mensagens mais rapidamente do que<![CDATA[<br/>]]>qualquer outro aplicativo</string>
+    <string name="Page3Message"><![CDATA[<b>Telegram</b>]]> será gratuito para sempre. Sem propaganda.<![CDATA[<br/>]]>Sem taxa de assinatura</string>
+    <string name="Page4Message"><![CDATA[<b>Telegram</b>]]> mantém suas mensagens seguras<![CDATA[<br/>]]>contra ataques de hackers</string>
+    <string name="Page5Message"><![CDATA[<b>Telegram</b>]]> não tem limites para o tamanho de<![CDATA[<br/>]]>suas mídias e conversas</string>
+    <string name="Page6Message"><![CDATA[<b>Telegram</b>]]> permite que você acesse suas mensagens<![CDATA[<br/>]]>a partir de vários dispositivos</string>
+    <string name="Page7Message">As mensagens do <![CDATA[<b>Telegram</b>]]> são fortemente criptografadas<![CDATA[<br/>]]>e podem se autodestruir</string>
+    <string name="StartMessaging">Comece a conversar</string>
+
+    <!--Don't change this! Not for localization!-->
+    <string name="CacheTag">CACHE_TAG</string>
+</resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-pt-rPT/strings.xml b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
new file mode 100644
index 000000000..faf698f08
--- /dev/null
+++ b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
@@ -0,0 +1,384 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<!--https://www.transifex.com/projects/p/telegram/language/pt_PT/members/-->
+
+<resources>
+    <string name="AppName">Telegram</string>
+
+    <string name="LanguageName">Português (Portugal)</string>
+    <string name="LanguageNameInEnglish">Portuguese (Portugal)</string>
+    <string name="LanguageCode">pt_PT</string>
+
+    <!--signin view-->
+    <string name="YourPhone">O seu telefone</string>
+    <string name="StartText">Confirme o código do seu país\ne introduza o seu número de telefone.</string>
+    <string name="ChooseCountry">Escolha um país</string>
+    <string name="WrongCountry">Código de país incorreto</string>
+
+    <!--code enter view-->
+    <string name="YourCode">O seu código</string>
+    <string name="SentSmsCode">Acabamos de enviar ao seu telefone uma SMS com um código de ativação</string>
+    <string name="CallText">Vamos ligar para você em</string>
+    <string name="Calling">A ligar...</string>
+    <string name="Code">Código</string>
+    <string name="WrongNumber">Número incorreto?</string>
+
+    <!--signup view-->
+    <string name="YourName">O seu nome</string>
+    <string name="RegisterText">Indique o seu nome e apelidos</string>
+    <!--<string name="RegisterText">Set up your name and picture</string>-->
+    <string name="FirstName">Nome (obrigatório)</string>
+    <string name="LastName">Apelidos (opcional)</string>
+    <string name="CancelRegistration">Cancelar o registo</string>
+
+    <!--chats view-->
+    <string name="Chats">Chats</string>
+    <string name="Search">Pesquisar</string>
+    <string name="NewMessages">Novas mensagens</string>
+    <string name="Settings">Definições</string>
+    <string name="Contacts">Contactos</string>
+    <string name="NewGroup">Novo grupo</string>
+    <string name="Yesterday">ontem</string>
+    <string name="NoResult">Sem resultados</string>
+    <string name="NoChats">Ainda não há chats...</string>
+    <string name="NoChatsHelp">Comece a enviar mensagens premindo\no botão Novas mensagens do canto superior direito\nou vá para a secção de Contactos.</string>
+    <string name="WaitingForNetwork">À espera da rede...</string>
+    <string name="Connecting">A conectar...</string>
+    <string name="Updating">A atualizar...</string>
+    <string name="NewSecretChat">Novo chat secreto</string>
+    <string name="AwaitingEncryption">À espera de que %s se conecte...</string>
+    <string name="EncryptionRejected">Chat secreto cancelado</string>
+    <string name="EncryptionProcessing">A trocar chaves de encriptação...</string>
+    <string name="EncryptedChatStartedOutgoing">%s entrou no seu chat secreto.</string>
+    <string name="EncryptedChatStartedIncoming">Acaba de entrar no chat secreto.</string>
+    <string name="ClearHistory">Limpar histórico</string>
+    <string name="DeleteChat">Eliminar e sair</string>
+    <string name="HiddenName">Nome oculto</string>
+    <string name="SelectChat">Selecionar chat</string>
+
+    <!--documents view-->
+    <string name="SelectFile">Selecionar ficheiro</string>
+    <string name="FreeOfTotal">%1$s de %2$s livres</string>
+    <string name="UnknownError">Erro desconhecido</string>
+    <string name="AccessError">Erro de acesso</string>
+    <string name="NoFiles">Ainda não há ficheiros...</string>
+    <string name="FileUploadLimit">O tamanho do ficheiro não pode ser maior de %1$s</string>
+    <string name="NotMounted">Armazenamento sem montar</string>
+    <string name="UsbActive">Transferência USB ativa</string>
+    <string name="InternalStorage">Armazenamento interno</string>
+    <string name="ExternalStorage">Armazenamento externo</string>
+    <string name="SystemRoot">Raiz do sistema</string>
+    <string name="SdCard">Cartão SD</string>
+
+    <!--chat view-->
+    <string name="Invisible">invisível</string>
+    <string name="Typing">a escrever...</string>
+    <string name="Attach">Anexar</string>
+    <string name="IsTyping">está a escrever...</string>
+    <string name="AreTyping">estão a escrever...</string>
+    <string name="AndMoreTyping">e mais %d pessoas</string>
+    <string name="GotAQuestion">Tem alguma pergunta\nacerca do Telegram?</string>
+    <string name="ChatTakePhoto">Tirar uma foto</string>
+    <string name="ChatGallery">Galeria</string>
+    <string name="ChatLocation">Localização</string>
+    <string name="ChatVideo">Vídeo</string>
+    <string name="ChatDocument">Documento</string>
+    <string name="NoMessages">Ainda não há mensagens...</string>
+    <string name="ViewPhoto">Ver foto</string>
+    <string name="ViewLocation">Ver localização</string>
+    <string name="ViewVideo">Reproduzir vídeo</string>
+    <string name="ForwardedMessage">Mensagem reencaminhada</string>
+    <string name="From">De</string>
+    <string name="NoRecent">Não há recentes</string>
+    <string name="Members">membros</string>
+    <string name="Message">Mensagem</string>
+    <string name="TypeMessage">Escrever mensagem</string>
+    <string name="DOWNLOAD">Transferir</string>
+    <string name="Selected">%d selecionado</string>
+    <string name="ShareMyContactInfo">PARTILHAR A MINHA INFORMAÇÃO DE CONTACTO</string>
+    <string name="AddToContacts">ADICIONAR AOS CONTACTOS</string>
+    <string name="EncryptedPlaceholderTitleIncoming">%s convidou-o a um chat secreto.</string>
+    <string name="EncryptedPlaceholderTitleOutgoing">Convidou %s para um chat secreto.</string>
+    <string name="EncryptedDescriptionTitle">Os chats secretos:</string>
+    <string name="EncryptedDescription1">Utilizam encriptação ponto a ponto</string>
+    <string name="EncryptedDescription2">Não deixam rasto nos nossos servidores</string>
+    <string name="EncryptedDescription3">Têm temporizador para a autodestruição das mensagens</string>
+    <string name="EncryptedDescription4">Não permitem o reencaminhamento</string>
+    <string name="OneNewMessage">%1$d nova mensagem</string>
+    <string name="FewNewMessages">%1$d novas mensagens</string>
+    <string name="YouWereKicked">Foi removido do grupo</string>
+    <string name="YouLeft">Deixou este grupo</string>
+    <string name="DeleteThisGroup">Eliminar este grupo</string>
+    <string name="DeleteThisChat">Eliminar este chat</string>
+    <string name="SlideToCancel">DESLIZAR PARA CANCELAR</string>
+    <string name="SaveToDownloads">Guardar nas transferências</string>
+    <string name="ApplyLocalizationFile">Aplicar o ficheiro de localização</string>
+    <string name="UnsupportedAttachment">Unsupported attachment</string>
+
+    <!--notification-->
+    <string name="EncryptedChatRequested">Chat secreto pedido</string>
+    <string name="EncryptedChatAccepted">Chat secreto iniciado</string>
+    <string name="MessageLifetimeChanged">%1$s ativou a autodestruição em %2$s</string>
+    <string name="MessageLifetimeChangedOutgoing">Ativou a autodestruição em %1$s</string>
+    <string name="MessageLifetimeRemoved">%1$s desativou a autodestruição</string>
+    <string name="MessageLifetimeYouRemoved">Desativou a autodestruição</string>
+    <string name="MessageLifetime2s">2 segundos</string>
+    <string name="MessageLifetime5s">5 segundos</string>
+    <string name="MessageLifetime1m">1 minuto</string>
+    <string name="MessageLifetime1h">1 hora</string>
+    <string name="MessageLifetime1d">1 dia</string>
+    <string name="MessageLifetime1w">1 semana</string>
+    <string name="YouHaveNewMessage">Tem uma nova mensagem</string>
+    <string name="NotificationMessageText">%1$s: %2$s</string>
+    <string name="NotificationMessageNoText">%1$s enviou uma mensagem</string>
+    <string name="NotificationMessagePhoto">%1$s enviou uma foto</string>
+    <string name="NotificationMessageVideo">%1$s enviou um vídeo</string>
+    <string name="NotificationMessageContact">%1$s partilhou um contacto</string>
+    <string name="NotificationMessageMap">%1$s enviou uma localização</string>
+    <string name="NotificationMessageDocument">%1$s enviou um documento</string>
+    <string name="NotificationMessageAudio">%1$s enviou um áudio</string>
+    <string name="NotificationMessageGroupText">%1$s @ %2$s: %3$s</string>
+    <string name="NotificationMessageGroupNoText">%1$s enviou uma mensagem para o grupo %2$s</string>
+    <string name="NotificationMessageGroupPhoto">%1$s enviou uma foto para o grupo %2$s</string>
+    <string name="NotificationMessageGroupVideo">%1$s enviou um vídeo para o grupo %2$s</string>
+    <string name="NotificationMessageGroupContact">%1$s partilhou um contacto no grupo %2$s</string>
+    <string name="NotificationMessageGroupMap">%1$s enviou uma localização para o grupo %2$s</string>
+    <string name="NotificationMessageGroupDocument">%1$s enviou um documento para o grupo %2$s</string>
+    <string name="NotificationMessageGroupAudio">%1$senviou um áudio para o grupo %2$s</string>
+    <string name="NotificationInvitedToGroup">%1$s convidou-o ao grupo %2$s</string>
+    <string name="NotificationEditedGroupName">%1$s renomeou o grupo %2$s</string>
+    <string name="NotificationEditedGroupPhoto">%1$s alterou a foto do grupo %2$s</string>
+    <string name="NotificationGroupAddMember">%1$s convidou %3$s ao grupo %2$s</string>
+    <string name="NotificationGroupKickMember">%1$s removeu %3$s do grupo %2$s</string>
+    <string name="NotificationGroupKickYou">%1$s removeu-o do grupo %2$s</string>
+    <string name="NotificationGroupLeftMember">%1$s deixou o grupo %2$s</string>
+    <string name="NotificationContactJoined">%1$s aderiu ao Telegram!</string>
+    <string name="NotificationUnrecognizedDevice">%1$s,\nDetetámos um acesso à sua conta a partir de um novo dispositivo o dia %2$s\n\nDispositivo: %3$s\nLocalização: %4$s\n\nSe não foi você, pode ir a Definições - Terminar todas as sessões.\n\nObrigado,\nA equipa do Telegram</string>
+    <string name="NotificationContactNewPhoto">%1$s atualizou a sua foto de perfil</string>
+
+    <!--contacts view-->
+    <string name="SelectContact">Selecionar contacto</string>
+    <string name="NoContacts">Ainda não há contactos</string>
+    <string name="InviteText">Ei, vamos mudar para o Telegram: http://telegram.org/dl2</string>
+    <string name="TodayAt">hoje às</string>
+    <string name="YesterdayAt">ontem às</string>
+    <string name="OtherAt">às</string>
+    <string name="Online">conectado</string>
+    <string name="Offline">desconectado</string>
+    <string name="LastSeen">última visualização</string>
+    <string name="LastSeenDate">última visualização</string>
+    <string name="InviteFriends">Convidar amigos</string>
+
+    <!--group create view-->
+    <string name="SendMessageTo">Enviar mensagem para...</string>
+    <string name="EnterGroupNamePlaceholder">Introduza o nome do grupo</string>
+    <string name="MEMBER">MEMBRO</string>
+    <string name="GroupName">Nome do grupo</string>
+    <string name="MEMBERS">MEMBROS</string>
+    <string name="AllContacts">TODOS OS CONTACTOS</string>
+
+    <!--group info view-->
+    <string name="EnterGroupNameTitle">INTRODUZA O NOME DO GRUPO</string>
+    <string name="SharedMedia">Multimédia partilhado</string>
+    <string name="GroupInfo">Informação do grupo</string>
+    <string name="SHAREDMEDIA">MULTIMÉDIA PARTILHADO</string>
+    <string name="SETTINGS">DEFINIÇÕES</string>
+    <string name="AddMember">Adicionar membro</string>
+    <string name="DeleteAndExit">Eliminar e sair do grupo</string>
+    <string name="Notifications">Notificações</string>
+    <string name="KickFromGroup">Remover do grupo</string>
+
+    <!--contact info view-->
+    <string name="ShareContact">Partilhar</string>
+    <string name="AddContact">Adicionar</string>
+    <string name="BlockContact">Bloquear</string>
+    <string name="EditContact">Editar</string>
+    <string name="DeleteContact">Eliminar</string>
+    <string name="PhoneHome">CASA</string>
+    <string name="PhoneMobile">TELEMÓVEL</string>
+    <string name="PhoneWork">TRABALHO</string>
+    <string name="PhoneOther">OUTRO</string>
+    <string name="PhoneMain">PRINCIPAL</string>
+    <string name="ContactInfo">Informação de contacto</string>
+    <string name="PHONE">TELEFONE</string>
+    <string name="StartEncryptedChat">Iniciar chat secreto</string>
+    <string name="CreateEncryptedChatError">Ocorreu um erro.</string>
+    <string name="CreateEncryptedChatOutdatedError">Não é possível criar um chat secreto com %1$s.\n\n%2$s está a utilizar uma versão anterior do Telegram e primeiro precisa atualizá-lo.</string>
+    <string name="SecretTitle">Chat secreto</string>
+    <string name="EncryptionKey">Chave de encriptação</string>
+    <string name="MessageLifetime">Autodestruição</string>
+    <string name="ShortMessageLifetimeForever">Desligado</string>
+    <string name="ShortMessageLifetime2s">2s</string>
+    <string name="ShortMessageLifetime5s">5s</string>
+    <string name="ShortMessageLifetime1m">1m</string>
+    <string name="ShortMessageLifetime1h">1h</string>
+    <string name="ShortMessageLifetime1d">1d</string>
+    <string name="ShortMessageLifetime1w">1sem</string>
+    <string name="EncryptionKeyDescription">Esta imagem é uma visualização da chave de encriptação deste chat secreto com <![CDATA[<b>]]>%1$s<![CDATA[</b>]]>.<![CDATA[<br><br>]]>Se esta imagem for a mesma que a do telefone de <![CDATA[<b>]]>%2$s<![CDATA[</b>]]>, o seu chat é 200%% seguro.<![CDATA[<br><br>]]>Mais informação em telegram.org</string>
+
+    <!--settings view-->
+    <string name="ResetNotificationsText">Repor todas as notificações ao valor predefinido</string>
+    <string name="TextSize">Tamanho do texto das mensagens</string>
+    <string name="AskAQuestion">Fazer uma pergunta</string>
+    <string name="EnableAnimations">Ativar animações</string>
+    <string name="Unblock">Desbloquear</string>
+    <string name="UnblockText">Toque sem soltar num utilizador para desbloquear.</string>
+    <string name="NoBlocked">Ainda não há utilizadores bloqueados</string>
+    <string name="YourPhoneNumber">O SEU NÚMERO DE TELEFONE</string>
+    <string name="MessageNotifications">NOTIFICAÇÕES DE MENSAGENS</string>
+    <string name="Alert">Alerta</string>
+    <string name="MessagePreview">Pré-visualização da mensagem</string>
+    <string name="GroupNotifications">NOTIFICAÇÕES DE GRUPO</string>
+    <string name="Sound">Som</string>
+    <string name="InAppNotifications">NOTIFICAÇÕES NA APLICAÇÃO</string>
+    <string name="InAppSounds">Sons na aplicação</string>
+    <string name="InAppVibrate">Vibrar na aplicação</string>
+    <string name="Vibrate">Vibrar</string>
+    <string name="InAppPreview">Pré-visualização na aplicação</string>
+    <string name="Reset">REPOR</string>
+    <string name="ResetAllNotifications">Repor todas as notificações</string>
+    <string name="UndoAllCustom">Desfazer as definições personalizadas de notificação para todos os contactos e grupos</string>
+    <string name="NotificationsAndSounds">Notificações e sons</string>
+    <string name="BlockedUsers">Utilizadores bloqueados</string>
+    <string name="SaveIncomingPhotos">Guardar fotos recebidas</string>
+    <string name="LogOut">Terminar sessão</string>
+    <string name="YourFirstNameAndLastName">O SEU NOME E APELIDOS</string>
+    <string name="NoSound">Sem som</string>
+    <string name="Default">Predefinido</string>
+    <string name="Support">SUPORTE</string>
+    <string name="ChatBackground">Fundo do chat</string>
+    <string name="MessagesSettings">MENSAGENS</string>
+    <string name="SendByEnter">Enviar com Enter</string>
+    <string name="TerminateAllSessions">Terminar todas as outras sessões</string>
+    <string name="AutomaticPhotoDownload">TRANSFERÊNCIA AUTOMÁTICA DE FOTOS</string>
+    <string name="AutomaticAudioDownload">TRANSFERÊNCIA AUTOMÁTICA DE ÁUDIO</string>
+    <string name="AutomaticPhotoDownloadGroups">Grupos</string>
+    <string name="AutomaticPhotoDownloadPrivateChats">Chats privados</string>
+    <string name="Events">EVENTOS</string>
+    <string name="ContactJoined">Contactos que aderem ao Telegram</string>
+    <string name="Pebble">PEBBLE</string>
+    <string name="Language">Língua</string>
+    <string name="AskAQuestionInfo">Tenha em conta que o suporte do Telegram está realizado por voluntários. Tentaremos responder o mais rápido possível, mas pode demorar um bocado.<![CDATA[<br><br>]]>Dê uma vista de olhos ao <![CDATA[<a href="http://telegram.org/faq#general">FAQ do Telegram</a>]]>: ali encontrará  respostas às perguntas mais habituais e dicas importantes para a <![CDATA[<a href="http://telegram.org/faq#troubleshooting">resolução de problemas</a>]]>.</string>
+    <string name="AskButton">Pergunte a um voluntário</string>
+    <string name="TelegramFaq">FAQ do Telegram</string>
+    <string name="TelegramFaqUrl">https://telegram.org/faq</string>
+    <string name="DeleteLocalization">Eliminar localização?</string>
+    <string name="IncorrectLocalization">Ficheiro de localização incorreto</string>
+    <string name="Enabled">Ativado</string>
+    <string name="Disabled">Desativado</string>
+    <string name="NotificationsService">Serviço de notificações</string>
+    <string name="NotificationsServiceDisableInfo">Pode desativar o serviço de notificações caso o google play services seja suficiente para receber as suas notificações. No entanto, recomendamos deixá-lo ativado para manter a aplicação a se executar no segundo plano e receber notificações instantâneas.</string>
+    <string name="SortBy">Ordenar por</string>
+    <string name="ImportContacts">Importar contactos</string>
+    <string name="WiFiOnly">Unicamente com WiFi</string>
+    <string name="SortFirstName">Nome</string>
+    <string name="SortLastName">Apelidos</string>
+
+    <!--media view-->
+    <string name="NoMedia">Ainda não há multimédia partilhado</string>
+    <string name="CancelDownload">Cancelar transferência</string>
+
+    <!--map view-->
+    <string name="MyLocation">A minha localização</string>
+    <string name="Map">Mapa</string>
+    <string name="Satellite">Satélite</string>
+    <string name="Hybrid">Híbrido</string>
+    <string name="MetersAway">m de distância</string>
+    <string name="KMetersAway">km de distância</string>
+    <string name="SendLocation">Enviar localização</string>
+    <string name="ShareLocation">Partilhar localização</string>
+
+    <!--photo gallery view-->
+    <string name="ShowAllMedia">Mostrar todo o multimédia</string>
+    <string name="SaveToGallery">Guardar na galeria</string>
+    <string name="Of">%1$d de %2$d</string>
+    <string name="Gallery">Galeria</string>
+    <string name="AllPhotos">Todas as fotos</string>
+    <string name="NoPhotos">Ainda não há fotos</string>
+
+    <!--button titles-->
+    <string name="Next">Seguinte</string>
+    <string name="Back">Anterior</string>
+    <string name="Done">Concluído</string>
+    <string name="Open">Abrir</string>
+    <string name="Cancel">Cancelar</string>
+    <string name="Add">Adicionar</string>
+    <string name="Edit">Editar</string>
+    <string name="Send">Enviar</string>
+    <string name="Call">Ligar</string>
+    <string name="Copy">Copiar</string>
+    <string name="Delete">Eliminar</string>
+    <string name="Forward">Reencaminhar</string>
+    <string name="Retry">Repetir</string>
+    <string name="FromCamera">Da câmara</string>
+    <string name="FromGalley">Da galeria</string>
+    <string name="DeletePhoto">Eliminar foto</string>
+    <string name="OpenPhoto">Abrir foto</string>
+    <string name="Set">Definir</string>
+    <string name="OK">OK</string>
+
+    <!--messages-->
+    <string name="ActionKickUser">un1 removeu un2</string>
+    <string name="ActionLeftUser">un1 deixou o grupo</string>
+    <string name="ActionAddUser">un1 adicionou un2</string>
+    <string name="ActionRemovedPhoto">un1 removeu a foto do grupo</string>
+    <string name="ActionChangedPhoto">un1 alterou a foto do grupo</string>
+    <string name="ActionChangedTitle">un1 renomeou o grupo para un2</string>
+    <string name="ActionCreateGroup">un1 criou o grupo</string>
+    <string name="ActionYouKickUser">Removeu un2</string>
+    <string name="ActionYouLeftUser">Deixou o grupo</string>
+    <string name="ActionYouAddUser">Adicionou un2</string>
+    <string name="ActionYouRemovedPhoto">Removeu a foto do grupo</string>
+    <string name="ActionYouChangedPhoto">Alterou a foto do grupo</string>
+    <string name="ActionYouChangedTitle">Renomeou o grupo para un2</string>
+    <string name="ActionYouCreateGroup">Criou o grupo</string>
+    <string name="ActionKickUserYou">un1 removeu-o</string>
+    <string name="ActionAddUserYou">un1 adicionou-o</string>
+    <string name="UnsuppotedMedia">A sua versão do Telegram não suporta este tipo de mensagem. Atualize a aplicação para visualizá-la: http://telegram.org/update</string>
+    <string name="AttachPhoto">Foto</string>
+    <string name="AttachVideo">Vídeo</string>
+    <string name="AttachLocation">Localização</string>
+    <string name="AttachContact">Contacto</string>
+    <string name="AttachDocument">Documento</string>
+    <string name="AttachAudio">Áudio</string>
+    <string name="FromYou">Você</string>
+    <string name="ActionTakeScreenshootYou">Efetuou uma captura de ecrã</string>
+    <string name="ActionTakeScreenshoot">un1 efetuou uma captura de ecrã</string>
+
+    <!--Alert messages-->
+    <string name="InvalidPhoneNumber">Número de telefone inválido</string>
+    <string name="CodeExpired">O código expirou. Inicie sessão novamente</string>
+    <string name="FloodWait">Demasiadas tentativas. Volte tentar mais tarde</string>
+    <string name="InvalidCode">Código inválido</string>
+    <string name="InvalidFirstName">Nome inválido</string>
+    <string name="InvalidLastName">Apelido inválido</string>
+    <string name="Loading">A carregar...</string>
+    <string name="NoPlayerInstalled">Não tem nenhum reprodutor de vídeo. Para continuar, instale algum</string>
+    <string name="NoHandleAppInstalled">Não tem nenhuma aplicação que controle o tipo de MIME \'%1$s\'. Para continuar, instale alguma</string>
+    <string name="InviteUser">Este utilizador ainda não tem o Telegram. Quer enviar um convite?</string>
+    <string name="AreYouSure">Tem a certeza?</string>
+    <string name="AddContactQ">Adicionar contacto?</string>
+    <string name="AddToTheGroup">Adicionar %1$s ao grupo?</string>
+    <string name="ForwardMessagesTo">Reencaminhar mensagens para %1$s?</string>
+    <string name="DeleteChatQuestion">Eliminar este chat?</string>
+
+    <!--Intro view-->
+    <string name="Page1Title">Telegram</string>
+    <string name="Page2Title">Rápido</string>
+    <string name="Page3Title">Grátis</string>
+    <string name="Page4Title">Seguro</string>
+    <string name="Page5Title">Potente</string>
+    <string name="Page6Title">Baseado na nuvem</string>
+    <string name="Page7Title">Privado</string>
+    <string name="Page1Message">Bem-vindo à era das mensagens rápidas e seguras</string>
+    <string name="Page2Message"><![CDATA[<b>Telegram</b>]]> entrega mensagens mais rápido do que<![CDATA[<br/>]]>qualquer outra aplicação</string>
+    <string name="Page3Message"><![CDATA[<b>Telegram</b>]]> é grátis para sempre. Sem anúncios.<![CDATA[<br/>]]>Sem taxas de subscrição</string>
+    <string name="Page4Message"><![CDATA[<b>Telegram</b>]]> mantém as suas mensagens a salvo<![CDATA[<br/>]]>de ataques de hackers</string>
+    <string name="Page5Message"><![CDATA[<b>Telegram</b>]]> não tem limite de tamanho para<![CDATA[<br/>]]>os seus chats e ficheiros multimédia</string>
+    <string name="Page6Message"><![CDATA[<b>Telegram</b>]]> permite aceder às mensagens<![CDATA[<br/>]]>a partir de múltiplos dispositivos</string>
+    <string name="Page7Message">As mensagens do <![CDATA[<b>Telegram</b>]]> estão fortemente encriptadas<![CDATA[<br/>]]>e podem ser autodestruídas</string>
+    <string name="StartMessaging">Comece a conversar</string>
+
+    <!--Don't change this! Not for localization!-->
+    <string name="CacheTag">CACHE_TAG</string>
+</resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 2c86f3e17..88bbefdfe 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -113,6 +113,7 @@
     <string name="SlideToCancel">SLIDE TO CANCEL</string>
     <string name="SaveToDownloads">Save to downloads</string>
     <string name="ApplyLocalizationFile">Apply localization file</string>
+    <string name="UnsupportedAttachment">Unsupported attachment</string>
 
     <!--notification-->
     <string name="EncryptedChatRequested">Secret chat requested</string>
@@ -293,6 +294,8 @@
     <string name="SaveToGallery">Save to gallery</string>
     <string name="Of">%1$d of %2$d</string>
     <string name="Gallery">Gallery</string>
+    <string name="AllPhotos">All Photos</string>
+    <string name="NoPhotos">No photos yet</string>
 
     <!--button titles-->
     <string name="Next">Next</string>
diff --git a/TMessagesProj/src/main/res/values/styles.xml b/TMessagesProj/src/main/res/values/styles.xml
index dcaa2c83a..2f71635a7 100644
--- a/TMessagesProj/src/main/res/values/styles.xml
+++ b/TMessagesProj/src/main/res/values/styles.xml
@@ -8,7 +8,6 @@
         <item name="android:colorBackground">@android:color/white</item>
         <item name="android:windowBackground">@android:color/white</item>
         <item name="android:windowContentOverlay">@drawable/shadow</item>
-        <item name="android:windowNoTitle">true</item>
     </style>
 
     <style name="Theme.TMessages" parent="@android:style/Theme.Holo.Light">
