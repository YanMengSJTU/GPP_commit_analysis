diff --git a/TMessagesProj/src/main/AndroidManifest.xml b/TMessagesProj/src/main/AndroidManifest.xml
index 12a019ecd..d93057d41 100644
--- a/TMessagesProj/src/main/AndroidManifest.xml
+++ b/TMessagesProj/src/main/AndroidManifest.xml
@@ -190,7 +190,8 @@
                 android:taskAffinity=""
                 android:theme="@style/Theme.TMessages.PopupNotification"
                 android:resizeableActivity="false"
-                android:windowSoftInputMode="adjustResize|stateHidden">
+                android:windowSoftInputMode="adjustResize|stateHidden"
+                tools:targetApi="n">
         </activity>
         <activity
                 android:name="org.telegram.ui.VoIPActivity"
@@ -200,11 +201,11 @@
                 android:taskAffinity="${applicationId}.voip">
         </activity>
         <!--<activity-->
-                <!--android:name="org.telegram.ui.VoIPGroupActivity"-->
-                <!--android:configChanges="keyboard|keyboardHidden|orientation|screenSize"-->
-                <!--android:excludeFromRecents="true"-->
-                <!--android:windowSoftInputMode="adjustNothing"-->
-                <!--android:taskAffinity="${applicationId}.voip">-->
+        <!--android:name="org.telegram.ui.VoIPGroupActivity"-->
+        <!--android:configChanges="keyboard|keyboardHidden|orientation|screenSize"-->
+        <!--android:excludeFromRecents="true"-->
+        <!--android:windowSoftInputMode="adjustNothing"-->
+        <!--android:taskAffinity="${applicationId}.voip">-->
         <!--</activity>-->
         <activity android:name="org.telegram.ui.VoIPPermissionActivity"
                   android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
diff --git a/TMessagesProj/src/main/java/io/bettergram/tools/DialogsObject.java b/TMessagesProj/src/main/java/io/bettergram/tools/DialogsObject.java
index 7f9b8a368..7af9893da 100644
--- a/TMessagesProj/src/main/java/io/bettergram/tools/DialogsObject.java
+++ b/TMessagesProj/src/main/java/io/bettergram/tools/DialogsObject.java
@@ -8,19 +8,6 @@
 public class DialogsObject extends DialogObject {
 
     public static boolean isGroup(TLRPC.TL_dialog d) {
-//        if (DialogObject.isChannel(d)) {
-//            MessagesController messagesController = MessagesController.getInstance(UserConfig.selectedAccount);
-//            TLRPC.Chat chat = messagesController.getChat(-getLowerId(d));
-//            return (
-//                chat != null && (
-//                    chat.megagroup && (
-//                        chat.admin_rights != null && (
-//                            chat.admin_rights.post_messages || chat.admin_rights.add_admins
-//                        )
-//                    ) || chat.creator
-//                )
-//            );
-//        }
         return getHigherId(d) != 0;
     }
 
@@ -30,6 +17,23 @@ public static boolean isDirect(TLRPC.TL_dialog d) {
         return getHigherId(d) == 0;
     }
 
+    public static boolean isAnnouncement(TLRPC.TL_dialog d) {
+        if (DialogObject.isChannel(d)) {
+            MessagesController messagesController = MessagesController.getInstance(UserConfig.selectedAccount);
+            TLRPC.Chat chat = messagesController.getChat(-getLowerId(d));
+            return (
+                    chat != null && (
+                            chat.megagroup && (
+                                    chat.admin_rights != null && (
+                                            chat.admin_rights.post_messages || chat.admin_rights.add_admins
+                                    )
+                            ) || chat.creator
+                    )
+            );
+        }
+        return false;
+    }
+
     private static int getHigherId(TLRPC.TL_dialog d) {
         return (int) (d.id >> 32);
     }
diff --git a/TMessagesProj/src/main/java/io/bettergram/ui/adapters/BetterDialogsAdapter.java b/TMessagesProj/src/main/java/io/bettergram/ui/adapters/BetterDialogsAdapter.java
index 29e1695c1..700b0de95 100644
--- a/TMessagesProj/src/main/java/io/bettergram/ui/adapters/BetterDialogsAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/ui/adapters/BetterDialogsAdapter.java
@@ -15,10 +15,10 @@
 
 public class BetterDialogsAdapter extends DialogsAdapter {
     private static final Mapper<ListUtil.Filter<TLRPC.TL_dialog>> filterMapper = new Mapper<ListUtil.Filter<TLRPC.TL_dialog>>()
-        .defaultValue(dialog->false)
-        .add(101, DialogsObject::isDirect)
-        .add(102, DialogsObject::isGroup)
-        ;
+            .defaultValue(dialog -> false)
+            .add(101, DialogsObject::isDirect)
+            .add(102, DialogsObject::isGroup)
+            .add(103, DialogsObject::isAnnouncement);
     private int currentAccount = UserConfig.selectedAccount;
     private List<TLRPC.TL_dialog> cache = null;
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PlusPagerSlidingTabStrip.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PlusPagerSlidingTabStrip.java
index 275c8b3a6..c333fe243 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PlusPagerSlidingTabStrip.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PlusPagerSlidingTabStrip.java
@@ -20,14 +20,12 @@
  * limitations under the License.
  */
 
+import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.content.Context;
 import android.content.SharedPreferences;
-import android.graphics.Canvas;
-import android.graphics.Paint;
+import android.graphics.*;
 import android.graphics.Paint.Style;
-import android.graphics.PorterDuff;
-import android.graphics.Typeface;
 import android.graphics.drawable.GradientDrawable;
 import android.os.Build;
 import android.os.Parcel;
@@ -58,13 +56,16 @@
 
     public interface IconTabProvider {
         int getPageIconResId(int position);
+
         String getPageTitle(int position);
     }
 
     public interface PlusScrollSlidingTabStripDelegate {
         //void onPageSelected(int page);
         void onTabLongClick(int position);
+
         void onTabsUpdated();
+
         void onTabClick();
     }
 
@@ -187,13 +188,13 @@ public void notifyDataSetChanged() {
         //Log.e("PlusPager", "Plus Pager notifyDataSetChanged");
         tabsContainer.removeAllViews();
         tabCount = pager.getAdapter().getCount();
-        if(tabCount < 2){
+        if (tabCount < 2) {
             return;
         }
         for (int i = 0; i < tabCount; i++) {
-            if(tabTitlesMode){
+            if (tabTitlesMode) {
                 addTextTabWithCounter(i, ((IconTabProvider) pager.getAdapter()).getPageTitle(i));
-            } else{
+            } else {
                 addIconTabWithCounter(i, ((IconTabProvider) pager.getAdapter()).getPageIconResId(i));
             }
         }
@@ -213,7 +214,7 @@ public void onGlobalLayout() {
                 //modified to check if center alignment is true
                 if (tabTitlesMode) {
                     scrollToChild2(currentPosition, 0);
-                }else {
+                } else {
                     scrollToChild(currentPosition, 0);
                 }
             }
@@ -263,8 +264,8 @@ public void addTabWithCounter(final int position, View view) {
             @Override
             public void onClick(View v) {
                 //Log.e("PlusPager", "position " + position + " / " + pager.getCurrentItem());
-                if(position == pager.getCurrentItem()){
-                    if(delegate != null){
+                if (position == pager.getCurrentItem()) {
+                    if (delegate != null) {
                         delegate.onTabClick();
                     }
                 } else {
@@ -276,7 +277,7 @@ public void onClick(View v) {
         });
         view.setOnLongClickListener(new View.OnLongClickListener() {
             public boolean onLongClick(View view) {
-                if(delegate != null){
+                if (delegate != null) {
                     delegate.onTabLongClick(position);
                 }
                 return true;
@@ -293,7 +294,7 @@ public boolean onLongClick(View view) {
         textView.setGravity(Gravity.CENTER);
         //textView.setBackgroundResource(R.drawable.sticker_badge);
 
-        GradientDrawable shape =  new GradientDrawable();
+        GradientDrawable shape = new GradientDrawable();
         shape.setShape(GradientDrawable.RECTANGLE);
         shape.setCornerRadius(AndroidUtilities.dp(32));
         textView.setBackgroundDrawable(shape);
@@ -301,7 +302,7 @@ public boolean onLongClick(View view) {
         textView.setMinWidth(AndroidUtilities.dp(18));
 
         //TODO: WHAAAAT!?!? textView.setPadding(AndroidUtilities.dp(Theme.chatsTabCounterSize > 10 ? Theme.chatsTabCounterSize - 7 : 4), 0, AndroidUtilities.dp(Theme.chatsTabCounterSize > 10 ? Theme.chatsTabCounterSize - 7 : 4), 0);
-        textView.setPadding(4,0,4,0);
+        textView.setPadding(4, 0, 4, 0);
         RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);
         params.setMargins(AndroidUtilities.dp(3), AndroidUtilities.dp(5), AndroidUtilities.dp(3), AndroidUtilities.dp(5));  // left, top, right, bottom
         //RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams) textView.getLayoutParams();
@@ -314,12 +315,12 @@ public boolean onLongClick(View view) {
 
     }
 
-    public void changeTabsColor(int position){
+    public void changeTabsColor(int position) {
         //Log.e("PlusPager", "changeTabsColor position " + position + " currentPage " + currentPage);
-        RelativeLayout frame = (RelativeLayout)tabsContainer.getChildAt(currentPage);
-        if(frame != null) {
-            try{
-                View view = ((RelativeLayout)tabsContainer.getChildAt(position)).getChildAt(0);
+        RelativeLayout frame = (RelativeLayout) tabsContainer.getChildAt(currentPage);
+        if (frame != null) {
+            try {
+                View view = ((RelativeLayout) tabsContainer.getChildAt(position)).getChildAt(0);
                 if (view instanceof ImageButton) {
                     ((ImageButton) frame.getChildAt(0)).setColorFilter(tabTextIconUnselectedColor, PorterDuff.Mode.SRC_IN); // Previous
                     ((ImageButton) view).setColorFilter(tabTextIconSelectedColor, PorterDuff.Mode.SRC_IN); // Selected
@@ -328,31 +329,38 @@ public void changeTabsColor(int position){
                     ((TextView) view).setTextColor(tabTextIconSelectedColor); // Selected
                 }
             } catch (Exception e) {
-                FileLog.e( e);
+                FileLog.e(e);
             }
         }
     }
 
-    public void updateCounter(int position, int count, boolean allMuted, boolean force){
-        RelativeLayout frame = (RelativeLayout)tabsContainer.getChildAt(position);
+    @SuppressLint("DefaultLocale")
+    public void updateCounter(int position, int count, boolean allMuted, boolean force) {
+        RelativeLayout frame = (RelativeLayout) tabsContainer.getChildAt(position);
         //Log.e("TabsView", "PlusPager updateCounter position " + position + " unreadCount " + count + " allMuted " + allMuted);
-        if(frame != null && frame.getChildCount() > 1) {
+        if (frame != null && frame.getChildCount() > 1) {
             TextView tv = (TextView) frame.getChildAt(1);
-            if(tv != null){
+            if (tv != null) {
                 //Log.e("TabsView", "PlusPager updateCounter NOT NULL");
-//                if(count > 0 && !Theme.plusHideTabsCounters){
-//                    tv.setVisibility(VISIBLE);
-//                    tv.setText(count >= 10000 && Theme.plusLimitTabsCounters ? "+9999" : String.format("%d", count));
-//                    tv.getBackground().setColorFilter(allMuted ? Theme.usePlusTheme ? Theme.chatsTabCounterSilentBGColor : Theme.getColor(Theme.key_chats_unreadCounterMuted) : Theme.usePlusTheme ? Theme.chatsTabCounterBGColor : Theme.getColor(Theme.key_chats_unreadCounter), PorterDuff.Mode.SRC_IN);
-//                } else{
-//                    tv.setVisibility(INVISIBLE);
-//                    //tv.getBackground().setColorFilter(0x00000000, PorterDuff.Mode.SRC_IN);
-//                }
-//                if(force) {
-//                    tv.setTextSize(TypedValue.COMPLEX_UNIT_DIP, Theme.chatsTabCounterSize);
-//                    tv.setTextColor(Theme.usePlusTheme ? Theme.chatsTabCounterColor : Theme.getColor(Theme.key_chats_unreadCounterText));
-//                    tv.setPadding(AndroidUtilities.dp(Theme.chatsTabCounterSize > 10 ? Theme.chatsTabCounterSize - 7 : 4), 0, AndroidUtilities.dp(Theme.chatsTabCounterSize > 10 ? Theme.chatsTabCounterSize - 7 : 4), 0);
-//                }
+                //if (count > 0 && !Theme.plusHideTabsCounters) {
+                if (count > 0) {
+                    tv.setVisibility(VISIBLE);
+                    //tv.setText(count >= 10000 && Theme.plusLimitTabsCounters ? "+9999" : String.format("%d", count));
+                    tv.setText(String.format("%d", count));
+                    //tv.getBackground().setColorFilter(allMuted ? Theme.usePlusTheme ? Theme.chatsTabCounterSilentBGColor : Theme.getColor(Theme.key_chats_unreadCounterMuted) : Theme.usePlusTheme ? Theme.chatsTabCounterBGColor : Theme.getColor(Theme.key_chats_unreadCounter), PorterDuff.Mode.SRC_IN);
+                    tv.getBackground().setColorFilter(Color.parseColor("#ff585b"), PorterDuff.Mode.SRC_IN);
+                } else {
+                    tv.setVisibility(INVISIBLE);
+                    //tv.getBackground().setColorFilter(0x00000000, PorterDuff.Mode.SRC_IN);
+                }
+                if (force) {
+                    //tv.setTextSize(TypedValue.COMPLEX_UNIT_DIP, Theme.chatsTabCounterSize);
+                    //tv.setTextColor(Theme.usePlusTheme ? Theme.chatsTabCounterColor : Theme.getColor(Theme.key_chats_unreadCounterText));
+                    //tv.setPadding(AndroidUtilities.dp(Theme.chatsTabCounterSize > 10 ? Theme.chatsTabCounterSize - 7 : 4), 0, AndroidUtilities.dp(Theme.chatsTabCounterSize > 10 ? Theme.chatsTabCounterSize - 7 : 4), 0);
+                    tv.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 11);
+                    tv.setTextColor(Theme.getColor(Theme.key_chats_unreadCounterText));
+                    tv.setPadding(AndroidUtilities.dp(4), 0, AndroidUtilities.dp(4), 0);
+                }
             }
         }
     }
@@ -364,20 +372,20 @@ private void updateTabStyles() {
         for (int i = 0; i < tabCount; i++) {
             View tab = tabsContainer.getChildAt(i); // RelativeLayout
 
-             // ImageButton or TextView
+            // ImageButton or TextView
 
             //Log.e("PlusPager", i + " updateTabStyles view " + tab.toString());
 
             //v.setPadding(0, 0, 0, 0);
             tab.setPadding(0, 0, 0, 0);
             if (tabShouldExpand) {
-                if(tab.getLayoutParams() != expandedTabLayoutParams)tab.setLayoutParams(expandedTabLayoutParams);
+                if (tab.getLayoutParams() != expandedTabLayoutParams) tab.setLayoutParams(expandedTabLayoutParams);
                 //v.setLayoutParams(new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT, 1.0F));
                 //v.setLayoutParams(new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.MATCH_PARENT, 1.0F));
             } else {
-                if(tab.getLayoutParams() != defaultTabLayoutParams)tab.setLayoutParams(defaultTabLayoutParams);
-                View view = ((RelativeLayout)tabsContainer.getChildAt(i)).getChildAt(0);
-                if(view != null) {
+                if (tab.getLayoutParams() != defaultTabLayoutParams) tab.setLayoutParams(defaultTabLayoutParams);
+                View view = ((RelativeLayout) tabsContainer.getChildAt(i)).getChildAt(0);
+                if (view != null) {
                     view.setPadding(tabPadding, 0, tabPadding, 0);
                 }
 
@@ -386,26 +394,25 @@ private void updateTabStyles() {
             //Log.e("PlusPager", i + " updateTabStyles tab " + tab.toString() + " " + tab.getMeasuredWidth() + " " + tab.getWidth());
             //if (v instanceof TextView) {
 
-                //TextView tab = (TextView) v;
-                //tab.setTextSize(TypedValue.COMPLEX_UNIT_DIP, tabTextSize);
-                //tab.setTypeface(tabTypeface, tabTypefaceStyle);
-                //tab.setTypeface(Typeface.DEFAULT_BOLD);
-                //tab.setTextColor(i == currentPosition ? tabTextSelectedColor : tabTextColor);
-
-                // setAllCaps() is only available from API 14, so the upper case is made manually if we are on a
-                // pre-ICS-build
-                //if (textAllCaps) {
-                //    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {
-                //        tab.setAllCaps(true);
-                //    }
-                //}
+            //TextView tab = (TextView) v;
+            //tab.setTextSize(TypedValue.COMPLEX_UNIT_DIP, tabTextSize);
+            //tab.setTypeface(tabTypeface, tabTypefaceStyle);
+            //tab.setTypeface(Typeface.DEFAULT_BOLD);
+            //tab.setTextColor(i == currentPosition ? tabTextSelectedColor : tabTextColor);
+
+            // setAllCaps() is only available from API 14, so the upper case is made manually if we are on a
+            // pre-ICS-build
+            //if (textAllCaps) {
+            //    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {
+            //        tab.setAllCaps(true);
+            //    }
+            //}
             //}
             //childWidth += v.getWidth();
 
 
-
         }
-        if(delegate != null){
+        if (delegate != null) {
             delegate.onTabsUpdated();
         }
         //Log.e("PlusPager", AndroidUtilities.displaySize.x + " / " + AndroidUtilities.displaySize.x/tabCount + " / " + tabsContainer.getMeasuredWidth() + " " + pager.getCurrentItem());
@@ -447,7 +454,7 @@ private void scrollToChild(int position, int offset) {
         if (tabCount == 0) {
             return;
         }
-        if(position >= tabsContainer.getChildCount()){
+        if (position >= tabsContainer.getChildCount()) {
             return;
         }
 
@@ -467,7 +474,7 @@ private void scrollToChild2(int position, float offset) {
         if (tabCount == 0) {
             return;
         }
-        if(position >= tabsContainer.getChildCount()){
+        if (position >= tabsContainer.getChildCount()) {
             return;
         }
         int cellWidth = tabsContainer.getChildAt(position).getWidth();
@@ -523,11 +530,11 @@ protected void onDraw(Canvas canvas) {
         }
         //Log.e("PlusPager", "onDraw getWidth " + tabsContainer.getWidth() + " " + tabsContainer.getChildAt(0).getWidth());
 //        if(!tabShouldExpand && tabTitlesMode){
-            if(tabsContainer.getChildAt(0).getWidth() > tabsContainer.getWidth() / 2){
-                enableShouldExpand();
-                notifyDataSetChanged();
-                return;
-            }
+        if (tabsContainer.getChildAt(0).getWidth() > tabsContainer.getWidth() / 2) {
+            enableShouldExpand();
+            notifyDataSetChanged();
+            return;
+        }
 //        }
         final int height = getHeight();
 
@@ -594,7 +601,7 @@ public void onPageScrollStateChanged(int state) {
         private void scroll() {
             if (tabTitlesMode) {
                 scrollToChild2(pager.getCurrentItem(), 0);
-            }else {
+            } else {
                 scrollToChild(pager.getCurrentItem(), 0);
             }
         }
@@ -617,11 +624,11 @@ public void onPageSelected(int position) {
 
     public void onSizeChanged(int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
 //        if (!tabShouldExpand) {
-            post(new Runnable() {
-                public void run() {
-                    PlusPagerSlidingTabStrip.this.notifyDataSetChanged();
-                }
-            });
+        post(new Runnable() {
+            public void run() {
+                PlusPagerSlidingTabStrip.this.notifyDataSetChanged();
+            }
+        });
 //        }
     }
 
@@ -670,6 +677,7 @@ public void setUnderlineHeight(int underlineHeightPx) {
     public int getUnderlineHeight() {
         return underlineHeight;
     }
+
     public void setDividerColor(int dividerColor) {
         this.dividerColor = dividerColor;
         invalidate();
@@ -705,9 +713,9 @@ public int getScrollOffset() {
     public void setShouldExpand(boolean shouldExpand) {
 //        if(tabShouldExpand != shouldExpand) {
 //            tabShouldExpand = shouldExpand;
-            //tabsContainer.setLayoutParams(new FrameLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
-            //updateTabStyles();
-            requestLayout();
+        //tabsContainer.setLayoutParams(new FrameLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
+        //updateTabStyles();
+        requestLayout();
 //        }
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/TabsView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/TabsView.java
index 629d4e934..c2ea97cfa 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/TabsView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/TabsView.java
@@ -11,6 +11,7 @@
 import android.support.v4.view.PagerAdapter;
 import android.support.v4.view.ViewPager;
 import android.util.AttributeSet;
+import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
@@ -104,7 +105,7 @@ public void setUnread(int unread) {
     private boolean force;
     private RefreshAction refreshAction;
 
-    public TabsView refershAction(RefreshAction action) {
+    public TabsView refreshAction(RefreshAction action) {
         this.refreshAction = action;
         return this;
     }
@@ -264,22 +265,26 @@ public ViewPager getPager() {
     protected void onDetachedFromWindow() {
         super.onDetachedFromWindow();
         //TODO: important
-//        NotificationCenter.getInstance(currentAccount).removeObserver(this, NotificationCenter.refreshTabsCounters);
+        NotificationCenter.getInstance(currentAccount).removeObserver(this, NotificationCenter.updateInterfaces);
+        NotificationCenter.getInstance(currentAccount).removeObserver(this, NotificationCenter.dialogsUnreadCounterChanged);
     }
 
     @Override
     protected void onAttachedToWindow() {
         super.onAttachedToWindow();
         //TODO: important
-//        NotificationCenter.getInstance(currentAccount).addObserver(this, NotificationCenter.refreshTabsCounters);
+        NotificationCenter.getInstance(currentAccount).addObserver(this, NotificationCenter.updateInterfaces);
+        NotificationCenter.getInstance(currentAccount).addObserver(this, NotificationCenter.dialogsUnreadCounterChanged);
     }
 
     @Override
     public void didReceivedNotification(int id, int account, Object... args) {
         //TODO: important
-//        if (id == NotificationCenter.refreshTabsCounters) {
-//            unreadCount();
-//        }
+        if (id == NotificationCenter.updateInterfaces) {
+            unreadCount();
+        } else if (id == NotificationCenter.dialogsUnreadCounterChanged) {
+
+        }
     }
 
     public void forceUpdateTabCounters() {
@@ -287,22 +292,22 @@ public void forceUpdateTabCounters() {
     }
 
     private void unreadCount() {
-//        MessagesController messagesController = MessagesController.getInstance(currentAccount);
-//        unreadCount(messagesController.dialogsUnread, positions[8]);
-//        unreadCount(messagesController.dialogsAdmin, positions[7]);
-//        unreadCount(messagesController.dialogsFavs, positions[6]);
-//        unreadCount(messagesController.dialogsBots, positions[5]);
-//        unreadCount(messagesController.dialogsChannels, positions[4]);
-//        unreadCountGroups();
-//        unreadCount(messagesController.dialogsUsers, positions[1]);
-//        unreadCountAll(messagesController.dialogs, positions[0]);
+        MessagesController messagesController = MessagesController.getInstance(currentAccount);
+        //unreadCount(messagesController.dialogsUnread, positions[8]);
+        //unreadCount(messagesController.dialogsAdmin, positions[7]);
+        //unreadCount(messagesController.dialogsFavs, positions[6]);
+        //unreadCount(messagesController.dialogsBots, positions[5]);
+        //unreadCount(messagesController.dialogsChannels, positions[4]);
+        //unreadCountGroups();
+        //unreadCount(messagesController.dialogsUsers, positions[1]);
+        unreadCountAll(messagesController.dialogs, 0);
     }
 
-    private void unreadCountGroups() {
-        MessagesController messagesController = MessagesController.getInstance(currentAccount);
+//    private void unreadCountGroups() {
+//        MessagesController messagesController = MessagesController.getInstance(currentAccount);
 //        if(!Theme.plusHideGroupsTab)unreadCount(!Theme.plusHideSuperGroupsTab ? messagesController.dialogsGroups : messagesController.dialogsGroupsAll, positions[2]);
 //        if(!Theme.plusHideSuperGroupsTab)unreadCount(messagesController.dialogsMegaGroups, positions[3]);
-    }
+//    }
 
     private void unreadCount(final ArrayList<TLRPC.TL_dialog> dialogs, int position) {
         if (position == -1) {
@@ -321,7 +326,7 @@ private void unreadCount(final ArrayList<TLRPC.TL_dialog> dialogs, int position)
                         if (i == 0 && plusPreferences.getInt("unread_" + dialg.id, 0) == 1) i = 1;
                         if (i > 0) {
                             unreadCount = unreadCount + i;
-                            if (!isMuted) allMuted = false;
+                            allMuted = false;
                         }
                     }
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index 83ad46d20..557675a4a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -555,7 +555,7 @@ public void smoothScrollToPosition(RecyclerView recyclerView, RecyclerView.State
         listView.setVerticalScrollbarPosition(LocaleController.isRTL ? RecyclerListView.SCROLLBAR_POSITION_LEFT : RecyclerListView.SCROLLBAR_POSITION_RIGHT);
 
         TabsView newTabsView = new TabsView(context)
-                .refershAction(type -> {
+                .refreshAction(type -> {
                     //todo: check for the same type?
                     int firstVisibleItem = layoutManager.findFirstVisibleItemPosition();
                     //change data set
@@ -1161,7 +1161,7 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                     if (layoutManager.findLastVisibleItemPosition() >= dialogsAdapter.getDialogsArray().size() - 10) {
                         boolean fromCache = !MessagesController.getInstance(currentAccount).dialogsEndReached;
                         if (fromCache || !MessagesController.getInstance(currentAccount).serverDialogsEndReached) {
-                            MessagesController.getInstance(currentAccount).loadDialogs(-1, 100, fromCache);
+                            listView.post(() -> MessagesController.getInstance(currentAccount).loadDialogs(-1, 100, fromCache));
                         }
                     }
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index a604594b6..54c271d5d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -8,6 +8,7 @@
 
 package org.telegram.ui;
 
+import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.app.ActivityManager;
 import android.content.DialogInterface;
@@ -27,71 +28,25 @@
 import android.os.StatFs;
 import android.provider.ContactsContract;
 import android.text.TextUtils;
-import android.view.ActionMode;
-import android.view.KeyEvent;
-import android.view.Menu;
-import android.view.MotionEvent;
-import android.view.View;
-import android.view.ViewGroup;
-import android.view.ViewTreeObserver;
-import android.view.Window;
-import android.view.WindowManager;
+import android.view.*;
 import android.widget.FrameLayout;
 import android.widget.LinearLayout;
 import android.widget.RelativeLayout;
 import android.widget.Toast;
-
-import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.BuildVars;
-import org.telegram.messenger.ChatObject;
-import org.telegram.messenger.ContactsController;
-import org.telegram.messenger.DataQuery;
-import org.telegram.messenger.FileLoader;
-import org.telegram.messenger.ImageLoader;
-import org.telegram.messenger.MediaController;
-import org.telegram.messenger.MessageObject;
-import org.telegram.messenger.MessagesController;
-import org.telegram.messenger.MessagesStorage;
-import org.telegram.messenger.NotificationsController;
-import org.telegram.messenger.SendMessagesHelper;
-import org.telegram.messenger.SharedConfig;
-import org.telegram.messenger.UserObject;
-import org.telegram.messenger.Utilities;
-import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.FileLog;
-import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.NotificationCenter;
 import io.bettergram.messenger.R;
+import org.telegram.messenger.*;
 import org.telegram.messenger.browser.Browser;
 import org.telegram.messenger.camera.CameraController;
 import org.telegram.messenger.support.widget.DefaultItemAnimator;
 import org.telegram.messenger.support.widget.LinearLayoutManager;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
-import org.telegram.messenger.UserConfig;
-import org.telegram.ui.ActionBar.AlertDialog;
+import org.telegram.ui.ActionBar.*;
 import org.telegram.ui.Adapters.DrawerLayoutAdapter;
-import org.telegram.ui.ActionBar.ActionBarLayout;
-import org.telegram.ui.ActionBar.BaseFragment;
-import org.telegram.ui.ActionBar.DrawerLayoutContainer;
 import org.telegram.ui.Cells.DrawerAddCell;
 import org.telegram.ui.Cells.DrawerUserCell;
 import org.telegram.ui.Cells.LanguageCell;
-import org.telegram.ui.Components.AudioPlayerAlert;
-import org.telegram.ui.Components.AlertsCreator;
-import org.telegram.ui.Components.BlockingUpdateView;
-import org.telegram.ui.Components.EmbedBottomSheet;
-import org.telegram.ui.Components.JoinGroupAlert;
-import org.telegram.ui.Components.LayoutHelper;
-import org.telegram.ui.Components.PasscodeView;
-import org.telegram.ui.Components.PipRoundVideoView;
-import org.telegram.ui.Components.RecyclerListView;
-import org.telegram.ui.Components.SharingLocationsAlert;
-import org.telegram.ui.Components.StickersAlert;
-import org.telegram.ui.ActionBar.Theme;
-import org.telegram.ui.Components.TermsOfServiceView;
-import org.telegram.ui.Components.ThemeEditorView;
-import org.telegram.ui.Components.UpdateAppAlertDialog;
+import org.telegram.ui.Components.*;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -147,6 +102,7 @@
 
     private Runnable lockRunnable;
 
+    @SuppressLint("ClickableViewAccessibility")
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         ApplicationLoader.postInitApplication();
