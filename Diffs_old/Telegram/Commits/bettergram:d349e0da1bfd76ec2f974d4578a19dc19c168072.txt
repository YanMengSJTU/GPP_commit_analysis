diff --git a/TMessagesProj/src/main/assets/better.attheme b/TMessagesProj/src/main/assets/better.attheme
index 0d8d124ef..44ab0983c 100644
--- a/TMessagesProj/src/main/assets/better.attheme
+++ b/TMessagesProj/src/main/assets/better.attheme
@@ -31,4 +31,5 @@ resources_subItemTitleColor=-16777216
 resources_subItemDescriptionColor=-5329234
 dialog_activeStateBorderColor=-1
 dialog_favoriteBackgroundColor=-1
+dialogTopBackground=-13576587
 EOF
diff --git a/TMessagesProj/src/main/assets/bluebubbles.attheme b/TMessagesProj/src/main/assets/bluebubbles.attheme
index 636bc3c7e..b9caa4ad4 100644
Binary files a/TMessagesProj/src/main/assets/bluebubbles.attheme and b/TMessagesProj/src/main/assets/bluebubbles.attheme differ
diff --git a/TMessagesProj/src/main/assets/dark.attheme b/TMessagesProj/src/main/assets/dark.attheme
index b5f48fe10..0bc3b75bb 100644
--- a/TMessagesProj/src/main/assets/dark.attheme
+++ b/TMessagesProj/src/main/assets/dark.attheme
@@ -293,4 +293,5 @@ resources_subItemTitleColor=-1
 resources_subItemDescriptionColor=-5329234
 dialog_activeStateBorderColor=-15329257
 dialog_favoriteBackgroundColor=-15329257
+dialogTopBackground=-13749452
 EOF
\ No newline at end of file
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/CryptoDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/CryptoDataService.java
index 992560616..18025b4bc 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/CryptoDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/CryptoDataService.java
@@ -6,6 +6,7 @@
 import android.support.annotation.Nullable;
 import io.bettergram.data.*;
 import io.bettergram.telegram.messenger.ApplicationLoader;
+import io.bettergram.telegram.messenger.NotificationCenter;
 import io.bettergram.utils.CollectionUtil;
 import okhttp3.HttpUrl;
 import okhttp3.Request;
@@ -128,6 +129,10 @@ public void run() {
                         preferences.edit().putString(KEY_CRYPTO_CURRENCIES, fetchedCryptoJson)
                                 .apply();
                         savedCryptoJson = fetchedCryptoJson;
+                    } else {
+                        if (response.code() == 410) {
+                            NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateToLatestApiVersion);
+                        }
                     }
                 } catch (IOException e) {
                     e.printStackTrace();
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/MailChimpService.java b/TMessagesProj/src/main/java/io/bettergram/service/MailChimpService.java
index d78f7ea01..96462438d 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/MailChimpService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/MailChimpService.java
@@ -4,6 +4,7 @@
 import android.content.Intent;
 import android.util.Base64;
 import io.bettergram.messenger.BuildConfig;
+import io.bettergram.telegram.messenger.NotificationCenter;
 import okhttp3.*;
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -88,6 +89,8 @@ protected void onHandleIntent(Intent intent) {
                             } catch (JSONException e) {
                                 e.printStackTrace();
                             }
+                        } else if (response.code() == 410) {
+                            NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateToLatestApiVersion);
                         }
                     }
                 }
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
index d22d531ec..5badbf0a1 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
@@ -8,10 +8,10 @@
 import io.bettergram.messenger.BuildConfig;
 import io.bettergram.service.api.NewsApi;
 import io.bettergram.telegram.messenger.ApplicationLoader;
+import io.bettergram.telegram.messenger.NotificationCenter;
 import io.bettergram.utils.io.IOUtils;
 import okhttp3.Request;
 import okhttp3.Response;
-import org.json.JSONException;
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
 import org.jsoup.nodes.Element;
@@ -62,93 +62,102 @@ protected void onHandleIntent(Intent intent) {
             List<News> articles = new ArrayList<>();
 
             try {
-                String json = NewsApi.getNewsQuietly();
+                Request request = new Request.Builder().url(NewsApi.LIVE_COIN_WATCH_NEWS_URL).build();
+                Response response = okhttp_client().newCall(request).execute();
 
-                NewsData data = NewsData__JsonHelper.parseFromJson(json);
+                if (response.isSuccessful() && response.body() != null) {
+                    String json = response.body().string();
 
-                for (int i = 0, size_i = data.news.size(); i < size_i; i++) {
+                    NewsData data = NewsData__JsonHelper.parseFromJson(json);
 
-                    String url = data.news.get(i);
-                    HttpURLConnection urlConnection = (HttpURLConnection) new URL(url)
-                            .openConnection();
-                    urlConnection.setRequestProperty("User-Agent", "Bettergram");
-                    urlConnection.connect();
-                    InputStream in = urlConnection.getInputStream();
+                    for (int i = 0, size_i = data.news.size(); i < size_i; i++) {
 
-                    String urlHash = url;
-                    try {
-                        urlHash = SHA1(urlHash);
-                    } catch (NoSuchAlgorithmException e) {
-                        e.printStackTrace();
-                    }
-                    String xmlFetched = IOUtils.toString(in, "UTF-8");
-                    Set<String> savedStringSet = preferences
-                            .getStringSet(KEY_FEED_XML_SET + urlHash, null);
-                    String xmlSaveHash =
-                            savedStringSet != null ? savedStringSet.toArray(new String[0])[0]
-                                    : null;
-                    String xmlSaved =
-                            savedStringSet != null ? savedStringSet.toArray(new String[0])[1]
-                                    : null;
-                    String xmlFinal = null;
-                    try {
-                        if (isEmpty(xmlSaved) || !SHA1(xmlFetched).equals(xmlSaveHash)) {
-                            Set<String> stringSet = new HashSet<>();
-                            stringSet.add(SHA1(xmlFetched));
-                            stringSet.add(xmlFetched);
-                            preferences.edit().putStringSet(KEY_FEED_XML_SET + urlHash, stringSet)
-                                    .apply();
-                            xmlFinal = xmlFetched;
-                        } else {
-                            xmlFinal = xmlSaved;
+                        String url = data.news.get(i);
+                        HttpURLConnection urlConnection = (HttpURLConnection) new URL(url)
+                                .openConnection();
+                        urlConnection.setRequestProperty("User-Agent", "Bettergram");
+                        urlConnection.connect();
+                        InputStream in = urlConnection.getInputStream();
+
+                        String urlHash = url;
+                        try {
+                            urlHash = SHA1(urlHash);
+                        } catch (NoSuchAlgorithmException e) {
+                            e.printStackTrace();
+                        }
+                        String xmlFetched = IOUtils.toString(in, "UTF-8");
+                        Set<String> savedStringSet = preferences
+                                .getStringSet(KEY_FEED_XML_SET + urlHash, null);
+                        String xmlSaveHash =
+                                savedStringSet != null ? savedStringSet.toArray(new String[0])[0]
+                                        : null;
+                        String xmlSaved =
+                                savedStringSet != null ? savedStringSet.toArray(new String[0])[1]
+                                        : null;
+                        String xmlFinal = null;
+                        try {
+                            if (isEmpty(xmlSaved) || !SHA1(xmlFetched).equals(xmlSaveHash)) {
+                                Set<String> stringSet = new HashSet<>();
+                                stringSet.add(SHA1(xmlFetched));
+                                stringSet.add(xmlFetched);
+                                preferences.edit().putStringSet(KEY_FEED_XML_SET + urlHash, stringSet)
+                                        .apply();
+                                xmlFinal = xmlFetched;
+                            } else {
+                                xmlFinal = xmlSaved;
+                            }
+                        } catch (NoSuchAlgorithmException e) {
+                            e.printStackTrace();
                         }
-                    } catch (NoSuchAlgorithmException e) {
-                        e.printStackTrace();
-                    }
 
-                    if (isEmpty(xmlFinal)) {
-                        break;
-                    }
+                        if (isEmpty(xmlFinal)) {
+                            break;
+                        }
 
-                    List<News> temp = new ArrayList<>();
-
-                    Document document = Jsoup.parse(xmlFinal, "", Parser.xmlParser());
-                    Elements channelElements = document.getElementsByTag("channel");
-                    if (channelElements != null && channelElements.size() > 0) {
-                        Elements itemElements = channelElements.get(0).getElementsByTag("item");
-                        for (Element itemElement : itemElements) {
-                            News newsItem = new News();
-                            newsItem.title = itemElement
-                                    .getElementsByTag("title")
-                                    .get(0)
-                                    .html();
-                            newsItem.url = itemElement
-                                    .getElementsByTag("link")
-                                    .get(0)
-                                    .html();
-                            newsItem.source = new Source();
-                            newsItem.source.name = channelElements
-                                    .get(0)
-                                    .getElementsByTag("title")
-                                    .get(0)
-                                    .html();
-                            newsItem.publishedAt = itemElement
-                                    .getElementsByTag("pubDate")
-                                    .get(0)
-                                    .html();
-                            temp.add(newsItem);
+                        List<News> temp = new ArrayList<>();
+
+                        Document document = Jsoup.parse(xmlFinal, "", Parser.xmlParser());
+                        Elements channelElements = document.getElementsByTag("channel");
+                        if (channelElements != null && channelElements.size() > 0) {
+                            Elements itemElements = channelElements.get(0).getElementsByTag("item");
+                            for (Element itemElement : itemElements) {
+                                News newsItem = new News();
+                                newsItem.title = itemElement
+                                        .getElementsByTag("title")
+                                        .get(0)
+                                        .html();
+                                newsItem.url = itemElement
+                                        .getElementsByTag("link")
+                                        .get(0)
+                                        .html();
+                                newsItem.source = new Source();
+                                newsItem.source.name = channelElements
+                                        .get(0)
+                                        .getElementsByTag("title")
+                                        .get(0)
+                                        .html();
+                                newsItem.publishedAt = itemElement
+                                        .getElementsByTag("pubDate")
+                                        .get(0)
+                                        .html();
+                                temp.add(newsItem);
+                            }
                         }
+                        articles.addAll(temp);
                     }
-                    articles.addAll(temp);
-                }
 
-                NewsList newsList = new NewsList();
-                newsList.articles = articles;
-                if (isEmpty(jsonRaw)) {
-                    publishResults(NewsList__JsonHelper.serializeToJson(newsList), NOTIFICATION,
-                            RESULT);
+                    NewsList newsList = new NewsList();
+                    newsList.articles = articles;
+                    if (isEmpty(jsonRaw)) {
+                        publishResults(NewsList__JsonHelper.serializeToJson(newsList), NOTIFICATION,
+                                RESULT);
+                    }
+                } else {
+                    if (response.code() == 410) {
+                        NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateToLatestApiVersion);
+                    }
                 }
-            } catch (IOException | JSONException e) {
+            } catch (IOException e) {
                 e.printStackTrace();
             }
 
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/ResourcesDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/ResourcesDataService.java
index bc11658c4..4d9ddbb41 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/ResourcesDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/ResourcesDataService.java
@@ -4,15 +4,16 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.support.annotation.Nullable;
-
-import org.json.JSONException;
-
-import java.io.IOException;
-
 import io.bettergram.service.api.ResourcesApi;
 import io.bettergram.telegram.messenger.ApplicationLoader;
+import io.bettergram.telegram.messenger.NotificationCenter;
+import okhttp3.Request;
+import okhttp3.Response;
+
+import java.io.IOException;
 
 import static android.text.TextUtils.isEmpty;
+import static io.bettergram.telegram.messenger.ApplicationLoader.okhttp_client;
 
 public class ResourcesDataService extends BaseDataService {
 
@@ -36,12 +37,23 @@ protected void onHandleIntent(@Nullable Intent intent) {
                 publishResults(json, NOTIFICATION, RESULT);
             }
 
-            json = ResourcesApi.getResourcesQuietly();
-            if (!isEmpty(json)) {
-                preferences.edit().putString(KEY_RESOURCES_JSON, json).apply();
+            Request request = new Request.Builder().url(ResourcesApi.RESOURCES_BASE_URL).build();
+            Response response = okhttp_client().newCall(request).execute();
+
+            if (response.isSuccessful() && response.body() != null) {
+                json = response.body().string();
+
+                if (!isEmpty(json)) {
+                    preferences.edit().putString(KEY_RESOURCES_JSON, json).apply();
+                }
+                publishResults(json, NOTIFICATION, RESULT);
+
+            } else {
+                if (response.code() == 410) {
+                    NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateToLatestApiVersion);
+                }
             }
-            publishResults(json, NOTIFICATION, RESULT);
-        } catch (IOException | JSONException e) {
+        } catch (IOException e) {
             e.printStackTrace();
         }
     }
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java
index 7307ab4d1..0009050da 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java
@@ -7,10 +7,10 @@
 import io.bettergram.data.*;
 import io.bettergram.service.api.VideosApi;
 import io.bettergram.telegram.messenger.ApplicationLoader;
+import io.bettergram.telegram.messenger.NotificationCenter;
 import io.bettergram.utils.Counter;
 import okhttp3.Request;
 import okhttp3.Response;
-import org.json.JSONException;
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
 import org.jsoup.nodes.Element;
@@ -49,63 +49,73 @@ protected void onHandleIntent(Intent intent) {
         }
 
         try {
-            VideoData videoData = VideoData__JsonHelper.parseFromJson(VideosApi.getYoutubeRSSFeed());
-
-            VideoList videoList = new VideoList();
-            videoList.videos = new ArrayList<>();
-
-            for (String videoUrl : videoData.videos) {
-                Request request = new Request.Builder()
-                        .url(videoUrl)
-                        .build();
-
-                Response response = okhttp_client().newCall(request).execute();
-
-                if (response.body() != null && response.isSuccessful()) {
-                    String result = response.body().string();
-                    Document document = Jsoup.parse(result, "", Parser.xmlParser());
-                    for (Element element : document.getElementsByTag("entry")) {
-                        if (!videoList.contains(element.getElementsByTag("yt:videoId").get(0).html())) {
-                            Video video = new Video();
-                            video.id = element
-                                    .getElementsByTag("yt:videoId")
-                                    .get(0)
-                                    .html();
-                            video.title = element
-                                    .getElementsByTag("title")
-                                    .get(0)
-                                    .html();
-                            video.channelTitle = element
-                                    .getElementsByTag("author")
-                                    .get(0)
-                                    .getElementsByTag("name")
-                                    .get(0)
-                                    .html();
-                            video.viewCount = Counter.format(element
-                                    .getElementsByTag("media:group")
-                                    .get(0)
-                                    .getElementsByTag("media:community")
-                                    .get(0)
-                                    .getElementsByTag("media:statistics")
-                                    .get(0)
-                                    .attr("views"));
-                            video.publishedAt = element
-                                    .getElementsByTag("published")
-                                    .get(0)
-                                    .html();
-                            videoList.videos.add(video);
+            Request request = new Request.Builder().url(VideosApi.LIVE_COIN_WATCH_VIDEO_URL).build();
+            Response response = okhttp_client().newCall(request).execute();
+
+            if (response.isSuccessful() && response.body() != null) {
+                String json = response.body().string();
+                VideoData videoData = VideoData__JsonHelper.parseFromJson(json);
+
+                VideoList videoList = new VideoList();
+                videoList.videos = new ArrayList<>();
+
+                for (String videoUrl : videoData.videos) {
+                    request = new Request.Builder()
+                            .url(videoUrl)
+                            .build();
+
+                    response = okhttp_client().newCall(request).execute();
+
+                    if (response.body() != null && response.isSuccessful()) {
+                        String result = response.body().string();
+                        Document document = Jsoup.parse(result, "", Parser.xmlParser());
+                        for (Element element : document.getElementsByTag("entry")) {
+                            if (!videoList.contains(element.getElementsByTag("yt:videoId").get(0).html())) {
+                                Video video = new Video();
+                                video.id = element
+                                        .getElementsByTag("yt:videoId")
+                                        .get(0)
+                                        .html();
+                                video.title = element
+                                        .getElementsByTag("title")
+                                        .get(0)
+                                        .html();
+                                video.channelTitle = element
+                                        .getElementsByTag("author")
+                                        .get(0)
+                                        .getElementsByTag("name")
+                                        .get(0)
+                                        .html();
+                                video.viewCount = Counter.format(element
+                                        .getElementsByTag("media:group")
+                                        .get(0)
+                                        .getElementsByTag("media:community")
+                                        .get(0)
+                                        .getElementsByTag("media:statistics")
+                                        .get(0)
+                                        .attr("views"));
+                                video.publishedAt = element
+                                        .getElementsByTag("published")
+                                        .get(0)
+                                        .html();
+                                videoList.videos.add(video);
+                            }
                         }
                     }
                 }
-            }
 
-            videoList.sortVideosByDate();
+                videoList.sortVideosByDate();
 
-            String jsonResult = VideoList__JsonHelper.serializeToJson(videoList);
-            preferences.edit().putString(KEY_VIDEO_JSON, jsonResult).apply();
+                String jsonResult = VideoList__JsonHelper.serializeToJson(videoList);
+                preferences.edit().putString(KEY_VIDEO_JSON, jsonResult).apply();
 
-            publishResults(jsonResult, NOTIFICATION, RESULT);
-        } catch (IOException | JSONException e) {
+                publishResults(jsonResult, NOTIFICATION, RESULT);
+            } else {
+                if (response.code() == 410) {
+                    NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateToLatestApiVersion);
+                }
+            }
+        } catch (IOException e) {
             e.printStackTrace();
         } catch (NullPointerException e) {
             e.printStackTrace();
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/api/NewsApi.java b/TMessagesProj/src/main/java/io/bettergram/service/api/NewsApi.java
index 739dc4cae..d002ba83a 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/api/NewsApi.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/api/NewsApi.java
@@ -24,7 +24,7 @@
     @SuppressLint("SimpleDateFormat")
     public static final SimpleDateFormat TO_FORMAT = new SimpleDateFormat("MMM dd");
 
-    private static final String LIVE_COIN_WATCH_NEWS_URL = "https://api.bettergram.io/v1/news";
+    public static final String LIVE_COIN_WATCH_NEWS_URL = "https://api.bettergram.io/v1/news";
 
     /**
      * Gets news related to cryptocurrency
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/api/VideosApi.java b/TMessagesProj/src/main/java/io/bettergram/service/api/VideosApi.java
index 7b1cf474a..99960b741 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/api/VideosApi.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/api/VideosApi.java
@@ -35,7 +35,7 @@
 
     private static final String YOUTUBE_STATISTICS_URL = "https://www.googleapis.com/youtube/v3/videos?part=snippet,contentDetails,statistics&id=%s&key=%s";
 
-    private static final String LIVE_COIN_WATCH_VIDEO_URL = "https://api.bettergram.io/v1/videos";
+    public static final String LIVE_COIN_WATCH_VIDEO_URL = "https://api.bettergram.io/v1/videos";
 
     /**
      * Queries data for specific youtube video
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/AppVersionTask.java b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/AppVersionTask.java
index 585f8f781..08224230c 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/AppVersionTask.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/AppVersionTask.java
@@ -29,8 +29,7 @@ protected String doInBackground(Void... voids) {
         try {
             newVersion = getPlayStoreAppVersion("https://play.google.com/store/apps/details?id=" + ApplicationLoader.packageName() + "&hl=en");
             return newVersion;
-        } catch (Exception e) {
-            e.printStackTrace();
+        } catch (Exception ignore) {
             return newVersion;
         }
     }
@@ -69,9 +68,8 @@ private String getAppVersion(String patternString, String inputString) {
                 return matcher.group(1);
             }
 
-        } catch (PatternSyntaxException ex) {
-
-            ex.printStackTrace();
+        } catch (PatternSyntaxException e) {
+            e.printStackTrace();
         }
 
         return null;
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java
index d08c76b7c..c0fc2ca57 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java
@@ -30,6 +30,7 @@
 import com.google.firebase.iid.FirebaseInstanceId;
 import io.bettergram.service.CryptoDataService;
 import io.bettergram.service.NewsDataService;
+import io.bettergram.service.ResourcesDataService;
 import io.bettergram.service.YoutubeDataService;
 import io.bettergram.telegram.tgnet.ConnectionsManager;
 import io.bettergram.telegram.tgnet.TLRPC;
@@ -296,6 +297,9 @@ public static void warmupBettergramData(Activity activity) {
 
         Intent intent3 = new Intent(activity, YoutubeDataService.class);
         activity.startService(intent3);
+
+        Intent intent4 = new Intent(activity, ResourcesDataService.class);
+        activity.startService(intent4);
     }
 
     public static OkHttpClient okhttp_client() {
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/NotificationCenter.java b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/NotificationCenter.java
index b8f4fb1c9..60a5314ae 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/NotificationCenter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/NotificationCenter.java
@@ -147,6 +147,8 @@
     public static final int playerDidStartPlaying = totalEvents++;
     public static final int closeSearchByActiveAction = totalEvents++;
 
+    public static final int updateToLatestApiVersion = totalEvents++;
+
     private SparseArray<ArrayList<Object>> observers = new SparseArray<>();
     private SparseArray<ArrayList<Object>> removeAfterBroadcast = new SparseArray<>();
     private SparseArray<ArrayList<Object>> addAfterBroadcast = new SparseArray<>();
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/AlertsCreator.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/AlertsCreator.java
index 428180f0c..c69ad47d0 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/AlertsCreator.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/AlertsCreator.java
@@ -1385,6 +1385,17 @@ public static AlertDialog createAccountSelectDialog(Activity parentActivity, fin
         return builder;
     }
 
+    public static AlertDialog.Builder createOutdateDialog(final Activity parentActivity, DialogInterface.OnClickListener listener) {
+        AlertDialog.Builder builder = new AlertDialog.Builder(parentActivity);
+        builder.setTopImage(R.drawable.ic_outdated, Theme.getColor(Theme.key_dialogTopBackground));
+        builder.setMessage(AndroidUtilities.replaceTags(LocaleController.getString("OutdatedAlert", R.string.OutdatedAlert)));
+        builder.setPositiveButton(LocaleController.getString("UpdateAlertButton", R.string.UpdateAlertButton), (dialog, which) -> {
+            dialog.dismiss();
+            listener.onClick(dialog, which);
+        });
+        return builder;
+    }
+
 //    public static AlertDialog createExpireDateAlert(final Context context, final boolean month, final int[] result, final Runnable callback) {
 //        AlertDialog.Builder builder = new AlertDialog.Builder(context);
 //        builder.setTitle(month ? LocaleController.getString("PaymentCardExpireDateMonth", R.string.PaymentCardExpireDateMonth) : LocaleController.getString("PaymentCardExpireDateYear", R.string.PaymentCardExpireDateYear));
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
index 8c75e3dcb..094c391a6 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
@@ -121,6 +121,8 @@
 
     private AppVersionTask appVersionTask;
 
+    private AlertDialog outdatedDialog;
+
     public interface DialogsActivityDelegate {
         void didSelectDialogs(DialogsActivity fragment, ArrayList<Long> dids, CharSequence message, boolean param);
     }
@@ -173,6 +175,8 @@ public boolean onFragmentCreate() {
             NotificationCenter.getInstance(currentAccount).addObserver(this, NotificationCenter.dialogsUnreadCounterChanged);
 
             NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.didSetPasscode);
+
+            NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.updateToLatestApiVersion);
         }
 
         if (!dialogsLoaded[currentAccount]) {
@@ -215,6 +219,8 @@ public void onFragmentDestroy() {
             NotificationCenter.getInstance(currentAccount).removeObserver(this, NotificationCenter.dialogsUnreadCounterChanged);
 
             NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.didSetPasscode);
+
+            NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.updateToLatestApiVersion);
         }
         if (commentView != null) {
             commentView.onDestroy();
@@ -1928,6 +1934,26 @@ public void onAnimationEnd(Animator animation) {
                     }).start();
                 }
             }*/
+        } else if (id == NotificationCenter.updateToLatestApiVersion) {
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("outdatedDialogLastShown", Context.MODE_PRIVATE);
+            long millisLastShown = preferences.getLong("timeMillisLastShown", 0L);
+
+            final int twoHours = 2 * 60 * 60 * 1000;
+            long twoHoursAgo = millisLastShown + twoHours;
+            if (millisLastShown == 0L || System.currentTimeMillis() > twoHoursAgo) {
+                getAvailableActivity(activity -> {
+                    AndroidUtilities.runOnUIThread(() -> {
+                        if (outdatedDialog == null || !outdatedDialog.isShowing()) {
+                            outdatedDialog = AlertsCreator.createOutdateDialog(activity, (dialog, which) -> {
+                                AppVersionTask.openAppInPlayStore(activity);
+                            }).create();
+                            outdatedDialog.show();
+                        }
+                    });
+                });
+                SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("outdatedDialogLastShown", Context.MODE_PRIVATE).edit();
+                editor.putLong("timeMillisLastShown", System.currentTimeMillis()).apply();
+            }
         }
     }
 
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/LaunchActivity.java
index 12a49f312..79777191f 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/LaunchActivity.java
@@ -33,6 +33,7 @@
 import android.widget.LinearLayout;
 import android.widget.RelativeLayout;
 import android.widget.Toast;
+import io.bettergram.messenger.BuildConfig;
 import io.bettergram.messenger.R;
 import io.bettergram.telegram.messenger.*;
 import io.bettergram.telegram.messenger.browser.Browser;
@@ -136,7 +137,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 Map<String, ?> state = preferences.getAll();
                 if (state.isEmpty()) {
                     preferences = ApplicationLoader.applicationContext.getSharedPreferences("mailchimp_subscribed", MODE_PRIVATE);
-                    if (preferences.getString("mailchimp_subscribed_email", null) == null) {
+                    if (preferences.getString("mailchimp_subscribed_email", null) == null && !BuildConfig.DEBUG) {
                         Intent intent3 = new Intent(this, SplashActivity.class);
                         intent3.setData(intent.getData());
                         startActivity(intent3);
diff --git a/TMessagesProj/src/main/res/drawable/ic_outdated.xml b/TMessagesProj/src/main/res/drawable/ic_outdated.xml
new file mode 100644
index 000000000..f2a7f68e5
--- /dev/null
+++ b/TMessagesProj/src/main/res/drawable/ic_outdated.xml
@@ -0,0 +1,5 @@
+<vector android:height="42dp" android:tint="#FFFFFF"
+    android:viewportHeight="24.0" android:viewportWidth="24.0"
+    android:width="42dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M13,3c-4.97,0 -9,4.03 -9,9L1,12l3.89,3.89 0.07,0.14L9,12L6,12c0,-3.87 3.13,-7 7,-7s7,3.13 7,7 -3.13,7 -7,7c-1.93,0 -3.68,-0.79 -4.94,-2.06l-1.42,1.42C8.27,19.99 10.51,21 13,21c4.97,0 9,-4.03 9,-9s-4.03,-9 -9,-9zM12,8v5l4.28,2.54 0.72,-1.21 -3.5,-2.08L13.5,8L12,8z"/>
+</vector>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index e5f8c92f2..38d16c5ab 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -2615,4 +2615,5 @@
 
     <string name="UpdateAlertButton">Update</string>
     <string name="UpdateAlert">There is a newer version available for download. Please update the app by visiting the Play Store.</string>
+    <string name="OutdatedAlert">This version of Bettergram is too old. Please update the application</string>
 </resources>
