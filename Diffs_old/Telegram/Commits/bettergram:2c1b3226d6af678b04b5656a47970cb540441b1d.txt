diff --git a/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
index 0213de6d7..e1d668448 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
@@ -68,6 +68,8 @@ protected void onHandleIntent(Intent intent) {
             String jsonRaw = preferences.getString(KEY_SAVED_LIST, null);
             if (!isEmpty(jsonRaw)) {
                 publishResults(jsonRaw, NOTIFICATION, RESULT);
+                int counter = preferences.getInt("news_unread_count", 0);
+                NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateBottombarCounter, counter, "news");
             }
 
             List<News> articles = new ArrayList<>();
@@ -341,6 +343,8 @@ protected void onHandleIntent(Intent intent) {
                                 counter++;
                             }
                         }
+                        counter += preferences.getInt("news_unread_count", 0);
+                        preferences.edit().putInt("news_unread_count", counter).apply();
                     } else {
                         if (newsList.articles != null && !newsList.articles.isEmpty()) {
                             counter = newsList.articles.size() - 1;
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java
index 54b88f6b8..698fd32ea 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java
@@ -52,6 +52,8 @@ protected void onHandleIntent(Intent intent) {
         String jsonRaw = preferences.getString(KEY_VIDEO_JSON, null);
         if (!isEmpty(jsonRaw)) {
             publishResults(jsonRaw, NOTIFICATION, RESULT);
+            int counter = preferences.getInt("videos_unread_count", 0);
+            NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateBottombarCounter, counter, "video");
         }
 
         try {
@@ -127,6 +129,8 @@ protected void onHandleIntent(Intent intent) {
                             counter++;
                         }
                     }
+                    counter += preferences.getInt("videos_unread_count", 0);
+                    preferences.edit().putInt("videos_unread_count", counter).apply();
                 } else {
                     if (videoList.videos != null && !videoList.videos.isEmpty()) {
                         counter = videoList.videos.size() - 1;
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesController.java
index 840ed8f3e..0e2993f4a 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesController.java
@@ -23,6 +23,15 @@
 import android.util.SparseBooleanArray;
 import android.util.SparseIntArray;
 import android.widget.Toast;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.HashMap;
+import java.util.Locale;
+import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.CountDownLatch;
+
 import io.bettergram.messenger.R;
 import io.bettergram.telegram.SQLite.SQLiteCursor;
 import io.bettergram.telegram.messenger.support.SparseLongArray;
@@ -39,10 +48,6 @@
 import io.bettergram.telegram.ui.DialogsActivity;
 import io.bettergram.telegram.ui.ProfileActivity;
 
-import java.util.*;
-import java.util.concurrent.ConcurrentHashMap;
-import java.util.concurrent.CountDownLatch;
-
 public class MessagesController implements NotificationCenter.NotificationCenterDelegate {
 
     private ConcurrentHashMap<Integer, TLRPC.Chat> chats = new ConcurrentHashMap<>(100, 1.0f, 2);
@@ -6586,6 +6591,10 @@ public void loadUnreadDialogs() {
         }));
     }
 
+    public int getPinnedCount() {
+        return MessagesStorage.getInstance(currentAccount).getPinnedCount();
+    }
+
     public boolean pinDialog(long did, boolean pin, TLRPC.InputPeer peer, long taskId) {
         int lower_id = (int) did;
         TLRPC.TL_dialog dialog = dialogs_dict.get(did);
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesStorage.java b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesStorage.java
index 1948a9ccd..74546649a 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesStorage.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesStorage.java
@@ -13,19 +13,29 @@
 import android.util.LongSparseArray;
 import android.util.SparseArray;
 import android.util.SparseIntArray;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Locale;
+import java.util.Map;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.atomic.AtomicLong;
+
 import io.bettergram.telegram.PhoneFormat.PhoneFormat;
 import io.bettergram.telegram.SQLite.SQLiteCursor;
 import io.bettergram.telegram.SQLite.SQLiteDatabase;
 import io.bettergram.telegram.SQLite.SQLitePreparedStatement;
 import io.bettergram.telegram.messenger.support.SparseLongArray;
-import io.bettergram.telegram.tgnet.*;
+import io.bettergram.telegram.tgnet.ConnectionsManager;
+import io.bettergram.telegram.tgnet.NativeByteBuffer;
+import io.bettergram.telegram.tgnet.RequestDelegate;
+import io.bettergram.telegram.tgnet.TLObject;
+import io.bettergram.telegram.tgnet.TLRPC;
 import io.bettergram.utils.Time;
 
-import java.io.File;
-import java.util.*;
-import java.util.concurrent.CountDownLatch;
-import java.util.concurrent.atomic.AtomicLong;
-
 public class MessagesStorage {
 
     public interface IntCallback {
@@ -1843,7 +1853,7 @@ public void emptyMessagesMedia(final ArrayList<Integer> mids) {
                             } else {
                                 continue;
                             }
-                            message.media.flags = message.media.flags &~ 1;
+                            message.media.flags = message.media.flags & ~1;
                             message.id = cursor.intValue(1);
                             message.date = cursor.intValue(2);
                             message.dialog_id = cursor.longValue(3);
@@ -2389,7 +2399,7 @@ public void getBotCache(final String key, final RequestDelegate requestDelegate)
             TLObject result = null;
             try {
                 database.executeFast("DELETE FROM botcache WHERE date < " + currentDate).stepThis().dispose();
-                SQLiteCursor cursor = database.queryFinalized( "SELECT data FROM botcache WHERE id = ?", key);
+                SQLiteCursor cursor = database.queryFinalized("SELECT data FROM botcache WHERE id = ?", key);
                 if (cursor.next()) {
                     try {
                         NativeByteBuffer data = cursor.byteBufferValue(0);
@@ -3624,7 +3634,7 @@ public void getMessages(final long dialog_id, final int count, final int max_id,
                         cursor.dispose();
 
                         cursor = database.queryFinalized(String.format(Locale.US, "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid <= %d ORDER BY m.mid DESC LIMIT %d) UNION " +
-                                        "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d ORDER BY m.mid ASC LIMIT %d)", dialog_id, messageMaxId, count_query / 2, dialog_id, messageMaxId, count_query / 2));
+                                "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d ORDER BY m.mid ASC LIMIT %d)", dialog_id, messageMaxId, count_query / 2, dialog_id, messageMaxId, count_query / 2));
                     } else if (load_type == 1) {
                         cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid < %d ORDER BY m.mid DESC LIMIT %d", dialog_id, max_id, count_query));
                     } else if (minDate != 0) {
@@ -4588,9 +4598,9 @@ public void getDownloadQueue(final int type) {
     private int getMessageMediaType(TLRPC.Message message) {
         if (message instanceof TLRPC.TL_message_secret) {
             if ((message.media instanceof TLRPC.TL_messageMediaPhoto || MessageObject.isGifMessage(message)) && message.ttl > 0 && message.ttl <= 60 ||
-                            MessageObject.isVoiceMessage(message) ||
-                            MessageObject.isVideoMessage(message) ||
-                            MessageObject.isRoundVideoMessage(message)) {
+                    MessageObject.isVoiceMessage(message) ||
+                    MessageObject.isVideoMessage(message) ||
+                    MessageObject.isRoundVideoMessage(message)) {
                 return 1;
             } else if (message.media instanceof TLRPC.TL_messageMediaPhoto || MessageObject.isVideoMessage(message)) {
                 return 0;
@@ -6941,6 +6951,33 @@ public void setDialogUnread(final long did, final boolean unread) {
         });
     }
 
+    public int getPinnedCount() {
+        final CountDownLatch countDownLatch = new CountDownLatch(1);
+        final int[] count = new int[1];
+        storageQueue.postRunnable(() -> {
+            SQLiteCursor cursor = null;
+            try {
+                cursor = database.queryFinalized("SELECT COUNT(*) FROM dialogs WHERE pinned > 0");
+                if (cursor.next()) {
+                    count[0] = cursor.intValue(0);
+                }
+            } catch (Exception e) {
+                FileLog.e(e);
+            } finally {
+                if (cursor != null) {
+                    cursor.dispose();
+                }
+            }
+            countDownLatch.countDown();
+        });
+        try {
+            countDownLatch.await();
+        } catch (Exception e) {
+            FileLog.e(e);
+        }
+        return count[0];
+    }
+
     public void setDialogFavorite(final long did, final int favorite_date) {
         storageQueue.postRunnable(() -> {
             try {
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/BottomBar/BottomNavigationBar.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/BottomBar/BottomNavigationBar.java
index 32174422f..1dff4f571 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/BottomBar/BottomNavigationBar.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/BottomBar/BottomNavigationBar.java
@@ -36,13 +36,14 @@
 import io.bettergram.utils.Counter;
 
 import static android.text.TextUtils.isEmpty;
+import static io.bettergram.service.NewsDataService.NEWS_PREF;
+import static io.bettergram.service.YoutubeDataService.YOUTUBE_PREF;
 import static io.bettergram.telegram.messenger.AndroidUtilities.runOnUIThread;
 
 public class BottomNavigationBar extends LinearLayout implements NotificationCenter.NotificationCenterDelegate {
 
     private static final String TAG = BottomNavigationBar.class.getName();
     private static final String BOTTOM_COUNTER = "BOTTOM_COUNTER";
-    private SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(BOTTOM_COUNTER, Context.MODE_PRIVATE);
 
     private static final List<Pair<Integer, Integer>> ITEMS = Arrays.asList(
             new Pair<>(R.drawable.ic_tab_chats, R.string.barItemChats),
@@ -312,7 +313,7 @@ public void didReceivedNotification(int id, int account, Object... args) {
             if (!isEmpty(tag)) {
                 Thread thread = new Thread(() -> {
                     do {
-                        if (!preferences.getBoolean(tag + "_counter_opened", false)) {
+                        if (!getPrefs(BOTTOM_COUNTER).getBoolean(tag + "_counter_opened", false)) {
                             if (tag.equals("news") && count > 0 && selectedPosition != 2 && tabs.size() > 2) {
                                 runOnUIThread(() -> {
                                     getTabAt(2).icon.countString(String.format("%s", Counter.format(count))).update();
@@ -326,13 +327,15 @@ public void didReceivedNotification(int id, int account, Object... args) {
                             if (tag.equals("news") && tabs.size() > 2) {
                                 runOnUIThread(() -> {
                                     getTabAt(2).icon.countString(Strings.EMPTY).update();
+                                    getPrefs(NEWS_PREF).edit().putInt("news_unread_count", 0).apply();
                                 });
                             } else if (tag.equals("video") && tabs.size() > 3) {
                                 runOnUIThread(() -> {
                                     getTabAt(3).icon.countString(Strings.EMPTY).update();
+                                    getPrefs(YOUTUBE_PREF).edit().putInt("videos_unread_count", 0).apply();
                                 });
                             }
-                            preferences.edit().putBoolean(tag + "_counter_opened", false).apply();
+                            getPrefs(BOTTOM_COUNTER).edit().putBoolean(tag + "_counter_opened", false).apply();
                         }
                     } while (tabs.size() == 0);
                 });
@@ -343,12 +346,16 @@ public void didReceivedNotification(int id, int account, Object... args) {
         {
             String tag = (String) args[0];
             if (!isEmpty(tag)) {
-                preferences.edit().putBoolean(tag + "_counter_opened", true).apply();
+                getPrefs(BOTTOM_COUNTER).edit().putBoolean(tag + "_counter_opened", true).apply();
                 NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateBottombarCounter, 0, tag);
             }
         }
     }
 
+    private SharedPreferences getPrefs(String name) {
+        return ApplicationLoader.applicationContext.getSharedPreferences(name, Context.MODE_PRIVATE);
+    }
+
     private boolean atLeastLollipop() {
         return Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP;
     }
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
index 71356a998..3c453a7a7 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
@@ -1166,7 +1166,7 @@ public void onMove(float dx, float dy) {
             public boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder, RecyclerView.ViewHolder target) {
                 final int position = viewHolder.getAdapterPosition();
                 final TLRPC.TL_dialog dialog = getDialog(position);
-                if (dialog != null && dialog.pinned) {
+                if (dialog != null && dialog.pinned && MessagesController.getInstance(currentAccount).getPinnedCount() > 1) {
                     if (bottomSheetDialog != null) {
                         bottomSheetDialog.dismiss();
                     }
@@ -1206,7 +1206,7 @@ public void onSwiped(RecyclerView.ViewHolder viewHolder, int direction) {
             public int getMovementFlags(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder) {
                 final int position = viewHolder.getAdapterPosition();
                 final TLRPC.TL_dialog dialog = getDialog(position);
-                if (dialog != null && dialog.pinned && dialogsAdapter.getDialogsArray().size() > 1 && !searching) {
+                if (dialog != null && dialog.pinned && dialogsAdapter.getDialogsArray().size() > 1 && !searching && MessagesController.getInstance(currentAccount).getPinnedCount() > 1) {
                     return makeFlag(ItemTouchHelper.ACTION_STATE_DRAG, ItemTouchHelper.DOWN | ItemTouchHelper.UP);
                 } else {
                     return makeFlag(ItemTouchHelper.ACTION_STATE_IDLE, ItemTouchHelper.ACTION_STATE_IDLE);
