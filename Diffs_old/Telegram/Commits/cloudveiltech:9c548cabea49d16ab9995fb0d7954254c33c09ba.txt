diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/Constants.java b/TMessagesProj/src/main/java/org/telegram/messenger/Constants.java
index 7877ffcd7..c77b891a5 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/Constants.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/Constants.java
@@ -5,13 +5,14 @@
  */
 
 public class Constants {
-        public static final boolean LOCK_DISABLE_DELETE_CHAT = true;
-        public static final boolean LOCK_DISABLE_FORWARD_CHAT = true;
+        public static final boolean LOCK_DISABLE_DELETE_CHAT = false;
+        public static final boolean LOCK_DISABLE_FORWARD_CHAT = false;
         public static final boolean LOCK_DISABLE_BOTS = true;
-        public static final boolean LOCK_DISABLE_SECRET_CHAT = true;
+        public static final boolean LOCK_DISABLE_SECRET_CHAT = false;
         public static final boolean LOCK_DISABLE_IN_APP_BROWSER = true;
         public static final boolean LOCK_DISABLE_AUTOPLAY_GIFS = true;
         public static final boolean LOCK_DISABLE_GIFS = true;
         public static final boolean LOCK_DISABLE_GLOBAL_SEARCH = true;
+        public static final boolean LOCK_DISABLE_STICKERS = true;
 
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
index 2f7bc96b4..fabbe41c4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
@@ -5,7 +5,6 @@
  *
  * Copyright Nikolai Kudashov, 2013-2017.
  */
-
 package org.telegram.ui.Adapters;
 
 import android.content.Context;
@@ -77,51 +76,6 @@ public boolean isEnabled(RecyclerView.ViewHolder holder) {
         return new RecyclerListView.Holder(view);
     }
 
-    /*@Override
-    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
-        View view;
-        switch (viewType) {
-            case 0:
-                view = new DrawerProfileCell(mContext);
-                break;
-            case 1:
-            default:
-                view = new EmptyCell(mContext, AndroidUtilities.dp(8));
-                break;
-            case 2:
-                view = new DividerCell(mContext);
-                break;
-            case 3:
-                view = new DrawerActionCell(mContext);
-				break;
-            }
-            DrawerActionCell actionCell = (DrawerActionCell) view;
-            if (i == 2) {
-                actionCell.setTextAndIcon(LocaleController.getString("NewGroup", R.string.NewGroup), R.drawable.menu_newgroup);
-            } else if (i == 3) {
-                actionCell.setTextAndIcon(LocaleController.getString("NewSecretChat", R.string.NewSecretChat), R.drawable.menu_secret);
-                //CloudVeil Start
-                if (Constants.LOCK_DISABLE_SECRET_CHAT) {
-                    actionCell.setEnabled(false);
-                    actionCell.setVisibility(View.GONE);
-                }
-                //CloudVeil End
-            } else if (i == 4) {
-                actionCell.setTextAndIcon(LocaleController.getString("NewChannel", R.string.NewChannel), R.drawable.menu_broadcast);
-            } else if (i == 6) {
-                actionCell.setTextAndIcon(LocaleController.getString("Contacts", R.string.Contacts), R.drawable.menu_contacts);
-            } else if (i == 7) {
-                actionCell.setTextAndIcon(LocaleController.getString("InviteFriends", R.string.InviteFriends), R.drawable.menu_invite);
-            } else if (i == 8) {
-                actionCell.setTextAndIcon(LocaleController.getString("Settings", R.string.Settings), R.drawable.menu_settings);
-            } else if (i == 9) {
-                actionCell.setTextAndIcon(LocaleController.getString("TelegramFaq", R.string.TelegramFaq), R.drawable.menu_help);
-            }
-        }
-        view.setLayoutParams(new RecyclerView.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
-        return new RecyclerListView.Holder(view);
-    }*/
-
     @Override
     public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
         switch (holder.getItemViewType()) {
@@ -154,17 +108,32 @@ private void resetItems() {
         }
         items.add(null); // profile
         items.add(null); // padding
-        items.add(new Item(2, LocaleController.getString("NewGroup", R.string.NewGroup), R.drawable.menu_newgroup));
-        items.add(new Item(3, LocaleController.getString("NewSecretChat", R.string.NewSecretChat), R.drawable.menu_secret));
-        items.add(new Item(4, LocaleController.getString("NewChannel", R.string.NewChannel), R.drawable.menu_broadcast));
-        items.add(null); // divider
-        items.add(new Item(6, LocaleController.getString("Contacts", R.string.Contacts), R.drawable.menu_contacts));
-        if (MessagesController.getInstance().callsEnabled) {
-            items.add(new Item(10, LocaleController.getString("Calls", R.string.Calls), R.drawable.menu_calls));
+        if (Constants.LOCK_DISABLE_SECRET_CHAT) { //If secret chats are disabled.
+            items.add(new Item(2, LocaleController.getString("NewGroup", R.string.NewGroup), R.drawable.menu_newgroup));
+            //items.add(new Item(3, LocaleController.getString("NewSecretChat", R.string.NewSecretChat), R.drawable.menu_secret));
+            items.add(new Item(4, LocaleController.getString("NewChannel", R.string.NewChannel), R.drawable.menu_broadcast));
+            //items.add(null); // divider
+            items.add(new Item(6, LocaleController.getString("Contacts", R.string.Contacts), R.drawable.menu_contacts));
+            items.add(null);
+            if (MessagesController.getInstance().callsEnabled) {
+                items.add(new Item(10, LocaleController.getString("Calls", R.string.Calls), R.drawable.menu_calls));
+            }
+            items.add(new Item(7, LocaleController.getString("InviteFriends", R.string.InviteFriends), R.drawable.menu_invite));
+            items.add(new Item(8, LocaleController.getString("Settings", R.string.Settings), R.drawable.menu_settings));
+            items.add(new Item(9, LocaleController.getString("TelegramFaq", R.string.TelegramFaq), R.drawable.menu_help));
+        } else {
+            items.add(new Item(2, LocaleController.getString("NewGroup", R.string.NewGroup), R.drawable.menu_newgroup));
+            items.add(new Item(3, LocaleController.getString("NewSecretChat", R.string.NewSecretChat), R.drawable.menu_secret));
+            items.add(new Item(4, LocaleController.getString("NewChannel", R.string.NewChannel), R.drawable.menu_broadcast));
+            items.add(null); // divider
+            items.add(new Item(6, LocaleController.getString("Contacts", R.string.Contacts), R.drawable.menu_contacts));
+            if (MessagesController.getInstance().callsEnabled) {
+                items.add(new Item(10, LocaleController.getString("Calls", R.string.Calls), R.drawable.menu_calls));
+            }
+            items.add(new Item(7, LocaleController.getString("InviteFriends", R.string.InviteFriends), R.drawable.menu_invite));
+            items.add(new Item(8, LocaleController.getString("Settings", R.string.Settings), R.drawable.menu_settings));
+            items.add(new Item(9, LocaleController.getString("TelegramFaq", R.string.TelegramFaq), R.drawable.menu_help));
         }
-        items.add(new Item(7, LocaleController.getString("InviteFriends", R.string.InviteFriends), R.drawable.menu_invite));
-        items.add(new Item(8, LocaleController.getString("Settings", R.string.Settings), R.drawable.menu_settings));
-        items.add(new Item(9, LocaleController.getString("TelegramFaq", R.string.TelegramFaq), R.drawable.menu_help));
     }
 
     public int getId(int position) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/StickersAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/StickersAdapter.java
index 4319c1163..1c5861928 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/StickersAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/StickersAdapter.java
@@ -12,6 +12,7 @@
 import android.text.TextUtils;
 import android.view.ViewGroup;
 
+import org.telegram.messenger.Constants;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.query.StickersQuery;
 import org.telegram.messenger.support.widget.RecyclerView;
@@ -190,6 +191,8 @@ public void onBindViewHolder(RecyclerView.ViewHolder viewHolder, int i) {
         } else if (i == stickers.size() - 1) {
             side = 1;
         }
-        ((StickerCell) viewHolder.itemView).setSticker(stickers.get(i), side);
+        if (!Constants.LOCK_DISABLE_STICKERS) {
+            ((StickerCell) viewHolder.itemView).setSticker(stickers.get(i), side);
+        }
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerEmojiCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerEmojiCell.java
index fda9097de..a8b381d5d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerEmojiCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerEmojiCell.java
@@ -18,6 +18,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.Constants;
 import org.telegram.messenger.Emoji;
 import org.telegram.messenger.query.StickersQuery;
 import org.telegram.tgnet.TLRPC;
@@ -63,30 +64,32 @@ public void setRecent(boolean value) {
     }
 
     public void setSticker(TLRPC.Document document, boolean showEmoji) {
-        if (document != null) {
-            sticker = document;
-            if (document.thumb != null) {
-                imageView.setImage(document.thumb.location, null, "webp", null);
-            }
+        if (!Constants.LOCK_DISABLE_STICKERS) {
+            if (document != null) {
+                sticker = document;
+                if (document.thumb != null) {
+                    imageView.setImage(document.thumb.location, null, "webp", null);
+                }
 
-            if (showEmoji) {
-                boolean set = false;
-                for (int a = 0; a < document.attributes.size(); a++) {
-                    TLRPC.DocumentAttribute attribute = document.attributes.get(a);
-                    if (attribute instanceof TLRPC.TL_documentAttributeSticker) {
-                        if (attribute.alt != null && attribute.alt.length() > 0) {
-                            emojiTextView.setText(Emoji.replaceEmoji(attribute.alt, emojiTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(16), false));
-                            set = true;
+                if (showEmoji) {
+                    boolean set = false;
+                    for (int a = 0; a < document.attributes.size(); a++) {
+                        TLRPC.DocumentAttribute attribute = document.attributes.get(a);
+                        if (attribute instanceof TLRPC.TL_documentAttributeSticker) {
+                            if (attribute.alt != null && attribute.alt.length() > 0) {
+                                emojiTextView.setText(Emoji.replaceEmoji(attribute.alt, emojiTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(16), false));
+                                set = true;
+                            }
+                            break;
                         }
-                        break;
                     }
+                    if (!set) {
+                        emojiTextView.setText(Emoji.replaceEmoji(StickersQuery.getEmojiForSticker(sticker.id), emojiTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(16), false));
+                    }
+                    emojiTextView.setVisibility(VISIBLE);
+                } else {
+                    emojiTextView.setVisibility(INVISIBLE);
                 }
-                if (!set) {
-                    emojiTextView.setText(Emoji.replaceEmoji(StickersQuery.getEmojiForSticker(sticker.id), emojiTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(16), false));
-                }
-                emojiTextView.setVisibility(VISIBLE);
-            } else {
-                emojiTextView.setVisibility(INVISIBLE);
             }
         }
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
index 334f02bce..a0f84d141 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
@@ -57,6 +57,7 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.BuildVars;
 import org.telegram.messenger.ChatObject;
+import org.telegram.messenger.Constants;
 import org.telegram.messenger.Emoji;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
@@ -1162,10 +1163,18 @@ public void setAllowStickersAndGifs(boolean value, boolean value2) {
             sizeNotifierLayout.removeView(emojiView);
             emojiView = null;
         }
-        allowStickers = value;
-        // always dissallow gifs
-        //allowGifs = value2;
-        allowGifs = false;
+
+        if (!Constants.LOCK_DISABLE_STICKERS) {
+            allowStickers = value;
+        } else {
+            allowStickers = false;
+        }
+
+        if (!Constants.LOCK_DISABLE_GIFS) {
+            allowGifs = value2;
+        } else {
+            allowGifs = false;
+        }
 
         setEmojiButtonImage();
     }
@@ -2418,7 +2427,11 @@ private void createEmojiView() {
         if (emojiView != null) {
             return;
         }
-        emojiView = new EmojiView(allowStickers, allowGifs, parentActivity);
+        if (!Constants.LOCK_DISABLE_STICKERS) {
+            emojiView = new EmojiView(allowStickers, allowGifs, parentActivity);
+        } else {
+            emojiView = new EmojiView(false, false, parentActivity);
+        }
         emojiView.setVisibility(GONE);
         emojiView.setListener(new EmojiView.Listener() {
             public boolean onBackspace() {
@@ -2516,22 +2529,24 @@ public void onShowStickerSet(TLRPC.StickerSet stickerSet, TLRPC.InputStickerSet
                 if (parentFragment == null || parentActivity == null) {
                     return;
                 }
-                if (stickerSet != null) {
-                    inputStickerSet = new TLRPC.TL_inputStickerSetID();
-                    inputStickerSet.access_hash = stickerSet.access_hash;
-                    inputStickerSet.id = stickerSet.id;
+                if (!Constants.LOCK_DISABLE_STICKERS) {
+                    if (stickerSet != null) {
+                        inputStickerSet = new TLRPC.TL_inputStickerSetID();
+                        inputStickerSet.access_hash = stickerSet.access_hash;
+                        inputStickerSet.id = stickerSet.id;
+                    }
+                    parentFragment.showDialog(new StickersAlert(parentActivity, parentFragment, inputStickerSet, null, ChatActivityEnterView.this));
                 }
-                parentFragment.showDialog(new StickersAlert(parentActivity, parentFragment, inputStickerSet, null, ChatActivityEnterView.this));
             }
 
             @Override
             public void onStickerSetAdd(TLRPC.StickerSetCovered stickerSet) {
-                StickersQuery.removeStickersSet(parentActivity, stickerSet.set, 2, parentFragment, false);
+               StickersQuery.removeStickersSet(parentActivity, stickerSet.set, 2, parentFragment, false);
             }
 
             @Override
             public void onStickerSetRemove(TLRPC.StickerSetCovered stickerSet) {
-                StickersQuery.removeStickersSet(parentActivity, stickerSet.set, 0, parentFragment, false);
+               StickersQuery.removeStickersSet(parentActivity, stickerSet.set, 0, parentFragment, false);
             }
         });
         emojiView.setVisibility(GONE);
@@ -2540,7 +2555,9 @@ public void onStickerSetRemove(TLRPC.StickerSetCovered stickerSet) {
 
     @Override
     public void onStickerSelected(TLRPC.Document sticker) {
-        SendMessagesHelper.getInstance().sendSticker(sticker, dialog_id, replyingMessageObject);
+        if (!Constants.LOCK_DISABLE_STICKERS) {
+            SendMessagesHelper.getInstance().sendSticker(sticker, dialog_id, replyingMessageObject);
+        }
         if (delegate != null) {
             delegate.onMessageSend(null);
         }
@@ -2548,7 +2565,9 @@ public void onStickerSelected(TLRPC.Document sticker) {
 
     public void addStickerToRecent(TLRPC.Document sticker) {
         createEmojiView();
-        emojiView.addRecentSticker(sticker);
+        if (!Constants.LOCK_DISABLE_STICKERS) {
+            emojiView.addRecentSticker(sticker);
+        }
     }
 
     private void showPopup(int show, int contentType) {
@@ -2639,7 +2658,9 @@ private void setEmojiButtonImage() {
         if (currentPage == 0 || !allowStickers && !allowGifs) {
             emojiButton.setImageResource(R.drawable.ic_msg_panel_smiles);
         } else if (currentPage == 1) {
-            emojiButton.setImageResource(R.drawable.ic_msg_panel_stickers);
+            if (!Constants.LOCK_DISABLE_STICKERS) {
+                emojiButton.setImageResource(R.drawable.ic_msg_panel_stickers);
+            }
         } else if (currentPage == 2) {
             emojiButton.setImageResource(R.drawable.ic_msg_panel_gif);
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
index 4d3d8024e..1b87ab4c6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
@@ -43,6 +43,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.Constants;
 import org.telegram.messenger.Emoji;
 import org.telegram.messenger.EmojiData;
 import org.telegram.messenger.LocaleController;
@@ -700,21 +701,23 @@ public boolean onTouch(View v, MotionEvent event) {
                     return StickerPreviewViewer.getInstance().onTouch(event, stickersGridView, EmojiView.this.getMeasuredHeight(), stickersOnItemClickListener, stickerPreviewViewerDelegate);
                 }
             });
-            stickersOnItemClickListener = new RecyclerListView.OnItemClickListener() {
-                @Override
-                public void onItemClick(View view, int position) {
-                    if (!(view instanceof StickerEmojiCell)) {
-                        return;
-                    }
-                    StickerPreviewViewer.getInstance().reset();
-                    StickerEmojiCell cell = (StickerEmojiCell) view;
-                    if (cell.isDisabled()) {
-                        return;
+            if (!Constants.LOCK_DISABLE_STICKERS) {
+                stickersOnItemClickListener = new RecyclerListView.OnItemClickListener() {
+                    @Override
+                    public void onItemClick(View view, int position) {
+                        if (!(view instanceof StickerEmojiCell)) {
+                            return;
+                        }
+                        StickerPreviewViewer.getInstance().reset();
+                        StickerEmojiCell cell = (StickerEmojiCell) view;
+                        if (cell.isDisabled()) {
+                            return;
+                        }
+                        cell.disable();
+                        listener.onStickerSelected(cell.getSticker());
                     }
-                    cell.disable();
-                    listener.onStickerSelected(cell.getSticker());
-                }
-            };
+                };
+            }
             stickersGridView.setOnItemClickListener(stickersOnItemClickListener);
             stickersGridView.setGlowColor(Theme.getColor(Theme.key_chat_emojiPanelBackground));
             stickersWrap.addView(stickersGridView);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/StickersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/StickersActivity.java
index 6e2a76183..c42959b53 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/StickersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/StickersActivity.java
@@ -19,6 +19,7 @@
 import android.widget.FrameLayout;
 import android.widget.Toast;
 
+import org.telegram.messenger.Constants;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
@@ -185,22 +186,24 @@ public void onItemClick(int id) {
         listView.setOnItemClickListener(new RecyclerListView.OnItemClickListener() {
             @Override
             public void onItemClick(View view, int position) {
-                if (position >= stickersStartRow && position < stickersEndRow && getParentActivity() != null) {
-                    sendReorder();
-                    final TLRPC.TL_messages_stickerSet stickerSet = StickersQuery.getStickerSets(currentType).get(position - stickersStartRow);
-                    ArrayList<TLRPC.Document> stickers = stickerSet.documents;
-                    if (stickers == null || stickers.isEmpty()) {
-                        return;
+                if (!Constants.LOCK_DISABLE_STICKERS) {
+                    if (position >= stickersStartRow && position < stickersEndRow && getParentActivity() != null) {
+                        sendReorder();
+                        final TLRPC.TL_messages_stickerSet stickerSet = StickersQuery.getStickerSets(currentType).get(position - stickersStartRow);
+                        ArrayList<TLRPC.Document> stickers = stickerSet.documents;
+                        if (stickers == null || stickers.isEmpty()) {
+                            return;
+                        }
+                        showDialog(new StickersAlert(getParentActivity(), StickersActivity.this, null, stickerSet, null));
+                    } else if (position == featuredRow) {
+                        sendReorder();
+                        presentFragment(new FeaturedStickersActivity());
+                    } else if (position == archivedRow) {
+                        sendReorder();
+                        presentFragment(new ArchivedStickersActivity(currentType));
+                    } else if (position == masksRow) {
+                        presentFragment(new StickersActivity(StickersQuery.TYPE_MASK));
                     }
-                    showDialog(new StickersAlert(getParentActivity(), StickersActivity.this, null, stickerSet, null));
-                } else if (position == featuredRow) {
-                    sendReorder();
-                    presentFragment(new FeaturedStickersActivity());
-                } else if (position == archivedRow) {
-                    sendReorder();
-                    presentFragment(new ArchivedStickersActivity(currentType));
-                } else if (position == masksRow) {
-                    presentFragment(new StickersActivity(StickersQuery.TYPE_MASK));
                 }
             }
         });
