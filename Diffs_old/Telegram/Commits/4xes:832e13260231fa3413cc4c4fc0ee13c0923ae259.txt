diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java
index 81c94370e..85da20bc0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java
@@ -21,7 +21,9 @@
 import android.text.style.URLSpan;
 import android.util.TypedValue;
 import android.view.Gravity;
+import android.view.HapticFeedbackConstants;
 import android.view.MotionEvent;
+import android.view.ViewConfiguration;
 import android.widget.FrameLayout;
 import android.widget.TextView;
 
@@ -30,14 +32,68 @@
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessageObject;
-import org.telegram.messenger.browser.Browser;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.LinkPath;
 import org.telegram.ui.ActionBar.Theme;
-import org.telegram.ui.Components.URLSpanNoUnderline;
 
 public class AboutLinkCell extends FrameLayout {
 
+    public interface AboutLinkCellDelegate {
+        void onLinkPress(final String url);
+        void onLinkLongPress(final String url);
+    }
+
+    private boolean checkingForLongPress = false;
+    private CheckForLongPress pendingCheckForLongPress = null;
+    private int pressCount = 0;
+    private CheckForTap pendingCheckForTap = null;
+
+    private final class CheckForTap implements Runnable {
+        public void run() {
+            if (pendingCheckForLongPress == null) {
+                pendingCheckForLongPress = new CheckForLongPress();
+            }
+            pendingCheckForLongPress.currentPressCount = ++pressCount;
+            postDelayed(pendingCheckForLongPress, ViewConfiguration.getLongPressTimeout() - ViewConfiguration.getTapTimeout());
+        }
+    }
+
+    class CheckForLongPress implements Runnable {
+        public int currentPressCount;
+
+        public void run() {
+            if (checkingForLongPress && getParent() != null && currentPressCount == pressCount) {
+                checkingForLongPress = false;
+                performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);
+                didPressedLink(true);
+                MotionEvent event = MotionEvent.obtain(0, 0, MotionEvent.ACTION_CANCEL, 0, 0, 0);
+                onTouchEvent(event);
+                event.recycle();
+            }
+        }
+    }
+
+    protected void startCheckLongPress() {
+        if (checkingForLongPress) {
+            return;
+        }
+        checkingForLongPress = true;
+        if (pendingCheckForTap == null) {
+            pendingCheckForTap = new CheckForTap();
+        }
+        postDelayed(pendingCheckForTap, ViewConfiguration.getTapTimeout());
+    }
+
+    protected void cancelCheckLongPress() {
+        checkingForLongPress = false;
+        if (pendingCheckForLongPress != null) {
+            removeCallbacks(pendingCheckForLongPress);
+        }
+        if (pendingCheckForTap != null) {
+            removeCallbacks(pendingCheckForTap);
+        }
+    }
+
     private StaticLayout textLayout;
     private String oldText;
     private int textX;
@@ -48,6 +104,12 @@
     private ClickableSpan pressedLink;
     private LinkPath urlPath = new LinkPath();
 
+    private AboutLinkCellDelegate delegate;
+
+    public void setDelegate(AboutLinkCellDelegate aboutLinkCellDelegate) {
+        delegate = aboutLinkCellDelegate;
+    }
+
     public AboutLinkCell(Context context) {
         super(context);
 
@@ -63,8 +125,25 @@ public AboutLinkCell(Context context) {
         setWillNotDraw(false);
     }
 
-    protected void didPressUrl(String url) {
 
+    private void didPressedLink(boolean isLongPress) {
+        if (delegate == null || pressedLink == null) {
+            return;
+        }
+        try {
+            if (pressedLink instanceof URLSpan) {
+                String url = ((URLSpan) pressedLink).getURL();
+                if (isLongPress) {
+                    delegate.onLinkLongPress(url);
+                } else {
+                    delegate.onLinkPress(url);
+                }
+            } else {
+                pressedLink.onClick(this);
+            }
+        } catch (Exception e) {
+            FileLog.e(e);
+        }
     }
 
     private void resetPressedLink() {
@@ -79,7 +158,7 @@ public void setText(String text, boolean parseLinks) {
     }
 
     public void setTextAndValue(String text, String value, boolean parseLinks) {
-        if (TextUtils.isEmpty(text) || text != null && oldText != null && text.equals(oldText)) {
+        if (TextUtils.isEmpty(text) || text != null && text.equals(oldText)) {
             return;
         }
         oldText = text;
@@ -114,13 +193,16 @@ public boolean onTouchEvent(MotionEvent event) {
                         final int off = textLayout.getOffsetForHorizontal(line, x2);
 
                         final float left = textLayout.getLineLeft(line);
-                        if (left <= x2 && left + textLayout.getLineWidth(line) >= x2) {
+                        final float top = textLayout.getLineTop(line);
+                        final float bottom = textLayout.getLineBottom(line);
+                        if (left <= x2 && left + textLayout.getLineWidth(line) >= x2 && top <= y2 && bottom >= y2) {
                             Spannable buffer = (Spannable) textLayout.getText();
                             ClickableSpan[] link = buffer.getSpans(off, off, ClickableSpan.class);
                             if (link.length != 0) {
                                 resetPressedLink();
                                 pressedLink = link[0];
                                 result = true;
+                                startCheckLongPress();
                                 try {
                                     int start = buffer.getSpanStart(pressedLink);
                                     urlPath.setCurrentLayout(textLayout, start, 0);
@@ -139,22 +221,7 @@ public boolean onTouchEvent(MotionEvent event) {
                         FileLog.e(e);
                     }
                 } else if (pressedLink != null) {
-                    try {
-                        if (pressedLink instanceof URLSpanNoUnderline) {
-                            String url = ((URLSpanNoUnderline) pressedLink).getURL();
-                            if (url.startsWith("@") || url.startsWith("#") || url.startsWith("/")) {
-                                didPressUrl(url);
-                            }
-                        } else {
-                            if (pressedLink instanceof URLSpan) {
-                                Browser.openUrl(getContext(), ((URLSpan) pressedLink).getURL());
-                            } else {
-                                pressedLink.onClick(this);
-                            }
-                        }
-                    } catch (Exception e) {
-                        FileLog.e(e);
-                    }
+                    didPressedLink(false);
                     resetPressedLink();
                     result = true;
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
index 33f4de238..d58054bf6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
@@ -64,7 +64,7 @@
 import org.telegram.messenger.SecretChatHelper;
 import org.telegram.messenger.SendMessagesHelper;
 import org.telegram.messenger.UserObject;
-import org.telegram.messenger.ApplicationLoader;
+import org.telegram.messenger.browser.Browser;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
@@ -77,6 +77,7 @@
 import org.telegram.messenger.UserConfig;
 import org.telegram.ui.ActionBar.AlertDialog;
 import org.telegram.ui.ActionBar.BackDrawable;
+import org.telegram.ui.ActionBar.BottomSheet;
 import org.telegram.ui.ActionBar.SimpleTextView;
 import org.telegram.ui.ActionBar.ThemeDescription;
 import org.telegram.ui.Cells.AboutLinkCell;
@@ -2961,6 +2962,55 @@ public void onRequestPermissionsResultFragment(int requestCode, String[] permiss
         }
     }
 
+    AboutLinkCell.AboutLinkCellDelegate aboutLinkCellDelegate = new AboutLinkCell.AboutLinkCellDelegate() {
+        @Override
+        public void onLinkPress(final String url) {
+            if (url.startsWith("@")) {
+                MessagesController.getInstance(currentAccount).openByUserName(url.substring(1), ProfileActivity.this, 0);
+            } else if (url.startsWith("#")) {
+                DialogsActivity fragment = new DialogsActivity(null);
+                fragment.setSearchString(url);
+                presentFragment(fragment);
+            } else if (url.startsWith("/")) {
+                if (parentLayout.fragmentsStack.size() > 1) {
+                    BaseFragment previousFragment = parentLayout.fragmentsStack.get(parentLayout.fragmentsStack.size() - 2);
+                    if (previousFragment instanceof ChatActivity) {
+                        finishFragment();
+                        ((ChatActivity) previousFragment).chatActivityEnterView.setCommand(null, url, false, false);
+                    }
+                }
+            } else {
+                Browser.openUrl(getParentActivity(), url);
+            }
+        }
+
+        @Override
+        public void onLinkLongPress(final String url) {
+            BottomSheet.Builder builder = new BottomSheet.Builder(getParentActivity());
+            builder.setTitle(url);
+            builder.setItems(new CharSequence[]{LocaleController.getString("Open", R.string.Open), LocaleController.getString("Copy", R.string.Copy)}, (dialog, which) -> {
+                if (which == 0) {
+                    onLinkPress(url);
+                } else if (which == 1) {
+                    String copyText = url;
+                    String toastText = LocaleController.getString("LinkCopied", R.string.LinkCopied);
+                    if (url.startsWith("mailto:")) {
+                        copyText = url.substring(7);
+                        toastText = LocaleController.getString("EmailCopied", R.string.EmailCopied);
+                    } else if (url.startsWith("tel:")) {
+                        copyText = url.substring(4);
+                        toastText = LocaleController.getString("PhoneCopied", R.string.PhoneCopied);
+                    } else if (url.startsWith("@") || url.startsWith("/") || url.startsWith("#")) {
+                        toastText = LocaleController.getString("TextCopied", R.string.TextCopied);
+                    }
+                    AndroidUtilities.addToClipboard(copyText);
+                    Toast.makeText(getParentActivity(), toastText, Toast.LENGTH_SHORT).show();
+                }
+            });
+            showDialog(builder.create());
+        }
+    };
+
     private class ListAdapter extends RecyclerListView.SelectionAdapter {
 
         private Context mContext;
@@ -2982,26 +3032,8 @@ public ListAdapter(Context context) {
                     break;
                 }
                 case 3: {
-                    view = new AboutLinkCell(mContext) {
-                        @Override
-                        protected void didPressUrl(String url) {
-                            if (url.startsWith("@")) {
-                                MessagesController.getInstance(currentAccount).openByUserName(url.substring(1), ProfileActivity.this, 0);
-                            } else if (url.startsWith("#")) {
-                                DialogsActivity fragment = new DialogsActivity(null);
-                                fragment.setSearchString(url);
-                                presentFragment(fragment);
-                            } else if (url.startsWith("/")) {
-                                if (parentLayout.fragmentsStack.size() > 1) {
-                                    BaseFragment previousFragment = parentLayout.fragmentsStack.get(parentLayout.fragmentsStack.size() - 2);
-                                    if (previousFragment instanceof ChatActivity) {
-                                        finishFragment();
-                                        ((ChatActivity) previousFragment).chatActivityEnterView.setCommand(null, url, false, false);
-                                    }
-                                }
-                            }
-                        }
-                    };
+                    view = new AboutLinkCell(mContext);
+                    ((AboutLinkCell) view).setDelegate(aboutLinkCellDelegate);
                     break;
                 }
                 case 4: {
@@ -3080,7 +3112,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 case 3:
                     AboutLinkCell aboutLinkCell = (AboutLinkCell) holder.itemView;
                     if (position == userInfoRow) {
-                        aboutLinkCell.setTextAndValue(userInfo.about, LocaleController.getString("UserBio", R.string.UserBio), isBot);
+                        aboutLinkCell.setTextAndValue(userInfo.about, LocaleController.getString("UserBio", R.string.UserBio), true);
                     } else if (position == channelInfoRow) {
                         String text = chatInfo.about;
                         while (text.contains("\n\n\n")) {
