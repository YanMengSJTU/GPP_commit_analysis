diff --git a/TMessagesProj/src/main/java/io/bettergram/tools/DialogsObject.java b/TMessagesProj/src/main/java/io/bettergram/tools/DialogsObject.java
index 7af9893da..0169eb871 100644
--- a/TMessagesProj/src/main/java/io/bettergram/tools/DialogsObject.java
+++ b/TMessagesProj/src/main/java/io/bettergram/tools/DialogsObject.java
@@ -1,5 +1,6 @@
 package io.bettergram.tools;
 
+import android.util.Log;
 import org.telegram.messenger.DialogObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.UserConfig;
@@ -34,6 +35,10 @@ public static boolean isAnnouncement(TLRPC.TL_dialog d) {
         return false;
     }
 
+    public static boolean isFavorite(TLRPC.TL_dialog d) {
+        return d.favorite_date > 0;
+    }
+
     private static int getHigherId(TLRPC.TL_dialog d) {
         return (int) (d.id >> 32);
     }
diff --git a/TMessagesProj/src/main/java/io/bettergram/ui/adapters/BetterDialogsAdapter.java b/TMessagesProj/src/main/java/io/bettergram/ui/adapters/BetterDialogsAdapter.java
index 700b0de95..e05a33903 100644
--- a/TMessagesProj/src/main/java/io/bettergram/ui/adapters/BetterDialogsAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/ui/adapters/BetterDialogsAdapter.java
@@ -18,7 +18,8 @@
             .defaultValue(dialog -> false)
             .add(101, DialogsObject::isDirect)
             .add(102, DialogsObject::isGroup)
-            .add(103, DialogsObject::isAnnouncement);
+            .add(103, DialogsObject::isAnnouncement)
+            .add(104, DialogsObject::isFavorite);
     private int currentAccount = UserConfig.selectedAccount;
     private List<TLRPC.TL_dialog> cache = null;
 
diff --git a/TMessagesProj/src/main/java/io/bettergram/utils/Time.java b/TMessagesProj/src/main/java/io/bettergram/utils/Time.java
new file mode 100644
index 000000000..cfa824c88
--- /dev/null
+++ b/TMessagesProj/src/main/java/io/bettergram/utils/Time.java
@@ -0,0 +1,8 @@
+package io.bettergram.utils;
+
+public class Time {
+
+    public static int currentMillis() {
+        return (int) (System.currentTimeMillis() % 0x7fffffff);
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index b1f360b18..7be09a346 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -23,7 +23,7 @@
 import android.util.SparseBooleanArray;
 import android.util.SparseIntArray;
 import android.widget.Toast;
-
+import io.bettergram.messenger.R;
 import org.telegram.SQLite.SQLiteCursor;
 import org.telegram.messenger.support.SparseLongArray;
 import org.telegram.messenger.voip.VoIPService;
@@ -39,16 +39,10 @@
 import org.telegram.ui.DialogsActivity;
 import org.telegram.ui.ProfileActivity;
 
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.Comparator;
-import java.util.HashMap;
-import java.util.Locale;
+import java.util.*;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.CountDownLatch;
 
-import io.bettergram.messenger.R;
-
 public class MessagesController implements NotificationCenter.NotificationCenterDelegate {
 
     private ConcurrentHashMap<Integer, TLRPC.Chat> chats = new ConcurrentHashMap<>(100, 1.0f, 2);
@@ -309,6 +303,7 @@ public int compare(TLRPC.TL_dialog dialog1, TLRPC.TL_dialog dialog2) {
 
     private int currentAccount;
     private static volatile MessagesController[] Instance = new MessagesController[UserConfig.MAX_ACCOUNT_COUNT];
+
     public static MessagesController getInstance(int num) {
         MessagesController localInstance = Instance[num];
         if (localInstance == null) {
@@ -949,7 +944,7 @@ public boolean putUser(TLRPC.User user, boolean fromCache) {
                         oldUser.photo = user.photo;
                         oldUser.flags |= 32;
                     } else {
-                        oldUser.flags = oldUser.flags &~ 32;
+                        oldUser.flags = oldUser.flags & ~32;
                         oldUser.photo = null;
                     }
                 }
@@ -983,7 +978,7 @@ public boolean putUser(TLRPC.User user, boolean fromCache) {
                     user.photo = oldUser.photo;
                     user.flags |= 32;
                 } else {
-                    user.flags = user.flags &~ 32;
+                    user.flags = user.flags & ~32;
                     user.photo = null;
                 }
                 users.put(user.id, user);
@@ -1036,7 +1031,7 @@ public void putChat(final TLRPC.Chat chat, boolean fromCache) {
                         oldChat.username = chat.username;
                         oldChat.flags |= 64;
                     } else {
-                        oldChat.flags = oldChat.flags &~ 64;
+                        oldChat.flags = oldChat.flags & ~64;
                         oldChat.username = null;
                     }
                     if (chat.participants_count != 0) {
@@ -1077,7 +1072,7 @@ public void putChat(final TLRPC.Chat chat, boolean fromCache) {
                     chat.username = oldChat.username;
                     chat.flags |= 64;
                 } else {
-                    chat.flags = chat.flags &~ 64;
+                    chat.flags = chat.flags & ~64;
                     chat.username = null;
                 }
                 if (oldChat.participants_count != 0 && chat.participants_count == 0) {
@@ -3980,7 +3975,6 @@ public void processLoadedDialogs(final TLRPC.messages_Dialogs dialogsRes, final
                 });
                 return;
             }
-
             final LongSparseArray<TLRPC.TL_dialog> new_dialogs_dict = new LongSparseArray<>();
             final LongSparseArray<MessageObject> new_dialogMessage = new LongSparseArray<>();
             final SparseArray<TLRPC.User> usersDict = new SparseArray<>();
@@ -6541,6 +6535,14 @@ public void markDialogAsUnread(long did, TLRPC.InputPeer peer, long taskId) {
         }
     }
 
+    public void favoriteDialog(final long did) {
+        TLRPC.TL_dialog dialog = dialogs_dict.get(did);
+        if (dialog != null) {
+            MessagesStorage.getInstance(currentAccount).setDialogFavorite(did, dialog.favorite_date);
+            loadDialogs(0, 100, true);
+        }
+    }
+
     public void loadUnreadDialogs() {
         if (loadingUnreadDialogs || UserConfig.getInstance(currentAccount).unreadDialogsLoaded) {
             return;
@@ -8770,7 +8772,7 @@ public boolean processUpdateArray(ArrayList<TLRPC.Update> updates, final ArrayLi
                                 continue;
                             }
                             TelephonyManager tm = (TelephonyManager) ApplicationLoader.applicationContext.getSystemService(Context.TELEPHONY_SERVICE);
-                            if (svc != null || VoIPService.callIShouldHavePutIntoIntent!=null || tm.getCallState() != TelephonyManager.CALL_STATE_IDLE) {
+                            if (svc != null || VoIPService.callIShouldHavePutIntoIntent != null || tm.getCallState() != TelephonyManager.CALL_STATE_IDLE) {
                                 if (BuildVars.LOGS_ENABLED) {
                                     FileLog.d("Auto-declining call " + call.id + " because there's already active one");
                                 }
@@ -8796,9 +8798,9 @@ public boolean processUpdateArray(ArrayList<TLRPC.Update> updates, final ArrayLi
                             intent.putExtra("user_id", call.participant_id == UserConfig.getInstance(currentAccount).getClientUserId() ? call.admin_id : call.participant_id);
                             intent.putExtra("account", currentAccount);
                             try {
-                                if(Build.VERSION.SDK_INT>=Build.VERSION_CODES.O){
+                                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
                                     ApplicationLoader.applicationContext.startForegroundService(intent);
-                                }else{
+                                } else {
                                     ApplicationLoader.applicationContext.startService(intent);
                                 }
                             } catch (Throwable e) {
@@ -9531,7 +9533,7 @@ public void openByUserName(String username, final BaseFragment fragment, final i
             if (fragment.getParentActivity() == null) {
                 return;
             }
-            final AlertDialog progressDialog[] = new AlertDialog[] {new AlertDialog(fragment.getParentActivity(), 1)};
+            final AlertDialog progressDialog[] = new AlertDialog[]{new AlertDialog(fragment.getParentActivity(), 1)};
 
             TLRPC.TL_contacts_resolveUsername req = new TLRPC.TL_contacts_resolveUsername();
             req.username = username;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java
index 7e16d2cf6..01a39bc72 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java
@@ -10,10 +10,12 @@
 
 import android.content.SharedPreferences;
 import android.text.TextUtils;
+import android.util.Log;
 import android.util.LongSparseArray;
 import android.util.SparseArray;
 import android.util.SparseIntArray;
 
+import io.bettergram.utils.Time;
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.SQLite.SQLiteCursor;
 import org.telegram.SQLite.SQLiteDatabase;
@@ -230,7 +232,7 @@ public void openDatabase(boolean first) {
                 database.executeFast("CREATE TABLE user_phones_v7(key TEXT, phone TEXT, sphone TEXT, deleted INTEGER, PRIMARY KEY (key, phone))").stepThis().dispose();
                 database.executeFast("CREATE INDEX IF NOT EXISTS sphone_deleted_idx_user_phones ON user_phones_v7(sphone, deleted);").stepThis().dispose();
 
-                database.executeFast("CREATE TABLE dialogs(did INTEGER PRIMARY KEY, date INTEGER, unread_count INTEGER, last_mid INTEGER, inbox_max INTEGER, outbox_max INTEGER, last_mid_i INTEGER, unread_count_i INTEGER, pts INTEGER, date_i INTEGER, pinned INTEGER, flags INTEGER)").stepThis().dispose();
+                database.executeFast("CREATE TABLE dialogs(did INTEGER PRIMARY KEY, date INTEGER, unread_count INTEGER, last_mid INTEGER, inbox_max INTEGER, outbox_max INTEGER, last_mid_i INTEGER, unread_count_i INTEGER, pts INTEGER, date_i INTEGER, pinned INTEGER, flags INTEGER, favorite_date INTEGER)").stepThis().dispose();
                 database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_dialogs ON dialogs(date);").stepThis().dispose();
                 database.executeFast("CREATE INDEX IF NOT EXISTS last_mid_idx_dialogs ON dialogs(last_mid);").stepThis().dispose();
                 database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_idx_dialogs ON dialogs(unread_count);").stepThis().dispose();
@@ -2447,7 +2449,7 @@ public void updateChatInfo(final TLRPC.ChatFull info, final boolean ifExist) {
                 data.reuse();
 
                 if (info instanceof TLRPC.TL_channelFull) {
-                    SQLiteCursor cursor = database.queryFinalized("SELECT date, pts, last_mid, inbox_max, outbox_max, pinned, unread_count_i, flags FROM dialogs WHERE did = " + (-info.id));
+                    SQLiteCursor cursor = database.queryFinalized("SELECT date, pts, last_mid, inbox_max, outbox_max, pinned, unread_count_i, flags, favorite_date FROM dialogs WHERE did = " + (-info.id));
                     if (cursor.next()) {
                         int inbox_max = cursor.intValue(3);
                         if (inbox_max < info.read_inbox_max_id) {
@@ -2462,8 +2464,9 @@ public void updateChatInfo(final TLRPC.ChatFull info, final boolean ifExist) {
                             int pinned = cursor.intValue(5);
                             int mentions = cursor.intValue(6);
                             int flags = cursor.intValue(7);
+                            int favorite_date = cursor.intValue(8);
 
-                            state = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
+                            state = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                             state.bindLong(1, -info.id);
                             state.bindInteger(2, dialog_date);
                             state.bindInteger(3, info.unread_count);
@@ -2476,6 +2479,7 @@ public void updateChatInfo(final TLRPC.ChatFull info, final boolean ifExist) {
                             state.bindInteger(10, 0);
                             state.bindInteger(11, pinned);
                             state.bindInteger(12, flags);
+                            state.bindInteger(13, favorite_date);
                             state.step();
                             state.dispose();
                         }
@@ -4247,7 +4251,7 @@ public void putEncryptedChat(final TLRPC.EncryptedChat chat, final TLRPC.User us
                 data4.reuse();
                 data5.reuse();
                 if (dialog != null) {
-                    state = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
+                    state = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                     state.bindLong(1, dialog.id);
                     state.bindInteger(2, dialog.last_message_date);
                     state.bindInteger(3, dialog.unread_count);
@@ -4260,6 +4264,7 @@ public void putEncryptedChat(final TLRPC.EncryptedChat chat, final TLRPC.User us
                     state.bindInteger(10, 0);
                     state.bindInteger(11, dialog.pinnedNum);
                     state.bindInteger(12, dialog.flags);
+                    state.bindInteger(13, dialog.favorite_date);
                     state.step();
                     state.dispose();
                 }
@@ -4853,7 +4858,8 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
                     mentionsIdsMap.put(messageId, message.dialog_id);
                 }
 
-                if (!(message.action instanceof TLRPC.TL_messageActionHistoryClear) && !MessageObject.isOut(message) && (message.id > 0 || MessageObject.isUnread(message))) {Integer currentMaxId = dialogsReadMax.get(message.dialog_id);
+                if (!(message.action instanceof TLRPC.TL_messageActionHistoryClear) && !MessageObject.isOut(message) && (message.id > 0 || MessageObject.isUnread(message))) {
+                    Integer currentMaxId = dialogsReadMax.get(message.dialog_id);
                     if (currentMaxId == null) {
                         SQLiteCursor cursor = database.queryFinalized("SELECT inbox_max FROM dialogs WHERE did = " + message.dialog_id);
                         if (cursor.next()) {
@@ -5095,7 +5101,7 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
             state4.dispose();
             state5.dispose();
 
-            state = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
+            state = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
 
             for (int a = 0; a < messagesMap.size(); a++) {
                 long key = messagesMap.keyAt(a);
@@ -5109,7 +5115,7 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
                     channelId = message.to_id.channel_id;
                 }
 
-                SQLiteCursor cursor = database.queryFinalized("SELECT date, unread_count, pts, last_mid, inbox_max, outbox_max, pinned, unread_count_i, flags FROM dialogs WHERE did = " + key);
+                SQLiteCursor cursor = database.queryFinalized("SELECT date, unread_count, pts, last_mid, inbox_max, outbox_max, pinned, unread_count_i, flags, favorite_date FROM dialogs WHERE did = " + key);
                 int dialog_date = 0;
                 int last_mid = 0;
                 int old_unread_count = 0;
@@ -5119,6 +5125,7 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
                 int pinned = 0;
                 int old_mentions_count = 0;
                 int flags = 0;
+                int favorite_date = 0;
                 if (cursor.next()) {
                     dialog_date = cursor.intValue(0);
                     old_unread_count = cursor.intValue(1);
@@ -5129,6 +5136,7 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
                     pinned = cursor.intValue(6);
                     old_mentions_count = cursor.intValue(7);
                     flags = cursor.intValue(8);
+                    favorite_date = cursor.intValue(9);
                 } else if (channelId != 0) {
                     MessagesController.getInstance(currentAccount).checkChannelInviter(channelId);
                 }
@@ -5174,6 +5182,7 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
                 state.bindInteger(10, 0);
                 state.bindInteger(11, pinned);
                 state.bindInteger(12, flags);
+                state.bindInteger(13, favorite_date);
                 state.step();
             }
             state.dispose();
@@ -5837,7 +5846,7 @@ private void updateDialogsWithDeletedMessagesInternal(final ArrayList<Integer> m
             ArrayList<Integer> usersToLoad = new ArrayList<>();
             ArrayList<Integer> chatsToLoad = new ArrayList<>();
             ArrayList<Integer> encryptedToLoad = new ArrayList<>();
-            SQLiteCursor cursor = database.queryFinalized(String.format(Locale.US, "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, m.date, d.pts, d.inbox_max, d.outbox_max, d.pinned, d.unread_count_i, d.flags FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid WHERE d.did IN(%s)", ids));
+            SQLiteCursor cursor = database.queryFinalized(String.format(Locale.US, "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, m.date, d.pts, d.inbox_max, d.outbox_max, d.pinned, d.unread_count_i, d.flags, d.favorite_date FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid WHERE d.did IN(%s)", ids));
             while (cursor.next()) {
                 TLRPC.TL_dialog dialog = new TLRPC.TL_dialog();
                 dialog.id = cursor.longValue(0);
@@ -5853,6 +5862,7 @@ private void updateDialogsWithDeletedMessagesInternal(final ArrayList<Integer> m
                 dialog.pinned = dialog.pinnedNum != 0;
                 int dialog_flags = cursor.intValue(14);
                 dialog.unread_mark = (dialog_flags & 1) != 0;
+                dialog.favorite_date = cursor.intValue(15);
 
                 dialogs.dialogs.add(dialog);
 
@@ -6366,15 +6376,17 @@ public void putMessages(final TLRPC.messages_Messages messages, final long dialo
                         int pinned = 0;
                         int mentions = 0;
                         int flags = 0;
-                        SQLiteCursor cursor = database.queryFinalized("SELECT pinned, unread_count_i, flags FROM dialogs WHERE did = " + dialog_id);
+                        int favorite_date = 0;
+                        SQLiteCursor cursor = database.queryFinalized("SELECT pinned, unread_count_i, flags, favorite_date FROM dialogs WHERE did = " + dialog_id);
                         if (cursor.next()) {
                             pinned = cursor.intValue(0);
                             mentions = cursor.intValue(1);
                             flags = cursor.intValue(2);
+                            favorite_date = cursor.intValue(3);
                         }
                         cursor.dispose();
 
-                        SQLitePreparedStatement state3 = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
+                        SQLitePreparedStatement state3 = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                         state3.bindLong(1, dialog_id);
                         state3.bindInteger(2, message.date);
                         state3.bindInteger(3, 0);
@@ -6387,6 +6399,7 @@ public void putMessages(final TLRPC.messages_Messages messages, final long dialo
                         state3.bindInteger(10, message.date);
                         state3.bindInteger(11, pinned);
                         state3.bindInteger(12, flags);
+                        state3.bindInteger(13, favorite_date);
                         state3.step();
                         state3.dispose();
                     }
@@ -6562,7 +6575,7 @@ public void getDialogs(final int offset, final int count) {
                 ArrayList<Integer> encryptedToLoad = new ArrayList<>();
                 ArrayList<Long> replyMessages = new ArrayList<>();
                 LongSparseArray<TLRPC.Message> replyMessageOwners = new LongSparseArray<>();
-                SQLiteCursor cursor = database.queryFinalized(String.format(Locale.US, "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, s.flags, m.date, d.pts, d.inbox_max, d.outbox_max, m.replydata, d.pinned, d.unread_count_i, d.flags FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid LEFT JOIN dialog_settings as s ON d.did = s.did ORDER BY d.pinned DESC, d.date DESC LIMIT %d,%d", offset, count));
+                SQLiteCursor cursor = database.queryFinalized(String.format(Locale.US, "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, s.flags, m.date, d.pts, d.inbox_max, d.outbox_max, m.replydata, d.pinned, d.unread_count_i, d.flags, d.favorite_date FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid LEFT JOIN dialog_settings as s ON d.did = s.did ORDER BY d.pinned DESC, d.date DESC LIMIT %d,%d", offset, count));
                 while (cursor.next()) {
                     TLRPC.TL_dialog dialog = new TLRPC.TL_dialog();
                     dialog.id = cursor.longValue(0);
@@ -6578,6 +6591,7 @@ public void getDialogs(final int offset, final int count) {
                     dialog.unread_mentions_count = cursor.intValue(15);
                     int dialog_flags = cursor.intValue(16);
                     dialog.unread_mark = (dialog_flags & 1) != 0;
+                    dialog.favorite_date = cursor.intValue(17);
                     long flags = cursor.longValue(8);
                     int low_flags = (int) flags;
                     dialog.notify_settings = new TLRPC.TL_peerNotifySettings();
@@ -6746,7 +6760,7 @@ private void putDialogsInternal(final TLRPC.messages_Dialogs dialogs, int check)
 
             if (!dialogs.dialogs.isEmpty()) {
                 SQLitePreparedStatement state = database.executeFast("REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?)");
-                SQLitePreparedStatement state2 = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
+                SQLitePreparedStatement state2 = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                 SQLitePreparedStatement state3 = database.executeFast("REPLACE INTO media_v2 VALUES(?, ?, ?, ?, ?)");
                 SQLitePreparedStatement state4 = database.executeFast("REPLACE INTO dialog_settings VALUES(?, ?)");
                 SQLitePreparedStatement state5 = database.executeFast("REPLACE INTO messages_holes VALUES(?, ?, ?)");
@@ -6847,6 +6861,7 @@ private void putDialogsInternal(final TLRPC.messages_Dialogs dialogs, int check)
                         flags |= 1;
                     }
                     state2.bindInteger(12, flags);
+                    state2.bindInteger(13, dialog.favorite_date);
                     state2.step();
 
                     if (dialog.notify_settings != null) {
@@ -6937,6 +6952,38 @@ public void setDialogUnread(final long did, final boolean unread) {
         });
     }
 
+    public void setDialogFavorite(final long did, final int favorite_date) {
+        storageQueue.postRunnable(() -> {
+            try {
+                int value = 0;
+                SQLiteCursor cursor = null;
+                try {
+                    cursor = database.queryFinalized("SELECT favorite_date FROM dialogs WHERE did = " + did);
+                    if (cursor.next()) {
+                        value = cursor.intValue(0);
+                    }
+                } catch (Exception e) {
+                    FileLog.e(e);
+                } finally {
+                    if (cursor != null) {
+                        cursor.dispose();
+                    }
+                }
+
+                value = (value == 0 ? favorite_date : value) > 0 ? 0 : Time.currentMillis();
+
+                SQLitePreparedStatement state = database.executeFast("UPDATE dialogs SET favorite_date = ? WHERE did = ?");
+                state.bindInteger(1, value);
+                state.bindLong(2, did);
+                state.step();
+                state.dispose();
+            } catch (Exception e) {
+                e.printStackTrace();
+                FileLog.e(e);
+            }
+        });
+    }
+
     public void setDialogPinned(final long did, final int pinned) {
         storageQueue.postRunnable(() -> {
             try {
diff --git a/TMessagesProj/src/main/java/org/telegram/tgnet/TLRPC.java b/TMessagesProj/src/main/java/org/telegram/tgnet/TLRPC.java
index 41ed89afd..543ba676e 100644
--- a/TMessagesProj/src/main/java/org/telegram/tgnet/TLRPC.java
+++ b/TMessagesProj/src/main/java/org/telegram/tgnet/TLRPC.java
@@ -32559,6 +32559,7 @@ public void serializeToStream(AbstractSerializedData stream) {
 		public int last_message_date; //custom
 		public long id; //custom
 		public int pinnedNum; //custom
+        public int favorite_date; //custom
 
 		public static TL_dialog TLdeserialize(AbstractSerializedData stream, int constructor, boolean exception) {
 			if (TL_dialog.constructor != constructor) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/TabsView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/TabsView.java
index 67232c8f4..ef2500c36 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/TabsView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/TabsView.java
@@ -11,6 +11,7 @@
 import android.support.v4.view.PagerAdapter;
 import android.support.v4.view.ViewPager;
 import android.util.AttributeSet;
+import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
@@ -40,8 +41,8 @@
             new Tab(LocaleController.getString("tabsDirect", R.string.tabsDirect), R.drawable.tab_user, 101),
             new Tab(LocaleController.getString("tabsGroups", R.string.tabsGroups), R.drawable.tab_group, 102),
             new Tab(LocaleController.getString("tabsAnnouncements", R.string.tabsAnnouncements), R.drawable.tab_channel, 103),
-            new Tab(LocaleController.getString("tabsFavorites", R.string.tabsFavorites), R.drawable.tab_favs, 104),
-            new Tab(LocaleController.getString("tabsCrypto", R.string.tabsCrypto), R.drawable.tab_bot, 105)
+            new Tab(LocaleController.getString("tabsFavorites", R.string.tabsFavorites), R.drawable.tab_favs, 104)
+            //new Tab(LocaleController.getString("tabsCrypto", R.string.tabsCrypto), R.drawable.tab_bot, 105)
     );
 
     private final AccelerateDecelerateInterpolator interpolator = new AccelerateDecelerateInterpolator();
@@ -50,6 +51,8 @@
     private boolean hidden;
     private int lastParentTopMargin, lastTabTopMargin;
 
+    private boolean counting = false;
+
     private static class Tab {
         private final String title;
         private final int res;
@@ -274,12 +277,14 @@ protected void onAttachedToWindow() {
         super.onAttachedToWindow();
         //TODO: important
         NotificationCenter.getInstance(currentAccount).addObserver(this, NotificationCenter.updateInterfaces);
+        NotificationCenter.getInstance(currentAccount).addObserver(this, NotificationCenter.dialogsNeedReload);
     }
 
     @Override
     public void didReceivedNotification(int id, int account, Object... args) {
         //TODO: important
-        if (id == NotificationCenter.updateInterfaces) {
+        if (!counting && (id == NotificationCenter.updateInterfaces || id == NotificationCenter.dialogsNeedReload)) {
+            counting = true;
             unreadCount();
         }
     }
@@ -298,7 +303,7 @@ private void unreadCount() {
         //unreadCountGroups();
         //unreadCount(messagesController.dialogsUsers, positions[1]);
         ArrayList<TLRPC.TL_dialog> dialogs = messagesController.dialogs;
-        for (int i = 0; i < 4; i++) {
+        for (int i = 0; i < tabs.size(); i++) {
             unreadCountAll(dialogs, i);
         }
     }
@@ -311,6 +316,7 @@ private void unreadCount() {
 
     private void unreadCount(final ArrayList<TLRPC.TL_dialog> dialogs, int position) {
         if (position == -1) {
+            counting = false;
             return;
         }
         SharedPreferences plusPreferences = ApplicationLoader.applicationContext.getSharedPreferences("plusconfig", Activity.MODE_PRIVATE);
@@ -326,7 +332,7 @@ private void unreadCount(final ArrayList<TLRPC.TL_dialog> dialogs, int position)
                         i = dialg.unread_count;
                         if (i == 0 && plusPreferences.getInt("unread_" + dialg.id, 0) == 1) i = 1;
                         if (i > 0) {
-                            if (position == 0 || (position == 1 && isDirect(dialg)) || (position == 2 && isGroup(dialg)) || (position == 3 && isAnnouncement(dialg))) {
+                            if (position == 0 || (position == 1 && isDirect(dialg)) || (position == 2 && isGroup(dialg)) || (position == 3 && isAnnouncement(dialg)) || (position == 4 & isFavorite(dialg))) {
                                 unreadCount++;
                             }
                             allMuted = false;
@@ -340,6 +346,7 @@ private void unreadCount(final ArrayList<TLRPC.TL_dialog> dialogs, int position)
             tabs.get(position).setUnread(unreadCount);
             pagerSlidingTabStrip.updateCounter(position, unreadCount, allMuted, force);
         }
+        counting = false;
     }
 
     private void unreadCountAll(ArrayList<TLRPC.TL_dialog> dialogs, int position) {
@@ -396,6 +403,14 @@ public String getPageTitle(int position) {
         }
     }
 
+    // hack
+    public void forceRefreshAction() {
+        if (refreshAction != null) {
+            int type = tabs.get(currentPage).getType();
+            refreshAction.onNewTypeSelected(type);
+        }
+    }
+
     public void hide(boolean hide) {
         if (hidden == hide) {
             return;
@@ -428,7 +443,5 @@ public void hide(boolean hide) {
         animatorSet.setDuration(200);
         animatorSet.setInterpolator(interpolator);
         animatorSet.start();
-
-
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index 557675a4a..ed45d6530 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -26,6 +26,7 @@
 import android.os.Bundle;
 import android.support.v4.view.ViewCompat;
 import android.text.TextUtils;
+import android.util.Log;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.View;
@@ -818,6 +819,7 @@ public boolean onItemClick(View view, int position, float x, float y) {
                         final TLRPC.Chat chat = MessagesController.getInstance(currentAccount).getChat(-lower_id);
                         CharSequence items[];
                         int icons[] = new int[]{
+                                dialog.favorite_date > 0 ? R.drawable.chat_unfavorite : R.drawable.chat_favorite,
                                 dialog.pinned ? R.drawable.chats_unpin : R.drawable.chats_pin,
                                 R.drawable.chats_clear,
                                 hasUnread ? R.drawable.menu_read : R.drawable.menu_unread,
@@ -831,12 +833,14 @@ public boolean onItemClick(View view, int position, float x, float y) {
                                     null};
                         } else if (chat != null && chat.megagroup) {
                             items = new CharSequence[]{
+                                    dialog.favorite_date > 0 ? LocaleController.getString("Unfavorite", R.string.Unfavorite) : LocaleController.getString("Favorite", R.string.Favorite),
                                     dialog.pinned || MessagesController.getInstance(currentAccount).canPinDialog(false) ? (dialog.pinned ? LocaleController.getString("UnpinFromTop", R.string.UnpinFromTop) : LocaleController.getString("PinToTop", R.string.PinToTop)) : null,
                                     TextUtils.isEmpty(chat.username) ? LocaleController.getString("ClearHistory", R.string.ClearHistory) : LocaleController.getString("ClearHistoryCache", R.string.ClearHistoryCache),
                                     hasUnread ? LocaleController.getString("MarkAsRead", R.string.MarkAsRead) : LocaleController.getString("MarkAsUnread", R.string.MarkAsUnread),
                                     LocaleController.getString("LeaveMegaMenu", R.string.LeaveMegaMenu)};
                         } else {
                             items = new CharSequence[]{
+                                    dialog.favorite_date > 0 ? LocaleController.getString("Unfavorite", R.string.Unfavorite) : LocaleController.getString("Favorite", R.string.Favorite),
                                     dialog.pinned || MessagesController.getInstance(currentAccount).canPinDialog(false) ? (dialog.pinned ? LocaleController.getString("UnpinFromTop", R.string.UnpinFromTop) : LocaleController.getString("PinToTop", R.string.PinToTop)) : null,
                                     LocaleController.getString("ClearHistoryCache", R.string.ClearHistoryCache),
                                     hasUnread ? LocaleController.getString("MarkAsRead", R.string.MarkAsRead) : LocaleController.getString("MarkAsUnread", R.string.MarkAsUnread),
@@ -844,11 +848,14 @@ public boolean onItemClick(View view, int position, float x, float y) {
                         }
                         builder.setItems(items, icons, (d, which) -> {
                             if (which == 0) {
+                                MessagesController.getInstance(currentAccount).favoriteDialog(selectedDialog);
+                                newTabsView.postDelayed(newTabsView::forceRefreshAction, 500);
+                            } else if (which == 1) {
                                 if (MessagesController.getInstance(currentAccount).pinDialog(selectedDialog, !pinned, null, 0) && !pinned) {
                                     hideFloatingButton(false);
                                     listView.smoothScrollToPosition(0);
                                 }
-                            } else if (which == 2) {
+                            } else if (which == 3) {
                                 if (hasUnread) {
                                     MessagesController.getInstance(currentAccount).markMentionsAsRead(selectedDialog);
                                     MessagesController.getInstance(currentAccount).markDialogAsRead(selectedDialog, dialog.top_message, dialog.top_message, dialog.last_message_date, false, 0, true);
@@ -858,7 +865,7 @@ public boolean onItemClick(View view, int position, float x, float y) {
                             } else {
                                 AlertDialog.Builder builder1 = new AlertDialog.Builder(getParentActivity());
                                 builder1.setTitle(LocaleController.getString("AppName", R.string.AppName));
-                                if (which == 1) {
+                                if (which == 2) {
                                     if (chat != null && chat.megagroup) {
                                         if (TextUtils.isEmpty(chat.username)) {
                                             builder1.setMessage(LocaleController.getString("AreYouSureClearHistory", R.string.AreYouSureClearHistory));
@@ -902,22 +909,27 @@ public boolean onItemClick(View view, int position, float x, float y) {
                         final boolean isBot = user != null && user.bot;
 
                         builder.setItems(new CharSequence[]{
+                                dialog.favorite_date > 0 ? LocaleController.getString("Unfavorite", R.string.Unfavorite) : LocaleController.getString("Favorite", R.string.Favorite),
                                 dialog.pinned || MessagesController.getInstance(currentAccount).canPinDialog(lower_id == 0) ? (dialog.pinned ? LocaleController.getString("UnpinFromTop", R.string.UnpinFromTop) : LocaleController.getString("PinToTop", R.string.PinToTop)) : null,
                                 LocaleController.getString("ClearHistory", R.string.ClearHistory),
                                 hasUnread ? LocaleController.getString("MarkAsRead", R.string.MarkAsRead) : LocaleController.getString("MarkAsUnread", R.string.MarkAsUnread),
                                 isChat ? LocaleController.getString("DeleteChat", R.string.DeleteChat) : isBot ? LocaleController.getString("DeleteAndStop", R.string.DeleteAndStop) : LocaleController.getString("Delete", R.string.Delete)
                         }, new int[]{
+                                dialog.favorite_date > 0 ? R.drawable.chat_unfavorite : R.drawable.chat_favorite,
                                 dialog.pinned ? R.drawable.chats_unpin : R.drawable.chats_pin,
                                 R.drawable.chats_clear,
                                 hasUnread ? R.drawable.menu_read : R.drawable.menu_unread,
                                 isChat ? R.drawable.chats_leave : R.drawable.chats_delete
                         }, (d, which) -> {
                             if (which == 0) {
+                                MessagesController.getInstance(currentAccount).favoriteDialog(selectedDialog);
+                                newTabsView.postDelayed(newTabsView::forceRefreshAction, 500);
+                            } else if (which == 1) {
                                 if (MessagesController.getInstance(currentAccount).pinDialog(selectedDialog, !pinned, null, 0) && !pinned) {
                                     hideFloatingButton(false);
                                     listView.smoothScrollToPosition(0);
                                 }
-                            } else if (which == 2) {
+                            } else if (which == 3) {
                                 if (hasUnread) {
                                     MessagesController.getInstance(currentAccount).markMentionsAsRead(selectedDialog);
                                     MessagesController.getInstance(currentAccount).markDialogAsRead(selectedDialog, dialog.top_message, dialog.top_message, dialog.last_message_date, false, 0, true);
@@ -927,7 +939,7 @@ public boolean onItemClick(View view, int position, float x, float y) {
                             } else {
                                 AlertDialog.Builder builder12 = new AlertDialog.Builder(getParentActivity());
                                 builder12.setTitle(LocaleController.getString("AppName", R.string.AppName));
-                                if (which == 1) {
+                                if (which == 2) {
                                     builder12.setMessage(LocaleController.getString("AreYouSureClearHistory", R.string.AreYouSureClearHistory));
                                 } else {
                                     if (isChat) {
@@ -937,7 +949,7 @@ public boolean onItemClick(View view, int position, float x, float y) {
                                     }
                                 }
                                 builder12.setPositiveButton(LocaleController.getString("OK", R.string.OK), (dialogInterface, i) -> {
-                                    if (which != 1) {
+                                    if (which != 2) {
                                         if (isChat) {
                                             TLRPC.Chat currentChat = MessagesController.getInstance(currentAccount).getChat((int) -selectedDialog);
                                             if (currentChat != null && ChatObject.isNotInChat(currentChat)) {
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/chat_favorite.png b/TMessagesProj/src/main/res/drawable-hdpi/chat_favorite.png
new file mode 100644
index 000000000..52d29be74
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/chat_favorite.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/chat_unfavorite.png b/TMessagesProj/src/main/res/drawable-hdpi/chat_unfavorite.png
new file mode 100644
index 000000000..d94481104
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/chat_unfavorite.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/chat_favorite.png b/TMessagesProj/src/main/res/drawable-mdpi/chat_favorite.png
new file mode 100644
index 000000000..de274eca1
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/chat_favorite.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/chat_unfavorite.png b/TMessagesProj/src/main/res/drawable-mdpi/chat_unfavorite.png
new file mode 100644
index 000000000..0fcd25c42
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/chat_unfavorite.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/chat_favorite.png b/TMessagesProj/src/main/res/drawable-xhdpi/chat_favorite.png
new file mode 100644
index 000000000..a4ffbdd02
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/chat_favorite.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/chat_unfavorite.png b/TMessagesProj/src/main/res/drawable-xhdpi/chat_unfavorite.png
new file mode 100644
index 000000000..757ca1d48
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/chat_unfavorite.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/chat_favorite.png b/TMessagesProj/src/main/res/drawable-xxhdpi/chat_favorite.png
new file mode 100644
index 000000000..bb8b58611
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/chat_favorite.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/chat_unfavorite.png b/TMessagesProj/src/main/res/drawable-xxhdpi/chat_unfavorite.png
new file mode 100644
index 000000000..b9236211a
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/chat_unfavorite.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxxhdpi/chat_favorite.png b/TMessagesProj/src/main/res/drawable-xxxhdpi/chat_favorite.png
new file mode 100644
index 000000000..df9373223
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxxhdpi/chat_favorite.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxxhdpi/chat_unfavorite.png b/TMessagesProj/src/main/res/drawable-xxxhdpi/chat_unfavorite.png
new file mode 100644
index 000000000..1da02fc0a
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxxhdpi/chat_unfavorite.png differ
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index f4bb5c704..e85313449 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -201,6 +201,8 @@
     <string name="PreviewFeedback">Leave feedback about this preview</string>
     <string name="SendStickerPreview">Send Sticker</string>
     <string name="ViewPackPreview">View Pack</string>
+    <string name="Favorite">Favorite</string>
+    <string name="Unfavorite">Unfavorite</string>
     <string name="PinToTop">Pin to top</string>
     <string name="UnpinFromTop">Unpin from top</string>
     <string name="MarkAsUnread">Mark as unread</string>
