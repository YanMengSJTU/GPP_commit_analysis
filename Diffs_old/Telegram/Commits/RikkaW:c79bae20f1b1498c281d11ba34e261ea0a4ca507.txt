diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index 48685c0df..5544a4e27 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -12,16 +12,16 @@ dependencies {
     compile 'com.google.android.gms:play-services-gcm:9.6.1'
     compile 'com.google.android.gms:play-services-maps:9.6.1'
     compile 'com.google.android.gms:play-services-vision:9.6.1'
-    compile 'com.android.support:support-core-ui:24.2.1'
-    compile 'com.android.support:support-compat:24.2.1'
-    compile 'com.android.support:support-core-utils:24.2.1'
+    compile 'com.android.support:support-core-ui:25.0.0'
+    compile 'com.android.support:support-compat:25.0.0'
+    compile 'com.android.support:support-core-utils:25.0.0'
     compile 'net.hockeyapp.android:HockeySDK:4.0.1'
     compile 'com.googlecode.mp4parser:isoparser:1.0.6'
 }
 
 android {
-    compileSdkVersion 24
-    buildToolsVersion '24.0.2'
+    compileSdkVersion 25
+    buildToolsVersion '25.0.0'
 
     useLibrary 'org.apache.http.legacy'
     defaultConfig.applicationId = "rikka.rikkagram"
@@ -80,7 +80,7 @@ android {
         }
     }
 
-    defaultConfig.versionCode = 851 + 1
+    defaultConfig.versionCode = 851 + 5
 
     sourceSets.debug {
         manifest.srcFile 'config/debug/AndroidManifest.xml'
@@ -118,17 +118,25 @@ android {
     }
 
     defaultConfig {
-        minSdkVersion 19
-        targetSdkVersion 24
-        versionName "3.13.1.1"
+        minSdkVersion 21
+        targetSdkVersion 25
+        versionName "3.13.1.5"
 
         externalNativeBuild {
             ndkBuild {
-                arguments "NDK_APPLICATION_MK:=jni/Application.mk", "APP_PLATFORM:=android-19"
+                arguments "NDK_APPLICATION_MK:=jni/Application.mk", "APP_PLATFORM:=android-21"
                 abiFilters "armeabi-v7a", "x86"
             }
         }
     }
+
+    applicationVariants.all { variant ->
+        variant.outputs.each { output ->
+            if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
+                output.outputFile = file("${output.outputFile.parent}/Rikkagram-${variant.versionCode}.apk")
+            }
+        }
+    }
 }
 
 apply plugin: 'com.google.gms.google-services'
diff --git a/TMessagesProj/config/debug/AndroidManifest.xml b/TMessagesProj/config/debug/AndroidManifest.xml
index 09fdf2da8..477d933be 100644
--- a/TMessagesProj/config/debug/AndroidManifest.xml
+++ b/TMessagesProj/config/debug/AndroidManifest.xml
@@ -39,7 +39,7 @@
             <intent-filter>
                 <action android:name="com.google.android.c2dm.intent.RECEIVE" />
                 <action android:name="com.google.android.c2dm.intent.REGISTRATION" />
-                <category android:name="org.telegram.messenger" />
+                <category android:name="rikka.rikkagram.beta" />
             </intent-filter>
         </receiver>
         <service
diff --git a/TMessagesProj/src/main/assets/fonts/ritalic.ttf b/TMessagesProj/src/main/assets/fonts/ritalic.ttf
deleted file mode 100644
index 2041cbc00..000000000
Binary files a/TMessagesProj/src/main/assets/fonts/ritalic.ttf and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/fonts/rmedium.ttf b/TMessagesProj/src/main/assets/fonts/rmedium.ttf
deleted file mode 100644
index a3c1a1f17..000000000
Binary files a/TMessagesProj/src/main/assets/fonts/rmedium.ttf and /dev/null differ
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
index 2d93a989a..d228148ae 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
@@ -35,6 +35,9 @@
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.SerializedData;
 import org.telegram.tgnet.TLRPC;
+import org.telegram.ui.ActionBar.Theme;
+import org.telegram.ui.Cells.ProfileSearchCell;
+import org.telegram.ui.Components.DayNightActivity;
 import org.telegram.ui.Components.ForegroundDetector;
 
 import java.io.File;
@@ -65,6 +68,23 @@ public static int getSelectedColor() {
         return selectedColor;
     }
 
+    public static void reloadWallpaperNightModeChanged() {
+        cachedWallpaper = null;
+        serviceMessageColor = 0;
+        ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).edit().remove("serviceMessageColor").commit();
+
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        int selectedBackground = preferences.getInt("selectedBackground", 1000001);
+        selectedColor = preferences.getInt("selectedColor", 0);
+        serviceMessageColor = preferences.getInt("serviceMessageColor", 0);
+        serviceSelectedMessageColor = preferences.getInt("serviceSelectedMessageColor", 0);
+        if (selectedColor == 0) {
+            if (selectedBackground == 1000001) {
+                loadWallpaper();
+            }
+        }
+    }
+
     public static void reloadWallpaper() {
         cachedWallpaper = null;
         serviceMessageColor = 0;
@@ -303,6 +323,10 @@ public void onCreate() {
         applicationHandler = new Handler(applicationContext.getMainLooper());
 
         startPushService();
+
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        DayNightActivity.setDefaultNightMode(preferences.getInt("nightMode", DayNightActivity.MODE_NIGHT_NO));
+        Theme.resetColor(this);
     }
 
     /*public static void sendRegIdToBackend(final String token) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/Emoji.java b/TMessagesProj/src/main/java/org/telegram/messenger/Emoji.java
index a11577224..f1ae95487 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/Emoji.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/Emoji.java
@@ -15,6 +15,7 @@
 import android.graphics.Paint;
 import android.graphics.PixelFormat;
 import android.graphics.Rect;
+import android.graphics.Typeface;
 import android.graphics.drawable.Drawable;
 import android.os.Build;
 import android.text.Spannable;
@@ -449,7 +450,7 @@ public static CharSequence replaceEmoji(CharSequence cs, Paint.FontMetricsInt fo
                     drawable = Emoji.getEmojiDrawable(emojiCode.subSequence(0, emojiCode.length()));
                     if (drawable != null) {
                         if (MessagesController.getInstance().useGoogleEmoji) {
-                            span = new TypefaceSpan(AndroidUtilities.getTypeface("fonts/NotoColorEmoji.ttf"));
+                            span = new TypefaceSpan(AndroidUtilities.getTypeface("fonts/NotoColorEmoji.ttf"), 0, 0xffffffff);
                         } else {
                             span = new EmojiSpan(drawable, DynamicDrawableSpan.ALIGN_BOTTOM, size, fontMetrics);
                         }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java
index b9e954d36..98bc02b5d 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java
@@ -93,6 +93,17 @@
 
     private static final int LINES_PER_BLOCK = 10;
 
+    public static void resetPaint() {
+        if (textPaint != null) {
+            textPaint.setColor(Theme.MSG_TEXT_COLOR);
+            textPaint.linkColor = Theme.MSG_LINK_TEXT_COLOR;
+        }
+        if (gameTextPaint != null) {
+            gameTextPaint.setColor(Theme.MSG_TEXT_COLOR);
+            gameTextPaint.linkColor = Theme.MSG_LINK_TEXT_COLOR;
+        }
+    }
+
     public ArrayList<TextLayoutBlock> textLayoutBlocks;
 
     public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> users, boolean generateLayout) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
index 1822c4e15..d14b97735 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
@@ -20,6 +20,7 @@
 import android.graphics.drawable.Drawable;
 import android.os.Build;
 import android.os.Handler;
+import android.support.v4.content.ContextCompat;
 import android.view.Gravity;
 import android.view.KeyEvent;
 import android.view.MotionEvent;
@@ -35,6 +36,7 @@
 import org.telegram.messenger.R;
 import org.telegram.messenger.AnimatorListenerAdapterProxy;
 import org.telegram.ui.Components.LayoutHelper;
+import org.telegram.ui.SettingsActivity;
 
 import java.util.ArrayList;
 
@@ -385,7 +387,7 @@ private void prepareForMoving(MotionEvent ev) {
         layoutParams.height = LayoutHelper.MATCH_PARENT;
         fragmentView.setLayoutParams(layoutParams);
         if (!lastFragment.hasOwnBackground && fragmentView.getBackground() == null) {
-            fragmentView.setBackgroundColor(0xffffffff);
+            fragmentView.setBackgroundColor(ContextCompat.getColor(getContext(), R.color.background));
         }
         lastFragment.onResume();
     }
@@ -682,7 +684,7 @@ public boolean presentFragment(final BaseFragment fragment, final boolean remove
         fragment.onResume();
         currentActionBar = fragment.actionBar;
         if (!fragment.hasOwnBackground && fragmentView.getBackground() == null) {
-            fragmentView.setBackgroundColor(0xffffffff);
+            fragmentView.setBackgroundColor(ContextCompat.getColor(getContext(), R.color.background));
         }
 
         LinearLayoutContainer temp = containerView;
@@ -899,7 +901,7 @@ public void closeLastFragment(boolean animated) {
             previousFragment.onResume();
             currentActionBar = previousFragment.actionBar;
             if (!previousFragment.hasOwnBackground && fragmentView.getBackground() == null) {
-                fragmentView.setBackgroundColor(0xffffffff);
+                fragmentView.setBackgroundColor(ContextCompat.getColor(getContext(), R.color.background));
             }
 
             if (!needAnimation) {
@@ -1058,7 +1060,7 @@ public void showLastFragment() {
         previousFragment.onResume();
         currentActionBar = previousFragment.actionBar;
         if (!previousFragment.hasOwnBackground && fragmentView.getBackground() == null) {
-            fragmentView.setBackgroundColor(0xffffffff);
+            fragmentView.setBackgroundColor(ContextCompat.getColor(getContext(), R.color.background));
         }
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BottomSheet.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BottomSheet.java
index 3c3c2afc4..3d0404db7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BottomSheet.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BottomSheet.java
@@ -21,6 +21,7 @@
 import android.graphics.drawable.Drawable;
 import android.os.Build;
 import android.os.Bundle;
+import android.support.v4.content.ContextCompat;
 import android.support.v4.view.NestedScrollingParent;
 import android.support.v4.view.NestedScrollingParentHelper;
 import android.support.v4.view.ViewCompat;
@@ -450,12 +451,12 @@ public BottomSheetCell(Context context, int type) {
             textView.setGravity(Gravity.CENTER_HORIZONTAL);
             textView.setEllipsize(TextUtils.TruncateAt.END);
             if (type == 0) {
-                textView.setTextColor(0xff212121);
+                textView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
                 textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
                 addView(textView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.CENTER_VERTICAL));
             } else if (type == 1) {
                 textView.setGravity(Gravity.CENTER);
-                textView.setTextColor(0xff212121);
+                textView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
                 textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
                 textView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
                 addView(textView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
@@ -566,7 +567,7 @@ public boolean hasOverlappingRendering() {
                 titleView.setLines(1);
                 titleView.setSingleLine(true);
                 titleView.setText(title);
-                titleView.setTextColor(0xff757575);
+                titleView.setTextColor(ContextCompat.getColor(getContext(), R.color.primary_text) /*0xff757575*/);
                 titleView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
                 titleView.setEllipsize(TextUtils.TruncateAt.MIDDLE);
                 titleView.setPadding(AndroidUtilities.dp(16), 0, AndroidUtilities.dp(16), AndroidUtilities.dp(8));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
index e76bce904..a04a51a6f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
@@ -10,9 +10,11 @@
 
 import android.content.Context;
 import android.content.res.ColorStateList;
+import android.content.res.Configuration;
 import android.graphics.Canvas;
 import android.graphics.ColorFilter;
 import android.graphics.Paint;
+import android.graphics.PixelFormat;
 import android.graphics.PorterDuff;
 import android.graphics.PorterDuffColorFilter;
 import android.graphics.drawable.ColorDrawable;
@@ -20,14 +22,17 @@
 import android.graphics.drawable.RippleDrawable;
 import android.graphics.drawable.StateListDrawable;
 import android.os.Build;
+import android.support.v4.content.ContextCompat;
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
+import org.telegram.messenger.Emoji;
 import org.telegram.messenger.R;
+import org.telegram.ui.Components.EmojiView;
 
 public class Theme {
 
-    public static final int ACTION_BAR_COLOR = 0xff527da3;
+    public static int ACTION_BAR_COLOR = 0xff527da3;
     public static final int ACTION_BAR_PHOTO_VIEWER_COLOR = 0x7f000000;
     public static final int ACTION_BAR_MEDIA_PICKER_COLOR = 0xff333333;
     public static final int ACTION_BAR_VIDEO_EDIT_COLOR = 0xff000000;
@@ -35,7 +40,7 @@
     public static final int ACTION_BAR_PLAYER_COLOR = 0xffffffff;
     public static final int ACTION_BAR_TITLE_COLOR = 0xffffffff;
     public static final int ACTION_BAR_SUBTITLE_COLOR = 0xffd5e8f7;
-    public static final int ACTION_BAR_PROFILE_COLOR = 0xff598fba;
+    public static int ACTION_BAR_PROFILE_COLOR = 0xff598fba;
     public static final int ACTION_BAR_PROFILE_SUBTITLE_COLOR = 0xffd7eafa;
     public static final int ACTION_BAR_MAIN_AVATAR_COLOR = 0xff5085b1;
     public static final int ACTION_BAR_ACTION_MODE_TEXT_COLOR = 0xff737373;
@@ -56,7 +61,7 @@
     public static final int ACTION_BAR_VIOLET_SELECTOR_COLOR = 0xff735fbe;
     public static final int ACTION_BAR_YELLOW_SELECTOR_COLOR = 0xffef9f09;
 
-    public static final int ATTACH_SHEET_TEXT_COLOR = 0xff757575;
+    public static int ATTACH_SHEET_TEXT_COLOR = 0xff757575;
 
     public static final int DIALOGS_MESSAGE_TEXT_COLOR = 0xff8f8f8f;
     public static final int DIALOGS_NAME_TEXT_COLOR = 0xff4d83b3;
@@ -77,8 +82,8 @@
     public static final int INAPP_PLAYER_TITLE_TEXT_COLOR = 0xff2f3438;
     public static final int INAPP_PLAYER_BACKGROUND_COLOR = 0xffffffff;
 
-    public static final int REPLY_PANEL_NAME_TEXT_COLOR = 0xff3a8ccf;
-    public static final int REPLY_PANEL_MESSAGE_TEXT_COLOR = 0xff222222;
+    public static int REPLY_PANEL_NAME_TEXT_COLOR = 0xff3a8ccf;
+    public static int REPLY_PANEL_MESSAGE_TEXT_COLOR = 0xff222222;
 
     public static final int ALERT_PANEL_NAME_TEXT_COLOR = 0xff3a8ccf;
     public static final int ALERT_PANEL_MESSAGE_TEXT_COLOR = 0xff999999;
@@ -106,94 +111,94 @@
 
     public static final int SECRET_CHAT_INFO_TEXT_COLOR = 0xffffffff;
 
-    public static final int MSG_SELECTED_BACKGROUND_COLOR = 0x6633b5e5;
-    public static final int MSG_WEB_PREVIEW_DURATION_TEXT_COLOR = 0xffffffff;
-    public static final int MSG_WEB_PREVIEW_GAME_TEXT_COLOR = 0xffffffff;
-    public static final int MSG_SECRET_TIME_TEXT_COLOR = 0xffe4e2e0;
-    public static final int MSG_STICKER_NAME_TEXT_COLOR = 0xffffffff;
-    public static final int MSG_BOT_BUTTON_TEXT_COLOR = 0xffffffff;
-    public static final int MSG_BOT_PROGRESS_COLOR = 0xffffffff;
-    public static final int MSG_IN_FORDWARDED_NAME_TEXT_COLOR = 0xff3886c7;
-    public static final int MSG_OUT_FORDWARDED_NAME_TEXT_COLOR = 0xff55ab4f;
-    public static final int MSG_IN_VIA_BOT_NAME_TEXT_COLOR = 0xff3a8ccf;
-    public static final int MSG_OUT_VIA_BOT_NAME_TEXT_COLOR = 0xff55ab4f;
-    public static final int MSG_STICKER_VIA_BOT_NAME_TEXT_COLOR = 0xffffffff;
-    public static final int MSG_IN_REPLY_LINE_COLOR = 0xff70b4e8;
-    public static final int MSG_OUT_REPLY_LINE_COLOR = 0xff88c97b;
-    public static final int MSG_STICKER_REPLY_LINE_COLOR = 0xffffffff;
-    public static final int MSG_IN_REPLY_NAME_TEXT_COLOR = 0xff3a8ccf;
-    public static final int MSG_OUT_REPLY_NAME_TEXT_COLOR = 0xff55ab4f;
-    public static final int MSG_STICKER_REPLY_NAME_TEXT_COLOR = 0xffffffff;
-    public static final int MSG_IN_REPLY_MESSAGE_TEXT_COLOR = 0xff000000;
-    public static final int MSG_OUT_REPLY_MESSAGE_TEXT_COLOR = 0xff000000;
-    public static final int MSG_IN_REPLY_MEDIA_MESSAGE_TEXT_COLOR = 0xffa1aab3;
-    public static final int MSG_OUT_REPLY_MEDIA_MESSAGE_TEXT_COLOR = 0xff65b05b;
-    public static final int MSG_IN_REPLY_MEDIA_MESSAGE_SELETED_TEXT_COLOR = 0xff89b4c1;
-    public static final int MSG_OUT_REPLY_MEDIA_MESSAGE_SELETED_TEXT_COLOR = 0xff65b05b;
-    public static final int MSG_STICKER_REPLY_MESSAGE_TEXT_COLOR = 0xffffffff;
-    public static final int MSG_IN_WEB_PREVIEW_LINE_COLOR = 0xff70b4e8;
-    public static final int MSG_OUT_WEB_PREVIEW_LINE_COLOR = 0xff88c97b;
-    public static final int MSG_IN_SITE_NAME_TEXT_COLOR = 0xff3a8ccf;
-    public static final int MSG_OUT_SITE_NAME_TEXT_COLOR = 0xff55ab4f;
-    public static final int MSG_IN_CONTACT_NAME_TEXT_COLOR = 0xff4e9ad4;
-    public static final int MSG_OUT_CONTACT_NAME_TEXT_COLOR = 0xff55ab4f;
-    public static final int MSG_IN_CONTACT_PHONE_TEXT_COLOR = 0xff2f3438;
-    public static final int MSG_OUT_CONTACT_PHONE_TEXT_COLOR = 0xff354234;
-    public static final int MSG_MEDIA_PROGRESS_COLOR = 0xffffffff;
-    public static final int MSG_IN_AUDIO_PROGRESS_COLOR = 0xffffffff;
-    public static final int MSG_OUT_AUDIO_PROGRESS_COLOR = 0xffefffde;
-    public static final int MSG_IN_AUDIO_SELECTED_PROGRESS_COLOR = 0xffe2f8ff;
-    public static final int MSG_OUT_AUDIO_SELECTED_PROGRESS_COLOR = 0xffd4f5bc;
-    public static final int MSG_MEDIA_TIME_TEXT_COLOR = 0xffffffff;
-    public static final int MSG_IN_TIME_TEXT_COLOR = 0xffa1aab3;
-    public static final int MSG_OUT_TIME_TEXT_COLOR = 0xff70b15c;
-    public static final int MSG_IN_TIME_SELECTED_TEXT_COLOR = 0xff89b4c1;
-    public static final int MSG_OUT_TIME_SELECTED_TEXT_COLOR = 0xff70b15c;
-    public static final int MSG_IN_AUDIO_PERFORMER_TEXT_COLOR = 0xff2f3438;
-    public static final int MSG_OUT_AUDIO_PERFORMER_TEXT_COLOR = 0xff354234;
-    public static final int MSG_IN_AUDIO_TITLE_TEXT_COLOR = 0xff4e9ad4;
-    public static final int MSG_OUT_AUDIO_TITLE_TEXT_COLOR = 0xff55ab4f;
-    public static final int MSG_IN_AUDIO_DURATION_TEXT_COLOR = 0xffa1aab3;
-    public static final int MSG_OUT_AUDIO_DURATION_TEXT_COLOR = 0xff65b05b;
-    public static final int MSG_IN_AUDIO_DURATION_SELECTED_TEXT_COLOR = 0xff89b4c1;
-    public static final int MSG_OUT_AUDIO_DURATION_SELECTED_TEXT_COLOR = 0xff65b05b;
-    public static final int MSG_IN_AUDIO_SEEKBAR_COLOR = 0xffe4eaf0;
-    public static final int MSG_OUT_AUDIO_SEEKBAR_COLOR = 0xffbbe3ac;
-    public static final int MSG_IN_AUDIO_SEEKBAR_SELECTED_COLOR = 0xffbcdee8;
-    public static final int MSG_OUT_AUDIO_SEEKBAR_SELECTED_COLOR = 0xffa9dd96;
-    public static final int MSG_IN_AUDIO_SEEKBAR_FILL_COLOR = 0xff72b5e8;
-    public static final int MSG_OUT_AUDIO_SEEKBAR_FILL_COLOR = 0xff78c272;
-    public static final int MSG_IN_VOICE_SEEKBAR_COLOR = 0xffdee5eb;
-    public static final int MSG_OUT_VOICE_SEEKBAR_COLOR = 0xffbbe3ac;
-    public static final int MSG_IN_VOICE_SEEKBAR_SELECTED_COLOR = 0xffbcdee8;
-    public static final int MSG_OUT_VOICE_SEEKBAR_SELECTED_COLOR = 0xffa9dd96;
-    public static final int MSG_IN_VOICE_SEEKBAR_FILL_COLOR = 0xff72b5e8;
-    public static final int MSG_OUT_VOICE_SEEKBAR_FILL_COLOR = 0xff78c272;
-    public static final int MSG_IN_FILE_PROGRESS_COLOR = 0xffebf0f5;
-    public static final int MSG_OUT_FILE_PROGRESS_COLOR = 0xffdaf5c3;
-    public static final int MSG_IN_FILE_PROGRESS_SELECTED_COLOR = 0xffcbeaf6;
-    public static final int MSG_OUT_FILE_PROGRESS_SELECTED_COLOR = 0xffc5eca7;
-    public static final int MSG_IN_FILE_NAME_TEXT_COLOR = 0xff4e9ad4;
-    public static final int MSG_OUT_FILE_NAME_TEXT_COLOR = 0xff55ab4f;
-    public static final int MSG_IN_FILE_INFO_TEXT_COLOR = 0xffa1aab3;
-    public static final int MSG_OUT_FILE_INFO_TEXT_COLOR = 0xff65b05b;
-    public static final int MSG_IN_FILE_INFO_SELECTED_TEXT_COLOR = 0xff89b4c1;
-    public static final int MSG_OUT_FILE_INFO_SELECTED_TEXT_COLOR = 0xff65b05b;
-    public static final int MSG_IN_FILE_BACKGROUND_COLOR = 0xffebf0f5;
-    public static final int MSG_OUT_FILE_BACKGROUND_COLOR = 0xffdaf5c3;
-    public static final int MSG_IN_FILE_BACKGROUND_SELECTED_COLOR = 0xffcbeaf6;
-    public static final int MSG_OUT_FILE_BACKGROUND_SELECTED_COLOR = 0xffc5eca7;
-    public static final int MSG_IN_VENUE_NAME_TEXT_COLOR = 0xff4e9ad4;
-    public static final int MSG_OUT_VENUE_NAME_TEXT_COLOR = 0xff55ab4f;
-    public static final int MSG_IN_VENUE_INFO_TEXT_COLOR = 0xffa1aab3;
-    public static final int MSG_OUT_VENUE_INFO_TEXT_COLOR = 0xff65b05b;
-    public static final int MSG_IN_VENUE_INFO_SELECTED_TEXT_COLOR = 0xff89b4c1;
-    public static final int MSG_OUT_VENUE_INFO_SELECTED_TEXT_COLOR = 0xff65b05b;
-    public static final int MSG_MEDIA_INFO_TEXT_COLOR = 0xffffffff;
-    public static final int MSG_TEXT_COLOR = 0xff000000;
-    public static final int MSG_LINK_TEXT_COLOR = 0xff2678b6;
-    public static final int MSG_LINK_SELECT_BACKGROUND_COLOR = 0x3362a9e3;
-    public static final int MSG_TEXT_SELECT_BACKGROUND_COLOR = 0x6662a9e3;
+    public static int MSG_SELECTED_BACKGROUND_COLOR = 0x6633b5e5;
+    public static int MSG_WEB_PREVIEW_DURATION_TEXT_COLOR = 0xffffffff;
+    public static int MSG_WEB_PREVIEW_GAME_TEXT_COLOR = 0xffffffff;
+    public static int MSG_SECRET_TIME_TEXT_COLOR = 0xffe4e2e0;
+    public static int MSG_STICKER_NAME_TEXT_COLOR = 0xffffffff;
+    public static int MSG_BOT_BUTTON_TEXT_COLOR = 0xffffffff;
+    public static int MSG_BOT_PROGRESS_COLOR = 0xffffffff;
+    public static int MSG_IN_FORDWARDED_NAME_TEXT_COLOR = 0xff3886c7;
+    public static int MSG_OUT_FORDWARDED_NAME_TEXT_COLOR = 0xff55ab4f;
+    public static int MSG_IN_VIA_BOT_NAME_TEXT_COLOR = 0xff3a8ccf;
+    public static int MSG_OUT_VIA_BOT_NAME_TEXT_COLOR = 0xff55ab4f;
+    public static int MSG_STICKER_VIA_BOT_NAME_TEXT_COLOR = 0xffffffff;
+    public static int MSG_IN_REPLY_LINE_COLOR = 0xff70b4e8;
+    public static int MSG_OUT_REPLY_LINE_COLOR = 0xff88c97b;
+    public static int MSG_STICKER_REPLY_LINE_COLOR = 0xffffffff;
+    public static int MSG_IN_REPLY_NAME_TEXT_COLOR = 0xff3a8ccf;
+    public static int MSG_OUT_REPLY_NAME_TEXT_COLOR = 0xff55ab4f;
+    public static int MSG_STICKER_REPLY_NAME_TEXT_COLOR = 0xffffffff;
+    public static int MSG_IN_REPLY_MESSAGE_TEXT_COLOR = 0xff000000;
+    public static int MSG_OUT_REPLY_MESSAGE_TEXT_COLOR = 0xff000000;
+    public static int MSG_IN_REPLY_MEDIA_MESSAGE_TEXT_COLOR = 0xffa1aab3;
+    public static int MSG_OUT_REPLY_MEDIA_MESSAGE_TEXT_COLOR = 0xff65b05b;
+    public static int MSG_IN_REPLY_MEDIA_MESSAGE_SELETED_TEXT_COLOR = 0xff89b4c1;
+    public static int MSG_OUT_REPLY_MEDIA_MESSAGE_SELETED_TEXT_COLOR = 0xff65b05b;
+    public static int MSG_STICKER_REPLY_MESSAGE_TEXT_COLOR = 0xffffffff;
+    public static int MSG_IN_WEB_PREVIEW_LINE_COLOR = 0xff70b4e8;
+    public static int MSG_OUT_WEB_PREVIEW_LINE_COLOR = 0xff88c97b;
+    public static int MSG_IN_SITE_NAME_TEXT_COLOR = 0xff3a8ccf;
+    public static int MSG_OUT_SITE_NAME_TEXT_COLOR = 0xff55ab4f;
+    public static int MSG_IN_CONTACT_NAME_TEXT_COLOR = 0xff4e9ad4;
+    public static int MSG_OUT_CONTACT_NAME_TEXT_COLOR = 0xff55ab4f;
+    public static int MSG_IN_CONTACT_PHONE_TEXT_COLOR = 0xff2f3438;
+    public static int MSG_OUT_CONTACT_PHONE_TEXT_COLOR = 0xff354234;
+    public static int MSG_MEDIA_PROGRESS_COLOR = 0xffffffff;
+    public static int MSG_IN_AUDIO_PROGRESS_COLOR = 0xffffffff;
+    public static int MSG_OUT_AUDIO_PROGRESS_COLOR = 0xffefffde;
+    public static int MSG_IN_AUDIO_SELECTED_PROGRESS_COLOR = 0xffe2f8ff;
+    public static int MSG_OUT_AUDIO_SELECTED_PROGRESS_COLOR = 0xffd4f5bc;
+    public static int MSG_MEDIA_TIME_TEXT_COLOR = 0xffffffff;
+    public static int MSG_IN_TIME_TEXT_COLOR = 0xffa1aab3;
+    public static int MSG_OUT_TIME_TEXT_COLOR = 0xff70b15c;
+    public static int MSG_IN_TIME_SELECTED_TEXT_COLOR = 0xff89b4c1;
+    public static int MSG_OUT_TIME_SELECTED_TEXT_COLOR = 0xff70b15c;
+    public static int MSG_IN_AUDIO_PERFORMER_TEXT_COLOR = 0xff2f3438;
+    public static int MSG_OUT_AUDIO_PERFORMER_TEXT_COLOR = 0xff354234;
+    public static int MSG_IN_AUDIO_TITLE_TEXT_COLOR = 0xff4e9ad4;
+    public static int MSG_OUT_AUDIO_TITLE_TEXT_COLOR = 0xff55ab4f;
+    public static int MSG_IN_AUDIO_DURATION_TEXT_COLOR = 0xffa1aab3;
+    public static int MSG_OUT_AUDIO_DURATION_TEXT_COLOR = 0xff65b05b;
+    public static int MSG_IN_AUDIO_DURATION_SELECTED_TEXT_COLOR = 0xff89b4c1;
+    public static int MSG_OUT_AUDIO_DURATION_SELECTED_TEXT_COLOR = 0xff65b05b;
+    public static int MSG_IN_AUDIO_SEEKBAR_COLOR = 0xffe4eaf0;
+    public static int MSG_OUT_AUDIO_SEEKBAR_COLOR = 0xffbbe3ac;
+    public static int MSG_IN_AUDIO_SEEKBAR_SELECTED_COLOR = 0xffbcdee8;
+    public static int MSG_OUT_AUDIO_SEEKBAR_SELECTED_COLOR = 0xffa9dd96;
+    public static int MSG_IN_AUDIO_SEEKBAR_FILL_COLOR = 0xff72b5e8;
+    public static int MSG_OUT_AUDIO_SEEKBAR_FILL_COLOR = 0xff78c272;
+    public static int MSG_IN_VOICE_SEEKBAR_COLOR = 0xffdee5eb;
+    public static int MSG_OUT_VOICE_SEEKBAR_COLOR = 0xffbbe3ac;
+    public static int MSG_IN_VOICE_SEEKBAR_SELECTED_COLOR = 0xffbcdee8;
+    public static int MSG_OUT_VOICE_SEEKBAR_SELECTED_COLOR = 0xffa9dd96;
+    public static int MSG_IN_VOICE_SEEKBAR_FILL_COLOR = 0xff72b5e8;
+    public static int MSG_OUT_VOICE_SEEKBAR_FILL_COLOR = 0xff78c272;
+    public static int MSG_IN_FILE_PROGRESS_COLOR = 0xffebf0f5;
+    public static int MSG_OUT_FILE_PROGRESS_COLOR = 0xffdaf5c3;
+    public static int MSG_IN_FILE_PROGRESS_SELECTED_COLOR = 0xffcbeaf6;
+    public static int MSG_OUT_FILE_PROGRESS_SELECTED_COLOR = 0xffc5eca7;
+    public static int MSG_IN_FILE_NAME_TEXT_COLOR = 0xff4e9ad4;
+    public static int MSG_OUT_FILE_NAME_TEXT_COLOR = 0xff55ab4f;
+    public static int MSG_IN_FILE_INFO_TEXT_COLOR = 0xffa1aab3;
+    public static int MSG_OUT_FILE_INFO_TEXT_COLOR = 0xff65b05b;
+    public static int MSG_IN_FILE_INFO_SELECTED_TEXT_COLOR = 0xff89b4c1;
+    public static int MSG_OUT_FILE_INFO_SELECTED_TEXT_COLOR = 0xff65b05b;
+    public static int MSG_IN_FILE_BACKGROUND_COLOR = 0xffebf0f5;
+    public static int MSG_OUT_FILE_BACKGROUND_COLOR = 0xffdaf5c3;
+    public static int MSG_IN_FILE_BACKGROUND_SELECTED_COLOR = 0xffcbeaf6;
+    public static int MSG_OUT_FILE_BACKGROUND_SELECTED_COLOR = 0xffc5eca7;
+    public static int MSG_IN_VENUE_NAME_TEXT_COLOR = 0xff4e9ad4;
+    public static int MSG_OUT_VENUE_NAME_TEXT_COLOR = 0xff55ab4f;
+    public static int MSG_IN_VENUE_INFO_TEXT_COLOR = 0xffa1aab3;
+    public static int MSG_OUT_VENUE_INFO_TEXT_COLOR = 0xff65b05b;
+    public static int MSG_IN_VENUE_INFO_SELECTED_TEXT_COLOR = 0xff89b4c1;
+    public static int MSG_OUT_VENUE_INFO_SELECTED_TEXT_COLOR = 0xff65b05b;
+    public static int MSG_MEDIA_INFO_TEXT_COLOR = 0xffffffff;
+    public static int MSG_TEXT_COLOR = 0xffffffff;
+    public static int MSG_LINK_TEXT_COLOR = 0xff2678b6;
+    public static int MSG_LINK_SELECT_BACKGROUND_COLOR = 0x3362a9e3;
+    public static int MSG_TEXT_SELECT_BACKGROUND_COLOR = 0x6662a9e3;
 
 
     public static Drawable backgroundDrawableIn;
@@ -373,6 +378,136 @@ public static void loadRecources(Context context) {
         }
     }
 
+    public static void tintDrawable(Context context) {
+        backgroundDrawableIn = context.getResources().getDrawable(R.drawable.msg_in);
+        backgroundDrawableInSelected = context.getResources().getDrawable(R.drawable.msg_in_selected);
+        backgroundDrawableOut = context.getResources().getDrawable(R.drawable.msg_out);
+        backgroundDrawableOutSelected = context.getResources().getDrawable(R.drawable.msg_out_selected);
+        backgroundMediaDrawableIn = context.getResources().getDrawable(R.drawable.msg_in_photo);
+        backgroundMediaDrawableInSelected = context.getResources().getDrawable(R.drawable.msg_in_photo_selected);
+        backgroundMediaDrawableOut = context.getResources().getDrawable(R.drawable.msg_out_photo);
+        backgroundMediaDrawableOutSelected = context.getResources().getDrawable(R.drawable.msg_out_photo_selected);
+
+        if ((context.getResources().getConfiguration().uiMode & Configuration.UI_MODE_NIGHT_YES) != 0) {
+            int color = ContextCompat.getColor(context, R.color.chat_drawable_tint);
+
+            backgroundDrawableIn.setColorFilter(color, PorterDuff.Mode.SRC_ATOP);
+            backgroundDrawableInSelected.setColorFilter(color, PorterDuff.Mode.SRC_ATOP);
+            backgroundDrawableOut.setColorFilter(color, PorterDuff.Mode.SRC_ATOP);
+            backgroundDrawableOutSelected.setColorFilter(color, PorterDuff.Mode.SRC_ATOP);
+            backgroundMediaDrawableIn.setColorFilter(color, PorterDuff.Mode.SRC_ATOP);
+            backgroundMediaDrawableInSelected.setColorFilter(color, PorterDuff.Mode.SRC_ATOP);
+            backgroundMediaDrawableOut.setColorFilter(color, PorterDuff.Mode.SRC_ATOP);
+            backgroundMediaDrawableOutSelected.setColorFilter(color, PorterDuff.Mode.SRC_ATOP);
+        }
+    }
+
+    public static void resetColor(Context context) {
+        int white = ContextCompat.getColor(context, R.color.material_white_1000);
+        int primary = ContextCompat.getColor(context, R.color.primary_text);
+        int forward = ContextCompat.getColor(context, R.color.message_forward_name);
+
+        EmojiView.BACKGROUND_COLOR = ContextCompat.getColor(context, R.color.sticker_select_background);
+        EmojiView.INDICATOR_COLOR = ContextCompat.getColor(context, R.color.sticker_indicator_background);
+
+        ACTION_BAR_COLOR = ContextCompat.getColor(context, R.color.colorPrimary);
+        ACTION_BAR_PROFILE_COLOR = ContextCompat.getColor(context, R.color.profile_color);
+
+        REPLY_PANEL_NAME_TEXT_COLOR = 0xff3a8ccf;
+        REPLY_PANEL_MESSAGE_TEXT_COLOR = ContextCompat.getColor(context, R.color.replay_panel_text);
+
+        ATTACH_SHEET_TEXT_COLOR = ContextCompat.getColor(context, R.color.secondary_text);
+
+        MSG_SELECTED_BACKGROUND_COLOR = 0x6633b5e5;
+        MSG_WEB_PREVIEW_DURATION_TEXT_COLOR = white;
+        MSG_WEB_PREVIEW_GAME_TEXT_COLOR = white;
+        MSG_SECRET_TIME_TEXT_COLOR = 0xffe4e2e0;
+        MSG_STICKER_NAME_TEXT_COLOR = white;
+        MSG_BOT_BUTTON_TEXT_COLOR = white;
+        MSG_BOT_PROGRESS_COLOR = white;
+        MSG_IN_FORDWARDED_NAME_TEXT_COLOR = 0xff3886c7;
+        MSG_OUT_FORDWARDED_NAME_TEXT_COLOR = forward;
+        MSG_IN_VIA_BOT_NAME_TEXT_COLOR = 0xff3a8ccf;
+        MSG_OUT_VIA_BOT_NAME_TEXT_COLOR = forward;
+        MSG_STICKER_VIA_BOT_NAME_TEXT_COLOR = white;
+        MSG_IN_REPLY_LINE_COLOR = 0xff70b4e8;
+        MSG_OUT_REPLY_LINE_COLOR = 0xff88c97b;
+        MSG_STICKER_REPLY_LINE_COLOR = white;
+        MSG_IN_REPLY_NAME_TEXT_COLOR = 0xff3a8ccf;
+        MSG_OUT_REPLY_NAME_TEXT_COLOR = forward;
+        MSG_STICKER_REPLY_NAME_TEXT_COLOR = white;
+        MSG_IN_REPLY_MESSAGE_TEXT_COLOR = primary;
+        MSG_OUT_REPLY_MESSAGE_TEXT_COLOR = primary;
+        MSG_IN_REPLY_MEDIA_MESSAGE_TEXT_COLOR = 0xffa1aab3;
+        MSG_OUT_REPLY_MEDIA_MESSAGE_TEXT_COLOR = 0xff65b05b;
+        MSG_IN_REPLY_MEDIA_MESSAGE_SELETED_TEXT_COLOR = 0xff89b4c1;
+        MSG_OUT_REPLY_MEDIA_MESSAGE_SELETED_TEXT_COLOR = 0xff65b05b;
+        MSG_STICKER_REPLY_MESSAGE_TEXT_COLOR = white;
+        MSG_IN_WEB_PREVIEW_LINE_COLOR = 0xff70b4e8;
+        MSG_OUT_WEB_PREVIEW_LINE_COLOR = 0xff88c97b;
+        MSG_IN_SITE_NAME_TEXT_COLOR = 0xff3a8ccf;
+        MSG_OUT_SITE_NAME_TEXT_COLOR = forward;
+        MSG_IN_CONTACT_NAME_TEXT_COLOR = 0xff4e9ad4;
+        MSG_OUT_CONTACT_NAME_TEXT_COLOR = forward;
+        MSG_IN_CONTACT_PHONE_TEXT_COLOR = 0xff2f3438;
+        MSG_OUT_CONTACT_PHONE_TEXT_COLOR = 0xff354234;
+        MSG_MEDIA_PROGRESS_COLOR = white;
+        MSG_IN_AUDIO_PROGRESS_COLOR = white;
+        MSG_OUT_AUDIO_PROGRESS_COLOR = 0xffefffde;
+        MSG_IN_AUDIO_SELECTED_PROGRESS_COLOR = 0xffe2f8ff;
+        MSG_OUT_AUDIO_SELECTED_PROGRESS_COLOR = 0xffd4f5bc;
+        MSG_MEDIA_TIME_TEXT_COLOR = white;
+        MSG_IN_TIME_TEXT_COLOR = 0xffa1aab3;
+        MSG_OUT_TIME_TEXT_COLOR = 0xff70b15c;
+        MSG_IN_TIME_SELECTED_TEXT_COLOR = 0xff89b4c1;
+        MSG_OUT_TIME_SELECTED_TEXT_COLOR = 0xff70b15c;
+        MSG_IN_AUDIO_PERFORMER_TEXT_COLOR = 0xff2f3438;
+        MSG_OUT_AUDIO_PERFORMER_TEXT_COLOR = 0xff354234;
+        MSG_IN_AUDIO_TITLE_TEXT_COLOR = 0xff4e9ad4;
+        MSG_OUT_AUDIO_TITLE_TEXT_COLOR = forward;
+        MSG_IN_AUDIO_DURATION_TEXT_COLOR = 0xffa1aab3;
+        MSG_OUT_AUDIO_DURATION_TEXT_COLOR = 0xff65b05b;
+        MSG_IN_AUDIO_DURATION_SELECTED_TEXT_COLOR = 0xff89b4c1;
+        MSG_OUT_AUDIO_DURATION_SELECTED_TEXT_COLOR = 0xff65b05b;
+        MSG_IN_AUDIO_SEEKBAR_COLOR = 0xffe4eaf0;
+        MSG_OUT_AUDIO_SEEKBAR_COLOR = 0xffbbe3ac;
+        MSG_IN_AUDIO_SEEKBAR_SELECTED_COLOR = 0xffbcdee8;
+        MSG_OUT_AUDIO_SEEKBAR_SELECTED_COLOR = 0xffa9dd96;
+        MSG_IN_AUDIO_SEEKBAR_FILL_COLOR = 0xff72b5e8;
+        MSG_OUT_AUDIO_SEEKBAR_FILL_COLOR = 0xff78c272;
+        MSG_IN_VOICE_SEEKBAR_COLOR = 0xffdee5eb;
+        MSG_OUT_VOICE_SEEKBAR_COLOR = 0xffbbe3ac;
+        MSG_IN_VOICE_SEEKBAR_SELECTED_COLOR = 0xffbcdee8;
+        MSG_OUT_VOICE_SEEKBAR_SELECTED_COLOR = 0xffa9dd96;
+        MSG_IN_VOICE_SEEKBAR_FILL_COLOR = 0xff72b5e8;
+        MSG_OUT_VOICE_SEEKBAR_FILL_COLOR = 0xff78c272;
+        MSG_IN_FILE_PROGRESS_COLOR = 0xffebf0f5;
+        MSG_OUT_FILE_PROGRESS_COLOR = 0xffdaf5c3;
+        MSG_IN_FILE_PROGRESS_SELECTED_COLOR = 0xffcbeaf6;
+        MSG_OUT_FILE_PROGRESS_SELECTED_COLOR = 0xffc5eca7;
+        MSG_IN_FILE_NAME_TEXT_COLOR = 0xff4e9ad4;
+        MSG_OUT_FILE_NAME_TEXT_COLOR = forward;
+        MSG_IN_FILE_INFO_TEXT_COLOR = 0xffa1aab3;
+        MSG_OUT_FILE_INFO_TEXT_COLOR = 0xff65b05b;
+        MSG_IN_FILE_INFO_SELECTED_TEXT_COLOR = 0xff89b4c1;
+        MSG_OUT_FILE_INFO_SELECTED_TEXT_COLOR = 0xff65b05b;
+        MSG_IN_FILE_BACKGROUND_COLOR = 0xffebf0f5;
+        MSG_OUT_FILE_BACKGROUND_COLOR = 0xffdaf5c3;
+        MSG_IN_FILE_BACKGROUND_SELECTED_COLOR = 0xffcbeaf6;
+        MSG_OUT_FILE_BACKGROUND_SELECTED_COLOR = 0xffc5eca7;
+        MSG_IN_VENUE_NAME_TEXT_COLOR = 0xff4e9ad4;
+        MSG_OUT_VENUE_NAME_TEXT_COLOR = forward;
+        MSG_IN_VENUE_INFO_TEXT_COLOR = 0xffa1aab3;
+        MSG_OUT_VENUE_INFO_TEXT_COLOR = 0xff65b05b;
+        MSG_IN_VENUE_INFO_SELECTED_TEXT_COLOR = 0xff89b4c1;
+        MSG_OUT_VENUE_INFO_SELECTED_TEXT_COLOR = 0xff65b05b;
+        MSG_MEDIA_INFO_TEXT_COLOR = white;
+        MSG_TEXT_COLOR = primary;
+        MSG_LINK_TEXT_COLOR = 0xff2678b6;
+        MSG_LINK_SELECT_BACKGROUND_COLOR = 0x3362a9e3;
+        MSG_TEXT_SELECT_BACKGROUND_COLOR = 0x6662a9e3;
+    }
+
     public static void loadChatResources(Context context) {
         if (attachButtonDrawables[0] == null) {
             attachButtonDrawables[0] = context.getResources().getDrawable(R.drawable.attach_camera_states);
@@ -415,7 +550,7 @@ public void setColorFilter(ColorFilter colorFilter) {
 
                     @Override
                     public int getOpacity() {
-                        return 0;
+                        return PixelFormat.UNKNOWN;
                     }
                 };
             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsAdapter.java
index ade259fc5..aed4aa2fd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsAdapter.java
@@ -8,7 +8,9 @@
 
 package org.telegram.ui.Adapters;
 
+import android.annotation.SuppressLint;
 import android.content.Context;
+import android.support.v4.content.ContextCompat;
 import android.view.View;
 import android.view.ViewGroup;
 
@@ -23,6 +25,7 @@
 import org.telegram.ui.Cells.LetterSectionCell;
 import org.telegram.ui.Cells.TextCell;
 import org.telegram.ui.Cells.UserCell;
+import org.telegram.ui.Components.ForegroundFrameLayout;
 
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -191,6 +194,7 @@ public View getSectionHeaderView(int section, View convertView, ViewGroup parent
         return convertView;
     }
 
+    @SuppressLint("NewApi")
     @Override
     public View getItemView(int section, int position, View convertView, ViewGroup parent) {
         int type = getItemViewType(section, position);
@@ -198,15 +202,20 @@ public View getItemView(int section, int position, View convertView, ViewGroup p
             if (convertView == null) {
                 convertView = new DividerCell(mContext);
                 convertView.setPadding(AndroidUtilities.dp(LocaleController.isRTL ? 28 : 72), 0, AndroidUtilities.dp(LocaleController.isRTL ? 72 : 28), 0);
+                convertView.setBackgroundColor(ContextCompat.getColor(mContext, R.color.chat_list_background));
+                convertView.setElevation(AndroidUtilities.dp(2));
             }
         } else if (type == 3) {
             if (convertView == null) {
                 convertView = new GreySectionCell(mContext);
                 ((GreySectionCell) convertView).setText(LocaleController.getString("Contacts", R.string.Contacts).toUpperCase());
+                //convertView.setBackgroundColor(ContextCompat.getColor(mContext, R.color.s));
+                convertView.setElevation(AndroidUtilities.dp(2));
             }
         } else if (type == 2) {
             if (convertView == null) {
                 convertView = new TextCell(mContext);
+                convertView.setBackgroundColor(ContextCompat.getColor(mContext, R.color.chat_list_background));
             }
             TextCell actionCell = (TextCell) convertView;
             if (needPhonebook) {
@@ -225,6 +234,7 @@ public View getItemView(int section, int position, View convertView, ViewGroup p
         } else if (type == 1) {
             if (convertView == null) {
                 convertView = new TextCell(mContext);
+                convertView.setBackgroundColor(ContextCompat.getColor(mContext, R.color.chat_list_background));
             }
             ContactsController.Contact contact = ContactsController.getInstance().phoneBookContacts.get(position);
             TextCell textCell = (TextCell) convertView;
@@ -238,6 +248,7 @@ public View getItemView(int section, int position, View convertView, ViewGroup p
         } else if (type == 0) {
             if (convertView == null) {
                 convertView = new UserCell(mContext, 58, 1, false);
+                convertView.setBackgroundColor(ContextCompat.getColor(mContext, R.color.chat_list_background));
                 ((UserCell) convertView).setStatusColors(0xffa8a8a8, 0xff3b84c0);
             }
 
@@ -258,6 +269,11 @@ public View getItemView(int section, int position, View convertView, ViewGroup p
                 }
             }
         }
+        if (type != 4) {
+            if (convertView instanceof ForegroundFrameLayout) {
+                convertView.setForeground(convertView.getContext().getDrawable(R.drawable.list_selector));
+            }
+        }
         return convertView;
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
index c6c4bcc78..4d65bbb05 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
@@ -826,7 +826,7 @@ public void didPressedImage(ContextLinkCell cell) {
             view = new BotSwitchCell(mContext);
         } else {
             view = new MentionCell(mContext);
-            ((MentionCell) view).setIsDarkTheme(isDarkTheme);
+            ((MentionCell) view).setIsDarkTheme(mContext, isDarkTheme);
         }
         return new Holder(view);
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java
index 754ed1887..914a00352 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java
@@ -17,6 +17,7 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.SharedPreferences;
+import android.support.v4.content.ContextCompat;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
@@ -321,7 +322,7 @@ public void onItemClick(int id) {
 
         fragmentView = new FrameLayout(context);
         FrameLayout frameLayout = (FrameLayout) fragmentView;
-        frameLayout.setBackgroundColor(0xfff0f0f0);
+        frameLayout.setBackgroundColor(ContextCompat.getColor(context, R.color.settings_background));
 
         ListView listView = new ListView(context);
         listView.setDivider(null);
@@ -595,7 +596,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             if (type == 0) {
                 if (view == null) {
                     view = new TextSettingsCell(mContext);
-                    view.setBackgroundColor(0xffffffff);
+                    //view.setBackgroundColor(0xffffffff);
                 }
                 TextSettingsCell textCell = (TextSettingsCell) view;
                 if (i == databaseRow) {
@@ -625,13 +626,13 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 }
                 if (i == databaseInfoRow) {
                     ((TextInfoPrivacyCell) view).setText(LocaleController.getString("LocalDatabaseInfo", R.string.LocalDatabaseInfo));
-                    view.setBackgroundResource(R.drawable.greydivider_bottom);
+                    //view.setBackgroundResource(R.drawable.greydivider_bottom);
                 } else if (i == cacheInfoRow) {
                     ((TextInfoPrivacyCell) view).setText("");
-                    view.setBackgroundResource(R.drawable.greydivider);
+                    //view.setBackgroundResource(R.drawable.greydivider);
                 } else if (i == keepMediaInfoRow) {
                     ((TextInfoPrivacyCell) view).setText(AndroidUtilities.replaceTags(LocaleController.getString("KeepMediaInfo", R.string.KeepMediaInfo)));
-                    view.setBackgroundResource(R.drawable.greydivider);
+                    //view.setBackgroundResource(R.drawable.greydivider);
                 }
             }
             return view;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java
index f4aa9af9b..29aa50cd8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java
@@ -13,6 +13,7 @@
 import android.graphics.Canvas;
 import android.graphics.Paint;
 import android.os.Build;
+import android.support.v4.content.ContextCompat;
 import android.text.Layout;
 import android.text.Spannable;
 import android.text.SpannableStringBuilder;
@@ -30,6 +31,7 @@
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.R;
 import org.telegram.messenger.browser.Browser;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.LinkPath;
@@ -60,9 +62,12 @@
     public AboutLinkCell(Context context) {
         super(context);
 
+        setElevation(AndroidUtilities.dp(2));
+        setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
+
         textPaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
         textPaint.setTextSize(AndroidUtilities.dp(16));
-        textPaint.setColor(0xff000000);
+        textPaint.setColor(ContextCompat.getColor(context, R.color.primary_text));
         textPaint.linkColor = Theme.MSG_LINK_TEXT_COLOR;
 
         urlPaint = new Paint();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatUnreadCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatUnreadCell.java
index b69baddc4..3784bd06e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatUnreadCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatUnreadCell.java
@@ -9,6 +9,7 @@
 package org.telegram.ui.Cells;
 
 import android.content.Context;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.widget.FrameLayout;
@@ -17,10 +18,11 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.R;
+import org.telegram.ui.Components.ForegroundFrameLayout;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.ActionBar.Theme;
 
-public class ChatUnreadCell extends FrameLayout {
+public class ChatUnreadCell extends ForegroundFrameLayout {
 
     private TextView textView;
 
@@ -28,8 +30,9 @@ public ChatUnreadCell(Context context) {
         super(context);
 
         FrameLayout frameLayout = new FrameLayout(context);
-        frameLayout.setBackgroundResource(R.drawable.newmsg_divider);
-        addView(frameLayout, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 27, Gravity.LEFT | Gravity.TOP, 0, 7, 0, 0));
+        frameLayout.setBackgroundColor(ContextCompat.getColor(context, R.color.chat_drawable_tint)); //setBackgroundResource(R.drawable.newmsg_divider);
+        frameLayout.setElevation(AndroidUtilities.dp(1));
+        addView(frameLayout, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 27, Gravity.LEFT | Gravity.TOP, 0, AndroidUtilities.dp(4), 0, AndroidUtilities.dp(4)));
 
         ImageView imageView = new ImageView(context);
         imageView.setImageResource(R.drawable.ic_ab_new);
@@ -41,7 +44,7 @@ public ChatUnreadCell(Context context) {
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
         textView.setTextColor(Theme.CHAT_UNREAD_TEXT_COLOR);
         textView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
-        addView(textView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER));
+        frameLayout.addView(textView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER));
     }
 
     public void setText(String text) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/CheckBoxCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/CheckBoxCell.java
index f32a6553e..ff1548966 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/CheckBoxCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/CheckBoxCell.java
@@ -11,6 +11,7 @@
 import android.content.Context;
 import android.graphics.Canvas;
 import android.graphics.Paint;
+import android.support.v4.content.ContextCompat;
 import android.text.TextUtils;
 import android.util.TypedValue;
 import android.view.Gravity;
@@ -19,6 +20,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.R;
 import org.telegram.ui.Components.CheckBoxSquare;
 import org.telegram.ui.Components.LayoutHelper;
 
@@ -35,12 +37,12 @@ public CheckBoxCell(Context context) {
 
         if (paint == null) {
             paint = new Paint();
-            paint.setColor(0xffd9d9d9);
+            paint.setColor(ContextCompat.getColor(context, R.color.divider));
             paint.setStrokeWidth(1);
         }
 
         textView = new TextView(context);
-        textView.setTextColor(0xff212121);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
         textView.setLines(1);
         textView.setMaxLines(1);
@@ -100,4 +102,10 @@ protected void onDraw(Canvas canvas) {
             canvas.drawLine(getPaddingLeft(), getHeight() - 1, getWidth() - getPaddingRight(), getHeight() - 1, paint);
         }
     }
+
+    public static void setDividerColor(Context context, boolean night) {
+        if (paint != null) {
+            paint.setColor(ContextCompat.getColor(context, night ? R.color.chat_list_divider : R.color.divider_light));
+        }
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
index 30876f8e6..b8d8823b7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
@@ -9,10 +9,13 @@
 package org.telegram.ui.Cells;
 
 import android.content.Context;
+import android.content.res.Configuration;
 import android.graphics.Canvas;
 import android.graphics.Paint;
 import android.graphics.drawable.Drawable;
 import android.os.Build;
+import android.support.v4.content.ContextCompat;
+import android.support.v4.graphics.drawable.DrawableCompat;
 import android.text.Layout;
 import android.text.SpannableStringBuilder;
 import android.text.Spanned;
@@ -137,7 +140,6 @@ public DialogCell(Context context) {
         if (namePaint == null) {
             namePaint = new TextPaint(TextPaint.ANTI_ALIAS_FLAG);
 
-            namePaint.setColor(0xff212121);
             namePaint.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
 
             nameEncryptedPaint = new TextPaint(TextPaint.ANTI_ALIAS_FLAG);
@@ -145,11 +147,8 @@ public DialogCell(Context context) {
             nameEncryptedPaint.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
 
             messagePaint = new TextPaint(TextPaint.ANTI_ALIAS_FLAG);
-            messagePaint.setColor(Theme.DIALOGS_MESSAGE_TEXT_COLOR);
-            messagePaint.linkColor = Theme.DIALOGS_MESSAGE_TEXT_COLOR;
 
             linePaint = new Paint();
-            linePaint.setColor(0xffdcdcdc);
 
             backPaint = new Paint();
             backPaint.setColor(0x0f000000);
@@ -176,6 +175,8 @@ public DialogCell(Context context) {
             muteDrawable = getResources().getDrawable(R.drawable.mute_grey);
             verifiedDrawable = getResources().getDrawable(R.drawable.check_list);
             botDrawable = getResources().getDrawable(R.drawable.bot_list);
+
+            resetPaintColor(context);
         }
 
         namePaint.setTextSize(AndroidUtilities.dp(17));
@@ -192,6 +193,22 @@ public DialogCell(Context context) {
         avatarDrawable = new AvatarDrawable();
     }
 
+    public static void resetPaintColor(Context context) {
+        if (namePaint == null) {
+            return;
+        }
+
+        namePaint.setColor(ContextCompat.getColor(context, R.color.primary_text));
+        messagePaint.setColor(ContextCompat.getColor(context, R.color.secondary_text)/*Theme.DIALOGS_MESSAGE_TEXT_COLOR*/);
+        messagePaint.linkColor = ContextCompat.getColor(context, R.color.secondary_text)/*Theme.DIALOGS_MESSAGE_TEXT_COLOR*/;
+        linePaint.setColor(ContextCompat.getColor(context, R.color.chat_list_divider));
+
+        DrawableCompat.setTint(groupDrawable, ContextCompat.getColor(context, R.color.primary_text));
+        DrawableCompat.setTint(broadcastDrawable, ContextCompat.getColor(context, R.color.primary_text));
+        DrawableCompat.setTint(botDrawable, ContextCompat.getColor(context, R.color.primary_text));
+        DrawableCompat.setTint(muteDrawable, ContextCompat.getColor(context, R.color.disabled_text));
+    }
+
     public void setDialog(TLRPC.TL_dialog dialog, int i, int type) {
         currentDialogId = dialog.id;
         isDialogCell = true;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DividerCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DividerCell.java
index bdea51926..25e3d671b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DividerCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DividerCell.java
@@ -11,8 +11,11 @@
 import android.content.Context;
 import android.graphics.Canvas;
 import android.graphics.Paint;
+import android.support.annotation.ColorInt;
+import android.support.v4.content.ContextCompat;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.R;
 
 public class DividerCell extends BaseCell {
 
@@ -22,11 +25,17 @@ public DividerCell(Context context) {
         super(context);
         if (paint == null) {
             paint = new Paint();
-            paint.setColor(0xffd9d9d9);
+            paint.setColor(ContextCompat.getColor(context, R.color.divider));
             paint.setStrokeWidth(1);
         }
     }
 
+    public static void setDividerColor(Context context, boolean night) {
+        if (paint != null) {
+            paint.setColor(ContextCompat.getColor(context, night ? R.color.divider_dark : R.color.divider_light));
+        }
+    }
+
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         setMeasuredDimension(MeasureSpec.getSize(widthMeasureSpec), AndroidUtilities.dp(16) + 1);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java
index db6f37cca..e0b9c6d31 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java
@@ -9,6 +9,9 @@
 package org.telegram.ui.Cells;
 
 import android.content.Context;
+import android.graphics.drawable.Drawable;
+import android.support.v4.content.ContextCompat;
+import android.support.v4.graphics.drawable.DrawableCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.widget.FrameLayout;
@@ -16,6 +19,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.FileLog;
+import org.telegram.messenger.R;
 import org.telegram.ui.Components.LayoutHelper;
 
 public class DrawerActionCell extends FrameLayout {
@@ -25,8 +29,8 @@
     public DrawerActionCell(Context context) {
         super(context);
 
-        textView = new TextView(context);
-        textView.setTextColor(0xff444444);
+        textView = new TextView(context, null, R.style.Theme_TMessages_TextView_Drawer);
+        //textView.setTextColor(0xff444444);
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 15);
         textView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
         textView.setLines(1);
@@ -45,7 +49,11 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
     public void setTextAndIcon(String text, int resId) {
         try {
             textView.setText(text);
-            textView.setCompoundDrawablesWithIntrinsicBounds(resId, 0, 0, 0);
+            Drawable dr = getContext().getDrawable(resId);
+            if (dr != null) {
+                //DrawableCompat.setTintList(dr, textView.getTextColors());
+                textView.setCompoundDrawablesWithIntrinsicBounds(dr, null, null, null);
+            }
         } catch (Throwable e) {
             FileLog.e("tmessages", e);
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/GreySectionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/GreySectionCell.java
index 0915c3f94..0b75162e7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/GreySectionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/GreySectionCell.java
@@ -9,6 +9,7 @@
 package org.telegram.ui.Cells;
 
 import android.content.Context;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.widget.FrameLayout;
@@ -16,6 +17,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.R;
 import org.telegram.ui.Components.LayoutHelper;
 
 public class GreySectionCell extends FrameLayout {
@@ -24,12 +26,12 @@
     public GreySectionCell(Context context) {
         super(context);
 
-        setBackgroundColor(0xfff2f2f2);
+        setBackgroundColor(ContextCompat.getColor(context, R.color.search_type_background));
 
         textView = new TextView(getContext());
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 13);
         textView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
-        textView.setTextColor(0xff8a8a8a);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.secondary_text));
         textView.setGravity((LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.CENTER_VERTICAL);
         addView(textView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, 16, 0, 16, 0));
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/HashtagSearchCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/HashtagSearchCell.java
index 5800a02b1..fa5c99497 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/HashtagSearchCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/HashtagSearchCell.java
@@ -12,6 +12,7 @@
 import android.graphics.Canvas;
 import android.graphics.Paint;
 import android.os.Build;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.MotionEvent;
@@ -30,10 +31,10 @@ public HashtagSearchCell(Context context) {
         setGravity(Gravity.CENTER_VERTICAL);
         setPadding(AndroidUtilities.dp(16), 0, AndroidUtilities.dp(16), 0);
         setTextSize(TypedValue.COMPLEX_UNIT_DIP, 17);
-        setTextColor(0xff000000);
+        setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         if (paint == null) {
             paint = new Paint();
-            paint.setColor(0xffdcdcdc);
+            paint.setColor(ContextCompat.getColor(context, R.color.chat_list_divider_dark));
         }
 
         setBackgroundResource(R.drawable.list_selector);
@@ -65,4 +66,10 @@ protected void onDraw(Canvas canvas) {
             canvas.drawLine(0, getHeight() - 1, getWidth(), getHeight() - 1, paint);
         }
     }
+
+    public static void setDividerColor(Context context, boolean night) {
+        if (paint != null) {
+            paint.setColor(ContextCompat.getColor(context, night ? R.color.chat_list_divider_dark : R.color.chat_list_divider_light));
+        }
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/HeaderCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/HeaderCell.java
index 2fa0b5dd1..5aefeaa79 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/HeaderCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/HeaderCell.java
@@ -9,22 +9,27 @@
 package org.telegram.ui.Cells;
 
 import android.content.Context;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
-import android.widget.FrameLayout;
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.R;
+import org.telegram.ui.Components.ForegroundFrameLayout;
 import org.telegram.ui.Components.LayoutHelper;
 
-public class HeaderCell extends FrameLayout {
+public class HeaderCell extends ForegroundFrameLayout {
 
     private TextView textView;
 
     public HeaderCell(Context context) {
         super(context);
 
+        setElevation(AndroidUtilities.dp(2));
+        setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
+
         textView = new TextView(getContext());
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 15);
         textView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/HintDialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/HintDialogCell.java
index 19a618f82..38a555e70 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/HintDialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/HintDialogCell.java
@@ -12,6 +12,7 @@
 import android.graphics.Canvas;
 import android.graphics.drawable.Drawable;
 import android.os.Build;
+import android.support.v4.content.ContextCompat;
 import android.text.Layout;
 import android.text.StaticLayout;
 import android.text.TextPaint;
@@ -57,7 +58,7 @@ public HintDialogCell(Context context) {
         addView(imageView, LayoutHelper.createFrame(54, 54, Gravity.TOP | Gravity.CENTER_HORIZONTAL, 0, 7, 0, 0));
 
         nameTextView = new TextView(context);
-        nameTextView.setTextColor(0xff212121);
+        nameTextView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 12);
         nameTextView.setMaxLines(2);
         nameTextView.setGravity(Gravity.TOP | Gravity.CENTER_HORIZONTAL);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/MentionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/MentionCell.java
index a15dcce7f..c39e3e66d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/MentionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/MentionCell.java
@@ -10,6 +10,7 @@
 
 import android.content.Context;
 import android.os.Build;
+import android.support.v4.content.ContextCompat;
 import android.text.TextUtils;
 import android.util.TypedValue;
 import android.view.Gravity;
@@ -48,7 +49,7 @@ public MentionCell(Context context) {
         addView(imageView, LayoutHelper.createLinear(28, 28, 12, 4, 0, 0));
 
         nameTextView = new TextView(context);
-        nameTextView.setTextColor(0xff000000);
+        nameTextView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 15);
         nameTextView.setSingleLine(true);
         nameTextView.setGravity(Gravity.LEFT);
@@ -125,12 +126,12 @@ public void setBotCommand(String command, String help, TLRPC.User user) {
         usernameTextView.setText(Emoji.replaceEmoji(help, usernameTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(20), false));
     }
 
-    public void setIsDarkTheme(boolean isDarkTheme) {
+    public void setIsDarkTheme(Context context, boolean isDarkTheme) {
         if (isDarkTheme) {
             nameTextView.setTextColor(0xffffffff);
             usernameTextView.setTextColor(0xff999999);
         } else {
-            nameTextView.setTextColor(0xff000000);
+            nameTextView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
             usernameTextView.setTextColor(0xff999999);
         }
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ProfileSearchCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ProfileSearchCell.java
index d0b7496b3..6faa9063d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ProfileSearchCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ProfileSearchCell.java
@@ -13,6 +13,7 @@
 import android.graphics.Paint;
 import android.graphics.drawable.Drawable;
 import android.os.Build;
+import android.support.v4.content.ContextCompat;
 import android.text.Layout;
 import android.text.StaticLayout;
 import android.text.TextPaint;
@@ -94,7 +95,6 @@ public ProfileSearchCell(Context context) {
 
         if (namePaint == null) {
             namePaint = new TextPaint(TextPaint.ANTI_ALIAS_FLAG);
-            namePaint.setColor(0xff212121);
             namePaint.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
 
             nameEncryptedPaint = new TextPaint(TextPaint.ANTI_ALIAS_FLAG);
@@ -108,7 +108,6 @@ public ProfileSearchCell(Context context) {
             offlinePaint.setColor(0xff999999);
 
             linePaint = new Paint();
-            linePaint.setColor(0xffdcdcdc);
 
             countPaint = new TextPaint(TextPaint.ANTI_ALIAS_FLAG);
             countPaint.setColor(0xffffffff);
@@ -121,6 +120,8 @@ public ProfileSearchCell(Context context) {
             countDrawableGrey = getResources().getDrawable(R.drawable.dialogs_badge2);
             checkDrawable = getResources().getDrawable(R.drawable.check_list);
             botDrawable = getResources().getDrawable(R.drawable.bot_list);
+
+            resetPaint(context);
         }
 
         namePaint.setTextSize(AndroidUtilities.dp(17));
@@ -134,6 +135,15 @@ public ProfileSearchCell(Context context) {
         avatarDrawable = new AvatarDrawable();
     }
 
+    public static void resetPaint(Context context) {
+        if (namePaint == null) {
+            return;
+        }
+
+        namePaint.setColor(ContextCompat.getColor(context, R.color.primary_text));
+        linePaint.setColor(ContextCompat.getColor(context, R.color.chat_list_divider));
+    }
+
     @Override
     public boolean onTouchEvent(MotionEvent event) {
         if (Build.VERSION.SDK_INT >= 21 && getBackground() != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/RadioButtonCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/RadioButtonCell.java
index 3d3525923..044293f24 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/RadioButtonCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/RadioButtonCell.java
@@ -11,6 +11,7 @@
 import android.content.Context;
 import android.graphics.Canvas;
 import android.graphics.Paint;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.View;
@@ -19,10 +20,12 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.R;
+import org.telegram.ui.Components.ForegroundFrameLayout;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.RadioButton;
 
-public class RadioButtonCell extends FrameLayout {
+public class RadioButtonCell extends ForegroundFrameLayout {
 
     private TextView textView;
     private TextView valueTextView;
@@ -33,19 +36,23 @@
     public RadioButtonCell(Context context) {
         super(context);
 
+        setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
+        setElevation(AndroidUtilities.dp(2));
+
         if (paint == null) {
             paint = new Paint();
-            paint.setColor(0xffd9d9d9);
+            paint.setColor(ContextCompat.getColor(context, R.color.divider));
             paint.setStrokeWidth(1);
         }
 
         radioButton = new RadioButton(context);
         radioButton.setSize(AndroidUtilities.dp(20));
+        // TODO accent color
         radioButton.setColor(0xffb3b3b3, 0xff37a9f0);
         addView(radioButton, LayoutHelper.createFrame(22, 22, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, (LocaleController.isRTL ? 0 : 18), 10, (LocaleController.isRTL ? 18 : 0), 0));
 
         textView = new TextView(context);
-        textView.setTextColor(0xff212121);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
         textView.setLines(1);
         textView.setMaxLines(1);
@@ -54,7 +61,7 @@ public RadioButtonCell(Context context) {
         addView(textView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, (LocaleController.isRTL ? 17 : 51), 10, (LocaleController.isRTL ? 51 : 17), 0));
 
         valueTextView = new TextView(context);
-        valueTextView.setTextColor(0xff8a8a8a);
+        //valueTextView.setTextColor(0xff8a8a8a);
         valueTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 13);
         valueTextView.setGravity(LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT);
         valueTextView.setLines(0);
@@ -87,4 +94,8 @@ protected void onDraw(Canvas canvas) {
             canvas.drawLine(getPaddingLeft(), getHeight() - 1, getWidth() - getPaddingRight(), getHeight() - 1, paint);
         }
     }
+
+    public static void resetDivider() {
+        paint = null;
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/RadioCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/RadioCell.java
index e71b5b78c..07f76d902 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/RadioCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/RadioCell.java
@@ -10,7 +10,10 @@
 
 import android.content.Context;
 import android.graphics.Canvas;
+import android.graphics.Color;
 import android.graphics.Paint;
+import android.support.annotation.ColorInt;
+import android.support.v4.content.ContextCompat;
 import android.text.TextUtils;
 import android.util.TypedValue;
 import android.view.Gravity;
@@ -19,6 +22,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.R;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.RadioButton;
 
@@ -34,12 +38,15 @@ public RadioCell(Context context) {
 
         if (paint == null) {
             paint = new Paint();
-            paint.setColor(0xffd9d9d9);
+            paint.setColor(ContextCompat.getColor(context, R.color.divider));
             paint.setStrokeWidth(1);
         }
 
+        setElevation(AndroidUtilities.dp(2));
+        setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
+
         textView = new TextView(context);
-        textView.setTextColor(0xff212121);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
         textView.setLines(1);
         textView.setMaxLines(1);
@@ -84,4 +91,10 @@ protected void onDraw(Canvas canvas) {
             canvas.drawLine(getPaddingLeft(), getHeight() - 1, getWidth() - getPaddingRight(), getHeight() - 1, paint);
         }
     }
+
+    public static void setDividerColor(Context context, boolean night) {
+        if (paint != null) {
+            paint.setColor(ContextCompat.getColor(context, night ? R.color.divider_dark : R.color.divider_light));
+        }
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SessionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SessionCell.java
index ad04766fe..6396f9fc1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SessionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SessionCell.java
@@ -11,6 +11,7 @@
 import android.content.Context;
 import android.graphics.Canvas;
 import android.graphics.Paint;
+import android.support.v4.content.ContextCompat;
 import android.text.TextUtils;
 import android.util.TypedValue;
 import android.view.Gravity;
@@ -40,17 +41,20 @@ public SessionCell(Context context) {
 
         if (paint == null) {
             paint = new Paint();
-            paint.setColor(0xffd9d9d9);
+            paint.setColor(ContextCompat.getColor(context, R.color.divider));
             paint.setStrokeWidth(1);
         }
 
+        setElevation(AndroidUtilities.dp(2));
+        setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
+
         LinearLayout linearLayout = new LinearLayout(context);
         linearLayout.setOrientation(LinearLayout.HORIZONTAL);
         linearLayout.setWeightSum(1);
         addView(linearLayout, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 30, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, 17, 11, 11, 0));
 
         nameTextView = new TextView(context);
-        nameTextView.setTextColor(0xff212121);
+        nameTextView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
         nameTextView.setLines(1);
         nameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
@@ -72,7 +76,7 @@ public SessionCell(Context context) {
         }
 
         detailTextView = new TextView(context);
-        detailTextView.setTextColor(0xff212121);
+        detailTextView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         detailTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
         detailTextView.setLines(1);
         detailTextView.setMaxLines(1);
@@ -82,7 +86,7 @@ public SessionCell(Context context) {
         addView(detailTextView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, 17, 36, 17, 0));
 
         detailExTextView = new TextView(context);
-        detailExTextView.setTextColor(0xff999999);
+        detailExTextView.setTextColor(ContextCompat.getColor(context, R.color.secondary_text) /*0xff999999*/);
         detailExTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
         detailExTextView.setLines(1);
         detailExTextView.setMaxLines(1);
@@ -160,4 +164,10 @@ protected void onDraw(Canvas canvas) {
             canvas.drawLine(getPaddingLeft(), getHeight() - 1, getWidth() - getPaddingRight(), getHeight() - 1, paint);
         }
     }
+
+    public static void setDividerColor(Context context, boolean night) {
+        if (paint != null) {
+            paint.setColor(ContextCompat.getColor(context, night ? R.color.divider_dark : R.color.divider_light));
+        }
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShadowSectionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShadowSectionCell.java
index c7d9a88ab..644db7c0a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShadowSectionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShadowSectionCell.java
@@ -9,6 +9,7 @@
 package org.telegram.ui.Cells;
 
 import android.content.Context;
+import android.support.v4.content.ContextCompat;
 import android.view.View;
 
 import org.telegram.messenger.AndroidUtilities;
@@ -20,7 +21,8 @@
 
     public ShadowSectionCell(Context context) {
         super(context);
-        setBackgroundResource(R.drawable.greydivider);
+        //setBackgroundResource(R.drawable.greydivider);
+        //setBackgroundColor(ContextCompat.getColor(context, R.color.background));
     }
 
     public void setSize(int value) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedDocumentCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedDocumentCell.java
index 63475c9b3..45dfa674a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedDocumentCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedDocumentCell.java
@@ -12,6 +12,7 @@
 import android.graphics.Canvas;
 import android.graphics.Paint;
 import android.graphics.drawable.Drawable;
+import android.support.v4.content.ContextCompat;
 import android.text.TextUtils;
 import android.util.TypedValue;
 import android.view.Gravity;
@@ -69,7 +70,7 @@ public SharedDocumentCell(Context context) {
 
         if (paint == null) {
             paint = new Paint();
-            paint.setColor(0xffd9d9d9);
+            paint.setColor(ContextCompat.getColor(context, R.color.divider));
             paint.setStrokeWidth(1);
         }
 
@@ -79,7 +80,7 @@ public SharedDocumentCell(Context context) {
         addView(placeholderImabeView, LayoutHelper.createFrame(40, 40, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, LocaleController.isRTL ? 0 : 12, 8, LocaleController.isRTL ? 12 : 0, 0));
 
         extTextView = new TextView(context);
-        extTextView.setTextColor(0xffffffff);
+        extTextView.setTextColor(ContextCompat.getColor(context, R.color.primary_text_inverse));
         extTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
         extTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
         extTextView.setLines(1);
@@ -100,7 +101,7 @@ public void didSetImage(ImageReceiver imageReceiver, boolean set, boolean thumb)
         });
 
         nameTextView = new TextView(context);
-        nameTextView.setTextColor(0xff212121);
+        nameTextView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
         nameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
         nameTextView.setLines(1);
@@ -115,7 +116,7 @@ public void didSetImage(ImageReceiver imageReceiver, boolean set, boolean thumb)
         addView(statusImageView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, LocaleController.isRTL ? 8 : 72, 35, LocaleController.isRTL ? 72 : 8, 0));
 
         dateTextView = new TextView(context);
-        dateTextView.setTextColor(0xff999999);
+        dateTextView.setTextColor(ContextCompat.getColor(context, R.color.secondary_text));
         dateTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
         dateTextView.setLines(1);
         dateTextView.setMaxLines(1);
@@ -353,4 +354,8 @@ public void onProgressUpload(String fileName, float progress, boolean isEncrypte
     public int getObserverTag() {
         return TAG;
     }
+
+    public static void resetDivider() {
+        paint = null;
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedLinkCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedLinkCell.java
index df5cd33b3..184f74d8f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedLinkCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedLinkCell.java
@@ -15,6 +15,7 @@
 import android.graphics.drawable.Drawable;
 import android.net.Uri;
 import android.os.Build;
+import android.support.v4.content.ContextCompat;
 import android.text.Layout;
 import android.text.StaticLayout;
 import android.text.TextPaint;
@@ -83,18 +84,22 @@
     private static TextPaint descriptionTextPaint;
     private static Paint paint;
 
+    private static int TEXT_COLOR;
+
     public SharedLinkCell(Context context) {
         super(context);
 
         if (titleTextPaint == null) {
             titleTextPaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
             titleTextPaint.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
-            titleTextPaint.setColor(0xff212121);
+
+            TEXT_COLOR = ContextCompat.getColor(context, R.color.primary_text);
+            titleTextPaint.setColor(TEXT_COLOR);
 
             descriptionTextPaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
 
             paint = new Paint();
-            paint.setColor(0xffd9d9d9);
+            paint.setColor(ContextCompat.getColor(context, R.color.divider));
             paint.setStrokeWidth(1);
 
             urlPaint = new Paint();
@@ -446,7 +451,7 @@ protected void onDraw(Canvas canvas) {
         }
 
         if (descriptionLayout != null) {
-            descriptionTextPaint.setColor(0xff212121);
+            descriptionTextPaint.setColor(TEXT_COLOR);
             canvas.save();
             canvas.translate(AndroidUtilities.dp(LocaleController.isRTL ? 8 : AndroidUtilities.leftBaseline), descriptionY);
             descriptionLayout.draw(canvas);
@@ -454,7 +459,7 @@ protected void onDraw(Canvas canvas) {
         }
 
         if (descriptionLayout2 != null) {
-            descriptionTextPaint.setColor(0xff212121);
+            descriptionTextPaint.setColor(TEXT_COLOR);
             canvas.save();
             canvas.translate(AndroidUtilities.dp(LocaleController.isRTL ? 8 : AndroidUtilities.leftBaseline), description2Y);
             descriptionLayout2.draw(canvas);
@@ -492,4 +497,8 @@ protected void onDraw(Canvas canvas) {
             }
         }
     }
+
+    public static void resetDivider() {
+        titleTextPaint = null;
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedMediaSectionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedMediaSectionCell.java
index 3e2c8dd11..ac650a66b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedMediaSectionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedMediaSectionCell.java
@@ -9,6 +9,7 @@
 package org.telegram.ui.Cells;
 
 import android.content.Context;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.widget.FrameLayout;
@@ -16,6 +17,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.R;
 import org.telegram.ui.Components.LayoutHelper;
 
 public class SharedMediaSectionCell extends FrameLayout {
@@ -28,7 +30,7 @@ public SharedMediaSectionCell(Context context) {
         textView = new TextView(getContext());
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
         textView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
-        textView.setTextColor(0xff212121);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.secondary_text));
         textView.setGravity((LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.CENTER_VERTICAL);
         addView(textView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, 13, 0, 13, 0));
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java
index 9ac990c88..a685c888d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java
@@ -13,6 +13,7 @@
 import android.animation.ObjectAnimator;
 import android.content.Context;
 import android.os.Build;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.MotionEvent;
@@ -114,7 +115,7 @@ public void setChecked(final boolean checked, boolean animated) {
             }
             if (animated) {
                 if (checked) {
-                    setBackgroundColor(0xfff5f5f5);
+                    setBackgroundColor(ContextCompat.getColor(getContext(), R.color.shared_photo_placeholder) /*0xfff5f5f5*/);
                 }
                 animator = new AnimatorSet();
                 animator.playTogether(ObjectAnimator.ofFloat(container, "scaleX", checked ? 0.85f : 1.0f),
@@ -140,7 +141,7 @@ public void onAnimationCancel(Animator animation) {
                 });
                 animator.start();
             } else {
-                setBackgroundColor(checked ? 0xfff5f5f5 : 0);
+                setBackgroundColor(checked ? ContextCompat.getColor(getContext(), R.color.shared_photo_placeholder) : 0);
                 container.setScaleX(checked ? 0.85f : 1.0f);
                 container.setScaleY(checked ? 0.85f : 1.0f);
             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerSetCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerSetCell.java
index ee22d9d1d..a81deb8e8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerSetCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerSetCell.java
@@ -13,6 +13,7 @@
 import android.graphics.Paint;
 import android.graphics.Rect;
 import android.os.Build;
+import android.support.v4.content.ContextCompat;
 import android.text.TextUtils;
 import android.util.TypedValue;
 import android.view.Gravity;
@@ -48,11 +49,15 @@ public StickerSetCell(Context context) {
 
         if (paint == null) {
             paint = new Paint();
-            paint.setColor(0xffd9d9d9);
+            paint.setColor(ContextCompat.getColor(context, R.color.divider));
         }
 
+        /*setElevation(AndroidUtilities.dp(2));
+        setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));*/
+        //setStateListAnimator();
+
         textView = new TextView(context);
-        textView.setTextColor(0xff212121);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
         textView.setLines(1);
         textView.setMaxLines(1);
@@ -62,7 +67,7 @@ public StickerSetCell(Context context) {
         addView(textView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT, LocaleController.isRTL ? 40 : 71, 10, LocaleController.isRTL ? 71 : 40, 0));
 
         valueTextView = new TextView(context);
-        valueTextView.setTextColor(0xff8a8a8a);
+        //valueTextView.setTextColor(0xff8a8a8a);
         valueTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 13);
         valueTextView.setLines(1);
         valueTextView.setMaxLines(1);
@@ -141,4 +146,10 @@ protected void onDraw(Canvas canvas) {
             canvas.drawLine(0, getHeight() - 1, getWidth() - getPaddingRight(), getHeight() - 1, paint);
         }
     }
+
+    public static void setDividerColor(Context context, boolean night) {
+        if (paint != null) {
+            paint.setColor(ContextCompat.getColor(context, night ? R.color.chat_list_divider : R.color.divider_light));
+        }
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextBlockCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextBlockCell.java
index 8a25f0efd..bbfa6f945 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextBlockCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextBlockCell.java
@@ -11,15 +11,18 @@
 import android.content.Context;
 import android.graphics.Canvas;
 import android.graphics.Paint;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.widget.FrameLayout;
 import android.widget.TextView;
 
 import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.R;
+import org.telegram.ui.Components.ForegroundFrameLayout;
 import org.telegram.ui.Components.LayoutHelper;
 
-public class TextBlockCell extends FrameLayout {
+public class TextBlockCell extends ForegroundFrameLayout {
 
     private TextView textView;
     private static Paint paint;
@@ -30,12 +33,12 @@ public TextBlockCell(Context context) {
 
         if (paint == null) {
             paint = new Paint();
-            paint.setColor(0xffd9d9d9);
+            paint.setColor(ContextCompat.getColor(context, R.color.divider));
             paint.setStrokeWidth(1);
         }
 
         textView = new TextView(context);
-        textView.setTextColor(0xff212121);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
         textView.setGravity((LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.CENTER_VERTICAL);
         addView(textView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, 17, 10, 17, 10));
@@ -57,4 +60,8 @@ protected void onDraw(Canvas canvas) {
             canvas.drawLine(getPaddingLeft(), getHeight() - 1, getWidth() - getPaddingRight(), getHeight() - 1, paint);
         }
     }
+
+    public static void resetDivider() {
+        paint = null;
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCell.java
index cbc363e68..84258e0ff 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCell.java
@@ -10,15 +10,18 @@
 
 import android.content.Context;
 import android.graphics.drawable.Drawable;
+import android.support.v4.content.ContextCompat;
 import android.view.Gravity;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.R;
 import org.telegram.ui.ActionBar.SimpleTextView;
+import org.telegram.ui.Components.ForegroundFrameLayout;
 
-public class TextCell extends FrameLayout {
+public class TextCell extends ForegroundFrameLayout {
 
     private SimpleTextView textView;
     private SimpleTextView valueTextView;
@@ -28,8 +31,11 @@
     public TextCell(Context context) {
         super(context);
 
+        setElevation(AndroidUtilities.dp(2));
+        setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
+
         textView = new SimpleTextView(context);
-        textView.setTextColor(0xff212121);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         textView.setTextSize(16);
         textView.setGravity(LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT);
         addView(textView);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCheckCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCheckCell.java
index 7456eb30d..6fc1f1bd2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCheckCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCheckCell.java
@@ -11,18 +11,20 @@
 import android.content.Context;
 import android.graphics.Canvas;
 import android.graphics.Paint;
+import android.support.v4.content.ContextCompat;
 import android.text.TextUtils;
 import android.util.TypedValue;
 import android.view.Gravity;
-import android.widget.FrameLayout;
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.R;
+import org.telegram.ui.Components.ForegroundFrameLayout;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.Switch;
 
-public class TextCheckCell extends FrameLayout {
+public class TextCheckCell extends ForegroundFrameLayout {
 
     private TextView textView;
     private TextView valueTextView;
@@ -34,14 +36,17 @@
     public TextCheckCell(Context context) {
         super(context);
 
+        setElevation(AndroidUtilities.dp(2));
+        setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
+
         if (paint == null) {
             paint = new Paint();
-            paint.setColor(0xffd9d9d9);
+            paint.setColor(ContextCompat.getColor(context, R.color.divider) /*0xffd9d9d9*/);
             paint.setStrokeWidth(1);
         }
 
         textView = new TextView(context);
-        textView.setTextColor(0xff212121);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.primary_text)/*0xff212121*/);
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
         textView.setLines(1);
         textView.setMaxLines(1);
@@ -51,7 +56,7 @@ public TextCheckCell(Context context) {
         addView(textView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, LocaleController.isRTL ? 64 : 17, 0, LocaleController.isRTL ? 17 : 64, 0));
 
         valueTextView = new TextView(context);
-        valueTextView.setTextColor(0xff8a8a8a);
+        valueTextView.setTextColor(ContextCompat.getColor(context, R.color.secondary_text)/*0xff212121*/);
         valueTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 13);
         valueTextView.setGravity(LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT);
         valueTextView.setLines(1);
@@ -118,6 +123,9 @@ public void setTextAndValueAndCheck(String text, String value, boolean checked,
         setWillNotDraw(!divider);
     }
 
+    public boolean isChecked() {
+        return checkBox.isChecked();
+    }
     public void setChecked(boolean checked) {
         checkBox.setChecked(checked);
     }
@@ -128,4 +136,10 @@ protected void onDraw(Canvas canvas) {
             canvas.drawLine(getPaddingLeft(), getHeight() - 1, getWidth() - getPaddingRight(), getHeight() - 1, paint);
         }
     }
+
+    public static void setDividerColor(Context context, boolean night) {
+        if (paint != null) {
+                paint.setColor(ContextCompat.getColor(context, night ? R.color.divider_dark : R.color.divider_light));
+        }
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextColorCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextColorCell.java
index 33ce9ee9d..e7e21aead 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextColorCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextColorCell.java
@@ -14,6 +14,7 @@
 import android.graphics.PorterDuff;
 import android.graphics.PorterDuffColorFilter;
 import android.graphics.drawable.Drawable;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.widget.FrameLayout;
@@ -22,9 +23,10 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.R;
+import org.telegram.ui.Components.ForegroundFrameLayout;
 import org.telegram.ui.Components.LayoutHelper;
 
-public class TextColorCell extends FrameLayout {
+public class TextColorCell extends ForegroundFrameLayout {
 
     private TextView textView;
     private boolean needDivider;
@@ -36,16 +38,19 @@
     public TextColorCell(Context context) {
         super(context);
 
+        setElevation(AndroidUtilities.dp(2));
+        setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
+
         if (paint == null) {
             paint = new Paint();
-            paint.setColor(0xffd9d9d9);
+            paint.setColor(ContextCompat.getColor(context, R.color.divider));
             paint.setStrokeWidth(1);
         }
 
         colorDrawable = getResources().getDrawable(R.drawable.switch_to_on2);
 
         textView = new TextView(context);
-        textView.setTextColor(0xff212121);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
         textView.setLines(1);
         textView.setMaxLines(1);
@@ -85,4 +90,10 @@ protected void onDraw(Canvas canvas) {
             colorDrawable.draw(canvas);
         }
     }
+
+    public static void setDividerColor(Context context, boolean night) {
+        if (paint != null) {
+                paint.setColor(ContextCompat.getColor(context, night ? R.color.divider_dark : R.color.divider_light));
+        }
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailCell.java
index 494014cca..e824b5d07 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailCell.java
@@ -9,6 +9,7 @@
 package org.telegram.ui.Cells;
 
 import android.content.Context;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.View;
@@ -18,9 +19,12 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.R;
+import org.telegram.ui.Components.ForegroundFrameLayout;
+import org.telegram.ui.Components.ForegroundTextView;
 import org.telegram.ui.Components.LayoutHelper;
 
-public class TextDetailCell extends FrameLayout {
+public class TextDetailCell extends ForegroundFrameLayout {
 
     private TextView textView;
     private TextView valueTextView;
@@ -29,8 +33,11 @@
     public TextDetailCell(Context context) {
         super(context);
 
+        setElevation(AndroidUtilities.dp(2));
+        setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
+
         textView = new TextView(context);
-        textView.setTextColor(0xff212121);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
         textView.setLines(1);
         textView.setMaxLines(1);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailSettingsCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailSettingsCell.java
index f1a8bd800..d9d2c3aba 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailSettingsCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailSettingsCell.java
@@ -11,16 +11,18 @@
 import android.content.Context;
 import android.graphics.Canvas;
 import android.graphics.Paint;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
-import android.widget.FrameLayout;
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.R;
+import org.telegram.ui.Components.ForegroundFrameLayout;
 import org.telegram.ui.Components.LayoutHelper;
 
-public class TextDetailSettingsCell extends FrameLayout {
+public class TextDetailSettingsCell extends ForegroundFrameLayout {
 
     private TextView textView;
     private TextView valueTextView;
@@ -31,14 +33,17 @@
     public TextDetailSettingsCell(Context context) {
         super(context);
 
+        setElevation(AndroidUtilities.dp(2));
+        setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
+
         if (paint == null) {
             paint = new Paint();
-            paint.setColor(0xffd9d9d9);
+            paint.setColor(ContextCompat.getColor(context, R.color.divider));
             paint.setStrokeWidth(1);
         }
 
         textView = new TextView(context);
-        textView.setTextColor(0xff212121);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.primary_text)/*0xff212121*/);
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
         textView.setLines(1);
         textView.setMaxLines(1);
@@ -47,7 +52,7 @@ public TextDetailSettingsCell(Context context) {
         addView(textView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, 17, 10, 17, 0));
 
         valueTextView = new TextView(context);
-        valueTextView.setTextColor(0xff8a8a8a);
+        valueTextView.setTextColor(ContextCompat.getColor(context, R.color.secondary_text)/*0xff212121*/);
         valueTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 13);
         valueTextView.setGravity(LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT);
         valueTextView.setLines(1);
@@ -94,4 +99,10 @@ protected void onDraw(Canvas canvas) {
             canvas.drawLine(getPaddingLeft(), getHeight() - 1, getWidth() - getPaddingRight(), getHeight() - 1, paint);
         }
     }
+
+    public static void setDividerColor(Context context, boolean night) {
+        if (paint != null) {
+                paint.setColor(ContextCompat.getColor(context, night ? R.color.divider_dark : R.color.divider_light));
+        }
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoCell.java
index 12ca36a5d..ccd70ad4c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoCell.java
@@ -9,21 +9,26 @@
 package org.telegram.ui.Cells;
 
 import android.content.Context;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
-import android.widget.FrameLayout;
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.R;
+import org.telegram.ui.Components.ForegroundFrameLayout;
 import org.telegram.ui.Components.LayoutHelper;
 
-public class TextInfoCell extends FrameLayout {
+public class TextInfoCell extends ForegroundFrameLayout {
 
     private TextView textView;
 
     public TextInfoCell(Context context) {
         super(context);
 
+        setElevation(AndroidUtilities.dp(2));
+        setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
+
         textView = new TextView(context);
         textView.setTextColor(0xffa3a3a3);
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 13);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoPrivacyCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoPrivacyCell.java
index b008bb767..ec298f99c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoPrivacyCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoPrivacyCell.java
@@ -9,6 +9,7 @@
 package org.telegram.ui.Cells;
 
 import android.content.Context;
+import android.support.v4.content.ContextCompat;
 import android.text.method.LinkMovementMethod;
 import android.util.TypedValue;
 import android.view.Gravity;
@@ -17,10 +18,12 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.R;
+import org.telegram.ui.Components.ForegroundFrameLayout;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.ActionBar.Theme;
 
-public class TextInfoPrivacyCell extends FrameLayout {
+public class TextInfoPrivacyCell extends ForegroundFrameLayout {
 
     private TextView textView;
 
@@ -28,7 +31,7 @@ public TextInfoPrivacyCell(Context context) {
         super(context);
 
         textView = new TextView(context);
-        textView.setTextColor(0xff808080);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.disabled_text));
         textView.setLinkTextColor(Theme.MSG_LINK_TEXT_COLOR);
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
         textView.setGravity(LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextSettingsCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextSettingsCell.java
index 7aa88dc29..14e28ba7d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextSettingsCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextSettingsCell.java
@@ -11,6 +11,7 @@
 import android.content.Context;
 import android.graphics.Canvas;
 import android.graphics.Paint;
+import android.support.v4.content.ContextCompat;
 import android.text.TextUtils;
 import android.util.TypedValue;
 import android.view.Gravity;
@@ -20,9 +21,12 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.R;
+import org.telegram.ui.Components.ForegroundFrameLayout;
+import org.telegram.ui.Components.ForegroundTextView;
 import org.telegram.ui.Components.LayoutHelper;
 
-public class TextSettingsCell extends FrameLayout {
+public class TextSettingsCell extends ForegroundFrameLayout {
 
     private TextView textView;
     private TextView valueTextView;
@@ -33,14 +37,17 @@
     public TextSettingsCell(Context context) {
         super(context);
 
+        setElevation(AndroidUtilities.dp(2));
+        setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
+
         if (paint == null) {
             paint = new Paint();
-            paint.setColor(0xffd9d9d9);
+            paint.setColor(ContextCompat.getColor(context, R.color.divider) /*0xffd9d9d9*/);
             paint.setStrokeWidth(1);
         }
 
         textView = new TextView(context);
-        textView.setTextColor(0xff212121);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.primary_text)/*0xff212121*/);
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
         textView.setLines(1);
         textView.setMaxLines(1);
@@ -132,4 +139,10 @@ protected void onDraw(Canvas canvas) {
             canvas.drawLine(getPaddingLeft(), getHeight() - 1, getWidth() - getPaddingRight(), getHeight() - 1, paint);
         }
     }
+
+    public static void setDividerColor(Context context, boolean night) {
+        if (paint != null) {
+            paint.setColor(ContextCompat.getColor(context, night ? R.color.divider_dark : R.color.divider_light));
+        }
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/UserCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/UserCell.java
index 1da73b4a0..e8b4419fe 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/UserCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/UserCell.java
@@ -9,6 +9,7 @@
 package org.telegram.ui.Cells;
 
 import android.content.Context;
+import android.support.v4.content.ContextCompat;
 import android.view.Gravity;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
@@ -26,10 +27,11 @@
 import org.telegram.ui.Components.BackupImageView;
 import org.telegram.ui.Components.CheckBox;
 import org.telegram.ui.Components.CheckBoxSquare;
+import org.telegram.ui.Components.ForegroundFrameLayout;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.ActionBar.SimpleTextView;
 
-public class UserCell extends FrameLayout {
+public class UserCell extends ForegroundFrameLayout {
 
     private BackupImageView avatarImageView;
     private SimpleTextView nameTextView;
@@ -56,6 +58,9 @@
     public UserCell(Context context, int padding, int checkbox, boolean admin) {
         super(context);
 
+        setElevation(AndroidUtilities.dp(2));
+        setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
+
         avatarDrawable = new AvatarDrawable();
 
         avatarImageView = new BackupImageView(context);
@@ -63,7 +68,7 @@ public UserCell(Context context, int padding, int checkbox, boolean admin) {
         addView(avatarImageView, LayoutHelper.createFrame(48, 48, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, LocaleController.isRTL ? 0 : 7 + padding, 8, LocaleController.isRTL ? 7 + padding : 0, 0));
 
         nameTextView = new SimpleTextView(context);
-        nameTextView.setTextColor(0xff212121);
+        nameTextView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         nameTextView.setTextSize(17);
         nameTextView.setGravity((LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP);
         addView(nameTextView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 20, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, LocaleController.isRTL ? 28 + (checkbox == 2 ? 18 : 0) : (68 + padding), 11.5f, LocaleController.isRTL ? (68 + padding) : 28 + (checkbox == 2 ? 18 : 0), 0));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
index cff4907c0..76884a570 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
@@ -12,6 +12,7 @@
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.os.Bundle;
+import android.support.v4.content.ContextCompat;
 import android.text.InputType;
 import android.util.TypedValue;
 import android.view.Gravity;
@@ -93,8 +94,8 @@ public boolean onTouch(View v, MotionEvent event) {
         firstNameField = new EditText(context);
         firstNameField.setText(currentChat.title);
         firstNameField.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
-        firstNameField.setHintTextColor(0xff979797);
-        firstNameField.setTextColor(0xff212121);
+        //firstNameField.setHintTextColor(0xff979797);
+        firstNameField.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         firstNameField.setMaxLines(3);
         firstNameField.setPadding(0, 0, 0, 0);
         firstNameField.setGravity(LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java
index bb14930ad..4c09b2573 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java
@@ -96,7 +96,7 @@ public boolean onTouch(View v, MotionEvent event) {
         TextView textView = new TextView(context);
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
         textView.setGravity(Gravity.CENTER_HORIZONTAL);
-        textView.setTextColor(0xff212121);
+        //textView.setTextColor(0xff212121);
 
         try {
             textView.setText(AndroidUtilities.replaceTags(LocaleController.getString("PhoneNumberHelp", R.string.PhoneNumberHelp)));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
index ccdf81dfc..2ea556234 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
@@ -94,8 +94,8 @@ public boolean onTouch(View v, MotionEvent event) {
 
         firstNameField = new EditText(context);
         firstNameField.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
-        firstNameField.setHintTextColor(0xff979797);
-        firstNameField.setTextColor(0xff212121);
+        //firstNameField.setHintTextColor(0xff979797);
+        //firstNameField.setTextColor(0xff212121);
         firstNameField.setMaxLines(1);
         firstNameField.setLines(1);
         firstNameField.setPadding(0, 0, 0, 0);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChannelCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChannelCreateActivity.java
index 0f99caa5d..d11cf1377 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChannelCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChannelCreateActivity.java
@@ -19,6 +19,7 @@
 import android.graphics.drawable.BitmapDrawable;
 import android.os.Bundle;
 import android.os.Vibrator;
+import android.support.v4.content.ContextCompat;
 import android.text.Editable;
 import android.text.InputFilter;
 import android.text.InputType;
@@ -345,7 +346,7 @@ public boolean onTouch(View v, MotionEvent event) {
 
         if (currentStep == 0) {
             actionBar.setTitle(LocaleController.getString("NewChannel", R.string.NewChannel));
-            fragmentView.setBackgroundColor(0xffffffff);
+            fragmentView.setBackgroundColor(ContextCompat.getColor(context, R.color.background));
             FrameLayout frameLayout = new FrameLayout(context);
             linearLayout.addView(frameLayout, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT));
 
@@ -398,7 +399,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
             nameTextView.setMaxLines(4);
             nameTextView.setGravity(Gravity.CENTER_VERTICAL | (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT));
             nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
-            nameTextView.setHintTextColor(0xff979797);
+            //nameTextView.setHintTextColor(0xff979797);
             nameTextView.setImeOptions(EditorInfo.IME_FLAG_NO_EXTRACT_UI);
             nameTextView.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_FLAG_CAP_SENTENCES);
             InputFilter[] inputFilters = new InputFilter[1];
@@ -406,7 +407,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
             nameTextView.setFilters(inputFilters);
             nameTextView.setPadding(0, 0, 0, AndroidUtilities.dp(8));
             AndroidUtilities.clearCursorDrawable(nameTextView);
-            nameTextView.setTextColor(0xff212121);
+            nameTextView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
             frameLayout.addView(nameTextView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER_VERTICAL, LocaleController.isRTL ? 16 : 96, 0, LocaleController.isRTL ? 96 : 16, 0));
             nameTextView.addTextChangedListener(new TextWatcher() {
                 @Override
@@ -428,8 +429,8 @@ public void afterTextChanged(Editable s) {
 
             descriptionTextView = new EditText(context);
             descriptionTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
-            descriptionTextView.setHintTextColor(0xff979797);
-            descriptionTextView.setTextColor(0xff212121);
+            //descriptionTextView.setHintTextColor(0xff979797);
+            descriptionTextView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
             descriptionTextView.setPadding(0, 0, 0, AndroidUtilities.dp(6));
             descriptionTextView.setGravity(LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT);
             descriptionTextView.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_FLAG_CAP_SENTENCES | InputType.TYPE_TEXT_FLAG_MULTI_LINE | InputType.TYPE_TEXT_FLAG_AUTO_CORRECT);
@@ -469,21 +470,21 @@ public void afterTextChanged(Editable editable) {
 
             TextView helpTextView = new TextView(context);
             helpTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 15);
-            helpTextView.setTextColor(0xff6d6d72);
+            //helpTextView.setTextColor(0xff6d6d72);
             helpTextView.setGravity(LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT);
             helpTextView.setText(LocaleController.getString("DescriptionInfo", R.string.DescriptionInfo));
             linearLayout.addView(helpTextView, LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT, 24, 10, 24, 20));
         } else if (currentStep == 1) {
             actionBar.setTitle(LocaleController.getString("ChannelSettings", R.string.ChannelSettings));
-            fragmentView.setBackgroundColor(0xfff0f0f0);
+            fragmentView.setBackgroundColor(ContextCompat.getColor(context, R.color.settings_background));
 
             LinearLayout linearLayout2 = new LinearLayout(context);
             linearLayout2.setOrientation(LinearLayout.VERTICAL);
-            linearLayout2.setBackgroundColor(0xffffffff);
+            linearLayout2.setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
             linearLayout.addView(linearLayout2, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT));
 
             radioButtonCell1 = new RadioButtonCell(context);
-            radioButtonCell1.setBackgroundResource(R.drawable.list_selector);
+            radioButtonCell1.setForeground(R.drawable.list_selector);
             radioButtonCell1.setTextAndValue(LocaleController.getString("ChannelPublic", R.string.ChannelPublic), LocaleController.getString("ChannelPublicInfo", R.string.ChannelPublicInfo), !isPrivate, false);
             linearLayout2.addView(radioButtonCell1, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT));
             radioButtonCell1.setOnClickListener(new View.OnClickListener() {
@@ -498,7 +499,7 @@ public void onClick(View v) {
             });
 
             radioButtonCell2 = new RadioButtonCell(context);
-            radioButtonCell2.setBackgroundResource(R.drawable.list_selector);
+            radioButtonCell2.setForeground(R.drawable.list_selector);
             radioButtonCell2.setTextAndValue(LocaleController.getString("ChannelPrivate", R.string.ChannelPrivate), LocaleController.getString("ChannelPrivateInfo", R.string.ChannelPrivateInfo), isPrivate, false);
             linearLayout2.addView(radioButtonCell2, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT));
             radioButtonCell2.setOnClickListener(new View.OnClickListener() {
@@ -517,7 +518,8 @@ public void onClick(View v) {
 
             linkContainer = new LinearLayout(context);
             linkContainer.setOrientation(LinearLayout.VERTICAL);
-            linkContainer.setBackgroundColor(0xffffffff);
+            linkContainer.setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
+            linkContainer.setElevation(AndroidUtilities.dp(2));
             linearLayout.addView(linkContainer, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT));
 
             headerCell = new HeaderCell(context);
@@ -530,8 +532,8 @@ public void onClick(View v) {
             EditText editText = new EditText(context);
             editText.setText("telegram.me/");
             editText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
-            editText.setHintTextColor(0xff979797);
-            editText.setTextColor(0xff212121);
+            //editText.setHintTextColor(0xff979797);
+            editText.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
             editText.setMaxLines(1);
             editText.setLines(1);
             editText.setEnabled(false);
@@ -544,8 +546,8 @@ public void onClick(View v) {
 
             nameTextView = new EditText(context);
             nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
-            nameTextView.setHintTextColor(0xff979797);
-            nameTextView.setTextColor(0xff212121);
+            //nameTextView.setHintTextColor(0xff979797);
+            nameTextView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
             nameTextView.setMaxLines(1);
             nameTextView.setLines(1);
             nameTextView.setBackgroundDrawable(null);
@@ -574,7 +576,7 @@ public void afterTextChanged(Editable editable) {
             });
 
             privateContainer = new TextBlockCell(context);
-            privateContainer.setBackgroundResource(R.drawable.list_selector);
+            privateContainer.setForeground(R.drawable.list_selector);
             linkContainer.addView(privateContainer);
             privateContainer.setOnClickListener(new View.OnClickListener() {
                 @Override
@@ -600,14 +602,14 @@ public void onClick(View v) {
             linkContainer.addView(checkTextView, LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT, 17, 3, 17, 7));
 
             typeInfoCell = new TextInfoPrivacyCell(context);
-            typeInfoCell.setBackgroundResource(R.drawable.greydivider_bottom);
+            //typeInfoCell.setBackgroundResource(R.drawable.greydivider_bottom);
             linearLayout.addView(typeInfoCell, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT));
 
             loadingAdminedCell = new LoadingCell(context);
             linearLayout.addView(loadingAdminedCell, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT));
 
             adminedInfoCell = new TextInfoPrivacyCell(context);
-            adminedInfoCell.setBackgroundResource(R.drawable.greydivider_bottom);
+            //adminedInfoCell.setBackgroundResource(R.drawable.greydivider_bottom);
             linearLayout.addView(adminedInfoCell, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT));
 
             updatePrivatePublic();
@@ -626,8 +628,8 @@ public void onClick(View v) {
 
             nameTextView = new EditText(context);
             nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
-            nameTextView.setHintTextColor(0xff979797);
-            nameTextView.setTextColor(0xff212121);
+            //nameTextView.setHintTextColor(0xff979797);
+            nameTextView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
             nameTextView.setInputType(InputType.TYPE_TEXT_VARIATION_FILTER | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS | InputType.TYPE_TEXT_FLAG_MULTI_LINE);
             nameTextView.setMinimumHeight(AndroidUtilities.dp(54));
             nameTextView.setSingleLine(false);
@@ -887,10 +889,10 @@ private void updatePrivatePublic() {
                 for (int a = 0; a < adminedChannelCells.size(); a++) {
                     adminedChannelCells.get(a).setVisibility(View.GONE);
                 }
-                typeInfoCell.setBackgroundResource(R.drawable.greydivider_bottom);
+                //typeInfoCell.setBackgroundResource(R.drawable.greydivider_bottom);
                 adminedInfoCell.setVisibility(View.GONE);
             } else {
-                typeInfoCell.setBackgroundResource(R.drawable.greydivider);
+                //typeInfoCell.setBackgroundResource(R.drawable.greydivider);
                 loadingAdminedCell.setVisibility(View.GONE);
                 for (int a = 0; a < adminedChannelCells.size(); a++) {
                     adminedChannelCells.get(a).setVisibility(View.VISIBLE);
@@ -898,10 +900,10 @@ private void updatePrivatePublic() {
                 adminedInfoCell.setVisibility(View.VISIBLE);
             }
         } else {
-            typeInfoCell.setTextColor(0xff808080);
+            //typeInfoCell.setTextColor(0xff808080);
             sectionCell.setVisibility(View.VISIBLE);
             adminedInfoCell.setVisibility(View.GONE);
-            typeInfoCell.setBackgroundResource(R.drawable.greydivider_bottom);
+            //typeInfoCell.setBackgroundResource(R.drawable.greydivider_bottom);
             for (int a = 0; a < adminedChannelCells.size(); a++) {
                 adminedChannelCells.get(a).setVisibility(View.GONE);
             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 3281fc20a..20a861de3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -32,6 +32,7 @@
 import android.os.Bundle;
 import android.provider.ContactsContract;
 import android.provider.MediaStore;
+import android.support.v4.content.ContextCompat;
 import android.support.v4.content.FileProvider;
 import android.text.Spannable;
 import android.text.SpannableString;
@@ -810,6 +811,8 @@ public View createView(Context context) {
         Theme.loadRecources(context);
         Theme.loadChatResources(context);
 
+        //fragmentView.setBackgroundColor(ContextCompat.getColor(context, R.color.chat_drawable_tint));
+
         actionBar.setAddToContainer(false);
         actionBar.setBackButtonDrawable(new BackDrawable(false));
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
@@ -2472,7 +2475,7 @@ public void setVisibility(int visibility) {
         chatActivityEnterView.addTopView(replyLayout, 48);
 
         View lineView = new View(context);
-        lineView.setBackgroundColor(0xffe8e8e8);
+        lineView.setBackgroundColor(ContextCompat.getColor(context, R.color.replay_panel_divider));
         replyLayout.addView(lineView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 1, Gravity.BOTTOM | Gravity.LEFT));
 
         replyIconImageView = new ImageView(context);
@@ -6826,6 +6829,9 @@ public void dismissCurrentDialig() {
     public void onResume() {
         super.onResume();
 
+        SizeNotifierFrameLayout contentView = (SizeNotifierFrameLayout) fragmentView;
+        contentView.setBackgroundImage(ApplicationLoader.getCachedWallpaper());
+
         AndroidUtilities.requestAdjustResize(getParentActivity(), classGuid);
         MediaController.getInstance().startRaiseToEarSensors(this);
         checkRaiseSensors();
@@ -7081,7 +7087,7 @@ public void onConfigurationChanged(android.content.res.Configuration newConfig)
     }
 
     private void createDeleteMessagesAlert(final MessageObject finalSelectedObject) {
-        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity(), R.style.Theme_TMessages_Dialog_Alert_Chat);
         builder.setMessage(LocaleController.formatString("AreYouSureDeleteMessages", R.string.AreYouSureDeleteMessages, LocaleController.formatPluralString("messages", finalSelectedObject != null ? 1 : selectedMessagesIds[0].size() + selectedMessagesIds[1].size())));
         builder.setTitle(LocaleController.getString("Message", R.string.Message));
 
@@ -7256,7 +7262,7 @@ private void createMenu(View v, boolean single) {
                 if (getParentActivity() == null) {
                     return;
                 }
-                AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+                AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity(), R.style.Theme_TMessages_Dialog_Alert_Chat);
 
                 ArrayList<CharSequence> items = new ArrayList<>();
                 final ArrayList<Integer> options = new ArrayList<>();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
index cd1fa6ee0..abfd4c13b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
@@ -21,12 +21,14 @@
 import android.content.pm.PackageManager;
 import android.graphics.Canvas;
 import android.graphics.Paint;
+import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 import android.media.AudioManager;
 import android.os.Build;
 import android.os.Bundle;
 import android.os.PowerManager;
 import android.os.SystemClock;
+import android.support.v4.content.ContextCompat;
 import android.text.Editable;
 import android.text.InputFilter;
 import android.text.Layout;
@@ -43,6 +45,7 @@
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
+import android.view.ViewOutlineProvider;
 import android.view.animation.AccelerateInterpolator;
 import android.view.animation.DecelerateInterpolator;
 import android.view.inputmethod.EditorInfo;
@@ -105,7 +108,7 @@
         public SeekBarWaveformView(Context context) {
             super(context);
             seekBarWaveform = new SeekBarWaveform(context);
-            seekBarWaveform.setColors(0xffa2cef8, 0xffffffff, 0xffa2cef8);
+            seekBarWaveform.setColors(0xffa2cef8, ContextCompat.getColor(context, R.color.background), 0xffa2cef8);
             seekBarWaveform.setDelegate(new SeekBar.SeekBarDelegate() {
                 @Override
                 public void onSeekBarDrag(float progress) {
@@ -511,7 +514,10 @@ protected void onDraw(Canvas canvas) {
 
     public ChatActivityEnterView(Activity context, SizeNotifierFrameLayout parent, ChatActivity fragment, boolean isChat) {
         super(context);
-        backgroundDrawable = context.getResources().getDrawable(R.drawable.compose_panel);
+
+        //setElevation(AndroidUtilities.dp(2));
+
+        backgroundDrawable = /*new ColorDrawable(ContextCompat.getColor(context, R.color.background)); */context.getResources().getDrawable(R.drawable.compose_panel);
         dotDrawable = context.getResources().getDrawable(R.drawable.bluecircle);
         setFocusable(true);
         setFocusableInTouchMode(true);
@@ -536,13 +542,14 @@ public ChatActivityEnterView(Activity context, SizeNotifierFrameLayout parent, C
         sendByEnter = preferences.getBoolean("send_by_enter", false);
 
         textFieldContainer = new LinearLayout(context);
-        //textFieldContainer.setBackgroundColor(0xffffffff);
+        //textFieldContainer.setBackgroundColor(ContextCompat.getColor(context, R.color.background));
         textFieldContainer.setOrientation(LinearLayout.HORIZONTAL);
         addView(textFieldContainer, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP, 0, 2, 0, 0));
 
         FrameLayout frameLayout = new FrameLayout(context);
         textFieldContainer.addView(frameLayout, LayoutHelper.createLinear(0, LayoutHelper.WRAP_CONTENT, 1.0f));
 
+        // TODO tint
         emojiButton = new ImageView(context) {
             @Override
             protected void onDraw(Canvas canvas) {
@@ -585,8 +592,8 @@ public void onClick(View view) {
         messageEditText.setGravity(Gravity.BOTTOM);
         messageEditText.setPadding(0, AndroidUtilities.dp(11), 0, AndroidUtilities.dp(12));
         messageEditText.setBackgroundDrawable(null);
-        messageEditText.setTextColor(0xff000000);
-        messageEditText.setHintTextColor(0xffb2b2b2);
+        //messageEditText.setTextColor(0xff000000);
+        //messageEditText.setHintTextColor(0xffb2b2b2);
         frameLayout.addView(messageEditText, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT, Gravity.BOTTOM, 52, 0, isChat ? 50 : 2, 0));
         messageEditText.setOnKeyListener(new OnKeyListener() {
 
@@ -778,7 +785,7 @@ public void onClick(View v) {
 
         recordedAudioPanel = new FrameLayout(context);
         recordedAudioPanel.setVisibility(audioToSend == null ? GONE : VISIBLE);
-        recordedAudioPanel.setBackgroundColor(0xffffffff);
+        //recordedAudioPanel.setBackgroundColor(ContextCompat.getColor(context, R.color.background));
         recordedAudioPanel.setFocusable(true);
         recordedAudioPanel.setFocusableInTouchMode(true);
         recordedAudioPanel.setClickable(true);
@@ -831,14 +838,14 @@ public void onClick(View v) {
         });
 
         recordedAudioTimeTextView = new TextView(context);
-        recordedAudioTimeTextView.setTextColor(0xffffffff);
+        recordedAudioTimeTextView.setTextColor(ContextCompat.getColor(context, R.color.background));
         recordedAudioTimeTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 13);
         recordedAudioTimeTextView.setText("0:13");
         recordedAudioPanel.addView(recordedAudioTimeTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.RIGHT | Gravity.CENTER_VERTICAL, 0, 0, 13, 0));
 
         recordPanel = new FrameLayout(context);
         recordPanel.setVisibility(GONE);
-        recordPanel.setBackgroundColor(0xffffffff);
+        recordPanel.setBackgroundColor(ContextCompat.getColor(context, R.color.background));
         frameLayout.addView(recordPanel, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 48, Gravity.BOTTOM));
 
         slideText = new LinearLayout(context);
@@ -858,7 +865,7 @@ public void onClick(View v) {
         LinearLayout linearLayout = new LinearLayout(context);
         linearLayout.setOrientation(LinearLayout.HORIZONTAL);
         linearLayout.setPadding(AndroidUtilities.dp(13), 0, 0, 0);
-        linearLayout.setBackgroundColor(0xffffffff);
+        linearLayout.setBackgroundColor(ContextCompat.getColor(context, R.color.background));
         recordPanel.addView(linearLayout, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER_VERTICAL));
 
         recordDot = new RecordDot(context);
@@ -876,7 +883,7 @@ public void onClick(View v) {
         audioSendButton = new ImageView(context);
         audioSendButton.setScaleType(ImageView.ScaleType.CENTER_INSIDE);
         audioSendButton.setImageResource(R.drawable.mic);
-        audioSendButton.setBackgroundColor(0xffffffff);
+        audioSendButton.setBackgroundColor(ContextCompat.getColor(context, R.color.background));
         audioSendButton.setSoundEffectsEnabled(false);
         audioSendButton.setPadding(0, 0, AndroidUtilities.dp(4), 0);
         sendButtonContainer.addView(audioSendButton, LayoutHelper.createFrame(48, 48));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
index 5617d2b84..06a663d10 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
@@ -30,6 +30,7 @@
 import android.hardware.Camera;
 import android.media.ExifInterface;
 import android.os.Build;
+import android.support.v4.content.ContextCompat;
 import android.text.TextUtils;
 import android.util.TypedValue;
 import android.view.Gravity;
@@ -608,7 +609,7 @@ public boolean hasOverlappingRendering() {
                 return false;
             }
         };
-        lineView.setBackgroundColor(0xffd2d2d2);
+        lineView.setBackgroundColor(ContextCompat.getColor(context, R.color.divider));
         attachView.addView(lineView, new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 1, Gravity.TOP | Gravity.LEFT));
         CharSequence[] items = new CharSequence[]{
                 LocaleController.getString("ChatCamera", R.string.ChatCamera),
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/DayNightActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/DayNightActivity.java
new file mode 100644
index 000000000..6167879cb
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/DayNightActivity.java
@@ -0,0 +1,322 @@
+package org.telegram.ui.Components;
+
+import android.app.Activity;
+import android.content.BroadcastReceiver;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.content.pm.ActivityInfo;
+import android.content.pm.PackageManager;
+import android.content.res.Configuration;
+import android.content.res.Resources;
+import android.os.Build;
+import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.annotation.StyleRes;
+import android.support.annotation.VisibleForTesting;
+import android.util.Log;
+
+import org.telegram.messenger.BuildVars;
+
+/**
+ * Created by Rikka on 2016/10/18.
+ */
+
+public class DayNightActivity extends Activity {
+
+    private static final String KEY_LOCAL_NIGHT_MODE = "local_night_mode";
+
+    private static final String TAG = "DayNightActivity";
+
+    public static final int MODE_NIGHT_NO = 1;
+    public static final int MODE_NIGHT_YES = 2;
+    public static final int MODE_NIGHT_AUTO = 0;
+    public static final int MODE_NIGHT_FOLLOW_SYSTEM = -1;
+    static final int MODE_NIGHT_UNSPECIFIED = -100;
+
+    private static int sDefaultNightMode = MODE_NIGHT_FOLLOW_SYSTEM;
+
+    private int mLocalNightMode = MODE_NIGHT_UNSPECIFIED;
+    private boolean mApplyDayNightCalled;
+    private AutoNightModeManager mAutoNightModeManager;
+
+    private int mThemeId = 0;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        if (savedInstanceState != null && mLocalNightMode == MODE_NIGHT_UNSPECIFIED) {
+            // If we have a icicle and we haven't had a local night mode set yet, try and read
+            // it from the icicle
+            mLocalNightMode = savedInstanceState.getInt(KEY_LOCAL_NIGHT_MODE,
+                    MODE_NIGHT_UNSPECIFIED);
+        }
+
+        if (applyDayNight() && mThemeId != 0) {
+            // If DayNight has been applied, we need to re-apply the theme for
+            // the changes to take effect. On API 23+, we should bypass
+            // setTheme(), which will no-op if the theme ID is identical to the
+            // current theme ID.
+            if (Build.VERSION.SDK_INT >= 23) {
+                onApplyThemeResource(getTheme(), mThemeId, false);
+            } else {
+                setTheme(mThemeId);
+            }
+        }
+    }
+
+    @Override
+    public void setTheme(@StyleRes final int resid) {
+        super.setTheme(resid);
+        // Keep hold of the theme id so that we can re-set it later if needed
+        mThemeId = resid;
+    }
+
+    @Override
+    protected void onStart() {
+        super.onStart();
+
+        // This will apply day/night if the time has changed, it will also call through to
+        // setupAutoNightModeIfNeeded()
+        applyDayNight();
+    }
+
+
+    @Override
+    protected void onStop() {
+        super.onStop();
+
+        // Make sure we clean up any receivers setup for AUTO mode
+        if (mAutoNightModeManager != null) {
+            mAutoNightModeManager.cleanup();
+        }
+    }
+
+    public boolean applyDayNight() {
+        boolean applied = false;
+
+        final int nightMode = getNightMode();
+        final int modeToApply = mapNightMode(nightMode);
+        if (modeToApply != MODE_NIGHT_FOLLOW_SYSTEM) {
+            applied = updateForNightMode(modeToApply);
+        }
+
+        if (nightMode == MODE_NIGHT_AUTO) {
+            // If we're already been started, we may need to setup auto mode again
+            ensureAutoNightModeManager();
+            mAutoNightModeManager.setup();
+        }
+
+        mApplyDayNightCalled = true;
+        return applied;
+    }
+
+    public void setLocalNightMode(final int mode) {
+        switch (mode) {
+            case MODE_NIGHT_AUTO:
+            case MODE_NIGHT_NO:
+            case MODE_NIGHT_YES:
+            case MODE_NIGHT_FOLLOW_SYSTEM:
+                if (mLocalNightMode != mode) {
+                    mLocalNightMode = mode;
+                    if (mApplyDayNightCalled) {
+                        // If we've already applied day night, re-apply since we won't be
+                        // called again
+                        applyDayNight();
+                    }
+                }
+                break;
+            default:
+                Log.i(TAG, "setLocalNightMode() called with an unknown mode");
+                break;
+        }
+    }
+
+    int mapNightMode(final int mode) {
+        switch (mode) {
+            case MODE_NIGHT_AUTO:
+                ensureAutoNightModeManager();
+                return mAutoNightModeManager.getApplyableNightMode();
+            case MODE_NIGHT_UNSPECIFIED:
+                // If we don't have a mode specified, just let the system handle it
+                return MODE_NIGHT_FOLLOW_SYSTEM;
+            default:
+                return mode;
+        }
+    }
+
+    public static void setDefaultNightMode(int mode) {
+        switch (mode) {
+            case MODE_NIGHT_AUTO:
+            case MODE_NIGHT_NO:
+            case MODE_NIGHT_YES:
+            case MODE_NIGHT_FOLLOW_SYSTEM:
+                sDefaultNightMode = mode;
+                break;
+            default:
+                Log.d(TAG, "setDefaultNightMode() called with an unknown mode");
+                break;
+        }
+    }
+
+    public static int getDefaultNightMode() {
+        return sDefaultNightMode;
+    }
+
+    private int getNightMode() {
+        return mLocalNightMode != MODE_NIGHT_UNSPECIFIED ? mLocalNightMode : getDefaultNightMode();
+    }
+
+    @Override
+    protected void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
+
+        if (mLocalNightMode != MODE_NIGHT_UNSPECIFIED) {
+            // If we have a local night mode set, save it
+            outState.putInt(KEY_LOCAL_NIGHT_MODE, mLocalNightMode);
+        }
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+
+        // Make sure we clean up any receivers setup for AUTO mode
+        if (mAutoNightModeManager != null) {
+            mAutoNightModeManager.cleanup();
+        }
+    }
+
+    /**
+     * Updates the {@link Resources} configuration {@code uiMode} with the
+     * chosen {@code UI_MODE_NIGHT} value.
+     */
+    private boolean updateForNightMode(final int mode) {
+        final Resources res = getResources();
+        final Configuration conf = res.getConfiguration();
+        final int currentNightMode = conf.uiMode & Configuration.UI_MODE_NIGHT_MASK;
+
+        final int newNightMode = (mode == MODE_NIGHT_YES)
+                ? Configuration.UI_MODE_NIGHT_YES
+                : Configuration.UI_MODE_NIGHT_NO;
+
+        if (currentNightMode != newNightMode) {
+            if (shouldRecreateOnNightModeChange()) {
+                if (BuildVars.DEBUG_VERSION) {
+                    Log.d(TAG, "applyNightMode() | Night mode changed, recreating Activity");
+                }
+                // If we've already been created, we need to recreate the Activity for the
+                // mode to be applied
+                final Activity activity = this;
+                activity.recreate();
+            } else {
+                if (BuildVars.DEBUG_VERSION) {
+                    Log.d(TAG, "applyNightMode() | Night mode changed, updating configuration");
+                }
+                final Configuration newConf = new Configuration(conf);
+                newConf.uiMode = newNightMode
+                        | (newConf.uiMode & ~Configuration.UI_MODE_NIGHT_MASK);
+                res.updateConfiguration(newConf, null);
+            }
+            return true;
+        } else {
+            if (BuildVars.DEBUG_VERSION) {
+                Log.d(TAG, "applyNightMode() | Night mode has not changed. Skipping");
+            }
+        }
+        return false;
+    }
+
+    private void ensureAutoNightModeManager() {
+        if (mAutoNightModeManager == null) {
+            mAutoNightModeManager = new AutoNightModeManager(TwilightManager.getInstance(this));
+        }
+    }
+
+    @VisibleForTesting
+    final AutoNightModeManager getAutoNightModeManager() {
+        ensureAutoNightModeManager();
+        return mAutoNightModeManager;
+    }
+
+    private boolean shouldRecreateOnNightModeChange() {
+        if (mApplyDayNightCalled) {
+            // If we've already appliedDayNight() (via setTheme), we need to check if the
+            // Activity has configChanges set to handle uiMode changes
+            final PackageManager pm = getPackageManager();
+            try {
+                final ActivityInfo info = pm.getActivityInfo(
+                        new ComponentName(this, getClass()), 0);
+                // We should return true (to recreate) if configChanges does not want to
+                // handle uiMode
+                return (info.configChanges & ActivityInfo.CONFIG_UI_MODE) == 0;
+            } catch (PackageManager.NameNotFoundException e) {
+                // This shouldn't happen but let's not crash because of it, we'll just log and
+                // return true (since most apps will do that anyway)
+                Log.d(TAG, "Exception while getting ActivityInfo", e);
+                return true;
+            }
+        }
+        return false;
+    }
+
+    final class AutoNightModeManager {
+        private TwilightManager mTwilightManager;
+        private boolean mIsNight;
+
+        private BroadcastReceiver mAutoTimeChangeReceiver;
+        private IntentFilter mAutoTimeChangeReceiverFilter;
+
+        AutoNightModeManager(@NonNull TwilightManager twilightManager) {
+            mTwilightManager = twilightManager;
+            mIsNight = twilightManager.isNight();
+        }
+
+        final int getApplyableNightMode() {
+            return mIsNight ? MODE_NIGHT_YES : MODE_NIGHT_NO;
+        }
+
+        final void dispatchTimeChanged() {
+            final boolean isNight = mTwilightManager.isNight();
+            if (isNight != mIsNight) {
+                mIsNight = isNight;
+                applyDayNight();
+            }
+        }
+
+        final void setup() {
+            cleanup();
+
+            // If we're set to AUTO, we register a receiver to be notified on time changes. The
+            // system only send the tick out every minute, but that's enough fidelity for our use
+            // case
+            if (mAutoTimeChangeReceiver == null) {
+                mAutoTimeChangeReceiver = new BroadcastReceiver() {
+                    @Override
+                    public void onReceive(Context context, Intent intent) {
+                        if (false/*DEBUG*/) {
+                            Log.d("AutoTimeChangeReceiver", "onReceive | Intent: " + intent);
+                        }
+                        dispatchTimeChanged();
+                    }
+                };
+            }
+            if (mAutoTimeChangeReceiverFilter == null) {
+                mAutoTimeChangeReceiverFilter = new IntentFilter();
+                mAutoTimeChangeReceiverFilter.addAction(Intent.ACTION_TIME_CHANGED);
+                mAutoTimeChangeReceiverFilter.addAction(Intent.ACTION_TIMEZONE_CHANGED);
+                mAutoTimeChangeReceiverFilter.addAction(Intent.ACTION_TIME_TICK);
+            }
+            registerReceiver(mAutoTimeChangeReceiver, mAutoTimeChangeReceiverFilter);
+        }
+
+        final void cleanup() {
+            if (mAutoTimeChangeReceiver != null) {
+                unregisterReceiver(mAutoTimeChangeReceiver);
+                mAutoTimeChangeReceiver = null;
+            }
+        }
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
index 2bad05a03..d367bc9b9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
@@ -22,6 +22,7 @@
 import android.graphics.RectF;
 import android.graphics.drawable.Drawable;
 import android.os.Build;
+import android.support.v4.content.ContextCompat;
 import android.support.v4.view.PagerAdapter;
 import android.support.v4.view.ViewPager;
 import android.util.Log;
@@ -70,6 +71,9 @@
 
 public class EmojiView extends FrameLayout implements NotificationCenter.NotificationCenterDelegate {
 
+    public static int BACKGROUND_COLOR;
+    public static int INDICATOR_COLOR;
+
     public interface Listener {
         boolean onBackspace();
         void onEmojiSelected(String emoji);
@@ -187,7 +191,7 @@ public boolean onLongClick(View view) {
             setBackgroundResource(R.drawable.list_selector);
             setGravity(Gravity.CENTER);
             setTypeface(AndroidUtilities.getTypeface("fonts/NotoColorEmoji.ttf"));
-            setTextColor(0xff000000);
+            setTextColor(Color.BLACK);
             setForegroundGravity(Gravity.CENTER);
         }
 
@@ -603,6 +607,8 @@ protected void onDraw(Canvas canvas) {
     public EmojiView(boolean needStickers, boolean needGif, final Context context) {
         super(context);
 
+        //setElevation(AndroidUtilities.dp(2));
+
         showGifs = needGif;
 
         dotDrawable = context.getResources().getDrawable(R.drawable.bluecircle);
@@ -626,7 +632,7 @@ public void getOutline(View view, Outline outline) {
             }
             gridView.setNumColumns(-1);
             EmojiGridAdapter emojiGridAdapter = new EmojiGridAdapter(i - 1);
-            AndroidUtilities.setListViewEdgeEffectColor(gridView, 0xfff5f6f7);
+            AndroidUtilities.setListViewEdgeEffectColor(gridView, BACKGROUND_COLOR);
             gridView.setAdapter(emojiGridAdapter);
             adapters.add(emojiGridAdapter);
             emojiGrids.add(gridView);
@@ -694,7 +700,7 @@ public void onItemClick(View view, int position) {
                 }
             };
             stickersGridView.setOnItemClickListener(stickersOnItemClickListener);
-            stickersGridView.setGlowColor(0xfff5f6f7);
+            stickersGridView.setGlowColor(BACKGROUND_COLOR);
             stickersWrap.addView(stickersGridView);
 
             trendingGridView = new RecyclerListView(context);
@@ -734,7 +740,7 @@ public void onItemClick(View view, int position) {
                 }
             });
             trendingGridAdapter.notifyDataSetChanged();
-            trendingGridView.setGlowColor(0xfff5f6f7);
+            trendingGridView.setGlowColor(BACKGROUND_COLOR);
             trendingGridView.setVisibility(GONE);
             stickersWrap.addView(trendingGridView);
 
@@ -899,9 +905,9 @@ public boolean onTouchEvent(MotionEvent ev) {
                 }
             };
             stickersTab.setUnderlineHeight(AndroidUtilities.dp(1));
-            stickersTab.setIndicatorColor(0xffe2e5e7);
-            stickersTab.setUnderlineColor(0xffe2e5e7);
-            stickersTab.setBackgroundColor(0xfff5f6f7);
+            stickersTab.setIndicatorColor(INDICATOR_COLOR);
+            stickersTab.setUnderlineColor(INDICATOR_COLOR);
+            stickersTab.setBackgroundColor(BACKGROUND_COLOR);
             stickersTab.setVisibility(INVISIBLE);
             addView(stickersTab, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 48, Gravity.LEFT | Gravity.TOP));
             stickersTab.setTranslationX(AndroidUtilities.displaySize.x);
@@ -1002,7 +1008,7 @@ public boolean onInterceptTouchEvent(MotionEvent ev) {
         pagerSlidingTabStrip.setIndicatorHeight(AndroidUtilities.dp(2));
         pagerSlidingTabStrip.setUnderlineHeight(AndroidUtilities.dp(1));
         pagerSlidingTabStrip.setIndicatorColor(0xff2b96e2);
-        pagerSlidingTabStrip.setUnderlineColor(0xffe2e5e7);
+        pagerSlidingTabStrip.setUnderlineColor(INDICATOR_COLOR);
         emojiTab.addView(pagerSlidingTabStrip, LayoutHelper.createLinear(0, 48, 1.0f));
         pagerSlidingTabStrip.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {
             @Override
@@ -1049,7 +1055,7 @@ public boolean onTouchEvent(MotionEvent event) {
         frameLayout.addView(backspaceButton, LayoutHelper.createFrame(52, 48));
 
         View view = new View(context);
-        view.setBackgroundColor(0xffe2e5e7);
+        view.setBackgroundColor(INDICATOR_COLOR);
         frameLayout.addView(view, LayoutHelper.createFrame(52, 1, Gravity.LEFT | Gravity.BOTTOM));
 
         TextView textView = new TextView(context);
@@ -1530,8 +1536,8 @@ public void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                     setClipToOutline(false);
                     setElevation(0);
                 }
-                setBackgroundColor(0xfff5f6f7);
-                emojiTab.setBackgroundColor(0xfff5f6f7);
+                setBackgroundColor(BACKGROUND_COLOR);
+                emojiTab.setBackgroundColor(BACKGROUND_COLOR);
                 currentBackgroundType = 0;
             }
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ForegroundFrameLayout.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ForegroundFrameLayout.java
new file mode 100644
index 000000000..07486e031
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ForegroundFrameLayout.java
@@ -0,0 +1,213 @@
+package org.telegram.ui.Components;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.*;
+import android.graphics.drawable.Drawable;
+import android.os.Build;
+import android.support.annotation.DrawableRes;
+import android.support.annotation.NonNull;
+import android.util.AttributeSet;
+import android.view.Gravity;
+import android.view.MotionEvent;
+import android.widget.FrameLayout;
+
+/**
+ * Created by Rikka on 2016/10/18.
+ */
+
+public class ForegroundFrameLayout extends FrameLayout {
+
+    private Drawable mForeground;
+
+    private final android.graphics.Rect mSelfBounds = new android.graphics.Rect();
+
+    private final android.graphics.Rect mOverlayBounds = new android.graphics.Rect();
+
+    private int mForegroundGravity = Gravity.FILL;
+
+    protected boolean mForegroundInPadding = true;
+
+    boolean mForegroundBoundsChanged = false;
+
+    public ForegroundFrameLayout(Context context) {
+        this(context, null);
+    }
+
+    public ForegroundFrameLayout(Context context, AttributeSet attrs) {
+        this(context, attrs, 0);
+    }
+
+    public ForegroundFrameLayout(Context context, AttributeSet attrs, int defStyle) {
+        super(context, attrs, defStyle);
+    }
+
+    @Override
+    public boolean onTouchEvent(MotionEvent event) {
+        if (Build.VERSION.SDK_INT >= 21 && getForeground() != null) {
+            if (event.getAction() == MotionEvent.ACTION_DOWN || event.getAction() == MotionEvent.ACTION_MOVE) {
+                getForeground().setHotspot(event.getX(), event.getY());
+            }
+        }
+        return super.onTouchEvent(event);
+    }
+    /**
+     * Describes how the foreground is positioned.
+     *
+     * @return foreground gravity.
+     * @see #setForegroundGravity(int)
+     */
+    public int getForegroundGravity() {
+        return mForegroundGravity;
+    }
+
+    /**
+     * Describes how the foreground is positioned. Defaults to START and TOP.
+     *
+     * @param foregroundGravity See {@link android.view.Gravity}
+     * @see #getForegroundGravity()
+     */
+    public void setForegroundGravity(int foregroundGravity) {
+        if (mForegroundGravity != foregroundGravity) {
+            if ((foregroundGravity & Gravity.RELATIVE_HORIZONTAL_GRAVITY_MASK) == 0) {
+                foregroundGravity |= Gravity.START;
+            }
+
+            if ((foregroundGravity & Gravity.VERTICAL_GRAVITY_MASK) == 0) {
+                foregroundGravity |= Gravity.TOP;
+            }
+
+            mForegroundGravity = foregroundGravity;
+
+            if (mForegroundGravity == Gravity.FILL && mForeground != null) {
+                android.graphics.Rect padding = new android.graphics.Rect();
+                mForeground.getPadding(padding);
+            }
+
+            requestLayout();
+        }
+    }
+
+    @Override
+    protected boolean verifyDrawable(Drawable who) {
+        return super.verifyDrawable(who) || (who == mForeground);
+    }
+
+    @Override
+    public void jumpDrawablesToCurrentState() {
+        super.jumpDrawablesToCurrentState();
+        if (mForeground != null) {
+            mForeground.jumpToCurrentState();
+        }
+    }
+
+    @Override
+    protected void drawableStateChanged() {
+        super.drawableStateChanged();
+        if (mForeground != null && mForeground.isStateful()) {
+            mForeground.setState(getDrawableState());
+        }
+    }
+
+    public void setForeground(@DrawableRes int resId) {
+        setForeground(getContext().getDrawable(resId));
+    }
+
+    /**
+     * Supply a Drawable that is to be rendered on top of all of the child
+     * views in the frame layout.  Any padding in the Drawable will be taken
+     * into account by ensuring that the children are inset to be placed
+     * inside of the padding area.
+     *
+     * @param drawable The Drawable to be drawn on top of the children.
+     */
+    public void setForeground(Drawable drawable) {
+        if (mForeground != drawable) {
+            if (mForeground != null) {
+                mForeground.setCallback(null);
+                unscheduleDrawable(mForeground);
+            }
+
+            mForeground = drawable;
+
+            if (drawable != null) {
+                setWillNotDraw(false);
+                drawable.setCallback(this);
+                if (drawable.isStateful()) {
+                    drawable.setState(getDrawableState());
+                }
+                if (mForegroundGravity == Gravity.FILL) {
+                    android.graphics.Rect padding = new android.graphics.Rect();
+                    drawable.getPadding(padding);
+                }
+            } else {
+                setWillNotDraw(true);
+            }
+            requestLayout();
+            invalidate();
+        }
+    }
+
+    /**
+     * Returns the drawable used as the foreground of this FrameLayout. The
+     * foreground drawable, if non-null, is always drawn on top of the children.
+     *
+     * @return A Drawable or null if no foreground was set.
+     */
+    public Drawable getForeground() {
+        return mForeground;
+    }
+
+    @Override
+    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
+        super.onLayout(changed, left, top, right, bottom);
+        mForegroundBoundsChanged |= changed;
+    }
+
+    @Override
+    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
+        super.onSizeChanged(w, h, oldw, oldh);
+        mForegroundBoundsChanged = true;
+    }
+
+    @Override
+    public void draw(@NonNull Canvas canvas) {
+        super.draw(canvas);
+
+        if (mForeground != null) {
+            final Drawable foreground = mForeground;
+
+            if (mForegroundBoundsChanged) {
+                mForegroundBoundsChanged = false;
+                final android.graphics.Rect selfBounds = mSelfBounds;
+                final android.graphics.Rect overlayBounds = mOverlayBounds;
+
+                final int w = getRight() - getLeft();
+                final int h = getBottom() - getTop();
+
+                if (mForegroundInPadding) {
+                    selfBounds.set(0, 0, w, h);
+                } else {
+                    selfBounds.set(getPaddingLeft(), getPaddingTop(),
+                            w - getPaddingRight(), h - getPaddingBottom());
+                }
+
+                Gravity.apply(mForegroundGravity, foreground.getIntrinsicWidth(),
+                        foreground.getIntrinsicHeight(), selfBounds, overlayBounds);
+                foreground.setBounds(overlayBounds);
+            }
+
+            foreground.draw(canvas);
+        }
+    }
+
+    @Override
+    public void drawableHotspotChanged(float x, float y) {
+        super.drawableHotspotChanged(x, y);
+        if (mForeground != null) {
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+                mForeground.setHotspot(x, y);
+            }
+        }
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
index d9c291d52..3ef89f7ec 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
@@ -506,6 +506,8 @@ public void onStickerSetRemove(TLRPC.StickerSetCovered stickerSet) {
             if (sizeNotifierLayout != null) {
                 emojiPadding = currentHeight;
                 sizeNotifierLayout.requestLayout();
+
+                // TODO tint
                 emojiButton.setImageResource(R.drawable.ic_keyboard_w);
                 onWindowSizeChanged();
             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PickerBottomLayout.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PickerBottomLayout.java
index bae9c2afb..e385a8305 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PickerBottomLayout.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PickerBottomLayout.java
@@ -9,6 +9,7 @@
 package org.telegram.ui.Components;
 
 import android.content.Context;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.View;
@@ -38,7 +39,7 @@ public PickerBottomLayout(Context context, boolean darkTheme) {
         super(context);
         isDarkTheme = darkTheme;
 
-        setBackgroundColor(isDarkTheme ? 0xff1a1a1a : 0xffffffff);
+        setBackgroundColor(isDarkTheme ? 0xff1a1a1a : ContextCompat.getColor(context, R.color.background));
 
         cancelButton = new TextView(context);
         cancelButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/Switch.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/Switch.java
index 4488dc4a8..b94e04b4a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/Switch.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/Switch.java
@@ -26,6 +26,8 @@
 import android.graphics.Region;
 import android.graphics.drawable.Drawable;
 import android.os.Build;
+import android.support.v4.content.ContextCompat;
+import android.support.v4.graphics.drawable.DrawableCompat;
 import android.view.Gravity;
 import android.view.MotionEvent;
 import android.view.VelocityTracker;
@@ -100,10 +102,12 @@ public Switch(Context context) {
         mThumbDrawable = context.getResources().getDrawable(R.drawable.switch_thumb);
         if (mThumbDrawable != null) {
             mThumbDrawable.setCallback(this);
+            mThumbDrawable.setTintList(ContextCompat.getColorStateList(context, R.color.tint_switch_thumb));
         }
         mTrackDrawable = context.getResources().getDrawable(R.drawable.switch_track);
         if (mTrackDrawable != null) {
             mTrackDrawable.setCallback(this);
+            mTrackDrawable.setTintList(ContextCompat.getColorStateList(context, R.color.tint_switch_track));
         }
 
         if (AndroidUtilities.density < 1) {
@@ -411,12 +415,12 @@ public void setChecked(boolean checked) {
             setThumbPosition(checked ? 1 : 0);
         }
 
-        if (mTrackDrawable != null) {
+        /*if (mTrackDrawable != null) {
             mTrackDrawable.setColorFilter(new PorterDuffColorFilter(checked ? 0xffa0d6fa : 0xffc7c7c7, PorterDuff.Mode.MULTIPLY));
         }
         if (mThumbDrawable != null) {
             mThumbDrawable.setColorFilter(new PorterDuffColorFilter(checked ? 0xff45abef : 0xffededed, PorterDuff.Mode.MULTIPLY));
-        }
+        }*/
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/TwilightCalculator.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/TwilightCalculator.java
new file mode 100644
index 000000000..fcdfca584
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/TwilightCalculator.java
@@ -0,0 +1,136 @@
+/*
+ * Copyright (C) 2015 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.telegram.ui.Components;
+
+import android.text.format.DateUtils;
+
+/**
+ * Created by Rikka on 2016/10/18.
+ */
+
+class TwilightCalculator {
+
+    private static TwilightCalculator sInstance;
+
+    static TwilightCalculator getInstance() {
+        if (sInstance == null) {
+            sInstance = new TwilightCalculator();
+        }
+        return sInstance;
+    }
+
+    /** Value of {@link #state} if it is currently day */
+    public static final int DAY = 0;
+
+    /** Value of {@link #state} if it is currently night */
+    public static final int NIGHT = 1;
+
+    private static final float DEGREES_TO_RADIANS = (float) (Math.PI / 180.0f);
+
+    // element for calculating solar transit.
+    private static final float J0 = 0.0009f;
+
+    // correction for civil twilight
+    private static final float ALTIDUTE_CORRECTION_CIVIL_TWILIGHT = -0.104719755f;
+
+    // coefficients for calculating Equation of Center.
+    private static final float C1 = 0.0334196f;
+    private static final float C2 = 0.000349066f;
+    private static final float C3 = 0.000005236f;
+
+    private static final float OBLIQUITY = 0.40927971f;
+
+    // Java time on Jan 1, 2000 12:00 UTC.
+    private static final long UTC_2000 = 946728000000L;
+
+    /**
+     * Time of sunset (civil twilight) in milliseconds or -1 in the case the day
+     * or night never ends.
+     */
+    public long sunset;
+
+    /**
+     * Time of sunrise (civil twilight) in milliseconds or -1 in the case the
+     * day or night never ends.
+     */
+    public long sunrise;
+
+    /**
+     * Current state
+     */
+    public int state;
+
+    /**
+     * calculates the civil twilight bases on time and geo-coordinates.
+     *
+     * @param time time in milliseconds.
+     * @param latitude latitude in degrees.
+     * @param longitude latitude in degrees.
+     */
+    public void calculateTwilight(long time, double latitude, double longitude) {
+        final float daysSince2000 = (float) (time - UTC_2000) / DateUtils.DAY_IN_MILLIS;
+
+        // mean anomaly
+        final float meanAnomaly = 6.240059968f + daysSince2000 * 0.01720197f;
+
+        // true anomaly
+        final double trueAnomaly = meanAnomaly + C1 * Math.sin(meanAnomaly) + C2
+                * Math.sin(2 * meanAnomaly) + C3 * Math.sin(3 * meanAnomaly);
+
+        // ecliptic longitude
+        final double solarLng = trueAnomaly + 1.796593063d + Math.PI;
+
+        // solar transit in days since 2000
+        final double arcLongitude = -longitude / 360;
+        float n = Math.round(daysSince2000 - J0 - arcLongitude);
+        double solarTransitJ2000 = n + J0 + arcLongitude + 0.0053d * Math.sin(meanAnomaly)
+                + -0.0069d * Math.sin(2 * solarLng);
+
+        // declination of sun
+        double solarDec = Math.asin(Math.sin(solarLng) * Math.sin(OBLIQUITY));
+
+        final double latRad = latitude * DEGREES_TO_RADIANS;
+
+        double cosHourAngle = (Math.sin(ALTIDUTE_CORRECTION_CIVIL_TWILIGHT) - Math.sin(latRad)
+                * Math.sin(solarDec)) / (Math.cos(latRad) * Math.cos(solarDec));
+        // The day or night never ends for the given date and location, if this value is out of
+        // range.
+        if (cosHourAngle >= 1) {
+            state = NIGHT;
+            sunset = -1;
+            sunrise = -1;
+            return;
+        } else if (cosHourAngle <= -1) {
+            state = DAY;
+            sunset = -1;
+            sunrise = -1;
+            return;
+        }
+
+        float hourAngle = (float) (Math.acos(cosHourAngle) / (2 * Math.PI));
+
+        sunset = Math.round((solarTransitJ2000 + hourAngle) * DateUtils.DAY_IN_MILLIS) + UTC_2000;
+        sunrise = Math.round((solarTransitJ2000 - hourAngle) * DateUtils.DAY_IN_MILLIS) + UTC_2000;
+
+        if (sunrise < time && sunset > time) {
+            state = DAY;
+        } else {
+            state = NIGHT;
+        }
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/TwilightManager.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/TwilightManager.java
new file mode 100644
index 000000000..e03793ff7
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/TwilightManager.java
@@ -0,0 +1,206 @@
+/*
+ * Copyright (C) 2015 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.telegram.ui.Components;
+
+/**
+ * Created by Rikka on 2016/10/18.
+ */
+
+import android.Manifest;
+import android.content.Context;
+import android.location.Location;
+import android.location.LocationManager;
+import android.support.annotation.NonNull;
+import android.support.annotation.VisibleForTesting;
+import android.support.v4.content.PermissionChecker;
+import android.text.format.DateUtils;
+import android.util.Log;
+
+import java.util.Calendar;
+
+/**
+ * Class which managing whether we are in the night or not.
+ */
+class TwilightManager {
+
+    private static final String TAG = "TwilightManager";
+
+    private static final int SUNRISE = 6; // 6am
+    private static final int SUNSET = 22; // 10pm
+
+    private static TwilightManager sInstance;
+
+    static TwilightManager getInstance(@NonNull Context context) {
+        if (sInstance == null) {
+            context = context.getApplicationContext();
+            sInstance = new TwilightManager(context,
+                    (LocationManager) context.getSystemService(Context.LOCATION_SERVICE));
+        }
+        return sInstance;
+    }
+
+    @VisibleForTesting
+    static void setInstance(TwilightManager twilightManager) {
+        sInstance = twilightManager;
+    }
+
+    private final Context mContext;
+    private final LocationManager mLocationManager;
+
+    private final TwilightState mTwilightState = new TwilightState();
+
+    @VisibleForTesting
+    TwilightManager(@NonNull Context context, @NonNull LocationManager locationManager) {
+        mContext = context;
+        mLocationManager = locationManager;
+    }
+
+    /**
+     * Returns true we are currently in the 'night'.
+     *
+     * @return true if we are at night, false if the day.
+     */
+    boolean isNight() {
+        final TwilightState state = mTwilightState;
+
+        if (isStateValid()) {
+            // If the current twilight state is still valid, use it
+            return state.isNight;
+        }
+
+        // Else, we will try and grab the last known location
+        final Location location = getLastKnownLocation();
+        if (location != null) {
+            updateState(location);
+            return state.isNight;
+        }
+
+        Log.i(TAG, "Could not get last known location. This is probably because the app does not"
+                + " have any location permissions. Falling back to hardcoded"
+                + " sunrise/sunset values.");
+
+        // If we don't have a location, we'll use our hardcoded sunrise/sunset values.
+        // These aren't great, but it's better than nothing.
+        Calendar calendar = Calendar.getInstance();
+        final int hour = calendar.get(Calendar.HOUR_OF_DAY);
+        return hour < SUNRISE || hour >= SUNSET;
+    }
+
+    private Location getLastKnownLocation() {
+        Location coarseLoc = null;
+        Location fineLoc = null;
+
+        int permission = PermissionChecker.checkSelfPermission(mContext,
+                Manifest.permission.ACCESS_COARSE_LOCATION);
+        if (permission == PermissionChecker.PERMISSION_GRANTED) {
+            coarseLoc = getLastKnownLocationForProvider(LocationManager.NETWORK_PROVIDER);
+        }
+
+        permission = PermissionChecker.checkSelfPermission(mContext,
+                Manifest.permission.ACCESS_FINE_LOCATION);
+        if (permission == PermissionChecker.PERMISSION_GRANTED) {
+            fineLoc = getLastKnownLocationForProvider(LocationManager.GPS_PROVIDER);
+        }
+
+        if (fineLoc != null && coarseLoc != null) {
+            // If we have both a fine and coarse location, use the latest
+            return fineLoc.getTime() > coarseLoc.getTime() ? fineLoc : coarseLoc;
+        } else {
+            // Else, return the non-null one (if there is one)
+            return fineLoc != null ? fineLoc : coarseLoc;
+        }
+    }
+
+    private Location getLastKnownLocationForProvider(String provider) {
+        if (mLocationManager != null) {
+            try {
+                if (mLocationManager.isProviderEnabled(provider)) {
+                    return mLocationManager.getLastKnownLocation(provider);
+                }
+            } catch (Exception e) {
+                Log.d(TAG, "Failed to get last known location", e);
+            }
+        }
+        return null;
+    }
+
+    private boolean isStateValid() {
+        return mTwilightState != null && mTwilightState.nextUpdate > System.currentTimeMillis();
+    }
+
+    private void updateState(@NonNull Location location) {
+        final TwilightState state = mTwilightState;
+        final long now = System.currentTimeMillis();
+        final TwilightCalculator calculator = TwilightCalculator.getInstance();
+
+        // calculate yesterday's twilight
+        calculator.calculateTwilight(now - DateUtils.DAY_IN_MILLIS,
+                location.getLatitude(), location.getLongitude());
+        final long yesterdaySunset = calculator.sunset;
+
+        // calculate today's twilight
+        calculator.calculateTwilight(now, location.getLatitude(), location.getLongitude());
+        final boolean isNight = (calculator.state == TwilightCalculator.NIGHT);
+        final long todaySunrise = calculator.sunrise;
+        final long todaySunset = calculator.sunset;
+
+        // calculate tomorrow's twilight
+        calculator.calculateTwilight(now + DateUtils.DAY_IN_MILLIS,
+                location.getLatitude(), location.getLongitude());
+        final long tomorrowSunrise = calculator.sunrise;
+
+        // Set next update
+        long nextUpdate = 0;
+        if (todaySunrise == -1 || todaySunset == -1) {
+            // In the case the day or night never ends the update is scheduled 12 hours later.
+            nextUpdate = now + 12 * DateUtils.HOUR_IN_MILLIS;
+        } else {
+            if (now > todaySunset) {
+                nextUpdate += tomorrowSunrise;
+            } else if (now > todaySunrise) {
+                nextUpdate += todaySunset;
+            } else {
+                nextUpdate += todaySunrise;
+            }
+            // add some extra time to be on the safe side.
+            nextUpdate += DateUtils.MINUTE_IN_MILLIS;
+        }
+
+        // Update the twilight state
+        state.isNight = isNight;
+        state.yesterdaySunset = yesterdaySunset;
+        state.todaySunrise = todaySunrise;
+        state.todaySunset = todaySunset;
+        state.tomorrowSunrise = tomorrowSunrise;
+        state.nextUpdate = nextUpdate;
+    }
+
+    /**
+     * Describes whether it is day or night.
+     */
+    private static class TwilightState {
+        boolean isNight;
+        long yesterdaySunset;
+        long todaySunrise;
+        long todaySunset;
+        long tomorrowSunrise;
+        long nextUpdate;
+
+        TwilightState() {
+        }
+    }
+}
\ No newline at end of file
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
index c4a0da7b5..24066daf2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
@@ -12,6 +12,7 @@
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.os.Bundle;
+import android.support.v4.content.ContextCompat;
 import android.text.InputType;
 import android.text.TextUtils;
 import android.util.TypedValue;
@@ -145,7 +146,7 @@ public boolean onTouch(View v, MotionEvent event) {
         avatarImage.setLayoutParams(layoutParams3);
 
         nameTextView = new TextView(context);
-        nameTextView.setTextColor(0xff212121);
+        nameTextView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 20);
         nameTextView.setLines(1);
         nameTextView.setMaxLines(1);
@@ -183,8 +184,8 @@ public boolean onTouch(View v, MotionEvent event) {
 
         firstNameField = new EditText(context);
         firstNameField.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
-        firstNameField.setHintTextColor(0xff979797);
-        firstNameField.setTextColor(0xff212121);
+        //firstNameField.setHintTextColor(0xff979797);
+        firstNameField.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         firstNameField.setMaxLines(1);
         firstNameField.setLines(1);
         firstNameField.setSingleLine(true);
@@ -215,8 +216,8 @@ public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
 
         lastNameField = new EditText(context);
         lastNameField.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
-        lastNameField.setHintTextColor(0xff979797);
-        lastNameField.setTextColor(0xff212121);
+        //lastNameField.setHintTextColor(0xff979797);
+        lastNameField.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         lastNameField.setMaxLines(1);
         lastNameField.setLines(1);
         lastNameField.setSingleLine(true);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index 4cbce7e10..9e688f695 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -23,6 +23,7 @@
 import android.graphics.Outline;
 import android.os.Build;
 import android.os.Bundle;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.MotionEvent;
@@ -320,6 +321,7 @@ public void onItemClick(int id) {
 
         FrameLayout frameLayout = new FrameLayout(context);
         fragmentView = frameLayout;
+        fragmentView.setBackgroundColor(ContextCompat.getColor(context, R.color.chat_list_background));
         
         listView = new RecyclerListView(context);
         listView.setVerticalScrollBarEnabled(true);
@@ -650,6 +652,7 @@ public boolean onTouch(View v, MotionEvent event) {
         progressView.setVisibility(View.GONE);
         frameLayout.addView(progressView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER));
 
+        // TODO fab color
         floatingButton = new ImageView(context);
         floatingButton.setVisibility(onlySelect ? View.GONE : View.VISIBLE);
         floatingButton.setScaleType(ImageView.ScaleType.CENTER);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
index 9ac8a77b2..bfb140ab6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
@@ -15,6 +15,7 @@
 import android.graphics.Canvas;
 import android.graphics.drawable.BitmapDrawable;
 import android.os.Bundle;
+import android.support.v4.content.ContextCompat;
 import android.text.Editable;
 import android.text.InputType;
 import android.text.Spannable;
@@ -177,6 +178,8 @@ public void onItemClick(int id) {
         listViewAdapter.setCheckedMap(selectedContacts);
 
         fragmentView = new LinearLayout(context);
+        fragmentView.setBackgroundColor(ContextCompat.getColor(context, R.color.chat_list_background));
+
         LinearLayout linearLayout = (LinearLayout) fragmentView;
         linearLayout.setOrientation(LinearLayout.VERTICAL);
 
@@ -185,8 +188,8 @@ public void onItemClick(int id) {
 
         userSelectEditText = new EditText(context);
         userSelectEditText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
-        userSelectEditText.setHintTextColor(0xff979797);
-        userSelectEditText.setTextColor(0xff212121);
+        //userSelectEditText.setHintTextColor(0xff979797);
+        userSelectEditText.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         userSelectEditText.setInputType(InputType.TYPE_TEXT_VARIATION_FILTER | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS | InputType.TYPE_TEXT_FLAG_MULTI_LINE);
         userSelectEditText.setMinimumHeight(AndroidUtilities.dp(54));
         userSelectEditText.setSingleLine(false);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java
index 3c3cef490..3669f728b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java
@@ -14,6 +14,7 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.Bundle;
+import android.support.v4.content.ContextCompat;
 import android.text.Editable;
 import android.text.InputFilter;
 import android.text.InputType;
@@ -269,7 +270,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
         nameTextView.setMaxLines(4);
         nameTextView.setGravity(Gravity.CENTER_VERTICAL | (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT));
         nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
-        nameTextView.setHintTextColor(0xff979797);
+        //nameTextView.setHintTextColor(0xff979797);
         nameTextView.setImeOptions(EditorInfo.IME_FLAG_NO_EXTRACT_UI);
         nameTextView.setInputType(InputType.TYPE_TEXT_FLAG_CAP_SENTENCES);
         nameTextView.setPadding(0, 0, 0, AndroidUtilities.dp(8));
@@ -277,7 +278,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
         inputFilters[0] = new InputFilter.LengthFilter(100);
         nameTextView.setFilters(inputFilters);
         AndroidUtilities.clearCursorDrawable(nameTextView);
-        nameTextView.setTextColor(0xff212121);
+        nameTextView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         frameLayout.addView(nameTextView);
         layoutParams1 = (FrameLayout.LayoutParams) nameTextView.getLayoutParams();
         layoutParams1.width = LayoutHelper.MATCH_PARENT;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java
index 401a1b005..8cfc4b252 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java
@@ -11,6 +11,7 @@
 import android.content.Context;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
+import android.support.v4.content.ContextCompat;
 import android.text.Spannable;
 import android.text.SpannableStringBuilder;
 import android.text.Spanned;
@@ -87,7 +88,7 @@ public void onItemClick(int id) {
         LinearLayout linearLayout = (LinearLayout) fragmentView;
         linearLayout.setOrientation(LinearLayout.VERTICAL);
         linearLayout.setWeightSum(100);
-        linearLayout.setBackgroundColor(0xfff0f0f0);
+        linearLayout.setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
         fragmentView.setOnTouchListener(new View.OnTouchListener() {
             @Override
             public boolean onTouch(View v, MotionEvent event) {
@@ -104,12 +105,12 @@ public boolean onTouch(View v, MotionEvent event) {
         frameLayout.addView(identiconView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
 
         frameLayout = new FrameLayout(context);
-        frameLayout.setBackgroundColor(0xffffffff);
+        frameLayout.setBackgroundColor(ContextCompat.getColor(context, R.color.background));
         frameLayout.setPadding(AndroidUtilities.dp(10), 0, AndroidUtilities.dp(10), AndroidUtilities.dp(10));
         linearLayout.addView(frameLayout, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, 50.0f));
 
         TextView textView = new TextView(context);
-        textView.setTextColor(0xff7f7f7f);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.secondary_text));
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
         textView.setLinksClickable(true);
         textView.setClickable(true);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index f54fa86d8..54ce3f19e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -28,6 +28,7 @@
 import android.os.Parcelable;
 import android.provider.ContactsContract;
 import android.support.annotation.NonNull;
+import android.support.v4.content.ContextCompat;
 import android.text.TextUtils;
 import android.view.ActionMode;
 import android.view.KeyEvent;
@@ -72,6 +73,10 @@
 import org.telegram.ui.ActionBar.ActionBarLayout;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.ActionBar.DrawerLayoutContainer;
+import org.telegram.ui.Cells.DialogCell;
+import org.telegram.ui.Cells.HashtagSearchCell;
+import org.telegram.ui.Cells.ProfileSearchCell;
+import org.telegram.ui.Components.DayNightActivity;
 import org.telegram.ui.Components.JoinGroupAlert;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.PasscodeView;
@@ -86,7 +91,7 @@
 import java.util.List;
 import java.util.Map;
 
-public class LaunchActivity extends Activity implements ActionBarLayout.ActionBarLayoutDelegate, NotificationCenter.NotificationCenterDelegate, DialogsActivity.DialogsActivityDelegate {
+public class LaunchActivity extends DayNightActivity implements ActionBarLayout.ActionBarLayoutDelegate, NotificationCenter.NotificationCenterDelegate, DialogsActivity.DialogsActivityDelegate {
 
     private boolean finished;
     private String videoPath;
@@ -158,6 +163,13 @@ protected void onCreate(Bundle savedInstanceState) {
             AndroidUtilities.isInMultiwindow = isInMultiWindowMode();
         }
         Theme.loadRecources(this);
+        Theme.tintDrawable(this);
+        Theme.resetColor(this);
+        MessageObject.resetPaint();
+        ProfileSearchCell.resetPaint(this);
+        DialogCell.resetPaintColor(this);
+
+        ApplicationLoader.reloadWallpaperNightModeChanged();
 
         if (UserConfig.passcodeHash.length() != 0 && UserConfig.appLocked) {
             UserConfig.lastPauseTime = ConnectionsManager.getInstance().getCurrentTime();
@@ -316,7 +328,7 @@ public boolean hasOverlappingRendering() {
                 return false;
             }
         };
-        listView.setBackgroundColor(0xffffffff);
+        listView.setBackgroundColor(ContextCompat.getColor(this, R.color.list_background));
         listView.setAdapter(drawerLayoutAdapter = new DrawerLayoutAdapter(this));
         listView.setChoiceMode(AbsListView.CHOICE_MODE_SINGLE);
         listView.setDivider(null);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
index b584c5d6f..bb8a071e9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
@@ -21,6 +21,7 @@
 import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
+import android.support.v4.content.ContextCompat;
 import android.support.v4.content.FileProvider;
 import android.text.TextUtils;
 import android.util.TypedValue;
@@ -580,7 +581,7 @@ public boolean onItemLongClick(AdapterView<?> parent, View view, int i, long id)
         emptyView.setOrientation(LinearLayout.VERTICAL);
         emptyView.setGravity(Gravity.CENTER);
         emptyView.setVisibility(View.GONE);
-        emptyView.setBackgroundColor(0xfff0f0f0);
+        emptyView.setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
         frameLayout.addView(emptyView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
         emptyView.setOnTouchListener(new View.OnTouchListener() {
             @Override
@@ -593,7 +594,7 @@ public boolean onTouch(View v, MotionEvent event) {
         emptyView.addView(emptyImageView, LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT));
 
         emptyTextView = new TextView(context);
-        emptyTextView.setTextColor(0xff8a8a8a);
+        emptyTextView.setTextColor(ContextCompat.getColor(context, R.color.disabled_text));
         emptyTextView.setGravity(Gravity.CENTER);
         emptyTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 17);
         emptyTextView.setPadding(AndroidUtilities.dp(40), 0, AndroidUtilities.dp(40), AndroidUtilities.dp(128));
@@ -603,7 +604,7 @@ public boolean onTouch(View v, MotionEvent event) {
         progressView.setGravity(Gravity.CENTER);
         progressView.setOrientation(LinearLayout.VERTICAL);
         progressView.setVisibility(View.GONE);
-        progressView.setBackgroundColor(0xfff0f0f0);
+        progressView.setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
         frameLayout.addView(progressView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
 
         ProgressBar progressBar = new ProgressBar(context);
@@ -1445,7 +1446,7 @@ public int getCountForSection(int section) {
         public View getSectionHeaderView(int section, View convertView, ViewGroup parent) {
             if (convertView == null) {
                 convertView = new SharedMediaSectionCell(mContext);
-                convertView.setBackgroundColor(0xffffffff);
+                convertView.setBackgroundColor(ContextCompat.getColor(convertView.getContext(), R.color.search_type_background));
             }
             if (section < sharedMediaData[0].sections.size()) {
                 String name = sharedMediaData[0].sections.get(section);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/NewContactActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/NewContactActivity.java
index 4d391aa0d..fc2733ad6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/NewContactActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/NewContactActivity.java
@@ -19,6 +19,7 @@
 import android.content.SharedPreferences;
 import android.net.Uri;
 import android.os.Vibrator;
+import android.support.v4.content.ContextCompat;
 import android.telephony.TelephonyManager;
 import android.text.Editable;
 import android.text.InputFilter;
@@ -226,8 +227,8 @@ public boolean onTouch(View v, MotionEvent event) {
 
         firstNameField = new EditText(context);
         firstNameField.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
-        firstNameField.setHintTextColor(0xff979797);
-        firstNameField.setTextColor(0xff212121);
+        //firstNameField.setHintTextColor(0xff979797);
+        firstNameField.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         firstNameField.setMaxLines(1);
         firstNameField.setLines(1);
         firstNameField.setSingleLine(true);
@@ -268,8 +269,8 @@ public void afterTextChanged(Editable editable) {
 
         lastNameField = new EditText(context);
         lastNameField.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
-        lastNameField.setHintTextColor(0xff979797);
-        lastNameField.setTextColor(0xff212121);
+        //lastNameField.setHintTextColor(0xff979797);
+        lastNameField.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         lastNameField.setMaxLines(1);
         lastNameField.setLines(1);
         lastNameField.setSingleLine(true);
@@ -311,7 +312,7 @@ public void afterTextChanged(Editable editable) {
         countryButton = new TextView(context);
         countryButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
         countryButton.setPadding(AndroidUtilities.dp(6), AndroidUtilities.dp(10), AndroidUtilities.dp(6), 0);
-        countryButton.setTextColor(0xff212121);
+        countryButton.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         countryButton.setMaxLines(1);
         countryButton.setSingleLine(true);
         countryButton.setEllipsize(TextUtils.TruncateAt.END);
@@ -357,7 +358,7 @@ public void run() {
 
         codeField = new EditText(context);
         codeField.setInputType(InputType.TYPE_CLASS_PHONE);
-        codeField.setTextColor(0xff212121);
+        codeField.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         AndroidUtilities.clearCursorDrawable(codeField);
         codeField.setPadding(AndroidUtilities.dp(10), 0, 0, 0);
         codeField.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
@@ -458,8 +459,8 @@ public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
 
         phoneField = new HintEditText(context);
         phoneField.setInputType(InputType.TYPE_CLASS_PHONE);
-        phoneField.setTextColor(0xff212121);
-        phoneField.setHintTextColor(0xff979797);
+        phoneField.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
+        //phoneField.setHintTextColor(0xff979797);
         phoneField.setPadding(0, 0, 0, 0);
         AndroidUtilities.clearCursorDrawable(phoneField);
         phoneField.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java
index fa4904cf1..1f64ddc94 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java
@@ -15,6 +15,7 @@
 import android.graphics.Typeface;
 import android.os.Build;
 import android.os.Vibrator;
+import android.support.v4.content.ContextCompat;
 import android.support.v4.hardware.fingerprint.FingerprintManagerCompat;
 import android.text.Editable;
 import android.text.InputFilter;
@@ -143,7 +144,7 @@ public void onItemClick(int id) {
             menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56));
 
             titleTextView = new TextView(context);
-            titleTextView.setTextColor(0xff757575);
+            //titleTextView.setTextColor(0xff757575);
             if (type == 1) {
                 if (UserConfig.passcodeHash.length() != 0) {
                     titleTextView.setText(LocaleController.getString("EnterNewPasscode", R.string.EnterNewPasscode));
@@ -165,7 +166,7 @@ public void onItemClick(int id) {
 
             passwordEditText = new EditText(context);
             passwordEditText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 20);
-            passwordEditText.setTextColor(0xff000000);
+            //passwordEditText.setTextColor(0xff000000);
             passwordEditText.setMaxLines(1);
             passwordEditText.setLines(1);
             passwordEditText.setGravity(Gravity.CENTER_HORIZONTAL);
@@ -292,7 +293,7 @@ public void onClick(View view) {
             updateDropDownTextView();
         } else {
             actionBar.setTitle(LocaleController.getString("Passcode", R.string.Passcode));
-            frameLayout.setBackgroundColor(0xfff0f0f0);
+            frameLayout.setBackgroundColor(ContextCompat.getColor(context, R.color.settings_background));
             listView = new ListView(context);
             listView.setDivider(null);
             listView.setDividerHeight(0);
@@ -321,7 +322,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, final int i, long
                                 View child = listView.getChildAt(a);
                                 if (child instanceof TextSettingsCell) {
                                     TextSettingsCell textCell = (TextSettingsCell) child;
-                                    textCell.setTextColor(0xffc6c6c6);
+                                    //textCell.setTextColor(0xffc6c6c6);
                                     break;
                                 }
                             }
@@ -636,7 +637,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             if (viewType == 0) {
                 if (view == null) {
                     view = new TextCheckCell(mContext);
-                    view.setBackgroundColor(0xffffffff);
+                    //view.setBackgroundColor(0xffffffff);
                 }
                 TextCheckCell textCell = (TextCheckCell) view;
 
@@ -648,12 +649,13 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             } else if (viewType == 1) {
                 if (view == null) {
                     view = new TextSettingsCell(mContext);
-                    view.setBackgroundColor(0xffffffff);
+                    //view.setBackgroundColor(0xffffffff);
                 }
                 TextSettingsCell textCell = (TextSettingsCell) view;
                 if (i == changePasscodeRow) {
                     textCell.setText(LocaleController.getString("ChangePasscode", R.string.ChangePasscode), false);
-                    textCell.setTextColor(UserConfig.passcodeHash.length() == 0 ? 0xffc6c6c6 : 0xff000000);
+                    Context context = view.getContext();
+                    textCell.setTextColor(ContextCompat.getColor(context, UserConfig.passcodeHash.length() == 0 ? R.color.disabled_text : R.color.primary_text));
                 } else if (i == autoLockRow) {
                     String val;
                     if (UserConfig.autoLockIn == 0) {
@@ -674,14 +676,14 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 }
                 if (i == passcodeDetailRow) {
                     ((TextInfoPrivacyCell) view).setText(LocaleController.getString("ChangePasscodeInfo", R.string.ChangePasscodeInfo));
-                    if (autoLockDetailRow != -1) {
+                    /*if (autoLockDetailRow != -1) {
                         view.setBackgroundResource(R.drawable.greydivider);
                     } else {
                         view.setBackgroundResource(R.drawable.greydivider_bottom);
-                    }
+                    }*/
                 } else if (i == autoLockDetailRow) {
                     ((TextInfoPrivacyCell) view).setText(LocaleController.getString("AutoLockInfo", R.string.AutoLockInfo));
-                    view.setBackgroundResource(R.drawable.greydivider_bottom);
+                    //view.setBackgroundResource(R.drawable.greydivider_bottom);
                 }
             }
             return view;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PrivacyControlActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PrivacyControlActivity.java
index 79377a656..b44aad39f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PrivacyControlActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PrivacyControlActivity.java
@@ -15,6 +15,7 @@
 import android.content.DialogInterface;
 import android.content.SharedPreferences;
 import android.os.Bundle;
+import android.support.v4.content.ContextCompat;
 import android.text.Spannable;
 import android.text.method.LinkMovementMethod;
 import android.view.Gravity;
@@ -164,7 +165,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
 
         fragmentView = new FrameLayout(context);
         FrameLayout frameLayout = (FrameLayout) fragmentView;
-        frameLayout.setBackgroundColor(0xfff0f0f0);
+        frameLayout.setBackgroundColor(ContextCompat.getColor(context, R.color.settings_background));
 
         ListView listView = new ListView(context);
         listView.setDivider(null);
@@ -471,7 +472,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             if (type == 0) {
                 if (view == null) {
                     view = new TextSettingsCell(mContext);
-                    view.setBackgroundColor(0xffffffff);
+                    //view.setBackgroundColor(0xffffffff);
                 }
                 TextSettingsCell textCell = (TextSettingsCell) view;
                 if (i == alwaysShareRow) {
@@ -502,7 +503,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             } else if (type == 1) {
                 if (view == null) {
                     view = new TextInfoPrivacyCell(mContext);
-                    view.setBackgroundColor(0xffffffff);
+                    //view.setBackgroundColor(0xffffffff);
                 }
                 if (i == detailRow) {
                     if (isGroup) {
@@ -510,19 +511,19 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     } else {
                         ((TextInfoPrivacyCell) view).setText(LocaleController.getString("CustomHelp", R.string.CustomHelp));
                     }
-                    view.setBackgroundResource(R.drawable.greydivider);
+                    //view.setBackgroundResource(R.drawable.greydivider);
                 } else if (i == shareDetailRow) {
                     if (isGroup) {
                         ((TextInfoPrivacyCell) view).setText(LocaleController.getString("CustomShareInfo", R.string.CustomShareInfo));
                     } else {
                         ((TextInfoPrivacyCell) view).setText(LocaleController.getString("CustomShareSettingsHelp", R.string.CustomShareSettingsHelp));
                     }
-                    view.setBackgroundResource(R.drawable.greydivider_bottom);
+                    //view.setBackgroundResource(R.drawable.greydivider_bottom);
                 }
             } else if (type == 2) {
                 if (view == null) {
                     view = new HeaderCell(mContext);
-                    view.setBackgroundColor(0xffffffff);
+                    //view.setBackgroundColor(0xffffffff);
                 }
                 if (i == sectionRow) {
                     if (isGroup) {
@@ -536,7 +537,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             } else if (type == 3) {
                 if (view == null) {
                     view = new RadioCell(mContext);
-                    view.setBackgroundColor(0xffffffff);
+                    //view.setBackgroundColor(0xffffffff);
                 }
                 RadioCell textCell = (RadioCell) view;
                 int checkedType = 0;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
index b4d5fa086..48357452a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
@@ -13,6 +13,7 @@
 import android.app.ProgressDialog;
 import android.content.Context;
 import android.content.DialogInterface;
+import android.support.v4.content.ContextCompat;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
@@ -124,7 +125,7 @@ public void onItemClick(int id) {
 
         fragmentView = new FrameLayout(context);
         FrameLayout frameLayout = (FrameLayout) fragmentView;
-        frameLayout.setBackgroundColor(0xfff0f0f0);
+        frameLayout.setBackgroundColor(ContextCompat.getColor(context, R.color.settings_background));
 
         ListView listView = new ListView(context);
         listView.setDivider(null);
@@ -338,7 +339,6 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             if (type == 0) {
                 if (view == null) {
                     view = new TextSettingsCell(mContext);
-                    view.setBackgroundColor(0xffffffff);
                 }
                 TextSettingsCell textCell = (TextSettingsCell) view;
                 if (i == blockedRow) {
@@ -387,21 +387,20 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 }
                 if (i == deleteAccountDetailRow) {
                     ((TextInfoPrivacyCell) view).setText(LocaleController.getString("DeleteAccountHelp", R.string.DeleteAccountHelp));
-                    view.setBackgroundResource(secretSectionRow == -1 ? R.drawable.greydivider_bottom : R.drawable.greydivider);
+                    //view.setBackgroundResource(secretSectionRow == -1 ? R.drawable.greydivider_bottom : R.drawable.greydivider);
                 } else if (i == groupsDetailRow) {
                     ((TextInfoPrivacyCell) view).setText(LocaleController.getString("GroupsAndChannelsHelp", R.string.GroupsAndChannelsHelp));
-                    view.setBackgroundResource(R.drawable.greydivider);
+                    //view.setBackgroundResource(R.drawable.greydivider);
                 } else if (i == sessionsDetailRow) {
                     ((TextInfoPrivacyCell) view).setText(LocaleController.getString("SessionsInfo", R.string.SessionsInfo));
-                    view.setBackgroundResource(R.drawable.greydivider);
+                    //view.setBackgroundResource(R.drawable.greydivider);
                 } else if (i == secretDetailRow) {
                     ((TextInfoPrivacyCell) view).setText("");
-                    view.setBackgroundResource(R.drawable.greydivider_bottom);
+                    //view.setBackgroundResource(R.drawable.greydivider_bottom);
                 }
             } else if (type == 2) {
                 if (view == null) {
                     view = new HeaderCell(mContext);
-                    view.setBackgroundColor(0xffffffff);
                 }
                 if (i == privacySectionRow) {
                     ((HeaderCell) view).setText(LocaleController.getString("PrivacyTitle", R.string.PrivacyTitle));
@@ -415,7 +414,6 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             } else if (type == 3) {
                 if (view == null) {
                     view = new TextCheckCell(mContext);
-                    view.setBackgroundColor(0xffffffff);
                 }
                 TextCheckCell textCell = (TextCheckCell) view;
                 if (i == secretWebpageRow) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
index 47b8e2d9d..23ca5834c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
@@ -29,6 +29,7 @@
 import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
+import android.support.v4.content.ContextCompat;
 import android.view.Gravity;
 import android.view.MotionEvent;
 import android.view.View;
@@ -559,7 +560,7 @@ public boolean hasOverlappingRendering() {
         };
         listView.setTag(6);
         listView.setPadding(0, AndroidUtilities.dp(88), 0, 0);
-        listView.setBackgroundColor(0xffffffff);
+        listView.setBackgroundColor(ContextCompat.getColor(context, R.color.settings_background));
         listView.setVerticalScrollBarEnabled(false);
         listView.setItemAnimator(null);
         listView.setLayoutAnimation(null);
@@ -2318,45 +2319,19 @@ public ListAdapter(Context context) {
                 case 1:
                     view = new DividerCell(mContext);
                     view.setPadding(AndroidUtilities.dp(72), 0, 0, 0);
+                    view.setElevation(AndroidUtilities.dp(2));
+                    view.setBackgroundColor(ContextCompat.getColor(mContext, R.color.card_background));
                     break;
                 case 2:
-                    view = new TextDetailCell(mContext) {
-                        @Override
-                        public boolean onTouchEvent(MotionEvent event) {
-                            if (Build.VERSION.SDK_INT >= 21 && getBackground() != null) {
-                                if (event.getAction() == MotionEvent.ACTION_DOWN || event.getAction() == MotionEvent.ACTION_MOVE) {
-                                    getBackground().setHotspot(event.getX(), event.getY());
-                                }
-                            }
-                            return super.onTouchEvent(event);
-                        }
-                    };
+                    view = new TextDetailCell(mContext);
+                    view.setElevation(AndroidUtilities.dp(2));
+                    view.setBackgroundColor(ContextCompat.getColor(mContext, R.color.card_background));
                     break;
                 case 3:
-                    view = new TextCell(mContext) {
-                        @Override
-                        public boolean onTouchEvent(MotionEvent event) {
-                            if (Build.VERSION.SDK_INT >= 21 && getBackground() != null) {
-                                if (event.getAction() == MotionEvent.ACTION_DOWN || event.getAction() == MotionEvent.ACTION_MOVE) {
-                                    getBackground().setHotspot(event.getX(), event.getY());
-                                }
-                            }
-                            return super.onTouchEvent(event);
-                        }
-                    };
+                    view = new TextCell(mContext);
                     break;
                 case 4:
-                    view = new UserCell(mContext, 61, 0, true) {
-                        @Override
-                        public boolean onTouchEvent(MotionEvent event) {
-                            if (Build.VERSION.SDK_INT >= 21 && getBackground() != null) {
-                                if (event.getAction() == MotionEvent.ACTION_DOWN || event.getAction() == MotionEvent.ACTION_MOVE) {
-                                    getBackground().setHotspot(event.getX(), event.getY());
-                                }
-                            }
-                            return super.onTouchEvent(event);
-                        }
-                    };
+                    view = new UserCell(mContext, 61, 0, true);
                     break;
                 case 5:
                     view = new ShadowSectionCell(mContext);
@@ -2398,6 +2373,7 @@ public void didPressUrl(String url) {
             return new Holder(view);
         }
 
+        @SuppressLint("NewApi")
         @Override
         public void onBindViewHolder(RecyclerView.ViewHolder holder, int i) {
             boolean checkBackground = true;
@@ -2405,8 +2381,12 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int i) {
                 case 0:
                     if (i == emptyRowChat || i == emptyRowChat2) {
                         ((EmptyCell) holder.itemView).setHeight(AndroidUtilities.dp(8));
+                        holder.itemView.setElevation(AndroidUtilities.dp(0));
+                        holder.itemView.setBackground(null);
                     } else {
                         ((EmptyCell) holder.itemView).setHeight(AndroidUtilities.dp(36));
+                        holder.itemView.setElevation(AndroidUtilities.dp(2));
+                        holder.itemView.setBackgroundColor(ContextCompat.getColor(holder.itemView.getContext(), R.color.card_background));
                     }
                     break;
                 case 2:
@@ -2441,7 +2421,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int i) {
                     break;
                 case 3:
                     TextCell textCell = (TextCell) holder.itemView;
-                    textCell.setTextColor(0xff212121);
+                    //textCell.setTextColor(0xff212121);
 
                     if (i == sharedMediaRow) {
                         String value;
@@ -2563,12 +2543,12 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int i) {
                             i == blockedUsersRow || i == channelInfoRow;
                 }
                 if (enabled) {
-                    if (holder.itemView.getBackground() == null) {
-                        holder.itemView.setBackgroundResource(R.drawable.list_selector);
+                    if (holder.itemView.getForeground() == null) {
+                        holder.itemView.setForeground(holder.itemView.getContext().getDrawable(R.drawable.list_selector));
                     }
                 } else {
-                    if (holder.itemView.getBackground() != null) {
-                        holder.itemView.setBackgroundDrawable(null);
+                    if (holder.itemView.getForeground() != null) {
+                        holder.itemView.setForeground(null);
                     }
                 }
             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java
index 283b8d675..1f84b711d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java
@@ -13,6 +13,7 @@
 import android.content.Context;
 import android.content.DialogInterface;
 import android.os.Build;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.MotionEvent;
@@ -102,12 +103,12 @@ public void onItemClick(int id) {
 
         fragmentView = new FrameLayout(context);
         FrameLayout frameLayout = (FrameLayout) fragmentView;
-        frameLayout.setBackgroundColor(0xfff0f0f0);
+        frameLayout.setBackgroundColor(ContextCompat.getColor(context, R.color.settings_background));
 
         emptyLayout = new LinearLayout(context);
         emptyLayout.setOrientation(LinearLayout.VERTICAL);
         emptyLayout.setGravity(Gravity.CENTER);
-        emptyLayout.setBackgroundResource(R.drawable.greydivider_bottom);
+        //emptyLayout.setBackgroundResource(R.drawable.greydivider_bottom);
         emptyLayout.setLayoutParams(new AbsListView.LayoutParams(AbsListView.LayoutParams.MATCH_PARENT, AndroidUtilities.displaySize.y - ActionBar.getCurrentActionBarHeight()));
 
         ImageView imageView = new ImageView(context);
@@ -119,7 +120,7 @@ public void onItemClick(int id) {
         imageView.setLayoutParams(layoutParams2);
 
         TextView textView = new TextView(context);
-        textView.setTextColor(0xff8a8a8a);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.disabled_text) /*0xff8a8a8a*/);
         textView.setGravity(Gravity.CENTER);
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 17);
         textView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
@@ -133,7 +134,7 @@ public void onItemClick(int id) {
         textView.setLayoutParams(layoutParams2);
 
         textView = new TextView(context);
-        textView.setTextColor(0xff8a8a8a);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.disabled_text) /*0xff8a8a8a*/);
         textView.setGravity(Gravity.CENTER);
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 17);
         textView.setPadding(AndroidUtilities.dp(20), 0, AndroidUtilities.dp(20), 0);
@@ -400,7 +401,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             if (type == 0) {
                 if (view == null) {
                     view = new TextSettingsCell(mContext);
-                    view.setBackgroundColor(0xffffffff);
+                    //view.setBackgroundColor(0xffffffff);
                 }
                 TextSettingsCell textCell = (TextSettingsCell) view;
                 if (i == terminateAllSessionsRow) {
@@ -413,15 +414,15 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 }
                 if (i == terminateAllSessionsDetailRow) {
                     ((TextInfoPrivacyCell) view).setText(LocaleController.getString("ClearOtherSessionsHelp", R.string.ClearOtherSessionsHelp));
-                    view.setBackgroundResource(R.drawable.greydivider);
+                    //view.setBackgroundResource(R.drawable.greydivider);
                 } else if (i == otherSessionsTerminateDetail) {
                     ((TextInfoPrivacyCell) view).setText(LocaleController.getString("TerminateSessionInfo", R.string.TerminateSessionInfo));
-                    view.setBackgroundResource(R.drawable.greydivider_bottom);
+                    //view.setBackgroundResource(R.drawable.greydivider_bottom);
                 }
             } else if (type == 2) {
                 if (view == null) {
                     view = new HeaderCell(mContext);
-                    view.setBackgroundColor(0xffffffff);
+                    //view.setBackgroundColor(0xffffffff);
                 }
                 if (i == currentSessionSectionRow) {
                     ((HeaderCell) view).setText(LocaleController.getString("CurrentSession", R.string.CurrentSession));
@@ -438,7 +439,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             } else if (type == 4) {
                 if (view == null) {
                     view = new SessionCell(mContext);
-                    view.setBackgroundColor(0xffffffff);
+                    //view.setBackgroundColor(0xffffffff);
                 }
                 if (i == currentSessionRow) {
                     ((SessionCell) view).setSession(currentSession, !sessions.isEmpty());
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index 9af6d97f0..2a769be3d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -30,11 +30,13 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
+import android.support.v4.content.ContextCompat;
 import android.text.Html;
 import android.text.Spannable;
 import android.text.TextUtils;
 import android.text.method.LinkMovementMethod;
 import android.util.Base64;
+import android.util.Log;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.MotionEvent;
@@ -78,6 +80,16 @@
 import org.telegram.messenger.MessageObject;
 import org.telegram.ui.ActionBar.BottomSheet;
 import org.telegram.ui.Cells.CheckBoxCell;
+import org.telegram.ui.Cells.DialogCell;
+import org.telegram.ui.Cells.DividerCell;
+import org.telegram.ui.Cells.HashtagSearchCell;
+import org.telegram.ui.Cells.RadioButtonCell;
+import org.telegram.ui.Cells.RadioCell;
+import org.telegram.ui.Cells.SessionCell;
+import org.telegram.ui.Cells.SharedDocumentCell;
+import org.telegram.ui.Cells.SharedLinkCell;
+import org.telegram.ui.Cells.StickerSetCell;
+import org.telegram.ui.Cells.TextBlockCell;
 import org.telegram.ui.Cells.TextInfoCell;
 import org.telegram.ui.Cells.EmptyCell;
 import org.telegram.ui.Cells.HeaderCell;
@@ -92,6 +104,8 @@
 import org.telegram.ui.Components.AvatarUpdater;
 import org.telegram.ui.Components.BackupImageView;
 import org.telegram.ui.ActionBar.BaseFragment;
+import org.telegram.ui.Components.DayNightActivity;
+import org.telegram.ui.Components.ForegroundFrameLayout;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.NumberPicker;
 import org.telegram.ui.ActionBar.Theme;
@@ -147,6 +161,7 @@
     // Rikkagram
     private int googleEmojiRow;
     private int fakeBoldRow;
+    private int nightModeRow;
 
     private int raiseToSpeakRow;
     private int sendByEnterRow;
@@ -253,6 +268,7 @@ public void run() {
 
         // Rikkagram
         //fakeBoldRow = rowCount++;
+        nightModeRow = rowCount++;
 
         mediaDownloadSection = rowCount++;
         mediaDownloadSection2 = rowCount++;
@@ -279,7 +295,7 @@ public void run() {
         sendByEnterRow = rowCount++;
         supportSectionRow = rowCount++;
         supportSectionRow2 = rowCount++;
-        askQuestionRow = rowCount++;
+        //askQuestionRow = rowCount++;
         telegramFaqRow = rowCount++;
         privacyPolicyRow = rowCount++;
         if (BuildVars.DEBUG_VERSION) {
@@ -381,6 +397,7 @@ protected boolean drawChild(@NonNull Canvas canvas, @NonNull View child, long dr
             }
         };
         FrameLayout frameLayout = (FrameLayout) fragmentView;
+        frameLayout.setBackgroundColor(ContextCompat.getColor(context, R.color.settings_background));
 
         listView = new RecyclerListView(context);
         listView.setVerticalScrollBarEnabled(false);
@@ -733,6 +750,36 @@ public void onClick(View v) {
                     if (view instanceof TextCheckCell) {
                         ((TextCheckCell) view).setChecked(!fakeBold);
                     }
+                } else if (position == nightModeRow) {
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                    int nightMode = preferences.getInt("nightMode", DayNightActivity.MODE_NIGHT_NO);
+                    nightMode = nightMode != DayNightActivity.MODE_NIGHT_YES ? DayNightActivity.MODE_NIGHT_YES : DayNightActivity.MODE_NIGHT_NO;
+                    SharedPreferences.Editor editor = preferences.edit();
+                    editor.putInt("nightMode", nightMode);
+                    editor.commit();
+                    DayNightActivity.setDefaultNightMode(nightMode);
+                    if (view instanceof TextCheckCell) {
+                        ((TextCheckCell) view).setChecked(nightMode == DayNightActivity.MODE_NIGHT_YES);
+                    }
+
+                    boolean night = nightMode == DayNightActivity.MODE_NIGHT_YES;
+                    DividerCell.setDividerColor(ApplicationLoader.applicationContext, night);
+                    RadioCell.setDividerColor(ApplicationLoader.applicationContext, night);
+                    TextDetailSettingsCell.setDividerColor(ApplicationLoader.applicationContext, night);
+                    TextCheckCell.setDividerColor(ApplicationLoader.applicationContext, night);
+                    TextSettingsCell.setDividerColor(ApplicationLoader.applicationContext, night);
+                    SessionCell.setDividerColor(ApplicationLoader.applicationContext, night);
+                    StickerSetCell.setDividerColor(ApplicationLoader.applicationContext, night);
+                    HashtagSearchCell.setDividerColor(ApplicationLoader.applicationContext, night);
+                    CheckBoxCell.setDividerColor(ApplicationLoader.applicationContext, night);
+                    SharedDocumentCell.resetDivider();
+                    SharedLinkCell.resetDivider();
+                    RadioButtonCell.resetDivider();
+                    TextBlockCell.resetDivider();
+
+                    getParentActivity().recreate();
+
+                    Log.d("tmessage", "night mode " + nightMode);
                 }
             }
         });
@@ -1121,6 +1168,14 @@ public void onResume() {
         }
         updateUserData();
         fixLayout();
+
+        actionBar.post(new Runnable() {
+            @Override
+            public void run() {
+                actionBar.setBackgroundColor(AvatarDrawable.getProfileBackColorForId(5));
+                actionBar.setItemsBackgroundColor(AvatarDrawable.getButtonColorForId(5));
+            }
+        });
     }
 
     @Override
@@ -1288,6 +1343,7 @@ public int getItemCount() {
             return rowCount;
         }
 
+        @SuppressLint("NewApi")
         @Override
         public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
             boolean checkBackground = true;
@@ -1297,6 +1353,9 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                         ((EmptyCell) holder.itemView).setHeight(AndroidUtilities.dp(88));
                     } else {
                         ((EmptyCell) holder.itemView).setHeight(AndroidUtilities.dp(16));
+
+                        holder.itemView.setElevation(AndroidUtilities.dp(2));
+                        holder.itemView.setBackgroundColor(ContextCompat.getColor(holder.itemView.getContext(), R.color.card_background));
                     }
                     checkBackground = false;
                     break;
@@ -1372,6 +1431,8 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                         textCell.setTextAndValueAndCheck(LocaleController.getString("UseGoogleEmoji", R.string.UseGoogleEmoji), LocaleController.getString("UseGoogleEmojiInfo", R.string.UseGoogleEmojiInfo), preferences.getBoolean("useGoogleEmoji", true), false, true);
                     } else if (position == fakeBoldRow) {
                         textCell.setTextAndValueAndCheck("Replace medium font as bold"/*LocaleController.getString("UseGoogleEmoji", R.string.UseGoogleEmoji)*/, "Use it if no medium font in system"/*LocaleController.getString("UseGoogleEmojiInfo", R.string.UseGoogleEmojiInfo)*/, preferences.getBoolean("fakeBold", false), false, true);
+                    } else if (position == nightModeRow) {
+                        textCell.setTextAndCheck(LocaleController.getString("NightMode", R.string.NightMode), preferences.getInt("nightMode", DayNightActivity.MODE_NIGHT_NO) != DayNightActivity.MODE_NIGHT_NO, false);
                     }
                     break;
                 }
@@ -1475,13 +1536,18 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                         position == mobileDownloadRow || position == clearLogsRow || position == roamingDownloadRow || position == languageRow || position == usernameRow ||
                         position == switchBackendButtonRow || position == telegramFaqRow || position == contactsSortRow || position == contactsReimportRow || position == saveToGalleryRow ||
                         position == stickersRow || position == cacheRow || position == raiseToSpeakRow || position == privacyPolicyRow || position == customTabsRow || position == directShareRow || position == versionRow ||
-                        position == emojiRow || position == googleEmojiRow || position == fakeBoldRow) { // Rikkagram
-                    if (holder.itemView.getBackground() == null) {
-                        holder.itemView.setBackgroundResource(R.drawable.list_selector);
+                        position == emojiRow || position == googleEmojiRow || position == fakeBoldRow || position == nightModeRow) { // Rikkagram
+                    if (holder.itemView instanceof ForegroundFrameLayout) {
+                        if (holder.itemView.getForeground() == null) {
+                            holder.itemView.setForeground(holder.itemView.getContext()
+                                    .getDrawable(R.drawable.list_selector));
+                        }
                     }
                 } else {
-                    if (holder.itemView.getBackground() != null) {
-                        holder.itemView.setBackgroundDrawable(null);
+                    if (holder.itemView instanceof ForegroundFrameLayout) {
+                        if (holder.itemView.getForeground() != null) {
+                            holder.itemView.setForeground(null);
+                        }
                     }
                 }
             }
@@ -1498,46 +1564,16 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                     view = new ShadowSectionCell(mContext);
                     break;
                 case 2:
-                    view = new TextSettingsCell(mContext) {
-                        @Override
-                        public boolean onTouchEvent(MotionEvent event) {
-                            if (Build.VERSION.SDK_INT >= 21 && getBackground() != null) {
-                                if (event.getAction() == MotionEvent.ACTION_DOWN || event.getAction() == MotionEvent.ACTION_MOVE) {
-                                    getBackground().setHotspot(event.getX(), event.getY());
-                                }
-                            }
-                            return super.onTouchEvent(event);
-                        }
-                    };
+                    view = new TextSettingsCell(mContext);
                     break;
                 case 3:
-                    view = new TextCheckCell(mContext) {
-                        @Override
-                        public boolean onTouchEvent(MotionEvent event) {
-                            if (Build.VERSION.SDK_INT >= 21 && getBackground() != null) {
-                                if (event.getAction() == MotionEvent.ACTION_DOWN || event.getAction() == MotionEvent.ACTION_MOVE) {
-                                    getBackground().setHotspot(event.getX(), event.getY());
-                                }
-                            }
-                            return super.onTouchEvent(event);
-                        }
-                    };
+                    view = new TextCheckCell(mContext);
                     break;
                 case 4:
                     view = new HeaderCell(mContext);
                     break;
                 case 5:
-                    view = new TextInfoCell(mContext) {
-                        @Override
-                        public boolean onTouchEvent(MotionEvent event) {
-                            if (Build.VERSION.SDK_INT >= 21 && getBackground() != null) {
-                                if (event.getAction() == MotionEvent.ACTION_DOWN || event.getAction() == MotionEvent.ACTION_MOVE) {
-                                    getBackground().setHotspot(event.getX(), event.getY());
-                                }
-                            }
-                            return super.onTouchEvent(event);
-                        }
-                    };
+                    view = new TextInfoCell(mContext);
                     try {
                         PackageInfo pInfo = ApplicationLoader.applicationContext.getPackageManager().getPackageInfo(ApplicationLoader.applicationContext.getPackageName(), 0);
                         int code = pInfo.versionCode / 10;
@@ -1562,17 +1598,7 @@ public boolean onTouchEvent(MotionEvent event) {
                     }
                     break;
                 case 6:
-                    view = new TextDetailSettingsCell(mContext) {
-                        @Override
-                        public boolean onTouchEvent(MotionEvent event) {
-                            if (Build.VERSION.SDK_INT >= 21 && getBackground() != null) {
-                                if (event.getAction() == MotionEvent.ACTION_DOWN || event.getAction() == MotionEvent.ACTION_MOVE) {
-                                    getBackground().setHotspot(event.getX(), event.getY());
-                                }
-                            }
-                            return super.onTouchEvent(event);
-                        }
-                    };
+                    view = new TextDetailSettingsCell(mContext);
                     break;
             }
             view.setLayoutParams(new RecyclerView.LayoutParams(RecyclerView.LayoutParams.MATCH_PARENT, RecyclerView.LayoutParams.WRAP_CONTENT));
@@ -1586,7 +1612,7 @@ public int getItemViewType(int position) {
             }
             if (position == settingsSectionRow || position == supportSectionRow || position == messagesSectionRow || position == mediaDownloadSection || position == contactsSectionRow) {
                 return 1;
-            } else if (position == enableAnimationsRow || position == sendByEnterRow || position == saveToGalleryRow || position == autoplayGifsRow || position == raiseToSpeakRow || position == customTabsRow || position == directShareRow || position == googleEmojiRow || position == fakeBoldRow) { // Rikkagram
+            } else if (position == enableAnimationsRow || position == sendByEnterRow || position == saveToGalleryRow || position == autoplayGifsRow || position == raiseToSpeakRow || position == customTabsRow || position == directShareRow || position == googleEmojiRow || position == fakeBoldRow || position == nightModeRow) { // Rikkagram
                 return 3;
             } else if (position == notificationRow || position == backgroundRow || position == askQuestionRow || position == sendLogsRow || position == privacyRow || position == clearLogsRow || position == switchBackendButtonRow || position == telegramFaqRow || position == contactsReimportRow || position == textSizeRow || position == languageRow || position == contactsSortRow || position == stickersRow || position == cacheRow || position == privacyPolicyRow || position == emojiRow) {
                 return 2;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/StickersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/StickersActivity.java
index b66821990..6b2335f59 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/StickersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/StickersActivity.java
@@ -14,6 +14,7 @@
 import android.content.Intent;
 import android.graphics.Canvas;
 import android.os.Build;
+import android.support.v4.content.ContextCompat;
 import android.text.SpannableStringBuilder;
 import android.text.Spanned;
 import android.view.MotionEvent;
@@ -167,7 +168,7 @@ public void onItemClick(int id) {
 
         fragmentView = new FrameLayout(context);
         FrameLayout frameLayout = (FrameLayout) fragmentView;
-        frameLayout.setBackgroundColor(0xfff0f0f0);
+        frameLayout.setBackgroundColor(ContextCompat.getColor(context, R.color.settings_background));
 
         listView = new RecyclerListView(context);
         listView.setFocusable(true);
@@ -386,7 +387,7 @@ public void onClick(View widget) {
                             ((TextSettingsCell) holder.itemView).setText(LocaleController.getString("ArchivedMasks", R.string.ArchivedMasks), false);
                         }
                     } else if (position == masksRow) {
-                        ((TextSettingsCell) holder.itemView).setText(LocaleController.getString("Masks", R.string.Masks), true);
+                        ((TextSettingsCell) holder.itemView).setText(LocaleController.getString("Masks", R.string.Masks), false);
                     }
                     break;
             }
@@ -453,25 +454,13 @@ public void onClick(DialogInterface dialog, int which) {
                     break;
                 case 1:
                     view = new TextInfoPrivacyCell(mContext);
-                    view.setBackgroundResource(R.drawable.greydivider_bottom);
                     break;
                 case 2:
-                    view = new TextSettingsCell(mContext) {
-                        @Override
-                        public boolean onTouchEvent(MotionEvent event) {
-                            if (Build.VERSION.SDK_INT >= 21 && getBackground() != null) {
-                                if (event.getAction() == MotionEvent.ACTION_DOWN || event.getAction() == MotionEvent.ACTION_MOVE) {
-                                    getBackground().setHotspot(event.getX(), event.getY());
-                                }
-                            }
-                            return super.onTouchEvent(event);
-                        }
-                    };
-                    view.setBackgroundResource(R.drawable.list_selector_white);
+                    view = new TextSettingsCell(mContext);
+                    view.setForeground(view.getContext().getDrawable(R.drawable.list_selector));
                     break;
                 case 3:
                     view = new ShadowSectionCell(mContext);
-                    view.setBackgroundResource(R.drawable.greydivider_bottom);
                     break;
             }
             view.setLayoutParams(new RecyclerView.LayoutParams(RecyclerView.LayoutParams.MATCH_PARENT, RecyclerView.LayoutParams.WRAP_CONTENT));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/TwoStepVerificationActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/TwoStepVerificationActivity.java
index 63e638ee6..545076f51 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/TwoStepVerificationActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/TwoStepVerificationActivity.java
@@ -15,6 +15,7 @@
 import android.content.DialogInterface;
 import android.graphics.Typeface;
 import android.os.Vibrator;
+import android.support.v4.content.ContextCompat;
 import android.text.InputType;
 import android.text.method.PasswordTransformationMethod;
 import android.util.TypedValue;
@@ -155,7 +156,7 @@ public void onItemClick(int id) {
 
         fragmentView = new FrameLayout(context);
         FrameLayout frameLayout = (FrameLayout) fragmentView;
-        frameLayout.setBackgroundColor(0xfff0f0f0);
+        frameLayout.setBackgroundColor(ContextCompat.getColor(context, R.color.settings_background));
 
         ActionBarMenu menu = actionBar.createMenu();
         doneItem = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56));
@@ -177,7 +178,7 @@ public void onItemClick(int id) {
         linearLayout.setLayoutParams(layoutParams2);
 
         titleTextView = new TextView(context);
-        titleTextView.setTextColor(0xff757575);
+        //titleTextView.setTextColor(0xff757575);
         titleTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
         titleTextView.setGravity(Gravity.CENTER_HORIZONTAL);
         linearLayout.addView(titleTextView);
@@ -190,7 +191,7 @@ public void onItemClick(int id) {
 
         passwordEditText = new EditText(context);
         passwordEditText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 20);
-        passwordEditText.setTextColor(0xff000000);
+        //passwordEditText.setTextColor(0xff000000);
         passwordEditText.setMaxLines(1);
         passwordEditText.setLines(1);
         passwordEditText.setGravity(Gravity.CENTER_HORIZONTAL);
@@ -236,7 +237,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
         });
 
         bottomTextView = new TextView(context);
-        bottomTextView.setTextColor(0xff757575);
+        //bottomTextView.setTextColor(0xff757575);
         bottomTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
         bottomTextView.setGravity((LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP);
         bottomTextView.setText(LocaleController.getString("YourEmailInfo", R.string.YourEmailInfo));
@@ -1009,10 +1010,10 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             if (viewType == 0) {
                 if (view == null) {
                     view = new TextSettingsCell(mContext);
-                    view.setBackgroundColor(0xffffffff);
+                    //view.setBackgroundColor(0xffffffff);
                 }
                 TextSettingsCell textCell = (TextSettingsCell) view;
-                textCell.setTextColor(0xff212121);
+                //textCell.setTextColor(0xff212121);
                 if (i == changePasswordRow) {
                     textCell.setText(LocaleController.getString("ChangePassword", R.string.ChangePassword), true);
                 } else if (i == setPasswordRow) {
@@ -1033,19 +1034,19 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 }
                 if (i == setPasswordDetailRow) {
                     ((TextInfoPrivacyCell) view).setText(LocaleController.getString("SetAdditionalPasswordInfo", R.string.SetAdditionalPasswordInfo));
-                    view.setBackgroundResource(R.drawable.greydivider_bottom);
+                    //view.setBackgroundResource(R.drawable.greydivider_bottom);
                 } else if (i == shadowRow) {
                     ((TextInfoPrivacyCell) view).setText("");
-                    view.setBackgroundResource(R.drawable.greydivider_bottom);
+                    //view.setBackgroundResource(R.drawable.greydivider_bottom);
                 } else if (i == passwordSetupDetailRow) {
                     ((TextInfoPrivacyCell) view).setText(LocaleController.formatString("EmailPasswordConfirmText", R.string.EmailPasswordConfirmText, currentPassword.email_unconfirmed_pattern));
-                    view.setBackgroundResource(R.drawable.greydivider_top);
+                    //view.setBackgroundResource(R.drawable.greydivider_top);
                 } else if (i == passwordEnabledDetailRow) {
                     ((TextInfoPrivacyCell) view).setText(LocaleController.getString("EnabledPasswordText", R.string.EnabledPasswordText));
-                    view.setBackgroundResource(R.drawable.greydivider_bottom);
+                    //view.setBackgroundResource(R.drawable.greydivider_bottom);
                 } else if (i == passwordEmailVerifyDetailRow) {
                     ((TextInfoPrivacyCell) view).setText(LocaleController.formatString("PendingEmailText", R.string.PendingEmailText, currentPassword.email_unconfirmed_pattern));
-                    view.setBackgroundResource(R.drawable.greydivider_bottom);
+                    //view.setBackgroundResource(R.drawable.greydivider_bottom);
                 }
             }
             return view;
diff --git a/TMessagesProj/src/main/res/color/switch_thumb_material_dark.xml b/TMessagesProj/src/main/res/color/switch_thumb_material_dark.xml
new file mode 100644
index 000000000..6153382c7
--- /dev/null
+++ b/TMessagesProj/src/main/res/color/switch_thumb_material_dark.xml
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2014 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_enabled="false" android:color="@color/switch_thumb_disabled_material_dark"/>
+    <item android:color="@color/switch_thumb_normal_material_dark"/>
+</selector>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/color/switch_thumb_material_light.xml b/TMessagesProj/src/main/res/color/switch_thumb_material_light.xml
new file mode 100644
index 000000000..94d711482
--- /dev/null
+++ b/TMessagesProj/src/main/res/color/switch_thumb_material_light.xml
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2014 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_enabled="false" android:color="@color/switch_thumb_disabled_material_light"/>
+    <item android:color="@color/switch_thumb_normal_material_light"/>
+</selector>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/color/tint_switch_thumb.xml b/TMessagesProj/src/main/res/color/tint_switch_thumb.xml
new file mode 100644
index 000000000..071b55e87
--- /dev/null
+++ b/TMessagesProj/src/main/res/color/tint_switch_thumb.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2015 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item android:state_enabled="false" android:color="?android:attr/colorControlNormal" android:alpha="?android:attr/disabledAlpha"/>
+    <item android:state_checked="true" android:color="?android:attr/colorControlActivated"/>
+    <item android:color="?attr/colorSwitchThumbNormal"/>
+</selector>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/color/tint_switch_track.xml b/TMessagesProj/src/main/res/color/tint_switch_track.xml
new file mode 100644
index 000000000..8c600c068
--- /dev/null
+++ b/TMessagesProj/src/main/res/color/tint_switch_track.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2015 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_enabled="false" android:color="?android:attr/colorForeground" android:alpha="0.1"/>
+    <item android:state_checked="true" android:color="?android:attr/colorControlActivated" android:alpha="0.3"/>
+    <item android:color="?android:attr/colorForeground" android:alpha="0.3"/>
+</selector>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/drawable-night-hdpi/background_hd.jpg b/TMessagesProj/src/main/res/drawable-night-hdpi/background_hd.jpg
new file mode 100644
index 000000000..2bd262059
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-night-hdpi/background_hd.jpg differ
diff --git a/TMessagesProj/src/main/res/drawable-night-hdpi/compose_panel.9.png b/TMessagesProj/src/main/res/drawable-night-hdpi/compose_panel.9.png
new file mode 100644
index 000000000..e456f05f1
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-night-hdpi/compose_panel.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-night-mdpi/background_hd.jpg b/TMessagesProj/src/main/res/drawable-night-mdpi/background_hd.jpg
new file mode 100644
index 000000000..3ed935c0d
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-night-mdpi/background_hd.jpg differ
diff --git a/TMessagesProj/src/main/res/drawable-night-mdpi/compose_panel.9.png b/TMessagesProj/src/main/res/drawable-night-mdpi/compose_panel.9.png
new file mode 100644
index 000000000..da43a56f0
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-night-mdpi/compose_panel.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-night-xhdpi/background_hd.jpg b/TMessagesProj/src/main/res/drawable-night-xhdpi/background_hd.jpg
new file mode 100644
index 000000000..a6de636e6
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-night-xhdpi/background_hd.jpg differ
diff --git a/TMessagesProj/src/main/res/drawable-night-xhdpi/compose_panel.9.png b/TMessagesProj/src/main/res/drawable-night-xhdpi/compose_panel.9.png
new file mode 100644
index 000000000..f89d24f79
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-night-xhdpi/compose_panel.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-night-xxhdpi/background_hd.jpg b/TMessagesProj/src/main/res/drawable-night-xxhdpi/background_hd.jpg
new file mode 100644
index 000000000..67a1aa1a2
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-night-xxhdpi/background_hd.jpg differ
diff --git a/TMessagesProj/src/main/res/drawable-night-xxhdpi/compose_panel.9.png b/TMessagesProj/src/main/res/drawable-night-xxhdpi/compose_panel.9.png
new file mode 100644
index 000000000..d83940ea5
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-night-xxhdpi/compose_panel.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-night/catstile.jpg b/TMessagesProj/src/main/res/drawable-night/catstile.jpg
new file mode 100644
index 000000000..fc57a8000
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-night/catstile.jpg differ
diff --git a/TMessagesProj/src/main/res/drawable-v21/list_selector.xml b/TMessagesProj/src/main/res/drawable-v21/list_selector.xml
index 0ba2177bc..ca6139223 100644
--- a/TMessagesProj/src/main/res/drawable-v21/list_selector.xml
+++ b/TMessagesProj/src/main/res/drawable-v21/list_selector.xml
@@ -1,5 +1,19 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2014 The Android Open Source Project
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+          http://www.apache.org/licenses/LICENSE-2.0
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
 <ripple xmlns:android="http://schemas.android.com/apk/res/android"
-    android:color="#2f000000">
-    <item android:id="@android:id/mask" android:drawable="@android:color/white"/>
-</ripple>
+        android:color="?android:attr/colorControlHighlight">
+    <item android:id="@android:id/mask">
+        <color android:color="@android:color/white" />
+    </item>
+</ripple>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/drawable-v21/list_selector_white.xml b/TMessagesProj/src/main/res/drawable-v21/list_selector_white.xml
index a7802617f..dd15f279f 100644
--- a/TMessagesProj/src/main/res/drawable-v21/list_selector_white.xml
+++ b/TMessagesProj/src/main/res/drawable-v21/list_selector_white.xml
@@ -9,6 +9,6 @@
 
 <ripple xmlns:android="http://schemas.android.com/apk/res/android"
     android:color="#2f000000">
-    <item android:id="@android:id/mask" android:drawable="@android:color/white"/>
-    <item android:id="@android:id/background" android:drawable="@android:color/white"/>
+    <item android:id="@android:id/mask" android:drawable="@color/card_background"/>
+    <item android:id="@android:id/background" android:drawable="@color/card_background"/>
 </ripple>
diff --git a/TMessagesProj/src/main/res/layout/group_create_bubble.xml b/TMessagesProj/src/main/res/layout/group_create_bubble.xml
index 2f932acff..67b87dc84 100644
--- a/TMessagesProj/src/main/res/layout/group_create_bubble.xml
+++ b/TMessagesProj/src/main/res/layout/group_create_bubble.xml
@@ -11,7 +11,7 @@
         android:layout_height="26dp"
         android:textSize="16dp"
         android:gravity="center"
-        android:textColor="#ff000000"
+        android:textColor="@color/primary_text"
         android:id="@+id/bubble_text_view"/>
 
 </FrameLayout>
diff --git a/TMessagesProj/src/main/res/values-ar/strings.xml b/TMessagesProj/src/main/res/values-ar/strings.xml
index d492014eb..2b7df5cca 100644
--- a/TMessagesProj/src/main/res/values-ar/strings.xml
+++ b/TMessagesProj/src/main/res/values-ar/strings.xml
@@ -3,8 +3,8 @@
 <!--Translation by Khalid Alaraifi-->
 
 <resources>
-    <string name="AppName">تيليجرام</string>
-    <string name="AppNameBeta">نسخة تيليجرام التجريبية</string>
+    <string name="AppName">Rikkagram</string>
+    <string name="AppNameBeta">Rikkagram</string>
     <string name="LanguageName">العربية</string>
     <string name="LanguageNameInEnglish">Arabic</string>
     <string name="LanguageCode">ar</string>
@@ -1298,4 +1298,5 @@
     <!--Rikkagram-->
     <string name="UseGoogleEmoji">Google emoji</string>
     <string name="UseGoogleEmojiInfo">Use Noto Color Emoji instead of iOS emoji</string>
+    <string name="NightMode">Dark Theme (developing)</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-de/strings.xml b/TMessagesProj/src/main/res/values-de/strings.xml
index ee76fdcd5..e6ecdb762 100644
--- a/TMessagesProj/src/main/res/values-de/strings.xml
+++ b/TMessagesProj/src/main/res/values-de/strings.xml
@@ -3,8 +3,8 @@
 <!--Translation by iLLogical2007, DanielGroeger and everyone from https://github.com/DrKLO/Telegram/pull/129 whom I didn't notice -->
 
 <resources>
-    <string name="AppName">Telegram</string>
-    <string name="AppNameBeta">Telegram Beta</string>
+    <string name="AppName">Rikkagram</string>
+    <string name="AppNameBeta">Rikkagram Beta</string>
     <string name="LanguageName">Deutsch</string>
     <string name="LanguageNameInEnglish">German</string>
     <string name="LanguageCode">de</string>
@@ -1298,4 +1298,5 @@
     <!--Rikkagram-->
     <string name="UseGoogleEmoji">Google emoji</string>
     <string name="UseGoogleEmojiInfo">Use Noto Color Emoji instead of iOS emoji</string>
+    <string name="NightMode">Dark Theme (developing)</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-es/strings.xml b/TMessagesProj/src/main/res/values-es/strings.xml
index eb49d8c9b..89961935f 100644
--- a/TMessagesProj/src/main/res/values-es/strings.xml
+++ b/TMessagesProj/src/main/res/values-es/strings.xml
@@ -3,8 +3,8 @@
 <!--Translation by Borja Campina, Edited by Victor Espinoza and Francisco Vila-->
 
 <resources>
-    <string name="AppName">Telegram</string>
-    <string name="AppNameBeta">Telegram Beta</string>
+    <string name="AppName">Rikkagram</string>
+    <string name="AppNameBeta">Rikkagram Beta</string>
     <string name="LanguageName">Español</string>
     <string name="LanguageNameInEnglish">Spanish</string>
     <string name="LanguageCode">es</string>
@@ -1298,4 +1298,5 @@
     <!--Rikkagram-->
     <string name="UseGoogleEmoji">Google emoji</string>
     <string name="UseGoogleEmojiInfo">Use Noto Color Emoji instead of iOS emoji</string>
+    <string name="NightMode">Dark Theme (developing)</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index 543b4a419..4dc630340 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -3,8 +3,8 @@
 <!--https://www.transifex.com/projects/p/telegram/language/it/members/-->
 
 <resources>
-    <string name="AppName">Telegram</string>
-    <string name="AppNameBeta">Telegram Beta</string>
+    <string name="AppName">Rikkagram</string>
+    <string name="AppNameBeta">Rikkagram Beta</string>
     <string name="LanguageName">Italiano</string>
     <string name="LanguageNameInEnglish">Italian</string>
     <string name="LanguageCode">it</string>
@@ -1297,4 +1297,6 @@
 
     <!--Rikkagram-->
     <string name="UseGoogleEmoji">Google emoji</string>
-    <string name="UseGoogleEmojiInfo">Use Noto Color Emoji instead of iOS emoji</string></resources>
+    <string name="UseGoogleEmojiInfo">Use Noto Color Emoji instead of iOS emoji</string>
+    <string name="NightMode">Dark Theme (developing)</string>
+</resources>
diff --git a/TMessagesProj/src/main/res/values-ko/strings.xml b/TMessagesProj/src/main/res/values-ko/strings.xml
index 26c6a1666..867532592 100644
--- a/TMessagesProj/src/main/res/values-ko/strings.xml
+++ b/TMessagesProj/src/main/res/values-ko/strings.xml
@@ -1298,4 +1298,5 @@
     <!--Rikkagram-->
     <string name="UseGoogleEmoji">Google emoji</string>
     <string name="UseGoogleEmojiInfo">Use Noto Color Emoji instead of iOS emoji</string>
+    <string name="NightMode">Dark Theme (developing)</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-night-v21/styles.xml b/TMessagesProj/src/main/res/values-night-v21/styles.xml
new file mode 100644
index 000000000..4d735705c
--- /dev/null
+++ b/TMessagesProj/src/main/res/values-night-v21/styles.xml
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <style name="Theme.DayNight" parent="@style/Theme"/>
+    <style name="Theme.DayNight.Dialog.Alert" parent="@android:style/Theme.Material.Dialog.Alert"/>
+
+    <!--EDIT TEXT-->
+
+    <style name="Theme.TMessages.EditText" parent="android:Widget.Material.EditText">
+        <item name="android:background">@drawable/edit_text</item>
+    </style>
+
+    <style name="Theme.TMessages.TextView.Drawer" parent="@style/Theme.TMessages.TextView"/>
+
+    <style name="Theme.TMessages.Dialog.Alert.Chat" parent="@style/Theme.TMessages.Dialog.Alert">
+        <item name="android:colorBackground">@color/chat_list_background</item>
+    </style>
+</resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-night/colors.xml b/TMessagesProj/src/main/res/values-night/colors.xml
new file mode 100644
index 000000000..e5b7cf4cc
--- /dev/null
+++ b/TMessagesProj/src/main/res/values-night/colors.xml
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="colorPrimary">#1f3145</color>
+    <color name="colorPrimaryDark">#1c2c3e</color>
+    <color name="colorAccent">#4991cc</color>
+
+    <color name="divider">#4a4a4a</color>
+    <color name="chat_list_divider">#1d2d3f</color>
+
+    <color name="background">@color/material_grey_900</color>
+    <color name="list_background">@color/material_grey_850</color>
+    <color name="card_background">@color/material_grey_850</color>
+    <color name="chat_list_background">#172433</color>
+
+    <color name="settings_background">@color/material_grey_900</color>
+
+    <color name="chat_drawable_tint">#283a4f</color>
+
+    <color name="black_text">#FFFFFFFF</color>
+    <color name="primary_text">#FFFFFFFF</color>
+    <color name="secondary_text">#B3FFFFFF</color>
+    <color name="disabled_text">#7FFFFFFF</color>
+
+    <color name="primary_text_inverse">#DE000000</color>
+    <color name="secondary_text_inverse">#82000000</color>
+    <color name="disabled_text_inverse">#80000000</color>
+
+    <color name="profile_color">#ff253b52</color>
+
+    <color name="sticker_select_background">#ff303132</color>
+    <color name="sticker_indicator_background">#ff353637</color>
+    <color name="replay_panel_divider">#333333</color>
+    <color name="replay_panel_text">#ffdddddd</color>
+
+    <color name="search_type_background">#1d2d3e</color>
+
+    <color name="attach_sheet_text">#B3FFFFFF</color>
+
+    <color name="shared_photo_placeholder">@color/material_grey_800</color>
+</resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-nl/strings.xml b/TMessagesProj/src/main/res/values-nl/strings.xml
index ce062cbe8..4af8bb39a 100644
--- a/TMessagesProj/src/main/res/values-nl/strings.xml
+++ b/TMessagesProj/src/main/res/values-nl/strings.xml
@@ -3,8 +3,8 @@
 <!--https://www.transifex.com/projects/p/telegram/language/nl/members/-->
 
 <resources>
-    <string name="AppName">Telegram</string>
-    <string name="AppNameBeta">Telegram-bèta</string>
+    <string name="AppName">Rikkagram</string>
+    <string name="AppNameBeta">Rikkagram-bèta</string>
     <string name="LanguageName">Nederlands</string>
     <string name="LanguageNameInEnglish">Dutch</string>
     <string name="LanguageCode">nl</string>
@@ -1298,4 +1298,5 @@
     <!--Rikkagram-->
     <string name="UseGoogleEmoji">Google emoji</string>
     <string name="UseGoogleEmojiInfo">Use Noto Color Emoji instead of iOS emoji</string>
+    <string name="NightMode">Dark Theme (developing)</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
index e3f800088..7f42f25ff 100644
--- a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
@@ -3,8 +3,8 @@
 <!--https://www.transifex.com/projects/p/telegram/language/pt_BR/members/-->
 
 <resources>
-    <string name="AppName">Telegram</string>
-    <string name="AppNameBeta">Telegram Beta</string>
+    <string name="AppName">Rikkagram</string>
+    <string name="AppNameBeta">Rikkagram Beta</string>
     <string name="LanguageName">Português (Brasil)</string>
     <string name="LanguageNameInEnglish">Português (Brasil)</string>
     <string name="LanguageCode">pt_BR</string>
@@ -1298,4 +1298,5 @@
     <!--Rikkagram-->
     <string name="UseGoogleEmoji">Google emoji</string>
     <string name="UseGoogleEmojiInfo">Use Noto Color Emoji instead of iOS emoji</string>
+    <string name="NightMode">Dark Theme (developing)</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-pt-rPT/strings.xml b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
index e9ce52489..02d589350 100644
--- a/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
@@ -3,8 +3,8 @@
 <!--https://www.transifex.com/projects/p/telegram/language/pt_PT/members/-->
 
 <resources>
-    <string name="AppName">Telegram</string>
-    <string name="AppNameBeta">Telegram Beta</string>
+    <string name="AppName">Rikkagram</string>
+    <string name="AppNameBeta">Rikkagram Beta</string>
     <string name="LanguageName">Português (Brasil)</string>
     <string name="LanguageNameInEnglish">Português (Brasil)</string>
     <string name="LanguageCode">pt_BR</string>
@@ -1298,4 +1298,5 @@
     <!--Rikkagram-->
     <string name="UseGoogleEmoji">Google emoji</string>
     <string name="UseGoogleEmojiInfo">Use Noto Color Emoji instead of iOS emoji</string>
+    <string name="NightMode">Dark Theme (developing)</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-v21/styles.xml b/TMessagesProj/src/main/res/values-v21/styles.xml
index 0e719cf42..2451525b6 100644
--- a/TMessagesProj/src/main/res/values-v21/styles.xml
+++ b/TMessagesProj/src/main/res/values-v21/styles.xml
@@ -10,30 +10,41 @@
     xmlns:android="http://schemas.android.com/apk/res/android">
 
     <!--THEMES-->
+    <style name="Theme" parent="@android:style/Theme.Material">
+        <item name="colorSwitchThumbNormal">@color/switch_thumb_material_dark</item>
+        <item name="android:actionMenuTextColor">@android:color/white</item>
+    </style>
+
+    <style name="Theme.Light" parent="@android:style/Theme.Material.Light">
+        <item name="colorSwitchThumbNormal">@color/switch_thumb_material_light</item>
+    </style>
+
+    <style name="Theme.DayNight" parent="@style/Theme.Light"/>
+    <style name="Theme.DayNight.Dialog.Alert" parent="@android:style/Theme.Material.Light.Dialog.Alert"/>
 
-    <style name="Theme.TMessages.Start" parent="@android:style/Theme.Material">
+    <style name="Theme.TMessages.Start" parent="@style/Theme.DayNight">
         <item name="android:actionBarStyle">@style/ActionBar.Transparent.TMessages.Start</item>
-        <item name="android:colorBackground">@android:color/white</item>
-        <item name="android:windowBackground">@android:color/white</item>
+        <!--<item name="android:colorBackground">@android:color/white</item>
+        <item name="android:windowBackground">@android:color/white</item>-->
         <item name="android:windowContentOverlay">@null</item>
-        <item name="android:colorPrimaryDark">#426482</item>
-        <item name="android:colorPrimary">#527da3</item>
+        <item name="android:colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="android:colorPrimary">@color/colorPrimary</item>
     </style>
 
-    <style name="Theme.TMessages" parent="@android:style/Theme.Material.Light">
+    <style name="Theme.TMessages" parent="@style/Theme.DayNight">
         <item name="android:windowActionBar">false</item>
         <item name="android:windowNoTitle">true</item>
         <item name="android:windowActionBarOverlay">false</item>
         <item name="android:windowContentOverlay">@null</item>
-        <item name="android:colorBackground">@android:color/white</item>
-        <item name="android:windowBackground">@android:color/white</item>
+        <!--<item name="android:colorBackground">@android:color/white</item>
+        <item name="android:windowBackground">@android:color/white</item>-->
         <item name="android:itemTextAppearance">@style/ActionBar.Transparent.TMessages.Item</item>
         <item name="android:listViewStyle">@style/Theme.TMessages.ListView</item>
         <item name="android:listChoiceBackgroundIndicator">@drawable/list_selector</item>
         <item name="android:editTextStyle">@style/Theme.TMessages.EditText</item>
         <item name="android:actionBarItemBackground">@drawable/bar_selector_style</item>
         <item name="android:colorPrimaryDark">#33000000</item>
-        <item name="android:colorPrimary">#527da3</item>
+        <item name="android:colorPrimary">@color/colorPrimary</item>
         <item name="android:alertDialogTheme">@style/Theme.TMessages.Dialog.Alert</item>
         <item name="android:colorControlActivated">#4991cc</item>
     </style>
@@ -47,10 +58,12 @@
         <item name="android:colorPrimaryDark">#99000000</item>
     </style>
 
-    <style name="Theme.TMessages.Dialog.Alert" parent="android:style/Theme.Material.Light.Dialog.Alert">
+    <style name="Theme.TMessages.Dialog.Alert" parent="@style/Theme.DayNight.Dialog.Alert">
         <item name="android:colorAccent">#4991cc</item>
     </style>
 
+    <style name="Theme.TMessages.Dialog.Alert.Chat" parent="@style/Theme.TMessages.Dialog.Alert"/>
+
     <style name="Theme.TMessages.Transparent" parent="Theme.TMessages">
         <item name="android:windowIsTranslucent">true</item>
         <item name="android:windowBackground">@android:color/transparent</item>
@@ -68,6 +81,7 @@
 
     <style name="ActionBar.Transparent.TMessages.Start" parent="android:style/Widget.Material.Light.ActionBar">
         <item name="android:background">#ff527da3</item>
+        <item name="android:textColor">#ffffffff</item>
         <item name="android:logo">@drawable/transparent</item>
         <item name="android:title">""</item>
     </style>
@@ -122,4 +136,10 @@
         <item name="android:backgroundDimEnabled">false</item>
     </style>
 
+    <style name="Theme.TMessages.TextView" parent="android:Widget.TextView"/>
+
+    <style name="Theme.TMessages.TextView.Drawer" parent="@style/Theme.TMessages.TextView">
+        <item name="android:textColor">#ff444444</item>
+    </style>
+
 </resources>
diff --git a/TMessagesProj/src/main/res/values-zh-rCN/strings.xml b/TMessagesProj/src/main/res/values-zh-rCN/strings.xml
index a3f9178b3..629733cf2 100644
--- a/TMessagesProj/src/main/res/values-zh-rCN/strings.xml
+++ b/TMessagesProj/src/main/res/values-zh-rCN/strings.xml
@@ -1,7 +1,7 @@
 <?xml version='1.0' encoding='UTF-8'?>
 <resources>
-    <string name="AppName">Telegram</string>
-    <string name="AppNameBeta">Telegram Beta</string>
+    <string name="AppName">Rikkagram</string>
+    <string name="AppNameBeta">Rikkagram Beta</string>
     <string name="LanguageName">简体中文</string>
     <string name="LanguageNameInEnglish">Simplified Chinese</string>
     <string name="LanguageCode">zh_CN</string>
@@ -679,7 +679,7 @@
     <string name="CacheSettings">缓存设置</string>
     <string name="LocalDatabase">本地数据库</string>
     <string name="LocalDatabaseClear">清空缓存的消息记录？</string>
-    <string name="LocalDatabaseInfo">清空本地数据库将删除缓存在本地的聊天记录并压缩数据库以节省存储空间。Telegram需要一些数据来维持正常工作，所以数据库大小不会完全归零。\n\n此操作需要一些时间来完成。</string>
+    <string name="LocalDatabaseInfo">清空本地数据库将删除缓存在本地的聊天记录并压缩数据库以节省存储空间。Telegram 需要一些数据来维持正常工作，所以数据库大小不会完全归零。\n\n此操作需要一些时间来完成。</string>
     <string name="ClearMediaCache">清除媒体缓存</string>
     <string name="CacheClear">清除</string>
     <string name="CalculatingSize">正在计算...</string>
@@ -1301,4 +1301,5 @@
     <!--Rikkagram-->
     <string name="UseGoogleEmoji">Google emoji</string>
     <string name="UseGoogleEmojiInfo">使用 Noto Color Emoji 而不是 iOS emoji</string>
+    <string name="NightMode">暗色主题（开发中）</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values/attrs.xml b/TMessagesProj/src/main/res/values/attrs.xml
new file mode 100644
index 000000000..0e02490b7
--- /dev/null
+++ b/TMessagesProj/src/main/res/values/attrs.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <declare-styleable name="Theme">
+        <!-- The color applied to framework switch thumbs in their normal state. -->
+        <attr name="colorSwitchThumbNormal" format="color" />
+    </declare-styleable>
+</resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values/colors.xml b/TMessagesProj/src/main/res/values/colors.xml
index b4eac3ecb..84c9a5d3d 100755
--- a/TMessagesProj/src/main/res/values/colors.xml
+++ b/TMessagesProj/src/main/res/values/colors.xml
@@ -1,4 +1,53 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <color name="divider">#dcdcdc</color>
+    <color name="colorPrimary">#527da3</color>
+    <color name="colorPrimaryDark">#426482</color>
+    <color name="colorAccent">#4991cc</color>
+
+    <color name="divider">#1a000000</color>
+    <color name="chat_list_divider">#1a000000</color>
+
+    <color name="chat_list_divider_light">#1a000000</color>
+    <color name="chat_list_divider_dark">#1d2d3f</color>
+    <color name="divider_light">#1a000000</color>
+    <color name="divider_dark">#4a4a4a</color>
+
+    <color name="chat_drawable_tint">@color/material_white_1000</color>
+
+    <color name="background">@color/material_white_1000</color>
+    <color name="list_background">@color/material_grey_50</color>
+    <color name="card_background">@color/material_grey_50</color>
+    <color name="chat_list_background">@color/material_white_1000</color>
+
+    <color name="settings_background">@color/material_grey_200</color>
+
+    <color name="black_text">#FF000000</color>
+    <color name="primary_text">#DE000000</color>
+    <color name="secondary_text">#82000000</color>
+    <color name="disabled_text">#80000000</color>
+
+    <color name="primary_text_inverse">#FFFFFFFF</color>
+    <color name="secondary_text_inverse">#B3FFFFFF</color>
+    <color name="disabled_text_inverse">#7FFFFFFF</color>
+
+    <color name="switch_thumb_disabled_material_dark">#ff616161</color>
+    <color name="switch_thumb_disabled_material_light">#ffbdbdbd</color>
+    <color name="switch_thumb_normal_material_dark">#ffbdbdbd</color>
+    <color name="switch_thumb_normal_material_light">#fff1f1f1</color>
+
+    <color name="message_forward_name">#ff55ab4f</color>
+
+    <color name="profile_color">#ff598fba</color>
+
+    <color name="sticker_select_background">#fff5f6f7</color>
+    <color name="sticker_indicator_background">#ffe2e5e7</color>
+    <color name="replay_panel_divider">#ffe8e8e8</color>
+    <color name="replay_panel_text">#ff222222</color>
+
+    <color name="search_type_background">#fff2f2f2</color>
+
+    <color name="attach_sheet_text">#ff757575</color>
+
+    <color name="shared_photo_placeholder">#fff5f5f5</color>
+
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values/colors_material.xml b/TMessagesProj/src/main/res/values/colors_material.xml
new file mode 100644
index 000000000..8bdf395a1
--- /dev/null
+++ b/TMessagesProj/src/main/res/values/colors_material.xml
@@ -0,0 +1,302 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <!-- google's material design colours from 
+    http://www.google.com/design/spec/style/color.html#color-ui-color-palette -->
+
+    <!--reds-->
+    <color name="material_red_50">#FFEBEE</color>
+    <color name="material_red_100">#FFCDD2</color>
+    <color name="material_red_200">#EF9A9A</color>
+    <color name="material_red_300">#E57373</color>
+    <color name="material_red_400">#EF5350</color>
+    <color name="material_red_500">#F44336</color>
+    <color name="material_red_600">#E53935</color>
+    <color name="material_red_700">#D32F2F</color>
+    <color name="material_red_800">#C62828</color>
+    <color name="material_red_900">#B71C1C</color>
+    <color name="material_red_A100">#FF8A80</color>
+    <color name="material_red_A200">#FF5252</color>
+    <color name="material_red_A400">#FF1744</color>
+    <color name="material_red_A700">#D50000</color>
+
+    <!-- pinks -->
+    <color name="material_pink_50">#FCE4EC</color>
+    <color name="material_pink_100">#F8BBD0</color>
+    <color name="material_pink_200">#F48FB1</color>
+    <color name="material_pink_300">#F06292</color>
+    <color name="material_pink_400">#EC407A</color>
+    <color name="material_pink_500">#E91E63</color>
+    <color name="material_pink_600">#D81B60</color>
+    <color name="material_pink_700">#C2185B</color>
+    <color name="material_pink_800">#AD1457</color>
+    <color name="material_pink_900">#880E4F</color>
+    <color name="material_pink_A100">#FF80AB</color>
+    <color name="material_pink_A200">#FF4081</color>
+    <color name="material_pink_A400">#F50057</color>
+    <color name="material_pink_A700">#C51162</color>
+
+    <!-- purples -->
+    <color name="material_purple_50">#F3E5F5</color>
+    <color name="material_purple_100">#E1BEE7</color>
+    <color name="material_purple_200">#CE93D8</color>
+    <color name="material_purple_300">#BA68C8</color>
+    <color name="material_purple_400">#AB47BC</color>
+    <color name="material_purple_500">#9C27B0</color>
+    <color name="material_purple_600">#8E24AA</color>
+    <color name="material_purple_700">#7B1FA2</color>
+    <color name="material_purple_800">#6A1B9A</color>
+    <color name="material_purple_900">#4A148C</color>
+    <color name="material_purple_A100">#EA80FC</color>
+    <color name="material_purple_A200">#E040FB</color>
+    <color name="material_purple_A400">#D500F9</color>
+    <color name="material_purple_A700">#AA00FF</color>
+
+    <!-- deep purples -->
+    <color name="material_deep_purple_50">#EDE7F6</color>
+    <color name="material_deep_purple_100">#D1C4E9</color>
+    <color name="material_deep_purple_200">#B39DDB</color>
+    <color name="material_deep_purple_300">#9575CD</color>
+    <color name="material_deep_purple_400">#7E57C2</color>
+    <color name="material_deep_purple_500">#673AB7</color>
+    <color name="material_deep_purple_600">#5E35B1</color>
+    <color name="material_deep_purple_700">#512DA8</color>
+    <color name="material_deep_purple_800">#4527A0</color>
+    <color name="material_deep_purple_900">#311B92</color>
+    <color name="material_deep_purple_A100">#B388FF</color>
+    <color name="material_deep_purple_A200">#7C4DFF</color>
+    <color name="material_deep_purple_A400">#651FFF</color>
+    <color name="material_deep_purple_A700">#6200EA</color>
+
+    <!-- indigo -->
+    <color name="material_indigo_50">#E8EAF6</color>
+    <color name="material_indigo_100">#C5CAE9</color>
+    <color name="material_indigo_200">#9FA8DA</color>
+    <color name="material_indigo_300">#7986CB</color>
+    <color name="material_indigo_400">#5C6BC0</color>
+    <color name="material_indigo_500">#3F51B5</color>
+    <color name="material_indigo_600">#3949AB</color>
+    <color name="material_indigo_700">#303F9F</color>
+    <color name="material_indigo_800">#283593</color>
+    <color name="material_indigo_900">#1A237E</color>
+    <color name="material_indigo_A100">#8C9EFF</color>
+    <color name="material_indigo_A200">#536DFE</color>
+    <color name="material_indigo_A400">#3D5AFE</color>
+    <color name="material_indigo_A700">#304FFE</color>
+
+    <!--blue-->
+    <color name="material_blue_50">#E3F2FD</color>
+    <color name="material_blue_100">#BBDEFB</color>
+    <color name="material_blue_200">#90CAF9</color>
+    <color name="material_blue_300">#64B5F6</color>
+    <color name="material_blue_400">#42A5F5</color>
+    <color name="material_blue_500">#2196F3</color>
+    <color name="material_blue_600">#1E88E5</color>
+    <color name="material_blue_700">#1976D2</color>
+    <color name="material_blue_800">#1565C0</color>
+    <color name="material_blue_900">#0D47A1</color>
+    <color name="material_blue_A100">#82B1FF</color>
+    <color name="material_blue_A200">#448AFF</color>
+    <color name="material_blue_A400">#2979FF</color>
+    <color name="material_blue_A700">#2962FF</color>
+
+    <!-- light blue-->
+    <color name="material_light_blue_50">#E1F5FE</color>
+    <color name="material_light_blue_100">#B3E5FC</color>
+    <color name="material_light_blue_200">#81D4fA</color>
+    <color name="material_light_blue_300">#4fC3F7</color>
+    <color name="material_light_blue_400">#29B6FC</color>
+    <color name="material_light_blue_500">#03A9F4</color>
+    <color name="material_light_blue_600">#039BE5</color>
+    <color name="material_light_blue_700">#0288D1</color>
+    <color name="material_light_blue_800">#0277BD</color>
+    <color name="material_light_blue_900">#01579B</color>
+    <color name="material_light_blue_A100">#80D8FF</color>
+    <color name="material_light_blue_A200">#40C4FF</color>
+    <color name="material_light_blue_A400">#00B0FF</color>
+    <color name="material_light_blue_A700">#0091EA</color>
+
+    <!-- cyan -->
+    <color name="material_cyan_50">#E0F7FA</color>
+    <color name="material_cyan_100">#B2EBF2</color>
+    <color name="material_cyan_200">#80DEEA</color>
+    <color name="material_cyan_300">#4DD0E1</color>
+    <color name="material_cyan_400">#26C6DA</color>
+    <color name="material_cyan_500">#00BCD4</color>
+    <color name="material_cyan_600">#00ACC1</color>
+    <color name="material_cyan_700">#0097A7</color>
+    <color name="material_cyan_800">#00838F</color>
+    <color name="material_cyan_900">#006064</color>
+    <color name="material_cyan_A100">#84FFFF</color>
+    <color name="material_cyan_A200">#18FFFF</color>
+    <color name="material_cyan_A400">#00E5FF</color>
+    <color name="material_cyan_A700">#00B8D4</color>
+
+    <!-- teal -->
+    <color name="material_teal_50">#E0F2F1</color>
+    <color name="material_teal_100">#B2DFDB</color>
+    <color name="material_teal_200">#80CBC4</color>
+    <color name="material_teal_300">#4DB6AC</color>
+    <color name="material_teal_400">#26A69A</color>
+    <color name="material_teal_500">#009688</color>
+    <color name="material_teal_600">#00897B</color>
+    <color name="material_teal_700">#00796B</color>
+    <color name="material_teal_800">#00695C</color>
+    <color name="material_teal_900">#004D40</color>
+    <color name="material_teal_A100">#A7FFEB</color>
+    <color name="material_teal_A200">#64FFDA</color>
+    <color name="material_teal_A400">#1DE9B6</color>
+    <color name="material_teal_A700">#00BFA5</color>
+
+    <!-- green -->
+    <color name="material_green_50">#E8F5E9</color>
+    <color name="material_green_100">#C8E6C9</color>
+    <color name="material_green_200">#A5D6A7</color>
+    <color name="material_green_300">#81C784</color>
+    <color name="material_green_400">#66BB6A</color>
+    <color name="material_green_500">#4CAF50</color>
+    <color name="material_green_600">#43A047</color>
+    <color name="material_green_700">#388E3C</color>
+    <color name="material_green_800">#2E7D32</color>
+    <color name="material_green_900">#1B5E20</color>
+    <color name="material_green_A100">#B9F6CA</color>
+    <color name="material_green_A200">#69F0AE</color>
+    <color name="material_green_A400">#00E676</color>
+    <color name="material_green_A700">#00C853</color>
+
+    <!--light green-->
+    <color name="material_light_green_50">#F1F8E9</color>
+    <color name="material_light_green_100">#DCEDC8</color>
+    <color name="material_light_green_200">#C5E1A5</color>
+    <color name="material_light_green_300">#AED581</color>
+    <color name="material_light_green_400">#9CCC65</color>
+    <color name="material_light_green_500">#8BC34A</color>
+    <color name="material_light_green_600">#7CB342</color>
+    <color name="material_light_green_700">#689F38</color>
+    <color name="material_light_green_800">#558B2F</color>
+    <color name="material_light_green_900">#33691E</color>
+    <color name="material_light_green_A100">#CCFF90</color>
+    <color name="material_light_green_A200">#B2FF59</color>
+    <color name="material_light_green_A400">#76FF03</color>
+    <color name="material_light_green_A700">#64DD17</color>
+
+    <!-- lime-->
+    <color name="material_lime_50">#F9FBE7</color>
+    <color name="material_lime_100">#F0F4C3</color>
+    <color name="material_lime_200">#E6EE9C</color>
+    <color name="material_lime_300">#DCE775</color>
+    <color name="material_lime_400">#D4E157</color>
+    <color name="material_lime_500">#CDDC39</color>
+    <color name="material_lime_600">#C0CA33</color>
+    <color name="material_lime_700">#A4B42B</color>
+    <color name="material_lime_800">#9E9D24</color>
+    <color name="material_lime_900">#827717</color>
+    <color name="material_lime_A100">#F4FF81</color>
+    <color name="material_lime_A200">#EEFF41</color>
+    <color name="material_lime_A400">#C6FF00</color>
+    <color name="material_lime_A700">#AEEA00</color>
+
+    <!--yellow -->
+    <color name="material_yellow_50">#FFFDE7</color>
+    <color name="material_yellow_100">#FFF9C4</color>
+    <color name="material_yellow_200">#FFF590</color>
+    <color name="material_yellow_300">#FFF176</color>
+    <color name="material_yellow_400">#FFEE58</color>
+    <color name="material_yellow_500">#FFEB3B</color>
+    <color name="material_yellow_600">#FDD835</color>
+    <color name="material_yellow_700">#FBC02D</color>
+    <color name="material_yellow_800">#F9A825</color>
+    <color name="material_yellow_900">#F57F17</color>
+    <color name="material_yellow_A100">#FFFF82</color>
+    <color name="material_yellow_A200">#FFFF00</color>
+    <color name="material_yellow_A400">#FFEA00</color>
+    <color name="material_yellow_A700">#FFD600</color>
+
+    <!--amber-->
+    <color name="material_amber_50">#FFF8E1</color>
+    <color name="material_amber_100">#FFECB3</color>
+    <color name="material_amber_200">#FFE082</color>
+    <color name="material_amber_300">#FFD54F</color>
+    <color name="material_amber_400">#FFCA28</color>
+    <color name="material_amber_500">#FFC107</color>
+    <color name="material_amber_600">#FFB300</color>
+    <color name="material_amber_700">#FFA000</color>
+    <color name="material_amber_800">#FF8F00</color>
+    <color name="material_amber_900">#FF6F00</color>
+    <color name="material_amber_A100">#FFE57F</color>
+    <color name="material_amber_A200">#FFD740</color>
+    <color name="material_amber_A400">#FFC400</color>
+    <color name="material_amber_A700">#FFAB00</color>
+
+    <!--orange-->
+    <color name="material_orange_50">#FFF3E0</color>
+    <color name="material_orange_100">#FFE0B2</color>
+    <color name="material_orange_200">#FFCC80</color>
+    <color name="material_orange_300">#FFB74D</color>
+    <color name="material_orange_400">#FFA726</color>
+    <color name="material_orange_500">#FF9800</color>
+    <color name="material_orange_600">#FB8C00</color>
+    <color name="material_orange_700">#F57C00</color>
+    <color name="material_orange_800">#EF6C00</color>
+    <color name="material_orange_900">#E65100</color>
+    <color name="material_orange_A100">#FFD180</color>
+    <color name="material_orange_A200">#FFAB40</color>
+    <color name="material_orange_A400">#FF9100</color>
+    <color name="material_orange_A700">#FF6D00</color>
+
+    <!--deep orange-->
+    <color name="material_deep_orange_50">#FBE9A7</color>
+    <color name="material_deep_orange_100">#FFCCBC</color>
+    <color name="material_deep_orange_200">#FFAB91</color>
+    <color name="material_deep_orange_300">#FF8A65</color>
+    <color name="material_deep_orange_400">#FF7043</color>
+    <color name="material_deep_orange_500">#FF5722</color>
+    <color name="material_deep_orange_600">#F4511E</color>
+    <color name="material_deep_orange_700">#E64A19</color>
+    <color name="material_deep_orange_800">#D84315</color>
+    <color name="material_deep_orange_900">#BF360C</color>
+    <color name="material_deep_orange_A100">#FF9E80</color>
+    <color name="material_deep_orange_A200">#FF6E40</color>
+    <color name="material_deep_orange_A400">#FF3D00</color>
+    <color name="material_deep_orange_A700">#DD2600</color>
+
+    <!--brown -->
+    <color name="material_brown_50">#EFEBE9</color>
+    <color name="material_brown_100">#D7CCC8</color>
+    <color name="material_brown_200">#BCAAA4</color>
+    <color name="material_brown_300">#A1887F</color>
+    <color name="material_brown_400">#8D6E63</color>
+    <color name="material_brown_500">#795548</color>
+    <color name="material_brown_600">#6D4C41</color>
+    <color name="material_brown_700">#5D4037</color>
+    <color name="material_brown_800">#4E342E</color>
+    <color name="material_brown_900">#3E2723</color>
+
+    <!--grey-->
+    <color name="material_grey_50">#FAFAFA</color>
+    <color name="material_grey_100">#F5F5F5</color>
+    <color name="material_grey_200">#EEEEEE</color>
+    <color name="material_grey_300">#E0E0E0</color>
+    <color name="material_grey_400">#BDBDBD</color>
+    <color name="material_grey_500">#9E9E9E</color>
+    <color name="material_grey_600">#757575</color>
+    <color name="material_grey_700">#616161</color>
+    <color name="material_grey_800">#424242</color>
+    <color name="material_grey_850">#303030</color>
+    <color name="material_grey_900">#212121</color>
+    <color name="material_black_1000">#000000</color>
+    <color name="material_white_1000">#ffffff</color>
+
+    <!--blue grey-->
+    <color name="material_blue_grey_50">#ECEFF1</color>
+    <color name="material_blue_grey_100">#CFD8DC</color>
+    <color name="material_blue_grey_200">#B0BBC5</color>
+    <color name="material_blue_grey_300">#90A4AE</color>
+    <color name="material_blue_grey_400">#78909C</color>
+    <color name="material_blue_grey_500">#607D8B</color>
+    <color name="material_blue_grey_600">#546E7A</color>
+    <color name="material_blue_grey_700">#455A64</color>
+    <color name="material_blue_grey_800">#37474F</color>
+    <color name="material_blue_grey_900">#263238</color>
+
+</resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 742dfe9f3..5d5283656 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -3,8 +3,8 @@
 
 
 <resources>
-    <string name="AppName">Telegram</string>
-    <string name="AppNameBeta">Telegram Beta</string>
+    <string name="AppName">Rikkagram</string>
+    <string name="AppNameBeta">Rikkagram Beta</string>
     <string name="LanguageName">English</string>
     <string name="LanguageNameInEnglish">English</string>
     <string name="LanguageCode">en</string>
@@ -1300,4 +1300,5 @@
     <!--Rikkagram-->
     <string name="UseGoogleEmoji">Google emoji</string>
     <string name="UseGoogleEmojiInfo">Use Noto Color Emoji instead of iOS emoji</string>
+    <string name="NightMode">Dark Theme (developing)</string>
 </resources>
\ No newline at end of file
diff --git a/build.gradle b/build.gradle
index 10283d308..f4be33214 100644
--- a/build.gradle
+++ b/build.gradle
@@ -5,7 +5,7 @@ buildscript {
         mavenCentral()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.2.1'
+        classpath 'com.android.tools.build:gradle:2.2.2'
         classpath 'com.google.gms:google-services:3.0.0'
     }
 }
\ No newline at end of file
