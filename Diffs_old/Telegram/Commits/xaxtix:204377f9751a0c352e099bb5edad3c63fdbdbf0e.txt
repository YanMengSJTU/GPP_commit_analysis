diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
index 740ef849a..8e45c5367 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
@@ -102,6 +102,7 @@ public AudioBuffer(int capacity) {
             bufferBytes = new byte[capacity];
         }
 
+
         ByteBuffer buffer;
         byte[] bufferBytes;
         int size;
@@ -390,6 +391,7 @@ public String getPathToAttach() {
     private int currentAspectRatioFrameLayoutRotation;
     private float currentAspectRatioFrameLayoutRatio;
     private boolean currentAspectRatioFrameLayoutReady;
+    private boolean playVideoOnResume = false;
 
     private Runnable setLoadingRunnable = new Runnable() {
         @Override
@@ -3549,6 +3551,29 @@ public static int selectColorFormat(MediaCodecInfo codecInfo, String mimeType) {
         return lastColorFormat;
     }
 
+    public void onAppPaused() {
+        if(videoPlayer != null){
+            playVideoOnResume = videoPlayer.isPlaying();
+            videoPlayer.setPlayWhenReady(false);
+            videoPlayer.pause();
+        }
+    }
+
+
+    public void onAppResumed() {
+        if (videoPlayer != null) {
+            videoPlayer.seekTo(videoPlayer.getCurrentPosition() + 1);
+            if (playVideoOnResume) {
+                videoPlayer.setPlayWhenReady(true);
+                videoPlayer.play();
+            }
+        }
+        playVideoOnResume = false;
+    }
+
+
+
+
     private int findTrack(MediaExtractor extractor, boolean audio) {
         int numTracks = extractor.getTrackCount();
         for (int i = 0; i < numTracks; i++) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index e36a7696d..797c5c972 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -2420,6 +2420,7 @@ protected void onPause() {
         if (passcodeView != null) {
             passcodeView.onPause();
         }
+        MediaController.getInstance().onAppPaused();
         ConnectionsManager.getInstance(currentAccount).setAppPaused(true, false);
         AndroidUtilities.unregisterUpdates();
         if (PhotoViewer.hasInstance() && PhotoViewer.getInstance().isVisible()) {
@@ -2495,6 +2496,7 @@ protected void onDestroy() {
     protected void onResume() {
         super.onResume();
         MediaController.getInstance().setFeedbackView(actionBarLayout, true);
+        MediaController.getInstance().onAppResumed();
         ApplicationLoader.mainInterfacePaused = false;
         showLanguageAlert(false);
         Utilities.stageQueue.postRunnable(() -> {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index 933d6ae5d..ab89c5fdc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -310,6 +310,7 @@ public void run() {
     private boolean isPlaying;
     private boolean isStreaming;
     private boolean firstAnimationDelay;
+    private boolean playVideoOnResume = false;
     private long lastBufferedPositionCheck;
     private View playButtonAccessibilityOverlay;
     
@@ -7326,7 +7327,12 @@ public void onResume() {
         redraw(0); //workaround for camera bug
         if (videoPlayer != null) {
             videoPlayer.seekTo(videoPlayer.getCurrentPosition() + 1);
+            if (playVideoOnResume) {
+                videoPlayer.setPlayWhenReady(true);
+                videoPlayer.play();
+            }
         }
+        playVideoOnResume = false;
     }
 
     public void onConfigurationChanged(Configuration newConfig) {
@@ -7336,6 +7342,11 @@ public void onConfigurationChanged(Configuration newConfig) {
     }
 
     public void onPause() {
+        if(videoPlayer != null){
+            playVideoOnResume = isPlaying || videoPlayer.getPlayWhenReady();
+            videoPlayer.setPlayWhenReady(false);
+            videoPlayer.pause();
+        }
         if (currentAnimation != null) {
             closePhoto(false, false);
             return;
