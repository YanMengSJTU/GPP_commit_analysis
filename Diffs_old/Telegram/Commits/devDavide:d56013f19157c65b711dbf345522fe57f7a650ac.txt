diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManager.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManager.java
index 081e23539..b1a6bb6e2 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManager.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManager.java
@@ -238,24 +238,27 @@ public ClosedDecisionDate(Decision decision, List<Option> winningOptions) {
      * Only if getMessageType(text) == MessageType_CLOSE_DECISION
      * @param text
      * @param groupChatId
+     * @param userId
      * @return the data for close decision message
      */
-    ClosedDecisionDate getCloseDecision(String text, long groupChatId) throws PollgramParseException;
+    ClosedDecisionDate getCloseDecision(String text, long groupChatId, int userId) throws PollgramParseException;
 
     /**
      * * Only if getMessageType(text) == MessageType_DELETE_DECISION
      * @param text
      * @param groupChatId
+     * @param userId
      * @return the decision to delete
      */
-    Decision getDeleteDecision(String text, long groupChatId) throws PollgramParseException;
+    Decision getDeleteDecision(String text, long groupChatId, int userId) throws PollgramParseException;
 
     /**
      * Only if getMessageType(text) == MessageType_REOPEN_DECISION
      * @param text
      * @param groupChatId
+     * @param userId
      * @return the decision to reopen
      */
-    Decision getReopenDecision(String text, long groupChatId) throws PollgramParseException;
+    Decision getReopenDecision(String text, long groupChatId, int userId) throws PollgramParseException;
 
 }
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java
index 77a722ed4..628e3f6f1 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java
@@ -482,7 +482,7 @@ private void addOption2List(List<Option> optionList, StringTokenizer strTok) {
     }
 
     @Override
-    public ClosedDecisionDate getCloseDecision(String msg, long currentChat) throws PollgramParseException {
+    public ClosedDecisionDate getCloseDecision(String msg, long currentChat, int userId) throws PollgramParseException {
         Decision decision;
         List<Option> optionList;
         try {
@@ -492,6 +492,8 @@ public ClosedDecisionDate getCloseDecision(String msg, long currentChat) throws
             decision = pollgramDAO.getDecision(title, currentChat);
             if (decision == null)
                 throw new PollgramParseException("Decision not found for title  [" + title + "]");
+            if (!decision.isEditable(userId))
+                throw new PollgramParseException("Decision is not editable by userId ["+userId+"]");
 
             optionList = new ArrayList<>();
             while (strTok.hasMoreTokens()){
@@ -513,15 +515,15 @@ public ClosedDecisionDate getCloseDecision(String msg, long currentChat) throws
     }
 
     @Override
-    public Decision getDeleteDecision(String text, long groupChatId) throws PollgramParseException {
-        Decision d = getDecisionInDeleteOrReopenMessage(text, groupChatId);
+    public Decision getDeleteDecision(String text, long groupChatId, int userId) throws PollgramParseException {
+        Decision d = getDecisionInDeleteOrReopenMessage(text, groupChatId, userId);
         Log.d(LOG_TAG, "getDeleteDecision Decision[" + d + "]");
         return d;
     }
 
     @Override
-    public Decision getReopenDecision(String text, long groupChatId) throws PollgramParseException {
-        Decision d = getDecisionInDeleteOrReopenMessage(text,groupChatId);
+    public Decision getReopenDecision(String text, long groupChatId, int userId) throws PollgramParseException {
+        Decision d = getDecisionInDeleteOrReopenMessage(text,groupChatId, userId);
         if (d ==null)
             throw new PollgramParseException( "Decision not found for message[" + text + "]");
         Log.d(LOG_TAG, "getReopenDecision Decision["+d+"]");
@@ -532,15 +534,17 @@ public Decision getReopenDecision(String text, long groupChatId) throws Pollgram
      * Actually Delete and Reopen messages have the same structure
      * @param msg
      * @param groupChatId
+     * @param userId
      * @return
      */
-    private @Nullable Decision getDecisionInDeleteOrReopenMessage(String msg, long groupChatId) throws PollgramParseException {
-        Decision decision;
+    private @Nullable Decision getDecisionInDeleteOrReopenMessage(String msg, long groupChatId, int userId) throws PollgramParseException {
         try {
             StringTokenizer strTok = new EscapeStringTokenizer(msg);
-            strTok.nextToken(); // skipt this token
+            strTok.nextToken(); // skip this token
             String decisionTitle = strTok.nextToken();
             Decision d = pollgramDAO.getDecision(decisionTitle, groupChatId);
+            if (!d.isEditable(userId))
+                throw new PollgramParseException("Decision is not editable by userid ["+userId+"]");
             return d;
         } catch (NoSuchElementException e){
             Log.e(LOG_TAG, "Error parsing message [" + msg + "]", e);
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
index a07941789..d1f37bcbe 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
@@ -236,30 +236,30 @@ public void processMessage(MessageObject message, boolean showToastOnError) {
         try {
             switch (msgType) {
                 case NEW_DECISION: {
-                    PollgramMessagesManager.DecisionOptionData resut = messageManager.getNewDecision(text,
+                    PollgramMessagesManager.DecisionOptionData result = messageManager.getNewDecision(text,
                             groupChatId, userId, messageDate);
-                    if (resut == null){
+                    if (result == null){
                         throw new PollgramParseException("Decision not found for NEW_DECISION messsage");
                     }
-                    if (pollgramDAO.getDecision(resut.decision.getTitle(),resut.decision.getChatId()) != null){
+                    if (pollgramDAO.getDecision(result.decision.getTitle(),result.decision.getChatId()) != null){
                         Log.d(LOG_TAG,"New decision already found will not insert twice");
                         break;
                     }
-                    Decision d = pollgramDAO.save(resut.decision);
-                    for (Option o : resut.optionList) {
+                    Decision d = pollgramDAO.save(result.decision);
+                    for (Option o : result.optionList) {
                         o.setDecisionId(d.getId());
                         pollgramDAO.save(o);
                     }
                     break;
                 }
                 case ADD_OPTIONS:{
-                    PollgramMessagesManager.DecisionOptionData resut = messageManager.getAddedOption(text,
+                    PollgramMessagesManager.DecisionOptionData result = messageManager.getAddedOption(text,
                             groupChatId, userId);
-                    if (resut == null){
+                    if (result == null){
                         throw new PollgramParseException("Decision not found for "+msgType+" messsage");
                     }
-                    for (Option o : resut.optionList) {
-                        o.setDecisionId(resut.decision.getId());
+                    for (Option o : result.optionList) {
+                        o.setDecisionId(result.decision.getId());
                         pollgramDAO.save(o);
                     }
                     break;
@@ -281,20 +281,23 @@ public void processMessage(MessageObject message, boolean showToastOnError) {
                     break;
                 }
 
-                case REOPEN_DECISION: {
-                    Decision decision = messageManager.getReopenDecision(text, groupChatId);
-                    decision.setOpen(true);
-                    pollgramDAO.save(decision);
-                    break;
-                }
                 case CLOSE_DECISION: {
-                    PollgramMessagesManager.ClosedDecisionDate result = messageManager.getCloseDecision(text, groupChatId);
+                    PollgramMessagesManager.ClosedDecisionDate result = messageManager.getCloseDecision(text,
+                            groupChatId, userId);
                     result.decision.setOpen(false);
                     pollgramDAO.save(result.decision);
                     break;
                 }
+
+                case REOPEN_DECISION: {
+                    Decision decision = messageManager.getReopenDecision(text, groupChatId, userId);
+                    decision.setOpen(true);
+                    pollgramDAO.save(decision);
+                    break;
+                }
+
                 case DELETE_DECISION: {
-                    Decision decision = messageManager.getDeleteDecision(text, groupChatId);
+                    Decision decision = messageManager.getDeleteDecision(text, groupChatId, userId);
                     if (decision != null)
                         pollgramDAO.delete(decision);
                     break;
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index 349bad54d..cff2b05be 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -1103,7 +1103,7 @@
 
     <!-- Pollgram crash messages START -->
     <string name="appCrashedMessage">Oh cazzo! L\'applicazione è andata in crash :-( Inviami una segnalazione del crash via email in modo che possa sistemare il tutto in men che non si dica. Grazie </string>
-    <string name="sendCrashEmail">Invia sengalazione via eMail</string>
+    <string name="sendCrashEmail">Invia sengalazione di errore</string>
     <string name="contactMe">Contact me</string>
     <string name="sendInfoEmail">Pollgram contactta lo sviluppatore</string>
     <string name="doNotPressThisButton">Non premere qui</string>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index d5a13ed87..4ea19707e 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -1100,7 +1100,7 @@
 
     <!-- Pollgram crash messages START -->
     <string name="appCrashedMessage">Oh shit ! The app crashed :-( Please send me the crash info by email, so i can fix the problem as soon a spossible. Thanks you.</string>
-    <string name="sendCrashEmail">Send Crash info by Email</string>
+    <string name="sendCrashEmail">Send Crash info</string>
     <string name="contactMe">Contact me</string>
     <string name="sendInfoEmail">Pollgram contact developer</string>
     <string name="doNotPressThisButton">Do not press here</string>
diff --git a/TMessagesProj/src/test/java/org/pollgram/decision/service/MessagesManagerTest.java b/TMessagesProj/src/test/java/org/pollgram/decision/service/MessagesManagerTest.java
index e40ea7974..ed5d88371 100644
--- a/TMessagesProj/src/test/java/org/pollgram/decision/service/MessagesManagerTest.java
+++ b/TMessagesProj/src/test/java/org/pollgram/decision/service/MessagesManagerTest.java
@@ -189,7 +189,7 @@ public void testCloseDecisionSingleWinningOptions() throws PollgramParseExceptio
     }
 
     private void assertCloseDecision(Decision decision, List<Option> winningOption, String message) throws PollgramParseException {
-        PollgramMessagesManager.ClosedDecisionDate result = messageManager.getCloseDecision(message, chat.id);
+        PollgramMessagesManager.ClosedDecisionDate result = messageManager.getCloseDecision(message, chat.id, user.id);
         Assert.assertEquals(decision, result.decision);
         Assert.assertEquals(winningOption, result.winningOptions);
     }
@@ -204,7 +204,7 @@ public void testReopenDecision() throws PollgramParseException {
     }
 
     private void assertReopenDecision(Decision decision, String message) throws PollgramParseException {
-        Decision foundDecision = messageManager.getReopenDecision(message, chat.id);
+        Decision foundDecision = messageManager.getReopenDecision(message, chat.id, user.id);
         Assert.assertEquals(foundDecision, decision);
     }
 
@@ -218,7 +218,7 @@ public void testDeleteDecision() throws PollgramParseException {
     }
 
     private void assertDeleteDecision(Decision decision, String message) throws PollgramParseException {
-        Decision foundDecision = messageManager.getDeleteDecision(message, chat.id);
+        Decision foundDecision = messageManager.getDeleteDecision(message, chat.id, user.id);
         Assert.assertEquals(foundDecision, decision);
     }
 
diff --git a/TMessagesProj/src/test/java/org/pollgram/decision/service/PollgramDAOTestImpl.java b/TMessagesProj/src/test/java/org/pollgram/decision/service/PollgramDAOTestImpl.java
index 5d30a2211..12c290ded 100644
--- a/TMessagesProj/src/test/java/org/pollgram/decision/service/PollgramDAOTestImpl.java
+++ b/TMessagesProj/src/test/java/org/pollgram/decision/service/PollgramDAOTestImpl.java
@@ -105,6 +105,11 @@ public Decision getDecision(long decisionId) {
         return outList;
     }
 
+    @Override
+    public List<Decision> getDecisions(long chatId, int decisionOwnerId) {
+        return null;
+    }
+
     @Override
     public Option getOption(long optionId) {
         for (Option o : textOptions)
