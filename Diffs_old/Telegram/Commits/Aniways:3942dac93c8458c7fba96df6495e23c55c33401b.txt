diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index b6fae0350..0484fd9c4 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -94,7 +94,7 @@ android {
         targetSdkVersion 19
         renderscriptTargetApi 19
         renderscriptSupportMode true
-        versionCode 230
-        versionName "1.5.61"
+        versionCode 231
+        versionName "1.5.62"
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/objects/MessageObject.java b/TMessagesProj/src/main/java/org/telegram/objects/MessageObject.java
index c8656d094..12cbc0765 100644
--- a/TMessagesProj/src/main/java/org/telegram/objects/MessageObject.java
+++ b/TMessagesProj/src/main/java/org/telegram/objects/MessageObject.java
@@ -57,6 +57,7 @@
     public int textHeight;
     public int blockHeight = Integer.MAX_VALUE;
     private Editable mDecodedMessageCache;
+    public IAniwaysTextContainer mtextContainer;
 
     public static class TextLayoutBlock {
         public StaticLayout textLayout;
@@ -336,10 +337,14 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
         int dateMonth = rightNow.get(Calendar.MONTH);
         dateKey = String.format("%d_%02d_%02d", dateYear, dateMonth, dateDay);
 
-        generateLayout();
+        generateLayout(null);
     }
 
     public CharSequence getAniwaysDecodedMessageTextBigIcons(IAniwaysTextContainer textContainer){
+        if(textContainer == null){
+            return this.messageText;
+        }
+
         if(mDecodedMessageCache == null){
             try {
                 mDecodedMessageCache = Aniways.decodeMessage(this.messageText, new AniwaysIconInfoDisplayer(), textContainer, false);
@@ -408,10 +413,12 @@ public static String getAttachFileName(TLObject attach) {
         return "";
     }
 
-    public void generateLayout() {
+    public void generateLayout(IAniwaysTextContainer textContainer) {
+
+        this.mtextContainer = textContainer;
 
         // This is used only by the views that display the normal sized icons, so it is OK to assume the large icons here..
-        CharSequence messageTextDecoded = getAniwaysDecodedMessageTextBigIcons(null);
+        CharSequence messageTextDecoded = getAniwaysDecodedMessageTextBigIcons(textContainer);
 
         if (type != 0 && type != 1 && type != 8 && type != 9 || messageOwner.to_id == null || messageTextDecoded == null || messageTextDecoded.length() == 0) {
             return;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
index 2d2594da0..5f2173016 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
@@ -17,7 +17,7 @@
 import android.view.MotionEvent;
 import android.view.View;
 
-import com.aniways.AniwaysIconInfoSpan;
+import com.aniways.IAniwaysIconInfoSpan;
 import com.aniways.AniwaysLoadingImageSpan;
 import com.aniways.AniwaysLoadingImageSpansContainer;
 import com.aniways.IAniwaysTextContainer;
@@ -34,7 +34,7 @@
     private int textX, textY;
     private int totalHeight = 0;
     private ClickableSpan pressedLink;
-    private AniwaysIconInfoSpan pressedIcon;
+    private IAniwaysIconInfoSpan pressedIcon;
 
     private int lastVisibleBlockNum = 0;
     private int firstVisibleBlockNum = 0;
@@ -53,7 +53,7 @@ public void onError() {
 
             @Override
             public void onSuccess() {
-                currentMessageObject.generateLayout();
+                currentMessageObject.generateLayout(ChatMessageCell.this);
                 setMessageObject(currentMessageObject, true);
             }
         });
@@ -79,7 +79,7 @@ public boolean onTouchEvent(MotionEvent event) {
                         if (left <= x && left + block.textLayout.getLineWidth(line) >= x) {
                             Spannable buffer = (Spannable)currentMessageObject.getAniwaysDecodedMessageTextBigIcons(this);
                             ClickableSpan[] link = buffer.getSpans(off, off, ClickableSpan.class);
-                            AniwaysIconInfoSpan[] iconInfos = buffer.getSpans(off, off, AniwaysIconInfoSpan.class);
+                            IAniwaysIconInfoSpan[] iconInfos = buffer.getSpans(off, off, IAniwaysIconInfoSpan.class);
 
                             if (link.length != 0) {
                                 if (event.getAction() == MotionEvent.ACTION_DOWN) {
@@ -179,6 +179,10 @@ public void setMessageObject(MessageObject messageObject) {
     }
 
     private void setMessageObject(MessageObject messageObject, boolean force) {
+        if(messageObject.mtextContainer == null){
+            messageObject.generateLayout(this);
+        }
+
         Spannable oldText = this.getText();
         if (currentMessageObject != messageObject || isUserDataChanged() || force) {
             if (currentMessageObject != messageObject || force) {
@@ -369,6 +373,18 @@ public AniwaysLoadingImageSpansContainer getLoadingImageSpansContainer() {
         return this.mLoadingImageSpansContainer;
     }
 
+    @Override
+    public void removeTextWatchers() {
+
+    }
+
+    @Override
+    public void addBackTheTextWatchers() {
+        // TODO: temp!!
+        currentMessageObject.generateLayout(this);
+        setMessageObject(currentMessageObject, true);
+    }
+
     @Override
     protected void onDetachedFromWindow() {
         this.mLoadingImageSpansContainer.onDetachFromWindowCalled();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
index 4edb05d99..f7e817aa0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
@@ -151,7 +151,7 @@ private void init() {
         }
 
         if (cellLayout == null) {
-            cellLayout = new DialogCellLayout();
+            cellLayout = new DialogCellLayout(this);
         }
     }
 
@@ -370,6 +370,17 @@ public AniwaysLoadingImageSpansContainer getLoadingImageSpansContainer() {
         return this.mLoadingImageSpansContainer;
     }
 
+    @Override
+    public void removeTextWatchers() {
+
+    }
+
+    @Override
+    public void addBackTheTextWatchers() {
+        //TODO: temp!!
+        setDialog(currentDialog);
+    }
+
     @Override
     protected void onDetachedFromWindow() {
         this.mLoadingImageSpansContainer.onDetachFromWindowCalled();
@@ -378,6 +389,7 @@ protected void onDetachedFromWindow() {
     }
 
     private class DialogCellLayout {
+        private final IAniwaysTextContainer mTextContainer;
         private int nameLeft;
         private int nameTop = Utilities.dp(10);
         private int nameWidth;
@@ -424,6 +436,10 @@ Spannable getText(){
             return (Spannable) messageLayout.getText();
         }
 
+        public DialogCellLayout(IAniwaysTextContainer textContainer){
+            mTextContainer = textContainer;
+        }
+
         public void build(int width, int height) {
 
             MessageObject message = MessagesController.getInstance().dialogMessage.get(currentDialog.top_message);
@@ -728,7 +744,7 @@ public void build(int width, int height) {
             }
 
             // TODO: need to put a textcontainer there, make this a text container
-            messageString = Aniways.decodeMessage(messageString, new AniwaysIconInfoDisplayer(), null, true);
+            messageString = Aniways.decodeMessage(messageString, new AniwaysIconInfoDisplayer(), this.mTextContainer, true);
             CharSequence messageStringFinal = TextUtils.ellipsize(messageString, currentMessagePaint, messageWidth - Utilities.dp(12), TextUtils.TruncateAt.END);
             Spannable oldText = this.getText();
             messageLayout = new StaticLayout(messageStringFinal, currentMessagePaint, messageWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
