diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
index b1a15e680..843e6e1b2 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
@@ -17,6 +17,7 @@
 import org.pollgram.decision.data.UsersDecisionVotes;
 import org.pollgram.decision.data.Vote;
 import org.pollgram.decision.service.PollgramFactory;
+import org.pollgram.decision.ui.DrawView;
 
 import java.util.ArrayList;
 import java.util.Collection;
@@ -69,13 +70,12 @@ public void setData(UsersDecisionVotes usersDecisionVotes, int currentUserId) {
     private void updateMaxVote() {
         maxVote = 0;
         for (Option o : usersDecisionVotes.getOptions()){
-            maxVote = Math.max(maxVote, getPositiveVoteCount(o, newVotes.get(o)));
+            maxVote = Math.max(maxVote, getPositiveVoteCount(o));
         }
     }
 
-    private int getPositiveVoteCount(Option o, Vote newVote) {
+    private int getPositiveVoteCount(Option o) {
         int positiveVoteCount = usersDecisionVotes.getPositiveVoteCount(o);
-        positiveVoteCount += newVote == null ? 0 : (newVote.isVote() == true ? +1 : -1);
         return  positiveVoteCount;
     }
 
@@ -120,9 +120,9 @@ public View getView(final int position, View convertView, ViewGroup parent) {
         ImageView optionImage = (ImageView)rowView.findViewById(R.id.item_option_iv_image);
         TextView optionTitle = (TextView)rowView.findViewById(R.id.item_option_tv_title);
         final TextView optionVoteCount = (TextView)rowView.findViewById(R.id.item_option_tv_vote_count);
-        final ImageView starImageView = (ImageView)rowView.findViewById(R.id.item_option_start_imageView);
+        final ImageView starImageView = (ImageView)rowView.findViewById(R.id.item_option_star_imageView);
         TextView optionSubtitle = (TextView)rowView.findViewById(R.id.item_option_tv_subtitle);
-//        SurfaceView optionView = (SurfaceView)rowView.findViewById(R.id.item_option_sw_bar);
+        ViewGroup stackedBarContainer = (ViewGroup)rowView.findViewById(R.id.item_option_stacked_bar);
         final CheckBox optionCheckBox = (CheckBox)rowView.findViewById(R.id.item_option_cb);
 
         optionCheckBox.setEnabled(editable);
@@ -138,6 +138,7 @@ public void onClick(View v) {
                     newVotes.put(o, vote);
                 }
                 Log.d(LOG_TAG, "item [" + position + "] selected[" + optionCheckBox.isChecked() + "] ");
+                usersDecisionVotes.setVote(vote.getUserId(),o, vote);
                 onVoteChangeListener.voteChanges(!newVotes.isEmpty());
                 updateMaxVote();
                 notifyDataSetChanged();
@@ -145,13 +146,20 @@ public void onClick(View v) {
         });
 
         // TODO optionImage
+
+        // Set values
         optionTitle.setText(o.getTitle());
 
-        int positiveVoteCount = getPositiveVoteCount(o, newVotes.get(o));
+        int positiveVoteCount = getPositiveVoteCount(o);
         optionVoteCount.setText(formatVoteCount(positiveVoteCount));
         //noinspection ResourceType
         starImageView.setVisibility(getStartVisibility(positiveVoteCount));
         optionSubtitle.setText(o.getLongDescription());
+
+        DrawView stackedBarDrawView = new DrawView(getContext(), usersDecisionVotes.getUsers().size(),
+                positiveVoteCount, usersDecisionVotes.getUserThatVoteCount());
+        stackedBarContainer.addView(stackedBarDrawView, ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.MATCH_PARENT);
+
         optionCheckBox.setChecked(vote.isVote() != null && vote.isVote());
 
         return rowView;
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/data/UsersDecisionVotes.java b/TMessagesProj/src/main/java/org/pollgram/decision/data/UsersDecisionVotes.java
index b3dd377a3..d34bd2272 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/data/UsersDecisionVotes.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/data/UsersDecisionVotes.java
@@ -81,6 +81,21 @@ public boolean atLeastOneIsNull(int userId){
         }
         return false;
     }
+    public int getUserThatVoteCount(){
+        int count = 0 ;
+        for (TLRPC.User user : users){
+            boolean allNulls = true;
+            for (Option o : options){
+                if (getVotes(user.id,o).isVote() != null) {
+                    allNulls = false;
+                    break;
+                }
+            }
+            if (!allNulls)
+                count++;
+        }
+        return count;
+    }
 
     public List<Vote> getVotes(int userID){
         List<Vote> votes = new ArrayList<>();
@@ -100,8 +115,8 @@ public Vote getVotes(int userId, Option option){
         return v;
     }
 
-    public void setVote(int userItem, Option option, Vote vote){
-        voteMap.put(new UserIdOptionKey(userItem,option.getId()), vote);
+    public void setVote(int userID, Option option, Vote vote){
+        voteMap.put(new UserIdOptionKey(userID,option.getId()), vote);
         // update cache
         cachedPositiveVoteCount.put(option,calculateVoteCount(option));
         Collections.sort(options, optionsComparator);
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
index 0cc4c0557..16a3f5a38 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
@@ -16,7 +16,6 @@
 import android.widget.ImageView;
 import android.widget.ListView;
 import android.widget.TextView;
-import android.widget.Toast;
 
 import org.pollgram.R;
 import org.pollgram.decision.adapter.DecisionAdapter;
@@ -169,11 +168,8 @@ public void getOutline(View view, Outline outline) {
         floatingButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-//                Bundle args = new Bundle();
-//                args.putBoolean("destroyAfterSelect", true);
-//                presentFragment(new ContactsActivity(args));
-                Toast.makeText(context, "plus pressed", Toast.LENGTH_SHORT).show();
-
+                Bundle args = new Bundle();
+                presentFragment(new NewDecisionFragment(args));
             }
         });
         return fragmentView;
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DrawView.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DrawView.java
new file mode 100644
index 000000000..6175c9b3d
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DrawView.java
@@ -0,0 +1,103 @@
+package org.pollgram.decision.ui;
+
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.util.Log;
+import android.widget.TextView;
+
+import org.telegram.messenger.AndroidUtilities;
+public class DrawView extends TextView {
+
+    private static final String LOG_TAG ="DRAW_VIEW";
+
+    private final Paint paint;
+    private final float positivePerc;
+    private final float emptyPerc;
+    private final float negativePerc;
+    private float height;
+    private float width;
+    private float padding;
+    private float externalStroke;
+    private float left;
+    private float top;
+
+
+    public DrawView(Context context, int totalUserCount, int positiveVoteCount, int userThatVoteCount) {
+        super(context);
+
+        Log.d(LOG_TAG, "totalUserCount["+totalUserCount+"] positiveVoteCount["+ positiveVoteCount +"] " +
+                "userThatVoteCount["+userThatVoteCount+"]");
+
+        this.emptyPerc = (float)(totalUserCount - userThatVoteCount) / totalUserCount;
+        this.positivePerc = (float) positiveVoteCount/ totalUserCount;
+        this.negativePerc = (float) 1 - emptyPerc - positivePerc;
+        checkPerc();
+
+        padding = AndroidUtilities.dp(10);
+        externalStroke = AndroidUtilities.dp(1);
+        setText("aaaa\naaaa\naaa\naa");
+        paint = new Paint();
+    }
+
+    private void checkPerc() {
+        float[] percs = new float[]{emptyPerc, positivePerc, negativePerc};
+        for (float p : percs) {
+            if (p > 1 || p < 0)
+                throw new IllegalArgumentException("positivePerc [" + p + "]" +
+                        " must be between 1 and 0");
+        }
+    }
+
+
+    @Override
+    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
+        this.left = left + padding;
+        this.top = top + padding ;
+        right -= padding;
+        this.width = right - left;
+        bottom -= padding;
+        this.height = bottom - top;
+        Log.d(LOG_TAG, "DrawView onLayout: left[" + left + "] top[" + top + "] height[" + height + "] width[" + width + "]");
+        super.onLayout(changed, left, top, right, bottom);
+    }
+
+    @Override
+    public void onDraw(Canvas canvas) {
+        drawRect(canvas, left, top, width, height, externalStroke);
+    }
+
+    private void drawRect(Canvas canvas, float left, float top, float width, float height, float externalStroke) {
+        float myRight = left + width;
+        float myBottom = top + height;
+
+        paint.setColor(Color.BLACK);
+        canvas.drawRect(left, top, myRight, myBottom, paint);
+
+        left += externalStroke;
+        top += externalStroke;
+        myRight -= externalStroke;
+        myBottom -= externalStroke;
+        width -= (externalStroke *2);
+        height -= (externalStroke*2);
+        paint.setColor(Color.WHITE);
+        canvas.drawRect(left, top, myRight, myBottom, paint);
+
+        paint.setColor(Color.GREEN);
+        //float left, float top, float right, float bottom,
+        float myLeft = left;
+        float myTop = top + (height * emptyPerc);
+        myRight = left + width;
+        myBottom = myTop + (height * positivePerc) ;
+        canvas.drawRect(myLeft, myTop, myRight, myBottom, paint);
+
+        paint.setColor(Color.RED);
+        myTop = myBottom;
+        myBottom = top + height;
+        canvas.drawRect(myLeft, myTop, myRight, myBottom, paint);
+
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
new file mode 100644
index 000000000..76bef0d0b
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
@@ -0,0 +1,40 @@
+package org.pollgram.decision.ui;
+
+import android.content.Context;
+import android.os.Bundle;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import org.pollgram.R;
+import org.telegram.ui.ActionBar.BaseFragment;
+import org.telegram.ui.Components.SizeNotifierFrameLayout;
+
+/**
+ * Created by davide on 13/12/15.
+ */
+public class NewDecisionFragment extends BaseFragment {
+
+    public NewDecisionFragment(Bundle args) {
+        super(args);
+    }
+
+    @Override
+    public boolean onFragmentCreate() {
+        // put here fields init
+        return true;
+    }
+
+    @Override
+    public View createView(Context context) {
+        fragmentView = new SizeNotifierFrameLayout(context);
+        SizeNotifierFrameLayout contentView = (SizeNotifierFrameLayout) fragmentView;
+        LayoutInflater li = LayoutInflater.from(context);
+        ViewGroup myView = (ViewGroup) li.inflate(R.layout.new_decision_layout, (ViewGroup) fragmentView);
+
+        DrawView dv = new DrawView(getParentActivity(), 10, 4, 7);
+        myView.addView(dv, ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT);
+
+        return  fragmentView;
+    }
+}
diff --git a/TMessagesProj/src/main/res/layout/item_vote_list.xml b/TMessagesProj/src/main/res/layout/item_vote_list.xml
index 40450ddba..44b88cc8a 100644
--- a/TMessagesProj/src/main/res/layout/item_vote_list.xml
+++ b/TMessagesProj/src/main/res/layout/item_vote_list.xml
@@ -31,14 +31,14 @@
         android:id="@+id/item_option_tv_subtitle"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
+        android:layout_below="@+id/item_option_tv_title"
+        android:layout_toRightOf="@+id/item_option_iv_image"
         android:maxLines="2"
         android:paddingLeft="8dp"
-        android:paddingRight="22dp"
         android:text="Lorem ipsum dolor sit amet, 1 2 3 4 5 . 6 7 consectetuer  adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam "
         android:textAppearance="?android:attr/textAppearanceSmall"
-        android:layout_below="@+id/item_option_tv_title"
-        android:layout_toRightOf="@+id/item_option_iv_image"
-        android:layout_toLeftOf="@+id/item_option_cb" />
+        android:layout_toLeftOf="@+id/item_option_stacked_bar"
+        android:layout_toStartOf="@+id/item_option_stacked_bar" />
 
     <CheckBox
         android:id="@+id/item_option_cb"
@@ -50,7 +50,8 @@
         android:checked="false"
         android:paddingLeft="10dp"
         android:scaleX="2.3"
-        android:scaleY="2.3" />
+        android:scaleY="2.3"
+        />
 
     <TextView
         android:id="@+id/item_option_tv_vote_count"
@@ -58,21 +59,29 @@
         android:layout_height="wrap_content"
         android:layout_alignParentTop="true"
         android:layout_toRightOf="@+id/item_option_tv_title"
-        android:paddingRight="5dp"
         android:paddingLeft="5dp"
-        android:textStyle="italic"
-        android:text="(n)" />
+        android:paddingRight="5dp"
+        android:text="(n)"
+        android:textStyle="italic" />
 
 
     <ImageView
-        android:id="@+id/item_option_start_imageView"
+        android:id="@+id/item_option_star_imageView"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_alignParentTop="true"
-        android:paddingRight="5dp"
-        android:paddingLeft="5dp"
         android:layout_toRightOf="@+id/item_option_tv_vote_count"
         android:background="@drawable/assign_manager"
-         />
+        android:paddingLeft="5dp"
+        android:paddingRight="5dp" />
+
+    <LinearLayout
+        android:id="@+id/item_option_stacked_bar"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:orientation="horizontal"
+        android:paddingRight="22dp"
+        android:layout_toLeftOf="@+id/item_option_cb"
+        android:layout_alignBottom="@+id/item_option_cb" />
 
 </RelativeLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/new_decision_layout.xml b/TMessagesProj/src/main/res/layout/new_decision_layout.xml
new file mode 100644
index 000000000..3509b8411
--- /dev/null
+++ b/TMessagesProj/src/main/res/layout/new_decision_layout.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical" android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+</LinearLayout>
\ No newline at end of file
