diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
index b5ef20852..a94cf738b 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
@@ -69,28 +69,21 @@ public static int getSelectedColor() {
         return selectedColor;
     }
 
-    public static void reloadWallpaperNightModeChanged() {
+    public static void reloadWallpaperNightModeChanged(Context context) {
+        if (isCustomTheme()) {
+            return;
+        }
+
         cachedWallpaper = null;
-        serviceMessageColor = 0;
-        ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).edit().remove("serviceMessageColor").commit();
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
-        int selectedBackground = preferences.getInt("selectedBackground", 1000001);
-        selectedColor = preferences.getInt("selectedColor", 0);
-        serviceMessageColor = preferences.getInt("serviceMessageColor", 0);
-        serviceSelectedMessageColor = preferences.getInt("serviceSelectedMessageColor", 0);
-        if (selectedColor == 0) {
-            if (selectedBackground == 1000001) {
-                loadWallpaper();
-            }
-        }
+        loadWallpaper(context);
     }
 
     public static void reloadWallpaper() {
         cachedWallpaper = null;
         serviceMessageColor = 0;
         ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).edit().remove("serviceMessageColor").commit();
-        loadWallpaper();
+        loadWallpaper(ApplicationLoader.applicationContext);
     }
 
     private static void calcBackgroundColor() {
@@ -109,7 +102,7 @@ public static int getServiceSelectedMessageColor() {
         return serviceSelectedMessageColor;
     }
 
-    public static void loadWallpaper() {
+    public static void loadWallpaper(final Context context) {
         if (cachedWallpaper != null) {
             return;
         }
@@ -126,7 +119,7 @@ public void run() {
                         serviceSelectedMessageColor = preferences.getInt("serviceSelectedMessageColor", 0);
                         if (selectedColor == 0) {
                             if (selectedBackground == 1000001) {
-                                cachedWallpaper = applicationContext.getResources().getDrawable(R.drawable.background_hd);
+                                cachedWallpaper = context.getResources().getDrawable(R.drawable.background_hd);
                                 isCustomTheme = false;
                             } else {
                                 File toFile = new File(getFilesDirFixed(), "wallpaper.jpg");
@@ -134,7 +127,7 @@ public void run() {
                                     cachedWallpaper = Drawable.createFromPath(toFile.getAbsolutePath());
                                     isCustomTheme = true;
                                 } else {
-                                    cachedWallpaper = applicationContext.getResources().getDrawable(R.drawable.background_hd);
+                                    cachedWallpaper = context.getResources().getDrawable(R.drawable.background_hd);
                                     isCustomTheme = false;
                                 }
                             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
index edc87853e..3b128aafc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
@@ -81,9 +81,9 @@
     public static final int CHAT_EMPTY_VIEW_TEXT_COLOR = 0xffffffff;
     public static final int CHAT_SEARCH_COUNT_TEXT_COLOR = 0xff4e9ad4;
 
-    public static final int INAPP_PLAYER_PERFORMER_TEXT_COLOR = 0xff2f3438;
-    public static final int INAPP_PLAYER_TITLE_TEXT_COLOR = 0xff2f3438;
-    public static final int INAPP_PLAYER_BACKGROUND_COLOR = 0xffffffff;
+    public static int INAPP_PLAYER_PERFORMER_TEXT_COLOR = 0xff2f3438;
+    public static int INAPP_PLAYER_TITLE_TEXT_COLOR = 0xff2f3438;
+    public static int INAPP_PLAYER_BACKGROUND_COLOR = 0xffffffff;
 
     public static int REPLY_PANEL_NAME_TEXT_COLOR = 0xff3a8ccf;
     public static int REPLY_PANEL_MESSAGE_TEXT_COLOR = 0xff222222;
@@ -96,12 +96,12 @@
     public static int JOIN_SHEET_NAME_TEXT_COLOR = 0xff212121;
     public static int JOIN_SHEET_COUNT_TEXT_COLOR = 0xff999999;
 
-    public static final int SHARE_SHEET_COPY_TEXT_COLOR = 0xff3a8ccf;
-    public static final int SHARE_SHEET_SEND_TEXT_COLOR = 0xff3ec1f9;
-    public static final int SHARE_SHEET_SEND_DISABLED_TEXT_COLOR = 0xffb3b3b3;
-    public static final int SHARE_SHEET_EDIT_TEXT_COLOR = 0xff212121;
-    public static final int SHARE_SHEET_EDIT_PLACEHOLDER_TEXT_COLOR = 0xff979797;
-    public static final int SHARE_SHEET_BADGE_TEXT_COLOR = 0xffffffff;
+    public static int SHARE_SHEET_COPY_TEXT_COLOR = 0xff3a8ccf;
+    public static int SHARE_SHEET_SEND_TEXT_COLOR = 0xff3ec1f9;
+    public static int SHARE_SHEET_SEND_DISABLED_TEXT_COLOR = 0xffb3b3b3;
+    public static int SHARE_SHEET_EDIT_TEXT_COLOR = 0xff212121;
+    public static int SHARE_SHEET_EDIT_PLACEHOLDER_TEXT_COLOR = 0xff979797;
+    public static int SHARE_SHEET_BADGE_TEXT_COLOR = 0xffffffff;
 
     public static final int STICKERS_SHEET_TITLE_TEXT_COLOR = 0xff212121;
     public static final int STICKERS_SHEET_SEND_TEXT_COLOR = 0xff3a8ccf;
@@ -414,11 +414,26 @@ private static void resetColor(Context context) {
         int white = ContextCompat.getColor(context, R.color.material_white_1000);
         int primary = ContextCompat.getColor(context, R.color.primary_text);
         int secondary = ContextCompat.getColor(context, R.color.secondary_text);
+        int primary_inverse = ContextCompat.getColor(context, R.color.primary_text_inverse);
+        int disabled = ContextCompat.getColor(context, R.color.disabled_text);
         int forward = ContextCompat.getColor(context, R.color.message_forward_name);
+        int background = ContextCompat.getColor(context, R.color.background);
+        int out_media = ContextCompat.getColor(context, R.color.message_media);
 
         EmojiView.BACKGROUND_COLOR = ContextCompat.getColor(context, R.color.sticker_select_background);
         EmojiView.INDICATOR_COLOR = ContextCompat.getColor(context, R.color.sticker_indicator_background);
 
+        INAPP_PLAYER_PERFORMER_TEXT_COLOR = ContextCompat.getColor(context, R.color.in_app_player_title);
+        INAPP_PLAYER_TITLE_TEXT_COLOR = ContextCompat.getColor(context, R.color.in_app_player_title);
+        INAPP_PLAYER_BACKGROUND_COLOR = background;
+
+        SHARE_SHEET_COPY_TEXT_COLOR = 0xff3a8ccf;
+        SHARE_SHEET_SEND_TEXT_COLOR = 0xff3ec1f9;
+        SHARE_SHEET_SEND_DISABLED_TEXT_COLOR = disabled;
+        SHARE_SHEET_EDIT_TEXT_COLOR = primary;
+        SHARE_SHEET_EDIT_PLACEHOLDER_TEXT_COLOR = secondary;
+        SHARE_SHEET_BADGE_TEXT_COLOR = primary_inverse;
+
         JOIN_SHEET_NAME_TEXT_COLOR = primary;
 
         ALERT_PANEL_MESSAGE_TEXT_COLOR = secondary;
@@ -465,7 +480,7 @@ private static void resetColor(Context context) {
         MSG_IN_CONTACT_NAME_TEXT_COLOR = 0xff4e9ad4;
         MSG_OUT_CONTACT_NAME_TEXT_COLOR = forward;
         MSG_IN_CONTACT_PHONE_TEXT_COLOR = 0xff2f3438;
-        MSG_OUT_CONTACT_PHONE_TEXT_COLOR = 0xff354234;
+        MSG_OUT_CONTACT_PHONE_TEXT_COLOR = out_media;
         MSG_MEDIA_PROGRESS_COLOR = white;
         MSG_IN_AUDIO_PROGRESS_COLOR = white;
         MSG_OUT_AUDIO_PROGRESS_COLOR = 0xffefffde;
@@ -477,7 +492,7 @@ private static void resetColor(Context context) {
         MSG_IN_TIME_SELECTED_TEXT_COLOR = 0xff89b4c1;
         MSG_OUT_TIME_SELECTED_TEXT_COLOR = 0xff70b15c;
         MSG_IN_AUDIO_PERFORMER_TEXT_COLOR = 0xff2f3438;
-        MSG_OUT_AUDIO_PERFORMER_TEXT_COLOR = 0xff354234;
+        MSG_OUT_AUDIO_PERFORMER_TEXT_COLOR = out_media;
         MSG_IN_AUDIO_TITLE_TEXT_COLOR = 0xff4e9ad4;
         MSG_OUT_AUDIO_TITLE_TEXT_COLOR = forward;
         MSG_IN_AUDIO_DURATION_TEXT_COLOR = 0xffa1aab3;
@@ -518,7 +533,7 @@ private static void resetColor(Context context) {
         MSG_OUT_VENUE_INFO_SELECTED_TEXT_COLOR = 0xff65b05b;
         MSG_MEDIA_INFO_TEXT_COLOR = white;
         MSG_TEXT_COLOR = primary;
-        MSG_LINK_TEXT_COLOR = 0xff2678b6;
+        MSG_LINK_TEXT_COLOR = ContextCompat.getColor(context, R.color.msg_link_text);
         MSG_LINK_SELECT_BACKGROUND_COLOR = 0x3362a9e3;
         MSG_TEXT_SELECT_BACKGROUND_COLOR = 0x6662a9e3;
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
index fb41fc92f..ac2d9c2e4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
@@ -13,6 +13,7 @@
 import android.content.DialogInterface;
 import android.os.Build;
 import android.os.Bundle;
+import android.support.v4.content.ContextCompat;
 import android.view.Gravity;
 import android.view.MotionEvent;
 import android.view.View;
@@ -93,7 +94,7 @@ public void onItemClick(int id) {
         FrameLayout frameLayout = (FrameLayout) fragmentView;
 
         emptyTextView = new TextView(context);
-        emptyTextView.setTextColor(0xff808080);
+        emptyTextView.setTextColor(ContextCompat.getColor(context, R.color.disabled_text));
         emptyTextView.setTextSize(20);
         emptyTextView.setGravity(Gravity.CENTER);
         emptyTextView.setVisibility(View.INVISIBLE);
@@ -262,6 +263,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             if (type == 0) {
                 if (view == null) {
                     view = new UserCell(mContext, 1, 0, false);
+                    ((UserCell) view).setForeground(R.drawable.list_selector);
                 }
                 TLRPC.User user = MessagesController.getInstance().getUser(MessagesController.getInstance().blockedUsers.get(i));
                 if (user != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java
index e6aa905ae..15053f353 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java
@@ -30,8 +30,8 @@
     public DrawerActionCell(Context context) {
         super(context);
 
-        textView = new TextView(context, null, R.style.Theme_TMessages_TextView_Drawer);
-        //textView.setTextColor(0xff444444);
+        textView = new TextView(context);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.drawer_text));
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 15);
         textView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
         textView.setLines(1);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShareDialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShareDialogCell.java
index 1d5b16d01..69591ac0a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShareDialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShareDialogCell.java
@@ -10,6 +10,7 @@
 
 import android.content.Context;
 import android.os.Build;
+import android.support.v4.content.ContextCompat;
 import android.text.TextUtils;
 import android.util.TypedValue;
 import android.view.Gravity;
@@ -43,7 +44,7 @@ public ShareDialogCell(Context context) {
         addView(imageView, LayoutHelper.createFrame(54, 54, Gravity.TOP | Gravity.CENTER_HORIZONTAL, 0, 7, 0, 0));
 
         nameTextView = new TextView(context);
-        nameTextView.setTextColor(0xff212121);
+        nameTextView.setTextColor(ContextCompat.getColor(context, R.color.primary_text));
         nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 12);
         nameTextView.setMaxLines(2);
         nameTextView.setGravity(Gravity.TOP | Gravity.CENTER_HORIZONTAL);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
index 2ea556234..c0b3141b2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
@@ -14,9 +14,11 @@
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.SharedPreferences;
+import android.support.v4.content.ContextCompat;
 import android.text.Editable;
 import android.text.InputType;
 import android.text.TextWatcher;
+import android.util.Log;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.KeyEvent;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 8ab9a8150..d77c3f53b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -6831,7 +6831,6 @@ public void onResume() {
         super.onResume();
 
         SizeNotifierFrameLayout contentView = (SizeNotifierFrameLayout) fragmentView;
-        contentView.setBackgroundImage(ApplicationLoader.getCachedWallpaper());
 
         AndroidUtilities.requestAdjustResize(getParentActivity(), classGuid);
         MediaController.getInstance().startRaiseToEarSensors(this);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/BotKeyboardView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/BotKeyboardView.java
index 7c1bfa0d3..a4b0b3a97 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/BotKeyboardView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/BotKeyboardView.java
@@ -9,6 +9,7 @@
 package org.telegram.ui.Components;
 
 import android.content.Context;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.View;
@@ -48,7 +49,7 @@ public BotKeyboardView(Context context) {
         container.setOrientation(VERTICAL);
         scrollView.addView(container);
 
-        setBackgroundColor(0xfff5f6f7);
+        setBackgroundColor(ContextCompat.getColor(context, R.color.sticker_select_background));
     }
 
     public void setDelegate(BotKeyboardViewDelegate botKeyboardViewDelegate) {
@@ -102,10 +103,10 @@ public void setButtons(TLRPC.TL_replyKeyboardMarkup buttons) {
                     TLRPC.KeyboardButton button = row.buttons.get(b);
                     TextView textView = new TextView(getContext());
                     textView.setTag(button);
-                    textView.setTextColor(0xff36474f);
+                    textView.setTextColor(ContextCompat.getColor(getContext(), R.color.bot_keyboard_text));
                     textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
                     textView.setGravity(Gravity.CENTER);
-                    textView.setBackgroundResource(R.drawable.bot_keyboard_states);
+                    textView.setBackgroundResource(R.drawable.bot_keyboard_button2);
                     textView.setPadding(AndroidUtilities.dp(4), 0, AndroidUtilities.dp(4), 0);
                     textView.setText(Emoji.replaceEmoji(button.text, textView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(16), false));
                     layout.addView(textView, LayoutHelper.createLinear(0, LayoutHelper.MATCH_PARENT, weight, 0, 0, b != row.buttons.size() - 1 ? 10 : 0, 0));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java
index 762e63d65..af47f817f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java
@@ -13,6 +13,7 @@
 import android.graphics.*;
 import android.graphics.drawable.Drawable;
 import android.os.Build;
+import android.support.v4.content.ContextCompat;
 import android.text.Editable;
 import android.text.InputType;
 import android.text.TextUtils;
@@ -185,7 +186,7 @@ protected void onDraw(Canvas canvas) {
         containerView.setPadding(backgroundPaddingLeft, 0, backgroundPaddingLeft, 0);
 
         frameLayout = new FrameLayout(context);
-        frameLayout.setBackgroundColor(0xffffffff);
+        frameLayout.setBackgroundColor(ContextCompat.getColor(context, R.color.background));
         frameLayout.setOnTouchListener(new View.OnTouchListener() {
             @Override
             public boolean onTouch(View v, MotionEvent event) {
@@ -247,6 +248,7 @@ public void onClick(View v) {
         imageView.setImageResource(R.drawable.search_share);
         imageView.setScaleType(ImageView.ScaleType.CENTER);
         imageView.setPadding(0, AndroidUtilities.dp(2), 0, 0);
+        imageView.getDrawable().setTint(Theme.SHARE_SHEET_EDIT_PLACEHOLDER_TEXT_COLOR);
         frameLayout.addView(imageView, LayoutHelper.createFrame(48, 48, Gravity.LEFT | Gravity.CENTER_VERTICAL));
 
         nameTextView = new EditText(context);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/TwilightManager.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/TwilightManager.java
index 407cffc60..582fda6bd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/TwilightManager.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/TwilightManager.java
@@ -39,9 +39,9 @@
 
     private static final String TAG = "TwilightManager";
 
-    private static int SUNRISE = 6; // 6am
+    private static int SUNRISE_HOUR = 6; // 6am
     private static int SUNRISE_MINUTE = 0;
-    private static int SUNSET = 22; // 10pm
+    private static int SUNSET_HOUR = 22; // 10pm
     private static int SUNSET_MINUTE = 0;
 
     private static boolean useLocation;
@@ -53,12 +53,12 @@ public static void setUseLocation(boolean useLocation) {
     }
 
     public static void setSunrise(int hour, int minute) {
-        TwilightManager.SUNRISE = hour;
+        TwilightManager.SUNRISE_HOUR = hour;
         TwilightManager.SUNRISE_MINUTE = minute;
     }
 
     public static void setSunset(int hour, int minute) {
-        TwilightManager.SUNSET = hour;
+        TwilightManager.SUNSET_HOUR = hour;
         TwilightManager.SUNSET_MINUTE = minute;
     }
 
@@ -114,7 +114,11 @@ boolean isNight() {
             Calendar calendar = Calendar.getInstance();
             final int hour = calendar.get(Calendar.HOUR_OF_DAY);
             final int minute = calendar.get(Calendar.MINUTE);
-            return (hour < SUNRISE && minute < SUNRISE_MINUTE) || (hour >= SUNSET && minute >= SUNSET_MINUTE);
+            if (SUNSET_HOUR < SUNRISE_HOUR) {
+                return (hour < SUNRISE_HOUR && minute < SUNRISE_MINUTE) && (hour >= SUNSET_HOUR && minute >= SUNSET_MINUTE);
+            } else {
+                return (hour < SUNRISE_HOUR && minute < SUNRISE_MINUTE) || (hour >= SUNSET_HOUR && minute >= SUNSET_MINUTE);
+            }
         } else {
             updateState(location);
             return state.isNight;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index 7968a11b0..4dca796b1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -202,8 +202,7 @@ protected void onCreate(Bundle savedInstanceState) {
         ArchivedStickerSetCell.resetDivider();
         ActionBarPopupWindow.ActionBarPopupWindowLayout.resetDrawable();
         ContextLinkCell.resetPaint();
-
-        ApplicationLoader.reloadWallpaperNightModeChanged();
+        ApplicationLoader.reloadWallpaperNightModeChanged(this);
 
         if (UserConfig.passcodeHash.length() != 0 && UserConfig.appLocked) {
             UserConfig.lastPauseTime = ConnectionsManager.getInstance().getCurrentTime();
@@ -439,7 +438,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
         actionBarLayout.init(mainFragmentsStack);
         actionBarLayout.setDelegate(this);
 
-        ApplicationLoader.loadWallpaper();
+        //ApplicationLoader.loadWallpaper();
 
         passcodeView = new PasscodeView(this);
         drawerLayoutContainer.addView(passcodeView);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/NightModeActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/NightModeActivity.java
index 6fd3bd2a2..72cdfc9cd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/NightModeActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/NightModeActivity.java
@@ -37,8 +37,24 @@
     private TextSettingsCell sunriseCell;
     private TextSettingsCell sunsetCell;
 
+    private int[] hourOfDay, minute;
+    private static final int SUNRISE = 0;
+    private static final int SUNSET = 1;
+
+
     @Override
     public View createView(Context context) {
+        hourOfDay = new int[2];
+        minute = new int[2];
+
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+
+        hourOfDay[SUNRISE] = preferences.getInt("nightModeSunrise", 6);
+        minute[SUNRISE] = preferences.getInt("nightModeSunriseMinute", 0);
+
+        hourOfDay[SUNSET] = preferences.getInt("nightModeSunset", 22);
+        minute[SUNSET] = preferences.getInt("nightModeSunsetMinute", 0);
+
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("NightMode", R.string.NightMode));
@@ -64,7 +80,6 @@ public boolean onTouch(View v, MotionEvent event) {
 
         ((LinearLayout) fragmentView).setOrientation(LinearLayout.VERTICAL);
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
         int nightMode = preferences.getInt("nightMode", DayNightActivity.MODE_NIGHT_FOLLOW_SYSTEM);
 
         TextSettingsCell nightModeCell = new TextSettingsCell(context);
@@ -87,18 +102,18 @@ public boolean onTouch(View v, MotionEvent event) {
 
         CharSequence sunset, sunrise;
         if (DateFormat.is24HourFormat(context)) {
-            calendar.set(Calendar.HOUR_OF_DAY, preferences.getInt("nightModeSunrise", 6));
-            calendar.set(Calendar.MINUTE, preferences.getInt("nightModeSunriseMinute", 0));
+            calendar.set(Calendar.HOUR_OF_DAY, hourOfDay[SUNRISE]);
+            calendar.set(Calendar.MINUTE, minute[SUNRISE]);
             sunrise = DateFormat.format("HH:mm", calendar);
-            calendar.set(Calendar.HOUR_OF_DAY, preferences.getInt("nightModeSunset", 22));
-            calendar.set(Calendar.MINUTE, preferences.getInt("nightModeSunsetMinute", 0));
+            calendar.set(Calendar.HOUR_OF_DAY, hourOfDay[SUNSET]);
+            calendar.set(Calendar.MINUTE, minute[SUNSET]);
             sunset = DateFormat.format("HH:mm", calendar);
         } else {
-            calendar.set(Calendar.HOUR_OF_DAY, preferences.getInt("nightModeSunrise", 6));
-            calendar.set(Calendar.MINUTE, preferences.getInt("nightModeSunriseMinute", 0));
+            calendar.set(Calendar.HOUR_OF_DAY, hourOfDay[SUNRISE]);
+            calendar.set(Calendar.MINUTE, minute[SUNRISE]);
             sunrise = DateFormat.format("hh:mm a", calendar);
-            calendar.set(Calendar.HOUR_OF_DAY, preferences.getInt("nightModeSunset", 22));
-            calendar.set(Calendar.MINUTE, preferences.getInt("nightModeSunsetMinute", 0));
+            calendar.set(Calendar.HOUR_OF_DAY, hourOfDay[SUNSET]);
+            calendar.set(Calendar.MINUTE, minute[SUNSET]);
             sunset = DateFormat.format("hh:mm a", calendar);
         }
 
@@ -120,11 +135,9 @@ public boolean onTouch(View v, MotionEvent event) {
             @Override
             public void onClick(View view) {
                 BottomSheet.Builder builder = new BottomSheet.Builder(getParentActivity());
-                builder.setApplyTopPadding(false);
-                builder.setApplyBottomPadding(false);
                 builder.setItems(new String[]{
-                                getNightModeStatus(DayNightActivity.MODE_NIGHT_YES),
                                 getNightModeStatus(DayNightActivity.MODE_NIGHT_NO),
+                                getNightModeStatus(DayNightActivity.MODE_NIGHT_YES),
                                 getNightModeStatus(DayNightActivity.MODE_NIGHT_AUTO),
                                 getNightModeStatus(DayNightActivity.MODE_NIGHT_FOLLOW_SYSTEM),
                         },
@@ -135,8 +148,8 @@ public void onClick(DialogInterface dialogInterface, int i) {
                                 int nightMode = DayNightActivity.MODE_NIGHT_FOLLOW_SYSTEM;
 
                                 switch (i) {
-                                    case 0: nightMode = DayNightActivity.MODE_NIGHT_YES; break;
-                                    case 1: nightMode = DayNightActivity.MODE_NIGHT_NO; break;
+                                    case 0: nightMode = DayNightActivity.MODE_NIGHT_NO; break;
+                                    case 1: nightMode = DayNightActivity.MODE_NIGHT_YES; break;
                                     case 2: nightMode = DayNightActivity.MODE_NIGHT_AUTO; break;
                                     case 3: nightMode = DayNightActivity.MODE_NIGHT_FOLLOW_SYSTEM; break;
                                 }
@@ -157,14 +170,14 @@ public void onClick(DialogInterface dialogInterface, int i) {
         sunsetCell.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                showDataPickerDialog(false, 22);
+                showDataPickerDialog(false, hourOfDay[SUNSET], minute[SUNSET]);
             }
         });
 
         sunriseCell.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                showDataPickerDialog(true, 6);
+                showDataPickerDialog(true, hourOfDay[SUNRISE], minute[SUNRISE]);
             }
         });
 
@@ -173,15 +186,18 @@ public void onClick(View view) {
 
     private boolean isEditingSunrise;
 
-    private void showDataPickerDialog(boolean isEnd, int hour) {
+    private void showDataPickerDialog(boolean isEnd, int hour, int minute) {
         isEditingSunrise = isEnd;
-        showDialog(new TimePickerDialog(getParentActivity(), this, hour, 0, DateFormat.is24HourFormat(getParentActivity())));
+        showDialog(new TimePickerDialog(getParentActivity(), this, hour, minute, DateFormat.is24HourFormat(getParentActivity())));
     }
 
     @Override
     public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
         if (isEditingSunrise) {
+            this.hourOfDay[SUNRISE] = hourOfDay;
+            this.minute[SUNRISE] = minute;
+
             preferences.edit()
                     .putInt("nightModeSunrise", hourOfDay)
                     .putInt("nightModeSunriseMinute", minute)
@@ -189,6 +205,9 @@ public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
             sunriseCell.setValue(getFormattedTime(view.getContext(), hourOfDay, minute));
             TwilightManager.setSunrise(hourOfDay, minute);
         } else {
+            this.hourOfDay[SUNSET] = 0;
+            this.minute[SUNSET] = 0;
+
             preferences.edit()
                     .putInt("nightModeSunset", hourOfDay)
                     .putInt("nightModeSunsetMinute", minute)
diff --git a/TMessagesProj/src/main/res/color/bot_keyboard_button.xml b/TMessagesProj/src/main/res/color/bot_keyboard_button.xml
new file mode 100644
index 000000000..8fc1d96f0
--- /dev/null
+++ b/TMessagesProj/src/main/res/color/bot_keyboard_button.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:color="@color/bot_keyboard_background_pressed" android:state_pressed="true" />
+    <item android:color="@color/bot_keyboard_background_pressed" android:state_selected="true" />
+    <item android:color="@color/bot_keyboard_background" />
+</selector>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/drawable/bot_keyboard_button2.xml b/TMessagesProj/src/main/res/drawable/bot_keyboard_button2.xml
new file mode 100644
index 000000000..b42367595
--- /dev/null
+++ b/TMessagesProj/src/main/res/drawable/bot_keyboard_button2.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+       android:shape="rectangle">
+
+    <solid android:color="@color/bot_keyboard_button" />
+    <corners android:radius="4dp"/>
+</shape>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-night-v21/styles.xml b/TMessagesProj/src/main/res/values-night-v21/styles.xml
index 0b863b7ad..9ff80e672 100644
--- a/TMessagesProj/src/main/res/values-night-v21/styles.xml
+++ b/TMessagesProj/src/main/res/values-night-v21/styles.xml
@@ -10,8 +10,6 @@
         <item name="android:background">@drawable/edit_text</item>
     </style>
 
-    <style name="Theme.TMessages.TextView.Drawer" parent="@style/Theme.TMessages.TextView"/>
-
     <style name="Theme.TMessages.Dialog.Alert.Chat" parent="@style/Theme.TMessages.Dialog.Alert">
         <item name="android:colorBackground">@color/chat_list_background</item>
     </style>
diff --git a/TMessagesProj/src/main/res/values-night/colors.xml b/TMessagesProj/src/main/res/values-night/colors.xml
index b93ad9edf..b4adb8c6e 100644
--- a/TMessagesProj/src/main/res/values-night/colors.xml
+++ b/TMessagesProj/src/main/res/values-night/colors.xml
@@ -28,6 +28,8 @@
     <color name="secondary_text_inverse">#82000000</color>
     <color name="disabled_text_inverse">#80000000</color>
 
+    <color name="message_media">#add9a9</color>
+
     <color name="profile_color">#ff253b52</color>
 
     <color name="sticker_select_background">#ff303132</color>
@@ -41,7 +43,17 @@
 
     <color name="shared_photo_placeholder">@color/material_grey_850</color>
 
-    <color name="dialog_count_color">@color/material_grey_850</color>
+    <color name="dialog_count_color">@color/material_grey_800</color>
+
+    <color name="in_app_player_title">#b1c6d6</color>
+
+    <color name="msg_link_text">#3a96db</color>
+
+    <color name="drawer_text">@color/primary_text</color>
+
+    <color name="bot_keyboard_background">#424548</color>
+    <color name="bot_keyboard_background_pressed">#616467</color>
+    <color name="bot_keyboard_text">#c4e0ec</color>
 
     <color name="avatar_profile_back_red">#8f2e24</color>
     <color name="avatar_profile_back_origin">#a55927</color>
diff --git a/TMessagesProj/src/main/res/values-v21/styles.xml b/TMessagesProj/src/main/res/values-v21/styles.xml
index f3274f7b6..ffbb83c13 100644
--- a/TMessagesProj/src/main/res/values-v21/styles.xml
+++ b/TMessagesProj/src/main/res/values-v21/styles.xml
@@ -147,8 +147,4 @@
 
     <style name="Theme.TMessages.TextView" parent="android:Widget.TextView"/>
 
-    <style name="Theme.TMessages.TextView.Drawer" parent="@style/Theme.TMessages.TextView">
-        <item name="android:textColor">#ff444444</item>
-    </style>
-
 </resources>
diff --git a/TMessagesProj/src/main/res/values/colors.xml b/TMessagesProj/src/main/res/values/colors.xml
index e73150816..34e0f45bd 100755
--- a/TMessagesProj/src/main/res/values/colors.xml
+++ b/TMessagesProj/src/main/res/values/colors.xml
@@ -39,6 +39,7 @@
     <color name="switch_thumb_normal_material_light">#fff1f1f1</color>
 
     <color name="message_forward_name">#ff55ab4f</color>
+    <color name="message_media">#ff354234</color>
 
     <color name="profile_color">#ff598fba</color>
 
@@ -55,6 +56,16 @@
 
     <color name="dialog_count_color">#ffffffff</color>
 
+    <color name="in_app_player_title">#ff2f3438</color>
+
+    <color name="msg_link_text">#ff2678b6</color>
+
+    <color name="drawer_text">#ff444444</color>
+
+    <color name="bot_keyboard_background">#E4E7E9</color>
+    <color name="bot_keyboard_background_pressed">#CCD1D4</color>
+    <color name="bot_keyboard_text">#36474f</color>
+
     <!--<color name="avatar_red"></color>
     <color name="avatar_profile_red"></color>-->
     <color name="avatar_profile_back_red">#ffca6056</color>
