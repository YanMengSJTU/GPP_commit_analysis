diff --git a/TMessagesProj/jni/libtgvoip b/TMessagesProj/jni/libtgvoip
index 23ae67306..bfa1e6ab7 160000
--- a/TMessagesProj/jni/libtgvoip
+++ b/TMessagesProj/jni/libtgvoip
@@ -1 +1 @@
-Subproject commit 23ae67306d7fa1c4d5a8a9c8653f63ab93100f88
+Subproject commit bfa1e6ab76a467c6c6bff7eabb7c213acc7a1b34
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
index 9e711c9a6..29df30eec 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
@@ -3893,12 +3893,12 @@ private boolean convertVideo(final MessageObject messageObject) {
                             outputFormat.setInteger(MediaFormat.KEY_BIT_RATE, bitrate > 0 ? bitrate : 921600);
                             outputFormat.setInteger(MediaFormat.KEY_FRAME_RATE, framerate != 0 ? framerate : 25);
                             outputFormat.setInteger(MediaFormat.KEY_I_FRAME_INTERVAL, 10);
-                            if (Build.VERSION.SDK_INT >= 21) {
+                            /*if (Build.VERSION.SDK_INT >= 21) {
                                 outputFormat.setInteger(MediaFormat.KEY_PROFILE, MediaCodecInfo.CodecProfileLevel.AVCProfileHigh);
                                 if (Build.VERSION.SDK_INT >= 23) {
                                     outputFormat.setInteger(MediaFormat.KEY_LEVEL, MediaCodecInfo.CodecProfileLevel.AVCLevel5);
                                 }
-                            }
+                            }*/
                             if (Build.VERSION.SDK_INT < 18) {
                                 outputFormat.setInteger("stride", resultWidth + 32);
                                 outputFormat.setInteger("slice-height", resultHeight);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MusicPlayerService.java b/TMessagesProj/src/main/java/org/telegram/messenger/MusicPlayerService.java
index 8fee2de87..6de0361a1 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MusicPlayerService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MusicPlayerService.java
@@ -325,56 +325,57 @@ private void createNotification(MessageObject messageObject) {
         }
 
         if (remoteControlClient != null) {
-            int currentID=MediaController.getInstance().getPlayingMessageObject().getId();
-            if(notificationMessageID!=currentID){
-                notificationMessageID=currentID;
-                RemoteControlClient.MetadataEditor metadataEditor=remoteControlClient.editMetadata(true);
+            int currentID = MediaController.getInstance().getPlayingMessageObject().getId();
+            if (notificationMessageID != currentID) {
+                notificationMessageID = currentID;
+                RemoteControlClient.MetadataEditor metadataEditor = remoteControlClient.editMetadata(true);
                 metadataEditor.putString(MediaMetadataRetriever.METADATA_KEY_ARTIST, authorName);
                 metadataEditor.putString(MediaMetadataRetriever.METADATA_KEY_TITLE, songName);
-                if(audioInfo!=null && !TextUtils.isEmpty(audioInfo.getAlbum()))
+                if (audioInfo != null && !TextUtils.isEmpty(audioInfo.getAlbum()))
                     metadataEditor.putString(MediaMetadataRetriever.METADATA_KEY_ALBUM, audioInfo.getAlbum());
-                metadataEditor.putLong(MediaMetadataRetriever.METADATA_KEY_DURATION, MediaController.getInstance().getPlayingMessageObject().audioPlayerDuration*1000L);
-                if(audioInfo!=null && audioInfo.getCover()!=null){
-                    try{
+                metadataEditor.putLong(MediaMetadataRetriever.METADATA_KEY_DURATION, MediaController.getInstance().getPlayingMessageObject().audioPlayerDuration * 1000L);
+                if (audioInfo != null && audioInfo.getCover() != null) {
+                    try {
                         metadataEditor.putBitmap(RemoteControlClient.MetadataEditor.BITMAP_KEY_ARTWORK, audioInfo.getCover());
-                    }catch(Throwable e){
+                    } catch (Throwable e) {
                         FileLog.e(e);
                     }
                 }
                 metadataEditor.apply();
-                AndroidUtilities.runOnUIThread(new Runnable(){
+                AndroidUtilities.runOnUIThread(new Runnable() {
                     @Override
-                    public void run(){
-                    	if(remoteControlClient==null)
-                    	    return;
-                    	if(MediaController.getInstance().getPlayingMessageObject().audioPlayerDuration==C.TIME_UNSET){
-                    	    AndroidUtilities.runOnUIThread(this, 500);
-                    	    return;
+                    public void run() {
+                        if (remoteControlClient == null || MediaController.getInstance().getPlayingMessageObject() == null) {
+                            return;
+                        }
+                        if (MediaController.getInstance().getPlayingMessageObject().audioPlayerDuration == C.TIME_UNSET) {
+                            AndroidUtilities.runOnUIThread(this, 500);
+                            return;
                         }
-                        RemoteControlClient.MetadataEditor metadataEditor=remoteControlClient.editMetadata(false);
-                        metadataEditor.putLong(MediaMetadataRetriever.METADATA_KEY_DURATION, MediaController.getInstance().getPlayingMessageObject().audioPlayerDuration*1000L);
+                        RemoteControlClient.MetadataEditor metadataEditor = remoteControlClient.editMetadata(false);
+                        metadataEditor.putLong(MediaMetadataRetriever.METADATA_KEY_DURATION, MediaController.getInstance().getPlayingMessageObject().audioPlayerDuration * 1000L);
                         metadataEditor.apply();
-                        if(Build.VERSION.SDK_INT>=18){
+                        if (Build.VERSION.SDK_INT >= 18) {
                             remoteControlClient.setPlaybackState(MediaController.getInstance().isMessagePaused() ? RemoteControlClient.PLAYSTATE_PAUSED : RemoteControlClient.PLAYSTATE_PLAYING,
-                                    Math.max(MediaController.getInstance().getPlayingMessageObject().audioProgressSec*1000L, 100),
+                                    Math.max(MediaController.getInstance().getPlayingMessageObject().audioProgressSec * 1000L, 100),
                                     MediaController.getInstance().isMessagePaused() ? 0f : 1f);
-                        }else{
+                        } else {
                             remoteControlClient.setPlaybackState(MediaController.getInstance().isMessagePaused() ? RemoteControlClient.PLAYSTATE_PAUSED : RemoteControlClient.PLAYSTATE_PLAYING);
                         }
                     }
                 }, 1000);
             }
-            if(MediaController.getInstance().isDownloadingCurrentMessage()){
+            if (MediaController.getInstance().isDownloadingCurrentMessage()) {
                 remoteControlClient.setPlaybackState(RemoteControlClient.PLAYSTATE_BUFFERING);
-            }else{
-                RemoteControlClient.MetadataEditor metadataEditor=remoteControlClient.editMetadata(false);
-                metadataEditor.putLong(MediaMetadataRetriever.METADATA_KEY_DURATION, MediaController.getInstance().getPlayingMessageObject().audioPlayerDuration*1000L);
+            } else {
+                RemoteControlClient.MetadataEditor metadataEditor = remoteControlClient.editMetadata(false);
+                metadataEditor.putLong(MediaMetadataRetriever.METADATA_KEY_DURATION, MediaController.getInstance().getPlayingMessageObject().audioPlayerDuration * 1000L);
                 metadataEditor.apply();
-                if(Build.VERSION.SDK_INT>=18){
+                if (Build.VERSION.SDK_INT >= 18) {
                     remoteControlClient.setPlaybackState(MediaController.getInstance().isMessagePaused() ? RemoteControlClient.PLAYSTATE_PAUSED : RemoteControlClient.PLAYSTATE_PLAYING,
-                            Math.max(MediaController.getInstance().getPlayingMessageObject().audioProgressSec*1000L, 100),
+                            Math.max(MediaController.getInstance().getPlayingMessageObject().audioProgressSec * 1000L, 100),
                             MediaController.getInstance().isMessagePaused() ? 0f : 1f);
-                }else{
+                } else {
                     remoteControlClient.setPlaybackState(MediaController.getInstance().isMessagePaused() ? RemoteControlClient.PLAYSTATE_PAUSED : RemoteControlClient.PLAYSTATE_PLAYING);
                 }
             }
@@ -422,10 +423,10 @@ public void didReceivedNotification(int id, int account, Object... args) {
             } else {
                 stopSelf();
             }
-        }else if(id==NotificationCenter.messagePlayingDidSeek){
+        } else if (id == NotificationCenter.messagePlayingDidSeek) {
             MessageObject messageObject = MediaController.getInstance().getPlayingMessageObject();
-            if(remoteControlClient!=null && Build.VERSION.SDK_INT>=18){
-                long progress=Math.round(messageObject.audioPlayerDuration*(float)args[1])*1000L;
+            if (remoteControlClient != null && Build.VERSION.SDK_INT >= 18) {
+                long progress = Math.round(messageObject.audioPlayerDuration * (float) args[1]) * 1000L;
                 remoteControlClient.setPlaybackState(MediaController.getInstance().isMessagePaused() ? RemoteControlClient.PLAYSTATE_PAUSED : RemoteControlClient.PLAYSTATE_PLAYING,
                         progress,
                         MediaController.getInstance().isMessagePaused() ? 0f : 1f);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
index 7cdb571ca..06f2fa5c2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
@@ -105,7 +105,7 @@ public void onItemClick(int id) {
                 return;
             }
             Bundle args = new Bundle();
-            args.putInt("user_id", MessagesController.getInstance(currentAccount).blockedUsers.get(position));
+            args.putInt("user_id", MessagesController.getInstance(currentAccount).blockedUsers.keyAt(position));
             presentFragment(new ProfileActivity(args));
         });
 
@@ -113,7 +113,7 @@ public void onItemClick(int id) {
             if (position >= MessagesController.getInstance(currentAccount).blockedUsers.size() || getParentActivity() == null) {
                 return true;
             }
-            selectedUserId = MessagesController.getInstance(currentAccount).blockedUsers.get(position);
+            selectedUserId = MessagesController.getInstance(currentAccount).blockedUsers.keyAt(position);
 
             AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
             CharSequence[] items = new CharSequence[]{LocaleController.getString("Unblock", R.string.Unblock)};
@@ -219,7 +219,7 @@ public boolean isEnabled(RecyclerView.ViewHolder holder) {
         @Override
         public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
             if (holder.getItemViewType() == 0) {
-                TLRPC.User user = MessagesController.getInstance(currentAccount).getUser(MessagesController.getInstance(currentAccount).blockedUsers.get(position));
+                TLRPC.User user = MessagesController.getInstance(currentAccount).getUser(MessagesController.getInstance(currentAccount).blockedUsers.keyAt(position));
                 if (user != null) {
                     String number;
                     if (user.bot) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCell.java
index b9bf46f58..631daaca4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCell.java
@@ -88,7 +88,11 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
         valueTextView.layout(viewLeft, viewTop, viewLeft + valueTextView.getMeasuredWidth(), viewTop + valueTextView.getMeasuredHeight());
 
         viewTop = (height - textView.getTextHeight()) / 2;
-        viewLeft = !LocaleController.isRTL ? AndroidUtilities.dp(71) : AndroidUtilities.dp(24);
+        if (LocaleController.isRTL) {
+            viewLeft = getMeasuredWidth() - textView.getMeasuredWidth() - AndroidUtilities.dp(71);
+        } else {
+            viewLeft = AndroidUtilities.dp(71);
+        }
         textView.layout(viewLeft, viewTop, viewLeft + textView.getMeasuredWidth(), viewTop + textView.getMeasuredHeight());
 
         viewTop = AndroidUtilities.dp(5);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/InstantCameraView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/InstantCameraView.java
index 1a5f4613d..2203d7ba8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/InstantCameraView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/InstantCameraView.java
@@ -1941,12 +1941,12 @@ private void prepareEncoder() {
                 format.setInteger(MediaFormat.KEY_BIT_RATE, videoBitrate);
                 format.setInteger(MediaFormat.KEY_FRAME_RATE, FRAME_RATE);
                 format.setInteger(MediaFormat.KEY_I_FRAME_INTERVAL, IFRAME_INTERVAL);
-                if (Build.VERSION.SDK_INT >= 21) {
+                /*if (Build.VERSION.SDK_INT >= 21) {
                     format.setInteger(MediaFormat.KEY_PROFILE, MediaCodecInfo.CodecProfileLevel.AVCProfileHigh);
                     if (Build.VERSION.SDK_INT >= 23) {
                         format.setInteger(MediaFormat.KEY_LEVEL, MediaCodecInfo.CodecProfileLevel.AVCLevel5);
                     }
-                }
+                }*/
 
                 videoEncoder.configure(format, null, null, MediaCodec.CONFIGURE_FLAG_ENCODE);
                 surface = videoEncoder.createInputSurface();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ExternalActionActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ExternalActionActivity.java
index 05152e65d..35755592f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ExternalActionActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ExternalActionActivity.java
@@ -299,17 +299,15 @@ private boolean handleIntent(final Intent intent, final boolean isNew, final boo
             progressDialog.setCancelable(false);
 
             final int bot_id = intent.getIntExtra("bot_id", 0);
-            String _payload=intent.getStringExtra("nonce");
-            if(TextUtils.isEmpty(_payload))
-                _payload=intent.getStringExtra("payload");
-            final String payload = _payload;
+            final String nonce = intent.getStringExtra("nonce");
+            final String payload = intent.getStringExtra("payload");
             final TLRPC.TL_account_getAuthorizationForm req = new TLRPC.TL_account_getAuthorizationForm();
             req.bot_id = bot_id;
             req.scope = intent.getStringExtra("scope");
             req.public_key = intent.getStringExtra("public_key");
             final int[] requestId = {0};
 
-            if (bot_id == 0 || TextUtils.isEmpty(payload) || TextUtils.isEmpty(req.scope) || TextUtils.isEmpty(req.public_key)) {
+            if (bot_id == 0 || TextUtils.isEmpty(payload) && TextUtils.isEmpty(nonce) || TextUtils.isEmpty(req.scope) || TextUtils.isEmpty(req.public_key)) {
                 finish();
                 return false;
             }
@@ -328,7 +326,7 @@ private boolean handleIntent(final Intent intent, final boolean isNew, final boo
                         if (response1 != null) {
                             TLRPC.TL_account_password accountPassword = (TLRPC.TL_account_password) response1;
                             MessagesController.getInstance(intentAccount).putUsers(authorizationForm.users, false);
-                            PassportActivity fragment = new PassportActivity(PassportActivity.TYPE_PASSWORD, req.bot_id, req.scope, req.public_key, payload, null, authorizationForm, accountPassword);
+                            PassportActivity fragment = new PassportActivity(PassportActivity.TYPE_PASSWORD, req.bot_id, req.scope, req.public_key, payload, nonce, null, authorizationForm, accountPassword);
                             fragment.setNeedActivityResult(true);
                             if (AndroidUtilities.isTablet()) {
                                 layersActionBarLayout.addFragmentToStack(fragment);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index ae7e301ef..a604594b6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -1123,7 +1123,7 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
                                             auth = new HashMap<>();
                                             String scope = data.getQueryParameter("scope");
                                             if (!TextUtils.isEmpty(scope) && scope.startsWith("{") && scope.endsWith("}")) {
-                                                auth.put("payload", data.getQueryParameter("nonce"));
+                                                auth.put("nonce", data.getQueryParameter("nonce"));
                                             } else {
                                                 auth.put("payload", data.getQueryParameter("payload"));
                                             }
@@ -1204,7 +1204,7 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
                                         auth = new HashMap<>();
                                         String scope = data.getQueryParameter("scope");
                                         if (!TextUtils.isEmpty(scope) && scope.startsWith("{") && scope.endsWith("}")) {
-                                            auth.put("payload", data.getQueryParameter("nonce"));
+                                            auth.put("nonce", data.getQueryParameter("nonce"));
                                         } else {
                                             auth.put("payload", data.getQueryParameter("payload"));
                                         }
@@ -1767,6 +1767,7 @@ private void runLinkRequest(final int intentAccount, final String username, fina
                 return;
             }
             final String payload = auth.get("payload");
+            final String nonce = auth.get("nonce");
             final String callbackUrl = auth.get("callback_url");
             final TLRPC.TL_account_getAuthorizationForm req = new TLRPC.TL_account_getAuthorizationForm();
             req.bot_id = bot_id;
@@ -1785,7 +1786,7 @@ private void runLinkRequest(final int intentAccount, final String username, fina
                         if (response1 != null) {
                             TLRPC.TL_account_password accountPassword = (TLRPC.TL_account_password) response1;
                             MessagesController.getInstance(intentAccount).putUsers(authorizationForm.users, false);
-                            presentFragment(new PassportActivity(PassportActivity.TYPE_PASSWORD, req.bot_id, req.scope, req.public_key, payload, callbackUrl, authorizationForm, accountPassword));
+                            presentFragment(new PassportActivity(PassportActivity.TYPE_PASSWORD, req.bot_id, req.scope, req.public_key, payload, nonce, callbackUrl, authorizationForm, accountPassword));
                         }
                     }));
                 } else {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PassportActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PassportActivity.java
index a729d0f08..c84dc5ad3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PassportActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PassportActivity.java
@@ -189,6 +189,7 @@
     private int currentActivityType;
     private int currentBotId;
     private String currentPayload;
+    private String currentNonce;
     private boolean useCurrentValue;
     private String currentScope;
     private String currentCallbackUrl;
@@ -659,10 +660,11 @@ public int getObserverTag() {
         }
     }
 
-    public PassportActivity(int type, int botId, String scope, String publicKey, String payload, String callbackUrl, TLRPC.TL_account_authorizationForm form, TLRPC.TL_account_password accountPassword) {
+    public PassportActivity(int type, int botId, String scope, String publicKey, String payload, String nonce, String callbackUrl, TLRPC.TL_account_authorizationForm form, TLRPC.TL_account_password accountPassword) {
         this(type, form, accountPassword, null, null, null, null, null, null);
         currentBotId = botId;
         currentPayload = payload;
+        currentNonce = nonce;
         currentScope = scope;
         currentPublicKey = publicKey;
         currentCallbackUrl = callbackUrl;
@@ -1699,7 +1701,7 @@ private void openRequestInterface() {
                     } else {
                         type = TYPE_REQUEST;
                     }
-                    PassportActivity activity = new PassportActivity(type, currentBotId, currentScope, currentPublicKey, currentPayload, currentCallbackUrl, currentForm, currentPassword);
+                    PassportActivity activity = new PassportActivity(type, currentBotId, currentScope, currentPublicKey, currentPayload, currentNonce, currentCallbackUrl, currentForm, currentPassword);
                     activity.currentEmail = currentEmail;
                     activity.currentAccount = currentAccount;
                     activity.saltedPassword = saltedPassword;
@@ -2331,6 +2333,13 @@ public ValueToSend(TLRPC.TL_secureValue v, boolean s, boolean t) {
 
                 }
             }
+            if (currentNonce != null) {
+                try {
+                    result.put("nonce", currentNonce);
+                } catch (Exception ignore) {
+
+                }
+            }
             String json = result.toString();
 
             EncryptionResult encryptionResult = encryptData(AndroidUtilities.getStringBytes(json));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
index 5d268466e..bd207a973 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
@@ -386,7 +386,7 @@ public boolean supportsPredictiveItemAnimations() {
                 builder.setCustomView(linearLayout);
                 showDialog(builder.create());
             } else if (position == passportRow) {
-                presentFragment(new PassportActivity(PassportActivity.TYPE_PASSWORD, 0, "", "", null, null, null, null));
+                presentFragment(new PassportActivity(PassportActivity.TYPE_PASSWORD, 0, "", "", null, null, null, null, null));
             }
         });
 
