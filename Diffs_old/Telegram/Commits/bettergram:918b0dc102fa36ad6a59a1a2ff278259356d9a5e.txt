diff --git a/TMessagesProj/src/main/assets/dark.attheme b/TMessagesProj/src/main/assets/dark.attheme
index 5119d2d63..e8e2bbff4 100644
--- a/TMessagesProj/src/main/assets/dark.attheme
+++ b/TMessagesProj/src/main/assets/dark.attheme
@@ -278,4 +278,5 @@ topbar_inactiveColor=-10590359
 topbar_activeColor=-1
 bottombar_inactiveColor=-3552823
 bottombar_activeColor=-14407896
-bottombar_backgroundColor=-1
\ No newline at end of file
+bottombar_backgroundColor=-1
+dialog_activeStateBorderColor=-15329257
\ No newline at end of file
diff --git a/TMessagesProj/src/main/java/io/bettergram/tools/DialogsObject.java b/TMessagesProj/src/main/java/io/bettergram/tools/DialogsObject.java
index 0169eb871..e670adf9a 100644
--- a/TMessagesProj/src/main/java/io/bettergram/tools/DialogsObject.java
+++ b/TMessagesProj/src/main/java/io/bettergram/tools/DialogsObject.java
@@ -1,6 +1,5 @@
 package io.bettergram.tools;
 
-import android.util.Log;
 import org.telegram.messenger.DialogObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.UserConfig;
@@ -13,8 +12,6 @@ public static boolean isGroup(TLRPC.TL_dialog d) {
     }
 
     public static boolean isDirect(TLRPC.TL_dialog d) {
-//        int selfId = UserConfig.getInstance(UserConfig.selectedAccount).getClientUserId();
-//        int lower_id = getLowerId(d);
         return getHigherId(d) == 0;
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
index 0eee6da35..6ed023aa3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
@@ -300,6 +300,7 @@ public int getMinimumHeight() {
     public static Paint checkboxSquare_checkPaint;
     public static Paint checkboxSquare_backgroundPaint;
     public static Paint avatar_backgroundPaint;
+    public static Paint dialog_activeStatePaint;
 
     public static Drawable listSelector;
     public static Drawable avatar_broadcastDrawable;
@@ -1071,6 +1072,10 @@ public int getMinimumHeight() {
     public static final String key_topbar_activeColor = "topbar_activeColor";
     public static final String key_topbar_unreadCounterColor = "topbar_unreadCounterColor";
 
+    public static final String key_dialog_activeStateBorderColor = "dialog_activeStateBorderColor";
+    public static final String key_dialog_activeStateOnlineColor = "dialog_activeStateOnlineColor";
+    public static final String key_dialog_activeStateOfflineColor = "dialog_activeStateOfflineColor";
+
     //ununsed
     public static final String key_chat_outBroadcast = "chat_outBroadcast";
     public static final String key_chat_mediaBroadcast = "chat_mediaBroadcast";
@@ -1704,6 +1709,10 @@ public int getMinimumHeight() {
         defaultColors.put(key_topbar_activeColor, 0xffffffff);
         defaultColors.put(key_topbar_unreadCounterColor, 0xFFEB3E4A);
 
+        defaultColors.put(key_dialog_activeStateBorderColor, 0xFFFFFFFF);
+        defaultColors.put(key_dialog_activeStateOnlineColor, 0xff69bc35);
+        defaultColors.put(key_dialog_activeStateOfflineColor, 0xffcdcdcd);
+
         fallbackKeys.put(key_chat_adminText, key_chat_inTimeText);
         fallbackKeys.put(key_chat_adminSelectedText, key_chat_inTimeSelectedText);
         fallbackKeys.put(key_player_progressCachedBackground, key_player_progressBackground);
@@ -2813,6 +2822,10 @@ public static void createDialogsResources(Context context) {
             dialogs_pinnedDrawable = resources.getDrawable(R.drawable.list_pin);
             moveUpDrawable = resources.getDrawable(R.drawable.preview_open);
 
+            dialog_activeStatePaint = new Paint(Paint.ANTI_ALIAS_FLAG);
+            dialog_activeStatePaint.setAntiAlias(true);
+            dialog_activeStatePaint.setStyle(Paint.Style.FILL_AND_STROKE);
+
             applyDialogsTheme();
         }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
index 28cabb97d..43f2c0aca 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
@@ -12,32 +12,17 @@
 import android.graphics.Canvas;
 import android.graphics.RectF;
 import android.os.Build;
-import android.text.Layout;
-import android.text.SpannableStringBuilder;
-import android.text.Spanned;
-import android.text.StaticLayout;
-import android.text.TextPaint;
-import android.text.TextUtils;
+import android.text.*;
 import android.text.style.ForegroundColorSpan;
-
-import org.telegram.messenger.AndroidUtilities;
+import io.bettergram.messenger.R;
 import org.telegram.PhoneFormat.PhoneFormat;
-import org.telegram.messenger.ChatObject;
-import org.telegram.messenger.DataQuery;
-import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
-import org.telegram.messenger.UserObject;
-import org.telegram.messenger.FileLog;
+import org.telegram.messenger.*;
+import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
-import org.telegram.messenger.ContactsController;
-import org.telegram.messenger.Emoji;
-import org.telegram.messenger.MessagesController;
-import io.bettergram.messenger.R;
-import org.telegram.messenger.UserConfig;
-import org.telegram.messenger.ImageReceiver;
 import org.telegram.ui.ActionBar.Theme;
 import org.telegram.ui.Adapters.DialogsAdapter;
+import org.telegram.ui.Components.OnlineIndicator;
 import org.telegram.ui.Components.AvatarDrawable;
 import org.telegram.ui.Components.GroupCreateCheckBox;
 
@@ -80,6 +65,8 @@
     private ImageReceiver avatarImage = new ImageReceiver(this);
     private AvatarDrawable avatarDrawable = new AvatarDrawable();
 
+    private OnlineIndicator onlineIndicator = new OnlineIndicator(this);
+
     private TLRPC.User user = null;
     private TLRPC.Chat chat = null;
     private TLRPC.EncryptedChat encryptedChat = null;
@@ -148,6 +135,8 @@ public DialogCell(Context context, boolean needCheck) {
         Theme.createDialogsResources(context);
         avatarImage.setRoundRadius(AndroidUtilities.dp(26));
 
+        onlineIndicator.radius(avatarImage.getRoundRadius());
+
         if (needCheck) {
             checkBox = new GroupCreateCheckBox(context);
             checkBox.setVisibility(VISIBLE);
@@ -161,12 +150,18 @@ public void setDialog(TLRPC.TL_dialog dialog, int i, int type) {
         index = i;
         dialogsType = type;
         messageId = 0;
+
+        onlineIndicator.dialog(currentDialogId);
+
         update(0);
     }
 
     public void setDialog(CustomDialog dialog) {
         customDialog = dialog;
         messageId = 0;
+
+        onlineIndicator.dialog(customDialog.id);
+
         update(0);
     }
 
@@ -184,6 +179,9 @@ public void setDialog(long dialog_id, MessageObject messageObject, int date) {
         if (message != null) {
             lastSendState = message.messageOwner.send_state;
         }
+
+        onlineIndicator.dialog(dialog_id);
+
         update(0);
     }
 
@@ -757,6 +755,9 @@ public void buildLayout() {
             avatarLeft = getMeasuredWidth() - AndroidUtilities.dp(AndroidUtilities.isTablet() ? 65 : 61);
         }
         avatarImage.setImageCoords(avatarLeft, avatarTop, AndroidUtilities.dp(52), AndroidUtilities.dp(52));
+
+        onlineIndicator.offsetX(avatarLeft).offsetY(avatarTop);
+
         if (drawError) {
             int w = AndroidUtilities.dp(23 + 8);
             messageWidth -= w;
@@ -1055,6 +1056,15 @@ public void update(int mask) {
                 }
                 avatarDrawable.setInfo(chat);
             }
+
+            boolean isOnline = user != null
+                    && (user.id == UserConfig.getInstance(currentAccount).getClientUserId()
+                    || user.status != null
+                    && user.status.expires > ConnectionsManager.getInstance(currentAccount).getCurrentTime()
+                    || MessagesController.getInstance(currentAccount).onlinePrivacy.containsKey(user.id));
+
+            onlineIndicator.active(isOnline ? 1 : 0);
+
             avatarImage.setImage(photo, "50_50", avatarDrawable, null, 0);
         }
         if (getMeasuredWidth() != 0 || getMeasuredHeight() != 0) {
@@ -1181,6 +1191,8 @@ protected void onDraw(Canvas canvas) {
         }
 
         avatarImage.draw(canvas);
+
+        onlineIndicator.draw(canvas);
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/OnlineIndicator.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/OnlineIndicator.java
new file mode 100644
index 000000000..ed0738ab7
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/OnlineIndicator.java
@@ -0,0 +1,76 @@
+package org.telegram.ui.Components;
+
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.view.View;
+import org.telegram.messenger.AndroidUtilities;
+import org.telegram.ui.ActionBar.Theme;
+
+public class OnlineIndicator {
+
+    private final int strokeColor = Theme.getColor(Theme.key_dialog_activeStateBorderColor);
+    private final int borderWidth = AndroidUtilities.dp(2);
+
+    private Paint paint = Theme.dialog_activeStatePaint;
+
+    private View parent;
+
+    private int offsetX, offsetY;
+    private int radius;
+
+    private long dialog_id;
+
+    private int active = -1;
+
+    public OnlineIndicator(View parent) {
+        this.parent = parent;
+    }
+
+    public OnlineIndicator dialog(long dialog_id) {
+        this.dialog_id = dialog_id;
+        return this;
+    }
+
+    public OnlineIndicator offsetX(int offsetX) {
+        this.offsetX = offsetX;
+        return this;
+    }
+
+    public OnlineIndicator offsetY(int offsetY) {
+        this.offsetY = offsetY;
+        return this;
+    }
+
+    public OnlineIndicator radius(int radius) {
+        this.radius = radius;
+        return this;
+    }
+
+    public OnlineIndicator active(int active) {
+        this.active = active;
+        return this;
+    }
+
+    public void draw(Canvas canvas) {
+        if (dialog_id == 0) {
+            return;
+        }
+
+        if ((dialog_id >> 32) == 0 && active != -1) {
+            float x0 = radius;
+            float y0 = radius;
+            float dx = (float) (x0 + radius * Math.cos(40 * Math.PI / 180));
+            float dy = (float) (y0 + radius * Math.sin(40 * Math.PI / 180));
+            float circleSize = radius * 0.25f;
+            paint.setColor(strokeColor);
+            canvas.drawCircle(offsetX + dx, offsetY + dy, circleSize + borderWidth, paint);
+            paint.setColor(Theme.getColor(active == 1 ? Theme.key_dialog_activeStateOnlineColor : Theme.key_dialog_activeStateOfflineColor));
+            canvas.drawCircle(offsetX + dx, offsetY + dy, circleSize, paint);
+
+            if (parent == null) {
+                throw new NullPointerException("\"parent\" cannot be null.");
+            }
+            parent.invalidate();
+        }
+    }
+}
