diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index 99a6a4c9d..6d3d3c908 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -10,6 +10,7 @@ dependencies {
     compile 'net.hockeyapp.android:HockeySDK:3.5.0'
     compile 'com.googlecode.mp4parser:isoparser:1.0.6'
     compile 'org.apache.httpcomponents:httpmime:4.2.1'
+    compile 'com.github.bumptech.glide:glide:3.6.1'
 }
 
 android {
diff --git a/TMessagesProj/src/main/java/org/telegram/BotShop/BotItem.java b/TMessagesProj/src/main/java/org/telegram/BotShop/BotItem.java
new file mode 100644
index 000000000..debdf376d
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/BotShop/BotItem.java
@@ -0,0 +1,16 @@
+// Copyright (c) 2015 Yandex LLC. All rights reserved.
+// Author: Oleg Isupov <cypt4@yandex-team.ru>
+
+package org.telegram.BotShop;
+
+public class BotItem {
+    public final String name;
+    public final String description;
+    public final String imageUrl;
+
+    public BotItem(final String name, final String description, final String imageUrl) {
+        this.name = name;
+        this.description = description;
+        this.imageUrl = imageUrl;
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/BotShop/BotItems.java b/TMessagesProj/src/main/java/org/telegram/BotShop/BotItems.java
new file mode 100644
index 000000000..73bac08a0
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/BotShop/BotItems.java
@@ -0,0 +1,15 @@
+// Copyright (c) 2015 Yandex LLC. All rights reserved.
+// Author: Oleg Isupov <cypt4@yandex-team.ru>
+
+package org.telegram.BotShop;
+
+import java.util.Collections;
+import java.util.List;
+
+public class BotItems {
+    public final List<BotItem> mBotItemList;
+
+    public BotItems(final List<BotItem> botItemList) {
+        mBotItemList = Collections.unmodifiableList(botItemList);
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/BotShop/BotShopService.java b/TMessagesProj/src/main/java/org/telegram/BotShop/BotShopService.java
new file mode 100644
index 000000000..06e7f5f57
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/BotShop/BotShopService.java
@@ -0,0 +1,83 @@
+// Copyright (c) 2015 Yandex LLC. All rights reserved.
+// Author: Oleg Isupov <cypt4@yandex-team.ru>
+
+package org.telegram.BotShop;
+
+import android.content.Context;
+import android.util.Log;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+import org.telegram.messenger.volley.Network;
+import org.telegram.messenger.volley.Request;
+import org.telegram.messenger.volley.RequestQueue;
+import org.telegram.messenger.volley.Response;
+import org.telegram.messenger.volley.VolleyError;
+import org.telegram.messenger.volley.toolbox.BasicNetwork;
+import org.telegram.messenger.volley.toolbox.HurlStack;
+import org.telegram.messenger.volley.toolbox.JsonObjectRequest;
+import org.telegram.messenger.volley.toolbox.NoCache;
+
+import java.util.ArrayList;
+
+public class BotShopService {
+
+    private static final String url = "http://127.0.0.1:9999";
+
+    private RequestQueue mRequestQueue;
+    private JsonObjectRequest mLastRequest;
+
+    interface BotShopCallback {
+        void onSuccess(BotItems botItems);
+        void onFailure();
+    }
+
+    public BotShopService(final Context context) {
+        final Network network = new BasicNetwork(new HurlStack());
+        mRequestQueue = new RequestQueue(new NoCache(), network);
+    }
+
+    public boolean load(final BotShopCallback botShopCallback) {
+        if (mLastRequest != null) {
+            return false;
+        }
+
+        mLastRequest = new JsonObjectRequest(Request.Method.GET,
+                                                             url, null,
+                                                             new Response.Listener<JSONObject>() {
+
+            @Override
+            public void onResponse(JSONObject response) {
+                mLastRequest = null;
+                Log.d("FEN", response.toString());
+                final ArrayList<BotItem> botItems = new ArrayList<>();
+
+                try {
+                    final JSONArray items = response.getJSONArray("items");
+                    final int length = items.length();
+                    for (int i = 0; i < length; i++) {
+                        String name = response.getString("name");
+                        String image = response.getString("image");
+                        String description = response.getString("description");
+                        final BotItem botItem = new BotItem(name, image, description);
+                        botItems.add(botItem);
+                    }
+                    botShopCallback.onSuccess(new BotItems(botItems));
+                    return;
+                } catch (JSONException e) {
+                    botShopCallback.onFailure();
+                    return;
+                }
+            }
+        }, new Response.ErrorListener() {
+            @Override
+            public void onErrorResponse(VolleyError error) {
+                mLastRequest = null;
+                botShopCallback.onFailure();
+            }
+        });
+        mRequestQueue.add(mLastRequest);
+        return true;
+    }
+}
