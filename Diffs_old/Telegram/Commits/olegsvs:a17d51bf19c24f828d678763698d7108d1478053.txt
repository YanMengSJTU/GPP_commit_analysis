diff --git a/TMessagesProj/src/main/java/org/telegram/messenger_test/ApplicationLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger_test/ApplicationLoader.java
index ab556e3c5..1fa872022 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger_test/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger_test/ApplicationLoader.java
@@ -50,7 +50,7 @@
     public static volatile long mainInterfacePausedStageQueueTime;
 
     private static void convertConfig() {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("dataconfig", Context.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("dataconfig"+Change_user_helper.userTag, Context.MODE_PRIVATE);
         if (preferences.contains("currentDatacenterId")) {
             SerializedData buffer = new SerializedData(32 * 1024);
             buffer.writeInt32(2);
@@ -94,20 +94,21 @@ private static void convertConfig() {
 
     public static File getFilesDirFixed() {
         for (int a = 0; a < 10; a++) {
-            File path = ApplicationLoader.applicationContext.getFilesDir();
+            String tmp = ApplicationLoader.applicationContext.getFilesDir().toString()+Change_user_helper.userTag;
+            File path = new File(tmp);
             if (path != null) {
                 return path;
             }
         }
         try {
             ApplicationInfo info = applicationContext.getApplicationInfo();
-            File path = new File(info.dataDir, "files");
+            File path = new File(info.dataDir, "files"+Change_user_helper.userTag);
             path.mkdirs();
             return path;
         } catch (Exception e) {
             FileLog.e(e);
         }
-        return new File("/data/data/org.telegram.messenger/files");
+        return new File("/data/data/org.telegram.messenger/files"+Change_user_helper.userTag);
     }
 
     public static void postInitApplication() {
@@ -173,7 +174,7 @@ public static void postInitApplication() {
             systemVersion = "SDK Unknown";
         }
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         boolean enablePushConnection = preferences.getBoolean("pushConnection", true);
 
         MessagesController.getInstance();
@@ -227,7 +228,7 @@ public void run() {
     }*/
 
     public static void startPushService() {
-        SharedPreferences preferences = applicationContext.getSharedPreferences("Notifications", MODE_PRIVATE);
+        SharedPreferences preferences = applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, MODE_PRIVATE);
 
         if (preferences.getBoolean("pushService", true)) {
             applicationContext.startService(new Intent(applicationContext, NotificationsService.class));
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger_test/Change_user_helper.java b/TMessagesProj/src/main/java/org/telegram/messenger_test/Change_user_helper.java
new file mode 100644
index 000000000..8b04bd784
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/messenger_test/Change_user_helper.java
@@ -0,0 +1,9 @@
+package org.telegram.messenger_test;
+
+/**
+ * Created by oleg.svs on 21.05.2017.
+ */
+
+public class Change_user_helper {
+    public static String userTag = "user_0";
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger_test/ClearCacheService.java b/TMessagesProj/src/main/java/org/telegram/messenger_test/ClearCacheService.java
index d176ee1cb..ddbfe65ca 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger_test/ClearCacheService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger_test/ClearCacheService.java
@@ -29,7 +29,7 @@ public ClearCacheService() {
     protected void onHandleIntent(Intent intent) {
         ApplicationLoader.postInitApplication();
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         final int keepMedia = preferences.getInt("keep_media", 2);
         if (keepMedia == 2) {
             return;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger_test/ContactsController.java b/TMessagesProj/src/main/java/org/telegram/messenger_test/ContactsController.java
index 8c0ede68d..fbed65c33 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger_test/ContactsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger_test/ContactsController.java
@@ -118,7 +118,7 @@ public static ContactsController getInstance() {
     }
 
     public ContactsController() {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         if (preferences.getBoolean("needGetStatuses", false)) {
             reloadContactsStatuses();
         }
@@ -179,7 +179,7 @@ public void run() {
     }
 
     public void checkInviteText() {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         inviteText = preferences.getString("invitetext", null);
         int time = preferences.getInt("invitetexttime", 0);
         if (!updatingInviteText && (inviteText == null || time + 86400 < (int) (System.currentTimeMillis() / 1000))) {
@@ -195,7 +195,7 @@ public void run(TLObject response, TLRPC.TL_error error) {
                                 @Override
                                 public void run() {
                                     updatingInviteText = false;
-                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
                                     SharedPreferences.Editor editor = preferences.edit();
                                     editor.putString("invitetext", res.message);
                                     editor.putInt("invitetexttime", (int) (System.currentTimeMillis() / 1000));
@@ -1196,7 +1196,7 @@ public void run() {
 
     private void reloadContactsStatusesMaybe() {
         try {
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
             long lastReloadStatusTime = preferences.getLong("lastReloadStatusTime", 0);
             if (lastReloadStatusTime < System.currentTimeMillis() - 1000 * 60 * 60 * 24) {
                 reloadContactsStatuses();
@@ -1208,7 +1208,7 @@ private void reloadContactsStatusesMaybe() {
 
     private void saveContactsLoadTime() {
         try {
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
             preferences.edit().putLong("lastReloadStatusTime", System.currentTimeMillis()).commit();
         } catch (Exception e) {
             FileLog.e(e);
@@ -1823,7 +1823,7 @@ public void run() {
     public void reloadContactsStatuses() {
         saveContactsLoadTime();
         MessagesController.getInstance().clearFullUsers();
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         final SharedPreferences.Editor editor = preferences.edit();
         editor.putBoolean("needGetStatuses", true).commit();
         TLRPC.TL_contacts_getStatuses req = new TLRPC.TL_contacts_getStatuses();
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger_test/FileUploadOperation.java b/TMessagesProj/src/main/java/org/telegram/messenger_test/FileUploadOperation.java
index 19438f09e..efdee8c04 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger_test/FileUploadOperation.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger_test/FileUploadOperation.java
@@ -97,7 +97,7 @@ public void start() {
         Utilities.stageQueue.postRunnable(new Runnable() {
             @Override
             public void run() {
-                preferences = ApplicationLoader.applicationContext.getSharedPreferences("uploadinfo", Activity.MODE_PRIVATE);
+                preferences = ApplicationLoader.applicationContext.getSharedPreferences("uploadinfo"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
                 for (int a = 0; a < maxRequestsCount; a++) {
                     startUploadRequest();
                 }
@@ -119,7 +119,7 @@ public void cancel() {
 
     private void cleanup() {
         if (preferences == null) {
-            preferences = ApplicationLoader.applicationContext.getSharedPreferences("uploadinfo", Activity.MODE_PRIVATE);
+            preferences = ApplicationLoader.applicationContext.getSharedPreferences("uploadinfo"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         }
         preferences.edit().remove(fileKey + "_time").
                 remove(fileKey + "_size").
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger_test/LocaleController.java b/TMessagesProj/src/main/java/org/telegram/messenger_test/LocaleController.java
index fa6a9c968..523b85124 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger_test/LocaleController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger_test/LocaleController.java
@@ -255,7 +255,7 @@ public int compare(LocaleController.LocaleInfo o, LocaleController.LocaleInfo o2
         boolean override = false;
 
         try {
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
             String lang = preferences.getString("language", null);
             if (lang != null) {
                 currentInfo = languagesDict.get(lang);
@@ -423,7 +423,7 @@ public int compare(LocaleController.LocaleInfo o, LocaleController.LocaleInfo o2
     }
 
     private void saveOtherLanguages() {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("langconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("langconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         String locales = "";
         for (LocaleInfo localeInfo : otherLanguages) {
@@ -457,7 +457,7 @@ public boolean deleteLanguage(LocaleInfo localeInfo) {
     }
 
     private void loadOtherLanguages() {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("langconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("langconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         String locales = preferences.getString("locales", null);
         if (locales == null || locales.length() == 0) {
             return;
@@ -547,7 +547,7 @@ public void applyLanguage(LocaleInfo localeInfo, boolean override, boolean fromF
                     if (override) {
                         languageOverride = localeInfo.shortName;
 
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         editor.putString("language", localeInfo.shortName);
                         editor.commit();
@@ -556,7 +556,7 @@ public void applyLanguage(LocaleInfo localeInfo, boolean override, boolean fromF
             } else {
                 newLocale = systemDefaultLocale;
                 languageOverride = null;
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 editor.remove("language");
                 editor.commit();
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger_test/MediaController.java b/TMessagesProj/src/main/java/org/telegram/messenger_test/MediaController.java
index e3deafd5a..e5abbbec0 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger_test/MediaController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger_test/MediaController.java
@@ -617,7 +617,7 @@ public MediaController() {
         playerQueue = new DispatchQueue("playerQueue");
         fileDecodingQueue = new DispatchQueue("fileDecodingQueue");
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         mobileDataDownloadMask = preferences.getInt("mobileDataDownloadMask", AUTODOWNLOAD_MASK_PHOTO | AUTODOWNLOAD_MASK_AUDIO | AUTODOWNLOAD_MASK_MUSIC | AUTODOWNLOAD_MASK_GIF);
         wifiDownloadMask = preferences.getInt("wifiDownloadMask", AUTODOWNLOAD_MASK_PHOTO | AUTODOWNLOAD_MASK_AUDIO | AUTODOWNLOAD_MASK_MUSIC | AUTODOWNLOAD_MASK_GIF);
         roamingDownloadMask = preferences.getInt("roamingDownloadMask", 0);
@@ -2486,7 +2486,7 @@ public int getRepeatMode() {
 
     public void toggleShuffleMusic() {
         shuffleMusic = !shuffleMusic;
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putBoolean("shuffleMusic", shuffleMusic);
         editor.commit();
@@ -2510,7 +2510,7 @@ public void toggleRepeatMode() {
         if (repeatMode > 2) {
             repeatMode = 0;
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putInt("repeatMode", repeatMode);
         editor.commit();
@@ -3078,7 +3078,7 @@ public static String copyFileToCache(Uri uri, String ext) {
 
     public void toggleSaveToGallery() {
         saveToGallery = !saveToGallery;
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putBoolean("save_gallery", saveToGallery);
         editor.commit();
@@ -3087,7 +3087,7 @@ public void toggleSaveToGallery() {
 
     public void toggleAutoplayGifs() {
         autoplayGifs = !autoplayGifs;
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putBoolean("autoplay_gif", autoplayGifs);
         editor.commit();
@@ -3095,7 +3095,7 @@ public void toggleAutoplayGifs() {
 
     public void toogleRaiseToSpeak() {
         raiseToSpeak = !raiseToSpeak;
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putBoolean("raise_to_speak", raiseToSpeak);
         editor.commit();
@@ -3103,7 +3103,7 @@ public void toogleRaiseToSpeak() {
 
     public void toggleCustomTabs() {
         customTabs = !customTabs;
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putBoolean("custom_tabs", customTabs);
         editor.commit();
@@ -3111,7 +3111,7 @@ public void toggleCustomTabs() {
 
     public void toggleDirectShare() {
         directShare = !directShare;
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putBoolean("direct_share", directShare);
         editor.commit();
@@ -3660,7 +3660,7 @@ private boolean convertVideo(final MessageObject messageObject) {
             }
         }
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("videoconvert", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("videoconvert"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         File inputFile = new File(videoPath);
         if (messageObject.getId() != 0) {
             boolean isPreviousOk = preferences.getBoolean("isPreviousOk", true);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger_test/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger_test/MessagesController.java
index 4cf1e6b12..127f7e037 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger_test/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger_test/MessagesController.java
@@ -38,6 +38,7 @@
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.ChatActivity;
 import org.telegram.ui.Components.AlertsCreator;
+import org.telegram.ui.LoginActivity;
 import org.telegram.ui.ProfileActivity;
 
 import java.util.ArrayList;
@@ -270,10 +271,10 @@ public MessagesController() {
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileDidFailedLoad);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.messageReceivedByServer);
         addSupportUser();
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         enableJoined = preferences.getBoolean("EnableContactJoined", true);
 
-        preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         secretWebpagePreview = preferences.getInt("secretWebpage2", 2);
         maxGroupCount = preferences.getInt("maxGroupCount", 200);
         maxMegagroupCount = preferences.getInt("maxMegagroupCount", 1000);
@@ -343,7 +344,7 @@ public void run() {
                 callPacketTimeout = config.call_packet_timeout_ms;
                 maxPinnedDialogsCount = config.pinned_dialogs_count_max;
 
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 editor.putInt("maxGroupCount", maxGroupCount);
                 //editor.putInt("maxBroadcastCount", maxBroadcastCount);
@@ -1288,7 +1289,7 @@ public void hideReportSpam(final long dialogId, TLRPC.User currentUser, TLRPC.Ch
         if (currentUser == null && currentChat == null) {
             return;
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putInt("spam3_" + dialogId, 1);
         editor.commit();
@@ -1312,7 +1313,7 @@ public void reportSpam(final long dialogId, TLRPC.User currentUser, TLRPC.Chat c
         if (currentUser == null && currentChat == null && currentEncryptedChat == null) {
             return;
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putInt("spam3_" + dialogId, 1);
         editor.commit();
@@ -1360,7 +1361,7 @@ public void loadPeerSettings(TLRPC.User currentUser, TLRPC.Chat currentChat) {
             return;
         }
         loadingPeerSettings.put(dialogId, true);
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         if (preferences.getInt("spam3_" + dialogId, 0) == 1) {
             return;
         }
@@ -1379,7 +1380,7 @@ public void run(TLObject response, TLRPC.TL_error error) {
                         @Override
                         public void run() {
                             loadingPeerSettings.remove(dialogId);
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
                             SharedPreferences.Editor editor = preferences.edit();
                             editor.remove("spam_" + dialogId);
                             editor.putInt("spam3_" + dialogId, 1);
@@ -1405,7 +1406,7 @@ public void run() {
                         loadingPeerSettings.remove(dialogId);
                         if (response != null) {
                             TLRPC.TL_peerSettings res = (TLRPC.TL_peerSettings) response;
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
                             SharedPreferences.Editor editor = preferences.edit();
                             if (!res.report_spam) {
                                 editor.putInt("spam3_" + dialogId, 1);
@@ -3394,7 +3395,7 @@ public void run() {
     }
 
     private void applyDialogNotificationsSettings(long dialog_id, TLRPC.PeerNotifySettings notify_settings) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         int currentValue = preferences.getInt("notify2_" + dialog_id, 0);
         int currentValue2 = preferences.getInt("notifyuntil_" + dialog_id, 0);
         SharedPreferences.Editor editor = preferences.edit();
@@ -3449,7 +3450,7 @@ private void applyDialogsNotificationsSettings(ArrayList<TLRPC.TL_dialog> dialog
             TLRPC.TL_dialog dialog = dialogs.get(a);
             if (dialog.peer != null && dialog.notify_settings instanceof TLRPC.TL_peerNotifySettings) {
                 if (editor == null) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     editor = preferences.edit();
                 }
                 int dialog_id;
@@ -4597,11 +4598,11 @@ public void run(TLObject response, TLRPC.TL_error error) {
     }
 
     public void performLogout(boolean byUser) {
-        SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE).edit();
+        SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE).edit();
         editor.clear().commit();
-        editor = ApplicationLoader.applicationContext.getSharedPreferences("emoji", Activity.MODE_PRIVATE).edit();
+        editor = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+Change_user_helper.userTag, Activity.MODE_PRIVATE).edit();
         editor.putLong("lastGifLoadTime", 0).putLong("lastStickersLoadTime", 0).commit();
-        editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).edit();
+        editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE).edit();
         editor.remove("gifhint").commit();
 
         if (byUser) {
@@ -7294,7 +7295,7 @@ public void run() {
                             TLRPC.TL_updateNotifySettings updateNotifySettings = (TLRPC.TL_updateNotifySettings) update;
                             if (update.notify_settings instanceof TLRPC.TL_peerNotifySettings && updateNotifySettings.peer instanceof TLRPC.TL_notifyPeer) {
                                 if (editor == null) {
-                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
                                     editor = preferences.edit();
                                 }
                                 long dialog_id;
@@ -7363,10 +7364,10 @@ public void run() {
                         } else if (update instanceof TLRPC.TL_updateNewStickerSet) {
                             StickersQuery.addNewStickerSet(update.stickerset);
                         } else if (update instanceof TLRPC.TL_updateSavedGifs) {
-                            SharedPreferences.Editor editor2 = ApplicationLoader.applicationContext.getSharedPreferences("emoji", Activity.MODE_PRIVATE).edit();
+                            SharedPreferences.Editor editor2 = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+Change_user_helper.userTag, Activity.MODE_PRIVATE).edit();
                             editor2.putLong("lastGifLoadTime", 0).commit();
                         } else if (update instanceof TLRPC.TL_updateRecentStickers) {
-                            SharedPreferences.Editor editor2 = ApplicationLoader.applicationContext.getSharedPreferences("emoji", Activity.MODE_PRIVATE).edit();
+                            SharedPreferences.Editor editor2 = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+Change_user_helper.userTag, Activity.MODE_PRIVATE).edit();
                             editor2.putLong("lastStickersLoadTime", 0).commit();
                         } else if (update instanceof TLRPC.TL_updateDraftMessage) {
                             hasDraftUpdates = true;
@@ -7663,7 +7664,7 @@ private boolean isNotifySettingsMuted(TLRPC.PeerNotifySettings settings) {
     }
 
     public boolean isDialogMuted(long dialog_id) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         int mute_type = preferences.getInt("notify2_" + dialog_id, 0);
         if (mute_type == 2) {
             return true;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger_test/MessagesStorage.java b/TMessagesProj/src/main/java/org/telegram/messenger_test/MessagesStorage.java
index d753bee85..d4f9147c2 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger_test/MessagesStorage.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger_test/MessagesStorage.java
@@ -606,7 +606,7 @@ private void fixNotificationSettings() {
             public void run() {
                 try {
                     HashMap<Long, Long> ids = new HashMap<>();
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Context.MODE_PRIVATE);
                     Map<String, ?> values = preferences.getAll();
                     for (Map.Entry<String, ?> entry : values.entrySet()) {
                         String key = entry.getKey();
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger_test/MusicBrowserService.java b/TMessagesProj/src/main/java/org/telegram/messenger_test/MusicBrowserService.java
index 24fe4f840..10dbfdbbc 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger_test/MusicBrowserService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger_test/MusicBrowserService.java
@@ -88,7 +88,7 @@ public void onCreate() {
         super.onCreate();
         ApplicationLoader.postInitApplication();
 
-        lastSelectedDialog = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE).getInt("auto_lastSelectedDialog", 0);
+        lastSelectedDialog = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE).getInt("auto_lastSelectedDialog", 0);
 
         mediaSession = new MediaSession(this, "MusicService");
         setSessionToken(mediaSession.getSessionToken());
@@ -396,7 +396,7 @@ public void onPlayFromMediaId(String mediaId, Bundle extras) {
                     return;
                 }
                 lastSelectedDialog = did;
-                ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE).edit().putInt("auto_lastSelectedDialog", did).commit();
+                ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE).edit().putInt("auto_lastSelectedDialog", did).commit();
                 MediaController.getInstance().setPlaylist(arrayList, arrayList.get(id), false);
                 mediaSession.setQueue(arrayList1);
                 if (did > 0) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger_test/NotificationDismissReceiver.java b/TMessagesProj/src/main/java/org/telegram/messenger_test/NotificationDismissReceiver.java
index 9cf2b4895..2e0133b4f 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger_test/NotificationDismissReceiver.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger_test/NotificationDismissReceiver.java
@@ -17,7 +17,7 @@
 
     @Override
     public void onReceive(Context context, Intent intent) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Context.MODE_PRIVATE);
         preferences.edit().putInt("dismissDate", intent.getIntExtra("messageDate", 0)).commit();
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger_test/NotificationsController.java b/TMessagesProj/src/main/java/org/telegram/messenger_test/NotificationsController.java
index f54cee47a..1b354725b 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger_test/NotificationsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger_test/NotificationsController.java
@@ -98,7 +98,7 @@ public static NotificationsController getInstance() {
 
     public NotificationsController() {
         notificationManager = NotificationManagerCompat.from(ApplicationLoader.applicationContext);
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Context.MODE_PRIVATE);
         inChatSoundEnabled = preferences.getBoolean("EnableInChatSound", true);
 
         try {
@@ -163,7 +163,7 @@ public void run() {
                     FileLog.e(e);
                 }
                 setBadge(0);
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Context.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 editor.clear();
                 editor.commit();
@@ -222,7 +222,7 @@ public void run() {
                     if (!ApplicationLoader.mainInterfacePaused) {
                         return;
                     }
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Context.MODE_PRIVATE);
 
                     boolean notifyDisabled = false;
                     int needVibrate = 0;
@@ -374,7 +374,7 @@ public void removeDeletedMessagesFromNotifications(final SparseArray<ArrayList<I
             @Override
             public void run() {
                 int old_unread_count = total_unread_count;
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Context.MODE_PRIVATE);
                 for (int a = 0; a < deletedMessages.size(); a++) {
                     int key = deletedMessages.keyAt(a);
                     long dialog_id = -key;
@@ -543,7 +543,7 @@ public void run() {
 
                 int oldCount = popupArray.size();
                 HashMap<Long, Boolean> settingsCache = new HashMap<>();
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Context.MODE_PRIVATE);
                 boolean allowPinned = preferences.getBoolean("PinnedMessages", true);
                 int popup = 0;
 
@@ -641,7 +641,7 @@ public void processDialogsUpdateRead(final HashMap<Long, Integer> dialogsToUpdat
             @Override
             public void run() {
                 int old_unread_count = total_unread_count;
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Context.MODE_PRIVATE);
                 for (HashMap.Entry<Long, Integer> entry : dialogsToUpdate.entrySet()) {
                     long dialog_id = entry.getKey();
 
@@ -739,7 +739,7 @@ public void run() {
                 pushMessagesDict.clear();
                 total_unread_count = 0;
                 personal_count = 0;
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Context.MODE_PRIVATE);
                 HashMap<Long, Boolean> settingsCache = new HashMap<>();
 
                 if (messages != null) {
@@ -883,7 +883,7 @@ private String getStringForMessage(MessageObject messageObject, boolean shortMes
             msg = LocaleController.getString("YouHaveNewMessage", R.string.YouHaveNewMessage);
         } else {
             if (chat_id == 0 && from_id != 0) {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Context.MODE_PRIVATE);
                 if (preferences.getBoolean("EnablePreviewAll", true)) {
                     if (messageObject.messageOwner instanceof TLRPC.TL_messageService) {
                         if (messageObject.messageOwner.action instanceof TLRPC.TL_messageActionUserJoined) {
@@ -961,7 +961,7 @@ private String getStringForMessage(MessageObject messageObject, boolean shortMes
                     msg = LocaleController.formatString("NotificationMessageNoText", R.string.NotificationMessageNoText, name);
                 }
             } else if (chat_id != 0) {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Context.MODE_PRIVATE);
                 if (preferences.getBoolean("EnablePreviewGroup", true)) {
                     if (messageObject.messageOwner instanceof TLRPC.TL_messageService) {
                         if (messageObject.messageOwner.action instanceof TLRPC.TL_messageActionChatAddUser) {
@@ -1337,7 +1337,7 @@ private String getStringForMessage(MessageObject messageObject, boolean shortMes
     private void scheduleNotificationRepeat() {
         try {
             PendingIntent pintent = PendingIntent.getService(ApplicationLoader.applicationContext, 0, new Intent(ApplicationLoader.applicationContext, NotificationRepeat.class), 0);
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
             int minutes = preferences.getInt("repeat_messages", 60);
             if (minutes > 0 && personal_count > 0) {
                 alarmManager.set(AlarmManager.ELAPSED_REALTIME_WAKEUP, SystemClock.elapsedRealtime() + minutes * 60 * 1000, pintent);
@@ -1435,7 +1435,7 @@ private void playInChatSound() {
         }
 
         try {
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Context.MODE_PRIVATE);
             int notifyOverride = getNotifyOverride(preferences, opened_dialog_id);
             if (notifyOverride == 2) {
                 return;
@@ -1519,7 +1519,7 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
             ConnectionsManager.getInstance().resumeNetworkMaybe();
 
             MessageObject lastMessageObject = pushMessages.get(0);
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Context.MODE_PRIVATE);
             int dismissDate = preferences.getInt("dismissDate", 0);
             if (lastMessageObject.messageOwner.date <= dismissDate) {
                 dismissNotification();
@@ -2144,7 +2144,7 @@ public static void updateServerNotificationsSettings(long dialog_id) {
         if ((int) dialog_id == 0) {
             return;
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         TLRPC.TL_account_updateNotifySettings req = new TLRPC.TL_account_updateNotifySettings();
         req.settings = new TLRPC.TL_inputPeerNotifySettings();
         req.settings.sound = "default";
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger_test/NotificationsService.java b/TMessagesProj/src/main/java/org/telegram/messenger_test/NotificationsService.java
index 19943f1df..48c74920b 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger_test/NotificationsService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger_test/NotificationsService.java
@@ -34,7 +34,7 @@ public IBinder onBind(Intent intent) {
     public void onDestroy() {
         FileLog.e("service destroyed");
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, MODE_PRIVATE);
         if (preferences.getBoolean("pushService", true)) {
             Intent intent = new Intent("org.telegram.start");
             sendBroadcast(intent);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger_test/SendMessagesHelper.java b/TMessagesProj/src/main/java/org/telegram/messenger_test/SendMessagesHelper.java
index 09079e120..e22af41f1 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger_test/SendMessagesHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger_test/SendMessagesHelper.java
@@ -843,7 +843,7 @@ public void sendMessage(ArrayList<MessageObject> messages, final long peer) {
                     final TLRPC.TL_messages_forwardMessages req = new TLRPC.TL_messages_forwardMessages();
                     req.to_peer = inputPeer;
                     if (req.to_peer instanceof TLRPC.TL_inputPeerChannel) {
-                        req.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
+                        req.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
                     }
                     if (msgObj.messageOwner.to_id instanceof TLRPC.TL_peerChannel) {
                         TLRPC.Chat chat = MessagesController.getInstance().getChat(msgObj.messageOwner.to_id.channel_id);
@@ -1147,7 +1147,7 @@ public void run() {
                                         if (game == null) {
                                             return;
                                         }
-                                        parentFragment.showOpenGameAlert(game, messageObject, res.url, !verified && ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE).getBoolean("askgame_" + uid, true), uid);
+                                        parentFragment.showOpenGameAlert(game, messageObject, res.url, !verified && ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE).getBoolean("askgame_" + uid, true), uid);
                                     } else {
                                         parentFragment.showOpenUrlAlert(res.url, false);
                                     }
@@ -1208,7 +1208,7 @@ public void sendGame(TLRPC.InputPeer peer, TLRPC.TL_inputMediaGame game, long ra
         TLRPC.TL_messages_sendMedia request = new TLRPC.TL_messages_sendMedia();
         request.peer = peer;
         if (request.peer instanceof TLRPC.TL_inputPeerChannel) {
-            request.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE).getBoolean("silent_" + peer.channel_id, false);
+            request.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE).getBoolean("silent_" + peer.channel_id, false);
         }
         request.random_id = random_id != 0 ? random_id : getNextRandomId();
         request.media = game;
@@ -1670,7 +1670,7 @@ private void sendMessage(String message, TLRPC.MessageMedia location, TLRPC.TL_p
                         reqSend.message = message;
                         reqSend.clear_draft = retryMessageObject == null;
                         if (newMsg.to_id instanceof TLRPC.TL_peerChannel) {
-                            reqSend.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
+                            reqSend.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
                         }
                         reqSend.peer = sendToPeer;
                         reqSend.random_id = newMsg.random_id;
@@ -1875,7 +1875,7 @@ private void sendMessage(String message, TLRPC.MessageMedia location, TLRPC.TL_p
                         TLRPC.TL_messages_sendMedia request = new TLRPC.TL_messages_sendMedia();
                         request.peer = sendToPeer;
                         if (newMsg.to_id instanceof TLRPC.TL_peerChannel) {
-                            request.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
+                            request.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
                         }
                         request.random_id = newMsg.random_id;
                         request.media = inputMedia;
@@ -2142,7 +2142,7 @@ private void sendMessage(String message, TLRPC.MessageMedia location, TLRPC.TL_p
                     reqSend.from_peer = new TLRPC.TL_inputPeerEmpty();
                 }
                 if (retryMessageObject.messageOwner.to_id instanceof TLRPC.TL_peerChannel) {
-                    reqSend.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
+                    reqSend.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
                 }
                 reqSend.random_id.add(newMsg.random_id);
                 if (retryMessageObject.getId() >= 0) {
@@ -2160,7 +2160,7 @@ private void sendMessage(String message, TLRPC.MessageMedia location, TLRPC.TL_p
                     reqSend.reply_to_msg_id = reply_to_msg.getId();
                 }
                 if (newMsg.to_id instanceof TLRPC.TL_peerChannel) {
-                    reqSend.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
+                    reqSend.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
                 }
                 reqSend.query_id = Utilities.parseLong(params.get("query_id"));
                 reqSend.id = params.get("id");
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger_test/StatsController.java b/TMessagesProj/src/main/java/org/telegram/messenger_test/StatsController.java
index 162d96a64..68f634929 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger_test/StatsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger_test/StatsController.java
@@ -58,7 +58,7 @@ public static StatsController getInstance() {
     }
 
     private StatsController() {
-        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("stats", Context.MODE_PRIVATE);
+        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("stats"+Change_user_helper.userTag, Context.MODE_PRIVATE);
         boolean save = false;
         editor = sharedPreferences.edit();
         for (int a = 0; a < 3; a++) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger_test/TgChooserTargetService.java b/TMessagesProj/src/main/java/org/telegram/messenger_test/TgChooserTargetService.java
index 3207e2efe..cd5713fc3 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger_test/TgChooserTargetService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger_test/TgChooserTargetService.java
@@ -50,7 +50,7 @@
         if (!UserConfig.isClientActivated()) {
             return targets;
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         if (!preferences.getBoolean("direct_share", true)) {
             return targets;
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger_test/UserConfig.java b/TMessagesProj/src/main/java/org/telegram/messenger_test/UserConfig.java
index 8a4142156..04918bf53 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger_test/UserConfig.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger_test/UserConfig.java
@@ -71,7 +71,7 @@ public static void saveConfig(boolean withFile) {
     public static void saveConfig(boolean withFile, File oldFile) {
         synchronized (sync) {
             try {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing", Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing"+Change_user_helper.userTag, Context.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 editor.putBoolean("registeredForPush", registeredForPush);
                 editor.putString("pushString2", pushString);
@@ -197,7 +197,7 @@ public void run() {
                         int constructor = data.readInt32(false);
                         currentUser = TLRPC.User.TLdeserialize(data, constructor, false);
 
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing", Context.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing"+Change_user_helper.userTag, Context.MODE_PRIVATE);
                         registeredForPush = preferences.getBoolean("registeredForPush", false);
                         pushString = preferences.getString("pushString2", "");
                         lastSendMessageId = preferences.getInt("lastSendMessageId", -210000);
@@ -222,7 +222,7 @@ public void run() {
                     FileLog.e(e);
                 }
             } else {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing", Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing"+Change_user_helper.userTag, Context.MODE_PRIVATE);
                 registeredForPush = preferences.getBoolean("registeredForPush", false);
                 pushString = preferences.getString("pushString2", "");
                 lastSendMessageId = preferences.getInt("lastSendMessageId", -210000);
@@ -287,7 +287,7 @@ public void run() {
                 if (!notificationsConverted) {
                     try {
                         ArrayList<Long> customDialogs = new ArrayList<>();
-                        preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
+                        preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.userTag, Context.MODE_PRIVATE);
                         Map<String, ?> all = preferences.getAll();
                         String defaultSound = LocaleController.getString("SoundDefault", R.string.SoundDefault);
                         int defaultVibrate = 0;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
index 4300b8eca..e43133c18 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
@@ -34,6 +34,7 @@
 import android.widget.LinearLayout;
 
 import org.telegram.messenger_test.AndroidUtilities;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.R;
 import org.telegram.ui.Components.LayoutHelper;
 
@@ -651,7 +652,7 @@ public boolean presentFragment(final BaseFragment fragment, final boolean remove
         if (parentActivity.getCurrentFocus() != null) {
             AndroidUtilities.hideKeyboard(parentActivity.getCurrentFocus());
         }
-        boolean needAnimation = !forceWithoutAnimation && parentActivity.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).getBoolean("view_animations", true);
+        boolean needAnimation = !forceWithoutAnimation && parentActivity.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE).getBoolean("view_animations", true);
 
         final BaseFragment currentFragment = !fragmentsStack.isEmpty() ? fragmentsStack.get(fragmentsStack.size() - 1) : null;
 
@@ -860,7 +861,7 @@ public void closeLastFragment(boolean animated) {
             AndroidUtilities.hideKeyboard(parentActivity.getCurrentFocus());
         }
         setInnerTranslationX(0);
-        boolean needAnimation = animated && parentActivity.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).getBoolean("view_animations", true);
+        boolean needAnimation = animated && parentActivity.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE).getBoolean("view_animations", true);
         final BaseFragment currentFragment = fragmentsStack.get(fragmentsStack.size() - 1);
         BaseFragment previousFragment = null;
         if (fragmentsStack.size() > 1) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
index da614d89b..92f120682 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
@@ -40,6 +40,7 @@
 import org.json.JSONObject;
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.ApplicationLoader;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.FileLog;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.MessagesController;
@@ -1382,7 +1383,7 @@ public static ThemeInfo createWithString(String string) {
         themes.add(themeInfo);
         themesDict.put("Blue", themeInfo);
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("themeconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("themeconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         String themesString = preferences.getString("themes2", null);
         if (!TextUtils.isEmpty(themesString)) {
             try {
@@ -1419,7 +1420,7 @@ public static ThemeInfo createWithString(String string) {
 
         ThemeInfo applyingTheme = null;
         try {
-            preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+            preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
             String theme = preferences.getString("theme", null);
             if (theme != null) {
                 applyingTheme = themesDict.get(theme);
@@ -1803,7 +1804,7 @@ public static void applyTheme(ThemeInfo themeInfo, boolean save, boolean removeW
         try {
             if (themeInfo.pathToFile != null || themeInfo.assetName != null) {
                 if (save) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     editor.putString("theme", themeInfo.name);
                     if (removeWallpaperOverride) {
@@ -1818,7 +1819,7 @@ public static void applyTheme(ThemeInfo themeInfo, boolean save, boolean removeW
                 }
             } else {
                 if (save) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     editor.remove("theme");
                     if (removeWallpaperOverride) {
@@ -1842,7 +1843,7 @@ public static void applyTheme(ThemeInfo themeInfo, boolean save, boolean removeW
     }
 
     private static void saveOtherThemes() {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("themeconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("themeconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         JSONArray array = new JSONArray();
         for (int a = 0; a < otherThemes.size(); a++) {
@@ -1924,7 +1925,7 @@ public static void saveCurrentTheme(String name, boolean finalSave) {
                 sortThemes();
             }
             currentTheme = newTheme;
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
             SharedPreferences.Editor editor = preferences.edit();
             editor.putString("theme", currentTheme.name);
             editor.commit();
@@ -2669,7 +2670,7 @@ public static void setColor(String key, int color, boolean useDefault) {
 
     public static void setThemeWallpaper(String themeName, Bitmap bitmap, File path) {
         currentColors.remove(key_chat_wallpaper);
-        ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).edit().remove("overrideThemeWallpaper").commit();
+        ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE).edit().remove("overrideThemeWallpaper").commit();
         if (bitmap != null) {
             themedWallpaper = new BitmapDrawable(bitmap);
             saveCurrentTheme(themeName, false);
@@ -2778,7 +2779,7 @@ public static void loadWallpaper() {
             @Override
             public void run() {
                 synchronized (wallpaperSync) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     boolean overrideTheme = preferences.getBoolean("overrideThemeWallpaper", false);
                     if (!overrideTheme) {
                         Integer backgroundColor = currentColors.get(key_chat_wallpaper);
@@ -2818,7 +2819,7 @@ public void run() {
                     if (wallpaper == null) {
                         int selectedColor = 0;
                         try {
-                            preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                            preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                             int selectedBackground = preferences.getInt("selectedBackground", 1000001);
                             selectedColor = preferences.getInt("selectedColor", 0);
                             if (selectedColor == 0) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
index c0b0627b6..2ed551ddb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
@@ -22,6 +22,7 @@
 
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.ApplicationLoader;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.MessageObject;
 import org.telegram.messenger_test.MessagesController;
@@ -219,7 +220,7 @@ private void processFoundUser(TLRPC.User user) {
         if (user != null && user.bot && user.bot_inline_placeholder != null) {
             foundContextBot = user;
             if (foundContextBot.bot_inline_geo) {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                 boolean allowGeo = preferences.getBoolean("inlinegeo_" + foundContextBot.id, false);
                 if (!allowGeo && parentFragment != null && parentFragment.getParentActivity() != null) {
                     final TLRPC.User foundContextBotFinal = foundContextBot;
@@ -232,7 +233,7 @@ private void processFoundUser(TLRPC.User user) {
                         public void onClick(DialogInterface dialogInterface, int i) {
                             buttonClicked[0] = true;
                             if (foundContextBotFinal != null) {
-                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                                 preferences.edit().putBoolean("inlinegeo_" + foundContextBotFinal.id, true).commit();
                                 checkLocationPermissionsOrStart();
                             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ArticleViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/ArticleViewer.java
index 8b8fa845e..ac4d881ed 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ArticleViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ArticleViewer.java
@@ -72,6 +72,7 @@
 
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.ApplicationLoader;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.Emoji;
 import org.telegram.messenger_test.FileLoader;
 import org.telegram.messenger_test.FileLog;
@@ -658,7 +659,7 @@ private void updateInterfaceForCurrentPage(boolean back) {
         adapter.notifyDataSetChanged();
 
         if (pagesStack.size() == 1 || back) {
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("articles", Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("articles"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
             String key = "article" + currentPage.id;
             int position = preferences.getInt(key, -1);
             int offset;
@@ -1753,7 +1754,7 @@ public void run() {
                                     pagesStack.set(0, webPage);
                                     if (pagesStack.size() == 1) {
                                         currentPage = webPage;
-                                        ApplicationLoader.applicationContext.getSharedPreferences("articles", Activity.MODE_PRIVATE).edit().remove("article" + currentPage.id).commit();
+                                        ApplicationLoader.applicationContext.getSharedPreferences("articles"+Change_user_helper.userTag, Activity.MODE_PRIVATE).edit().remove("article" + currentPage.id).commit();
                                         updateInterfaceForCurrentPage(false);
                                     }
                                 }
@@ -2119,7 +2120,7 @@ private void saveCurrentPagePosition() {
             } else {
                 offset = 0;
             }
-            SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("articles", Activity.MODE_PRIVATE).edit();
+            SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("articles"+Change_user_helper.userTag, Activity.MODE_PRIVATE).edit();
             String key = "article" + currentPage.id;
             editor.putInt(key, position).putInt(key + "o", offset).putBoolean(key + "r", AndroidUtilities.displaySize.x > AndroidUtilities.displaySize.y).commit();
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java
index a3db334a2..324b1c19f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java
@@ -25,6 +25,7 @@
 import org.telegram.SQLite.SQLitePreparedStatement;
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.ApplicationLoader;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.ClearCacheService;
 import org.telegram.messenger_test.FileLoader;
 import org.telegram.messenger_test.FileLog;
@@ -319,7 +320,7 @@ public void onItemClick(View view, int position) {
                     builder.setItems(new CharSequence[]{LocaleController.formatPluralString("Weeks", 1), LocaleController.formatPluralString("Months", 1), LocaleController.getString("KeepMediaForever", R.string.KeepMediaForever)}, new DialogInterface.OnClickListener() {
                         @Override
                         public void onClick(DialogInterface dialog, final int which) {
-                            SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).edit();
+                            SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE).edit();
                             editor.putInt("keep_media", which).commit();
                             if (listAdapter != null) {
                                 listAdapter.notifyDataSetChanged();
@@ -580,7 +581,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                             textCell.setTextAndValue(LocaleController.getString("ClearMediaCache", R.string.ClearMediaCache), totalSize == 0 ? LocaleController.getString("CacheEmpty", R.string.CacheEmpty) : AndroidUtilities.formatFileSize(totalSize), false);
                         }
                     } else if (position == keepMediaRow) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         int keepMedia = preferences.getInt("keep_media", 2);
                         String value;
                         if (keepMedia == 0) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
index cd43eec5d..6544e1daa 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
@@ -25,6 +25,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger_test.AndroidUtilities;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.ApplicationLoader;
 import org.telegram.tgnet.TLRPC;
@@ -131,7 +132,7 @@ public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
     @Override
     public void onResume() {
         super.onResume();
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         boolean animations = preferences.getBoolean("view_animations", true);
         if (!animations) {
             firstNameField.requestFocus();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java
index 4fd05ccd7..dba2f4da5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java
@@ -24,6 +24,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger_test.AndroidUtilities;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.ApplicationLoader;
 import org.telegram.tgnet.ConnectionsManager;
@@ -151,7 +152,7 @@ public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
     @Override
     public void onResume() {
         super.onResume();
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         boolean animations = preferences.getBoolean("view_animations", true);
         if (!animations) {
             firstNameField.requestFocus();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
index 0e21f8868..8bc83fd72 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
@@ -47,6 +47,7 @@
 
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger_test.AndroidUtilities;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.MessagesController;
 import org.telegram.messenger_test.MessagesStorage;
@@ -715,7 +716,7 @@ public void onNextPressed() {
                         permissionsItems.add(Manifest.permission.RECEIVE_SMS);
                     }
                     if (!permissionsItems.isEmpty()) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         if (preferences.getBoolean("firstlogin", true) || getParentActivity().shouldShowRequestPermissionRationale(Manifest.permission.READ_PHONE_STATE) || getParentActivity().shouldShowRequestPermissionRationale(Manifest.permission.RECEIVE_SMS)) {
                             preferences.edit().putBoolean("firstlogin", false).commit();
                             AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
index 1a208d3ca..d1823faef 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
@@ -35,6 +35,7 @@
 import android.widget.Toast;
 
 import org.telegram.messenger_test.AndroidUtilities;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.MessagesController;
 import org.telegram.messenger_test.MessagesStorage;
@@ -236,7 +237,7 @@ public void afterTextChanged(Editable editable) {
     @Override
     public void onResume() {
         super.onResume();
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.userTag, Activity.MODE_PRIVATE);
         boolean animations = preferences.getBoolean("view_animations", true);
         if (!animations) {
             firstNameField.requestFocus();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index edb888440..0a50223b0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -69,6 +69,7 @@
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger_test.BuildConfig;
 import org.telegram.messenger_test.BuildVars;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.ChatObject;
 import org.telegram.messenger_test.Emoji;
 import org.telegram.messenger_test.LocaleController;
@@ -717,7 +718,7 @@ public void run() {
         MessagesController.getInstance().setLastCreatedDialogId(dialog_id, true);
 
         if (startLoadFromMessageId == 0) {
-            SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+            SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
             int messageId = sharedPreferences.getInt("diditem" + dialog_id, 0);
             if (messageId != 0) {
                 loadingFromOldPosition = true;
@@ -1871,7 +1872,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                         builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
                         showDialog(builder.create());
                     } else {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         preferences.edit().putInt("pin_" + dialog_id, info.pinned_msg_id).commit();
                         updatePinnedMessageView(true);
                     }
@@ -2236,7 +2237,7 @@ public void needChangePanelVisibility(boolean show) {
                         }
                         if (allowStickersPanel && (!mentionsAdapter.isBotContext() || (allowContextBotPanel || allowContextBotPanelSecond))) {
                             if (currentEncryptedChat != null && mentionsAdapter.isBotContext()) {
-                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                                 if (!preferences.getBoolean("secretbot", false)) {
                                     AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                                     builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
@@ -3296,7 +3297,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
     }
 
     private void showGifHint() {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         if (preferences.getBoolean("gifhint", false)) {
             return;
         }
@@ -3821,7 +3822,7 @@ public void run() {
                                 @Override
                                 public void onClick(DialogInterface dialog, int which) {
                                     MessagesController.getInstance().secretWebpagePreview = 1;
-                                    ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).edit().putInt("secretWebpage2", MessagesController.getInstance().secretWebpagePreview).commit();
+                                    ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE).edit().putInt("secretWebpage2", MessagesController.getInstance().secretWebpagePreview).commit();
                                     foundUrls = null;
                                     searchLinks(charSequence, force);
                                 }
@@ -3831,7 +3832,7 @@ public void onClick(DialogInterface dialog, int which) {
                             showDialog(builder.create());
 
                             MessagesController.getInstance().secretWebpagePreview = 0;
-                            ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).edit().putInt("secretWebpage2", MessagesController.getInstance().secretWebpagePreview).commit();
+                            ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE).edit().putInt("secretWebpage2", MessagesController.getInstance().secretWebpagePreview).commit();
                         }
                     });
                     return;
@@ -4131,7 +4132,7 @@ public void showReplyPanel(boolean show, MessageObject messageObjectToReply, Arr
                 return;
             }
             if (replyingMessageObject != null && replyingMessageObject.messageOwner.reply_markup instanceof TLRPC.TL_replyKeyboardForceReply) {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                 preferences.edit().putInt("answered_" + dialog_id, replyingMessageObject.getId()).commit();
             }
             if (foundWebPage != null) {
@@ -4315,7 +4316,7 @@ private void toggleMute(boolean instant) {
         if (!muted) {
             if (instant) {
                 long flags;
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 editor.putInt("notify2_" + dialog_id, 2);
                 flags = 1;
@@ -4332,7 +4333,7 @@ private void toggleMute(boolean instant) {
                 showDialog(AlertsCreator.createMuteAlert(getParentActivity(), dialog_id));
             }
         } else {
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
             SharedPreferences.Editor editor = preferences.edit();
             editor.putInt("notify2_" + dialog_id, 0);
             MessagesStorage.getInstance().setDialogFlags(dialog_id, 0);
@@ -6793,7 +6794,7 @@ public void run() {
                     botButtons = new MessageObject(message, null, false);
                     if (chatActivityEnterView != null) {
                         if (botButtons.messageOwner.reply_markup instanceof TLRPC.TL_replyKeyboardForceReply) {
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                             if (preferences.getInt("answered_" + dialog_id, 0) != botButtons.getId() && (replyingMessageObject == null || chatActivityEnterView.getFieldText() == null)) {
                                 botReplyButtons = botButtons;
                                 chatActivityEnterView.setButtons(botButtons);
@@ -7209,7 +7210,7 @@ private void updatePinnedMessageView(boolean animated) {
                 pinnedMessageObject = messagesDict[0].get(info.pinned_msg_id);
             }
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         if (info == null || info.pinned_msg_id == 0 || info.pinned_msg_id == preferences.getInt("pin_" + dialog_id, 0) || actionBar != null && actionBar.isActionModeShowed()) {
             hidePinnedMessageView(animated);
         } else {
@@ -7295,7 +7296,7 @@ private void updateSpamView() {
         if (reportSpamView == null) {
             return;
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         boolean show;
         if (currentEncryptedChat != null) {
             show = !(currentEncryptedChat.admin_id == UserConfig.getClientUserId() || ContactsController.getInstance().isLoadingContacts()) && ContactsController.getInstance().contactsDict.get(currentUser.id) == null;
@@ -7571,7 +7572,7 @@ public void onPause() {
 
         MessagesController.getInstance().cancelTyping(0, dialog_id);
 
-        SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE).edit();
+        SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE).edit();
         int messageId = 0;
         int offset = 0;
         if (chatLayoutManager != null) {
@@ -8997,7 +8998,7 @@ public void showOpenGameAlert(final TLRPC.TL_game game, final MessageObject mess
                 @Override
                 public void onClick(DialogInterface dialogInterface, int i) {
                     showOpenGameAlert(game, messageObject, urlStr, false, uid);
-                    ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE).edit().putBoolean("askgame_" + uid, false).commit();
+                    ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE).edit().putBoolean("askgame_" + uid, false).commit();
                 }
             });
             builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/AlertsCreator.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/AlertsCreator.java
index 0a188c6fe..ffc58c1dc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/AlertsCreator.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/AlertsCreator.java
@@ -19,6 +19,7 @@
 import android.widget.Toast;
 
 import org.telegram.messenger_test.AndroidUtilities;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.MessagesController;
 import org.telegram.messenger_test.MessagesStorage;
@@ -253,7 +254,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                             untilTime = Integer.MAX_VALUE;
                         }
 
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         long flags;
                         if (i == 3) {
@@ -431,7 +432,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
 
     public static Dialog createColorSelectDialog(Activity parentActivity, final long dialog_id, final boolean globalGroup, final boolean globalAll, final Runnable onSelect) {
         int currentColor;
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         if (globalGroup) {
             currentColor = preferences.getInt("GroupLed", 0xff0000ff);
         } else if (globalAll) {
@@ -484,7 +485,7 @@ public void onClick(View v) {
         builder.setPositiveButton(LocaleController.getString("Set", R.string.Set), new DialogInterface.OnClickListener() {
             @Override
             public void onClick(DialogInterface dialogInterface, int which) {
-                final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 if (globalAll) {
                     editor.putInt("MessagesLed", selectedColor[0]);
@@ -502,7 +503,7 @@ public void onClick(DialogInterface dialogInterface, int which) {
         builder.setNeutralButton(LocaleController.getString("LedDisabled", R.string.LedDisabled), new DialogInterface.OnClickListener() {
             @Override
             public void onClick(DialogInterface dialog, int which) {
-                final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 if (globalAll) {
                     editor.putInt("MessagesLed", 0);
@@ -521,7 +522,7 @@ public void onClick(DialogInterface dialog, int which) {
             builder.setNegativeButton(LocaleController.getString("Default", R.string.Default), new DialogInterface.OnClickListener() {
                 @Override
                 public void onClick(DialogInterface dialog, int which) {
-                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     editor.remove("color_" + dialog_id);
                     editor.commit();
@@ -545,7 +546,7 @@ public static Dialog createVibrationSelectDialog(Activity parentActivity, final
     }
 
     public static Dialog createVibrationSelectDialog(Activity parentActivity, final BaseFragment parentFragment, final long dialog_id, final String prefKeyPrefix, final Runnable onSelect) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         final int selected[] = new int[1];
         String descriptions[];
         if (dialog_id != 0) {
@@ -594,7 +595,7 @@ public static Dialog createVibrationSelectDialog(Activity parentActivity, final
                 public void onClick(View v) {
                     selected[0] = (Integer) v.getTag();
 
-                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     if (dialog_id != 0) {
                         if (selected[0] == 0) {
@@ -637,7 +638,7 @@ public void onClick(View v) {
     }
 
     public static Dialog createPrioritySelectDialog(Activity parentActivity, final BaseFragment parentFragment, final long dialog_id, final boolean globalGroup, final boolean globalAll, final Runnable onSelect) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         final int selected[] = new int[1];
         String descriptions[];
         if (dialog_id != 0) {
@@ -681,7 +682,7 @@ public static Dialog createPrioritySelectDialog(Activity parentActivity, final B
                 public void onClick(View v) {
                     selected[0] = (Integer) v.getTag();
 
-                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     if (dialog_id != 0) {
                         if (selected[0] == 0) {
@@ -711,7 +712,7 @@ public void onClick(View v) {
     }
 
     public static Dialog createPopupSelectDialog(Activity parentActivity, final BaseFragment parentFragment, final boolean globalGroup, final boolean globalAll, final Runnable onSelect) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         final int selected[] = new int[1];
         if (globalAll) {
             selected[0] = preferences.getInt("popupAll", 0);
@@ -740,7 +741,7 @@ public static Dialog createPopupSelectDialog(Activity parentActivity, final Base
                 public void onClick(View v) {
                     selected[0] = (Integer) v.getTag();
 
-                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     editor.putInt(globalGroup ? "popupGroup" : "popupAll", selected[0]);
                     editor.commit();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
index 8da2adb1c..d0c63c3e6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
@@ -56,6 +56,7 @@
 
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.BuildVars;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.ChatObject;
 import org.telegram.messenger_test.Emoji;
 import org.telegram.messenger_test.LocaleController;
@@ -484,7 +485,7 @@ public ChatActivityEnterView(Activity context, SizeNotifierFrameLayout parent, C
         parentFragment = fragment;
         sizeNotifierLayout = parent;
         sizeNotifierLayout.setDelegate(this);
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         sendByEnter = preferences.getBoolean("send_by_enter", false);
 
         textFieldContainer = new LinearLayout(context);
@@ -593,7 +594,7 @@ public boolean onKey(View view, int i, KeyEvent keyEvent) {
                 if (i == KeyEvent.KEYCODE_BACK && !keyboardVisible && isPopupShowing()) {
                     if (keyEvent.getAction() == 1) {
                         if (currentPopupContentType == 1 && botButtonsMessageObject != null) {
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                             preferences.edit().putInt("hidekeyboard_" + dialog_id, botButtonsMessageObject.getId()).commit();
                         }
                         showPopup(0, 0);
@@ -714,11 +715,11 @@ public void onClick(View v) {
                     if (botReplyMarkup != null) {
                         if (!isPopupShowing() || currentPopupContentType != 1) {
                             showPopup(1, 1);
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                             preferences.edit().remove("hidekeyboard_" + dialog_id).commit();
                         } else {
                             if (currentPopupContentType == 1 && botButtonsMessageObject != null) {
-                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                                 preferences.edit().putInt("hidekeyboard_" + dialog_id, botButtonsMessageObject.getId()).commit();
                             }
                             openKeyboardInternal();
@@ -748,7 +749,7 @@ public void onClick(View v) {
                 public void onClick(View v) {
                     silent = !silent;
                     notifyButton.setImageResource(silent ? R.drawable.notify_members_off : R.drawable.notify_members_on);
-                    ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE).edit().putBoolean("silent_" + dialog_id, silent).commit();
+                    ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE).edit().putBoolean("silent_" + dialog_id, silent).commit();
                     NotificationsController.updateServerNotificationsSettings(dialog_id);
                     try {
                         if (visibleToast != null) {
@@ -1046,7 +1047,7 @@ public void onClick(View view) {
         doneButtonProgress.setVisibility(View.INVISIBLE);
         doneButtonContainer.addView(doneButtonProgress, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
 
-        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("emoji", Context.MODE_PRIVATE);
+        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.userTag, Context.MODE_PRIVATE);
         keyboardHeight = sharedPreferences.getInt("kbd_height", AndroidUtilities.dp(200));
         keyboardHeightLand = sharedPreferences.getInt("kbd_height_land3", AndroidUtilities.dp(200));
 
@@ -1437,7 +1438,7 @@ public void setDialogId(long id) {
         dialog_id = id;
         if ((int) dialog_id < 0) {
             TLRPC.Chat currentChat = MessagesController.getInstance().getChat(-(int) dialog_id);
-            silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE).getBoolean("silent_" + dialog_id, false);
+            silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE).getBoolean("silent_" + dialog_id, false);
             canWriteToChannel = ChatObject.isChannel(currentChat) && (currentChat.creator || currentChat.editor) && !currentChat.megagroup;
             if (notifyButton != null) {
                 notifyButton.setVisibility(canWriteToChannel ? VISIBLE : GONE);
@@ -2270,7 +2271,7 @@ public void didPressedButton(TLRPC.KeyboardButton button) {
                         setButtons(botMessageObject, false);
                     } else if (botButtonsMessageObject.messageOwner.reply_markup.single_use) {
                         openKeyboardInternal();
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         preferences.edit().putInt("answered_" + dialog_id, botButtonsMessageObject.getId()).commit();
                     }
                     if (delegate != null) {
@@ -2286,7 +2287,7 @@ public void didPressedButton(TLRPC.KeyboardButton button) {
         botKeyboardView.setPanelHeight(AndroidUtilities.displaySize.x > AndroidUtilities.displaySize.y ? keyboardHeightLand : keyboardHeight);
         botKeyboardView.setButtons(botReplyMarkup != null ? botReplyMarkup : null);
         if (botReplyMarkup != null) {
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
             boolean keyboardHidden = preferences.getInt("hidekeyboard_" + dialog_id, 0) == messageObject.getId();
             if (botButtonsMessageObject != replyingMessageObject && botReplyMarkup.single_use) {
                 if (preferences.getInt("answered_" + dialog_id, 0) == messageObject.getId()) {
@@ -2574,10 +2575,10 @@ private void showPopup(int show, int contentType) {
             currentPopupContentType = contentType;
 
             if (keyboardHeight <= 0) {
-                keyboardHeight = ApplicationLoader.applicationContext.getSharedPreferences("emoji", Context.MODE_PRIVATE).getInt("kbd_height", AndroidUtilities.dp(200));
+                keyboardHeight = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.userTag, Context.MODE_PRIVATE).getInt("kbd_height", AndroidUtilities.dp(200));
             }
             if (keyboardHeightLand <= 0) {
-                keyboardHeightLand = ApplicationLoader.applicationContext.getSharedPreferences("emoji", Context.MODE_PRIVATE).getInt("kbd_height_land3", AndroidUtilities.dp(200));
+                keyboardHeightLand = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.userTag, Context.MODE_PRIVATE).getInt("kbd_height_land3", AndroidUtilities.dp(200));
             }
             int currentHeight = AndroidUtilities.displaySize.x > AndroidUtilities.displaySize.y ? keyboardHeightLand : keyboardHeight;
             if (contentType == 1) {
@@ -2629,7 +2630,7 @@ private void showPopup(int show, int contentType) {
     private void setEmojiButtonImage() {
         int currentPage;
         if (emojiView == null) {
-            currentPage = getContext().getSharedPreferences("emoji", Activity.MODE_PRIVATE).getInt("selected_page", 0);
+            currentPage = getContext().getSharedPreferences("emoji"+ Change_user_helper.userTag, Activity.MODE_PRIVATE).getInt("selected_page", 0);
         } else {
             currentPage = emojiView.getCurrentPage();
         }
@@ -2645,7 +2646,7 @@ private void setEmojiButtonImage() {
     public void hidePopup(boolean byBackButton) {
         if (isPopupShowing()) {
             if (currentPopupContentType == 1 && byBackButton && botButtonsMessageObject != null) {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                 preferences.edit().putInt("hidekeyboard_" + dialog_id, botButtonsMessageObject.getId()).commit();
             }
             showPopup(0, 0);
@@ -2718,10 +2719,10 @@ public void onSizeChanged(int height, boolean isWidthGreater) {
         if (height > AndroidUtilities.dp(50) && keyboardVisible && !AndroidUtilities.isInMultiwindow) {
             if (isWidthGreater) {
                 keyboardHeightLand = height;
-                ApplicationLoader.applicationContext.getSharedPreferences("emoji", 0).edit().putInt("kbd_height_land3", keyboardHeightLand).commit();
+                ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.userTag, 0).edit().putInt("kbd_height_land3", keyboardHeightLand).commit();
             } else {
                 keyboardHeight = height;
-                ApplicationLoader.applicationContext.getSharedPreferences("emoji", 0).edit().putInt("kbd_height", keyboardHeight).commit();
+                ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.userTag, 0).edit().putInt("kbd_height", keyboardHeight).commit();
             }
         }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
index 3f91ee296..612eef5e4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
@@ -49,6 +49,7 @@
 
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.ApplicationLoader;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.MessagesController;
 import org.telegram.messenger_test.ContactsController;
 import org.telegram.messenger_test.FileLog;
@@ -518,7 +519,7 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                     if (layoutManager.findLastVisibleItemPosition() > 1) {
                         hideHint();
                         hintShowed = false;
-                        ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).edit().putBoolean("bothint", true).commit();
+                        ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE).edit().putBoolean("bothint", true).commit();
                     }
                 }
                 updateLayout();
@@ -1513,7 +1514,7 @@ private void showHint() {
         if (SearchQuery.inlineBots.isEmpty()) {
             return;
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         if (preferences.getBoolean("bothint", false)) {
             return;
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
index 863f972c4..f10a8b8de 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
@@ -43,6 +43,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger_test.AndroidUtilities;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.Emoji;
 import org.telegram.messenger_test.EmojiData;
 import org.telegram.messenger_test.LocaleController;
@@ -1105,7 +1106,7 @@ public boolean onKey(View v, int keyCode, KeyEvent event) {
                 return false;
             }
         });
-        currentPage = getContext().getSharedPreferences("emoji", Activity.MODE_PRIVATE).getInt("selected_page", 0);
+        currentPage = getContext().getSharedPreferences("emoji"+ Change_user_helper.userTag, Activity.MODE_PRIVATE).getInt("selected_page", 0);
         loadRecents();
     }
 
@@ -1160,12 +1161,12 @@ private void saveNewPage() {
         }
         if (currentPage != newPage) {
             currentPage = newPage;
-            getContext().getSharedPreferences("emoji", Activity.MODE_PRIVATE).edit().putInt("selected_page", newPage).commit();
+            getContext().getSharedPreferences("emoji"+ Change_user_helper.userTag, Activity.MODE_PRIVATE).edit().putInt("selected_page", newPage).commit();
         }
     }
 
     public void clearRecentEmoji() {
-        SharedPreferences preferences = getContext().getSharedPreferences("emoji", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = getContext().getSharedPreferences("emoji"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         preferences.edit().putBoolean("filled_default", true).commit();
         emojiUseHistory.clear();
         recentEmoji.clear();
@@ -1241,7 +1242,7 @@ public void run() {
     }
 
     private void saveRecentEmoji() {
-        SharedPreferences preferences = getContext().getSharedPreferences("emoji", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = getContext().getSharedPreferences("emoji"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         StringBuilder stringBuilder = new StringBuilder();
         for (HashMap.Entry<String, Integer> entry : emojiUseHistory.entrySet()) {
             if (stringBuilder.length() != 0) {
@@ -1255,7 +1256,7 @@ private void saveRecentEmoji() {
     }
 
     private void saveEmojiColors() {
-        SharedPreferences preferences = getContext().getSharedPreferences("emoji", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = getContext().getSharedPreferences("emoji"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         StringBuilder stringBuilder = new StringBuilder();
         for (HashMap.Entry<String, String> entry : emojiColor.entrySet()) {
             if (stringBuilder.length() != 0) {
@@ -1443,7 +1444,7 @@ public void addRecentGif(TLRPC.Document document) {
     }
 
     public void loadRecents() {
-        SharedPreferences preferences = getContext().getSharedPreferences("emoji", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = getContext().getSharedPreferences("emoji"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
 
         String str;
         try {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/Paint/Views/ColorPicker.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/Paint/Views/ColorPicker.java
index ae7c061ee..00c779fad 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/Paint/Views/ColorPicker.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/Paint/Views/ColorPicker.java
@@ -19,6 +19,7 @@
 import android.widget.ImageView;
 
 import org.telegram.messenger_test.AndroidUtilities;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.R;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.Paint.Swatch;
@@ -97,7 +98,7 @@ public void onClick(View v) {
             }
         });
 
-        location = context.getSharedPreferences("paint", Activity.MODE_PRIVATE).getFloat("last_color_location", 1.0f);
+        location = context.getSharedPreferences("paint"+ Change_user_helper.userTag, Activity.MODE_PRIVATE).getFloat("last_color_location", 1.0f);
         setLocation(location);
     }
 
@@ -211,7 +212,7 @@ public boolean onTouchEvent(MotionEvent event) {
             if (interacting && delegate != null) {
                 delegate.onFinishedColorPicking();
 
-                getContext().getSharedPreferences("paint", Activity.MODE_PRIVATE).edit().putFloat("last_color_location", location).commit();
+                getContext().getSharedPreferences("paint"+ Change_user_helper.userTag, Activity.MODE_PRIVATE).edit().putFloat("last_color_location", location).commit();
             }
             interacting = false;
             wasChangingWeight = changingWeight;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
index 629fb2067..bb6ea9826 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
@@ -47,6 +47,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger_test.AndroidUtilities;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.NotificationCenter;
 import org.telegram.messenger_test.ApplicationLoader;
@@ -970,7 +971,7 @@ public void onShow() {
         }
         setAlpha(1.0f);
         setTranslationY(0);
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         int selectedBackground = preferences.getInt("selectedBackground", 1000001);
         if (selectedBackground == 1000001) {
             backgroundFrameLayout.setBackgroundColor(0xff517c9e);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
index ebfb2aa5b..344e70a74 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
@@ -31,6 +31,7 @@
 import android.widget.LinearLayout;
 
 import org.telegram.messenger_test.AndroidUtilities;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.Emoji;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.NotificationCenter;
@@ -511,10 +512,10 @@ public void onStickerSetRemove(TLRPC.StickerSetCovered stickerSet) {
             emojiView.setVisibility(VISIBLE);
 
             if (keyboardHeight <= 0) {
-                keyboardHeight = ApplicationLoader.applicationContext.getSharedPreferences("emoji", 0).getInt("kbd_height", AndroidUtilities.dp(200));
+                keyboardHeight = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.userTag, 0).getInt("kbd_height", AndroidUtilities.dp(200));
             }
             if (keyboardHeightLand <= 0) {
-                keyboardHeightLand = ApplicationLoader.applicationContext.getSharedPreferences("emoji", 0).getInt("kbd_height_land3", AndroidUtilities.dp(200));
+                keyboardHeightLand = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.userTag, 0).getInt("kbd_height_land3", AndroidUtilities.dp(200));
             }
             int currentHeight = AndroidUtilities.displaySize.x > AndroidUtilities.displaySize.y ? keyboardHeightLand : keyboardHeight;
 
@@ -598,10 +599,10 @@ public void onSizeChanged(int height, boolean isWidthGreater) {
         if (height > AndroidUtilities.dp(50) && keyboardVisible && !AndroidUtilities.isInMultiwindow && !forceFloatingEmoji) {
             if (isWidthGreater) {
                 keyboardHeightLand = height;
-                ApplicationLoader.applicationContext.getSharedPreferences("emoji", 0).edit().putInt("kbd_height_land3", keyboardHeightLand).commit();
+                ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.userTag, 0).edit().putInt("kbd_height_land3", keyboardHeightLand).commit();
             } else {
                 keyboardHeight = height;
-                ApplicationLoader.applicationContext.getSharedPreferences("emoji", 0).edit().putInt("kbd_height", keyboardHeight).commit();
+                ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.userTag, 0).edit().putInt("kbd_height", keyboardHeight).commit();
             }
         }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PipVideoView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PipVideoView.java
index a06a45be6..02b4b45c2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PipVideoView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PipVideoView.java
@@ -27,6 +27,7 @@
 
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.ApplicationLoader;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.FileLog;
 import org.telegram.messenger_test.exoplayer2.ui.AspectRatioFrameLayout;
 import org.telegram.ui.ActionBar.ActionBar;
@@ -142,7 +143,7 @@ public boolean onTouchEvent(MotionEvent event) {
 
         windowManager = (WindowManager) ApplicationLoader.applicationContext.getSystemService(Context.WINDOW_SERVICE);
 
-        preferences = ApplicationLoader.applicationContext.getSharedPreferences("pipconfig", Context.MODE_PRIVATE);
+        preferences = ApplicationLoader.applicationContext.getSharedPreferences("pipconfig"+ Change_user_helper.userTag, Context.MODE_PRIVATE);
 
         int sidex = preferences.getInt("sidex", 1);
         int sidey = preferences.getInt("sidey", 0);
@@ -293,7 +294,7 @@ public void onAnimationEnd(Animator animation) {
     }
 
     public static Rect getPipRect(float aspectRatio) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("pipconfig", Context.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("pipconfig"+ Change_user_helper.userTag, Context.MODE_PRIVATE);
         int sidex = preferences.getInt("sidex", 1);
         int sidey = preferences.getInt("sidey", 0);
         float px = preferences.getFloat("px", 0);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ThemeEditorView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ThemeEditorView.java
index d4f783347..dcf361573 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ThemeEditorView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ThemeEditorView.java
@@ -52,6 +52,7 @@
 
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.ApplicationLoader;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.FileLog;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.R;
@@ -989,7 +990,7 @@ public void onDismiss(DialogInterface dialog) {
         windowView.setBackgroundResource(R.drawable.theme_picker);
         windowManager = (WindowManager) activity.getSystemService(Context.WINDOW_SERVICE);
 
-        preferences = ApplicationLoader.applicationContext.getSharedPreferences("themeconfig", Context.MODE_PRIVATE);
+        preferences = ApplicationLoader.applicationContext.getSharedPreferences("themeconfig"+ Change_user_helper.userTag, Context.MODE_PRIVATE);
 
         int sidex = preferences.getInt("sidex", 1);
         int sidey = preferences.getInt("sidey", 0);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/WebPlayerView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/WebPlayerView.java
index 7f8a76535..4a975c26a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/WebPlayerView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/WebPlayerView.java
@@ -49,6 +49,7 @@
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.ApplicationLoader;
 import org.telegram.messenger_test.Bitmaps;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.FileLoader;
 import org.telegram.messenger_test.FileLog;
 import org.telegram.messenger_test.ImageReceiver;
@@ -628,7 +629,7 @@ protected String doInBackground(Void... voids) {
                         }
                         String functionCode = null;
                         String functionName = null;
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("youtubecode", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("youtubecode"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         if (playerId != null) {
                             functionCode = preferences.getString(playerId, null);
                             functionName = preferences.getString(playerId + "n", null);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
index 3cb927b48..6574b0842 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
@@ -29,6 +29,7 @@
 
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.PhoneFormat.PhoneFormat;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.ContactsController;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.ApplicationLoader;
@@ -102,7 +103,7 @@ public void onItemClick(int id) {
                         user.last_name = lastNameField.getText().toString();
                         ContactsController.getInstance().addContact(user);
                         finishFragment();
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         preferences.edit().putInt("spam3_" + user_id, 1).commit();
                         NotificationCenter.getInstance().postNotificationName(NotificationCenter.updateInterfaces, MessagesController.UPDATE_MASK_NAME);
                         NotificationCenter.getInstance().postNotificationName(NotificationCenter.peerSettingsDidLoaded, (long) user_id);
@@ -251,7 +252,7 @@ public void didReceivedNotification(int id, Object... args) {
     public void onResume() {
         super.onResume();
         updateAvatarLayout();
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         boolean animations = preferences.getBoolean("view_animations", true);
         if (!animations) {
             firstNameField.requestFocus();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
index a02823909..ec5ea00e7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
@@ -35,6 +35,7 @@
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.ApplicationLoader;
 import org.telegram.messenger_test.BuildVars;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.MessagesStorage;
 import org.telegram.messenger_test.SecretChatHelper;
@@ -318,7 +319,7 @@ public void onItemClick(View view, int position) {
                                 if (!MessagesController.isFeatureEnabled("broadcast_create", ContactsActivity.this)) {
                                     return;
                                 }
-                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                                 if (!BuildVars.DEBUG_VERSION && preferences.getBoolean("channel_intro", false)) {
                                     Bundle args = new Bundle();
                                     args.putInt("step", 0);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DataSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DataSettingsActivity.java
index 65a182c92..a19b42cba 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DataSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DataSettingsActivity.java
@@ -21,6 +21,7 @@
 
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.ApplicationLoader;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.FileLog;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.MediaController;
@@ -212,7 +213,7 @@ public void onClick(View v) {
                                     }
                                 }
                             }
-                            SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).edit();
+                            SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE).edit();
                             if (position == mobileDownloadRow) {
                                 editor.putInt("mobileDataDownloadMask", newMask);
                                 MediaController.getInstance().mobileDataDownloadMask = newMask;
@@ -235,7 +236,7 @@ public void onClick(View v) {
                 } else if (position == storageUsageRow) {
                     presentFragment(new CacheControlActivity());
                 } else if (position == useLessDataForCallsRow) {
-                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     Dialog dlg = AlertsCreator.createSingleChoiceDialog(getParentActivity(), DataSettingsActivity.this, new String[]{
                                     LocaleController.getString("UseLessDataNever", R.string.UseLessDataNever),
                                     LocaleController.getString("UseLessDataOnMobile", R.string.UseLessDataOnMobile),
@@ -322,7 +323,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                     if (position == storageUsageRow) {
                         textCell.setText(LocaleController.getString("StorageUsage", R.string.StorageUsage), true);
                     } else if (position == useLessDataForCallsRow) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         String value = null;
                         switch (preferences.getInt("VoipDataSaving", VoIPController.DATA_SAVING_NEVER)) {
                             case VoIPController.DATA_SAVING_NEVER:
@@ -362,7 +363,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                     if (position == mobileDownloadRow || position == wifiDownloadRow || position == roamingDownloadRow) {
                         int mask;
                         String value;
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         if (position == mobileDownloadRow) {
                             value = LocaleController.getString("WhenUsingMobileData", R.string.WhenUsingMobileData);
                             mask = MediaController.getInstance().mobileDataDownloadMask;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index f1e6c607f..f51790200 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -43,6 +43,7 @@
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger_test.BuildVars;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.ChatObject;
 import org.telegram.messenger_test.ContactsController;
 import org.telegram.messenger_test.ImageLoader;
@@ -139,7 +140,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 return;
             }
             if (intent != null && !intent.getBooleanExtra("fromIntro", false)) {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("logininfo2", MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("logininfo2"+ Change_user_helper.userTag, MODE_PRIVATE);
                 Map<String, ?> state = preferences.getAll();
                 if (state.isEmpty()) {
                     Intent intent2 = new Intent(this, IntroActivity.class);
@@ -355,7 +356,7 @@ public void onItemClick(View view, int position) {
                     if (!MessagesController.isFeatureEnabled("broadcast_create", actionBarLayout.fragmentsStack.get(actionBarLayout.fragmentsStack.size() - 1))) {
                         return;
                     }
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     if (!BuildVars.DEBUG_VERSION && preferences.getBoolean("channel_intro", false)) {
                         Bundle args = new Bundle();
                         args.putInt("step", 0);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
index b0ae773bc..109feebf7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
@@ -48,6 +48,7 @@
 
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger_test.AndroidUtilities;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.ContactsController;
 import org.telegram.messenger_test.MessagesController;
 import org.telegram.messenger_test.MessagesStorage;
@@ -147,7 +148,6 @@ public void onFragmentDestroy() {
     @Override
     public View createView(Context context) {
         actionBar.setTitle(LocaleController.getString("AppName", R.string.AppName));
-
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
             @Override
             public void onItemClick(int id) {
@@ -263,7 +263,7 @@ public void onRequestPermissionsResultFragment(int requestCode, String[] permiss
     private Bundle loadCurrentState() {
         try {
             Bundle bundle = new Bundle();
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("logininfo2", Context.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("logininfo2"+ Change_user_helper.userTag, Context.MODE_PRIVATE);
             Map<String, ?> params = preferences.getAll();
             for (Map.Entry<String, ?> entry : params.entrySet()) {
                 String key = entry.getKey();
@@ -296,7 +296,7 @@ private Bundle loadCurrentState() {
     }
 
     private void clearCurrentState() {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("logininfo2", Context.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("logininfo2"+ Change_user_helper.userTag, Context.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.clear();
         editor.commit();
@@ -515,7 +515,7 @@ public void saveSelfArgs(Bundle outState) {
                     v.saveStateParams(bundle);
                 }
             }
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("logininfo2", Context.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("logininfo2"+ Change_user_helper.userTag, Context.MODE_PRIVATE);
             SharedPreferences.Editor editor = preferences.edit();
             editor.clear();
             putBundleToEditor(bundle, editor, null);
@@ -962,7 +962,7 @@ public void onNextPressed() {
                     }
                     boolean ok = true;
                     if (!permissionsItems.isEmpty()) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         if (!allowCancelCall && allowCall) {
                             getParentActivity().requestPermissions(permissionsItems.toArray(new String[permissionsItems.size()]), 6);
                         } else if (preferences.getBoolean("firstlogin", true) || getParentActivity().shouldShowRequestPermissionRationale(Manifest.permission.READ_PHONE_STATE) || getParentActivity().shouldShowRequestPermissionRationale(Manifest.permission.RECEIVE_SMS)) {
@@ -1007,6 +1007,7 @@ public void onNextPressed() {
             ConnectionsManager.getInstance().cleanup();
             final TLRPC.TL_auth_sendCode req = new TLRPC.TL_auth_sendCode();
             String phone = PhoneFormat.stripExceptNumbers("" + codeField.getText() + phoneField.getText());
+
             ConnectionsManager.getInstance().applyCountryPortNumber(phone);
             req.api_hash = BuildVars.APP_HASH;
             req.api_id = BuildVars.APP_ID;
@@ -1037,6 +1038,8 @@ public void onNextPressed() {
                 params.putString("ephone", "+" + phone);
             }
             params.putString("phoneFormated", phone);
+            SharedPreferences users = ApplicationLoader.applicationContext.getSharedPreferences("users"+ Change_user_helper.userTag, Context.MODE_PRIVATE);
+            users.edit().putString("phone_user1", phone).commit();
             nextPressed = true;
             needShowProgress();
             ConnectionsManager.getInstance().sendRequest(req, new RequestDelegate() {
@@ -1092,9 +1095,11 @@ public void fillNumber() {
                                 permissionsShowItems.add(Manifest.permission.RECEIVE_SMS);
                             }
                             if (!permissionsShowItems.isEmpty()) {
-                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                                 if (preferences.getBoolean("firstloginshow", true) || getParentActivity().shouldShowRequestPermissionRationale(Manifest.permission.READ_PHONE_STATE) || getParentActivity().shouldShowRequestPermissionRationale(Manifest.permission.RECEIVE_SMS)) {
                                     preferences.edit().putBoolean("firstloginshow", false).commit();
+                                    SharedPreferences users = ApplicationLoader.applicationContext.getSharedPreferences("users"+ Change_user_helper.userTag, Context.MODE_PRIVATE);
+                                    users.edit().putInt("users_count", 1).commit();
                                     AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                                     builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
                                     builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), null);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/NewContactActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/NewContactActivity.java
index 6ae4074bc..12517b85b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/NewContactActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/NewContactActivity.java
@@ -42,6 +42,7 @@
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.ApplicationLoader;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.ContactsController;
 import org.telegram.messenger_test.FileLog;
 import org.telegram.messenger_test.LocaleController;
@@ -617,7 +618,7 @@ public int compare(String lhs, String rhs) {
     @Override
     public void onResume() {
         super.onResume();
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         boolean animations = preferences.getBoolean("view_animations", true);
         if (!animations) {
             firstNameField.requestFocus();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
index 59b3f4a69..d77af29d9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
@@ -24,6 +24,7 @@
 import android.widget.Toast;
 
 import org.telegram.messenger_test.AndroidUtilities;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.NotificationsController;
 import org.telegram.messenger_test.NotificationCenter;
@@ -209,7 +210,7 @@ public boolean supportsPredictiveItemAnimations() {
             public void onItemClick(View view, final int position) {
                 boolean enabled = false;
                 if (position == messageAlertRow || position == groupAlertRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     if (position == messageAlertRow) {
                         enabled = preferences.getBoolean("EnableAll", true);
@@ -221,7 +222,7 @@ public void onItemClick(View view, final int position) {
                     editor.commit();
                     updateServerNotificationsSettings(position == groupAlertRow);
                 } else if (position == messagePreviewRow || position == groupPreviewRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     if (position == messagePreviewRow) {
                         enabled = preferences.getBoolean("EnablePreviewAll", true);
@@ -234,7 +235,7 @@ public void onItemClick(View view, final int position) {
                     updateServerNotificationsSettings(position == groupPreviewRow);
                 } else if (position == messageSoundRow || position == groupSoundRow || position == callsRingtoneRow) {
                     try {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         Intent tmpIntent = new Intent(RingtoneManager.ACTION_RINGTONE_PICKER);
                         tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_TYPE, position == callsRingtoneRow ? RingtoneManager.TYPE_RINGTONE : RingtoneManager.TYPE_NOTIFICATION);
                         tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_DEFAULT, true);
@@ -294,7 +295,7 @@ public void run(TLObject response, TLRPC.TL_error error) {
                                 public void run() {
                                     MessagesController.getInstance().enableJoined = true;
                                     reseting = false;
-                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                                     SharedPreferences.Editor editor = preferences.edit();
                                     editor.clear();
                                     editor.commit();
@@ -308,64 +309,64 @@ public void run() {
                         }
                     });
                 } else if (position == inappSoundRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("EnableInAppSounds", true);
                     editor.putBoolean("EnableInAppSounds", !enabled);
                     editor.commit();
                 } else if (position == inappVibrateRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("EnableInAppVibrate", true);
                     editor.putBoolean("EnableInAppVibrate", !enabled);
                     editor.commit();
                 } else if (position == inappPreviewRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("EnableInAppPreview", true);
                     editor.putBoolean("EnableInAppPreview", !enabled);
                     editor.commit();
                 } else if (position == inchatSoundRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("EnableInChatSound", true);
                     editor.putBoolean("EnableInChatSound", !enabled);
                     editor.commit();
                     NotificationsController.getInstance().setInChatSoundEnabled(!enabled);
                 } else if (position == inappPriorityRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("EnableInAppPriority", false);
                     editor.putBoolean("EnableInAppPriority", !enabled);
                     editor.commit();
                 } else if (position == contactJoinedRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("EnableContactJoined", true);
                     MessagesController.getInstance().enableJoined = !enabled;
                     editor.putBoolean("EnableContactJoined", !enabled);
                     editor.commit();
                 } else if (position == pinnedMessageRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("PinnedMessages", true);
                     editor.putBoolean("PinnedMessages", !enabled);
                     editor.commit();
                 } else if (position == androidAutoAlertRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("EnableAutoNotifications", false);
                     editor.putBoolean("EnableAutoNotifications", !enabled);
                     editor.commit();
                 } else if (position == badgeNumberRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("badgeNumber", true);
                     editor.putBoolean("badgeNumber", !enabled);
                     editor.commit();
                     NotificationsController.getInstance().setBadgeEnabled(!enabled);
                 } else if (position == notificationsServiceConnectionRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     enabled = preferences.getBoolean("pushConnection", true);
                     SharedPreferences.Editor editor = preferences.edit();
                     editor.putBoolean("pushConnection", !enabled);
@@ -376,7 +377,7 @@ public void run() {
                         ConnectionsManager.getInstance().setPushConnectionEnabled(false);
                     }
                 } else if (position == notificationsServiceRow) {
-                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     enabled = preferences.getBoolean("pushService", true);
                     SharedPreferences.Editor editor = preferences.edit();
                     editor.putBoolean("pushService", !enabled);
@@ -459,7 +460,7 @@ public void onClick(DialogInterface dialog, int which) {
                             } else if (which == 6) {
                                 minutes = 60 * 4;
                             }
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                             preferences.edit().putInt("repeat_messages", minutes).commit();
                             adapter.notifyItemChanged(position);
                         }
@@ -525,7 +526,7 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
                 }
             }
 
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
             SharedPreferences.Editor editor = preferences.edit();
 
             if (requestCode == messageSoundRow) {
@@ -644,7 +645,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 }
                 case 1: {
                     TextCheckCell checkCell = (TextCheckCell) holder.itemView;
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     if (position == messageAlertRow) {
                         checkCell.setTextAndCheck(LocaleController.getString("Alert", R.string.Alert), preferences.getBoolean("EnableAll", true), true);
                     } else if (position == groupAlertRow) {
@@ -688,7 +689,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 }
                 case 3: {
                     TextColorCell textColorCell = (TextColorCell) holder.itemView;
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     int color;
                     if (position == messageLedRow) {
                         color = preferences.getInt("MessagesLed", 0xff0000ff);
@@ -706,7 +707,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 }
                 case 5:
                     TextSettingsCell textCell = (TextSettingsCell) holder.itemView;
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     if (position == messageSoundRow || position == groupSoundRow || position == callsRingtoneRow) {
                         String value = null;
                         if (position == messageSoundRow) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index 75ebdf5f3..db10bdbe4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -72,6 +72,7 @@
 
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.BuildConfig;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.ChatObject;
 import org.telegram.messenger_test.Emoji;
 import org.telegram.messenger_test.ImageLoader;
@@ -5694,7 +5695,7 @@ public void updateMuteButton() {
     }
 
     private void didChangedCompressionLevel(boolean request) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putInt("compress_video2", selectedCompression);
         editor.commit();
@@ -6006,7 +6007,7 @@ private boolean processOpenVideo(String videoPath) {
 
             videoDuration *= 1000;
 
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
             selectedCompression = preferences.getInt("compress_video2", 1);
             if (originalWidth > 1280 || originalHeight > 1280) {
                 compressionsCount = 5;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PrivacyControlActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PrivacyControlActivity.java
index 470c96b85..0bb7c4ed8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PrivacyControlActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PrivacyControlActivity.java
@@ -22,6 +22,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger_test.AndroidUtilities;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.ContactsController;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.MessagesController;
@@ -132,7 +133,7 @@ public void onItemClick(int id) {
                     }
 
                     if (currentType != 0 && rulesType == 0) {
-                        final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                        final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         boolean showed = preferences.getBoolean("privacyAlertShowed", false);
                         if (!showed) {
                             AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
index fa059726a..1151ab4db 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
@@ -17,6 +17,7 @@
 
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.ApplicationLoader;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.ContactsController;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.MessagesController;
@@ -225,7 +226,7 @@ public void run() {
                     } else {
                         MessagesController.getInstance().secretWebpagePreview = 1;
                     }
-                    ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).edit().putInt("secretWebpage2", MessagesController.getInstance().secretWebpagePreview).commit();
+                    ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).edit().putInt("secretWebpage2"+ Change_user_helper.userTag, MessagesController.getInstance().secretWebpagePreview).commit();
                     if (view instanceof TextCheckCell) {
                         ((TextCheckCell) view).setChecked(MessagesController.getInstance().secretWebpagePreview == 1);
                     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
index 21f93734b..44e4eb447 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
@@ -52,6 +52,7 @@
 
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.PhoneFormat.PhoneFormat;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.ChatObject;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.MessagesStorage;
@@ -680,7 +681,7 @@ public void onItemClick(View view, final int position) {
                             public void onClick(View v) {
                                 int i = (Integer) v.getTag();
                                 if (i == 0) {
-                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                                     SharedPreferences.Editor editor = preferences.edit();
                                     editor.putInt("notify2_" + did, 0);
                                     MessagesStorage.getInstance().setDialogFlags(did, 0);
@@ -703,7 +704,7 @@ public void onClick(View v) {
                                     } else if (i == 4) {
                                         untilTime = Integer.MAX_VALUE;
                                     }
-                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                                     SharedPreferences.Editor editor = preferences.edit();
                                     long flags;
                                     if (i == 4) {
@@ -1666,7 +1667,7 @@ public void onResume() {
     }
 
     public void setPlayProfileAnimation(boolean value) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         if (!AndroidUtilities.isTablet() && preferences.getBoolean("view_animations", true)) {
             playProfileAnimation = value;
         }
@@ -2689,7 +2690,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int i) {
                         }
                         textCell.setTextAndValue(LocaleController.getString("MessageLifetime", R.string.MessageLifetime), value);
                     } else if (i == settingsNotificationsRow) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         boolean enabled;
                         long did;
                         if (dialog_id != 0) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
index 22ed45142..1abfc75b0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
@@ -31,6 +31,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger_test.AndroidUtilities;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.ChatObject;
 import org.telegram.messenger_test.MessagesController;
 import org.telegram.messenger_test.ApplicationLoader;
@@ -150,7 +151,7 @@ public boolean onFragmentCreate() {
         colorRow = rowCount++;
         ledInfoRow = rowCount++;
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         customEnabled = preferences.getBoolean("custom_" + dialog_id, false);
 
         boolean hasOverride = preferences.contains("notify2_" + dialog_id);
@@ -193,7 +194,7 @@ public View createView(final Context context) {
             public void onItemClick(int id) {
                 if (id == -1) {
                     if (notificationsEnabled && customEnabled) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         preferences.edit().putInt("notify2_" + dialog_id, 0).commit();
                     }
                     finishFragment();
@@ -220,7 +221,7 @@ public boolean supportsPredictiveItemAnimations() {
             @Override
             public void onItemClick(View view, int position) {
                 if (position == customRow && view instanceof TextCheckBoxCell) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     customEnabled = !customEnabled;
                     notificationsEnabled = customEnabled;
                     preferences.edit().putBoolean("custom_" + dialog_id, customEnabled).commit();
@@ -281,7 +282,7 @@ public void onAnimationEnd(Animator animator) {
                             tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_TYPE, RingtoneManager.TYPE_NOTIFICATION);
                             tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_DEFAULT, true);
                             tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_DEFAULT_URI, RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION));
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                             Uri currentSound = null;
 
                             String defaultPath = null;
@@ -310,7 +311,7 @@ public void onAnimationEnd(Animator animator) {
                             tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_TYPE, RingtoneManager.TYPE_RINGTONE);
                             tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_DEFAULT, true);
                             tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_DEFAULT_URI, RingtoneManager.getDefaultUri(RingtoneManager.TYPE_RINGTONE));
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                             Uri currentSound = null;
 
                             String defaultPath = null;
@@ -365,7 +366,7 @@ public void run() {
                             return;
                         }
                         final Context context1 = getParentActivity();
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         int notifyMaxCount = preferences.getInt("smart_max_count_" + dialog_id, 2);
                         int notifyDelay = preferences.getInt("smart_delay_" + dialog_id, 3 * 60);
                         if (notifyMaxCount == 0) {
@@ -424,7 +425,7 @@ public void onItemClick(View view, int position) {
                                 }
                                 int notifyMaxCount = position % 10 + 1;
                                 int notifyDelay = position / 10 + 1;
-                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                                 preferences.edit().putInt("smart_max_count_" + dialog_id, notifyMaxCount).commit();
                                 preferences.edit().putInt("smart_delay_" + dialog_id, notifyDelay * 60).commit();
                                 if (adapter != null) {
@@ -440,7 +441,7 @@ public void onItemClick(View view, int position) {
                         builder.setNegativeButton(LocaleController.getString("SmartNotificationsDisabled", R.string.SmartNotificationsDisabled), new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialog, int which) {
-                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                                 preferences.edit().putInt("smart_max_count_" + dialog_id, 0).commit();
                                 if (adapter != null) {
                                     adapter.notifyItemChanged(smartRow);
@@ -462,7 +463,7 @@ public void run() {
                             }
                         }));
                     } else if (position == popupEnabledRow) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         preferences.edit().putInt("popup_" + dialog_id, 1).commit();
                         ((RadioCell) view).setChecked(true, true);
                         view = listView.findViewWithTag(2);
@@ -470,7 +471,7 @@ public void run() {
                             ((RadioCell) view).setChecked(false, true);
                         }
                     } else if (position == popupDisabledRow) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         preferences.edit().putInt("popup_" + dialog_id, 2).commit();
                         ((RadioCell) view).setChecked(true, true);
                         view = listView.findViewWithTag(1);
@@ -513,7 +514,7 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
                 }
             }
 
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
             SharedPreferences.Editor editor = preferences.edit();
 
             if (requestCode == 12) {
@@ -611,7 +612,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 }
                 case 1: {
                     TextSettingsCell textCell = (TextSettingsCell) holder.itemView;
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     if (position == soundRow) {
                         String value = preferences.getString("sound_" + dialog_id, LocaleController.getString("SoundDefault", R.string.SoundDefault));
                         if (value.equals("NoSound")) {
@@ -695,7 +696,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 }
                 case 3: {
                     TextColorCell textCell = (TextColorCell) holder.itemView;
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     int color;
                     if (preferences.contains("color_" + dialog_id)) {
                         color = preferences.getInt("color_" + dialog_id, 0xff0000ff);
@@ -717,7 +718,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 }
                 case 4: {
                     RadioCell radioCell = (RadioCell) holder.itemView;
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     int popup = preferences.getInt("popup_" + dialog_id, 0);
                     if (popup == 0) {
                         popup = preferences.getInt((int) dialog_id < 0 ? "popupGroup" : "popupAll", 0);
@@ -738,7 +739,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 }
                 case 5: {
                     TextCheckBoxCell cell = (TextCheckBoxCell) holder.itemView;
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     cell.setTextAndCheck(LocaleController.getString("NotificationsEnableCustom", R.string.NotificationsEnableCustom), customEnabled && notificationsEnabled, false);
                     break;
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ReportOtherActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ReportOtherActivity.java
index d33d5b29a..686ddb582 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ReportOtherActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ReportOtherActivity.java
@@ -26,6 +26,7 @@
 
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.ApplicationLoader;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.MessagesController;
 import org.telegram.messenger_test.R;
@@ -129,7 +130,7 @@ public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
     @Override
     public void onResume() {
         super.onResume();
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         boolean animations = preferences.getBoolean("view_animations", true);
         if (!animations) {
             firstNameField.requestFocus();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index 93990dca0..89bf7fa83 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -55,6 +55,7 @@
 
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.PhoneFormat.PhoneFormat;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.ContactsController;
 import org.telegram.messenger_test.MediaController;
 import org.telegram.messenger_test.UserObject;
@@ -394,7 +395,7 @@ public void onItemClick(View view, final int position) {
                     builder.setNegativeButton(LocaleController.getString("Done", R.string.Done), new DialogInterface.OnClickListener() {
                         @Override
                         public void onClick(DialogInterface dialog, int which) {
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                             SharedPreferences.Editor editor = preferences.edit();
                             editor.putInt("fons_size", numberPicker.getValue());
                             MessagesController.getInstance().fontSize = numberPicker.getValue();
@@ -406,7 +407,7 @@ public void onClick(DialogInterface dialog, int which) {
                     });
                     showDialog(builder.create());
                 } else if (position == enableAnimationsRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     boolean animations = preferences.getBoolean("view_animations", true);
                     SharedPreferences.Editor editor = preferences.edit();
                     editor.putBoolean("view_animations", !animations);
@@ -457,7 +458,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 } else if (position == clearLogsRow) {
                     FileLog.cleanupLogs();
                 } else if (position == sendByEnterRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     boolean send = preferences.getBoolean("send_by_enter", false);
                     SharedPreferences.Editor editor = preferences.edit();
                     editor.putBoolean("send_by_enter", !send);
@@ -532,7 +533,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     }, new DialogInterface.OnClickListener() {
                         @Override
                         public void onClick(DialogInterface dialog, int which) {
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                             SharedPreferences.Editor editor = preferences.edit();
                             editor.putInt("sortContactsBy", which);
                             editor.commit();
@@ -599,7 +600,7 @@ public void onClick(View v) {
                             } catch (Exception e) {
                                 FileLog.e(e);
                             }
-                            SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).edit();
+                            SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE).edit();
                             editor.putBoolean("allowBigEmoji", MessagesController.getInstance().allowBigEmoji = maskValues[0]);
                             editor.putBoolean("useSystemEmoji", MessagesController.getInstance().useSystemEmoji = maskValues[1]);
                             editor.commit();
@@ -878,7 +879,7 @@ public int getSelectedCount() {
     }
 
     private void performAskAQuestion() {
-        final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         int uid = preferences.getInt("support_id", 0);
         TLRPC.User supportUser = null;
         if (uid != 0) {
@@ -1177,7 +1178,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 case 2: {
                     TextSettingsCell textCell = (TextSettingsCell) holder.itemView;
                     if (position == textSizeRow) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         int size = preferences.getInt("fons_size", AndroidUtilities.isTablet() ? 18 : 16);
                         textCell.setTextAndValue(LocaleController.getString("TextSize", R.string.TextSize), String.format("%d", size), true);
                     } else if (position == languageRow) {
@@ -1186,7 +1187,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                         textCell.setTextAndValue(LocaleController.getString("Theme", R.string.Theme), Theme.getCurrentThemeName(), true);
                     } else if (position == contactsSortRow) {
                         String value;
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         int sort = preferences.getInt("sortContactsBy", 0);
                         if (sort == 0) {
                             value = LocaleController.getString("Default", R.string.Default);
@@ -1228,7 +1229,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 }
                 case 3: {
                     TextCheckCell textCell = (TextCheckCell) holder.itemView;
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                     if (position == enableAnimationsRow) {
                         textCell.setTextAndCheck(LocaleController.getString("EnableAnimations", R.string.EnableAnimations), preferences.getBoolean("view_animations", true), false);
                     } else if (position == sendByEnterRow) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ShareActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ShareActivity.java
index e77979cf3..158669258 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ShareActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ShareActivity.java
@@ -22,6 +22,7 @@
 
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.ApplicationLoader;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.FileLog;
 import org.telegram.messenger_test.MessageObject;
 import org.telegram.messenger_test.R;
@@ -57,7 +58,7 @@ protected void onCreate(Bundle savedInstanceState) {
             return;
         }
 
-        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("botshare", Activity.MODE_PRIVATE);
+        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("botshare"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         String message = sharedPreferences.getString(hash + "_m", null);
         if (TextUtils.isEmpty(message)) {
             finish();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ThemeActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ThemeActivity.java
index b2f04d895..707af9e34 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ThemeActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ThemeActivity.java
@@ -30,6 +30,7 @@
 
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.ApplicationLoader;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.FileLoader;
 import org.telegram.messenger_test.FileLog;
 import org.telegram.messenger_test.LocaleController;
@@ -166,7 +167,7 @@ public void onClick(View v) {
                             listAdapter.notifyDataSetChanged();
                             alertDialog.dismiss();
 
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                             if (preferences.getBoolean("themehint", false)) {
                                 return;
                             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
index cee700bd7..26e982b01 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
@@ -50,6 +50,7 @@
 import com.googlecode.mp4parser.util.Path;
 
 import org.telegram.messenger_test.AndroidUtilities;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.FileLoader;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.MediaController;
@@ -1217,7 +1218,7 @@ public void onClick(View view) {
     }
 
     private void didChangedCompressionLevel(boolean request) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putInt("compress_video2", selectedCompression);
         editor.commit();
@@ -1647,7 +1648,7 @@ private boolean processOpenVideo() {
 
             videoDuration *= 1000;
 
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
             selectedCompression = preferences.getInt("compress_video2", 1);
             updateWidthHeightBitrateForCompression();
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/VoIPActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/VoIPActivity.java
index bdc8767c3..27bec9dd8 100755
--- a/TMessagesProj/src/main/java/org/telegram/ui/VoIPActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/VoIPActivity.java
@@ -56,6 +56,7 @@
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.ApplicationLoader;
 import org.telegram.messenger_test.BuildVars;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.ContactsController;
 import org.telegram.messenger_test.Emoji;
 import org.telegram.messenger_test.ImageReceiver;
@@ -1123,7 +1124,7 @@ public void run() {
                     showRetry();
                 } else if (state == VoIPService.STATE_ESTABLISHED) {
                     if(!wasFirstStateChange){
-                        int count=getSharedPreferences("mainconfig", MODE_PRIVATE).getInt("call_emoji_tooltip_count", 0);
+                        int count=getSharedPreferences("mainconfig"+ Change_user_helper.userTag, MODE_PRIVATE).getInt("call_emoji_tooltip_count", 0);
                         if(count<3){
                             setEmojiTooltipVisible(true);
                             hintTextView.postDelayed(tooltipHider=new Runnable(){
@@ -1133,7 +1134,7 @@ public void run(){
                                     setEmojiTooltipVisible(false);
                                 }
                             }, 5000);
-                            getSharedPreferences("mainconfig", MODE_PRIVATE).edit().putInt("call_emoji_tooltip_count", count+1).apply();
+                            getSharedPreferences("mainconfig"+ Change_user_helper.userTag, MODE_PRIVATE).edit().putInt("call_emoji_tooltip_count", count+1).apply();
                         }
                     }
                     setStateTextAnimated("0:00", false);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java
index 294548595..9997223c3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java
@@ -26,6 +26,7 @@
 import android.widget.ImageView;
 
 import org.telegram.messenger_test.AndroidUtilities;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.support.widget.LinearLayoutManager;
 import org.telegram.messenger_test.support.widget.RecyclerView;
@@ -88,7 +89,7 @@ public boolean onFragmentCreate() {
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileDidLoaded);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.wallpapersDidLoaded);
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
         selectedBackground = preferences.getInt("selectedBackground", 1000001);
         overrideThemeWallpaper = preferences.getBoolean("overrideThemeWallpaper", false);
         selectedColor = preferences.getInt("selectedColor", 0);
@@ -170,7 +171,7 @@ public void onItemClick(int id) {
                     }
 
                     if (done) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         editor.putInt("selectedBackground", selectedBackground);
                         editor.putInt("selectedColor", selectedColor);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/WebviewActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/WebviewActivity.java
index 6c515a51b..e76bbca99 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/WebviewActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/WebviewActivity.java
@@ -29,6 +29,7 @@
 
 import org.telegram.messenger_test.AndroidUtilities;
 import org.telegram.messenger_test.ApplicationLoader;
+import org.telegram.messenger_test.Change_user_helper;
 import org.telegram.messenger_test.FileLog;
 import org.telegram.messenger_test.LocaleController;
 import org.telegram.messenger_test.MessageObject;
@@ -237,7 +238,7 @@ public static boolean supportWebview() {
     public static void openGameInBrowser(String urlStr, MessageObject messageObject, Activity parentActivity, String short_name, String username) {
         try {
             String url = urlStr;
-            SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("botshare", Activity.MODE_PRIVATE);
+            SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("botshare"+ Change_user_helper.userTag, Activity.MODE_PRIVATE);
             String existing = sharedPreferences.getString("" + messageObject.getId(), null);
             StringBuilder hash = new StringBuilder(existing != null ? existing : "");
             StringBuilder addHash = new StringBuilder("tgShareScoreUrl=" + URLEncoder.encode("tgb://share_game_score?hash=", "UTF-8"));
