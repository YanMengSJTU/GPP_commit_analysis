diff --git a/GoogleImageSearch/.gitignore b/GoogleImageSearch/.gitignore
new file mode 100644
index 000000000..796b96d1c
--- /dev/null
+++ b/GoogleImageSearch/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/GoogleImageSearch/build.gradle b/GoogleImageSearch/build.gradle
new file mode 100644
index 000000000..d5fdaeb83
--- /dev/null
+++ b/GoogleImageSearch/build.gradle
@@ -0,0 +1,44 @@
+buildscript {
+    repositories {
+        mavenCentral()
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:0.12.+'
+    }
+}
+
+apply plugin: 'maven'
+apply plugin: 'com.android.library'
+
+android {
+    compileSdkVersion 19
+    buildToolsVersion '19.1.0'
+
+    defaultConfig {
+        applicationId "me.ji5.googleimagesearch"
+        minSdkVersion 9
+        targetSdkVersion 19
+        versionCode 1
+        versionName "1.0.0"
+    }
+    buildTypes {
+        release {
+            runProguard false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+        debug {
+            runProguard false
+        }
+    }
+}
+
+repositories {
+    mavenCentral()
+}
+
+dependencies {
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+    compile 'com.android.support:appcompat-v7:20.0.0'
+    compile 'com.google.code.gson:gson:2.2.4'
+    compile 'com.koushikdutta.ion:ion:1.3.7'
+}
diff --git a/GoogleImageSearch/proguard-rules.pro b/GoogleImageSearch/proguard-rules.pro
new file mode 100644
index 000000000..0e1339756
--- /dev/null
+++ b/GoogleImageSearch/proguard-rules.pro
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in /opt/android-studio/sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
diff --git a/GoogleImageSearch/src/androidTest/java/net/infobank/lab/googleimagesearch/ApplicationTest.java b/GoogleImageSearch/src/androidTest/java/net/infobank/lab/googleimagesearch/ApplicationTest.java
new file mode 100644
index 000000000..5a31a7ce7
--- /dev/null
+++ b/GoogleImageSearch/src/androidTest/java/net/infobank/lab/googleimagesearch/ApplicationTest.java
@@ -0,0 +1,13 @@
+package net.infobank.lab.googleimagesearch;
+
+import android.app.Application;
+import android.test.ApplicationTestCase;
+
+/**
+ * <a href="http://d.android.com/tools/testing/testing_android.html">Testing Fundamentals</a>
+ */
+public class ApplicationTest extends ApplicationTestCase<Application> {
+    public ApplicationTest() {
+        super(Application.class);
+    }
+}
\ No newline at end of file
diff --git a/GoogleImageSearch/src/main/AndroidManifest.xml b/GoogleImageSearch/src/main/AndroidManifest.xml
new file mode 100644
index 000000000..8e5959218
--- /dev/null
+++ b/GoogleImageSearch/src/main/AndroidManifest.xml
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+          package="me.ji5.googleimagesearch">
+
+    <uses-permission android:name="android.permission.INTERNET"/>
+    <application
+        android:icon="@drawable/ic_launcher">
+        <activity
+            android:theme="@style/Theme.AppCompat.Light"
+            android:name=".GoogleImageSearchActivity"/>
+    </application>
+
+</manifest>
diff --git a/GoogleImageSearch/src/main/java/com/koushikdutta/ion/view/SquaredImageView.java b/GoogleImageSearch/src/main/java/com/koushikdutta/ion/view/SquaredImageView.java
new file mode 100755
index 000000000..215b40ab2
--- /dev/null
+++ b/GoogleImageSearch/src/main/java/com/koushikdutta/ion/view/SquaredImageView.java
@@ -0,0 +1,25 @@
+package com.koushikdutta.ion.view;
+
+import android.content.Context;
+import android.util.AttributeSet;
+import android.widget.ImageView;
+
+/**
+ * An image view which always remains square with respect to its width.
+ * https://github.com/koush/ion/blob/master/ion-sample/src/com/koushikdutta/ion/sample/SquaredImageView.java
+ */
+final class SquaredImageView extends ImageView {
+    public SquaredImageView(Context context) {
+        super(context);
+    }
+
+    public SquaredImageView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+    }
+
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+        setMeasuredDimension(getMeasuredWidth(), getMeasuredWidth());
+    }
+}
diff --git a/GoogleImageSearch/src/main/java/me.ji5/googleimagesearch/GoogleImageSearchActivity.java b/GoogleImageSearch/src/main/java/me.ji5/googleimagesearch/GoogleImageSearchActivity.java
new file mode 100644
index 000000000..6acead3e8
--- /dev/null
+++ b/GoogleImageSearch/src/main/java/me.ji5/googleimagesearch/GoogleImageSearchActivity.java
@@ -0,0 +1,178 @@
+package me.ji5.googleimagesearch;
+
+import android.app.ProgressDialog;
+import android.content.Context;
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Bundle;
+import android.support.v7.app.ActionBarActivity;
+import android.text.TextUtils;
+import android.util.Log;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.inputmethod.InputMethodManager;
+import android.widget.AdapterView;
+import android.widget.ArrayAdapter;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.GridView;
+import android.widget.ImageView;
+
+import com.google.gson.JsonArray;
+import com.google.gson.JsonObject;
+import com.koushikdutta.async.future.Future;
+import com.koushikdutta.async.future.FutureCallback;
+import com.koushikdutta.ion.Ion;
+
+import java.io.File;
+
+/**
+ * https://github.com/koush/ion/blob/master/ion-sample/src/com/koushikdutta/ion/sample/GoogleImageSearch.java
+ * Created by koush on 6/4/13.
+ */
+public class GoogleImageSearchActivity extends ActionBarActivity {
+    public static final String URL = "originalUrl";
+    public static final String FILE_PATH = "filePath";
+
+    private static final int NUM_OF_COLUMNS = 4;
+    private imageAdapter imageAdapter;
+    private Future<JsonObject> loading;
+    private EditText searchText;
+    private GridView gridView;
+
+    // Adapter to populate and imageview from an url contained in the array adapter
+    private class imageAdapter extends ArrayAdapter<String> {
+        public imageAdapter(Context context) {
+            super(context, 0);
+        }
+
+        @Override
+        public View getView(int position, View convertView, ViewGroup parent) {
+            // see if we need to load more to get 40, otherwise populate the adapter
+            if (position > getCount() - 4)
+                loadMore();
+
+            if (convertView == null)
+                convertView = getLayoutInflater().inflate(R.layout.google_image, null);
+
+            // find the image view
+            final ImageView iv = (ImageView) convertView.findViewById(R.id.image);
+
+            // select the image view
+            Ion.with(iv)
+                    .resize(256, 256)
+                    .centerCrop()
+                    .placeholder(R.drawable.placeholder)
+                    .error(R.drawable.error)
+                    .load(getItem(position));
+
+            return convertView;
+        }
+    }
+
+    void loadMore() {
+        if (loading != null && !loading.isDone() && !loading.isCancelled())
+            return;
+
+        // query googles image search api
+        loading = Ion.with(GoogleImageSearchActivity.this)
+                .load(String.format("https://ajax.googleapis.com/ajax/services/search/images?v=1.0&q=%s&start=%d&imgsz=medium", Uri.encode(searchText.getText().toString()), imageAdapter.getCount()))
+                        // get the results as json
+                .asJsonObject()
+                .setCallback(new FutureCallback<JsonObject>() {
+                    @Override
+                    public void onCompleted(Exception e, JsonObject result) {
+                        try {
+                            if (e != null)
+                                throw e;
+                            // find the results and populate
+
+                            if (result != null && result.has("responseData")) {
+                                JsonArray results = result.getAsJsonObject("responseData").getAsJsonArray("results");
+                                for (int i = 0; i < results.size(); i++) {
+                                    imageAdapter.add(results.get(i).getAsJsonObject().get("url").getAsString());
+                                }
+                            }
+                        } catch (Exception ex) {
+                            ex.printStackTrace();
+                            // toast any error we encounter (google image search has an API throttling limit that sometimes gets hit)
+                            // Toast.makeText(GoogleImageSearchActivity.this, ex.toString(), Toast.LENGTH_LONG).show();
+                        }
+
+                        searchText.setEnabled(true);
+                        findViewById(R.id.search).setEnabled(true);
+                    }
+                });
+    }
+
+    /**
+     * Called when the activity is first created.
+     */
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        Ion.getDefault(this).configure().setLogging("GoogleImageSearchActivity", BuildConfig.DEBUG ? Log.VERBOSE : Log.ASSERT);
+
+        setContentView(R.layout.google_image_search);
+
+        final Button search = (Button) findViewById(R.id.search);
+        searchText = (EditText) findViewById(R.id.search_text);
+        search.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                search();
+            }
+        });
+
+        gridView = (GridView) findViewById(R.id.results);
+        gridView.setNumColumns(NUM_OF_COLUMNS);
+        imageAdapter = new imageAdapter(this);
+        gridView.setAdapter(imageAdapter);
+        gridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            @Override
+            public void onItemClick(AdapterView<?> adapterView, View view, int position, long id) {
+                String cacheRootDir = getExternalCacheDir() + File.separator;
+
+                final String originalUrl = imageAdapter.getItem(position);
+
+                ProgressDialog progressDialog = new ProgressDialog(GoogleImageSearchActivity.this);
+                Ion.with(GoogleImageSearchActivity.this)
+                        .load(imageAdapter.getItem(position))
+                        .progressDialog(progressDialog)
+                        .write(new File(cacheRootDir + Uri.parse(imageAdapter.getItem(position)).getLastPathSegment()))
+                        .setCallback(new FutureCallback<File>() {
+                            @Override
+                            public void onCompleted(Exception e, File file) {
+                                if (file == null || !file.exists()) {
+                                    setResult(RESULT_CANCELED);
+                                    finish();
+                                    return;
+                                }
+
+                                Intent result = new Intent();
+                                result.putExtra(URL, originalUrl);
+                                result.putExtra(FILE_PATH, file.getAbsolutePath());
+                                setResult(RESULT_OK, result);
+                                finish();
+                                return;
+                            }
+                        });
+            }
+        });
+
+        search();
+    }
+
+    private void search() {
+        if (TextUtils.isEmpty(searchText.getText().toString())) return;
+
+        searchText.setEnabled(false);
+        findViewById(R.id.search).setEnabled(false);
+
+        imageAdapter.clear();
+        loadMore();
+        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
+        imm.hideSoftInputFromWindow(searchText.getWindowToken(), 0);
+    }
+}
\ No newline at end of file
diff --git a/GoogleImageSearch/src/main/res/drawable-hdpi/ic_launcher.png b/GoogleImageSearch/src/main/res/drawable-hdpi/ic_launcher.png
new file mode 100644
index 000000000..96a442e5b
Binary files /dev/null and b/GoogleImageSearch/src/main/res/drawable-hdpi/ic_launcher.png differ
diff --git a/GoogleImageSearch/src/main/res/drawable-mdpi/ic_launcher.png b/GoogleImageSearch/src/main/res/drawable-mdpi/ic_launcher.png
new file mode 100644
index 000000000..359047dfa
Binary files /dev/null and b/GoogleImageSearch/src/main/res/drawable-mdpi/ic_launcher.png differ
diff --git a/GoogleImageSearch/src/main/res/drawable-xhdpi/ic_launcher.png b/GoogleImageSearch/src/main/res/drawable-xhdpi/ic_launcher.png
new file mode 100644
index 000000000..71c6d760f
Binary files /dev/null and b/GoogleImageSearch/src/main/res/drawable-xhdpi/ic_launcher.png differ
diff --git a/GoogleImageSearch/src/main/res/drawable-xxhdpi/ic_launcher.png b/GoogleImageSearch/src/main/res/drawable-xxhdpi/ic_launcher.png
new file mode 100644
index 000000000..4df189464
Binary files /dev/null and b/GoogleImageSearch/src/main/res/drawable-xxhdpi/ic_launcher.png differ
diff --git a/GoogleImageSearch/src/main/res/drawable/error.jpg b/GoogleImageSearch/src/main/res/drawable/error.jpg
new file mode 100755
index 000000000..c953fbcd3
Binary files /dev/null and b/GoogleImageSearch/src/main/res/drawable/error.jpg differ
diff --git a/GoogleImageSearch/src/main/res/drawable/placeholder.jpg b/GoogleImageSearch/src/main/res/drawable/placeholder.jpg
new file mode 100755
index 000000000..eff9e9e14
Binary files /dev/null and b/GoogleImageSearch/src/main/res/drawable/placeholder.jpg differ
diff --git a/GoogleImageSearch/src/main/res/layout/google_image.xml b/GoogleImageSearch/src/main/res/layout/google_image.xml
new file mode 100755
index 000000000..e1613bb75
--- /dev/null
+++ b/GoogleImageSearch/src/main/res/layout/google_image.xml
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+             xmlns:tools="http://schemas.android.com/tools"
+             android:layout_width="match_parent"
+             android:layout_height="match_parent"
+             android:layout_gravity="center"
+             android:gravity="center">
+
+    <com.koushikdutta.ion.view.SquaredImageView
+        android:id="@+id/image"
+        android:scaleType="fitCenter"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:gravity="center"
+        tools:src="@drawable/ic_launcher"/>
+</FrameLayout>
\ No newline at end of file
diff --git a/GoogleImageSearch/src/main/res/layout/google_image_search.xml b/GoogleImageSearch/src/main/res/layout/google_image_search.xml
new file mode 100755
index 000000000..05fb95057
--- /dev/null
+++ b/GoogleImageSearch/src/main/res/layout/google_image_search.xml
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+              xmlns:tools="http://schemas.android.com/tools"
+              android:layout_width="match_parent"
+              android:layout_height="match_parent"
+              android:orientation="vertical">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal">
+
+        <EditText
+            android:id="@+id/search_text"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            tools:text="Van Gogh"/>
+
+        <Button
+            android:id="@+id/search"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Search"/>
+    </LinearLayout>
+
+    <GridView
+        android:id="@+id/results"
+        android:listSelector="@null"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"/>
+
+</LinearLayout>
\ No newline at end of file
diff --git a/GoogleImageSearch/src/main/res/layout/progress.xml b/GoogleImageSearch/src/main/res/layout/progress.xml
new file mode 100644
index 000000000..5f73d85c3
--- /dev/null
+++ b/GoogleImageSearch/src/main/res/layout/progress.xml
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+              android:orientation="vertical"
+              android:gravity="center"
+              android:layout_width="match_parent"
+              android:layout_height="match_parent">
+
+    <TextView
+        style="@android:style/TextAppearance.Large"
+        android:layout_gravity="center"
+        android:text="File Download"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        />
+
+    <ProgressBar
+        android:minHeight="20dp"
+        android:maxHeight="20dp"
+        android:id="@+id/progress"
+        style="?android:attr/progressBarStyleHorizontal"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"/>
+
+    <TextView
+        android:layout_gravity="center"
+        android:id="@+id/download_count"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        />
+
+    <Button
+        android:layout_gravity="center"
+        android:id="@+id/download"
+        android:text="Download"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        />
+</LinearLayout>
\ No newline at end of file
diff --git a/GoogleImageSearch/src/main/res/menu/google_image_search.xml b/GoogleImageSearch/src/main/res/menu/google_image_search.xml
new file mode 100644
index 000000000..5bf9b374c
--- /dev/null
+++ b/GoogleImageSearch/src/main/res/menu/google_image_search.xml
@@ -0,0 +1,4 @@
+<menu
+    xmlns:tools="http://schemas.android.com/tools"
+    tools:context=".GoogleImageSearch">
+</menu>
diff --git a/GoogleImageSearch/src/main/res/values-w820dp/dimens.xml b/GoogleImageSearch/src/main/res/values-w820dp/dimens.xml
new file mode 100644
index 000000000..63fc81644
--- /dev/null
+++ b/GoogleImageSearch/src/main/res/values-w820dp/dimens.xml
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
diff --git a/GoogleImageSearch/src/main/res/values/dimens.xml b/GoogleImageSearch/src/main/res/values/dimens.xml
new file mode 100644
index 000000000..47c822467
--- /dev/null
+++ b/GoogleImageSearch/src/main/res/values/dimens.xml
@@ -0,0 +1,5 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+</resources>
diff --git a/GoogleImageSearch/src/main/res/values/strings.xml b/GoogleImageSearch/src/main/res/values/strings.xml
new file mode 100644
index 000000000..045e125f3
--- /dev/null
+++ b/GoogleImageSearch/src/main/res/values/strings.xml
@@ -0,0 +1,3 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+</resources>
diff --git a/GoogleImageSearch/src/main/res/values/styles.xml b/GoogleImageSearch/src/main/res/values/styles.xml
new file mode 100644
index 000000000..92795d1cd
--- /dev/null
+++ b/GoogleImageSearch/src/main/res/values/styles.xml
@@ -0,0 +1,8 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light">
+        <!-- Customize your theme here. -->
+    </style>
+
+</resources>
diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index ab347d7c4..6adad16fe 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -17,8 +17,9 @@ tasks.withType(JavaCompile) {
 }
 
 dependencies {
-    compile 'com.android.support:support-v4:19.0.+'
-    compile 'com.google.android.gms:play-services:3.2.+'
+    compile project(':GoogleImageSearch')
+    compile 'com.android.support:support-v4:20.0.0'
+    compile 'com.google.android.gms:play-services:5.0.77'
     compile 'net.hockeyapp.android:HockeySDK:3.0.1'
     compile 'com.googlecode.mp4parser:isoparser:1.0.+'
 }
@@ -81,7 +82,7 @@ android {
     }
 
     defaultConfig {
-        minSdkVersion 8
+        minSdkVersion 9
         targetSdkVersion 19
         versionCode 307
         versionName "1.7.0"
diff --git a/TMessagesProj/src/main/AndroidManifest.xml b/TMessagesProj/src/main/AndroidManifest.xml
index 894e88eea..014709160 100644
--- a/TMessagesProj/src/main/AndroidManifest.xml
+++ b/TMessagesProj/src/main/AndroidManifest.xml
@@ -153,6 +153,9 @@
         <meta-data android:name="com.sec.android.multiwindow.MINIMUM_SIZE_W" android:value="632dp" />
         <meta-data android:name="com.sec.android.multiwindow.MINIMUM_SIZE_H" android:value="598dp" />
 
+        <meta-data
+            android:name="com.google.android.gms.version"
+            android:value="@integer/google_play_services_version"/>
     </application>
 
 </manifest>
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 4e784d62f..e4036417d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -9,6 +9,7 @@
 package org.telegram.ui;
 
 import android.animation.Animator;
+import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.Context;
@@ -48,24 +49,24 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
-import org.telegram.android.AndroidUtilities;
 import org.telegram.PhoneFormat.PhoneFormat;
+import org.telegram.android.AndroidUtilities;
+import org.telegram.android.ContactsController;
 import org.telegram.android.LocaleController;
 import org.telegram.android.MediaController;
+import org.telegram.android.MessagesController;
 import org.telegram.android.MessagesStorage;
 import org.telegram.android.NotificationsController;
-import org.telegram.messenger.TLRPC;
-import org.telegram.android.ContactsController;
-import org.telegram.messenger.FileLog;
-import org.telegram.objects.MessageObject;
-import org.telegram.objects.PhotoObject;
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLoader;
-import org.telegram.android.MessagesController;
+import org.telegram.messenger.FileLog;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
+import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
+import org.telegram.objects.MessageObject;
+import org.telegram.objects.PhotoObject;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Cells.ChatAudioCell;
 import org.telegram.ui.Cells.ChatBaseCell;
@@ -74,8 +75,8 @@
 import org.telegram.ui.Views.ActionBar.ActionBarLayer;
 import org.telegram.ui.Views.ActionBar.ActionBarMenu;
 import org.telegram.ui.Views.ActionBar.ActionBarMenuItem;
-import org.telegram.ui.Views.BackupImageView;
 import org.telegram.ui.Views.ActionBar.BaseFragment;
+import org.telegram.ui.Views.BackupImageView;
 import org.telegram.ui.Views.ChatActivityEnterView;
 import org.telegram.ui.Views.ImageReceiver;
 import org.telegram.ui.Views.LayoutListView;
@@ -89,6 +90,8 @@
 import java.util.HashMap;
 import java.util.concurrent.Semaphore;
 
+import me.ji5.googleimagesearch.GoogleImageSearchActivity;
+
 public class ChatActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, MessagesActivity.MessagesActivityDelegate,
         DocumentSelectActivity.DocumentSelectActivityDelegate, PhotoViewer.PhotoViewerProvider, PhotoPickerActivity.PhotoPickerActivityDelegate,
         VideoEditorActivity.VideoEditorActivityDelegate {
@@ -180,6 +183,7 @@
     private final static int attach_document = 9;
     private final static int attach_location = 10;
     private final static int chat_menu_avatar = 11;
+    private final static int attach_web_image = 12;
 
     public ChatActivity(Bundle args) {
         super(args);
@@ -543,6 +547,8 @@ public void onItemClick(int id) {
                         MessagesActivity fragment = new MessagesActivity(args);
                         fragment.setDelegate(ChatActivity.this);
                         presentFragment(fragment);
+                    } else if (id == attach_web_image) {
+                        getParentActivity().startActivityForResult(new Intent(getParentActivity(), GoogleImageSearchActivity.class), 10);
                     }
                 }
             });
@@ -567,6 +573,7 @@ public void onItemClick(int id) {
             item.addSubItem(attach_video, LocaleController.getString("ChatVideo", R.string.ChatVideo), R.drawable.ic_attach_video);
             item.addSubItem(attach_document, LocaleController.getString("ChatDocument", R.string.ChatDocument), R.drawable.ic_ab_doc);
             item.addSubItem(attach_location, LocaleController.getString("ChatLocation", R.string.ChatLocation), R.drawable.ic_attach_location);
+            item.addSubItem(attach_web_image, LocaleController.getString("ChatWebImage", R.string.ChatWebImage), R.drawable.ic_attach_gallery);
             menuItem = item;
 
             ActionBarMenu actionMode = actionBarLayer.createActionMode();
@@ -883,6 +890,7 @@ private void scrollToLastMessage() {
         }
     }
 
+    @SuppressLint("NewApi")
     private void showPagedownButton(boolean show, boolean animated) {
         if (pagedownButton == null) {
             return;
@@ -1372,6 +1380,9 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
                 } else {*/
                     processSendingVideo(videoPath);
                 //}
+            } else if (requestCode == 10) {
+                currentPicturePath = data.getStringExtra(GoogleImageSearchActivity.FILE_PATH);
+                processSendingPhoto(currentPicturePath, null);
             } else if (requestCode == 21) {
                 if (data == null || data.getData() == null) {
                     showAttachmentError();
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index e3d61b06e..7e2a62daa 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -91,6 +91,7 @@
     <string name="ChatLocation">Location</string>
     <string name="ChatVideo">Video</string>
     <string name="ChatDocument">Document</string>
+    <string name="ChatWebImage">Search Web Images</string>
     <string name="NoMessages">No messages here yet...</string>
     <string name="ViewPhoto">View Photo</string>
     <string name="ViewLocation">View Location</string>
diff --git a/settings.gradle b/settings.gradle
index 867a4183d..0c5a21ac1 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -1 +1 @@
-include ':TMessagesProj'
+include ':TMessagesProj', ':GoogleImageSearch'
