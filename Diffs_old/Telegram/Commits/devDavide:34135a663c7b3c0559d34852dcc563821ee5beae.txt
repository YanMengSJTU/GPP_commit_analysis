diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
index 9b529480d..26dd5e8c5 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
@@ -33,8 +33,8 @@
 
     private static final int LAYOUT_RES_ID = R.layout.item_vote_list;
     private List<Vote> votes;
-    private final List<Boolean> originalVotes;
-    private final Set<Vote> newVoteSet;
+    private List<Boolean> originalVotes;
+    private Set<Vote> newVoteSet;
     private OnVoteChangeListener onVoteChageListener;
 
     public interface OnVoteChangeListener {
@@ -43,12 +43,7 @@
 
     public VoteListAdapter(Context context, List<Vote> votes) {
         super(context, LAYOUT_RES_ID);
-        this.votes = votes;
-        this.newVoteSet = new HashSet<>();
-        this.originalVotes = new ArrayList<>();
-        for (Vote v : votes){
-            originalVotes.add(v.isVote() == null ? null :new Boolean(v.isVote().booleanValue()));
-        }
+        setVotes(votes);
         this.onVoteChageListener = new OnVoteChangeListener() {
             @Override
             public void voteChanges(boolean areThereChangesToSave) {
@@ -58,6 +53,15 @@ public void voteChanges(boolean areThereChangesToSave) {
 
     public void setVotes(List<Vote> votes) {
         this.votes = votes;
+        this.newVoteSet = new HashSet<>();
+        this.originalVotes = new ArrayList<>();
+        for (Vote v : votes){
+            originalVotes.add(v.isVote() == null ? null :new Boolean(v.isVote().booleanValue()));
+        }
+    }
+
+    public List<Vote> getVotes() {
+        return votes;
     }
 
     @Override
@@ -122,4 +126,5 @@ public void onClick(View v) {
     public Collection<Vote> getNewVoteSet() {
         return newVoteSet;
     }
+
 }
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/dao/PollgramDAO.java b/TMessagesProj/src/main/java/org/pollgram/decision/dao/PollgramDAO.java
index a1edc928d..bac55b3d1 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/dao/PollgramDAO.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/dao/PollgramDAO.java
@@ -41,6 +41,8 @@
 
     public abstract UsersDecisionVotes getUsersDecisionVotes(long decisionId, int[] participantIds);
 
+    public abstract UsersDecisionVotes getUsersDecisionVotes(long decisionId, List<TLRPC.User> users);
+
     private static volatile PollgramDAO Instance = null;
 
     public static PollgramDAO getInstance() {
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/dao/PollgramDAODBImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/dao/PollgramDAODBImpl.java
index 93cae337e..de20dd9a5 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/dao/PollgramDAODBImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/dao/PollgramDAODBImpl.java
@@ -220,8 +220,14 @@ public Vote save(Vote vote) {
 
     @Override
     public UsersDecisionVotes getUsersDecisionVotes(long decisionId, int[] participantIds) {
-        Decision decision = getDecision(decisionId);
         List<TLRPC.User> users = getUsers(participantIds);
+        return getUsersDecisionVotes(decisionId,users);
+
+    }
+
+    @Override
+    public UsersDecisionVotes getUsersDecisionVotes(long decisionId, List<TLRPC.User> users) {
+        Decision decision = getDecision(decisionId);
         List<Option> options = getOptions(decisionId);
         List<Vote> votes = getVote(decisionId, null);
         UsersDecisionVotes udv = new UsersDecisionVotes(decision, users, options, votes);
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/dao/PollgramDAOStubImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/dao/PollgramDAOStubImpl.java
index 3132c9071..62a95278b 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/dao/PollgramDAOStubImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/dao/PollgramDAOStubImpl.java
@@ -118,6 +118,10 @@ private Vote getVote(int userId, Option option) {
         return new Vote(stubId, voteValue, new Date(), userId, option.getId());
     }
 
+    @Override
+    public UsersDecisionVotes getUsersDecisionVotes(long decisionId, List<TLRPC.User> users) {
+        return null;
+    }
 
     @Override
     public List<TLRPC.User> getUsers(int[] usersIds) {
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
index f14ed1c8e..45aef8400 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
@@ -52,6 +52,7 @@
 import org.telegram.ui.Components.LayoutHelper;
 
 import java.util.Collection;
+import java.util.Date;
 
 public class VotesManagerTabsFragment extends Fragment {
 
@@ -201,17 +202,29 @@ private View getOptionsListView(ViewGroup container, LayoutInflater inflater) {
         btnSaveOption.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
+                Collection<Vote> votes2Save;
+                if (usersDecisionVotes.atLeastOneIsNull(currentUserId)) {
+                    votes2Save = adapter.getVotes();
+                    // set to false null votes
+                    for(Vote v : votes2Save){
+                        if (v.isVote() == null) {
+                            v.setVote(false);
+                            v.setVoteTime(new Date());
+                        }
+                    }
+                } else
+                    votes2Save = adapter.getNewVoteSet();
 
-                Collection<Vote> votes2Save = adapter.getNewVoteSet();
                 Log.i(LOG_TAG, "saving votes[" + votes2Save + "]");
                 for (Vote v : votes2Save) {
                     // update persistence
                     Vote saved = pollgramDAO.save(v);
 
-                    // update data structure
-                    Option option = usersDecisionVotes.getOption(v.getOptionId());
-                    usersDecisionVotes.setVote(currentUserId, option, saved);
                 }
+                usersDecisionVotes = pollgramDAO.getUsersDecisionVotes(usersDecisionVotes.getDecision().getId(),
+                        usersDecisionVotes.getUsers());
+                btnSaveOption.setVisibility(View.GONE);
+
                 // set new sorted  votes in the adapter
                 adapter.setVotes(usersDecisionVotes.getVotes(currentUserId));
                 adapter.notifyDataSetChanged();
@@ -335,12 +348,9 @@ public void onClick(View v) {
             usernameLayout.setBackgroundResource(R.drawable.cell_normal);
             fixedColumn.addView(usernameLayout, ViewGroup.LayoutParams.WRAP_CONTENT, otherRowHeight);
 
-            boolean atLeastOneIsNull = false;
+            boolean atLeastOneIsNull = usersDecisionVotes.atLeastOneIsNull(user.id);
             for (Option option : usersDecisionVotes.getOptions()) {
                 Vote v = usersDecisionVotes.getVotes(user.id, option);
-                View item;
-                if (v.isVote() == null)
-                    atLeastOneIsNull = true;
                 add2Row(row, newVoteView(v), otherRowHeight);
             }
             if (!atLeastOneIsNull)
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/utils/PolgramUtils.java b/TMessagesProj/src/main/java/org/pollgram/decision/utils/PolgramUtils.java
index 3428ff059..a66501961 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/utils/PolgramUtils.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/utils/PolgramUtils.java
@@ -49,10 +49,10 @@ public static ActionBar init(ActionBar actionBar, String title,int titleFontSize
         txtTitle.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
         txtTitle.setText(title);
         pollIconContainer.addView(txtTitle, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT,
-                Gravity.LEFT | Gravity.BOTTOM, 54, 0, 0, 22));
+                Gravity.LEFT | Gravity.BOTTOM, 48, 0, 0, 22));
 
         actionBar.addView(pollIconContainer,  LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.MATCH_PARENT,
-                Gravity.TOP | Gravity.LEFT, 56, 0, 40, 0));
+                Gravity.TOP | Gravity.LEFT, 36, 0, 40, 0));
 
         return actionBar;
     }
