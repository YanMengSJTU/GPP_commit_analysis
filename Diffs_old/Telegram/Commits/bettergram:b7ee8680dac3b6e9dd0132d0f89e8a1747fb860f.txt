diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index 29af54cbf..b1da0264f 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -34,10 +34,8 @@ dependencies {
     implementation 'com.googlecode.mp4parser:isoparser:1.0.6'
     implementation 'com.stripe:stripe-android:2.0.2'
     annotationProcessor "com.github.instagram.ig-json-parser:processor:$rootProject.igjsonVersion"
+    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
     implementation "com.github.instagram.ig-json-parser:runtime:$rootProject.igjsonVersion"
-    implementation("com.squareup.picasso:picasso:$rootProject.picassoVersion") {
-        exclude group: 'com.android.support', module: 'support-annotations'
-    }
     implementation project(path: ':inline-youtube-view')
     implementation(project(path: ":shinebuttonlib")) {
         exclude group: 'com.android.support', module: 'appcompat-v7'
diff --git a/TMessagesProj/proguard-rules.pro b/TMessagesProj/proguard-rules.pro
index e331e0738..fe795c30f 100644
--- a/TMessagesProj/proguard-rules.pro
+++ b/TMessagesProj/proguard-rules.pro
@@ -3,12 +3,12 @@
 -keepclassmembernames class * {
     @com.google.android.gms.common.annotation.KeepName *;
 }
--keep class io.bettergram.telegram.** { *; }
+-keep class io.bettergram.** { *; }
 -keep class com.google.android.exoplayer2.** { *; }
 -keep class com.coremedia.** { *; }
 -keep class com.googlecode.mp4parser.** { *; }
 -dontwarn com.coremedia.**
--dontwarn io.bettergram.telegram.**
+-dontwarn io.bettergram.**
 -dontwarn com.google.android.exoplayer2.**
 -dontwarn com.google.android.gms.**
 -dontwarn com.google.common.cache.**
@@ -22,5 +22,14 @@
 -dontwarn org.jaxen.**
 -dontwarn org.conscrypt.**
 -dontwarn javax.xml.stream.**
--dontwarn org.slf4j.**
--keep class com.rometools.** { *; }
\ No newline at end of file
+# JSR 305 annotations are for embedding nullability information.
+-dontwarn javax.annotation.**
+
+# A resource is loaded with a relative path so the package of this class must be preserved.
+-keepnames class okhttp3.internal.publicsuffix.PublicSuffixDatabase
+
+# Animal Sniffer compileOnly dependency to ensure APIs are compatible with older versions of Java.
+-dontwarn org.codehaus.mojo.animal_sniffer.*
+
+# OkHttp platform used only on JVM and when Conscrypt dependency is available.
+-dontwarn okhttp3.internal.platform.ConscryptPlatform
\ No newline at end of file
diff --git a/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java b/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java
index 60b2b8191..0296c0a3c 100644
--- a/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java
@@ -9,7 +9,6 @@
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
 import android.graphics.Color;
-import android.graphics.Paint;
 import android.graphics.Typeface;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
@@ -41,6 +40,7 @@
 import io.bettergram.messenger.R;
 import io.bettergram.service.CryptoDataService;
 import io.bettergram.telegram.messenger.AndroidUtilities;
+import io.bettergram.telegram.messenger.ImageReceiver;
 import io.bettergram.telegram.messenger.support.widget.RecyclerView;
 import io.bettergram.telegram.ui.ActionBar.Theme;
 import io.bettergram.telegram.ui.Components.CardView.CardView;
@@ -51,7 +51,6 @@
 
 import static android.text.TextUtils.isEmpty;
 import static io.bettergram.service.CryptoDataService.EXTRA_LIMIT;
-import static io.bettergram.telegram.messenger.ApplicationLoader.picasso;
 
 public class CryptoAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {
 
@@ -92,8 +91,9 @@ public void run() {
         }
     }
 
-    class MainViewHolder extends RecyclerView.ViewHolder implements
-            ShineButton.OnCheckedChangeListener {
+    class MainViewHolder extends RecyclerView.ViewHolder implements ShineButton.OnCheckedChangeListener, ImageReceiver.ImageReceiverDelegate {
+
+        ImageReceiver cryptoPhoto;
 
         ImageView imageCrypto;
         TextView textCryptoName, textCryptoPrice, textDayDelta;
@@ -111,6 +111,10 @@ public void setCrypto(String crypto) {
             textCryptoPrice = itemView.findViewWithTag("textCryptoPrice");
             textDayDelta = itemView.findViewWithTag("textDayDelta");
 
+            cryptoPhoto = new ImageReceiver(imageCrypto);
+            cryptoPhoto.setNeedsQualityThumb(false);
+            cryptoPhoto.setDelegate(this);
+
             Activity activity = (Activity) itemView.getContext();
             star = itemView.findViewWithTag("star");
             if (star.activity == null) {
@@ -140,6 +144,12 @@ public void onCheckedChanged(View view, boolean checked) {
                 }
             }
         }
+
+        @Override
+        public void didSetImage(ImageReceiver imageReceiver, boolean set, boolean thumb) {
+            Bitmap bitmap = imageReceiver.getBitmap();
+            imageCrypto.setImageBitmap(bitmap);
+        }
     }
 
     class HeaderViewHolder extends RecyclerView.ViewHolder {
@@ -287,10 +297,6 @@ public void onPageSelected(int position) {
                         .createLinear(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT,
                                 Gravity.CENTER, 8, 0, 0, 0));
 
-                final Paint divider_paint = new Paint();
-                divider_paint.setColor(Theme.getColor(Theme.key_crypto_dividerColor));
-                divider_paint.setStrokeWidth(1); // set stroke so you can actually see the lines
-
                 LinearLayout content = new LinearLayout(context) {
                     @Override
                     protected void onDraw(Canvas canvas) {
@@ -299,7 +305,7 @@ protected void onDraw(Canvas canvas) {
                         final int height = getMeasuredHeight();
                         final float offset_y = height - 1;
                         final float offset_x = cryptoName.getX();
-                        canvas.drawLine(offset_x, offset_y, width, offset_y, divider_paint);
+                        canvas.drawLine(offset_x, offset_y, width, offset_y, Theme.dividerPaint);
                     }
                 };
                 content.setWillNotDraw(false);
@@ -341,14 +347,11 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
         if (holder instanceof HeaderViewHolder) {
             HeaderViewHolder header = (HeaderViewHolder) holder;
             double cap = cryptoData.cap;
-            header.textCap.setText(
-                    formatHeaderValue(context, "MARKET CAP($)", Number.truncateNumber(cap)));
+            header.textCap.setText(formatHeaderValue(context, "MARKET CAP($)", Number.truncateNumber(cap)));
             double dom = cryptoData.btcDominance;
-            header.textDom.setText(
-                    formatHeaderValue(context, "BTC DOM.", String.format("%.2f%%", (dom * 100))));
+            header.textDom.setText(formatHeaderValue(context, "BTC DOM.", String.format("%.2f%%", (dom * 100))));
             double vol = cryptoData.volume;
-            header.textVol
-                    .setText(formatHeaderValue(context, "24H VOL($)", Number.truncateNumber(vol)));
+            header.textVol.setText(formatHeaderValue(context, "24H VOL($)", Number.truncateNumber(vol)));
         } else if (holder instanceof MainViewHolder) {
 
             int real_position = position - 3;
@@ -370,23 +373,22 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
             if (price > 0) {
                 boolean isGreaterZero = Math.floor(price) > 0;
                 double deltaMinute = -1 * ((1 - info.delta.minute) * 100);
-                main.textCryptoPrice
-                        .setTextColor(deltaMinute > 0 ? Color.parseColor("#ff69bc35") : Color.RED);
-                main.textCryptoPrice
-                        .setText(String.format(isGreaterZero ? "$%,.2f" : "$%.4f", price));
+                main.textCryptoPrice.setTextColor(deltaMinute > 0 ? Color.parseColor("#ff69bc35") : Color.RED);
+                main.textCryptoPrice.setText(String.format(isGreaterZero ? "$%,.2f" : "$%.4f", price));
             }
             if (!isEmpty(info.icon)) {
-                picasso()
-                        .load(info.icon)
-                        .config(Bitmap.Config.RGB_565)
-                        .into(main.imageCrypto);
+                main.cryptoPhoto.setImage(
+                        info.icon,
+                        null,
+                        Theme.circle_placeholderDrawable,
+                        null,
+                        AndroidUtilities.dp(24)
+                );
             }
             if (info.delta != null) {
                 double deltaDay = -1 * ((1 - info.delta.day) * 100);
-                main.textDayDelta
-                        .setTextColor(deltaDay > 0 ? Color.parseColor("#ff69bc35") : Color.RED);
-                main.textDayDelta.setText(String.format(deltaDay > 0 ? "+%s%%" : "%s%%",
-                        Number.truncateNumber(deltaDay)));
+                main.textDayDelta.setTextColor(deltaDay > 0 ? Color.parseColor("#ff69bc35") : Color.RED);
+                main.textDayDelta.setText(String.format(deltaDay > 0 ? "+%s%%" : "%s%%", Number.truncateNumber(deltaDay)));
 
                 main.textDayDelta.setCompoundDrawablesWithIntrinsicBounds(
                         null,
diff --git a/TMessagesProj/src/main/java/io/bettergram/adapters/NewsAdapter.java b/TMessagesProj/src/main/java/io/bettergram/adapters/NewsAdapter.java
index ea6cacc6f..545367514 100644
--- a/TMessagesProj/src/main/java/io/bettergram/adapters/NewsAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/adapters/NewsAdapter.java
@@ -5,6 +5,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
+import android.graphics.Bitmap;
 import android.net.Uri;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
@@ -24,12 +25,11 @@
 import io.bettergram.messenger.R;
 import io.bettergram.service.NewsDataService;
 import io.bettergram.telegram.messenger.AndroidUtilities;
+import io.bettergram.telegram.messenger.ImageReceiver;
 import io.bettergram.telegram.messenger.support.widget.RecyclerView;
 import io.bettergram.telegram.ui.ActionBar.Theme;
 import io.bettergram.telegram.ui.Components.CardView.CardView;
 
-import static io.bettergram.telegram.messenger.ApplicationLoader.picasso;
-
 public class NewsAdapter extends RecyclerView.Adapter<NewsAdapter.NewsViewHolder> {
 
     /**
@@ -70,7 +70,9 @@ public void run() {
 
     private List<News> newsList = new ArrayList<>();
 
-    class NewsViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
+    class NewsViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener, ImageReceiver.ImageReceiverDelegate {
+
+        ImageReceiver newsPhoto;
 
         ImageView imageThumb;
         TextView textTitle, textAccount, textDatePosted;
@@ -84,6 +86,10 @@ public void run() {
             textAccount = itemView.findViewById(R.id.textAccount);
             textDatePosted = itemView.findViewById(R.id.textDatePosted);
 
+            newsPhoto = new ImageReceiver(imageThumb);
+            newsPhoto.setNeedsQualityThumb(true);
+            newsPhoto.setDelegate(this);
+
             textTitle.setOnClickListener(this);
             imageThumb.setOnClickListener(this);
 
@@ -103,6 +109,12 @@ public void run() {
             cardView.setCardBackgroundColor(Theme.getColor(Theme.key_panel_backgroundColor));
         }
 
+        @Override
+        public void didSetImage(ImageReceiver imageReceiver, boolean set, boolean thumb) {
+            Bitmap bitmap = imageReceiver.getBitmap();
+            imageThumb.setImageBitmap(bitmap);
+        }
+
         @Override
         public void onClick(View v) {
             if (news != null) {
@@ -139,13 +151,13 @@ public void onBindViewHolder(NewsViewHolder holder, int position) {
         final News news = newsList.get(position);
 
         holder.news = news;
-
-        picasso()
-                .load(news.urlToImage)
-                .fit()
-                .centerCrop()
-                .placeholder(R.drawable.drawable_picasso_placeholder)
-                .into(holder.imageThumb);
+        
+        holder.newsPhoto.setImage(
+                news.urlToImage,
+                null,
+                null,
+                null,
+                0);
 
         holder.textTitle.setText(news.title);
 
diff --git a/TMessagesProj/src/main/java/io/bettergram/adapters/ResourcesAdapter.java b/TMessagesProj/src/main/java/io/bettergram/adapters/ResourcesAdapter.java
index 366e2e2a7..6f3790742 100644
--- a/TMessagesProj/src/main/java/io/bettergram/adapters/ResourcesAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/adapters/ResourcesAdapter.java
@@ -7,6 +7,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
+import android.graphics.Bitmap;
 import android.net.Uri;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
@@ -27,12 +28,12 @@
 import io.bettergram.messenger.R;
 import io.bettergram.service.ResourcesDataService;
 import io.bettergram.telegram.messenger.AndroidUtilities;
+import io.bettergram.telegram.messenger.ImageReceiver;
 import io.bettergram.telegram.messenger.support.widget.RecyclerView;
 import io.bettergram.telegram.ui.ActionBar.Theme;
 import io.bettergram.telegram.ui.Components.RecyclerListView;
 
 import static android.text.TextUtils.isEmpty;
-import static io.bettergram.telegram.messenger.ApplicationLoader.picasso;
 
 public class ResourcesAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {
 
@@ -95,8 +96,9 @@ public void run() {
 
     }
 
-    class ContentViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
+    class ContentViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener, ImageReceiver.ImageReceiverDelegate {
 
+        ImageReceiver resourcesPhoto;
         View layoutContent;
         ImageView imageResource;
         TextView textName, textDesc;
@@ -115,6 +117,17 @@ public ContentViewHolder(View itemView) {
             layoutContent.setOnClickListener(this);
             textName.setTextColor(Theme.getColor(Theme.key_resources_subItemTitleColor));
             textDesc.setTextColor(Theme.getColor(Theme.key_resources_subItemDescriptionColor));
+
+            resourcesPhoto = new ImageReceiver(imageResource);
+            resourcesPhoto.setNeedsQualityThumb(true);
+            resourcesPhoto.setDelegate(this);
+
+        }
+
+        @Override
+        public void didSetImage(ImageReceiver imageReceiver, boolean set, boolean thumb) {
+            Bitmap bitmap = imageReceiver.getBitmap();
+            imageResource.setImageBitmap(bitmap);
         }
 
         @Override
@@ -198,7 +211,12 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                 if (!isEmpty(item.title) && !isEmpty(item.url) && !isEmpty(item.description)) {
                     cvh.textName.setText(item.title);
                     cvh.textDesc.setText(item.description);
-                    picasso().load(item.thumbnail()).into(cvh.imageResource);
+                    cvh.resourcesPhoto.setImage(
+                            item.thumbnail(),
+                            null,
+                            null,
+                            null,
+                            0);
                 }
                 break;
             default:
diff --git a/TMessagesProj/src/main/java/io/bettergram/adapters/YouTubePlayerAdapter.java b/TMessagesProj/src/main/java/io/bettergram/adapters/YouTubePlayerAdapter.java
index 09adf188d..0ec011afd 100644
--- a/TMessagesProj/src/main/java/io/bettergram/adapters/YouTubePlayerAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/adapters/YouTubePlayerAdapter.java
@@ -6,16 +6,16 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
-import android.graphics.Bitmap.Config;
+import android.graphics.Bitmap;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.ImageView;
 import android.widget.TextView;
 
 import com.flipkart.youtubeview.YouTubePlayerView;
-import com.flipkart.youtubeview.models.ImageLoader;
 
 import java.io.IOException;
 import java.util.ArrayList;
@@ -27,12 +27,12 @@
 import io.bettergram.messenger.R;
 import io.bettergram.service.YoutubeDataService;
 import io.bettergram.telegram.messenger.AndroidUtilities;
+import io.bettergram.telegram.messenger.ImageReceiver;
 import io.bettergram.telegram.messenger.support.widget.RecyclerView;
 import io.bettergram.telegram.ui.ActionBar.Theme;
 import io.bettergram.telegram.ui.Components.CardView.CardView;
 
 import static com.flipkart.youtubeview.models.YouTubePlayerType.STRICT_NATIVE;
-import static io.bettergram.telegram.messenger.ApplicationLoader.picasso;
 
 public class YouTubePlayerAdapter extends
         RecyclerView.Adapter<YouTubePlayerAdapter.YouTubePlayerViewHolder> {
@@ -80,10 +80,10 @@ public void run() {
     private String apiKey;
     private String webviewUrl;
 
-    class YouTubePlayerViewHolder extends RecyclerView.ViewHolder {
-
+    class YouTubePlayerViewHolder extends RecyclerView.ViewHolder implements ImageReceiver.ImageReceiverDelegate {
+        ImageReceiver videoPhoto;
         YouTubePlayerView playerView;
-
+        ImageView thumbnailImage;
         TextView textTitle, textAccount, textDatePosted, textViewCount;
 
         YouTubePlayerViewHolder(View view) {
@@ -108,26 +108,22 @@ public void run() {
                     textDatePosted,
                     textViewCount);
 
-            //ImageView thumbnailImage = playerView.findViewById(R.id.video_thumbnail_image);
-            //thumbnailImage.setBackgroundColor(Theme.getColor(Theme.key_panel_backgroundColor));
+            thumbnailImage = playerView.findViewById(R.id.video_thumbnail_image);
+            videoPhoto = new ImageReceiver(thumbnailImage);
+            videoPhoto.setNeedsQualityThumb(true);
+            videoPhoto.setDelegate(this);
 
             CardView cardView = (CardView) itemView;
             cardView.setCardBackgroundColor(Theme.getColor(Theme.key_panel_backgroundColor));
         }
 
-
+        @Override
+        public void didSetImage(ImageReceiver imageReceiver, boolean set, boolean thumb) {
+            Bitmap bitmap = imageReceiver.getBitmap();
+            thumbnailImage.setImageBitmap(bitmap);
+        }
     }
 
-    private ImageLoader imageLoader = (imageView, url, height, width) -> {
-        picasso()
-                .load(url)
-                .config(Config.RGB_565)
-                //.resize((int) (width * 0.70f), (int) (height * 0.70f))
-                //.centerCrop()
-                .placeholder(R.drawable.drawable_picasso_placeholder)
-                .into(imageView);
-    };
-
     public void setVideos(List<Video> videos) {
         if (videos == null || videos.isEmpty()) {
             return;
@@ -180,8 +176,21 @@ public void onBindViewHolder(final YouTubePlayerViewHolder holder, int position)
         holder.textViewCount.setText(String.format("%s views", viewCount));
 
         if (!playerView.initted) {
-            playerView.initPlayer(apiKey, videoId, webviewUrl, playerType, null, fragmentManager,
-                    imageLoader);
+            playerView.initPlayer(
+                    apiKey,
+                    videoId,
+                    webviewUrl,
+                    playerType,
+                    null,
+                    fragmentManager,
+                    (imageView, url, height, width) -> {
+                        holder.videoPhoto.setImage(
+                                url,
+                                null,
+                                null,
+                                null,
+                                width);
+                    });
         } else {
             playerView.load(videoId);
         }
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java
index 37cd47b11..a41797dba 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java
@@ -23,7 +23,6 @@
 import android.os.Handler;
 import android.os.PowerManager;
 import android.text.TextUtils;
-import android.util.Log;
 
 import com.crashlytics.android.Crashlytics;
 import com.google.android.gms.common.ConnectionResult;
@@ -32,8 +31,6 @@
 import com.google.android.gms.common.GooglePlayServicesUtil;
 import com.google.android.gms.security.ProviderInstaller;
 import com.google.firebase.iid.FirebaseInstanceId;
-import com.squareup.picasso.OkHttp3Downloader;
-import com.squareup.picasso.Picasso;
 
 import java.io.File;
 import java.security.KeyManagementException;
@@ -61,7 +58,6 @@
 public class ApplicationLoader extends Application {
 
     public static OkHttpClient okhttp_singleton;
-    private static Picasso picasso_singleton;
 
     @SuppressLint("StaticFieldLeak")
     public static volatile Context applicationContext;
@@ -308,24 +304,4 @@ public static OkHttpClient okhttp_client() {
         }
         return okhttp_singleton;
     }
-
-    public static Picasso picasso() {
-        if (picasso_singleton == null) {
-            synchronized (Picasso.class) {
-                if (picasso_singleton == null) {
-                    picasso_singleton = new Picasso
-                            .Builder(applicationContext)
-                            .downloader(new OkHttp3Downloader(okhttp_client()))
-                            .loggingEnabled(true)
-                            .listener((picasso1, uri, exception) -> {
-                                Log.e("Picasso", exception.getMessage());
-                            })
-                            .build();
-                }
-            }
-        }
-        return picasso_singleton;
-    }
-
-
 }
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/ActionBar/Theme.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/ActionBar/Theme.java
index 03f16dd9d..33ca405a1 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/ActionBar/Theme.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/ActionBar/Theme.java
@@ -310,6 +310,8 @@ public int getMinimumHeight() {
 
     public static Drawable dialog_favoriteDrawable;
 
+    public static Drawable circle_placeholderDrawable;
+
     public static Drawable moveUpDrawable;
 
     public static Paint dialogs_tabletSeletedPaint;
@@ -1082,7 +1084,6 @@ public int getMinimumHeight() {
     public static final String key_panel_labelColor = "panel_labelColor";
     public static final String key_panel_subLabelColor = "panel_subLabelColor";
 
-    public static final String key_crypto_dividerColor = "crypto_dividerColor";
     public static final String key_crypto_topTab_activeColor = "crypto_topTab_activeColor";
     public static final String key_crypto_topTab_inactiveColor = "crypto_topTab_inactiveColor";
     public static final String key_crypto_topTab_stripColor = "crypto_topTab_stripColor";
@@ -1737,7 +1738,6 @@ public int getMinimumHeight() {
         defaultColors.put(key_panel_labelColor, 0xff000000);
         defaultColors.put(key_panel_subLabelColor, 0xFFC9C9C9);
 
-        defaultColors.put(key_crypto_dividerColor, 0xffd7d7d7);
         defaultColors.put(key_crypto_topTab_activeColor, 0xFF1FCD6D);
         defaultColors.put(key_crypto_topTab_inactiveColor, 0xFFC9C9C9);
         defaultColors.put(key_crypto_topTab_stripColor, 0xFF1FCD6D);
@@ -2815,6 +2815,8 @@ public static void createCommonResources(Context context) {
             crypto_priceDownDrawable = resources.getDrawable(R.drawable.ic_arrow_price_down);
             crypto_priceUpDrawable = resources.getDrawable(R.drawable.ic_arrow_price_up);
 
+            circle_placeholderDrawable = resources.getDrawable(R.drawable.drawable_placeholder_circle);
+
             applyCommonTheme();
         }
     }
diff --git a/TMessagesProj/src/main/java/io/bettergram/utils/RoundedCornersTransform.java b/TMessagesProj/src/main/java/io/bettergram/utils/RoundedCornersTransform.java
deleted file mode 100644
index 313a5d9be..000000000
--- a/TMessagesProj/src/main/java/io/bettergram/utils/RoundedCornersTransform.java
+++ /dev/null
@@ -1,50 +0,0 @@
-package io.bettergram.utils;
-
-import android.graphics.*;
-import com.squareup.picasso.Transformation;
-
-public class RoundedCornersTransform implements Transformation {
-
-    private static RoundedCornersTransform instance = null;
-
-    private RoundedCornersTransform() {
-        // Exists only to defeat instantiation.
-    }
-
-    public static RoundedCornersTransform getInstance() {
-        if (instance == null) {
-            instance = new RoundedCornersTransform();
-        }
-        return instance;
-    }
-
-    @Override
-    public Bitmap transform(Bitmap source) {
-        int width = source.getWidth();
-        int height = source.getHeight();
-
-        Bitmap squaredBitmap = Bitmap.createBitmap(source, 0, 0, width, height);
-        if (squaredBitmap != source) {
-            source.recycle();
-        }
-
-        Bitmap.Config config = source.getConfig() != null ? source.getConfig() : Bitmap.Config.ARGB_8888;
-        Bitmap bitmap = Bitmap.createBitmap(width, height, config);
-
-        Canvas canvas = new Canvas(bitmap);
-        Paint paint = new Paint();
-        BitmapShader shader = new BitmapShader(squaredBitmap, BitmapShader.TileMode.CLAMP, BitmapShader.TileMode.CLAMP);
-        paint.setShader(shader);
-        paint.setAntiAlias(true);
-
-        float r = Math.min(width, height) / 28f;
-        canvas.drawRoundRect(new RectF(0, 0, width, height), r, r, paint);
-        squaredBitmap.recycle();
-        return bitmap;
-    }
-
-    @Override
-    public String key() {
-        return "rounded_corners";
-    }
-}
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/drawable/drawable_placeholder_circle.xml b/TMessagesProj/src/main/res/drawable/drawable_placeholder_circle.xml
new file mode 100644
index 000000000..e20fcc629
--- /dev/null
+++ b/TMessagesProj/src/main/res/drawable/drawable_placeholder_circle.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="oval">
+    <solid android:color="#1A000000" />
+</shape>
\ No newline at end of file
diff --git a/build.gradle b/build.gradle
index 490eb74bf..b19dc3656 100644
--- a/build.gradle
+++ b/build.gradle
@@ -10,9 +10,8 @@ buildscript {
         // App Dependencies
         supportVersion = '28.0.0'
         igjsonVersion = 'master-SNAPSHOT'
-        picassoVersion = '2.71828'
-        romVersion = '1.11.0'
         googleServicesVersion = '4.0.2'
+        okhttpVersion = '3.11.0'
         fabricVersion = '1.26.1'
     }
     repositories {
