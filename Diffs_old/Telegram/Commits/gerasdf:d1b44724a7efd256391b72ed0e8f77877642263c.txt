diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ContactsController.java b/TMessagesProj/src/main/java/org/telegram/messenger/ContactsController.java
index eafeb0f62..504dfab19 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ContactsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ContactsController.java
@@ -367,7 +367,6 @@ public void performSyncPhoneBook(final HashMap<Integer, Contact> contactHashMap,
         if (PrivacyPlus) {
             // Force loading contacts from server
             loadContacts(false, true);
-            return;
         }
 
         if (!first && !contactsBookLoaded) {
@@ -584,7 +583,7 @@ public void run() {
                 FileLog.e("tmessages", "done processing contacts");
 
                 if (request) {
-                    if (!toImport.isEmpty()) {
+                    if (!PrivacyPlus && !toImport.isEmpty()) {
 //                        if (ConnectionsManager.DEBUG_VERSION) {
 //                            FileLog.e("tmessages", "start import contacts");
 //                            for (TLRPC.TL_inputPhoneContact contact : toImport) {
@@ -592,6 +591,7 @@ public void run() {
 //                            }
 //                        }
                         final int count = (int)Math.ceil(toImport.size() / 500.0f);
+
                         for (int a = 0; a < count; a++) {
                             ArrayList<TLRPC.TL_inputPhoneContact> finalToImport = new ArrayList<TLRPC.TL_inputPhoneContact>();
                             finalToImport.addAll(toImport.subList(a * 500, Math.min((a + 1) * 500, toImport.size())));
@@ -664,6 +664,11 @@ public void run() {
                                 NotificationCenter.Instance.postNotificationName(MessagesController.contactsDidLoaded);
                             }
                         });
+                        if (PrivacyPlus) {
+                            if (!contactsMap.isEmpty()) {
+                                MessagesStorage.Instance.putCachedPhoneBook(contactsMap);
+                            }
+                        }
                     }
                 } else {
                     Utilities.stageQueue.postRunnable(new Runnable() {
