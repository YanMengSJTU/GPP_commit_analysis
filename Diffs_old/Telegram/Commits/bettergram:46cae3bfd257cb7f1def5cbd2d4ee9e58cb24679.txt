diff --git a/TMessagesProj/src/main/java/io/bettergram/adapters/NewsAdapter.java b/TMessagesProj/src/main/java/io/bettergram/adapters/NewsAdapter.java
index 29d214859..9eda31b36 100644
--- a/TMessagesProj/src/main/java/io/bettergram/adapters/NewsAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/adapters/NewsAdapter.java
@@ -1,7 +1,5 @@
 package io.bettergram.adapters;
 
-import static io.bettergram.telegram.messenger.ApplicationLoader.picasso;
-
 import android.app.Activity;
 import android.content.BroadcastReceiver;
 import android.content.Context;
@@ -15,7 +13,13 @@
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
+
 import com.squareup.picasso.Callback;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
 import io.bettergram.data.News;
 import io.bettergram.data.NewsList;
 import io.bettergram.data.NewsList__JsonHelper;
@@ -23,9 +27,8 @@
 import io.bettergram.service.NewsDataService;
 import io.bettergram.telegram.messenger.AndroidUtilities;
 import io.bettergram.telegram.messenger.support.widget.RecyclerView;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.List;
+
+import static io.bettergram.telegram.messenger.ApplicationLoader.picasso;
 
 public class NewsAdapter extends RecyclerView.Adapter<NewsAdapter.NewsViewHolder> {
 
@@ -107,28 +110,13 @@ public NewsViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int type) {
     public void onBindViewHolder(NewsViewHolder holder, int position) {
         final News news = newsList.get(position);
 
-        holder.imageThumb.post(() -> {
-            int width = (int) (holder.imageThumb.getMeasuredWidth() * 0.5f);
-            int height = (int) (holder.imageThumb.getMeasuredHeight() * 0.5f);
-
-            if (width > 0 && height > 0) {
-                picasso().load(news.urlToImage).resize(width, height).centerCrop()
-                        .into(holder.imageThumb, new Callback.EmptyCallback() {
-                            @Override
-                            public void onSuccess() {
-                                holder.imageThumb.requestLayout();
-                            }
-                        });
-            } else {
-                picasso().load(news.urlToImage)
-                        .into(holder.imageThumb, new Callback.EmptyCallback() {
-                            @Override
-                            public void onSuccess() {
-                                holder.imageThumb.requestLayout();
-                            }
-                        });
-            }
-        });
+        picasso().load(news.urlToImage)
+                .into(holder.imageThumb, new Callback.EmptyCallback() {
+                    @Override
+                    public void onSuccess() {
+                        //holder.imageThumb.requestLayout();
+                    }
+                });
 
         holder.textTitle.setText(news.title);
         holder.textTitle.setOnClickListener(v -> {
@@ -141,12 +129,6 @@ public void onSuccess() {
 
         //TODO: proper format
         holder.textDatePosted.setText(news.publishedAt.substring(0, 10));
-//    try {
-//      holder.textDatePosted.setText(NewsApi.getFormattedDate(news.publishedAt));
-//    } catch (ParseException e) {
-//      e.printStackTrace();
-//    }
-
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
index fb791e75d..131e7717a 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
@@ -1,25 +1,21 @@
 package io.bettergram.service;
 
-import static android.text.TextUtils.isEmpty;
-import static io.bettergram.telegram.messenger.ApplicationLoader.okhttp_client;
-import static io.bettergram.utils.AeSimpleSHA1.SHA1;
-
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
+
 import com.rometools.rome.feed.synd.SyndEntry;
 import com.rometools.rome.feed.synd.SyndFeed;
 import com.rometools.rome.io.FeedException;
 import com.rometools.rome.io.SyndFeedInput;
 import com.rometools.rome.io.XmlReader;
-import io.bettergram.data.News;
-import io.bettergram.data.NewsData;
-import io.bettergram.data.NewsData__JsonHelper;
-import io.bettergram.data.NewsList;
-import io.bettergram.data.NewsList__JsonHelper;
-import io.bettergram.data.Source;
-import io.bettergram.service.api.NewsApi;
-import io.bettergram.utils.io.IOUtils;
+
+import org.json.JSONException;
+import org.jsoup.Jsoup;
+import org.jsoup.nodes.Document;
+import org.jsoup.nodes.Element;
+import org.jsoup.select.Elements;
+
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.io.InputStream;
@@ -28,16 +24,28 @@
 import java.nio.charset.StandardCharsets;
 import java.security.NoSuchAlgorithmException;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+import io.bettergram.data.News;
+import io.bettergram.data.NewsData;
+import io.bettergram.data.NewsData__JsonHelper;
+import io.bettergram.data.NewsList;
+import io.bettergram.data.NewsList__JsonHelper;
+import io.bettergram.data.Source;
+import io.bettergram.service.api.NewsApi;
+import io.bettergram.telegram.messenger.ApplicationLoader;
+import io.bettergram.utils.io.IOUtils;
 import okhttp3.Request;
 import okhttp3.Response;
-import org.json.JSONException;
-import org.jsoup.Jsoup;
-import org.jsoup.nodes.Document;
-import org.jsoup.nodes.Element;
-import org.jsoup.select.Elements;
+
+import static android.text.TextUtils.isEmpty;
+import static io.bettergram.telegram.messenger.ApplicationLoader.okhttp_client;
+import static io.bettergram.utils.AeSimpleSHA1.SHA1;
 
 public class NewsDataService extends BaseDataService {
 
@@ -48,7 +56,9 @@
     public static final String RESULT = "result";
     public static final String NOTIFICATION = "io.bettergram.service.NewsDataService";
 
-    private SharedPreferences pref;
+    public static boolean isIntentServiceRunning = false;
+
+    private SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(NEWS_PREF, Context.MODE_PRIVATE);
 
     public NewsDataService() {
         super("NewsDataService");
@@ -56,138 +66,232 @@ public NewsDataService() {
 
     @Override
     protected void onHandleIntent(Intent intent) {
+        if (!isIntentServiceRunning) {
+            isIntentServiceRunning = true;
 
-        pref = getSharedPreferences(NEWS_PREF, Context.MODE_PRIVATE);
+            String jsonRaw = preferences.getString(KEY_SAVED_LIST, null);
+            if (!isEmpty(jsonRaw)) {
+                publishResults(jsonRaw, NOTIFICATION, RESULT);
+            }
 
-        String jsonRaw = pref.getString(KEY_SAVED_LIST, null);
-        if (!isEmpty(jsonRaw)) {
-            publishResults(jsonRaw, NOTIFICATION, RESULT);
-        }
+            List<News> articles = new ArrayList<>();
 
-        List<News> articles = new ArrayList<>();
+            try {
+                String json = NewsApi.getNewsQuietly();
 
-        try {
-            String json = NewsApi.getNewsQuietly();
+                NewsData data = NewsData__JsonHelper.parseFromJson(json);
 
-            NewsData data = NewsData__JsonHelper.parseFromJson(json);
+                for (int i = 0, size_i = data.news.size(); i < size_i; i++) {
 
-            for (int i = 0, size_i = data.news.size(); i < size_i; i++) {
+                    String url = data.news.get(i);
+                    HttpURLConnection urlConnection = (HttpURLConnection) new URL(url).openConnection();
+                    urlConnection.setRequestProperty("User-Agent", "ROME");
+                    urlConnection.connect();
+                    InputStream in = urlConnection.getInputStream();
 
-                String url = data.news.get(i);
-                HttpURLConnection urlConnection = (HttpURLConnection) new URL(url).openConnection();
-                urlConnection.setRequestProperty("User-Agent", "ROME");
-                urlConnection.connect();
-                InputStream in = urlConnection.getInputStream();
+                    String urlHash = url;
+                    try {
+                        urlHash = SHA1(urlHash);
+                    } catch (NoSuchAlgorithmException e) {
+                        e.printStackTrace();
+                    }
+                    String xmlFetched = IOUtils.toString(in, "UTF-8");
+                    Set<String> savedStringSet = preferences.getStringSet(KEY_FEED_XML_SET + urlHash, null);
+                    String xmlSaveHash =
+                            savedStringSet != null ? savedStringSet.toArray(new String[0])[0] : null;
+                    String xmlSaved =
+                            savedStringSet != null ? savedStringSet.toArray(new String[0])[1] : null;
+                    String xmlFinal = null;
+                    try {
+                        if (isEmpty(xmlSaved) || !SHA1(xmlFetched).equals(xmlSaveHash)) {
+                            Set<String> stringSet = new HashSet<>();
+                            stringSet.add(SHA1(xmlFetched));
+                            stringSet.add(xmlFetched);
+                            preferences.edit().putStringSet(KEY_FEED_XML_SET + urlHash, stringSet).apply();
+                            xmlFinal = xmlFetched;
+                        } else {
+                            xmlFinal = xmlSaved;
+                        }
+                    } catch (NoSuchAlgorithmException e) {
+                        e.printStackTrace();
+                    }
 
-                String urlHash = url;
-                try {
-                    urlHash = SHA1(urlHash);
-                } catch (NoSuchAlgorithmException e) {
-                    e.printStackTrace();
-                }
-                String xmlFetched = IOUtils.toString(in, "UTF-8");
-                Set<String> savedStringSet = pref.getStringSet(KEY_FEED_XML_SET + urlHash, null);
-                String xmlSaveHash =
-                        savedStringSet != null ? savedStringSet.toArray(new String[0])[0] : null;
-                String xmlSaved =
-                        savedStringSet != null ? savedStringSet.toArray(new String[0])[1] : null;
-                String xmlFinal = null;
-                try {
-                    if (isEmpty(xmlSaved) || !SHA1(xmlFetched).equals(xmlSaveHash)) {
-                        Set<String> stringSet = new HashSet<>();
-                        stringSet.add(SHA1(xmlFetched));
-                        stringSet.add(xmlFetched);
-                        pref.edit().putStringSet(KEY_FEED_XML_SET + urlHash, stringSet).apply();
-                        xmlFinal = xmlFetched;
-                    } else {
-                        xmlFinal = xmlSaved;
+                    if (isEmpty(xmlFinal)) {
+                        break;
                     }
-                } catch (NoSuchAlgorithmException e) {
-                    e.printStackTrace();
-                }
 
-                if (isEmpty(xmlFinal)) {
-                    break;
-                }
+                    InputStream stream = new ByteArrayInputStream(xmlFinal.getBytes(StandardCharsets.UTF_8));
 
-                InputStream stream = new ByteArrayInputStream(
-                        xmlFinal.getBytes(StandardCharsets.UTF_8));
+                    SyndFeed feed = new SyndFeedInput().build(new XmlReader(stream, "text/xml"));
 
-                SyndFeed feed = new SyndFeedInput().build(new XmlReader(stream, "text/xml"));
+                    List<News> temp = new ArrayList<>();
 
-                List<News> temp = new ArrayList<>();
+                    for (int j = 0, size_j = feed.getEntries().size(); j < size_j; j++) {
+                        SyndEntry entry = feed.getEntries().get(j);
+                        News newsItem = new News();
+                        newsItem.title = entry.getTitle();
 
-                for (int j = 0, size_j = feed.getEntries().size(); j < size_j; j++) {
-                    SyndEntry entry = feed.getEntries().get(j);
-                    News newsItem = new News();
-                    newsItem.title = entry.getTitle();
+                        Source newsSource = new Source();
+                        newsSource.name = feed.getTitle();
+                        newsItem.source = newsSource;
 
-                    SyndFeed source = entry.getSource();
+                        SyndFeed source = entry.getSource();
 
-                    Source newsSource = new Source();
-                    newsSource.name = source != null ? source.getAuthor() : entry.getAuthor();
-                    newsItem.source = newsSource;
+                        newsItem.url = entry.getLink();
+                        newsItem.urlToImage = source != null ? source.getImage().getUrl() : null;
 
-                    newsItem.url = entry.getLink();
-                    newsItem.urlToImage = source != null ? source.getImage().getUrl() : null;
+                        newsItem.publishedAt = entry.getPublishedDate().toString();
 
-                    newsItem.publishedAt = entry.getPublishedDate().toString();
+                        temp.add(newsItem);
+                    }
 
-                    temp.add(newsItem);
+                    articles.addAll(temp);
                 }
 
-                articles.addAll(temp);
+                NewsList newsList = new NewsList();
+                newsList.articles = articles;
+                if (isEmpty(jsonRaw)) {
+                    publishResults(NewsList__JsonHelper.serializeToJson(newsList), NOTIFICATION, RESULT);
+                }
+            } catch (IOException | JSONException | FeedException e) {
+                e.printStackTrace();
             }
 
-            NewsList newsList = new NewsList();
-            newsList.articles = articles;
-            publishResults(NewsList__JsonHelper.serializeToJson(newsList), NOTIFICATION, RESULT);
-        } catch (IOException | JSONException | FeedException e) {
-            e.printStackTrace();
-        }
+            if (!articles.isEmpty()) {
+
+                for (int i = 0, size = articles.size(); i < size; i++) {
+                    try {
+                        if (isEmpty(articles.get(i).urlToImage)) {
+                            Request request = new Request.Builder()
+                                    .url(articles.get(i).url)
+                                    .build();
+
+                            Response response = okhttp_client().newCall(request).execute();
+
+                            if (response.body() != null && response.isSuccessful()) {
+                                String result = response.body().string();
+                                Document document = Jsoup.parse(result);
+
+                                String thumb = null;
+
+                                //for news from https://www.coindesk.com
+                                Elements elementsFromAttrs = document.head().getElementsByAttributeValue("type", "application/ld+json");
+                                if (elementsFromAttrs != null) {
+                                    for (Element element : elementsFromAttrs) {
+                                        String json = element.html();
+                                        if (!isEmpty(json) && json.contains("\"@type\":\"NewsArticle\"")) {
+                                            Pattern pattern = Pattern.compile("\"thumbnailUrl\":\"(.*?)\"");
+                                            Matcher matcher = pattern.matcher(json);
+                                            if (matcher.find()) {
+                                                thumb = json.substring(
+                                                        matcher.start(),
+                                                        matcher.end())
+                                                        .replace("\"thumbnailUrl\":", "")
+                                                        .replaceAll("^\"|\"$", "")
+                                                        .replaceAll("\\\\/", "/");
+                                                break;
+                                            }
+                                        }
+                                    }
+                                }
 
-        if (!articles.isEmpty()) {
+                                // for news from https://livecoinwatch.com and https://coincentral.com
+                                if (isEmpty(thumb)) {
+                                    Elements origImageUrl = document.head().getElementsByAttributeValue("property", "og:image");
+                                    String file = origImageUrl.attr("content");
+                                    file = file.substring(file.lastIndexOf('/') + 1, file.length());
+                                    file = file.substring(0, file.lastIndexOf('.'));
+
+                                    elementsFromAttrs = document.body().getElementsByAttributeValue("class", "td-post-featured-image");
+                                    if (isEmpty(elementsFromAttrs.html())) {
+                                        elementsFromAttrs = document.body().getElementsByAttributeValue("class", "fl-photo-content fl-photo-img-png");
+                                    }
+                                    boolean found = false;
+                                    for (int w = 0, size_w = elementsFromAttrs.size(); w < size_w; w++) {
+                                        Element element = elementsFromAttrs.get(w);
+                                        Elements imgElements = element.getElementsByTag("img");
+                                        String sourceSet = imgElements.attr("srcset");
+                                        List<String> sources = Arrays.asList(sourceSet.split("\\s*,\\s*"));
+                                        int smallest = Integer.MAX_VALUE;
+                                        int secondSmallest = Integer.MAX_VALUE;
+                                        for (int x = 0, size_x = sources.size(); x < size_x; x++) {
+                                            String[] source = sources.get(x).split(" ");
+                                            if (source.length > 1) {
+                                                int width = Integer.valueOf(source[1].replaceAll("\\D+", ""));
+                                                if (width == smallest) {
+                                                    secondSmallest = smallest;
+                                                } else if (width < smallest) {
+                                                    secondSmallest = smallest;
+                                                    smallest = width;
+                                                } else if (width < secondSmallest) {
+                                                    secondSmallest = width;
+                                                }
+                                            }
+                                        }
+                                        if (secondSmallest > 0) {
+                                            for (int x = 0, size_x = sources.size(); x < size_x; x++) {
+                                                if (sources.get(x).contains(secondSmallest + "w")) {
+                                                    String[] source = sources.get(x).split(" ");
+                                                    if (source.length > 1 && source[0].contains(file)) {
+                                                        thumb = source[0];
+                                                        found = true;
+                                                        break;
+                                                    }
+                                                }
+                                            }
+                                        }
+                                        if (found) {
+                                            break;
+                                        }
+                                    }
+                                }
 
-            for (int i = 0, size = articles.size(); i < size; i++) {
-                try {
-                    if (isEmpty(articles.get(i).urlToImage)) {
-
-                        Request request = new Request.Builder()
-                                .url(articles.get(i).url)
-                                .build();
-
-                        Response response = okhttp_client().newCall(request).execute();
-
-                        if (response.body() != null && response.isSuccessful()) {
-                            String result = response.body().string();
-                            Document document = Jsoup.parse(result);
-                            Elements metas = document.head().getElementsByTag("meta");
-                            for (Element meta : metas) {
-                                Elements attribute = meta
-                                        .getElementsByAttributeValue("property", "og:image");
-                                String content = attribute.attr("content");
-                                if (!isEmpty(content)) {
-                                    articles.get(i).urlToImage = content;
-                                    break;
+                                // for https://www.ccn.com
+                                if (isEmpty(thumb)) {
+                                    elementsFromAttrs = document.getElementsByAttributeValue("class", "post-thumbnail");
+                                    if (isEmpty(elementsFromAttrs.html()) && elementsFromAttrs.size() > 0) {
+                                        Elements elements = elementsFromAttrs.get(0).getElementsByTag("img");
+                                        String temp = elements.attr("src");
+                                        if (!isEmpty(temp)) {
+                                            thumb = temp;
+                                        }
+                                    }
                                 }
+
+                                if (isEmpty(thumb)) {
+                                    Elements metas = document.head().getElementsByTag("meta");
+                                    for (Element meta : metas) {
+                                        Elements attribute = meta
+                                                .getElementsByAttributeValue("property", "og:image");
+                                        String content = attribute.attr("content");
+                                        if (!isEmpty(content)) {
+                                            thumb = content;
+                                            break;
+                                        }
+                                    }
+                                }
+
+                                articles.get(i).urlToImage = thumb;
+
                             }
-                        }
 
+                        }
+                    } catch (IOException e) {
+                        e.printStackTrace();
                     }
+                }
+                NewsList newsList = new NewsList();
+                newsList.articles = articles;
+
+                try {
+                    String json = NewsList__JsonHelper.serializeToJson(newsList);
+                    preferences.edit().putString(KEY_SAVED_LIST, json).apply();
+                    publishResults(json, NOTIFICATION, RESULT);
                 } catch (IOException e) {
                     e.printStackTrace();
                 }
             }
-            NewsList newsList = new NewsList();
-            newsList.articles = articles;
-
-            try {
-                String json = NewsList__JsonHelper.serializeToJson(newsList);
-                pref.edit().putString(KEY_SAVED_LIST, json).apply();
-                publishResults(json, NOTIFICATION, RESULT);
-            } catch (IOException e) {
-                e.printStackTrace();
-            }
+            isIntentServiceRunning = false;
         }
     }
 }
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java
index 47dbb512a..37cd47b11 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java
@@ -8,8 +8,6 @@
 
 package io.bettergram.telegram.messenger;
 
-import static io.bettergram.service.CryptoDataService.EXTRA_LIMIT;
-
 import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.app.AlarmManager;
@@ -26,6 +24,7 @@
 import android.os.PowerManager;
 import android.text.TextUtils;
 import android.util.Log;
+
 import com.crashlytics.android.Crashlytics;
 import com.google.android.gms.common.ConnectionResult;
 import com.google.android.gms.common.GooglePlayServicesNotAvailableException;
@@ -35,11 +34,7 @@
 import com.google.firebase.iid.FirebaseInstanceId;
 import com.squareup.picasso.OkHttp3Downloader;
 import com.squareup.picasso.Picasso;
-import io.bettergram.service.CryptoDataService;
-import io.bettergram.telegram.tgnet.ConnectionsManager;
-import io.bettergram.telegram.tgnet.TLRPC;
-import io.bettergram.telegram.ui.Components.ForegroundDetector;
-import io.fabric.sdk.android.Fabric;
+
 import java.io.File;
 import java.security.KeyManagementException;
 import java.security.NoSuchAlgorithmException;
@@ -47,12 +42,22 @@
 import java.util.Arrays;
 import java.util.List;
 import java.util.concurrent.TimeUnit;
+
 import javax.net.ssl.SSLContext;
+
+import io.bettergram.service.CryptoDataService;
+import io.bettergram.service.NewsDataService;
+import io.bettergram.telegram.tgnet.ConnectionsManager;
+import io.bettergram.telegram.tgnet.TLRPC;
+import io.bettergram.telegram.ui.Components.ForegroundDetector;
+import io.fabric.sdk.android.Fabric;
 import okhttp3.CipherSuite;
 import okhttp3.ConnectionSpec;
 import okhttp3.OkHttpClient;
 import okhttp3.TlsVersion;
 
+import static io.bettergram.service.CryptoDataService.EXTRA_LIMIT;
+
 public class ApplicationLoader extends Application {
 
     public static OkHttpClient okhttp_singleton;
@@ -278,10 +283,13 @@ private void updateAndroidSecurityProvider() {
         return Arrays.asList(legacyTls, ConnectionSpec.CLEARTEXT);
     }
 
-    public static void warmupCryptos(Activity activity) {
+    public static void warmupCryptosData(Activity activity) {
         Intent intent = new Intent(activity, CryptoDataService.class);
         intent.putExtra(EXTRA_LIMIT, 100);
         activity.startService(intent);
+
+        Intent intent2 = new Intent(activity, NewsDataService.class);
+        activity.startService(intent2);
     }
 
     public static OkHttpClient okhttp_client() {
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
index c2e15a885..3cf60163b 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
@@ -34,6 +34,7 @@
 import android.view.animation.AccelerateDecelerateInterpolator;
 import android.view.animation.DecelerateInterpolator;
 import android.widget.*;
+
 import io.bettergram.adapters.*;
 import io.bettergram.messenger.R;
 import io.bettergram.telegram.messenger.*;
@@ -1359,8 +1360,8 @@ public void onMessageSend(CharSequence message) {
                         currentBottomTabPosition = position;
                         actionBar.setTitle(title);
                         boolean isChat = position == 0;
-                        hideFloatingButton(!isChat, true);
-                        newTabsView.hide(!isChat);
+                        floatingButton.post(() -> hideFloatingButton(!isChat, true));
+                        newTabsView.post(() -> newTabsView.hide(!isChat));
 
                         ActionBarMenuItem itemSearch = menu.getItem(0);
                         itemSearch.setVisibility(!isChat ? View.GONE : View.VISIBLE);
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/LaunchActivity.java
index e2dc7073d..96492fe3f 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/LaunchActivity.java
@@ -106,7 +106,7 @@
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         ApplicationLoader.postInitApplication();
-        ApplicationLoader.warmupCryptos(this);
+        ApplicationLoader.warmupCryptosData(this);
         AndroidUtilities.checkDisplaySize(this, getResources().getConfiguration());
         currentAccount = UserConfig.selectedAccount;
         if (!UserConfig.getInstance(currentAccount).isClientActivated()) {
