diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/DecisionAdapter.java b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/DecisionAdapter.java
index 28fa5240a..3b4850cfa 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/DecisionAdapter.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/DecisionAdapter.java
@@ -6,7 +6,6 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ArrayAdapter;
-import android.widget.ImageView;
 import android.widget.TextView;
 
 import org.pollgram.R;
@@ -54,25 +53,26 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
         // init layout
         View rowView = inflater.inflate(LAYOUT_RES_ID, parent, false);
-        ImageView decisionImage = (ImageView)rowView.findViewById(R.id.item_decision_iv_image);
-        TextView decisionTitle = (TextView)rowView.findViewById(R.id.item_decision_tv_title);
-        TextView decisionSubtitle1 = (TextView)rowView.findViewById(R.id.item_decision_tv_subtitle_1);
-        TextView decisionSubtitle2 = (TextView)rowView.findViewById(R.id.item_decision_tv_subtitle_2);
+        TextView tvDecisionTitle = (TextView)rowView.findViewById(R.id.item_decision_tv_title);
+        TextView tvDecisionSubtitle1 = (TextView)rowView.findViewById(R.id.item_decision_tv_subtitle_1);
+        TextView tvDecisionSubtitle2 = (TextView)rowView.findViewById(R.id.item_decision_tv_subtitle_2);
+        TextView tvAdmin = (TextView)rowView.findViewById(R.id.item_decision_tv_admin);
 
 
         // put data
         Decision decision = getItem(position);
-        decisionTitle.setText(decision.getTitle());
+        tvDecisionTitle.setText(decision.getTitle());
         int userThatVoteSoFar = PollgramFactory.getDAO().getUserVoteCount(decision);
         String userAsString = pollgramService.asString(pollgramService.getUser(decision.getUserCreatorId()));
         String creationDateStr = DateFormat.getDateInstance(DateFormat.SHORT).
                 format(decision.getCreationDate());
-        decisionSubtitle1.setText(getContext().getString(R.string.createdByUserOnDay, userAsString, creationDateStr));
+        tvDecisionSubtitle1.setText(getContext().getString(R.string.createdByUserOnDay, userAsString, creationDateStr));
         if (groupMemberCount == -1)
-            decisionSubtitle2.setVisibility(View.GONE);
+            tvDecisionSubtitle2.setVisibility(View.GONE);
         else
-            decisionSubtitle2.setText(getContext().getString(R.string.howManyMemberVote, userThatVoteSoFar, groupMemberCount));
+            tvDecisionSubtitle2.setText(getContext().getString(R.string.howManyMemberVote, userThatVoteSoFar, groupMemberCount));
 
+        tvAdmin.setVisibility(decision.isEditable() ? View.VISIBLE : View.GONE);
         if (!decision.isOpen())
             rowView.setBackgroundColor(Color.LTGRAY);
 
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/data/UsersDecisionVotes.java b/TMessagesProj/src/main/java/org/pollgram/decision/data/UsersDecisionVotes.java
index a46efbb15..c263517c1 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/data/UsersDecisionVotes.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/data/UsersDecisionVotes.java
@@ -63,11 +63,15 @@ public UsersDecisionVotes(Decision decision, List<TLRPC.User> users, List<Option
         Collections.sort(options,optionsComparator);
 
         // calculate max votes
+        updateMaxVoteCount();
+
+    }
+
+    private void updateMaxVoteCount() {
         maxVote = 0;
         for (Option o : getOptions()){
             maxVote = Math.max(maxVote, getPositiveVoteCount(o));
         }
-
     }
 
     public Decision getDecision(){
@@ -126,12 +130,12 @@ public Vote getVotes(int userId, Option option){
     public void setVote(int userID, Option option, Vote vote){
         voteMap.put(new UserIdOptionKey(userID,option.getId()), vote);
         // update cache
-        Integer positiveVoteCout = calculateVoteCount(option, true);
-        cachedPositiveVoteCount.put(option, positiveVoteCout);
+        Integer positiveVoteCount = calculateVoteCount(option, true);
+        cachedPositiveVoteCount.put(option, positiveVoteCount);
         cachedNegativeVoteCount.put(option, calculateVoteCount(option,false));
 
         Collections.sort(options, optionsComparator);
-        maxVote = Math.max(maxVote, positiveVoteCout);
+        updateMaxVoteCount();
     }
 
     private final Map<Option, Integer> cachedPositiveVoteCount = new HashMap<>();
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/UIUtils.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/UIUtils.java
index 3691c031c..3172ffbcd 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/UIUtils.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/UIUtils.java
@@ -1,6 +1,7 @@
 package org.pollgram.decision.ui;
 
 import android.content.Context;
+import android.content.DialogInterface;
 import android.text.TextUtils;
 import android.util.Log;
 import android.util.TypedValue;
@@ -26,6 +27,16 @@
     private static final float TITLE_FONT_SIZE = 19;
     private static final String LOG_TAG = "uiUtils";
 
+
+    public static DialogInterface.OnClickListener emptyOnClickListener(){
+        return new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                // nothing to do
+            }
+        };
+    }
+
     public static TextView init(ActionBar actionBar, int title, int drawableIcon){
         return init(actionBar, ApplicationLoader.applicationContext.getString(title), drawableIcon);
     }
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
index b99cc7227..d2c402a0c 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
@@ -37,8 +37,10 @@
 
     static final String LOG_TAG = "SlidingTabs";
 
+
     // menu ids
     private static int nextId = 1;
+    private static final int ID_INFO_DECISION = nextId++;
     private static final int ID_CLOSE_DECISION = nextId++;
     private static final int ID_REOPEN_DECISION = nextId++;
     private static final int ID_DELETE_DECISION = nextId++;
@@ -57,14 +59,16 @@
     private TextView tvCreationInfo;
     private TextView tvUserVoteCount;
     private TextView tvDecisionStatus;
+    private TextView tvAdmin;
 
     private TextView menuDeleteDecisionItem;
     private TextView menuReopenDecisionItem;
     private TextView menuCloseDecisionItem;
-    private TextView menuEditOptions;
 
+    private TextView menuEditOptions;
     private ActionBarMenu menu;
     private VotesManagerTabsFragment votesManagerTabsFragment;
+    private Context context;
 
     public VotesManagerFragment(Bundle bundle) {
         super(bundle);
@@ -79,10 +83,11 @@ public boolean onFragmentCreate() {
         long decisionId = getArguments().getLong(PAR_DECISION_ID);
         members = pollgramService.getUsers(getArguments().getIntArray(PAR_PARTICIPANT_IDS));
         decision = pollgramDAO.getDecision(decisionId);
+        this.context = ApplicationLoader.applicationContext;
         if (decision == null){
             Log.e(LOG_TAG,"Decision not found for id ["+decisionId+"]");
-            Toast.makeText(ApplicationLoader.applicationContext,
-                    ApplicationLoader.applicationContext.getString(R.string.decisionNotFound,"  "),
+            Toast.makeText(context,
+                    context.getString(R.string.decisionNotFound,"  "),
                     Toast.LENGTH_SHORT).show();
             finishFragment();
             return false;
@@ -97,13 +102,13 @@ public View createView(final Context context) {
         actionBar.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                Bundle bundle = new Bundle();
-                bundle.putLong(DecisionDetailFragment.PAR_DECISION_ID, decision.getId());
-                presentFragment(new DecisionDetailFragment(bundle));
+                showDecisionInfo();
             }
         });
         menu = actionBar.createMenu();
         ActionBarMenuItem headerItem = menu.addItem(0, R.drawable.ic_ab_other);
+        headerItem.addSubItem(ID_INFO_DECISION,
+                getTitle(MessageType.NEW_DECISION, R.string.infoDecision), 0);
         menuCloseDecisionItem = headerItem.addSubItem(ID_CLOSE_DECISION,
                 getTitle(MessageType.CLOSE_DECISION, R.string.closeDecision), 0);
         menuReopenDecisionItem =  headerItem.addSubItem(ID_REOPEN_DECISION,
@@ -119,6 +124,9 @@ public void onItemClick(int id) {
                 if (id == UIUtils.ACTION_BAR_BACK_ITEM_ID) {
                     finishFragment();
                     return;
+                } else if (id == ID_INFO_DECISION){
+                    showDecisionInfo();
+                    return;
                 }else if (id == ID_DELETE_DECISION) {
                     AlertDialog.Builder builder = new AlertDialog.Builder(context);
                     builder.setMessage(R.string.deleteDecisionQuestion).setPositiveButton(R.string.yes, new DialogInterface.OnClickListener() {
@@ -136,32 +144,7 @@ public void onClick(DialogInterface dialog, int which) {
                     }).show();
                     return;
                 } else if (id == ID_CLOSE_DECISION) {
-                    int voteCount = pollgramDAO.getUserVoteCount(decision);
-                    int membersCount = members.size();
-                    if (voteCount == membersCount) {
-                        // all users voted al least one option for the current decision
-                        closeDecision();
-                    } else {
-                        StringBuilder message =  new StringBuilder();
-                        if (voteCount == 1)
-                            message.append(context.getString(R.string.closeDecisionQuestionPrefixSingle, voteCount, membersCount));
-                        else
-                            message.append(context.getString(R.string.closeDecisionQuestionPrefixMulti, voteCount, membersCount));
-                        message.append(context.getString(R.string.closeDecisionQuestionSuffix));
-                        AlertDialog.Builder builder = new AlertDialog.Builder(context);
-                        builder.setMessage(message.toString());
-                        builder.setPositiveButton(R.string.yes, new DialogInterface.OnClickListener() {
-                            @Override
-                            public void onClick(DialogInterface dialog, int which) {
-                                closeDecision();
-                            }
-                        }).setNegativeButton(R.string.no, new DialogInterface.OnClickListener() {
-                            @Override
-                            public void onClick(DialogInterface dialog, int which) {
-                                // nothing to do11
-                            }
-                        }).show();
-                    }
+                    closeDecisionCheck1();
 
                 } else if (id == ID_REOPEN_DECISION) {
                     pollgramService.notifyReopen(decision);
@@ -173,7 +156,6 @@ public void onClick(DialogInterface dialog, int which) {
                     bundle.putLong(EditOptionsFragment.PAR_DECISION_ID, decision.getId());
                     presentFragment(new EditOptionsFragment(bundle));
                 } else {
-
                     Log.e(LOG_TAG, "Unknown action id[" + id + "]");
                     return;
                 }
@@ -188,6 +170,7 @@ public void onClick(DialogInterface dialog, int which) {
         // Create view
         tvCreationInfo = (TextView) rootView.findViewById(R.id.vote_manager_tv_creationInfo);
         tvDecisionStatus = (TextView) rootView.findViewById(R.id.vote_manager_tv_decision_status);
+        tvAdmin = (TextView)rootView.findViewById(R.id.vote_manager_tv_admin);
         updateView();
 
         android.support.v4.app.FragmentTransaction transaction = getParentActivity().getSupportFragmentManager().beginTransaction();
@@ -204,30 +187,88 @@ protected void onVoteSaved() {
         return rootView;
     }
 
+    private void showDecisionInfo() {
+        Bundle bundle = new Bundle();
+        bundle.putLong(DecisionDetailFragment.PAR_DECISION_ID, decision.getId());
+        presentFragment(new DecisionDetailFragment(bundle));
+    }
+
     private String getTitle(MessageType closeDecision, int stringRes) {
-        return closeDecision.getEmoji()+ "   "+ getParentActivity().getString(stringRes);
+        return closeDecision.getEmoji()+ "   "+ context.getString(stringRes);
     }
 
-    private void closeDecision() {
+    private void closeDecisionCheck1() {
+        if (votesManagerTabsFragment.isVoteUnsaved()){
+            Toast.makeText(context, R.string.voteNotSavedPleaseSave, Toast.LENGTH_LONG).show();
+            return;
+        }
+
         PollgramDAO.WinningOption winningOption = pollgramDAO.getWinningOption(decision);
+        String warningMessage;
         if (winningOption.options.size() == 0){
             // there are no option that wins...notify it and return
-            AlertDialog.Builder builder = new AlertDialog.Builder(ApplicationLoader.applicationContext);
+            warningMessage = context.getString(R.string.noVotePresentForClosingDecision);
 
         } else if (winningOption.options.size() >1){
-            // deny the saving cause there are more that one winning option
+            warningMessage = context.getString(R.string.moreThanOneWinningOptionForClosingDecision,
+                    winningOption.options.size());
+
         } else {
             // Just one option everything is okay
-            pollgramService.notifyClose(decision);
-            Toast.makeText(getParentActivity(), getParentActivity().getString(R.string.decisionClosed), Toast.LENGTH_SHORT).show();
-            votesManagerTabsFragment.updateView();
-            updateView();
+            warningMessage = null;
+        }
+
+        if (warningMessage == null) {
+            closeDecisionCheck2();
+        }else {
+            // deny the saving cause there are more that one winning option
+            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+            builder.setMessage(warningMessage);
+            builder.setPositiveButton(R.string.yes, new DialogInterface.OnClickListener() {
+                @Override
+                public void onClick(DialogInterface dialog, int which) {
+                    closeDecisionCheck2();
+                }
+            });
+            builder.setNegativeButton(R.string.no, UIUtils.emptyOnClickListener());
+            builder.show();
+        }
+    }
+
+    private void closeDecisionCheck2() {
+        int membersCount = members.size();
+        int voteCount = pollgramDAO.getUserVoteCount(decision);
+        if (voteCount == membersCount) {
+            // all users voted al least one option for the current decision
+            closeDecisionReal();
+        } else {
+            StringBuilder message =  new StringBuilder();
+            if (voteCount == 1)
+                message.append(context.getString(R.string.closeDecisionQuestionPrefixSingle, voteCount, membersCount));
+            else
+                message.append(context.getString(R.string.closeDecisionQuestionPrefixMulti, voteCount, membersCount));
+            message.append(context.getString(R.string.closeDecisionQuestionSuffix));
+            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+            builder.setMessage(message.toString());
+            builder.setPositiveButton(R.string.yes, new DialogInterface.OnClickListener() {
+                @Override
+                public void onClick(DialogInterface dialog, int which) {
+                    closeDecisionReal();
+                }
+            });
+            builder.setNegativeButton(R.string.no, UIUtils.emptyOnClickListener());
+            builder.show();
         }
     }
 
+    private void closeDecisionReal(){
+        pollgramService.notifyClose(decision);
+        Toast.makeText(context, context.getString(R.string.decisionClosed), Toast.LENGTH_SHORT).show();
+        votesManagerTabsFragment.updateView();
+        updateView();
+    }
 
     private void updateView(){
-        Context ctx = getParentActivity();
         decision = pollgramDAO.getDecision(decision.getId());
         int userThatVoteSoFar = pollgramDAO.getUserVoteCount(decision);
 
@@ -242,22 +283,21 @@ private void updateView(){
                 menuEditOptions.setVisibility(View.VISIBLE);
             } else {
                 menuReopenDecisionItem.setVisibility(View.VISIBLE);
-                menuDeleteDecisionItem.setVisibility(View.VISIBLE);
             }
-        } else {
-            menu.setVisibility(View.GONE);
+            menuDeleteDecisionItem.setVisibility(View.VISIBLE);
         }
 
         String userStr = pollgramService.asString(pollgramService.getUser(decision.getUserCreatorId()));
         String creationDateStr = DateFormat.getDateInstance(DateFormat.LONG).
                 format(decision.getCreationDate());
-        tvCreationInfo.setText(ctx.getString(R.string.createdByUserOnDayNewLine, userStr, creationDateStr));
+        tvCreationInfo.setText(context.getString(R.string.createdByUserOnDayNewLine, userStr, creationDateStr));
 
-        String statusDesc = ctx.getString(decision.isOpen() ? R.string.statusOpen : R.string.statusClose);
-        tvDecisionStatus.setText(ctx.getString(R.string.decisionStatus, statusDesc));
+        String statusDesc = context.getString(decision.isOpen() ? R.string.statusOpen : R.string.statusClose);
+        tvDecisionStatus.setText(context.getString(R.string.decisionStatus, statusDesc));
         tvDecisionStatus.setBackgroundColor(decision.isOpen() ? Color.GREEN : Color.RED);
+        tvAdmin.setVisibility(decision.isEditable() ? View.VISIBLE : View.GONE);
 
-        tvUserVoteCount.setText(ctx.getString(R.string.howManyMemberVote,
+        tvUserVoteCount.setText(context.getString(R.string.howManyMemberVote,
                 userThatVoteSoFar, members.size()));
         if (votesManagerTabsFragment != null)
             votesManagerTabsFragment.updateView();
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
index 2cdf007ec..b948d2766 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
@@ -69,6 +69,7 @@
     private PollgramService pollgramService;
     private UsersDecisionVotes usersDecisionVotes;
 
+    private Context context;
     private int currentUserId;
     private ViewGroup optionTableViewContainer;
     private long groupChatId;
@@ -76,7 +77,7 @@
     private int[] participantsUserIds;
     private LayoutInflater inflater;
     private PagerAdapter pagerAdapter;
-    private Context context;
+    protected boolean voteUnsaved;
 
     @Override
     public Context getContext() {
@@ -85,6 +86,10 @@ public Context getContext() {
         return context;
     }
 
+    public boolean isVoteUnsaved() {
+        return voteUnsaved;
+    }
+
     public VotesManagerTabsFragment(BaseFragment parentFragment) {
         this.parentFragment = parentFragment;
     }
@@ -243,6 +248,7 @@ public void onClick(View view) {
                 Log.i(LOG_TAG, "saving votes[" + votes2Save + "]");
                 pollgramService.notifyVote(usersDecisionVotes.getDecision(), votes2Save);
                 btnSaveOption.setVisibility(View.GONE);
+                voteUnsaved = false;
 
                 // update view
                 updateView();
@@ -255,12 +261,11 @@ public void onClick(View view) {
         });
 
         voteListAdapter.setOnVoteChangeListener(new VoteListAdapter.OnVoteChangeListener() {
+
             @Override
             public void voteChanges(boolean areThereChangesToSave) {
-                if (areThereChangesToSave)
-                    btnSaveOption.setVisibility(View.VISIBLE);
-                else
-                    btnSaveOption.setVisibility(View.GONE);
+                voteUnsaved = areThereChangesToSave;
+                btnSaveOption.setVisibility(voteUnsaved ? View.VISIBLE : View.GONE);
             }
         });
         return rootView;
diff --git a/TMessagesProj/src/main/res/drawable/admin_border.xml b/TMessagesProj/src/main/res/drawable/admin_border.xml
new file mode 100644
index 000000000..5ff2d8088
--- /dev/null
+++ b/TMessagesProj/src/main/res/drawable/admin_border.xml
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<inset xmlns:android="http://schemas.android.com/apk/res/android"
+    android:insetRight="6dp"
+    android:insetLeft="5dp">
+    <shape android:shape="rectangle">
+        <stroke
+            android:width="1dp"
+            android:color="#15ff00" />
+        <corners android:radius="5dp" />
+        <padding
+            android:bottom="1dp"
+            android:left="2dp"
+            android:right="2dp"
+            android:top="1dp" />
+
+    </shape>
+</inset>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/item_decision_list.xml b/TMessagesProj/src/main/res/layout/item_decision_list.xml
index db87538e8..2513abce8 100644
--- a/TMessagesProj/src/main/res/layout/item_decision_list.xml
+++ b/TMessagesProj/src/main/res/layout/item_decision_list.xml
@@ -37,9 +37,9 @@
         android:id="@+id/item_decision_tv_subtitle_1"
         android:layout_below="@+id/item_decision_tv_title"
         android:layout_toRightOf="@+id/item_decision_iv_image"
-        android:layout_alignRight="@+id/item_decision_tv_title"
-        android:layout_alignEnd="@+id/item_decision_tv_title"
-        android:paddingLeft="5dp"/>
+        android:paddingLeft="5dp"
+        android:layout_toLeftOf="@+id/item_decision_tv_admin"
+        android:layout_toStartOf="@+id/item_decision_tv_admin" />
 
     <TextView
         android:layout_width="wrap_content"
@@ -52,4 +52,16 @@
         android:layout_alignRight="@+id/item_decision_tv_subtitle_1"
         android:layout_alignEnd="@+id/item_decision_tv_subtitle_1"
         android:paddingLeft="5dp"/>
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textAppearance="?android:attr/textAppearanceSmall"
+        android:id="@+id/item_decision_tv_admin"
+        android:text="@string/youAreDecisionAdmin"
+        android:background="@drawable/admin_border"
+        android:textColor="@color/admin_text_color"
+        android:layout_centerVertical="true"
+        android:layout_alignParentRight="true"
+        android:layout_alignParentEnd="true" />
 </RelativeLayout>
diff --git a/TMessagesProj/src/main/res/layout/votes_manager_main.xml b/TMessagesProj/src/main/res/layout/votes_manager_main.xml
index 57848bbb2..7b45dc681 100644
--- a/TMessagesProj/src/main/res/layout/votes_manager_main.xml
+++ b/TMessagesProj/src/main/res/layout/votes_manager_main.xml
@@ -41,6 +41,15 @@
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"/>
 
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:textAppearance="?android:attr/textAppearanceSmall"
+            android:text="@string/youAreDecisionAdmin"
+            android:background="@drawable/admin_border"
+            android:textColor="@color/admin_text_color"
+            android:id="@+id/vote_manager_tv_admin" />
+
     </LinearLayout>
     
     <!--
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index ddca6e55c..b992b8a81 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -1044,9 +1044,6 @@
 
     <!-- START of POLLGRAM transaction messages -->
     <string name="downloadPollgramFromMarket">Scarica Pollgram qui </string>
-    <string name="yes">si</string>
-    <string name="no">no</string>
-
     <string name="tmsg_RemindToVoteP1">Hey</string>
     <!-- between P1 and P2 goes the username -->
     <string name="tmsg_RemindToVoteP2">puoi votare per favore per la decisione</string>
@@ -1100,7 +1097,6 @@
     <string name="MessageType_DELTE_OPTIONS">Cancellazione opzioni</string>
     <!-- END MessageType descriptions -->
 
-
     <!-- Pollgram crash messages START -->
     <string name="appCrashedMessage">Oh cazzo! L\'applicazione è andata in crash :-( Inviami una segnalazione del crash via email in modo che possa sistemare il tutto in men che non si dica. Grazie </string>
     <string name="sendCrashEmail">Invia sengalazione di errore</string>
@@ -1110,6 +1106,9 @@
     <string name="emailCrashMessageBody">Mi dispiace ma Pollgram si è interrotto a causa di:\n%1$s\nLe infromazione relative al errore sono allegate alla mail.\nGrazie per il supporto supporto.\n</string>
     <!-- Pollgram crash messages END -->
 
+    <string name="yes">si</string>
+    <string name="no">no</string>
+    <string name="okay">okay</string>
     <string name="howManyMemberVote">%1$d su %2$d hanno votato</string>
     <string name="createdByUserOnDayNewLine">Creata da %1$s \nil %2$s</string>
     <string name="createdByUserOnDay">Creata da %1$s il %2$s</string>
@@ -1129,6 +1128,7 @@
     <string name="noVoteDesc">\?</string>
     <string name="noOptionPresent">Non ci sono opzioni\n per questa decisione</string>
     <string name="remindToUserSent">Promeoria inviato a %1$s</string>
+    <string name="infoDecision">Info decisione</string>
     <string name="closeDecision">Chiudi decisione</string>
     <string name="reopenDecision">Riapri decisione</string>
     <string name="deleteDecision">Cancella decisione</string>
@@ -1157,9 +1157,18 @@
     <string name="addOptionToDecisionQuestion">Aggiungere %1$d opzioni alla decisione %2$s ?</string>
     <string name="addRemoveOptionToDecisionQuestion">Sei sicuro di\naggiungere %1$d opzioni \ne rimuovere %2$d opzioni\n dalla decisione %3$s ?</string>
     <string name="you">te</string>
+
+    <!-- Closing decision messages START -->
+    <string name="voteNotSavedPleaseSave">Ci sono voti non salvati, prego salvare i voti prima di chiudere la decisione.</string>
+    <string name="noVotePresentForClosingDecision">Nessuna ha ancora votato per questa decisione.
+        \nSei sicuro di volerla chiduere ?</string>
+    <string name="moreThanOneWinningOptionForClosingDecision">Ci sono %1$d opzione che hanno ricevuto il massimo numero di voti positivi.
+        \nSei sicuro di voler chiudere questa decisione ?</string>
     <string name="closeDecisionQuestionPrefixSingle">Attenzione solo %1$d utente su %2$d ha votato.</string>
     <string name="closeDecisionQuestionPrefixMulti">Attenzione solo %1$d utenti su %2$d hanno votato.</string>
-    <string name="closeDecisionQuestionSuffix">\nDopo aver chiuso la decisione non sarà più possibile per gli altri utenti votare a meno che la decisione non venga riaperta.\nSei sicuro di chiudere questa decisione ?</string>
+    <string name="closeDecisionQuestionSuffix">\nSei sicuro di voler chiudere questa decisione ?</string>
+    <!-- Closing decision messages END -->
+
     <string name="optionDetailTitle">Dettaglio opzione</string>
     <string name="missingVoteDesc">Mancanti: %1$d\n (%2$.1f%%)</string>
     <string name="positiveVoteDesc">Positivi: %1$d\n (%2$.1f%%)</string>
@@ -1190,5 +1199,8 @@
     <!--update text-->
     <string name="updateText">Telegram per Android si è aggiornato. Nuovo nella versione 3.4.0:\n\nRivoluzione GIF: Invio e download 20 volte più veloci, autoriproduci e salva le tue preferite nel pannello sticker.\n\nPiù info sulle GIF:\nhttps://telegram.org/blog/gif-revolution\n\nBot Inline: Un nuovo modo di aggiungere contenuti in ogni chat. Menziona un bot e la tua domanda nel campo di scrittura e ottieni risultati immediati. Prova a scrivere “@gif dog” nella tua prossima chat. Bot di esempio: @gif, @wiki, @bing, @vid, @bold\n\nPiù info sui Bot Inline:\nhttps://telegram.org/blog/inline-bots</string>
     <string name="updateBuild">704</string>
+    <string name="youAreDecisionAdmin">Admin</string>
+
+
 
 </resources>
diff --git a/TMessagesProj/src/main/res/values/colors.xml b/TMessagesProj/src/main/res/values/colors.xml
index 5442d5c31..c7c4b05b9 100755
--- a/TMessagesProj/src/main/res/values/colors.xml
+++ b/TMessagesProj/src/main/res/values/colors.xml
@@ -2,4 +2,5 @@
 <resources>
     <color name="divider">#dcdcdc</color>
     <color name="backgroud_blue">#4d83b3</color>
+    <color name="admin_text_color">#26ae0b</color>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 4ea19707e..c2eb7ed6c 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -1042,8 +1042,6 @@
 
     <!-- START of POLLGRAM transaction messages -->
     <string name="downloadPollgramFromMarket">Install Pollgram at </string>
-    <string name="yes">yes</string>
-    <string name="no">no</string>
 
     <string name="tmsg_RemindToVoteP1">Hey</string>
     <!-- between P1 and P2 goes the username -->
@@ -1108,6 +1106,9 @@
     <string name="title_activity_crash_manager_activity">Crash Manager</string>
     <!-- Pollgram crash messages END -->
 
+    <string name="yes">yes</string>
+    <string name="no">no</string>
+    <string name="okay">okay</string>
     <string name="howManyMemberVote">%1$d on %2$d have voted yet</string>
     <string name="createdByUserOnDayNewLine">Created by %1$s \non %2$s</string>
     <string name="createdByUserOnDay">Created by %1$s on %2$s</string>
@@ -1127,6 +1128,7 @@
     <string name="noVoteDesc">\?</string>
     <string name="noOptionPresent">There are no option\n for this decision</string>
     <string name="remindToUserSent">Remind sent to %1$s</string>
+    <string name="infoDecision">Info decision</string>
     <string name="closeDecision">Close decision</string>
     <string name="reopenDecision">Reopen decision</string>
     <string name="deleteDecision">Delete decision</string>
@@ -1155,10 +1157,18 @@
     <string name="saveDecisionQuestion">Save decision %1$s with %2$d options ?\nTake care: it will be no more possible to change options titles, you only will be able to add or remove options.</string>
     <string name="addOptionToDecisionQuestion">Are you sure to add %1$d options to decision %2$s ?</string>
     <string name="addRemoveOptionToDecisionQuestion">Are you sure to:\nAdd %1$d option\nand remove %2$d options\nfrom the decision %3$s ?</string>
+
+    <!-- Closing decision messages START -->
+    <string name="voteNotSavedPleaseSave">There are unsaved votes, please save before close the decision.</string>
+    <string name="noVotePresentForClosingDecision">No one vote for this decision.
+        \nAre you sure to close it ?</string>
+    <string name="moreThanOneWinningOptionForClosingDecision">There are %1$d options that receive with the maximum positive vote count.
+        \nAre you sure to close this decision ?</string>
     <string name="closeDecisionQuestionPrefixSingle">Only %1$d user out of %2$d voted yet.</string>
     <string name="closeDecisionQuestionPrefixMulti">Only %1$d users out of %2$d voted yet.</string>
-    <string name="closeDecisionQuestionSuffix">\nAfter closing the decision it will be no longer possible for other users to vote,
-        unless the decision will be reopened.\nAre you sure to close this decision ?</string>
+    <string name="closeDecisionQuestionSuffix">\nAre you sure to close this decision ?</string>
+    <!-- Closing decision messages END -->
+
     <string name="optionDetailTitle">Option detail</string>
     <string name="missingVoteDesc">Missing: %1$d\n (%2$.1f%%)</string>
     <string name="positiveVoteDesc">Positive: %1$d\n (%2$.1f%%)</string>
@@ -1195,4 +1205,8 @@
 
     <string name="hello_world">Hello world!</string>
     <string name="action_settings">Settings</string>
+    <string name="youAreDecisionAdmin">Admin</string>
+
+
+
 </resources>
