diff --git a/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java b/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
index 419d82f9a..2f132109f 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
@@ -18,8 +18,12 @@
 import android.graphics.Bitmap;
 import android.media.AudioManager;
 import android.net.Uri;
+import android.os.Bundle;
 import android.provider.Settings;
 import android.support.v4.app.NotificationCompat;
+import android.support.v4.app.NotificationManagerCompat;
+import android.support.v4.app.RemoteInput;
+import android.util.Log;
 
 import org.json.JSONArray;
 import org.json.JSONObject;
@@ -35,16 +39,18 @@
 import org.telegram.ui.ApplicationLoader;
 import org.telegram.ui.LaunchActivity;
 import org.telegram.ui.PopupNotificationActivity;
+import org.telegram.ui.ReplyActivity;
 
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 
 public class NotificationsController {
+    public static final String EXTRA_VOICE_REPLY = "extra_voice_reply";
 
     private ArrayList<MessageObject> pushMessages = new ArrayList<MessageObject>();
     private HashMap<Integer, MessageObject> pushMessagesDict = new HashMap<Integer, MessageObject>();
-    private NotificationManager notificationManager = null;
+    private NotificationManagerCompat notificationManager = null;
     private HashMap<Long, Integer> pushDialogs = new HashMap<Long, Integer>();
     public ArrayList<MessageObject> popupMessages = new ArrayList<MessageObject>();
     private long openned_dialog_id = 0;
@@ -68,7 +74,7 @@ public static NotificationsController getInstance() {
     }
 
     public NotificationsController() {
-        notificationManager = (NotificationManager)ApplicationLoader.applicationContext.getSystemService(Context.NOTIFICATION_SERVICE);
+        notificationManager = NotificationManagerCompat.from(ApplicationLoader.applicationContext);
     }
 
     public void cleanup() {
@@ -353,6 +359,22 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                     .setContentText(detailText)
                     .setContentIntent(contentIntent);
 
+            if ((int)dialog_id != 0) {
+                // Create remote input
+                RemoteInput remoteInput = new RemoteInput.Builder(EXTRA_VOICE_REPLY)
+                        .setLabel(ApplicationLoader.applicationContext.getString(R.string.Reply))
+                        .setChoices(ApplicationLoader.applicationContext.getResources().getStringArray(R.array.reply_choices))
+                        .build();
+
+                // Create the reply action and add the remote input
+                NotificationCompat.Action action =
+                        new NotificationCompat.Action.Builder(R.drawable.ic_reply_icon, ApplicationLoader.applicationContext.getResources().getString(R.string.Reply), contentIntent)
+                                .addRemoteInput(remoteInput)
+                                .build();
+
+                mBuilder = mBuilder.extend(new NotificationCompat.WearableExtender().addAction(action));
+            }
+
             String lastMessage = null;
             if (pushMessages.size() == 1) {
                 String message = lastMessage = getStringForMessage(pushMessages.get(0));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index e9116ba1f..66b329e81 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -28,6 +28,7 @@
 import android.provider.MediaStore;
 import android.text.Html;
 import android.text.TextUtils;
+import android.util.Log;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.LayoutInflater;
@@ -187,6 +188,7 @@ public boolean onFragmentCreate() {
         final int chatId = arguments.getInt("chat_id", 0);
         final int userId = arguments.getInt("user_id", 0);
         final int encId = arguments.getInt("enc_id", 0);
+        final String messageToSend = arguments.getString("message_to_send", null);
         scrollToTopOnResume = arguments.getBoolean("scrollToTopOnResume", false);
 
         if (chatId != 0) {
@@ -342,6 +344,10 @@ public void needSendTyping() {
             downloadAudios = preferences.getInt("audio_download_user2", 0);
         }
 
+        if (messageToSend != null) {
+            MessagesController.getInstance().sendMessage(messageToSend, dialog_id);
+        }
+
         return true;
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index 0b9e21bd0..39cae9c58 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -16,12 +16,15 @@
 import android.os.Bundle;
 import android.os.Parcelable;
 import android.provider.ContactsContract;
+import android.support.v4.app.RemoteInput;
+import android.util.Log;
 import android.view.View;
 import android.widget.TextView;
 import android.widget.Toast;
 
 import org.telegram.android.AndroidUtilities;
 import org.telegram.PhoneFormat.PhoneFormat;
+import org.telegram.android.NotificationsController;
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLog;
 import org.telegram.android.LocaleController;
@@ -383,12 +386,15 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
             }
         }
 
+        CharSequence messageToSend = getMessageText(intent);
+
         if (push_user_id != 0) {
             if (push_user_id == UserConfig.getClientUserId()) {
                 open_settings = 1;
             } else {
                 Bundle args = new Bundle();
                 args.putInt("user_id", push_user_id);
+                if (messageToSend != null) args.putString("message_to_send", messageToSend.toString());
                 ChatActivity fragment = new ChatActivity(args);
                 if (presentFragment(fragment, false, true)) {
                     pushOpened = true;
@@ -397,6 +403,7 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
         } else if (push_chat_id != 0) {
             Bundle args = new Bundle();
             args.putInt("chat_id", push_chat_id);
+            if (messageToSend != null) args.putString("message_to_send", messageToSend.toString());
             ChatActivity fragment = new ChatActivity(args);
             if (presentFragment(fragment, false, true)) {
                 pushOpened = true;
@@ -404,6 +411,7 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
         } else if (push_enc_id != 0) {
             Bundle args = new Bundle();
             args.putInt("enc_id", push_enc_id);
+            if (messageToSend != null) args.putString("message_to_send", messageToSend.toString());
             ChatActivity fragment = new ChatActivity(args);
             if (presentFragment(fragment, false, true)) {
                 pushOpened = true;
@@ -652,4 +660,13 @@ public boolean onPreIme() {
     public void onLowMemory() {
         super.onLowMemory();
     }
+
+    private CharSequence getMessageText(Intent intent) {
+        Bundle remoteInput = RemoteInput.getResultsFromIntent(intent);
+        if (remoteInput != null) {
+            return remoteInput.getCharSequence(NotificationsController.EXTRA_VOICE_REPLY);
+        }
+
+        return null;
+    }
 }
diff --git a/TMessagesProj/src/main/res/drawable-nodpi/ic_reply_icon.png b/TMessagesProj/src/main/res/drawable-nodpi/ic_reply_icon.png
new file mode 100644
index 000000000..66388d5fa
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-nodpi/ic_reply_icon.png differ
diff --git a/TMessagesProj/src/main/res/values/arrays.xml b/TMessagesProj/src/main/res/values/arrays.xml
new file mode 100644
index 000000000..d3a123273
--- /dev/null
+++ b/TMessagesProj/src/main/res/values/arrays.xml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string-array name="reply_choices">
+        <item>I'm on my way.</item>
+        <item>I'm here.</item>
+        <item>Where are you?</item>
+        <item>Oh okay.</item>
+    </string-array>
+</resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index b5a9c5975..23e42f3ad 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -324,6 +324,7 @@
     <string name="OpenPhoto">Open photo</string>
     <string name="Set">Set</string>
     <string name="OK">OK</string>
+    <string name="Reply">Reply</string>
 
     <!--messages-->
     <string name="ActionKickUser">un1 removed un2</string>
