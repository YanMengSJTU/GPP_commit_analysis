diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index 475fa82ee..48685c0df 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -80,7 +80,7 @@ android {
         }
     }
 
-    defaultConfig.versionCode = 851
+    defaultConfig.versionCode = 851 + 1
 
     sourceSets.debug {
         manifest.srcFile 'config/debug/AndroidManifest.xml'
@@ -120,7 +120,7 @@ android {
     defaultConfig {
         minSdkVersion 19
         targetSdkVersion 24
-        versionName "3.13.1.0"
+        versionName "3.13.1.1"
 
         externalNativeBuild {
             ndkBuild {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java b/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
index f961fa2a5..1584d8ea8 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
@@ -18,6 +18,7 @@
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
+import android.content.SharedPreferences;
 import android.content.pm.ActivityInfo;
 import android.content.pm.PackageManager;
 import android.content.res.Configuration;
@@ -47,6 +48,7 @@
 import android.text.Spanned;
 import android.text.style.ForegroundColorSpan;
 import android.util.DisplayMetrics;
+import android.util.Log;
 import android.util.StateSet;
 import android.view.Display;
 import android.view.Surface;
@@ -370,18 +372,29 @@ public static void unlockOrientation(Activity activity) {
     public static Typeface getTypeface(String assetPath) {
         synchronized (typefaceCache) {
             if (!typefaceCache.containsKey(assetPath)) {
+                boolean medium = "fonts/rmedium.ttf".equals(assetPath);
+                boolean italic = "fonts/ritalic.ttf".equals(assetPath);
+
                 try {
                     Typeface t = null;
-                    if (assetPath.equals("fonts/rmedium.ttf") || assetPath.equals("fonts/ritalic.ttf")) {
-                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
-                            if (assetPath.equals("fonts/rmedium.ttf")) {
-                                t = Typeface.create("sans-serif-medium", Typeface.NORMAL);
-                            } else {
-                                t = Typeface.create("sans-serif", Typeface.ITALIC);
-                            }
-                        }
-                    } else {
+
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                    boolean fakeBold = preferences.getBoolean("fakeBold", false);
+
+                    if ((!medium && !italic) || (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP && !fakeBold)) {
                         t = Typeface.createFromAsset(ApplicationLoader.applicationContext.getAssets(), assetPath);
+                    } else {
+                        int style = Typeface.NORMAL;
+                        if (medium && fakeBold) {
+                            style = Typeface.BOLD;
+                        }
+
+                        if (medium) {
+                            t = Typeface.create(fakeBold ? "sans-serif" : "sans-serif-medium", style);
+                        }
+                        if (italic) {
+                            t = Typeface.create("sans-serif", Typeface.ITALIC);
+                        }
                     }
 
                     typefaceCache.put(assetPath, t);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java b/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java
index f00303b5c..7e191e2e0 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java
@@ -10,7 +10,7 @@
 
 public class BuildVars {
     public static boolean DEBUG_VERSION = false;
-    public static int BUILD_VERSION = 851;
+    public static int BUILD_VERSION = 851 + 1;
     public static String BUILD_VERSION_STRING = "3.13";
     public static int APP_ID = 87965; //obtain your own APP_ID at https://core.telegram.org/api/obtaining_api_id
     public static String APP_HASH = "d23672cb16dfb9fc0490b2254aac6ecf"; //obtain your own APP_HASH at https://core.telegram.org/api/obtaining_api_id
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/GcmPushListenerService.java b/TMessagesProj/src/main/java/org/telegram/messenger/GcmPushListenerService.java
index 38b2ee96b..c5eb730cb 100755
--- a/TMessagesProj/src/main/java/org/telegram/messenger/GcmPushListenerService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/GcmPushListenerService.java
@@ -23,7 +23,7 @@
     @Override
     public void onMessageReceived(String from, final Bundle bundle) {
         FileLog.d("tmessages", "GCM received bundle: " + bundle + " from: " + from);
-        Log.d("tmessages", "GCM received bundle: " + bundle + " from: " + from);
+        //Log.d("tmessages", "GCM received bundle: " + bundle + " from: " + from);
 
         AndroidUtilities.runOnUIThread(new Runnable() {
             @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/GcmRegistrationIntentService.java b/TMessagesProj/src/main/java/org/telegram/messenger/GcmRegistrationIntentService.java
index f0e2fecc2..3bd077f0a 100755
--- a/TMessagesProj/src/main/java/org/telegram/messenger/GcmRegistrationIntentService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/GcmRegistrationIntentService.java
@@ -27,7 +27,7 @@ protected void onHandleIntent(Intent intent) {
             InstanceID instanceID = InstanceID.getInstance(this);
             final String token = instanceID.getToken(getString(R.string.gcm_defaultSenderId), GoogleCloudMessaging.INSTANCE_ID_SCOPE, null);
             FileLog.d("tmessages", "GCM Registration Token: " + token);
-            Log.d("tmessages", "GCM Registration Token: " + token);
+            //Log.d("tmessages", "GCM Registration Token: " + token);
             AndroidUtilities.runOnUIThread(new Runnable() {
                 @Override
                 public void run() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index d26b7aa27..9af6d97f0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -146,6 +146,7 @@
 
     // Rikkagram
     private int googleEmojiRow;
+    private int fakeBoldRow;
 
     private int raiseToSpeakRow;
     private int sendByEnterRow;
@@ -249,6 +250,10 @@ public void run() {
         backgroundRow = rowCount++;
         languageRow = rowCount++;
         enableAnimationsRow = rowCount++;
+
+        // Rikkagram
+        //fakeBoldRow = rowCount++;
+
         mediaDownloadSection = rowCount++;
         mediaDownloadSection2 = rowCount++;
         mobileDownloadRow = rowCount++;
@@ -719,6 +724,15 @@ public void onClick(View v) {
                     if (view instanceof TextCheckCell) {
                         ((TextCheckCell) view).setChecked(!googleEmoji);
                     }
+                } else if (position == fakeBoldRow) {
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                    boolean fakeBold = preferences.getBoolean("fakeBold", false);
+                    SharedPreferences.Editor editor = preferences.edit();
+                    editor.putBoolean("fakeBold", !fakeBold);
+                    editor.commit();
+                    if (view instanceof TextCheckCell) {
+                        ((TextCheckCell) view).setChecked(!fakeBold);
+                    }
                 }
             }
         });
@@ -1341,7 +1355,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                     TextCheckCell textCell = (TextCheckCell) holder.itemView;
                     SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
                     if (position == enableAnimationsRow) {
-                        textCell.setTextAndCheck(LocaleController.getString("EnableAnimations", R.string.EnableAnimations), preferences.getBoolean("view_animations", true), false);
+                        textCell.setTextAndCheck(LocaleController.getString("EnableAnimations", R.string.EnableAnimations), preferences.getBoolean("view_animations", true), true);
                     } else if (position == sendByEnterRow) {
                         textCell.setTextAndCheck(LocaleController.getString("SendByEnter", R.string.SendByEnter), preferences.getBoolean("send_by_enter", false), false);
                     } else if (position == saveToGalleryRow) {
@@ -1356,6 +1370,8 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                         textCell.setTextAndValueAndCheck(LocaleController.getString("DirectShare", R.string.DirectShare), LocaleController.getString("DirectShareInfo", R.string.DirectShareInfo), MediaController.getInstance().canDirectShare(), false, true);
                     } else if (position == googleEmojiRow) { // Rikkagram
                         textCell.setTextAndValueAndCheck(LocaleController.getString("UseGoogleEmoji", R.string.UseGoogleEmoji), LocaleController.getString("UseGoogleEmojiInfo", R.string.UseGoogleEmojiInfo), preferences.getBoolean("useGoogleEmoji", true), false, true);
+                    } else if (position == fakeBoldRow) {
+                        textCell.setTextAndValueAndCheck("Replace medium font as bold"/*LocaleController.getString("UseGoogleEmoji", R.string.UseGoogleEmoji)*/, "Use it if no medium font in system"/*LocaleController.getString("UseGoogleEmojiInfo", R.string.UseGoogleEmojiInfo)*/, preferences.getBoolean("fakeBold", false), false, true);
                     }
                     break;
                 }
@@ -1459,7 +1475,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                         position == mobileDownloadRow || position == clearLogsRow || position == roamingDownloadRow || position == languageRow || position == usernameRow ||
                         position == switchBackendButtonRow || position == telegramFaqRow || position == contactsSortRow || position == contactsReimportRow || position == saveToGalleryRow ||
                         position == stickersRow || position == cacheRow || position == raiseToSpeakRow || position == privacyPolicyRow || position == customTabsRow || position == directShareRow || position == versionRow ||
-                        position == emojiRow || position == googleEmojiRow) { // Rikkagram
+                        position == emojiRow || position == googleEmojiRow || position == fakeBoldRow) { // Rikkagram
                     if (holder.itemView.getBackground() == null) {
                         holder.itemView.setBackgroundResource(R.drawable.list_selector);
                     }
@@ -1570,7 +1586,7 @@ public int getItemViewType(int position) {
             }
             if (position == settingsSectionRow || position == supportSectionRow || position == messagesSectionRow || position == mediaDownloadSection || position == contactsSectionRow) {
                 return 1;
-            } else if (position == enableAnimationsRow || position == sendByEnterRow || position == saveToGalleryRow || position == autoplayGifsRow || position == raiseToSpeakRow || position == customTabsRow || position == directShareRow || position == googleEmojiRow) { // Rikkagram
+            } else if (position == enableAnimationsRow || position == sendByEnterRow || position == saveToGalleryRow || position == autoplayGifsRow || position == raiseToSpeakRow || position == customTabsRow || position == directShareRow || position == googleEmojiRow || position == fakeBoldRow) { // Rikkagram
                 return 3;
             } else if (position == notificationRow || position == backgroundRow || position == askQuestionRow || position == sendLogsRow || position == privacyRow || position == clearLogsRow || position == switchBackendButtonRow || position == telegramFaqRow || position == contactsReimportRow || position == textSizeRow || position == languageRow || position == contactsSortRow || position == stickersRow || position == cacheRow || position == privacyPolicyRow || position == emojiRow) {
                 return 2;
