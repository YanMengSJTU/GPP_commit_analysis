diff --git a/TMessagesProj/src/main/AndroidManifest.xml b/TMessagesProj/src/main/AndroidManifest.xml
index 6e6efe63b..4d84be55d 100644
--- a/TMessagesProj/src/main/AndroidManifest.xml
+++ b/TMessagesProj/src/main/AndroidManifest.xml
@@ -515,7 +515,7 @@
                 android:value="2.5"/>
 
         <meta-data android:name="com.urbanairship.autopilot"
-                   android:value="com.urbanairship.Autopilot"/>
+                   android:value="io.bettergram.BetterPilot"/>
 
         <meta-data
                 android:name="firebase_crashlytics_collection_enabled"
diff --git a/TMessagesProj/src/main/java/io/bettergram/BetterPilot.java b/TMessagesProj/src/main/java/io/bettergram/BetterPilot.java
new file mode 100644
index 000000000..0eab16f26
--- /dev/null
+++ b/TMessagesProj/src/main/java/io/bettergram/BetterPilot.java
@@ -0,0 +1,58 @@
+package io.bettergram;
+
+import android.app.NotificationChannel;
+import android.app.NotificationManager;
+import android.content.Context;
+import android.os.Build;
+import android.support.annotation.NonNull;
+import com.urbanairship.AirshipConfigOptions;
+import com.urbanairship.Autopilot;
+import com.urbanairship.UAirship;
+import io.bettergram.messenger.BuildConfig;
+import io.bettergram.messenger.R;
+import io.bettergram.telegram.ui.ActionBar.Theme;
+import io.bettergram.utils.Assets;
+
+import java.io.IOException;
+
+public class BetterPilot extends Autopilot {
+
+    @Override
+    public void onAirshipReady(@NonNull UAirship airship) {
+
+        airship.getPushManager().setUserNotificationsEnabled(true);
+
+        // Android O
+        if (Build.VERSION.SDK_INT >= 26) {
+            Context context = UAirship.getApplicationContext();
+            NotificationManager notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
+
+            NotificationChannel channel = new NotificationChannel("bettergram_channel", "bettergram_channel", NotificationManager.IMPORTANCE_DEFAULT);
+
+            notificationManager.createNotificationChannel(channel);
+        }
+    }
+
+    @Override
+    public AirshipConfigOptions createAirshipConfigOptions(@NonNull Context context) {
+        try {
+            Assets assets = new Assets(context).fromFile("airshipconfig.properties");
+
+            AirshipConfigOptions options = new AirshipConfigOptions.Builder()
+                    .setDevelopmentAppKey(assets.getProperty("developmentAppKey"))
+                    .setDevelopmentAppSecret(assets.getProperty("developmentAppSecret"))
+                    .setProductionAppKey(assets.getProperty("productionAppKey"))
+                    .setProductionAppSecret(assets.getProperty("productionAppSecret"))
+                    .setInProduction(!BuildConfig.DEBUG)
+                    .setGcmSender(assets.getProperty("fcmSenderId")) // FCM/GCM sender ID
+                    .setNotificationIcon(R.drawable.notification)
+                    //.setNotificationAccentColor(Theme.getColor(Theme.key_actionBarDefault))
+                    .setNotificationChannel("customChannel")
+                    .build();
+            return options;
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+}
diff --git a/TMessagesProj/src/main/java/io/bettergram/utils/Assets.java b/TMessagesProj/src/main/java/io/bettergram/utils/Assets.java
new file mode 100644
index 000000000..20ef8393b
--- /dev/null
+++ b/TMessagesProj/src/main/java/io/bettergram/utils/Assets.java
@@ -0,0 +1,29 @@
+package io.bettergram.utils;
+
+import android.content.Context;
+import android.content.res.AssetManager;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.Properties;
+
+public class Assets {
+
+    private AssetManager assetManager;
+    private Properties properties;
+
+    public Assets(Context context) {
+        assetManager = context.getAssets();
+    }
+
+    public Assets fromFile(String file) throws IOException {
+        InputStream inputStream = assetManager.open(file);
+        properties = new Properties();
+        properties.load(inputStream);
+        return this;
+    }
+
+    public String getProperty(String key) {
+        return properties.getProperty(key);
+    }
+}
