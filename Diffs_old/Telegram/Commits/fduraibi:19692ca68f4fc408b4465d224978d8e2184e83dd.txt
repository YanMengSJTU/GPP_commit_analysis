diff --git a/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
index 4ad6fe01f..c90c8f199 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
@@ -16,10 +16,8 @@
 import android.content.SharedPreferences;
 import android.content.pm.PackageInfo;
 import android.graphics.Bitmap;
-import android.media.ThumbnailUtils;
 import android.net.Uri;
 import android.os.Build;
-import android.provider.MediaStore;
 import android.text.Html;
 
 import org.telegram.messenger.BuffersStorage;
@@ -877,12 +875,8 @@ public void updateTimerProc() {
                     }
 
                     TLRPC.TL_account_updateStatus req = new TLRPC.TL_account_updateStatus();
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
-                    if (preferences.getBoolean("invisible_status", false)){
-                        req.offline = true;
-                    } else {
-                        req.offline = false;
-                    }
+                    req.offline = false;
+
                     statusRequest = ConnectionsManager.getInstance().performRpc(req, new RPCRequest.RPCRequestDelegate() {
                         @Override
                         public void run(TLObject response, TLRPC.TL_error error) {
@@ -1855,78 +1849,6 @@ public void sendScreenshotMessage(TLRPC.EncryptedChat encryptedChat, ArrayList<L
     }
 
     private void sendMessage(String message, double lat, double lon, TLRPC.TL_photo photo, TLRPC.TL_video video, MessageObject msgObj, TLRPC.FileLocation location, TLRPC.User user, TLRPC.TL_document document, TLRPC.TL_audio audio, String originalPath, long peer) {
-/*        // If a message came as an object and we are not quoting it then change it back as normal
-        if (msgObj != null && !QuoteForward) {
-            if (msgObj.messageOwner.media.photo != null) {
-                photo = (TLRPC.TL_photo) msgObj.messageOwner.media.photo;
-            } else if (msgObj.messageOwner.media.geo != null) {
-                lat = msgObj.messageOwner.media.geo.lat;
-                lon = msgObj.messageOwner.media.geo._long;
-            } else if (msgObj.messageOwner.media.video != null) {
-                video = (TLRPC.TL_video) msgObj.messageOwner.media.video;
-                if (msgObj.messageOwner.attachPath != null && msgObj.messageOwner.attachPath.length() != 0) {
-                    video.path = msgObj.messageOwner.attachPath;
-                } else {
-                    video.path = AndroidUtilities.getCacheDir().toString() + File.separator + msgObj.getFileName();
-                }
-                Bitmap thumb = ThumbnailUtils.createVideoThumbnail(video.path, MediaStore.Video.Thumbnails.MINI_KIND);
-                video.thumb = FileLoader.scaleAndSaveImage(thumb, 90, 90, 55, false);
-                if (video.thumb == null) {
-                    // TODO: Show an error (video file might not be downloaded)
-                    //Toast.makeText(getApplicationContext(), "this is my Toast message!!! =)", Toast.LENGTH_LONG).show();
-
-                    // Download the file first! (but how can i wait until the download is finish then continue from here!!)
-//                    FileLoader.getInstance().loadFile(msgObj.messageOwner.media.video, null, null, null);
-//                    thumb = ThumbnailUtils.createVideoThumbnail(video.path, MediaStore.Video.Thumbnails.MINI_KIND);
-//                    video.thumb = FileLoader.scaleAndSaveImage(thumb, 90, 90, 55, false);
-                    return;
-                }
-                video.thumb.type = "s";
-                video.caption = "";
-                video.id = 0;
-                video.user_id = 0;
-                video.dc_id = 0;
-                video.date = 0;
-                video.access_hash = 0;
-            } else if (msgObj.messageOwner.media.document != null) {
-                document = (TLRPC.TL_document) msgObj.messageOwner.media.document;
-                if (msgObj.messageOwner.attachPath != null && msgObj.messageOwner.attachPath.length() != 0) {
-                    document.path = msgObj.messageOwner.attachPath;
-                } else {
-                    document.path = AndroidUtilities.getCacheDir().toString() + File.separator + msgObj.getFileName();
-                }
-                File f = new File(document.path);
-                if (!f.exists() || f.length() == 0) {
-                    // TODO: Show an error!, file doesn't exists, maybe it need to be downloaded first!
-                    return;
-                }
-                document.size = (int)f.length();
-                document.thumb = new TLRPC.TL_photoSizeEmpty();
-                document.thumb.type = "s";
-                document.id = 0;
-                document.user_id = UserConfig.getClientUserId();
-                document.date = ConnectionsManager.getInstance().getCurrentTime();
-                document.dc_id = 0;
-                document.access_hash = 0;
-            } else if (msgObj.messageOwner.media.audio != null) {
-                audio = (TLRPC.TL_audio) msgObj.messageOwner.media.audio;
-                if (msgObj.messageOwner.attachPath != null && msgObj.messageOwner.attachPath.length() != 0) {
-                    audio.path = msgObj.messageOwner.attachPath;
-                } else {
-                    audio.path = AndroidUtilities.getCacheDir().toString() + File.separator + msgObj.getFileName();
-                }
-
-                File f = new File(audio.path);
-                if (!f.exists() || f.length() == 0) {
-                    audio.path = AndroidUtilities.getCacheDir().toString() + File.separator + "1_" + audio.id + ".m4a";
-                }
-                audio.date = ConnectionsManager.getInstance().getCurrentTime();
-            } else if (msgObj.messageOwner.message != null) {
-                message = Emoji.fixSBEmoji(msgObj.messageOwner.message).toString(); //Fix SB encoding if needed before forwarding the message
-            } else {
-                // TODO: Unknown type, let it continue unchanged [ Maybe show an error to update the code! ]
-            }
-        }*/
         TLRPC.Message newMsg = null;
         int type = -1;
         if (message != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index 71cb280de..3ac4d2356 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -100,7 +100,6 @@
     private int contactsReimportRow;
     private int contactsSortRow;
     private int rowCount;
-    private int InvisibleStatusRow;
 
     private static class LinkMovementMethodMy extends LinkMovementMethod {
         @Override
@@ -182,7 +181,6 @@ public void run() {
         numberRow = rowCount++;
         settingsSectionRow = rowCount++;
         enableAnimationsRow = rowCount++;
-        InvisibleStatusRow = rowCount++;
         languageRow = rowCount++;
         notificationRow = rowCount++;
         blockedRow = rowCount++;
@@ -453,15 +451,6 @@ public void onClick(DialogInterface dialog, int which) {
                         });
                         builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
                         showAlertDialog(builder);
-                    } else if (i == InvisibleStatusRow) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
-                        boolean value = preferences.getBoolean("invisible_status", false);
-                        SharedPreferences.Editor editor = preferences.edit();
-                        editor.putBoolean("invisible_status", !value);
-                        editor.commit();
-                        if (listView != null) {
-                            listView.invalidateViews();
-                        }
                     }
                 }
             });
@@ -687,7 +676,7 @@ public boolean isEnabled(int i) {
             return i == textSizeRow || i == enableAnimationsRow || i == blockedRow || i == notificationRow || i == backgroundRow ||
                     i == askQuestionRow || i == sendLogsRow || i == sendByEnterRow || i == terminateSessionsRow || i == photoDownloadPrivateRow ||
                     i == photoDownloadChatRow || i == clearLogsRow || i == audioDownloadChatRow || i == audioDownloadPrivateRow || i == languageRow ||
-                    i == switchBackendButtonRow || i == telegramFaqRow || i == contactsSortRow || i == contactsReimportRow  || i == InvisibleStatusRow;
+                    i == switchBackendButtonRow || i == telegramFaqRow || i == contactsSortRow || i == contactsReimportRow;
         }
 
         @Override
@@ -936,15 +925,6 @@ public void run() {
                     } else {
                         checkButton.setImageResource(R.drawable.btn_check_off);
                     }
-                } else if (i == InvisibleStatusRow) {
-                    textView.setText(LocaleController.getString("InvisibleStatus", R.string.InvisibleStatus));
-                    divider.setVisibility(View.VISIBLE);
-                    boolean enabled = preferences.getBoolean("invisible_status", false);
-                    if (enabled) {
-                        checkButton.setImageResource(R.drawable.btn_check_on);
-                    } else {
-                        checkButton.setImageResource(R.drawable.btn_check_off);
-                    }
                 }
 //                if (i == 7) {
 //                    textView.setText(LocaleController.getString(R.string.SaveIncomingPhotos));
@@ -1095,7 +1075,7 @@ public int getItemViewType(int i) {
                 return 1;
             } else if (i == textSizeRow || i == languageRow || i == contactsSortRow  || i == photoDownloadChatRow || i == photoDownloadPrivateRow || i == audioDownloadChatRow || i == audioDownloadPrivateRow) {
                 return 5;
-            } else if (i == enableAnimationsRow || i == sendByEnterRow || i == InvisibleStatusRow) {
+            } else if (i == enableAnimationsRow || i == sendByEnterRow) {
                 return 3;
             } else if (i == numberRow || i == notificationRow || i == blockedRow || i == backgroundRow || i == askQuestionRow || i == sendLogsRow || i == terminateSessionsRow || i == clearLogsRow || i == switchBackendButtonRow || i == telegramFaqRow || i == contactsReimportRow) {
                 return 2;
diff --git a/TMessagesProj/src/main/res/values-ar/strings.xml b/TMessagesProj/src/main/res/values-ar/strings.xml
index 9373269d8..4d931e456 100644
--- a/TMessagesProj/src/main/res/values-ar/strings.xml
+++ b/TMessagesProj/src/main/res/values-ar/strings.xml
@@ -251,7 +251,6 @@
     <string name="AutomaticPhotoDownloadGroups">المجموعات</string>
     <string name="AutomaticPhotoDownloadPrivateChats">المحادثات</string>
     <string name="Events">الأحداث</string>
-    <string name="InvisibleStatus">وضع الإخفاء</string>
     <string name="ContactJoined">اشترك صديق في تيليجرام</string>
     <string name="Pebble">PEBBLE</string>
     <string name="Language">اللغة</string>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 9dd97bf08..fc553dcfc 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -251,7 +251,6 @@
     <string name="AutomaticPhotoDownloadGroups">Groups</string>
     <string name="AutomaticPhotoDownloadPrivateChats">Private Chats</string>
     <string name="Events">EVENTS</string>
-    <string name="InvisibleStatus">Invisible status</string>
     <string name="ContactJoined">Contact joined Telegram</string>
     <string name="Pebble">PEBBLE</string>
     <string name="Language">Language</string>
