diff --git a/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java b/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
index 10824f42e..07edbaef5 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
@@ -8,6 +8,7 @@
 
 package org.telegram.android;
 
+import android.app.Notification;
 import android.app.NotificationManager;
 import android.app.PendingIntent;
 import android.content.Context;
@@ -23,6 +24,8 @@
 import android.support.v4.app.NotificationManagerCompat;
 import android.support.v4.app.RemoteInput;
 
+import com.google.android.gms.wearable.Wearable;
+
 import org.json.JSONArray;
 import org.json.JSONObject;
 import org.telegram.messenger.ConnectionsManager;
@@ -41,6 +44,7 @@
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
+import java.util.Random;
 
 public class NotificationsController {
 
@@ -257,7 +261,7 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
             SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
             int notify_override = preferences.getInt("notify2_" + dialog_id, 0);
             if (!notifyAboutLast || notify_override == 2 || (!preferences.getBoolean("EnableAll", true) || chat_id != 0 && !preferences.getBoolean("EnableGroup", true)) && notify_override == 0) {
-                notifyDisabled = true;
+              //  notifyDisabled = true;
             }
 
             String defaultPath = Settings.System.DEFAULT_NOTIFICATION_URI.getPath();
@@ -361,7 +365,7 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                     .setContentIntent(contentIntent);
 
             String lastMessage = null;
-            if (pushMessages.size() == 1) {
+            if (pushMessages.size() == 1||notifyAboutLast) {
                 String message = lastMessage = getStringForMessage(pushMessages.get(0));
                 if (message == null) {
                     return;
@@ -373,6 +377,7 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                         message = message.replace(name + ": ", "").replace(name + " ", "");
                     }
                 }
+
                 mBuilder.setContentText(message);
                 mBuilder.setStyle(new NotificationCompat.BigTextStyle().bigText(message));
             } else {
@@ -401,6 +406,7 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                 }
                 inboxStyle.setSummaryText(detailText);
                 mBuilder.setStyle(inboxStyle);
+
             }
 
             if (photoPath != null) {
@@ -440,7 +446,8 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                     .setLabel(replyLabel)
                     .build();
             Intent reply = new Intent(ApplicationLoader.applicationContext,WearReplyReceiver.class);
-            reply.putExtra("chatID",user_id);
+            if(user_id!=0)reply.putExtra("chatID",user_id);
+            else reply.putExtra("chatID",chat_id);
 
 
             NotificationCompat.Action action =
@@ -450,11 +457,28 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
             NotificationCompat.WearableExtender wearableExtender =
                     new NotificationCompat.WearableExtender()
                             //.setHintHideIcon(true)
+
                     .addAction(action);
 
 
             mBuilder.extend(wearableExtender);
-            notificationManager.notify(1, mBuilder.build());
+            Random rand = new Random();
+
+
+
+            if(notifyAboutLast){
+                mBuilder.setGroup("messages");
+                mBuilder.setGroupSummary(false);
+                notificationManager.notify(rand.nextInt(2000),mBuilder.build());
+            }
+            else{
+                mBuilder.setGroupSummary(true);
+                mBuilder.setGroup("messages");
+
+
+                notificationManager.notify(2,mBuilder.build());
+            }
+            if(notifyAboutLast==true) showOrUpdateNotification(false);
             if (preferences.getBoolean("EnablePebbleNotifications", false)) {
                 sendAlertToPebble(lastMessage);
             }
@@ -465,7 +489,7 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
 
     private void dismissNotification() {
         try {
-            notificationManager.cancel(1);
+            notificationManager.cancelAll();
             pushMessages.clear();
             pushMessagesDict.clear();
             NotificationCenter.getInstance().postNotificationName(pushMessagesUpdated);
