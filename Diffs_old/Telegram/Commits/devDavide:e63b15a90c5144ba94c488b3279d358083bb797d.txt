diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
index 250cc8e12..a84ff7967 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
@@ -135,6 +135,15 @@
     Bundle getBundleForVotesManagerFragment(TLRPC.ChatFull info, MessageObject messageObject,
                                             final ClickableSpan url) throws PollgramDAOException;
 
+
+    /**
+     *
+     * @param currentChat
+     * @param selectedObject
+     * @return a Bundle for creating a new decision starting from a message
+     */
+    Bundle getBundleForNewDecision(TLRPC.Chat currentChat, MessageObject selectedObject);
+
     /**
      * @param user
      * @return a string representation of the passed user.
@@ -158,4 +167,5 @@ Bundle getBundleForVotesManagerFragment(TLRPC.ChatFull info, MessageObject messa
     List<MessageObject> getUnParsedMessages(final long dialog_id, Map<Integer, MessageObject> dialogMessagesByIds,
                                             List<MessageObject> excludeMessages);
 
+
 }
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
index cf3c6f83f..d70ca02e3 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
@@ -1,5 +1,6 @@
 package org.pollgram.decision.service;
 
+import android.content.Context;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
 import android.text.style.ClickableSpan;
@@ -13,6 +14,7 @@
 import org.pollgram.decision.data.ParsedMessage;
 import org.pollgram.decision.data.UsersDecisionVotes;
 import org.pollgram.decision.data.Vote;
+import org.pollgram.decision.ui.NewDecisionFragment;
 import org.pollgram.decision.ui.VotesManagerFragment;
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.ApplicationLoader;
@@ -25,6 +27,7 @@
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.Components.URLSpanNoUnderline;
 
+import java.text.DateFormat;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Date;
@@ -317,7 +320,7 @@ public void processMessage(MessageObject message, boolean showToastOnError) {
             Log.e(LOG_TAG,"Error parsing message ["+text+"] isCurrentUser["+isCurrentUser+"]",e);
         }
 
-        pollgramDAO.setMessageAsParsed(groupChatId,messageId, parsedSuccessfully);
+        pollgramDAO.setMessageAsParsed(groupChatId, messageId, parsedSuccessfully);
     }
 
     protected void sendMessage(long groupChatId, String message) {
@@ -357,7 +360,11 @@ protected void sendMessage(long groupChatId, String message) {
 
     @Override
     public String asString(TLRPC.User user){
-        if (user.id == UserConfig.getCurrentUser().id)
+        return asString(user, true);
+    }
+
+    private String asString(TLRPC.User user, boolean overrideYou) {
+        if (overrideYou && user.id == UserConfig.getCurrentUser().id)
             return ApplicationLoader.applicationContext.getString(R.string.you);
 
         if (user.id / 1000 != 777 && user.id / 1000 != 333 &&
@@ -403,6 +410,26 @@ public Bundle getBundleForVotesManagerFragment(TLRPC.ChatFull info, MessageObjec
     }
 
 
+    @Override
+    public Bundle getBundleForNewDecision(TLRPC.Chat currentChat, MessageObject selectedObject) {
+        Context context = ApplicationLoader.applicationContext;
+
+        TLRPC.User user =  getUser(selectedObject.messageOwner.from_id);
+        String userAsString = asString(user,false);
+        String dateAsString = DateFormat.getDateInstance(DateFormat.SHORT).
+                format(getMessageDate(selectedObject));
+
+        StringBuilder longDescription = new StringBuilder();
+        longDescription.append(context.getString(R.string.newDecisionFromMessageHeader, dateAsString ,userAsString));
+        longDescription.append('\n');
+        longDescription.append(selectedObject.messageText.toString());
+
+        Bundle args = new Bundle();
+        args.putInt(NewDecisionFragment.PAR_GROUP_CHAT_ID, currentChat.id);
+        args.putString(NewDecisionFragment.PAR_DECISION_LONG_DESCRIPTION, longDescription.toString());
+        return args;
+    }
+
     /**
      * Internal class used for sorting messages
      */
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
index 80ef5d2c0..b30f43482 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
@@ -37,18 +37,20 @@
 public class NewDecisionFragment extends BaseFragment {
 
     public static final String PAR_GROUP_CHAT_ID = "PAR_GROUP_CHAT_ID";
+    public static final String PAR_DECISION_LONG_DESCRIPTION = "PAR_DECISION_LONG_DESCRIPTION";
+
     private static final short PAGE_1 = 1;
     private static final short PAGE_2 = 2;
 
     private static final int NEXT_MENU_ITEM_ID = 1;
 
     private static final String LOG_TAG = "NEW_DEC_FRAG";
+
     private EditText edTitle;
     private EditText edLongDescription;
 
     private short currentPage;
 
-    private Bundle wizardBundleArgs;
     private PollgramDAO pollgramDAO;
     private int groupChatId;
     private PollgramService pollgramService;
@@ -68,11 +70,11 @@ public NewDecisionFragment(Bundle args) {
     public boolean onFragmentCreate() {
         pollgramDAO = PollgramFactory.getPollgramDAO();
         pollgramService = PollgramFactory.getPollgramService();
-        wizardBundleArgs = new Bundle();
+
         groupChatId = getArguments().getInt(PAR_GROUP_CHAT_ID);
+        decisionLongDescription = getArguments().getString(PAR_DECISION_LONG_DESCRIPTION);
 
         decisionTitle = "";
-        decisionLongDescription = "";
         return true;
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 09636d2d8..45ec7a0c2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -148,6 +148,7 @@
 public class ChatActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, DialogsActivity.MessagesActivityDelegate,
         PhotoViewer.PhotoViewerProvider {
 
+    private static final int MENU_ITEM_OPTION_CREATE_DECISION = 1001;
     protected TLRPC.Chat currentChat;
     protected TLRPC.User currentUser;
     protected TLRPC.EncryptedChat currentEncryptedChat;
@@ -6066,6 +6067,12 @@ private void createMenu(View v, boolean single) {
                     options.add(1);
                 } else {
                     if (currentEncryptedChat == null) {
+
+                        if (isGroupChat()) { // Pollgram custom items
+                            items.add(LocaleController.getString("CreateDecision", R.string.CreateDecision));
+                            options.add(MENU_ITEM_OPTION_CREATE_DECISION);
+                        }
+
                         if (allowChatActions) {
                             items.add(LocaleController.getString("Reply", R.string.Reply));
                             options.add(8);
@@ -6331,6 +6338,12 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 path = FileLoader.getPathToMessage(selectedObject.messageOwner).toString();
             }
             MediaController.saveFile(path, getParentActivity(), selectedObject.isMusic() ? 3 : 2, fileName);
+
+        } else if (option == MENU_ITEM_OPTION_CREATE_DECISION){
+            // Pollgram create decision
+            Bundle args = PollgramFactory.getPollgramService().getBundleForNewDecision(currentChat, selectedObject);
+            presentFragment(new NewDecisionFragment(args));
+
         } else if (option == 11) {
             MediaController.SearchImage searchImage = new MediaController.SearchImage();
             searchImage.type = 2;
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index 6ed9d7d7c..835f9f3bf 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -1166,6 +1166,9 @@
         tra i membri del gruppo, utilizzando un sistema basato su sondaggi.
         \n\nPremi il pulsante \"più\" per creare una nuova decisione.</string>
 
+    <string name="CreateDecision">Crea nuova decisione</string>
+    <string name="newDecisionFromMessageHeader">Message from %2$s, %1$s:</string>
+
     <!-- Pollgram crash messages START -->
     <string name="appCrashedMessage">Oh cazzo! L\'applicazione è andata in crash :-( Inviami una segnalazione del crash via email in modo che possa sistemare il tutto in men che non si dica. Grazie </string>
     <string name="sendCrashEmail">Invia sengalazione via eMail</string>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index e34cfa93c..36b3b6b19 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -1166,6 +1166,9 @@
         using a poll-based system.
         \n\nPres the \"plus\" button for creating a new decision.</string>
 
+    <string name="CreateDecision">Create Decision</string>
+    <string name="newDecisionFromMessageHeader">Message from %2$s, %1$s:</string>
+
     <!-- Pollgram crash messages START -->
     <string name="appCrashedMessage">Oh shit ! The app crashed :-( Please send me the crash info by email, so i can fix the problem as soon a spossible. Thanks you.</string>
     <string name="sendCrashEmail">Send Crash info by Email</string>
@@ -1173,7 +1176,9 @@
     <string name="sendInfoEmail">Pollgram contact developer</string>
     <string name="doNotPressThisButton">Do not press here</string>
     <string name="emailCrashMessageBody">I am sorry but Pollgram just crashed because of: \n%1$s\nCrash report is attached to the email.\nThank you for the support.\n</string>
+    <string name="title_activity_crash_manager_activity">Crash Manager</string>
     <!-- Pollgram crash messages END -->
+
     <string name="emailBugDestAddress">davide.pallaoro@gmail.com</string>
     <!-- END of Pollgram text -->
 
@@ -1184,6 +1189,4 @@
 
     <string name="hello_world">Hello world!</string>
     <string name="action_settings">Settings</string>
-    <string name="title_activity_crash_manager_activity">Crash Manager</string>
-
 </resources>
