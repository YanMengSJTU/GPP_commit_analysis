diff --git a/TMessagesProj/src/main/AndroidManifest.xml b/TMessagesProj/src/main/AndroidManifest.xml
index e2e465bb7..6d6f7d8f7 100644
--- a/TMessagesProj/src/main/AndroidManifest.xml
+++ b/TMessagesProj/src/main/AndroidManifest.xml
@@ -128,6 +128,11 @@
             android:theme="@style/Theme.TMessages.PopupNotification"
             android:windowSoftInputMode="adjustResize|stateHidden">
         </activity>
+        <activity
+            android:name=".decision.ui.CrashManagerActivity"
+            android:label="@string/title_activity_crash_manager_activity"
+            android:theme="@style/Theme.Transparent">
+        </activity>
 
         <receiver android:name="org.telegram.messenger.AutoMessageHeardReceiver">
             <intent-filter>
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
index 250cc8e12..a84ff7967 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
@@ -135,6 +135,15 @@
     Bundle getBundleForVotesManagerFragment(TLRPC.ChatFull info, MessageObject messageObject,
                                             final ClickableSpan url) throws PollgramDAOException;
 
+
+    /**
+     *
+     * @param currentChat
+     * @param selectedObject
+     * @return a Bundle for creating a new decision starting from a message
+     */
+    Bundle getBundleForNewDecision(TLRPC.Chat currentChat, MessageObject selectedObject);
+
     /**
      * @param user
      * @return a string representation of the passed user.
@@ -158,4 +167,5 @@ Bundle getBundleForVotesManagerFragment(TLRPC.ChatFull info, MessageObject messa
     List<MessageObject> getUnParsedMessages(final long dialog_id, Map<Integer, MessageObject> dialogMessagesByIds,
                                             List<MessageObject> excludeMessages);
 
+
 }
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
index cf3c6f83f..d70ca02e3 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
@@ -1,5 +1,6 @@
 package org.pollgram.decision.service;
 
+import android.content.Context;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
 import android.text.style.ClickableSpan;
@@ -13,6 +14,7 @@
 import org.pollgram.decision.data.ParsedMessage;
 import org.pollgram.decision.data.UsersDecisionVotes;
 import org.pollgram.decision.data.Vote;
+import org.pollgram.decision.ui.NewDecisionFragment;
 import org.pollgram.decision.ui.VotesManagerFragment;
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.ApplicationLoader;
@@ -25,6 +27,7 @@
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.Components.URLSpanNoUnderline;
 
+import java.text.DateFormat;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Date;
@@ -317,7 +320,7 @@ public void processMessage(MessageObject message, boolean showToastOnError) {
             Log.e(LOG_TAG,"Error parsing message ["+text+"] isCurrentUser["+isCurrentUser+"]",e);
         }
 
-        pollgramDAO.setMessageAsParsed(groupChatId,messageId, parsedSuccessfully);
+        pollgramDAO.setMessageAsParsed(groupChatId, messageId, parsedSuccessfully);
     }
 
     protected void sendMessage(long groupChatId, String message) {
@@ -357,7 +360,11 @@ protected void sendMessage(long groupChatId, String message) {
 
     @Override
     public String asString(TLRPC.User user){
-        if (user.id == UserConfig.getCurrentUser().id)
+        return asString(user, true);
+    }
+
+    private String asString(TLRPC.User user, boolean overrideYou) {
+        if (overrideYou && user.id == UserConfig.getCurrentUser().id)
             return ApplicationLoader.applicationContext.getString(R.string.you);
 
         if (user.id / 1000 != 777 && user.id / 1000 != 333 &&
@@ -403,6 +410,26 @@ public Bundle getBundleForVotesManagerFragment(TLRPC.ChatFull info, MessageObjec
     }
 
 
+    @Override
+    public Bundle getBundleForNewDecision(TLRPC.Chat currentChat, MessageObject selectedObject) {
+        Context context = ApplicationLoader.applicationContext;
+
+        TLRPC.User user =  getUser(selectedObject.messageOwner.from_id);
+        String userAsString = asString(user,false);
+        String dateAsString = DateFormat.getDateInstance(DateFormat.SHORT).
+                format(getMessageDate(selectedObject));
+
+        StringBuilder longDescription = new StringBuilder();
+        longDescription.append(context.getString(R.string.newDecisionFromMessageHeader, dateAsString ,userAsString));
+        longDescription.append('\n');
+        longDescription.append(selectedObject.messageText.toString());
+
+        Bundle args = new Bundle();
+        args.putInt(NewDecisionFragment.PAR_GROUP_CHAT_ID, currentChat.id);
+        args.putString(NewDecisionFragment.PAR_DECISION_LONG_DESCRIPTION, longDescription.toString());
+        return args;
+    }
+
     /**
      * Internal class used for sorting messages
      */
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/CrashManagerActivity.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/CrashManagerActivity.java
new file mode 100644
index 000000000..1401ebdb9
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/CrashManagerActivity.java
@@ -0,0 +1,127 @@
+package org.pollgram.decision.ui;
+
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.net.Uri;
+import android.os.Build;
+import android.os.Bundle;
+import android.util.Log;
+import android.widget.Toast;
+
+import org.pollgram.R;
+
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.io.InputStreamReader;
+
+public class CrashManagerActivity extends Activity {
+
+    public static final String PAR_ERROR_MESSAGE = "PAR_ERROR_MESSAGE";
+    public static final String PAR_FULL_STACKTRACE = "PAR_FULL_STACKTRACE";
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        final String errorMsg = getIntent().getExtras().getString(PAR_ERROR_MESSAGE);
+        final String stackTrace = getIntent().getExtras().getString(PAR_FULL_STACKTRACE);
+
+        final StringBuilder msgBody = new StringBuilder();
+        msgBody.append(getString(R.string.emailCrashMessageBody, errorMsg));
+
+        AlertDialog.Builder builder = new AlertDialog.Builder(CrashManagerActivity.this);
+        builder.setMessage(getString(R.string.appCrashedMessage));
+        builder.setPositiveButton(R.string.sendCrashEmail, new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+
+                File logAttachmentFile;
+                try {
+                    logAttachmentFile = extractLogToFile(CrashManagerActivity.this,stackTrace);
+                } catch (Exception e) {
+                    logAttachmentFile = null;
+                    msgBody.append('\n');
+                    msgBody.append("Error in retreving log:" + e.getMessage());
+                }
+
+                Intent i = new Intent(Intent.ACTION_SEND);
+                i.setType("message/rfc822");
+                i.putExtra(Intent.EXTRA_EMAIL, new String[]{getString(R.string.emailBugDestAddress)});
+                i.putExtra(Intent.EXTRA_SUBJECT, "Pollgram crash report");
+                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+                i.putExtra(Intent.EXTRA_TEXT, msgBody.toString());
+                if (logAttachmentFile != null)
+                    i.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(logAttachmentFile));
+
+                try {
+                    startActivity(Intent.createChooser(i, "Send crash report email..."));
+                    Log.d("Crash", "Send email activity started");
+                } catch (android.content.ActivityNotFoundException e) {
+                    Toast.makeText(CrashManagerActivity.this, "There are no email clients installed.", Toast.LENGTH_SHORT).show();
+                }
+                Log.e("Crash", "Application will ends due to a crash");
+                System.exit(1);
+            }
+        }).show();
+
+    }
+
+    public static File extractLogToFile(Context context, String stackTrace) throws PackageManager.NameNotFoundException, IOException {
+        PackageManager manager = context.getPackageManager();
+        PackageInfo info = manager.getPackageInfo(context.getPackageName(), 0);
+        String model = Build.MODEL;
+        if (!model.startsWith(Build.MANUFACTURER))
+            model = Build.MANUFACTURER + " " + model;
+
+
+        // Extract to file.
+        File file = File.createTempFile("crash",".log", context.getExternalFilesDir(null));
+        InputStreamReader reader = null;
+        FileWriter writer = null;
+        try {
+            // For Android 4.0 and earlier, you will get all app's log output, so filter it to
+            // mostly limit it to your app's output.  In later versions, the filtering isn't needed.
+            String cmd = (Build.VERSION.SDK_INT <= Build.VERSION_CODES.ICE_CREAM_SANDWICH_MR1) ?
+                    "logcat -d -v time MyApp:v dalvikvm:v System.err:v *:s" :
+                    "logcat -d -v time";
+
+            // get input stream
+            Process process = Runtime.getRuntime().exec(cmd);
+            reader = new InputStreamReader(process.getInputStream());
+
+            // write output stream
+            writer = new FileWriter(file);
+            writer.write("Android version: " + Build.VERSION.SDK_INT + "\n");
+            writer.write("Device: " + model + "\n");
+            writer.write("App version: " + (info == null ? "(null)" : info.versionCode) + "\n");
+            writer.write("Application crash because of: "+ stackTrace+"\n");
+            writer.write("-------------------------------------------");
+
+
+            char[] buffer = new char[1024];
+            int n = -1;
+            while((n = reader.read(buffer, 0, buffer.length)) != -1){
+                writer.write(buffer, 0, n);
+            }
+        } finally {
+            if (writer != null)
+                try {
+                    writer.close();
+                } catch (IOException e1) {
+                }
+            if (reader != null)
+                try {
+                    reader.close();
+                } catch (IOException e1) {
+                }
+        }
+        return file;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
index 29d8afe93..894c40716 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
@@ -48,6 +48,7 @@
     private static final int ID_TOGGLE_OPEN_CLOSE_DECISIONS = nextId++;
     private static final int ID_PURGE_ALL_DATA = nextId++;
     private static final int ID_PUT_STUB_DATA_DATA = nextId++;
+    private static final int ID_SUICIDE = nextId++;
 
     private Context context;
     private TLRPC.ChatFull chatInfo;
@@ -90,8 +91,11 @@ public View createView(final Context context) {
         ActionBarMenuItem headerItem = menu.addItem(0, R.drawable.ic_ab_other);
         final TextView viewOpenCloseTextView =  headerItem.addSubItem(ID_TOGGLE_OPEN_CLOSE_DECISIONS,
                 context.getString(hideCloseDecision ? R.string.viewCloseDecision : R.string.hideCloseDecision),0 );
-        headerItem.addSubItem(ID_PURGE_ALL_DATA, "Remove current chat decisions", 0);
-        headerItem.addSubItem(ID_PUT_STUB_DATA_DATA, "Put stub data for current chat", 0);
+
+        // TODO remove those last items...just for test
+//        headerItem.addSubItem(ID_PURGE_ALL_DATA, "Remove current chat decisions", 0);
+//        headerItem.addSubItem(ID_PUT_STUB_DATA_DATA, "Put stub data for current chat", 0);
+        headerItem.addSubItem(ID_SUICIDE , getParentActivity().getString(R.string.doNotPressThisButton), 0);
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
             @Override
             public void onItemClick(int id) {
@@ -104,13 +108,15 @@ public void onItemClick(int id) {
                         viewOpenCloseTextView.setText(R.string.viewCloseDecision);
                     else
                         viewOpenCloseTextView.setText(R.string.hideCloseDecision);
-                } else if (id == ID_PURGE_ALL_DATA){
+                } else if (id == ID_PURGE_ALL_DATA) {
                     List<Decision> allDecisions = pollgramDAO.getDecisions(chatInfo.id, null);
-                    for (Decision d : allDecisions){
+                    for (Decision d : allDecisions) {
                         pollgramDAO.delete(d);
                     }
-                } else if (id == ID_PUT_STUB_DATA_DATA){
+                } else if (id == ID_PUT_STUB_DATA_DATA) {
                     pollgramDAO.putStubData(currentChat.id, UserConfig.getCurrentUser().id);
+                } else if (id == ID_SUICIDE){
+                    throw new RuntimeException("Goodbye cruel world");
                 }
                 updateResult();
             }
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
index 80ef5d2c0..b30f43482 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
@@ -37,18 +37,20 @@
 public class NewDecisionFragment extends BaseFragment {
 
     public static final String PAR_GROUP_CHAT_ID = "PAR_GROUP_CHAT_ID";
+    public static final String PAR_DECISION_LONG_DESCRIPTION = "PAR_DECISION_LONG_DESCRIPTION";
+
     private static final short PAGE_1 = 1;
     private static final short PAGE_2 = 2;
 
     private static final int NEXT_MENU_ITEM_ID = 1;
 
     private static final String LOG_TAG = "NEW_DEC_FRAG";
+
     private EditText edTitle;
     private EditText edLongDescription;
 
     private short currentPage;
 
-    private Bundle wizardBundleArgs;
     private PollgramDAO pollgramDAO;
     private int groupChatId;
     private PollgramService pollgramService;
@@ -68,11 +70,11 @@ public NewDecisionFragment(Bundle args) {
     public boolean onFragmentCreate() {
         pollgramDAO = PollgramFactory.getPollgramDAO();
         pollgramService = PollgramFactory.getPollgramService();
-        wizardBundleArgs = new Bundle();
+
         groupChatId = getArguments().getInt(PAR_GROUP_CHAT_ID);
+        decisionLongDescription = getArguments().getString(PAR_DECISION_LONG_DESCRIPTION);
 
         decisionTitle = "";
-        decisionLongDescription = "";
         return true;
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
index 19e2e49a5..0e7807055 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
@@ -43,7 +43,7 @@ public boolean isEnabled(int i) {
 
     @Override
     public int getCount() {
-        return UserConfig.isClientActivated() ? 10 : 0;
+        return UserConfig.isClientActivated() ? 11 : 0;
     }
 
     @Override
@@ -96,6 +96,8 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 actionCell.setTextAndIcon(LocaleController.getString("Settings", R.string.Settings), R.drawable.menu_settings);
             } else if (i == 9) {
                 actionCell.setTextAndIcon(LocaleController.getString("TelegramFaq", R.string.TelegramFaq), R.drawable.menu_help);
+            }else if (i == 10) {
+                actionCell.setTextAndIcon(LocaleController.getString("ContactMe", R.string.ContactMe), R.drawable.bot_info);
             }
         }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 09636d2d8..45ec7a0c2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -148,6 +148,7 @@
 public class ChatActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, DialogsActivity.MessagesActivityDelegate,
         PhotoViewer.PhotoViewerProvider {
 
+    private static final int MENU_ITEM_OPTION_CREATE_DECISION = 1001;
     protected TLRPC.Chat currentChat;
     protected TLRPC.User currentUser;
     protected TLRPC.EncryptedChat currentEncryptedChat;
@@ -6066,6 +6067,12 @@ private void createMenu(View v, boolean single) {
                     options.add(1);
                 } else {
                     if (currentEncryptedChat == null) {
+
+                        if (isGroupChat()) { // Pollgram custom items
+                            items.add(LocaleController.getString("CreateDecision", R.string.CreateDecision));
+                            options.add(MENU_ITEM_OPTION_CREATE_DECISION);
+                        }
+
                         if (allowChatActions) {
                             items.add(LocaleController.getString("Reply", R.string.Reply));
                             options.add(8);
@@ -6331,6 +6338,12 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 path = FileLoader.getPathToMessage(selectedObject.messageOwner).toString();
             }
             MediaController.saveFile(path, getParentActivity(), selectedObject.isMusic() ? 3 : 2, fileName);
+
+        } else if (option == MENU_ITEM_OPTION_CREATE_DECISION){
+            // Pollgram create decision
+            Bundle args = PollgramFactory.getPollgramService().getBundleForNewDecision(currentChat, selectedObject);
+            presentFragment(new NewDecisionFragment(args));
+
         } else if (option == 11) {
             MediaController.SearchImage searchImage = new MediaController.SearchImage();
             searchImage.type = 2;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index a9d55d29b..48ff963ab 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -28,6 +28,7 @@
 import android.provider.ContactsContract;
 import android.support.annotation.NonNull;
 import android.support.v4.app.FragmentActivity;
+import android.util.Log;
 import android.view.ActionMode;
 import android.view.KeyEvent;
 import android.view.MotionEvent;
@@ -44,37 +45,40 @@
 import android.widget.RelativeLayout;
 import android.widget.Toast;
 
-import org.telegram.messenger.AndroidUtilities;
+import org.pollgram.R;
+import org.pollgram.decision.ui.CrashManagerActivity;
 import org.telegram.PhoneFormat.PhoneFormat;
+import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.ContactsController;
+import org.telegram.messenger.FileLog;
 import org.telegram.messenger.ImageLoader;
+import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.MessagesStorage;
 import org.telegram.messenger.NativeCrashManager;
+import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.SendMessagesHelper;
+import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.UserObject;
 import org.telegram.messenger.query.StickersQuery;
-import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.FileLog;
-import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.NotificationCenter;
-import org.pollgram.R;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.RequestDelegate;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
-import org.telegram.messenger.UserConfig;
-import org.telegram.ui.Adapters.DrawerLayoutAdapter;
 import org.telegram.ui.ActionBar.ActionBarLayout;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.ActionBar.DrawerLayoutContainer;
+import org.telegram.ui.Adapters.DrawerLayoutAdapter;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.PasscodeView;
 
 import java.io.BufferedReader;
 import java.io.InputStream;
 import java.io.InputStreamReader;
+import java.io.PrintWriter;
+import java.io.StringWriter;
 import java.util.ArrayList;
 import java.util.Map;
 
@@ -119,6 +123,28 @@ protected void onCreate(Bundle savedInstanceState) {
         ApplicationLoader.postInitApplication();
         NativeCrashManager.handleDumpFiles(this);
 
+        //TODO fix
+        Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {
+            @Override
+            public void uncaughtException(Thread thread, final Throwable ex) {
+                Log.e("AppCrash", "Application crash due to",ex);
+                Intent intent = new Intent(LaunchActivity.this, CrashManagerActivity.class);
+                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); // required when starting from Application1
+                Bundle bundle = new Bundle();
+
+                StringWriter sw = new StringWriter();
+                PrintWriter pw = new PrintWriter(sw);
+                ex.printStackTrace(pw);
+
+                intent.putExtra(CrashManagerActivity.PAR_FULL_STACKTRACE, sw.toString());
+                intent.putExtra(CrashManagerActivity.PAR_ERROR_MESSAGE, ex.toString());
+                startActivity(intent);
+                System.exit(1);
+            }
+        });
+
+
+
         if (!UserConfig.isClientActivated()) {
             Intent intent = getIntent();
             if (intent != null && intent.getAction() != null && (Intent.ACTION_SEND.equals(intent.getAction()) || intent.getAction().equals(Intent.ACTION_SEND_MULTIPLE))) {
@@ -335,6 +361,13 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
                         FileLog.e("tmessages", e);
                     }
                     drawerLayoutContainer.closeDrawer(false);
+
+                } else if (position == 10){ // contact me
+                    Intent i = new Intent(Intent.ACTION_SEND);
+                    i.setType("message/rfc822");
+                    i.putExtra(Intent.EXTRA_EMAIL, new String[]{getString(R.string.emailBugDestAddress)});
+                    i.putExtra(Intent.EXTRA_SUBJECT, getString(R.string.sendInfoEmail));
+                    startActivity(Intent.createChooser(i, getString(R.string.sendInfoEmail)));
                 }
             }
         });
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index ef6482dff..835f9f3bf 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -1166,9 +1166,23 @@
         tra i membri del gruppo, utilizzando un sistema basato su sondaggi.
         \n\nPremi il pulsante \"più\" per creare una nuova decisione.</string>
 
+    <string name="CreateDecision">Crea nuova decisione</string>
+    <string name="newDecisionFromMessageHeader">Message from %2$s, %1$s:</string>
+
+    <!-- Pollgram crash messages START -->
+    <string name="appCrashedMessage">Oh cazzo! L\'applicazione è andata in crash :-( Inviami una segnalazione del crash via email in modo che possa sistemare il tutto in men che non si dica. Grazie </string>
+    <string name="sendCrashEmail">Invia sengalazione via eMail</string>
+    <string name="ContactMe">Contact me</string>
+    <string name="sendInfoEmail">Pollgram contactta lo sviluppatore</string>
+    <string name="doNotPressThisButton">Non premere qui</string>
+    <string name="emailCrashMessageBody">Mi dispiace ma Pollgram si è interrotto a causa di:\n%1$s\nLe infromazione relative al errore sono allegate alla mail.\nGrazie per il supporto supporto.\n</string>
+    <!-- Pollgram crash messages END -->
+
     <!-- END of Pollgram text -->
 
     <!--update text-->
     <string name="updateText">Telegram per Android si è aggiornato. Nuovo nella versione 3.4.0:\n\nRivoluzione GIF: Invio e download 20 volte più veloci, autoriproduci e salva le tue preferite nel pannello sticker.\n\nPiù info sulle GIF:\nhttps://telegram.org/blog/gif-revolution\n\nBot Inline: Un nuovo modo di aggiungere contenuti in ogni chat. Menziona un bot e la tua domanda nel campo di scrittura e ottieni risultati immediati. Prova a scrivere “@gif dog” nella tua prossima chat. Bot di esempio: @gif, @wiki, @bing, @vid, @bold\n\nPiù info sui Bot Inline:\nhttps://telegram.org/blog/inline-bots</string>
     <string name="updateBuild">704</string>
+
+
 </resources>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 1916a0c6f..36b3b6b19 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -1166,10 +1166,27 @@
         using a poll-based system.
         \n\nPres the \"plus\" button for creating a new decision.</string>
 
+    <string name="CreateDecision">Create Decision</string>
+    <string name="newDecisionFromMessageHeader">Message from %2$s, %1$s:</string>
+
+    <!-- Pollgram crash messages START -->
+    <string name="appCrashedMessage">Oh shit ! The app crashed :-( Please send me the crash info by email, so i can fix the problem as soon a spossible. Thanks you.</string>
+    <string name="sendCrashEmail">Send Crash info by Email</string>
+    <string name="ContactMe">Contact me</string>
+    <string name="sendInfoEmail">Pollgram contact developer</string>
+    <string name="doNotPressThisButton">Do not press here</string>
+    <string name="emailCrashMessageBody">I am sorry but Pollgram just crashed because of: \n%1$s\nCrash report is attached to the email.\nThank you for the support.\n</string>
+    <string name="title_activity_crash_manager_activity">Crash Manager</string>
+    <!-- Pollgram crash messages END -->
+
+    <string name="emailBugDestAddress">davide.pallaoro@gmail.com</string>
     <!-- END of Pollgram text -->
 
 
     <!--update text-->
     <string name="updateText">Telegram for Android has been updated. New in version 3.4.0:\n\nGIF revolution: up to 20x faster downloading/sending, autoplay, save GIFs to a dedicated tab on the sticker panel.\n\nMore about GIFs:\nhttps://telegram.org/blog/gif-revolution\n\nInline bots: A new way to add bot content to any chat. Type a bot\'s username and your query in the text field to get instant results and send them to your chat partner. Try typing “@gif dog” in your next chat. Sample bots: @gif, @wiki, @bing, @vid, @bold.\n\nMore about inline bots:\nhttps://telegram.org/blog/inline-bots</string>
     <string name="updateBuild">704</string>
+
+    <string name="hello_world">Hello world!</string>
+    <string name="action_settings">Settings</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values/styles.xml b/TMessagesProj/src/main/res/values/styles.xml
index 444570aed..f433d6bcf 100644
--- a/TMessagesProj/src/main/res/values/styles.xml
+++ b/TMessagesProj/src/main/res/values/styles.xml
@@ -77,4 +77,15 @@
         <item name="android:windowExitAnimation">@anim/no_animation</item>
     </style>
 
+    <!--FOR TRANSPARENT ACTIVITY-->
+
+    <style name="Theme.Transparent" parent="android:Theme">
+        <item name="android:windowIsTranslucent">true</item>
+        <item name="android:windowBackground">@android:color/transparent</item>
+        <item name="android:windowContentOverlay">@null</item>
+        <item name="android:windowNoTitle">true</item>
+        <item name="android:windowIsFloating">true</item>
+        <item name="android:backgroundDimEnabled">false</item>
+    </style>
+
 </resources>
