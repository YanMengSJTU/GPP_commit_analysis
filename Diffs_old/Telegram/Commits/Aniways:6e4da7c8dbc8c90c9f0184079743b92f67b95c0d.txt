diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index a4db15d09..681886963 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -21,6 +21,10 @@ dependencies {
     compile 'com.android.support:appcompat-v7:19.0.+'
     compile 'com.google.android.gms:play-services:4.1.+'
     compile 'net.hockeyapp.android:HockeySDK:3.0.1'
+    compile project(':aniways')
+    compile files('libs/AniwaysGoogleAnalytics.jar')
+    compile files('libs/AniwaysGson.jar')
+    compile files('libs/AniwaysSupport.jar')
 }
 
 android {
@@ -48,13 +52,11 @@ android {
             jniDebugBuild false
             signingConfig signingConfigs.debug
         }
-
         release {
             debuggable false
             jniDebugBuild false
             signingConfig signingConfigs.release
         }
-
         foss {
             debuggable false
             jniDebugBuild false
diff --git a/TMessagesProj/src/main/java/org/telegram/objects/MessageObject.java b/TMessagesProj/src/main/java/org/telegram/objects/MessageObject.java
index 31ac47dff..0c69ad204 100644
--- a/TMessagesProj/src/main/java/org/telegram/objects/MessageObject.java
+++ b/TMessagesProj/src/main/java/org/telegram/objects/MessageObject.java
@@ -10,17 +10,21 @@
 
 import android.graphics.Bitmap;
 import android.graphics.Paint;
+import android.text.Editable;
 import android.text.Layout;
 import android.text.Spannable;
 import android.text.StaticLayout;
 import android.text.TextPaint;
 import android.text.util.Linkify;
 
+import com.aniways.Aniways;
+import com.aniways.AniwaysIconConverter;
+import com.aniways.AniwaysIconInfoDisplayer;
+
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.TLObject;
 import org.telegram.messenger.TLRPC;
-import org.telegram.messenger.Emoji;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
@@ -32,6 +36,8 @@
 import java.util.GregorianCalendar;
 
 public class MessageObject {
+    private Editable aniwaysDecodedMessageTextBigIcons;
+    private Editable aniwaysDecodedMessageTextSmallIcons;
     public TLRPC.Message messageOwner;
     public CharSequence messageText;
     public int type;
@@ -251,7 +257,8 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
         } else {
             messageText = message.message;
         }
-        messageText = Emoji.replaceEmoji(messageText);
+
+        //messageText = Emoji.replaceEmoji(messageText);
 
         if (message instanceof TLRPC.TL_message || (message instanceof TLRPC.TL_messageForwarded && (message.media == null || !(message.media instanceof TLRPC.TL_messageMediaEmpty)))) {
             if (message.media == null || message.media instanceof TLRPC.TL_messageMediaEmpty) {
@@ -329,6 +336,26 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
         generateLayout();
     }
 
+    public CharSequence getAniwaysDecodedMessageTextSmallIcons(){
+
+        if(this.aniwaysDecodedMessageTextSmallIcons == null){
+            aniwaysDecodedMessageTextSmallIcons = Aniways.decodeMessage(this.messageText, new AniwaysIconInfoDisplayer(), true);
+        }
+
+        return this.aniwaysDecodedMessageTextSmallIcons;
+
+    }
+
+    public CharSequence getAniwaysDecodedMessageTextBigIcons(){
+
+        if(this.aniwaysDecodedMessageTextBigIcons == null){
+            aniwaysDecodedMessageTextBigIcons = Aniways.decodeMessage(this.messageText, new AniwaysIconInfoDisplayer(), false);
+        }
+
+        return this.aniwaysDecodedMessageTextBigIcons;
+
+    }
+
     public String getFileName() {
         if (messageOwner.media instanceof TLRPC.TL_messageMediaVideo) {
             return getAttachFileName(messageOwner.media.video);
@@ -386,17 +413,21 @@ public static String getAttachFileName(TLObject attach) {
     }
 
     private void generateLayout() {
-        if (type != 0 && type != 1 && type != 8 && type != 9 || messageOwner.to_id == null || messageText == null || messageText.length() == 0) {
+
+        // This is used only by the views that display the normal sized icons, so it is OK to assume the large icons here..
+        CharSequence messageTextDecoded = getAniwaysDecodedMessageTextBigIcons();
+
+        if (type != 0 && type != 1 && type != 8 && type != 9 || messageOwner.to_id == null || messageTextDecoded == null || messageTextDecoded.length() == 0) {
             return;
         }
 
         textLayoutBlocks = new ArrayList<TextLayoutBlock>();
 
-        if (messageText instanceof Spannable) {
+        if (messageTextDecoded instanceof Spannable) {
             if (messageOwner.message != null && messageOwner.message.contains(".") && (messageOwner.message.contains(".com") || messageOwner.message.contains("http") || messageOwner.message.contains(".ru") || messageOwner.message.contains(".org") || messageOwner.message.contains(".net"))) {
-                Linkify.addLinks((Spannable)messageText, Linkify.WEB_URLS);
-            } else if (messageText.length() < 100) {
-                Linkify.addLinks((Spannable)messageText, Linkify.WEB_URLS | Linkify.EMAIL_ADDRESSES | Linkify.PHONE_NUMBERS);
+                Linkify.addLinks((Spannable)messageTextDecoded, Linkify.WEB_URLS);
+            } else if (messageTextDecoded.length() < 100) {
+                Linkify.addLinks((Spannable)messageTextDecoded, Linkify.WEB_URLS | Linkify.EMAIL_ADDRESSES | Linkify.PHONE_NUMBERS);
             }
         }
 
@@ -412,7 +443,7 @@ private void generateLayout() {
         StaticLayout textLayout = null;
 
         try {
-            textLayout = new StaticLayout(messageText, textPaint, maxWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
+            textLayout = new StaticLayout(messageTextDecoded, textPaint, maxWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
         } catch (Exception e) {
             FileLog.e("tmessages", e);
             return;
@@ -442,7 +473,7 @@ private void generateLayout() {
                 }
                 block.charactersOffset = startCharacter;
                 try {
-                    CharSequence str = messageText.subSequence(startCharacter, endCharacter);
+                    CharSequence str = messageTextDecoded.subSequence(startCharacter, endCharacter);
                     block.textLayout = new StaticLayout(str, textPaint, maxWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
                     block.textYOffset = textLayout.getLineTop(linesOffset);
                     if (a != blocksCount - 1) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
index 0ed5388a3..570b4fcdd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
@@ -10,19 +10,26 @@
 
 import android.content.Context;
 import android.graphics.Canvas;
+import android.graphics.Point;
+import android.text.Layout;
 import android.text.Spannable;
 import android.text.style.ClickableSpan;
 import android.view.MotionEvent;
+import android.view.View;
+
+import com.aniways.AniwaysIconInfoSpan;
+import com.aniways.IAniwaysTextContainer;
 
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.Utilities;
 import org.telegram.objects.MessageObject;
 
-public class ChatMessageCell extends ChatBaseCell {
+public class ChatMessageCell extends ChatBaseCell implements IAniwaysTextContainer {
 
     private int textX, textY;
     private int totalHeight = 0;
     private ClickableSpan pressedLink;
+    private AniwaysIconInfoSpan pressedIcon;
 
     private int lastVisibleBlockNum = 0;
     private int firstVisibleBlockNum = 0;
@@ -35,8 +42,8 @@ public ChatMessageCell(Context context, boolean isChat) {
 
     @Override
     public boolean onTouchEvent(MotionEvent event) {
-        if (currentMessageObject != null && currentMessageObject.textLayoutBlocks != null && !currentMessageObject.textLayoutBlocks.isEmpty() && currentMessageObject.messageText instanceof Spannable && !isPressed) {
-            if (event.getAction() == MotionEvent.ACTION_DOWN || pressedLink != null && event.getAction() == MotionEvent.ACTION_UP) {
+        if (currentMessageObject != null && currentMessageObject.textLayoutBlocks != null && !currentMessageObject.textLayoutBlocks.isEmpty() && currentMessageObject.getAniwaysDecodedMessageTextBigIcons() instanceof Spannable && !isPressed) {
+            if (event.getAction() == MotionEvent.ACTION_DOWN || (pressedLink != null || pressedIcon != null) && event.getAction() == MotionEvent.ACTION_UP) {
                 int x = (int)event.getX();
                 int y = (int)event.getY();
                 if (x >= textX && y >= textY && x <= textX + currentMessageObject.textWidth && y <= textY + currentMessageObject.textHeight) {
@@ -51,8 +58,9 @@ public boolean onTouchEvent(MotionEvent event) {
 
                         final float left = block.textLayout.getLineLeft(line);
                         if (left <= x && left + block.textLayout.getLineWidth(line) >= x) {
-                            Spannable buffer = (Spannable)currentMessageObject.messageText;
+                            Spannable buffer = (Spannable)currentMessageObject.getAniwaysDecodedMessageTextBigIcons();
                             ClickableSpan[] link = buffer.getSpans(off, off, ClickableSpan.class);
+                            AniwaysIconInfoSpan[] iconInfos = buffer.getSpans(off, off, AniwaysIconInfoSpan.class);
 
                             if (link.length != 0) {
                                 if (event.getAction() == MotionEvent.ACTION_DOWN) {
@@ -71,18 +79,41 @@ public boolean onTouchEvent(MotionEvent event) {
                             } else {
                                 pressedLink = null;
                             }
+
+                            if (iconInfos.length != 0) {
+                                if (event.getAction() == MotionEvent.ACTION_DOWN) {
+                                    pressedIcon = iconInfos[0];
+                                    return true;
+                                } else {
+                                    if (iconInfos[0] == pressedIcon) {
+                                        try {
+                                            pressedIcon.onClick(this);
+                                        } catch (Exception e) {
+                                            FileLog.e("tmessages", e);
+                                        }
+                                        return true;
+                                    }
+                                }
+                            } else {
+                                pressedIcon = null;
+                            }
+
                         } else {
                             pressedLink = null;
+                            pressedIcon = null;
                         }
                     } else {
                         pressedLink = null;
+                        pressedIcon = null;
                     }
                 } else {
                     pressedLink = null;
+                    pressedIcon = null;
                 }
             }
         } else {
             pressedLink = null;
+            pressedIcon = null;
         }
         return super.onTouchEvent(event);
     }
@@ -130,6 +161,7 @@ public void setMessageObject(MessageObject messageObject) {
                 lastVisibleBlockNum = 0;
             }
             pressedLink = null;
+            pressedIcon = null;
             int maxWidth;
             if (chat) {
                 maxWidth = Utilities.displaySize.x - Utilities.dp(122);
@@ -215,4 +247,89 @@ protected void onDraw(Canvas canvas) {
             canvas.restore();
         }
     }
+
+    @Override
+    public Spannable getText() {
+        return (Spannable) this.currentMessageObject.getAniwaysDecodedMessageTextBigIcons();
+    }
+
+    /** Return the point (in pixels) of the received char position as it is displayed
+     * relative to the upper left corner of the widget, or lower left if fromTop == false.
+     * It accounts for scroll position and paddings
+     * !! Be careful, it can return null!!
+     **/
+    @Override
+    public Point getPointOfPositionInText(int position, boolean fromTop) {
+        int leftPadding = this.textX;
+        int topPadding = this.textY;
+
+        // Get the text block this position is in
+
+        MessageObject.TextLayoutBlock theBlock = null;
+        for (int a = firstVisibleBlockNum; a <= lastVisibleBlockNum; a++) {
+            if (a >= currentMessageObject.textLayoutBlocks.size()) {
+                return null;
+            }
+
+            MessageObject.TextLayoutBlock block = currentMessageObject.textLayoutBlocks.get(a);
+
+            if(position < block.charactersOffset){
+                return null;
+            }
+
+            int blockEnd = block.charactersOffset + block.textLayout.getText().length();
+            // The second condition is because if the span is at the block end then the char after it (position) is in the next block
+            // and then position == blockEnd. We should regard this block as the right one only if we are looking at the
+            // end of the span and not the start of the span (because then we position the span as if it is in the previous block)MessageObject
+            if(position < blockEnd || (position == blockEnd && a == lastVisibleBlockNum )){
+                theBlock = block;
+                break;
+            }
+        }
+
+        if(theBlock == null){
+            return null;
+        }
+
+        // The position in the block
+        position = position - theBlock.charactersOffset;
+
+        Layout layout = theBlock.textLayout;
+
+        if(layout == null){
+            // This could happen immediately after changing modes from vertical to horizontal, for instance..
+            return null;
+        }
+
+        int line = layout.getLineForOffset(position);
+        int baseline = layout.getLineBaseline(line);
+
+        //float x = theBlock.textXOffset + layout.getPrimaryHorizontal(position);
+        // The above line is more correct, but it doesn't work for right to left, and the offset always seems to be '0', so I remove for now
+        // TODO: fix according to above comment
+        float x = layout.getPrimaryHorizontal(position) - theBlock.textXOffset;
+        x += leftPadding;
+        //x -= mTextView.getScrollX();
+
+        float y = theBlock.textYOffset + baseline;
+        y += topPadding;
+        //y -= mTextView.getScrollY();
+        if(fromTop){
+            int ascent = layout.getLineAscent(line);
+            y += ascent;
+        }
+        else{
+            int viewHeight = this.getHeight();
+            y = viewHeight - y;
+        }
+
+
+        Point point = new Point((int)Math.round(x), (int)Math.round(y));
+        return point;
+    }
+
+    @Override
+    public View getView() {
+        return this;
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
index b89617a49..90b3f6597 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
@@ -18,11 +18,13 @@
 import android.text.TextUtils;
 import android.view.View;
 
+import com.aniways.Aniways;
+import com.aniways.AniwaysIconInfoDisplayer;
+
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.ContactsController;
-import org.telegram.messenger.Emoji;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
@@ -474,7 +476,7 @@ public void build(int width, int height) {
                             } else {
                                 checkMessage = false;
                                 if (message.messageOwner.message != null) {
-                                    messageString = Emoji.replaceEmoji(Html.fromHtml(String.format("<font color=#316f9f>%s:</font> <font color=#808080>%s</font>", name, message.messageOwner.message.replace("\n", " "))));
+                                    messageString = Html.fromHtml(String.format("<font color=#316f9f>%s:</font> <font color=#808080>%s</font>", name, message.messageOwner.message.replace("\n", " ")));
                                 }
                             }
                         } else {
@@ -654,9 +656,10 @@ public void build(int width, int height) {
                 if (mess.length() > 150) {
                     mess = mess.substring(0, 150);
                 }
-                messageString = Emoji.replaceEmoji(mess);
+                messageString = mess;
             }
 
+            messageString = Aniways.decodeMessage(messageString, new AniwaysIconInfoDisplayer(), true);
             CharSequence messageStringFinal = TextUtils.ellipsize(messageString, currentMessagePaint, messageWidth - Utilities.dp(12), TextUtils.TruncateAt.END);
             messageLayout = new StaticLayout(messageStringFinal, currentMessagePaint, messageWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 2a4eabbd5..c44deccdb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -36,6 +36,7 @@
 import android.support.v7.view.ActionMode;
 import android.text.Editable;
 import android.text.Html;
+import android.text.Spannable;
 import android.text.TextWatcher;
 import android.text.style.ImageSpan;
 import android.util.TypedValue;
@@ -69,6 +70,10 @@
 import android.widget.RelativeLayout;
 import android.widget.TextView;
 
+import com.aniways.Aniways;
+import com.aniways.AniwaysEditText;
+import com.aniways.AniwaysTextView;
+
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
@@ -79,7 +84,6 @@
 import org.telegram.objects.MessageObject;
 import org.telegram.objects.PhotoObject;
 import org.telegram.messenger.ConnectionsManager;
-import org.telegram.messenger.Emoji;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
@@ -114,7 +118,7 @@
     private ChatAdapter chatAdapter;
     private EditText messsageEditText;
     private ImageButton sendButton;
-    private PopupWindow emojiPopup;
+    //private PopupWindow emojiPopup;
     private ImageView emojiButton;
     private EmojiView emojiView;
     private View slideText;
@@ -430,6 +434,9 @@ public void onFragmentDestroy() {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+
+        Aniways.init(this.getActivity());
+
         setHasOptionsMenu(true);
         Display display = parentActivity.getWindowManager().getDefaultDisplay();
         if(android.os.Build.VERSION.SDK_INT < 13) {
@@ -629,6 +636,9 @@ public void onScroll(AbsListView absListView, int firstVisibleItem, int visibleI
                 }
             }
 
+            Aniways.makeButtonAniwaysEmoticonsButton(emojiButton, (ViewGroup) fragmentView, (AniwaysEditText)messsageEditText, null, true);
+
+            /*
             emojiButton.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View view) {
@@ -639,16 +649,12 @@ public void onClick(View view) {
                     }
                 }
             });
+            */
 
             messsageEditText.setOnKeyListener(new View.OnKeyListener() {
                 @Override
                 public boolean onKey(View view, int i, KeyEvent keyEvent) {
-                    if (i == 4 && !keyboardVisible && emojiPopup != null && emojiPopup.isShowing()) {
-                        if (keyEvent.getAction() == 1) {
-                            showEmojiPopup(false);
-                        }
-                        return true;
-                    } else if (i == KeyEvent.KEYCODE_ENTER && sendByEnter && keyEvent.getAction() == KeyEvent.ACTION_DOWN) {
+                    if (i == KeyEvent.KEYCODE_ENTER && sendByEnter && keyEvent.getAction() == KeyEvent.ACTION_DOWN) {
                         sendMessage();
                         return true;
                     }
@@ -775,6 +781,8 @@ public void afterTextChanged(Editable editable) {
                     if (sendByEnter && editable.length() > 0 && editable.charAt(editable.length() - 1) == '\n') {
                         sendMessage();
                     }
+
+                    /*
                     int i = 0;
                     ImageSpan[] arrayOfImageSpan = editable.getSpans(0, editable.length(), ImageSpan.class);
                     int j = arrayOfImageSpan.length;
@@ -786,6 +794,7 @@ public void afterTextChanged(Editable editable) {
                         editable.removeSpan(arrayOfImageSpan[i]);
                         i++;
                     }
+                    */
                 }
             });
 
@@ -987,7 +996,7 @@ public void onAnimationRepeat(Animator animator) {
     }
 
     private void sendMessage() {
-        String message = messsageEditText.getText().toString().trim();
+        String message = Aniways.encodeMessage(messsageEditText.getText());
         if (processSendingText(message)) {
             messsageEditText.setText("");
             lastTypingTimeSend = 0;
@@ -1096,7 +1105,7 @@ private void updateSecretStatus() {
             bottomOverlay.setVisibility(View.GONE);
         }
         if (hideKeyboard) {
-            hideEmojiPopup();
+            //hideEmojiPopup();
             if (parentActivity != null) {
                 Utilities.hideKeyboard(parentActivity.getCurrentFocus());
             }
@@ -1350,6 +1359,7 @@ private void checkAndUpdateAvatar() {
 
     @Override
     public void onSizeChanged(int height) {
+        /*
         Rect localRect = new Rect();
         parentActivity.getWindow().getDecorView().getWindowVisibleDisplayFrame(localRect);
 
@@ -1397,6 +1407,7 @@ public void run() {
         } else if (!keyboardVisible && keyboardVisible != oldValue && emojiPopup != null && emojiPopup.isShowing()) {
             showEmojiPopup(false);
         }
+        */
     }
 
     @Override
@@ -2326,6 +2337,7 @@ public void run() {
         }
     }
 
+    /*
     private void createEmojiPopup() {
         emojiView = new EmojiView(parentActivity);
         emojiView.setListener(new EmojiView.Listener() {
@@ -2343,7 +2355,9 @@ public void onEmojiSelected(String paramAnonymousString) {
         });
         emojiPopup = new PopupWindow(emojiView);
     }
+    */
 
+    /*
     private void showEmojiPopup(boolean show) {
         if (parentActivity == null) {
             return;
@@ -2401,6 +2415,7 @@ public void hideEmojiPopup() {
             showEmojiPopup(false);
         }
     }
+    */
 
     @Override
     public void applySelfActionBar() {
@@ -2518,14 +2533,14 @@ public void onPause() {
             mActionMode.finish();
             mActionMode = null;
         }
-        hideEmojiPopup();
+        //hideEmojiPopup();
         paused = true;
         MessagesController.getInstance().openned_dialog_id = 0;
 
         if (messsageEditText != null && messsageEditText.length() != 0) {
             SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
             SharedPreferences.Editor editor = preferences.edit();
-            editor.putString("dialog_" + dialog_id, messsageEditText.getText().toString());
+            editor.putString("dialog_" + dialog_id, Aniways.encodeMessage(messsageEditText.getText()));
             editor.commit();
         }
 
@@ -2969,6 +2984,7 @@ private void processSelectedOption(int option) {
             if (selectedObject != null) {
                 if(android.os.Build.VERSION.SDK_INT < 11) {
                     android.text.ClipboardManager clipboard = (android.text.ClipboardManager)parentActivity.getSystemService(Context.CLIPBOARD_SERVICE);
+                    // This is not the Aniways decoded version on purpose
                     clipboard.setText(selectedObject.messageText);
                 } else {
                     android.content.ClipboardManager clipboard = (android.content.ClipboardManager)parentActivity.getSystemService(Context.CLIPBOARD_SERVICE);
@@ -3079,6 +3095,7 @@ public int compare(Integer lhs, Integer rhs) {
         }
     }
 
+    /*
     @Override
     public boolean onBackPressed() {
         if (emojiPopup != null && emojiPopup.isShowing()) {
@@ -3088,6 +3105,7 @@ public boolean onBackPressed() {
             return true;
         }
     }
+    */
 
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
@@ -3676,6 +3694,8 @@ public void update() {
                 actionAttachButton.setText(LocaleController.getString("ViewLocation", R.string.ViewLocation));
             } else if (type == 11 || type == 10) {
                 int width = displaySize.x - Utilities.dp(30);
+
+                //TODO: Find out where this textView is and whether it should be an AniwaysTextView
                 messageTextView.setText(message.messageText);
                 messageTextView.setMaxWidth(width);
 
@@ -4000,7 +4020,7 @@ public ChatListRowHolderEx(View view, int type) {
             halfCheckImage = (ImageView)view.findViewById(R.id.chat_row_halfcheck);
             checkImage = (ImageView)view.findViewById(R.id.chat_row_check);
             actionAttachButton = (TextView)view.findViewById(R.id.chat_view_action_button);
-            messageTextView = (TextView)view.findViewById(R.id.chat_message_text);
+            messageTextView = (AniwaysTextView)view.findViewById(R.id.chat_message_text);
             videoTimeText = (TextView)view.findViewById(R.id.chat_video_time);
             actionView = view.findViewById(R.id.chat_view_action_layout);
             actionProgress = (ProgressBar)view.findViewById(R.id.chat_view_action_progress);
@@ -4014,6 +4034,7 @@ public ChatListRowHolderEx(View view, int type) {
             photoProgressView = view.findViewById(R.id.photo_progress);
             if (messageTextView != null) {
                 messageTextView.setTextSize(TypedValue.COMPLEX_UNIT_SP, MessagesController.getInstance().fontSize);
+                ((AniwaysTextView)messageTextView).setUseSmallIcons(true);
             }
 
             if (actionProgress != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index 0b003f29d..45275b1de 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -34,6 +34,8 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
+import com.aniways.Aniways;
+
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.BuildVars;
 import org.telegram.messenger.ConnectionsManager;
@@ -78,6 +80,9 @@
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+
+        Aniways.init(this);
+
         ApplicationLoader.postInitApplication();
 
         this.setTheme(R.style.Theme_TMessages);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/MessageActionLayout.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/MessageActionLayout.java
index d0e2e1367..3596f2579 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/MessageActionLayout.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/MessageActionLayout.java
@@ -38,5 +38,6 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
     protected void onFinishInflate() {
         super.onFinishInflate();
         messageTextView = (TightTextView)findViewById(R.id.chat_message_text);
+        messageTextView.setUseSmallIcons(true);
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/NotificationView.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/NotificationView.java
index 7265fce50..2b6bd1889 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/NotificationView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/NotificationView.java
@@ -23,6 +23,8 @@
 import android.widget.LinearLayout;
 import android.widget.TextView;
 
+import com.aniways.AniwaysTextView;
+
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.FileLog;
@@ -39,7 +41,7 @@
 public class NotificationView extends LinearLayout {
     public BackupImageView avatarImage;
     public TextView nameTextView;
-    public TextView messageTextView;
+    public AniwaysTextView messageTextView;
     public ImageView closeButton;
     public FrameLayout textLayout;
     private WindowManager.LayoutParams notificationLayoutParams;
@@ -71,7 +73,8 @@ protected void onFinishInflate() {
         super.onFinishInflate();
         avatarImage = (BackupImageView)findViewById(R.id.avatar_image);
         nameTextView = (TextView)findViewById(R.id.name_text_view);
-        messageTextView = (TextView)findViewById(R.id.message_text_view);
+        messageTextView = (AniwaysTextView)findViewById(R.id.message_text_view);
+        messageTextView.setUseSmallIcons(true);
         closeButton = (ImageView)findViewById(R.id.close_button);
         textLayout = (FrameLayout)findViewById(R.id.text_layout);
         closeButton.setOnClickListener(new OnClickListener() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/TightTextView.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/TightTextView.java
index 2aa782a37..e08bfaee7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/TightTextView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/TightTextView.java
@@ -13,9 +13,11 @@
 import android.util.AttributeSet;
 import android.widget.TextView;
 
+import com.aniways.AniwaysTextView;
+
 import org.telegram.messenger.FileLog;
 
-public class TightTextView extends TextView {
+public class TightTextView extends AniwaysTextView {
     private boolean hasMaxWidth;
     public int maxWidth;
 
@@ -33,6 +35,7 @@ public TightTextView(Context context, AttributeSet attrs) {
 
     public TightTextView(Context context, AttributeSet attrs, int defStyle) {
         super(context, attrs, defStyle);
+        super.setUseSmallIcons(true);
     }
 
     @Override
diff --git a/TMessagesProj/src/main/res/layout-ar/notification_layout.xml b/TMessagesProj/src/main/res/layout-ar/notification_layout.xml
index 71df49163..65fa5ad04 100644
--- a/TMessagesProj/src/main/res/layout-ar/notification_layout.xml
+++ b/TMessagesProj/src/main/res/layout-ar/notification_layout.xml
@@ -34,7 +34,7 @@
                 android:layout_gravity="top|right"
                 android:singleLine="true"/>
 
-            <TextView android:layout_height="wrap_content"
+            <com.aniways.AniwaysTextView android:layout_height="wrap_content"
                 android:layout_width="wrap_content"
                 android:gravity="right|center"
                 android:textColor="#000000"
diff --git a/TMessagesProj/src/main/res/layout/chat_layout.xml b/TMessagesProj/src/main/res/layout/chat_layout.xml
index 22385b231..8c13f5bda 100644
--- a/TMessagesProj/src/main/res/layout/chat_layout.xml
+++ b/TMessagesProj/src/main/res/layout/chat_layout.xml
@@ -1,3 +1,4 @@
+
 <org.telegram.ui.Views.SizeNotifierRelativeLayout
     xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
@@ -142,7 +143,7 @@
             android:src="@drawable/send_button_states"
             android:background="@android:color/transparent"/>
 
-        <EditText
+        <com.aniways.AniwaysEditText
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:id="@+id/chat_text_edit"
diff --git a/TMessagesProj/src/main/res/layout/chat_unread_layout.xml b/TMessagesProj/src/main/res/layout/chat_unread_layout.xml
index 31c3cf3f1..11745bbb6 100644
--- a/TMessagesProj/src/main/res/layout/chat_unread_layout.xml
+++ b/TMessagesProj/src/main/res/layout/chat_unread_layout.xml
@@ -17,7 +17,7 @@
             android:layout_marginRight="10dp"
             android:paddingTop="2dp"/>
 
-        <TextView
+        <com.aniways.AniwaysTextView
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:layout_gravity="center"
diff --git a/TMessagesProj/src/main/res/layout/notification_layout.xml b/TMessagesProj/src/main/res/layout/notification_layout.xml
index e557bca37..0f64b5efd 100644
--- a/TMessagesProj/src/main/res/layout/notification_layout.xml
+++ b/TMessagesProj/src/main/res/layout/notification_layout.xml
@@ -36,7 +36,7 @@
                 android:ellipsize="end"
                 android:singleLine="true"/>
 
-            <TextView
+            <com.aniways.AniwaysTextView
                 android:layout_height="wrap_content"
                 android:layout_width="wrap_content"
                 android:gravity="left|center"
