diff --git a/TMessagesProj/src/main/java/org/telegram/android/Emoji.java b/TMessagesProj/src/main/java/org/telegram/android/Emoji.java
index 46e2b1b0e..df47ba902 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/Emoji.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/Emoji.java
@@ -13,6 +13,7 @@
 import java.util.HashMap;
 import java.util.Locale;
 
+import android.app.Activity;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.graphics.Canvas;
@@ -886,6 +887,10 @@ public static CharSequence replaceEmoji(CharSequence cs, Paint.FontMetricsInt fo
         if (cs == null || cs.length() == 0) {
             return cs;
         }
+        // If showAndroidEmoji is enabled don't replace anything
+        if (ApplicationLoader.applicationContext.getSharedPreferences("Ultra", Activity.MODE_PRIVATE).getBoolean("showAndroidEmoji", false)) {
+            return cs;
+        }
         Spannable s;
         if (cs instanceof Spannable) {
             s = (Spannable)cs;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsUltraFeaturesActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsUltraFeaturesActivity.java
index 5a094ffda..44c6ea916 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsUltraFeaturesActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsUltraFeaturesActivity.java
@@ -9,15 +9,8 @@
 package org.telegram.ui;
 
 import android.app.Activity;
-import android.app.AlertDialog;
 import android.content.Context;
-import android.content.DialogInterface;
-import android.content.Intent;
 import android.content.SharedPreferences;
-import android.media.Ringtone;
-import android.media.RingtoneManager;
-import android.net.Uri;
-import android.provider.Settings;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -25,31 +18,21 @@
 import android.widget.ImageView;
 import android.widget.ListView;
 import android.widget.TextView;
-import android.widget.Toast;
+import android.widget.SeekBar;
 
-import org.telegram.android.AndroidUtilities;
 import org.telegram.android.LocaleController;
-import org.telegram.android.NotificationsController;
-import org.telegram.android.NotificationCenter;
-import org.telegram.messenger.TLObject;
-import org.telegram.messenger.TLRPC;
-import org.telegram.messenger.ConnectionsManager;
-import org.telegram.messenger.FileLog;
-import org.telegram.android.MessagesController;
 import org.telegram.messenger.R;
-import org.telegram.messenger.RPCRequest;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Views.ActionBar.ActionBarLayer;
 import org.telegram.ui.Views.ActionBar.BaseFragment;
-import org.telegram.ui.Views.ColorPickerView;
-import org.telegram.ui.Views.SettingsSectionLayout;
 
 public class SettingsUltraFeaturesActivity extends BaseFragment {
     private ListView listView;
+    private SeekBar seekBar;
 
     private int enableMarkdownRow;
     private int photoResolutionRow;
-    private int useNativeEmojiRow;
+    private int showAndroidEmojiRow;
 
     private int rowCount = 0;
 
@@ -57,9 +40,7 @@
     public boolean onFragmentCreate() {
         enableMarkdownRow = rowCount++;
         photoResolutionRow = rowCount++;
-        useNativeEmojiRow = rowCount++;
-
-//        NotificationCenter.getInstance().addObserver(this, NotificationCenter.notificationsSettingsUpdated);
+        showAndroidEmojiRow = rowCount++;
 
         return super.onFragmentCreate();
     }
@@ -67,7 +48,7 @@ public boolean onFragmentCreate() {
     @Override
     public void onFragmentDestroy() {
         super.onFragmentDestroy();
-//        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.notificationsSettingsUpdated);
+
     }
 
     @Override
@@ -99,23 +80,42 @@ public void onItemClick(AdapterView<?> adapterView, View view, final int i, long
                         editor.putBoolean("view_markdown", !enabled);
                         editor.commit();
                         listView.invalidateViews();
-                    } else if (i == photoResolutionRow) {
+                    } else if (i == showAndroidEmojiRow) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Ultra", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
-                        boolean enabled = preferences.getBoolean("photoResolution", false);
-                        editor.putBoolean("photoResolution", !enabled);
-                        editor.commit();
-                        listView.invalidateViews();
-                    } else if (i == useNativeEmojiRow) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Ultra", Activity.MODE_PRIVATE);
-                        SharedPreferences.Editor editor = preferences.edit();
-                        boolean enabled = preferences.getBoolean("useNativeEmoji", false);
-                        editor.putBoolean("useNativeEmoji", !enabled);
+                        boolean enabled = preferences.getBoolean("showAndroidEmoji", false);
+                        editor.putBoolean("showAndroidEmoji", !enabled);
                         editor.commit();
                         listView.invalidateViews();
                     }
                 }
             });
+            seekBar = (SeekBar)fragmentView.findViewById(R.id.settings_row_seekBar);
+
+            //fragmentView = inflater.inflate(R.layout.settings_row_ultra_slider_layout, container, false);
+            //seekBar = (SeekBar)fragmentView.findViewById(R.id.settings_row_seekBar);
+//            seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
+//                @Override
+//                public void onStopTrackingTouch(SeekBar seekBarl) {
+//                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Ultra", Activity.MODE_PRIVATE);
+//                    SharedPreferences.Editor editor = preferences.edit();
+//                    int seekPercentage = preferences.getInt("photoResolution", 80);
+//                    editor.putInt("photoResolution", seekPercentage);
+//                    editor.commit();
+//                    listView.invalidateViews();
+//                }
+//
+//                @Override
+//                public void onStartTrackingTouch(SeekBar seekBarl) {
+//                    // TODO Auto-generated method stub
+//                }
+//
+//                @Override
+//                public void onProgressChanged(SeekBar seekBarl, int progress, boolean fromUser) {
+//
+//                }
+//            });
+
         } else {
             ViewGroup parent = (ViewGroup)fragmentView.getParent();
             if (parent != null) {
@@ -125,13 +125,6 @@ public void onItemClick(AdapterView<?> adapterView, View view, final int i, long
         return fragmentView;
     }
 
-//    @Override
-//    public void didReceivedNotification(int id, Object... args) {
-//        if (id == NotificationCenter.notificationsSettingsUpdated) {
-//            listView.invalidateViews();
-//        }
-//    }
-
     private class ListAdapter extends BaseFragmentAdapter {
         private Context mContext;
 
@@ -146,7 +139,7 @@ public boolean areAllItemsEnabled() {
 
         @Override
         public boolean isEnabled(int i) {
-            return (i == enableMarkdownRow || i == photoResolutionRow || i == useNativeEmojiRow);
+            return (i == enableMarkdownRow || i == photoResolutionRow || i == showAndroidEmojiRow);
         }
 
         @Override
@@ -173,20 +166,9 @@ public boolean hasStableIds() {
         public View getView(int i, View view, ViewGroup viewGroup) {
             int type = getItemViewType(i);
             if (type == 0) {
-                if (view == null) {
-                    view = new SettingsSectionLayout(mContext);
-                }
-                if (i == enableMarkdownRow) {
-                    ((SettingsSectionLayout) view).setText(LocaleController.getString("EnableMarkdown", R.string.EnableMarkdown));
-                } else if (i == photoResolutionRow) {
-                    ((SettingsSectionLayout) view).setText(LocaleController.getString("PhotoResolution", R.string.PhotoResolution));
-                } else if (i == useNativeEmojiRow) {
-                    ((SettingsSectionLayout) view).setText(LocaleController.getString("useAndroidEmoji", R.string.useAndroidEmoji));
-                }
-            } if (type == 1) {
                 if (view == null) {
                     LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-                    view = li.inflate(R.layout.settings_row_check_notify_layout, viewGroup, false);
+                    view = li.inflate(R.layout.settings_row_check_layout, viewGroup, false);
                 }
                 TextView textView = (TextView)view.findViewById(R.id.settings_row_text);
                 View divider = view.findViewById(R.id.settings_row_divider);
@@ -199,33 +181,48 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     textView.setText(LocaleController.getString("EnableMarkdown", R.string.EnableMarkdown));
                     divider.setVisibility(View.VISIBLE);
                     enabled = preferences.getBoolean("view_markdown", false);
-                } else if (i == photoResolutionRow) {
-                    textView.setText(LocaleController.getString("PhotoResolution", R.string.PhotoResolution));
+                } else if (i == showAndroidEmojiRow) {
+                    textView.setText(LocaleController.getString("showAndroidEmoji", R.string.showAndroidEmoji));
                     divider.setVisibility(View.VISIBLE);
-                    enabled = preferences.getBoolean("photoResolution", false);
-                } else if (i == useNativeEmojiRow) {
-                    textView.setText(LocaleController.getString("useAndroidEmoji", R.string.useAndroidEmoji));
-                    divider.setVisibility(View.VISIBLE);
-                    enabled = preferences.getBoolean("useNativeEmoji", false);
+                    enabled = preferences.getBoolean("showAndroidEmoji", false);
                 }
                 if (enabled) {
                     checkButton.setImageResource(R.drawable.btn_check_on);
                 } else {
                     checkButton.setImageResource(R.drawable.btn_check_off);
                 }
+            } else if (type == 1) {
+                if (view == null) {
+                    LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+                    view = li.inflate(R.layout.settings_row_ultra_slider_layout, viewGroup, false);
+                }
+                TextView textView = (TextView)view.findViewById(R.id.settings_row_text);
+                View divider = view.findViewById(R.id.settings_row_divider);
+
+                SeekBar seekBar = (SeekBar)view.findViewById(R.id.settings_row_seekBar);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Ultra", Activity.MODE_PRIVATE);
+
+                if (i == photoResolutionRow) {
+                    int seekPercentage;
+                    textView.setText(LocaleController.getString("PhotoResolution", R.string.PhotoResolution));
+                    divider.setVisibility(View.VISIBLE);
+                    seekPercentage = preferences.getInt("photoResolution", 80);
+                    seekBar.setProgress(seekPercentage);
+                }
             }
             return view;
         }
 
         @Override
         public int getItemViewType(int i) {
-            if (i == 99999999) { //not sure which one
+            if (i == enableMarkdownRow || i == showAndroidEmojiRow ) {
                 return 0;
-            } else if (i == enableMarkdownRow || i == photoResolutionRow || i == useNativeEmojiRow ) {
+            } else if ( i == photoResolutionRow ) {
                 return 1;
             } else {
-                return 2;
+                return 9;
             }
+
         }
 
         @Override
diff --git a/TMessagesProj/src/main/res/layout/settings_row_ultra_slider_layout.xml b/TMessagesProj/src/main/res/layout/settings_row_ultra_slider_layout.xml
new file mode 100644
index 000000000..8c2346655
--- /dev/null
+++ b/TMessagesProj/src/main/res/layout/settings_row_ultra_slider_layout.xml
@@ -0,0 +1,46 @@
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="wrap_content"
+    android:layout_gravity="top"
+    android:orientation="vertical">
+
+    <TextView
+        android:id="@+id/settings_row_text"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="top"
+        android:layout_marginRight="8dp"
+        android:layout_marginTop="10dp"
+        android:gravity="center_vertical"
+        android:paddingLeft="8dp"
+        android:textColor="#333333"
+        android:textSize="18sp" />
+
+    <SeekBar
+        android:id="@+id/settings_row_seekBar"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom"
+        android:max="100"
+        android:progress="80" />
+
+    <TextView
+        android:id="@+id/settings_seek_percent"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="0dp"
+        android:gravity="center_vertical"
+        android:paddingLeft="8dp"
+        android:paddingRight="8dp"
+        android:textColor="#333333"
+        android:textSize="18sp"
+        android:text="percent" />
+
+    <View
+        android:id="@+id/settings_row_divider"
+        android:layout_width="fill_parent"
+        android:layout_height="1px"
+        android:layout_gravity="bottom"
+        android:background="@color/divider" />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index b6909eda0..dfdb6c2c1 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -488,5 +488,5 @@
     <!--UltraFeatures-->
     <string name="UltraFeatures">Ultra Features</string>
     <string name="PhotoResolution">Photo Resolution</string>
-    <string name="useAndroidEmoji">Use Android Emoji</string>
+    <string name="showAndroidEmoji">Show Android Emoji</string>
 </resources>
\ No newline at end of file
