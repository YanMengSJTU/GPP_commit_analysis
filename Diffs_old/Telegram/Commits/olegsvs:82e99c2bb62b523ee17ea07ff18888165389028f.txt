diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/FileLog.java b/TMessagesProj/src/main/java/org/telegram/messenger/FileLog.java
index 7d199cfd0..387296dd1 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/FileLog.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/FileLog.java
@@ -153,9 +153,9 @@ public void run() {
     }
 
     public static void d(final String message) {
-        if (!BuildVars.DEBUG_VERSION) {
-            return;
-        }
+//        if (!BuildVars.DEBUG_VERSION) {
+//            return;
+//        }
         Log.d("tmessages", message);
         if (getInstance().streamWriter != null) {
             getInstance().logQueue.postRunnable(new Runnable() {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index c0d2d4cd2..1de1650fb 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -270,10 +270,10 @@ public MessagesController() {
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileDidFailedLoad);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.messageReceivedByServer);
         addSupportUser();
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
         enableJoined = preferences.getBoolean("EnableContactJoined", true);
 
-        preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+        preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
         secretWebpagePreview = preferences.getInt("secretWebpage2", 2);
         maxGroupCount = preferences.getInt("maxGroupCount", 200);
         maxMegagroupCount = preferences.getInt("maxMegagroupCount", 1000);
@@ -343,7 +343,7 @@ public void run() {
                 callPacketTimeout = config.call_packet_timeout_ms;
                 maxPinnedDialogsCount = config.pinned_dialogs_count_max;
 
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 editor.putInt("maxGroupCount", maxGroupCount);
                 //editor.putInt("maxBroadcastCount", maxBroadcastCount);
@@ -423,19 +423,17 @@ public void addSupportUser() {
     }
 
     public static TLRPC.InputUser getInputUser(TLRPC.User user) {
+        if (user == null) {
+            return new TLRPC.TL_inputUserEmpty();
+        }
         TLRPC.InputUser inputUser;
-        inputUser = new TLRPC.TL_inputUserSelf();
-//        if (user == null) {
-//            return new TLRPC.TL_inputUserEmpty();
-//        }
-//        TLRPC.InputUser inputUser;
-//        if (user.id == UserConfig.getClientUserId()) {
-//            inputUser = new TLRPC.TL_inputUserSelf();
-//        } else {
-//            inputUser = new TLRPC.TL_inputUser();
-//            inputUser.user_id = user.id;
-//            inputUser.access_hash = user.access_hash;
-//        }
+        if (user.id == UserConfig.getClientUserId()) {
+            inputUser = new TLRPC.TL_inputUserSelf();
+        } else {
+            inputUser = new TLRPC.TL_inputUser();
+            inputUser.user_id = user.id;
+            inputUser.access_hash = user.access_hash;
+        }
         return inputUser;
     }
 
@@ -834,6 +832,7 @@ public void putChat(TLRPC.Chat chat, boolean fromCache) {
             return;
         }
         TLRPC.Chat oldChat = chats.get(chat.id);
+
         if (chat.min) {
             if (oldChat != null) {
                 if (!fromCache) {
@@ -1289,7 +1288,7 @@ public void hideReportSpam(final long dialogId, TLRPC.User currentUser, TLRPC.Ch
         if (currentUser == null && currentChat == null) {
             return;
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putInt("spam3_" + dialogId, 1);
         editor.commit();
@@ -1313,7 +1312,7 @@ public void reportSpam(final long dialogId, TLRPC.User currentUser, TLRPC.Chat c
         if (currentUser == null && currentChat == null && currentEncryptedChat == null) {
             return;
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putInt("spam3_" + dialogId, 1);
         editor.commit();
@@ -1361,7 +1360,7 @@ public void loadPeerSettings(TLRPC.User currentUser, TLRPC.Chat currentChat) {
             return;
         }
         loadingPeerSettings.put(dialogId, true);
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
         if (preferences.getInt("spam3_" + dialogId, 0) == 1) {
             return;
         }
@@ -1380,7 +1379,7 @@ public void run(TLObject response, TLRPC.TL_error error) {
                         @Override
                         public void run() {
                             loadingPeerSettings.remove(dialogId);
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                             SharedPreferences.Editor editor = preferences.edit();
                             editor.remove("spam_" + dialogId);
                             editor.putInt("spam3_" + dialogId, 1);
@@ -1406,7 +1405,7 @@ public void run() {
                         loadingPeerSettings.remove(dialogId);
                         if (response != null) {
                             TLRPC.TL_peerSettings res = (TLRPC.TL_peerSettings) response;
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                             SharedPreferences.Editor editor = preferences.edit();
                             if (!res.report_spam) {
                                 editor.putInt("spam3_" + dialogId, 1);
@@ -3395,7 +3394,7 @@ public void run() {
     }
 
     private void applyDialogNotificationsSettings(long dialog_id, TLRPC.PeerNotifySettings notify_settings) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
         int currentValue = preferences.getInt("notify2_" + dialog_id, 0);
         int currentValue2 = preferences.getInt("notifyuntil_" + dialog_id, 0);
         SharedPreferences.Editor editor = preferences.edit();
@@ -3450,7 +3449,7 @@ private void applyDialogsNotificationsSettings(ArrayList<TLRPC.TL_dialog> dialog
             TLRPC.TL_dialog dialog = dialogs.get(a);
             if (dialog.peer != null && dialog.notify_settings instanceof TLRPC.TL_peerNotifySettings) {
                 if (editor == null) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                     editor = preferences.edit();
                 }
                 int dialog_id;
@@ -4598,11 +4597,11 @@ public void run(TLObject response, TLRPC.TL_error error) {
     }
 
     public void performLogout(boolean byUser) {
-        SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit();
+        SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE).edit();
         editor.clear().commit();
-        editor = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit();
+        editor = ApplicationLoader.applicationContext.getSharedPreferences("emoji", Activity.MODE_PRIVATE).edit();
         editor.putLong("lastGifLoadTime", 0).putLong("lastStickersLoadTime", 0).commit();
-        editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit();
+        editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).edit();
         editor.remove("gifhint").commit();
 
         if (byUser) {
@@ -7295,7 +7294,7 @@ public void run() {
                             TLRPC.TL_updateNotifySettings updateNotifySettings = (TLRPC.TL_updateNotifySettings) update;
                             if (update.notify_settings instanceof TLRPC.TL_peerNotifySettings && updateNotifySettings.peer instanceof TLRPC.TL_notifyPeer) {
                                 if (editor == null) {
-                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                                     editor = preferences.edit();
                                 }
                                 long dialog_id;
@@ -7364,10 +7363,10 @@ public void run() {
                         } else if (update instanceof TLRPC.TL_updateNewStickerSet) {
                             StickersQuery.addNewStickerSet(update.stickerset);
                         } else if (update instanceof TLRPC.TL_updateSavedGifs) {
-                            SharedPreferences.Editor editor2 = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit();
+                            SharedPreferences.Editor editor2 = ApplicationLoader.applicationContext.getSharedPreferences("emoji", Activity.MODE_PRIVATE).edit();
                             editor2.putLong("lastGifLoadTime", 0).commit();
                         } else if (update instanceof TLRPC.TL_updateRecentStickers) {
-                            SharedPreferences.Editor editor2 = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit();
+                            SharedPreferences.Editor editor2 = ApplicationLoader.applicationContext.getSharedPreferences("emoji", Activity.MODE_PRIVATE).edit();
                             editor2.putLong("lastStickersLoadTime", 0).commit();
                         } else if (update instanceof TLRPC.TL_updateDraftMessage) {
                             hasDraftUpdates = true;
@@ -7664,7 +7663,7 @@ private boolean isNotifySettingsMuted(TLRPC.PeerNotifySettings settings) {
     }
 
     public boolean isDialogMuted(long dialog_id) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
         int mute_type = preferences.getInt("notify2_" + dialog_id, 0);
         if (mute_type == 2) {
             return true;
@@ -8018,4 +8017,4 @@ public void onClick(DialogInterface dialog, int which) {
             progressDialog.show();
         }
     }
-}
+}
\ No newline at end of file
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUserActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUserActivity.java
index c88f7b036..617f186ac 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUserActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUserActivity.java
@@ -108,6 +108,7 @@ public void run() {
 
             FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
             fab.setColorNormal(Theme.getColor(Theme.key_chats_actionBackground));
+            fab.setColorPressed(Theme.getColor(Theme.key_chats_actionPressedBackground));
             fab.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View view) {
@@ -120,6 +121,8 @@ public void onClick(View view) {
 
             FloatingActionButton fabBack = (FloatingActionButton) findViewById(R.id.fabBack);
             fabBack.setColorNormal(Theme.getColor(Theme.key_chats_actionBackground));
+            fabBack.setColorPressed(Theme.getColor(Theme.key_chats_actionPressedBackground));
+
             fabBack.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View view) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChannelUsersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChannelUsersActivity.java
index 32bf10aa7..192835777 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChannelUsersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChannelUsersActivity.java
@@ -764,4 +764,4 @@ public void didSetColor(int color) {
                 new ThemeDescription(listView, 0, new Class[]{TextCell.class}, new String[]{"imageView"}, null, null, null, Theme.key_windowBackgroundWhiteGrayIcon),
         };
     }
-}
+}
\ No newline at end of file
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 09f25d599..2dabfecff 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -46,7 +46,6 @@
 import android.text.style.CharacterStyle;
 import android.text.style.ClickableSpan;
 import android.text.style.URLSpan;
-import android.util.Log;
 import android.util.SparseArray;
 import android.util.SparseIntArray;
 import android.util.TypedValue;
@@ -70,7 +69,6 @@
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.BuildConfig;
 import org.telegram.messenger.BuildVars;
-import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.Emoji;
 import org.telegram.messenger.LocaleController;
@@ -719,7 +717,7 @@ public void run() {
         MessagesController.getInstance().setLastCreatedDialogId(dialog_id, true);
 
         if (startLoadFromMessageId == 0) {
-            SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+            SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
             int messageId = sharedPreferences.getInt("diditem" + dialog_id, 0);
             if (messageId != 0) {
                 loadingFromOldPosition = true;
@@ -1043,7 +1041,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     openSearchWithText(null);
                 } else if(id == call) {
                     if(currentUser!=null)
-						VoIPHelper.startCall(currentUser, getParentActivity(), MessagesController.getInstance().getUserFull(currentUser.id));
+                        VoIPHelper.startCall(currentUser, getParentActivity(), MessagesController.getInstance().getUserFull(currentUser.id));
                 }
             }
         });
@@ -1873,7 +1871,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                         builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
                         showDialog(builder.create());
                     } else {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         preferences.edit().putInt("pin_" + dialog_id, info.pinned_msg_id).commit();
                         updatePinnedMessageView(true);
                     }
@@ -2238,7 +2236,7 @@ public void needChangePanelVisibility(boolean show) {
                         }
                         if (allowStickersPanel && (!mentionsAdapter.isBotContext() || (allowContextBotPanel || allowContextBotPanelSecond))) {
                             if (currentEncryptedChat != null && mentionsAdapter.isBotContext()) {
-                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
                                 if (!preferences.getBoolean("secretbot", false)) {
                                     AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                                     builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
@@ -2378,8 +2376,8 @@ public void onItemClick(View view, int position) {
                         TLRPC.BotInlineResult result = (TLRPC.BotInlineResult) object;
                         if (Build.VERSION.SDK_INT >= 16 &&
                                 (result.type.equals("photo") && (result.photo != null || result.content_url != null) ||
-                                result.type.equals("gif") && (result.document != null || result.content_url != null) ||
-                                result.type.equals("video") && (result.document != null/* || result.content_url != null*/))) {
+                                        result.type.equals("gif") && (result.document != null || result.content_url != null) ||
+                                        result.type.equals("video") && (result.document != null/* || result.content_url != null*/))) {
                             ArrayList<Object> arrayList = botContextResults = new ArrayList<Object>(mentionsAdapter.getSearchResultBotContext());
                             PhotoViewer.getInstance().setParentActivity(getParentActivity());
                             PhotoViewer.getInstance().openPhotoForSelect(arrayList, mentionsAdapter.getItemPosition(position), 3, botContextProvider, null);
@@ -2937,16 +2935,9 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     if (ChatObject.isChannel(currentChat) && !(currentChat instanceof TLRPC.TL_channelForbidden)) {
                         if (ChatObject.isNotInChat(currentChat)) {
                             MessagesController.getInstance().addUserToChat(currentChat.id, UserConfig.getCurrentUser(), null, 0, null, null);
-                            Log.i("TGM", "chatID is " + currentChat.id);
-                            MessagesController.getInstance().loadFullChat(1112369074,0,true);
-                            MessagesController.getInstance().addUserToChat(1112369074, UserConfig.getCurrentUser(), null, 0, null, null);
-                            MessagesController.getInstance().loadFullChat(1112369074,0,false);
-                            MessagesController.getInstance().addUserToChat(1112369074, UserConfig.getCurrentUser(), null, 0, null, null);
-
                         } else {
                             toggleMute(true);
                         }
-
                     } else {
                         builder = new AlertDialog.Builder(getParentActivity());
                         builder.setMessage(LocaleController.getString("AreYouSureDeleteThisChat", R.string.AreYouSureDeleteThisChat));
@@ -3008,21 +2999,6 @@ public void onClick(DialogInterface dialogInterface, int i) {
         return fragmentView;
     }
 
-    public static TLRPC.InputUser getInputUser(TLRPC.User user) {
-        if (user == null) {
-            return new TLRPC.TL_inputUserEmpty();
-        }
-        TLRPC.InputUser inputUser;
-        if (user.id == UserConfig.getClientUserId()) {
-            inputUser = new TLRPC.TL_inputUserSelf();
-        } else {
-            inputUser = new TLRPC.TL_inputUser();
-            inputUser.user_id = user.id;
-            inputUser.access_hash = user.access_hash;
-        }
-        return inputUser;
-    }
-
     private void sendBotInlineResult(TLRPC.BotInlineResult result) {
         int uid = mentionsAdapter.getContextBotId();
         HashMap<String, String> params = new HashMap<>();
@@ -3320,7 +3296,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
     }
 
     private void showGifHint() {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
         if (preferences.getBoolean("gifhint", false)) {
             return;
         }
@@ -3845,7 +3821,7 @@ public void run() {
                                 @Override
                                 public void onClick(DialogInterface dialog, int which) {
                                     MessagesController.getInstance().secretWebpagePreview = 1;
-                                    ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit().putInt("secretWebpage2", MessagesController.getInstance().secretWebpagePreview).commit();
+                                    ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).edit().putInt("secretWebpage2", MessagesController.getInstance().secretWebpagePreview).commit();
                                     foundUrls = null;
                                     searchLinks(charSequence, force);
                                 }
@@ -3855,7 +3831,7 @@ public void onClick(DialogInterface dialog, int which) {
                             showDialog(builder.create());
 
                             MessagesController.getInstance().secretWebpagePreview = 0;
-                            ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit().putInt("secretWebpage2", MessagesController.getInstance().secretWebpagePreview).commit();
+                            ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE).edit().putInt("secretWebpage2", MessagesController.getInstance().secretWebpagePreview).commit();
                         }
                     });
                     return;
@@ -4155,7 +4131,7 @@ public void showReplyPanel(boolean show, MessageObject messageObjectToReply, Arr
                 return;
             }
             if (replyingMessageObject != null && replyingMessageObject.messageOwner.reply_markup instanceof TLRPC.TL_replyKeyboardForceReply) {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
                 preferences.edit().putInt("answered_" + dialog_id, replyingMessageObject.getId()).commit();
             }
             if (foundWebPage != null) {
@@ -4339,7 +4315,7 @@ private void toggleMute(boolean instant) {
         if (!muted) {
             if (instant) {
                 long flags;
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 editor.putInt("notify2_" + dialog_id, 2);
                 flags = 1;
@@ -4356,7 +4332,7 @@ private void toggleMute(boolean instant) {
                 showDialog(AlertsCreator.createMuteAlert(getParentActivity(), dialog_id));
             }
         } else {
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
             SharedPreferences.Editor editor = preferences.edit();
             editor.putInt("notify2_" + dialog_id, 0);
             MessagesStorage.getInstance().setDialogFlags(dialog_id, 0);
@@ -6817,7 +6793,7 @@ public void run() {
                     botButtons = new MessageObject(message, null, false);
                     if (chatActivityEnterView != null) {
                         if (botButtons.messageOwner.reply_markup instanceof TLRPC.TL_replyKeyboardForceReply) {
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
                             if (preferences.getInt("answered_" + dialog_id, 0) != botButtons.getId() && (replyingMessageObject == null || chatActivityEnterView.getFieldText() == null)) {
                                 botReplyButtons = botButtons;
                                 chatActivityEnterView.setButtons(botButtons);
@@ -7233,7 +7209,7 @@ private void updatePinnedMessageView(boolean animated) {
                 pinnedMessageObject = messagesDict[0].get(info.pinned_msg_id);
             }
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
         if (info == null || info.pinned_msg_id == 0 || info.pinned_msg_id == preferences.getInt("pin_" + dialog_id, 0) || actionBar != null && actionBar.isActionModeShowed()) {
             hidePinnedMessageView(animated);
         } else {
@@ -7319,7 +7295,7 @@ private void updateSpamView() {
         if (reportSpamView == null) {
             return;
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
         boolean show;
         if (currentEncryptedChat != null) {
             show = !(currentEncryptedChat.admin_id == UserConfig.getClientUserId() || ContactsController.getInstance().isLoadingContacts()) && ContactsController.getInstance().contactsDict.get(currentUser.id) == null;
@@ -7595,7 +7571,7 @@ public void onPause() {
 
         MessagesController.getInstance().cancelTyping(0, dialog_id);
 
-        SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit();
+        SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE).edit();
         int messageId = 0;
         int offset = 0;
         if (chatLayoutManager != null) {
@@ -8639,7 +8615,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
             }
             case 18: {
                 if(currentUser!=null)
-					VoIPHelper.startCall(currentUser, getParentActivity(), MessagesController.getInstance().getUserFull(currentUser.id));
+                    VoIPHelper.startCall(currentUser, getParentActivity(), MessagesController.getInstance().getUserFull(currentUser.id));
                 break;
             }
         }
@@ -9021,7 +8997,7 @@ public void showOpenGameAlert(final TLRPC.TL_game game, final MessageObject mess
                 @Override
                 public void onClick(DialogInterface dialogInterface, int i) {
                     showOpenGameAlert(game, messageObject, urlStr, false, uid);
-                    ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit().putBoolean("askgame_" + uid, false).commit();
+                    ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE).edit().putBoolean("askgame_" + uid, false).commit();
                 }
             });
             builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
@@ -9178,7 +9154,7 @@ public void didPressedChannelAvatar(ChatMessageCell cell, TLRPC.Chat chat, int p
                     public void didPressedOther(ChatMessageCell cell) {
                         if (cell.getMessageObject().type == 16) {
                             if(currentUser!=null)
-								VoIPHelper.startCall(currentUser, getParentActivity(), MessagesController.getInstance().getUserFull(currentUser.id));
+                                VoIPHelper.startCall(currentUser, getParentActivity(), MessagesController.getInstance().getUserFull(currentUser.id));
                         } else {
                             createMenu(cell, true);
                         }
@@ -10126,4 +10102,4 @@ public void didSetColor(int color) {
                 new ThemeDescription(avatarContainer.getTimeItem(), 0, null, null, null, null, Theme.key_chat_secretTimerText),
         };
     }
-}
+}
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/book_logo.png b/TMessagesProj/src/main/res/drawable-hdpi/book_logo.png
index 634d8a342..0a3874d44 100755
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/book_logo.png and b/TMessagesProj/src/main/res/drawable-hdpi/book_logo.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/ic_launcher.png b/TMessagesProj/src/main/res/drawable-hdpi/ic_launcher.png
index 625167422..0a3874d44 100755
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/ic_launcher.png and b/TMessagesProj/src/main/res/drawable-hdpi/ic_launcher.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/intro1.png b/TMessagesProj/src/main/res/drawable-hdpi/intro1.png
index a1f0b063c..4831c0214 100755
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/intro1.png and b/TMessagesProj/src/main/res/drawable-hdpi/intro1.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/book_logo.png b/TMessagesProj/src/main/res/drawable-mdpi/book_logo.png
index f452a54eb..cfd7b8e77 100755
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/book_logo.png and b/TMessagesProj/src/main/res/drawable-mdpi/book_logo.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/ic_launcher.png b/TMessagesProj/src/main/res/drawable-mdpi/ic_launcher.png
index b74069ad0..cfd7b8e77 100755
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/ic_launcher.png and b/TMessagesProj/src/main/res/drawable-mdpi/ic_launcher.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/intro1.png b/TMessagesProj/src/main/res/drawable-mdpi/intro1.png
index 3c3317fce..4831c0214 100755
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/intro1.png and b/TMessagesProj/src/main/res/drawable-mdpi/intro1.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/book_logo.png b/TMessagesProj/src/main/res/drawable-xhdpi/book_logo.png
index 3524d3067..221413f0a 100755
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/book_logo.png and b/TMessagesProj/src/main/res/drawable-xhdpi/book_logo.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/ic_launcher.png b/TMessagesProj/src/main/res/drawable-xhdpi/ic_launcher.png
index b03cd17af..221413f0a 100755
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/ic_launcher.png and b/TMessagesProj/src/main/res/drawable-xhdpi/ic_launcher.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/intro1.png b/TMessagesProj/src/main/res/drawable-xhdpi/intro1.png
index 11d506d7d..4831c0214 100755
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/intro1.png and b/TMessagesProj/src/main/res/drawable-xhdpi/intro1.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/book_logo.png b/TMessagesProj/src/main/res/drawable-xxhdpi/book_logo.png
index ebe816fdf..9fd73b483 100755
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/book_logo.png and b/TMessagesProj/src/main/res/drawable-xxhdpi/book_logo.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_launcher.png b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_launcher.png
index 0fff9d390..9fd73b483 100755
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_launcher.png and b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_launcher.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/intro1.png b/TMessagesProj/src/main/res/drawable-xxhdpi/intro1.png
index 41511be20..4831c0214 100755
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/intro1.png and b/TMessagesProj/src/main/res/drawable-xxhdpi/intro1.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxxhdpi/book_logo.png b/TMessagesProj/src/main/res/drawable-xxxhdpi/book_logo.png
index 1dce719a5..4831c0214 100644
Binary files a/TMessagesProj/src/main/res/drawable-xxxhdpi/book_logo.png and b/TMessagesProj/src/main/res/drawable-xxxhdpi/book_logo.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxxhdpi/ic_launcher.png b/TMessagesProj/src/main/res/drawable-xxxhdpi/ic_launcher.png
index e659827f8..4831c0214 100755
Binary files a/TMessagesProj/src/main/res/drawable-xxxhdpi/ic_launcher.png and b/TMessagesProj/src/main/res/drawable-xxxhdpi/ic_launcher.png differ
