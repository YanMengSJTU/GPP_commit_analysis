diff --git a/TMessagesProj/src/main/java/BotchaHelper/Helpers.java b/TMessagesProj/src/main/java/BotchaHelper/Helpers.java
index 99b636d73..bfc169b22 100644
--- a/TMessagesProj/src/main/java/BotchaHelper/Helpers.java
+++ b/TMessagesProj/src/main/java/BotchaHelper/Helpers.java
@@ -1,6 +1,5 @@
 package BotchaHelper;
 
-import android.app.Activity;
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.os.AsyncTask;
@@ -12,9 +11,7 @@
 
 import java.util.ArrayList;
 import java.util.List;
-import java.util.Objects;
 
-import DataSchema.Greeting;
 import DataSchema.Response;
 
 /**
@@ -34,37 +31,6 @@ public static void registerToChannel(int userID, int channelID) {
         new HttpRequestTask().execute(url);
     }
 
-    private static class HttpRequestTask extends AsyncTask<Void, Void, Response> {
-        String urlToCall = "http://rest-service.guides.spring.io/greeting";
-        @Override
-        protected Response doInBackground(Void... params) {
-            try {
-                //final String url2 = "http://rest-service.guides.spring.io/greeting";
-                //final String url = "http://botchaapis.appspot.com/sendmessage?channelId=192493113:AAEd8UGh8sum7P02Np39m2cGhuFRyT7xkj4&userId=113462548&message=dffd";
-                RestTemplate restTemplate = new RestTemplate();
-                restTemplate.getMessageConverters().add(new MappingJackson2HttpMessageConverter());
-                Log.i("Botcha urltocall", urlToCall);
-                return restTemplate.getForObject(urlToCall, Response.class);
-            } catch (Exception e) {
-                Log.e("MainActivity", e.getMessage(), e);
-            }
-
-            return null;
-        }
-
-        @Override
-        protected void onPostExecute(Response greeting) {
-            //Log.i("botcha boolean response", Boolean.toString(greeting.ok));
-            Log.i("botcha executed url", urlToCall);
-            //Log.i("botcha", String.format("value of greeting content: %s", greeting.getContent()));
-        }
-
-        public void execute(String url) {
-            this.urlToCall = url;
-            this.execute();
-        }
-    }
-
     private static String giveChannelWithToken(long id) {
         return Long.toString(id);
         /*if (id == 135483832) {
@@ -86,14 +52,14 @@ public static boolean isChannelAllowed(long id) {
         List<Long> allowedIDs = getAllowedIDs();
         boolean flag1 = false;
         boolean flag2 = false;
-        for(int i = 0; i <allowedIDs.size(); i++) {
+        for (int i = 0; i < allowedIDs.size(); i++) {
             if (id == allowedIDs.get(i)) {
                 flag1 = true;
             }
         }
 
         List<Long> allowedIDs2 = getAllowedIDsGeoSpatial();
-        for(int i = 0; i <allowedIDs2.size(); i++) {
+        for (int i = 0; i < allowedIDs2.size(); i++) {
             if (id == allowedIDs2.get(i)) {
                 flag2 = true;
             }
@@ -125,8 +91,8 @@ public static boolean isChannelRegistered(long channelID) {
         SharedPreferences sharedPref = ApplicationLoader.applicationContext.getSharedPreferences("Notifications",(Context.MODE_PRIVATE));
         String ids = sharedPref.getString("registeredIDs", "");
         if(ids.equals("")) {
-            saveToRegisteredChannels(135483832L);
-            saveToRegisteredChannels(171135579L);
+            //saveToRegisteredChannels(135483832L);
+            //saveToRegisteredChannels(171135579L);
         }
         ids = sharedPref.getString("registeredIDs", "");
         String array[] = ids.split(",");
@@ -138,22 +104,22 @@ public static boolean isChannelRegistered(long channelID) {
         return returnList;
     }
 
-
     public static List<Long> getAllowedIDsGeoSpatial() {
         List<Long> returnList = new ArrayList<Long>();
         SharedPreferences sharedPref = ApplicationLoader.applicationContext.getSharedPreferences("Notifications",(Context.MODE_PRIVATE));
         String ids = sharedPref.getString("geoAllowed2", "");
-        if(ids.equals("")) {
-            List<Long> tempList = new ArrayList<Long>();
-            tempList.add(135483832L);
-            tempList.add(171135579L);
-            tempList.add(149007104L);
-            tempList.add(192493113L);
-            tempList.add(175641240L);
-            updateGeoAllowedChannels(tempList);
-        }
-        ids = sharedPref.getString("geoAllowed2", "");
+        if (ids.equals("")) return returnList;
+//            List<Long> tempList = new ArrayList<Long>();
+////            tempList.add(135483832L);
+////            tempList.add(171135579L);
+////            tempList.add(149007104L);
+////            tempList.add(192493113L);
+////            tempList.add(175641240L);
+//            updateGeoAllowedChannels(tempList);
+//        }
+//        ids = sharedPref.getString("geoAllowed2", "");
         Log.i("Botcha debug second", ids);
+
         String array[] = ids.split(",");
         for (String anArray : array) {
             if (!anArray.equals("")) {
@@ -163,7 +129,6 @@ public static boolean isChannelRegistered(long channelID) {
         return returnList;
     }
 
-
     public static void saveToRegisteredChannels(long id) {
         SharedPreferences sharedPref = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", (Context.MODE_PRIVATE));
         String ids = sharedPref.getString("registeredIDs", "");
@@ -193,8 +158,40 @@ public static void updateGeoAllowedChannels(List<Long> ids) {
         for (int i= 0; i< ids.size(); i++) {
             result = result + ids.get(i).toString() + ",";
         }
-        editor.putString("geoAllowed2",result);
+        editor.putString("geoAllowed2", result);
         Log.i("Botcha debug", result);
         editor.commit();
     }
+
+    private static class HttpRequestTask extends AsyncTask<Void, Void, Response> {
+        String urlToCall = "http://rest-service.guides.spring.io/greeting";
+
+        @Override
+        protected Response doInBackground(Void... params) {
+            try {
+                //final String url2 = "http://rest-service.guides.spring.io/greeting";
+                //final String url = "http://botchaapis.appspot.com/sendmessage?channelId=192493113:AAEd8UGh8sum7P02Np39m2cGhuFRyT7xkj4&userId=113462548&message=dffd";
+                RestTemplate restTemplate = new RestTemplate();
+                restTemplate.getMessageConverters().add(new MappingJackson2HttpMessageConverter());
+                Log.i("Botcha urltocall", urlToCall);
+                return restTemplate.getForObject(urlToCall, Response.class);
+            } catch (Exception e) {
+                Log.e("MainActivity", e.getMessage(), e);
+            }
+
+            return null;
+        }
+
+        @Override
+        protected void onPostExecute(Response greeting) {
+            //Log.i("botcha boolean response", Boolean.toString(greeting.ok));
+            Log.i("botcha executed url", urlToCall);
+            //Log.i("botcha", String.format("value of greeting content: %s", greeting.getContent()));
+        }
+
+        public void execute(String url) {
+            this.urlToCall = url;
+            this.execute();
+        }
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index b7b0031d7..365caca35 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -80,6 +80,7 @@
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.util.ArrayList;
+import java.util.List;
 import java.util.Map;
 
 import BotchaHelper.Helpers;
@@ -498,6 +499,11 @@ public void createChannelDialog() {
                     mSelectedItems.add(i);
                 }
             }
+            List<Long> tempList = new ArrayList<Long>();//(channelIds.length);
+            for (int i = 0; i < channelIds.length; i++) {
+                tempList.add(channelIds[i]);
+            }
+            Helpers.updateGeoAllowedChannels(tempList);
             // Set the dialog title
             builder.setTitle("Channels Available")
                     // Specify the list array, the items to be selected by default (null for none),
@@ -533,7 +539,6 @@ public void onClick(DialogInterface dialog, int id) {
                                 }
                             }
                             Intent intent = new Intent(ApplicationLoader.applicationContext, LaunchActivity.class);
-                            ;
                             intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
                             finish();
                             startActivity(intent);
