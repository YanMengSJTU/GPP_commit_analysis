diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index e69d9a8e8..17f634c52 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -77,7 +77,7 @@ android {
         abortOnError false
     }
     defaultConfig {
-        minSdkVersion 8
+        minSdkVersion 11
         targetSdkVersion 19
         versionCode 4
         versionName '1.1'
diff --git a/TMessagesProj/src/main/java/com/teamjihu/DownloadZzalTask.java b/TMessagesProj/src/main/java/com/teamjihu/DownloadZzalTask.java
index 0ec18ba87..5411f3efb 100644
--- a/TMessagesProj/src/main/java/com/teamjihu/DownloadZzalTask.java
+++ b/TMessagesProj/src/main/java/com/teamjihu/DownloadZzalTask.java
@@ -1,12 +1,9 @@
 package com.teamjihu;
 
-import android.app.ProgressDialog;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.os.AsyncTask;
-import android.util.Log;
 import android.webkit.MimeTypeMap;
-import android.widget.ImageView;
 import android.widget.Toast;
 
 import org.apache.http.HttpEntity;
@@ -19,12 +16,10 @@
 import org.apache.http.impl.client.DefaultHttpClient;
 import org.apache.http.message.BasicNameValuePair;
 import org.apache.http.protocol.HTTP;
-import org.apache.http.util.EntityUtils;
 import org.telegram.ui.ChatActivity;
 
 import java.io.File;
 import java.io.FileOutputStream;
-import java.io.FilenameFilter;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
diff --git a/TMessagesProj/src/main/java/com/teamjihu/S3Util.java b/TMessagesProj/src/main/java/com/teamjihu/S3Util.java
new file mode 100644
index 000000000..b9e30ec13
--- /dev/null
+++ b/TMessagesProj/src/main/java/com/teamjihu/S3Util.java
@@ -0,0 +1,373 @@
+package com.teamjihu;
+
+import android.animation.ValueAnimator;
+import android.app.Activity;
+import android.app.ProgressDialog;
+import android.content.Context;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.graphics.Color;
+import android.net.Uri;
+import android.os.Bundle;
+import android.os.SystemClock;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.inputmethod.InputMethodManager;
+import android.widget.EditText;
+import android.widget.TextView;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.text.DecimalFormat;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+import java.util.Date;
+import java.util.Iterator;
+
+public class S3Util {
+	
+
+	static ProgressDialog searchProgressDialog = null;
+	public static void ShowProgressDialog(Context context, int progressDialogResId, boolean bShow) {
+		if(bShow) {
+			if(searchProgressDialog != null) {
+				searchProgressDialog.dismiss();
+				searchProgressDialog = null;
+			}
+			searchProgressDialog = new ProgressDialog(context);
+			searchProgressDialog.setCancelable(false);
+			searchProgressDialog.show();
+			searchProgressDialog.setContentView(progressDialogResId);
+		} else {
+			if(searchProgressDialog != null) {
+				searchProgressDialog.dismiss();
+				searchProgressDialog = null;
+			}
+		}
+	}
+	
+	public static Bundle JSONObjectToBundle(JSONObject obj) {
+		Bundle b = new Bundle();
+		Iterator<String> iter = obj.keys();
+	    while (iter.hasNext()) {
+	        String key = iter.next();
+	        try {
+	            Object v= obj.get(key);
+	            if(v instanceof Integer) {
+	            	b.putInt(key, (Integer)v);
+	            } else if(v instanceof Boolean) {
+	            	b.putBoolean(key, (Boolean)v);
+	            } else if(v instanceof String) {
+	            	b.putString(key, (String)v);
+	            }
+	        } catch (JSONException e) {
+	        }
+	    }
+		return b;
+	}
+	
+	public static float px2dp(Context context, float px) {
+		float density = context.getResources().getDisplayMetrics().density;
+		return px / density;
+	}
+	public static float dp2px(Context context, float dp) {
+		float density = context.getResources().getDisplayMetrics().density;
+		return dp * density;
+	}
+	public static void setViewWidthHeight(View v, int width, int height) {
+		ViewGroup.LayoutParams lParam = v.getLayoutParams();
+		lParam.height = height;
+		lParam.width = width;
+	}
+	public static void setViewWidth(View v, int width) {
+        v.getLayoutParams().width = width;
+	}
+	public static void setViewHeight(View v, int height) {
+        v.getLayoutParams().height = height;
+	}
+	
+	public static void setTextViewAlpha(TextView v, int alpha) {
+		int color = v.getCurrentTextColor();
+		int newColor = Color.argb(alpha, Color.red(color), Color.green(color), Color.blue(color));
+		v.setTextColor(newColor);
+	}
+	
+	public static void setViewMarginLeft(View v, int left, boolean requestLayout) {
+		ViewGroup.MarginLayoutParams lParam = (ViewGroup.MarginLayoutParams)v.getLayoutParams();
+		lParam.leftMargin = left;
+		if(requestLayout)
+			v.requestLayout();
+	}
+	public static int getViewMarginLeft(View v) {
+		return ((ViewGroup.MarginLayoutParams)v.getLayoutParams()).leftMargin;
+	}
+	public static int getViewMarginRight(View v) {
+		ViewGroup.MarginLayoutParams lParam = (ViewGroup.MarginLayoutParams)v.getLayoutParams();
+		return lParam.rightMargin;
+	}
+	public static int getViewMarginBottom(View v) {
+		ViewGroup.MarginLayoutParams lParam = (ViewGroup.MarginLayoutParams)v.getLayoutParams();
+		return lParam.bottomMargin;
+	}
+	public static void setViewMarginRight(View v, int right, boolean requestLayout) {
+		ViewGroup.MarginLayoutParams lParam = (ViewGroup.MarginLayoutParams)v.getLayoutParams();
+		lParam.rightMargin = right;
+		if(requestLayout)
+			v.requestLayout();
+	}
+	public static void setViewMarginTop(View v, int top, boolean requestLayout) {
+		ViewGroup.MarginLayoutParams lParam = (ViewGroup.MarginLayoutParams)v.getLayoutParams();
+		lParam.topMargin = top;
+		if(requestLayout)
+			v.requestLayout();
+	}
+	public static void setViewMarginBottom(View v, int bottom, boolean requestLayout) {
+		ViewGroup.MarginLayoutParams lParam = (ViewGroup.MarginLayoutParams)v.getLayoutParams();
+		lParam.bottomMargin = bottom;
+		if(requestLayout)
+			v.requestLayout();
+	}
+	public static ValueAnimator startValueAnimator(int from, int to, ValueAnimator.AnimatorUpdateListener updateListener, ValueAnimator.AnimatorListener animatorListener, int duration) {
+		ValueAnimator ani = ValueAnimator.ofInt(from, to);
+		if(updateListener != null)
+			ani.addUpdateListener(updateListener);
+		if(animatorListener != null)
+			ani.addListener(animatorListener);
+		ani.setDuration(duration);
+		ani.start();	
+		return ani;
+	}
+	public static void swipeView(final View v, int toMarginLeft, ValueAnimator.AnimatorListener animatorListener) {
+		final ViewGroup.MarginLayoutParams lParam = (ViewGroup.MarginLayoutParams)v.getLayoutParams();
+		ValueAnimator ani = ValueAnimator.ofInt(lParam.leftMargin, toMarginLeft);
+		ani.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+			@Override
+			public void onAnimationUpdate(ValueAnimator animation) {
+				int toValue = (Integer) animation.getAnimatedValue();
+				lParam.leftMargin = toValue;
+				v.requestLayout();
+			}
+		});
+		if(animatorListener != null)
+			ani.addListener(animatorListener);
+		ani.setDuration(300);
+		ani.start();
+	}
+	
+	public static void swipeView(final View v, int toMarginLeft, ValueAnimator.AnimatorListener animatorListener, int duration) {
+		final ViewGroup.MarginLayoutParams lParam = (ViewGroup.MarginLayoutParams)v.getLayoutParams();
+		ValueAnimator ani = ValueAnimator.ofInt(lParam.leftMargin, toMarginLeft);
+		ani.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+			@Override
+			public void onAnimationUpdate(ValueAnimator animation) {
+				int toValue = (Integer) animation.getAnimatedValue();
+				lParam.leftMargin = toValue;
+				v.requestLayout();
+			}
+		});
+		if(animatorListener != null)
+			ani.addListener(animatorListener);
+		ani.setDuration(duration);
+		ani.start();
+	}
+	public static void swipeUpView(final View v, int toMarginBottom, ValueAnimator.AnimatorListener animatorListener) {
+		final ViewGroup.MarginLayoutParams lParam = (ViewGroup.MarginLayoutParams)v.getLayoutParams();
+		ValueAnimator ani = ValueAnimator.ofInt(lParam.bottomMargin, toMarginBottom);
+		ani.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+			@Override
+			public void onAnimationUpdate(ValueAnimator animation) {
+				int toValue = (Integer) animation.getAnimatedValue();
+				lParam.bottomMargin = toValue;
+				v.requestLayout();
+			}
+		});
+		if(animatorListener != null)
+			ani.addListener(animatorListener);
+		ani.setDuration(300);
+		ani.start();
+	}
+	public static void swipeDownView(final View v, int toMarginBottom, ValueAnimator.AnimatorListener animatorListener) {
+		final ViewGroup.MarginLayoutParams lParam = (ViewGroup.MarginLayoutParams)v.getLayoutParams();
+		ValueAnimator ani = ValueAnimator.ofInt(lParam.topMargin, toMarginBottom);
+		ani.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+			@Override
+			public void onAnimationUpdate(ValueAnimator animation) {
+				int toValue = (Integer) animation.getAnimatedValue();
+				lParam.topMargin = toValue;
+				v.requestLayout();
+			}
+		});
+		if(animatorListener != null)
+			ani.addListener(animatorListener);
+		ani.setDuration(300);
+		ani.start();
+	}
+	public static void de_collapseHeight(final View v, int toHeight, int duration, ValueAnimator.AnimatorListener animatorListener) {
+		final ViewGroup.LayoutParams lParam = v.getLayoutParams();
+
+		ValueAnimator ani = ValueAnimator.ofInt(0, toHeight);
+		ani.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+			@Override
+			public void onAnimationUpdate(ValueAnimator animation) {
+				int toValue = (Integer) animation.getAnimatedValue();
+				lParam.height = toValue;
+				v.requestLayout();
+			}
+		});
+		if(animatorListener != null)
+			ani.addListener(animatorListener);
+		ani.setDuration(duration);
+		ani.start();
+	}
+	public static void collapseHeight(final View v, int duration, ValueAnimator.AnimatorListener animatorListener) {
+		int curHeight = v.getHeight();
+		
+		final ViewGroup.LayoutParams lParam = v.getLayoutParams();
+
+		ValueAnimator ani = ValueAnimator.ofInt(curHeight, 0);
+		ani.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+			@Override
+			public void onAnimationUpdate(ValueAnimator animation) {
+				int toValue = (Integer) animation.getAnimatedValue();
+				lParam.height = toValue;
+				v.requestLayout();
+			}
+		});
+		if(animatorListener != null)
+			ani.addListener(animatorListener);
+		ani.setDuration(duration);
+		ani.start();
+	}
+	public static void collapseWidth(final View v, int duration, ValueAnimator.AnimatorListener animatorListener) {
+		int curWidth = v.getWidth();
+		
+		final ViewGroup.LayoutParams lParam = v.getLayoutParams();
+
+		ValueAnimator ani = ValueAnimator.ofInt(curWidth, 0);
+		ani.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+			@Override
+			public void onAnimationUpdate(ValueAnimator animation) {
+				int toValue = (Integer) animation.getAnimatedValue();
+				lParam.width = toValue;
+				v.requestLayout();
+			}
+		});
+		if(animatorListener != null)
+			ani.addListener(animatorListener);
+		ani.setDuration(duration);
+		ani.start();
+	}
+	
+	public static String toCommaNumber(int number) {
+		return (new DecimalFormat("#,###,###,###")).format(number);
+	}
+	
+	public static byte[] loadFile(File file) throws IOException {
+	    InputStream is = new FileInputStream(file);
+ 
+	    long length = file.length();
+	    if (length > Integer.MAX_VALUE) {
+	        // File is too large
+	    }
+	    byte[] bytes = new byte[(int)length];
+	    
+	    int offset = 0;
+	    int numRead = 0;
+	    while (offset < bytes.length && (numRead=is.read(bytes, offset, bytes.length-offset)) >= 0) {
+	        offset += numRead;
+	    }
+ 
+	    if (offset < bytes.length) {
+	        throw new IOException("Could not completely read file "+file.getName());
+	    }
+ 
+	    is.close();
+	    return bytes;
+	}
+	
+	public static void sharePhoto(Context context, String filePath, String text) {
+		Uri photoUri = Uri.parse(filePath);
+		
+		Intent i = new Intent(Intent.ACTION_SEND);
+		i.setType("image/*");
+		i.putExtra(Intent.EXTRA_STREAM, photoUri);
+		i.putExtra(Intent.EXTRA_TEXT, text);
+//		i.putExtra(Intent.EXTRA_TITLE, text);
+//		i.putExtra(Intent.EXTRA_SUBJECT, text);
+		context.startActivity(Intent.createChooser(i, "Share Image"));		
+	}
+	
+	public static void shareToEmail(Context context, String filePath, String text) {
+		Uri photoUri = Uri.parse(filePath);
+
+		Intent emailIntent = new Intent(Intent.ACTION_SENDTO, Uri.fromParts("mailto","", null));
+		//emailIntent.setType("image/*");
+		emailIntent.putExtra(Intent.EXTRA_STREAM, photoUri);
+        emailIntent.putExtra(Intent.EXTRA_TEXT, text);
+        emailIntent.putExtra(Intent.EXTRA_SUBJECT, text);
+        context.startActivity(Intent.createChooser(emailIntent, "Send email"));
+	}
+	
+	public static void HideKeyboard(Activity context) {
+		InputMethodManager inputManager = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);
+	    View v=context.getCurrentFocus();
+	    if(v == null)
+	        return;
+	    inputManager.hideSoftInputFromWindow(v.getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);
+	}
+	
+	public static void ShowKeyboard(final EditText editText) {
+		editText.postDelayed(new Runnable() {
+            public void run() {
+            	editText.dispatchTouchEvent(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN , 0, 0, 0));
+            	editText.dispatchTouchEvent(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_UP , 0, 0, 0));                       
+            }
+        }, 200);	
+	}
+	
+	public static String toReadableDate(Calendar c, String format) {
+		Date d = new Date(c.getTimeInMillis());
+		return toReadableDate(d, format);
+	}
+	
+	public static String toReadableDate(Date d, String format) {
+        SimpleDateFormat df = new SimpleDateFormat(format);
+		String formattedDate = df.format(d.getTime());
+		return formattedDate;	
+	}
+	// GET Ref
+	public static int getPreference(Context context, String prefName, String name, int defaultValue) {
+		SharedPreferences prefs = context.getSharedPreferences(prefName, Context.MODE_PRIVATE);
+        return prefs.getInt(name, defaultValue);
+	}
+	public static String getPreference(Context context, String prefName, String name, String defaultValue) {
+		SharedPreferences prefs = context.getSharedPreferences(prefName, Context.MODE_PRIVATE);
+        return prefs.getString(name, defaultValue);
+	}
+	public static void setPreference(Context context, String prefName, String name, int data) {
+		SharedPreferences prefs = context.getSharedPreferences(prefName, Context.MODE_PRIVATE);
+		SharedPreferences.Editor editor = prefs.edit();
+        editor.putInt(name, data);
+        editor.commit();
+	}
+	public static void setPreference(Context context, String prefName, String name, String data) {
+		SharedPreferences prefs = context.getSharedPreferences(prefName, Context.MODE_PRIVATE);
+		SharedPreferences.Editor editor = prefs.edit();
+        editor.putString(name, data);
+        editor.commit();
+	}
+	
+	public static void removePreference(Context context, String prefName , String key) {
+		SharedPreferences prefs = context.getSharedPreferences(prefName, Context.MODE_PRIVATE);
+		SharedPreferences.Editor editor = prefs.edit();
+        editor.remove(key);
+        editor.commit();
+	}
+	
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index fa4ce38d2..cce9566c7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -49,24 +49,25 @@
 
 import com.teamjihu.ThemeManager;
 
-import org.telegram.android.AndroidUtilities;
 import org.telegram.PhoneFormat.PhoneFormat;
+import org.telegram.android.AndroidUtilities;
+import org.telegram.android.ContactsController;
+import org.telegram.android.ImageReceiver;
 import org.telegram.android.LocaleController;
 import org.telegram.android.MediaController;
+import org.telegram.android.MessageObject;
+import org.telegram.android.MessagesController;
 import org.telegram.android.MessagesStorage;
+import org.telegram.android.NotificationCenter;
 import org.telegram.android.NotificationsController;
 import org.telegram.android.SendMessagesHelper;
+import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLoader;
-import org.telegram.messenger.TLRPC;
-import org.telegram.android.ContactsController;
 import org.telegram.messenger.FileLog;
-import org.telegram.android.MessageObject;
-import org.telegram.messenger.ConnectionsManager;
-import org.telegram.android.MessagesController;
-import org.telegram.android.NotificationCenter;
-import org.telegram.messenger.phonethemeshop.R;
+import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
+import org.telegram.messenger.phonethemeshop.R;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Cells.ChatActionCell;
 import org.telegram.ui.Cells.ChatAudioCell;
@@ -77,15 +78,14 @@
 import org.telegram.ui.Views.ActionBar.ActionBarLayer;
 import org.telegram.ui.Views.ActionBar.ActionBarMenu;
 import org.telegram.ui.Views.ActionBar.ActionBarMenuItem;
-import org.telegram.ui.Views.BackupImageView;
 import org.telegram.ui.Views.ActionBar.BaseFragment;
+import org.telegram.ui.Views.BackupImageView;
 import org.telegram.ui.Views.ChatActivityEnterView;
-import org.telegram.android.ImageReceiver;
-import org.telegram.ui.Views.EmojiView;
 import org.telegram.ui.Views.LayoutListView;
 import org.telegram.ui.Views.SizeNotifierRelativeLayout;
 import org.telegram.ui.Views.TimerButton;
 import org.telegram.ui.Views.TypingDotsDrawable;
+import org.telegram.ui.Views.ZzalListView;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -106,6 +106,7 @@
     private View bottomOverlay;
     private ChatAdapter chatAdapter;
     private ChatActivityEnterView chatActivityEnterView;
+    private ZzalListView zzalListView;
     private View timeItem;
     private View menuItem;
     private LayoutListView chatListView;
@@ -336,6 +337,7 @@ public void run() {
         } else {
             return false;
         }
+        zzalListView = new ZzalListView();
         chatActivityEnterView = new ChatActivityEnterView();
         chatActivityEnterView.setDialogId(dialog_id);
         chatActivityEnterView.setDelegate(new ChatActivityEnterView.ChatActivityEnterViewDelegate() {
@@ -1078,6 +1080,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
             updateBottomOverlay();
 
             chatActivityEnterView.setContainerView(getParentActivity(), fragmentView, ChatActivity.this);
+            zzalListView.setContainerView(getParentActivity(), fragmentView, ChatActivity.this);
         } else {
             ViewGroup parent = (ViewGroup)fragmentView.getParent();
             if (parent != null) {
@@ -1087,6 +1090,16 @@ public void onClick(DialogInterface dialogInterface, int i) {
         return fragmentView;
     }
 
+    public void showZzalListView(boolean bShow) {
+        zzalListView.showZzalListView(bShow);
+    }
+    public void toggleZzalListView() {
+        if(zzalListView.isShown())
+            zzalListView.showZzalListView(false);
+        else
+            zzalListView.showZzalListView(true);
+    }
+
     public void didSelectPhotos(ArrayList<String> photos) {
         SendMessagesHelper.prepareSendingPhotos(photos, null, dialog_id);
     }
@@ -2953,6 +2966,9 @@ public boolean onBackPressed() {
         } else if (chatActivityEnterView.isEmojiPopupShowing()) {
             chatActivityEnterView.hideEmojiPopup();
             return false;
+        } else if(zzalListView.isShown()) {
+            showZzalListView(false);
+            return false;
         }
         return true;
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/ChatActivityEnterView.java
index c96758df8..ab759c4bf 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/ChatActivityEnterView.java
@@ -44,16 +44,14 @@
 import org.telegram.android.LocaleController;
 import org.telegram.android.MediaController;
 import org.telegram.android.MessagesController;
+import org.telegram.android.NotificationCenter;
 import org.telegram.android.SendMessagesHelper;
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLog;
-import org.telegram.android.NotificationCenter;
-import org.telegram.messenger.phonethemeshop.R;
 import org.telegram.messenger.TLRPC;
+import org.telegram.messenger.phonethemeshop.R;
 import org.telegram.ui.ApplicationLoader;
 import org.telegram.ui.ChatActivity;
-import org.telegram.ui.Views.ActionBar.BaseFragment;
-import org.telegram.ui.ZzalActivity;
 
 public class ChatActivityEnterView implements NotificationCenter.NotificationCenterDelegate, SizeNotifierRelativeLayout.SizeNotifierRelativeLayoutDelegate {
 
@@ -154,7 +152,7 @@ public void setContainerView(Activity activity, View containerView, ChatActivity
                 @Override
                 public void onClick(View view) {
                     if ( chatActivity != null )
-                        chatActivity.presentFragment(new ZzalActivity(chatActivity));
+                        chatActivity.toggleZzalListView();
                 }
             });
         }
@@ -171,7 +169,6 @@ public void onClick(View view) {
         TextView textView = (TextView)containerView.findViewById(R.id.slideToCancelTextView);
         textView.setText(LocaleController.getString("SlideToCancel", R.string.SlideToCancel));
 
-
         emojiButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/ZzalListView.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/ZzalListView.java
new file mode 100644
index 000000000..e2f98ab34
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/ZzalListView.java
@@ -0,0 +1,140 @@
+package org.telegram.ui.Views;
+
+import android.app.Activity;
+import android.os.Handler;
+import android.util.DisplayMetrics;
+import android.view.View;
+import android.webkit.GeolocationPermissions;
+import android.webkit.JavascriptInterface;
+import android.webkit.JsPromptResult;
+import android.webkit.JsResult;
+import android.webkit.WebChromeClient;
+import android.webkit.WebSettings;
+import android.webkit.WebView;
+import android.webkit.WebViewClient;
+import android.widget.FrameLayout;
+import android.widget.ImageView;
+
+import com.teamjihu.DownloadZzalTask;
+import com.teamjihu.S3Util;
+
+import org.telegram.messenger.phonethemeshop.R;
+import org.telegram.ui.ChatActivity;
+
+/**
+ * Created by soohwanpark on 2014-11-07.
+ */
+public class ZzalListView {
+
+    private Activity parentActivity;
+    private ChatActivity chatActivity = null;
+    private View zzalLayout = null;
+
+    private int screenWidth;
+    private int dp200;
+
+    private boolean isShown = false;
+
+    private WebView webviewZzal;
+
+    FrameLayout topLoadingBar;
+    ImageView imgLoading;
+
+    public void setContainerView(Activity activity, View containerView, ChatActivity _chatActivity) {
+        DisplayMetrics displaymetrics = new DisplayMetrics();
+        activity.getWindowManager().getDefaultDisplay().getMetrics(displaymetrics);
+        screenWidth = displaymetrics.widthPixels;
+
+        dp200 = (int)S3Util.dp2px(activity, 200);
+
+        parentActivity = activity;
+        chatActivity = _chatActivity;
+
+        zzalLayout = containerView.findViewById(R.id.zzal_layout);
+        S3Util.setViewMarginLeft(zzalLayout, screenWidth, false);
+
+        topLoadingBar = (FrameLayout)containerView.findViewById(R.id.topLoadingBar);
+        imgLoading = (ImageView)containerView.findViewById(R.id.imgLoading);
+
+        webviewZzal = (WebView)containerView.findViewById(R.id.webview_zzal);
+        webviewZzal.getSettings().setCacheMode(WebSettings.LOAD_DEFAULT);
+        webviewZzal.getSettings().setJavaScriptEnabled(true);
+        webviewZzal.setWebViewClient(new WebViewClientClass());
+        webviewZzal.setWebChromeClient(new MyWebChromeClient());
+        webviewZzal.addJavascriptInterface(new JsInterface(), "native");
+    }
+
+    public boolean isShown() {
+        return isShown;
+    }
+
+    public void showZzalListView(boolean bShow) {
+        isShown = bShow;
+        if(bShow) {
+            S3Util.swipeView(zzalLayout, screenWidth - dp200, null, 300);
+            webviewZzal.loadUrl("http://2runzzal.com/themegram");
+        } else {
+            S3Util.swipeView(zzalLayout, screenWidth, null, 300);
+        }
+    }
+
+    public class JsInterface {
+        public JsInterface() { }
+        @JavascriptInterface
+        public void sendZzal(String url) {
+            webviewZzal.post(new Runnable() {
+                public void run() {
+                    showZzalListView(false);
+                }
+            });
+
+            DownloadZzalTask task = new DownloadZzalTask(chatActivity);
+            task.execute(url);
+        }
+    }
+
+    private class WebViewClientClass extends WebViewClient {
+        @Override
+        public boolean shouldOverrideUrlLoading(WebView view, String url) {
+            view.loadUrl(url);
+            return true;
+        }
+    }
+
+    public class MyWebChromeClient extends WebChromeClient {
+        @Override
+        public void onGeolocationPermissionsShowPrompt(String origin, GeolocationPermissions.Callback callback) {
+            callback.invoke(origin, true, false);
+        }
+        @Override
+        public boolean onJsAlert(WebView view, String url, String message, JsResult result) {
+            return false;
+        }
+        @Override
+        public boolean onJsConfirm(WebView view, String url, String message, JsResult result) {
+            return false;
+        }
+        @Override
+        public boolean onJsPrompt(WebView view, String url, String message, String defaultValue, JsPromptResult result) {
+            return false;
+        }
+        Runnable hideLoadingBar = new Runnable() {
+            @Override
+            public void run() {
+                topLoadingBar.setVisibility(View.INVISIBLE);
+            }
+        };
+        @Override
+        public void onProgressChanged(WebView view, int newProgress) {
+            if(zzalLayout == null || topLoadingBar == null || imgLoading == null)
+                return;
+            if(newProgress >= 0) {
+                topLoadingBar.setVisibility(View.VISIBLE);
+                imgLoading.getLayoutParams().width = (int) (zzalLayout.getWidth() * (double)newProgress/100);
+                imgLoading.requestLayout();
+            }
+            if(newProgress >= 100)
+                (new Handler()).postDelayed(hideLoadingBar, 1000);
+        }
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ZzalActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ZzalActivity.java
deleted file mode 100644
index 7fd7a561b..000000000
--- a/TMessagesProj/src/main/java/org/telegram/ui/ZzalActivity.java
+++ /dev/null
@@ -1,214 +0,0 @@
-package org.telegram.ui;
-
-import android.content.Context;
-import android.content.Intent;
-import android.graphics.Bitmap;
-import android.graphics.BitmapFactory;
-import android.graphics.drawable.Drawable;
-import android.net.Uri;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.LayoutInflater;
-import android.view.MotionEvent;
-import android.view.View;
-import android.view.ViewGroup;
-import android.webkit.WebSettings;
-import android.webkit.WebView;
-import android.webkit.WebViewClient;
-import android.widget.AdapterView;
-import android.widget.ArrayAdapter;
-import android.widget.FrameLayout;
-import android.widget.ImageView;
-import android.widget.LinearLayout;
-import android.widget.ListView;
-import android.widget.TextView;
-
-import com.teamjihu.DownloadZzalTask;
-import com.teamjihu.EmoticonManager;
-import com.teamjihu.ThemeManager;
-
-import org.telegram.android.LocaleController;
-import org.telegram.android.PhoneThemeShopEmoji;
-import org.telegram.messenger.phonethemeshop.R;
-import org.telegram.ui.Views.ActionBar.ActionBarLayer;
-import org.telegram.ui.Views.ActionBar.BaseFragment;
-
-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.OutputStream;
-import java.net.URL;
-import java.util.ArrayList;
-import java.util.List;
-import java.util.concurrent.TimeUnit;
-
-import android.webkit.WebChromeClient;
-import android.webkit.GeolocationPermissions;
-import android.webkit.JsPromptResult;
-import android.webkit.JsResult;
-import android.webkit.JavascriptInterface;
-import android.widget.Toast;
-
-import android.app.ProgressDialog;
-
-/**
- * Created by soohwanpark on 2014-10-22.
- */
-public class ZzalActivity extends BaseFragment {
-    ThemeManager themeManager;
-    LayoutInflater INFLATER;
-
-    ChatActivity chatActivity;
-    WebView webviewZzal;
-
-    FrameLayout topLoadingBar;
-    ImageView imgLoading;
-
-    public ZzalActivity( ChatActivity _chatActivity ) {
-        chatActivity = _chatActivity;
-    }
-
-    @Override
-    public View createView(LayoutInflater inflater, ViewGroup container) {
-        INFLATER = inflater;
-        if (fragmentView == null) {
-            fragmentView = inflater.inflate(R.layout.zzal_layout, container, false);
-            this.hideActionBar();
-            init();
-        } else {
-            ViewGroup parent = (ViewGroup)fragmentView.getParent();
-            if (parent != null) {
-                parent.removeView(fragmentView);
-            }
-        }
-        return fragmentView;
-    }
-
-    private void init() {
-        topLoadingBar = (FrameLayout)fragmentView.findViewById(R.id.topLoadingBar);
-        imgLoading = (ImageView)fragmentView.findViewById(R.id.imgLoading);
-
-        webviewZzal = (WebView)fragmentView.findViewById(R.id.webview_zzal);
-        webviewZzal.getSettings().setCacheMode(WebSettings.LOAD_DEFAULT);
-        webviewZzal.getSettings().setJavaScriptEnabled(true);
-        webviewZzal.setWebViewClient(new WebViewClientClass());
-        webviewZzal.setWebChromeClient(new MyWebChromeClient());
-        webviewZzal.addJavascriptInterface(new JsInterface(), "native");
-        webviewZzal.loadUrl("http://2runzzal.com/themegram");
-/*
-        webviewZzal.setOnLongClickListener(new View.OnLongClickListener() {
-            @Override
-            public boolean onLongClick(View v) {
-                final WebView webview = (WebView) v;
-                final WebView.HitTestResult result = webview.getHitTestResult();
-                if (result.getType() == WebView.HitTestResult.IMAGE_TYPE) {
-                    new DownloadZzalTask(chatActivity).execute(result.getExtra());
-                }
-                return false;
-            }
-        });
-        */
-    }
-
-    static ProgressDialog searchProgressDialog = null;
-    public static void ShowProgressDialog(Context context, int progressDialogResId, boolean bShow) {
-        if(bShow) {
-            if(searchProgressDialog != null) {
-                searchProgressDialog.dismiss();
-                searchProgressDialog = null;
-            }
-            searchProgressDialog = new ProgressDialog(context);
-            searchProgressDialog.setCancelable(false);
-            searchProgressDialog.show();
-            searchProgressDialog.setContentView(progressDialogResId);
-        } else {
-            if(searchProgressDialog != null) {
-                searchProgressDialog.dismiss();
-                searchProgressDialog = null;
-            }
-        }
-    }
-
-    public class JsInterface {
-        boolean isZzalSent = false;
-        public JsInterface() {
-            isZzalSent = false;
-        }
-
-        @JavascriptInterface
-        public void sendZzal(String url) {
-            if(isZzalSent)
-                return;
-            isZzalSent = true;
-            parentLayout.post(new Runnable() {
-                public void run() {
-                    finishFragment();
-                }
-            });
-            //ShowProgressDialog(getParentActivity(), R.layout.progressdialog, true);
-            DownloadZzalTask task = new DownloadZzalTask(chatActivity);
-            task.execute(url);
-            //ShowProgressDialog(getParentActivity(), R.layout.progressdialog, false);
-        }
-    }
-
-    private Handler mClickHandler = new Handler() {
-        @Override
-        public void handleMessage(Message msg) {
-
-        }
-    };
-
-    private class WebViewClientClass extends WebViewClient {
-        @Override
-        public boolean shouldOverrideUrlLoading(WebView view, String url) {
-            view.loadUrl(url);
-            return true;
-        }
-    }
-
-    public class MyWebChromeClient extends WebChromeClient {
-        @Override
-        public void onGeolocationPermissionsShowPrompt(String origin, GeolocationPermissions.Callback callback) {
-            callback.invoke(origin, true, false);
-        }
-        @Override
-        public boolean onJsAlert(WebView view, String url, String message, JsResult result) {
-            return false;
-        }
-        @Override
-        public boolean onJsConfirm(WebView view, String url, String message, JsResult result) {
-            return false;
-        }
-        @Override
-        public boolean onJsPrompt(WebView view, String url, String message, String defaultValue, JsPromptResult result) {
-            return false;
-        }
-        Runnable hideLoadingBar = new Runnable() {
-            @Override
-            public void run() {
-                topLoadingBar.setVisibility(View.INVISIBLE);
-            }
-        };
-        @Override
-        public void onProgressChanged(WebView view, int newProgress) {
-            if(fragmentView == null || topLoadingBar == null || imgLoading == null)
-                return;
-            if(newProgress >= 0) {
-                topLoadingBar.setVisibility(View.VISIBLE);
-                imgLoading.getLayoutParams().width = (int) (fragmentView.getWidth() * (double)newProgress/100);
-                imgLoading.requestLayout();
-            }
-            if(newProgress >= 100)
-                (new Handler()).postDelayed(hideLoadingBar, 1000);
-        }
-    }
-
-    @Override
-    public void onFragmentDestroy() {
-        super.onFragmentDestroy();
-        this.showActionBar();
-    }
-}
diff --git a/TMessagesProj/src/main/res/layout/chat_layout.xml b/TMessagesProj/src/main/res/layout/chat_layout.xml
index 996acc9fa..c366b33d8 100644
--- a/TMessagesProj/src/main/res/layout/chat_layout.xml
+++ b/TMessagesProj/src/main/res/layout/chat_layout.xml
@@ -292,5 +292,12 @@
         android:layout_marginRight="4dp"
         android:layout_marginBottom="4dp"
         android:id="@+id/pagedown_button"/>
-
+    <FrameLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_above="@id/chat_compose_panel">
+        <include
+            android:id="@+id/zzal_layout"
+            layout="@layout/zzal_layout" />
+    </FrameLayout>
 </org.telegram.ui.Views.SizeNotifierRelativeLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/zzal_layout.xml b/TMessagesProj/src/main/res/layout/zzal_layout.xml
index 155b41658..689f02781 100644
--- a/TMessagesProj/src/main/res/layout/zzal_layout.xml
+++ b/TMessagesProj/src/main/res/layout/zzal_layout.xml
@@ -1,7 +1,7 @@
 <FrameLayout
     xmlns:android="http://schemas.android.com/apk/res/android"
     android:gravity="center_vertical"
-    android:layout_width="match_parent"
+    android:layout_width="200dp"
     android:layout_height="match_parent">
 
     <WebView
