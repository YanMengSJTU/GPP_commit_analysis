diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java b/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
index e666c1033..ed13844e3 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
@@ -1966,6 +1966,92 @@ public static String formatFileSize(long size, boolean removeZero) {
         }
     }
 
+    public static String formatShortDuration(int duration) {
+        return formatDuration(duration, false);
+    }
+
+    public static String formatLongDuration(int duration) {
+        return formatDuration(duration, true);
+    }
+
+    public static String formatDuration(int duration, boolean isLong) {
+        int h = duration / 3600;
+        int m = duration / 60 % 60;
+        int s = duration % 60;
+        if (h == 0) {
+            if (isLong) {
+                return String.format(Locale.US, "%02d:%02d", m, s);
+            } else {
+                return String.format(Locale.US, "%d:%02d", m, s);
+            }
+        } else {
+            return String.format(Locale.US, "%d:%02d:%02d", h, m, s);
+        }
+    }
+
+    public static String formatShortDuration(int progress, int duration) {
+        return formatDuration(progress, duration, false);
+    }
+
+    public static String formatLongDuration(int progress, int duration) {
+        return formatDuration(progress, duration, true);
+    }
+
+    public static String formatDuration(int progress, int duration, boolean isLong) {
+        int h = duration / 3600;
+        int m = duration / 60 % 60;
+        int s = duration % 60;
+
+        int ph = progress / 3600;
+        int pm = progress / 60 % 60;
+        int ps = progress % 60;
+
+        if (duration == 0) {
+            if (ph == 0) {
+                if (isLong) {
+                    return String.format(Locale.US, "%02d:%02d / -:--", pm, ps);
+                } else {
+                    return String.format(Locale.US, "%d:%02d / -:--", pm, ps);
+                }
+            } else {
+                return String.format(Locale.US, "%d:%02d:%02d / -:--", ph, pm, ps);
+            }
+        } else {
+            if (ph == 0 && h == 0) {
+                if (isLong) {
+                    return String.format(Locale.US, "%02d:%02d / %02d:%02d", pm, ps, m, s);
+                } else {
+                    return String.format(Locale.US, "%d:%02d / %d:%02d", pm, ps, m, s);
+                }
+            } else {
+                return String.format(Locale.US, "%d:%02d:%02d / %d:%02d:%02d", ph, pm, ps, h, m, s);
+            }
+        }
+    }
+
+    public static String formatVideoDuration(int progress, int duration) {
+        int h = duration / 3600;
+        int m = duration / 60 % 60;
+        int s = duration % 60;
+
+        int ph = progress / 3600;
+        int pm = progress / 60 % 60;
+        int ps = progress % 60;
+
+        if (ph == 0 && h == 0) {
+            return String.format(Locale.US, "%02d:%02d / %02d:%02d", pm, ps, m, s);
+        } else {
+            if (h == 0) {
+                return String.format(Locale.US, "%d:%02d:%02d / %02d:%02d", ph, pm, ps, m, s);
+            } else if (ph == 0) {
+                return String.format(Locale.US, "%02d:%02d / %d:%02d:%02d", pm, ps, h, m, s);
+            }
+            else {
+                return String.format(Locale.US, "%d:%02d:%02d / %d:%02d:%02d", ph, pm, ps, h, m, s);
+            }
+        }
+    }
+
     public static byte[] decodeQuotedPrintable(final byte[] bytes) {
         if (bytes == null) {
             return null;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java
index d16372a3c..5d28b83f2 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java
@@ -2857,7 +2857,7 @@ public void generateCaption() {
             if (useManualParse) {
                 if (containsUrls(caption)) {
                     try {
-                        Linkify.addLinks((Spannable) caption, Linkify.WEB_URLS | Linkify.PHONE_NUMBERS);
+                        Linkify.addLinks((Spannable) caption, Linkify.WEB_URLS | Linkify.PHONE_NUMBERS | Linkify.EMAIL_ADDRESSES);
                     } catch (Exception e) {
                         FileLog.e(e);
                     }
@@ -3006,7 +3006,7 @@ public static void addLinks(boolean isOut, CharSequence messageText, boolean bot
         if (messageText instanceof Spannable && containsUrls(messageText)) {
             if (messageText.length() < 1000) {
                 try {
-                    Linkify.addLinks((Spannable) messageText, Linkify.WEB_URLS | Linkify.PHONE_NUMBERS);
+                    Linkify.addLinks((Spannable) messageText, Linkify.WEB_URLS | Linkify.PHONE_NUMBERS | Linkify.EMAIL_ADDRESSES);
                 } catch (Exception e) {
                     FileLog.e(e);
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
index a64e19463..9664e44a1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
@@ -388,6 +388,8 @@ public int getMinimumHeight() {
     private static long lastHolidayCheckTime;
     private static boolean canStartHolidayAnimation;
 
+    public static TextPaint settings_aboutTextPaint;
+
     public static TextPaint profile_aboutTextPaint;
     public static Drawable profile_verifiedDrawable;
     public static Drawable profile_verifiedCheckDrawable;
@@ -2590,6 +2592,7 @@ public static void applyTheme(ThemeInfo themeInfo, boolean save, boolean removeW
             applyCommonTheme();
             applyDialogsTheme();
             applyProfileTheme();
+            applySettingsTheme();
             applyChatTheme(false);
             AndroidUtilities.runOnUIThread(() -> NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.didSetNewTheme, nightTheme));
         } catch (Exception e) {
@@ -3230,6 +3233,10 @@ public static void reloadAllResources(Context context) {
             profile_verifiedDrawable = null;
             createProfileResources(context);
         }
+        if (settings_aboutTextPaint != null) {
+            createSettingsResources();
+        }
+
     }
 
     public static void createChatResources(Context context, boolean fontsOnly) {
@@ -3797,6 +3804,7 @@ public static void applyChatServiceMessageColor(int[] custom) {
     public static void createProfileResources(Context context) {
         if (profile_verifiedDrawable == null) {
             profile_aboutTextPaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
+            profile_aboutTextPaint.setTextSize(AndroidUtilities.dp(16));
 
             Resources resources = context.getResources();
 
@@ -3805,8 +3813,13 @@ public static void createProfileResources(Context context) {
 
             applyProfileTheme();
         }
+    }
 
-        profile_aboutTextPaint.setTextSize(AndroidUtilities.dp(16));
+    public static void createSettingsResources() {
+        settings_aboutTextPaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
+        settings_aboutTextPaint.setTextSize(AndroidUtilities.dp(16));
+
+        applySettingsTheme();
     }
 
     private static ColorFilter currentShareColorFilter;
@@ -3841,6 +3854,13 @@ public static void applyProfileTheme() {
         setDrawableColorByKey(profile_verifiedCheckDrawable, key_profile_verifiedCheck);
     }
 
+    public static void applySettingsTheme() {
+        if (settings_aboutTextPaint != null) {
+            settings_aboutTextPaint.setColor(getColor(key_windowBackgroundWhiteBlackText));
+            settings_aboutTextPaint.linkColor = getColor(key_windowBackgroundWhiteLinkText);
+        }
+    }
+
     public static Drawable getThemedDrawable(Context context, int resId, String key) {
         return getThemedDrawable(context, resId, getColor(key));
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ArticleViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/ArticleViewer.java
index 3069c449e..c8d8798ca 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ArticleViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ArticleViewer.java
@@ -1163,13 +1163,17 @@ private void showCopyPopup(String urlFinal) {
             if (which == 0) {
                 Browser.openUrl(parentActivity, urlFinal);
             } else if (which == 1) {
-                String url = urlFinal;
-                if (url.startsWith("mailto:")) {
-                    url = url.substring(7);
-                } else if (url.startsWith("tel:")) {
-                    url = url.substring(4);
-                }
-                AndroidUtilities.addToClipboard(url);
+                String copyText = urlFinal;
+                String toastText = LocaleController.getString("LinkCopied", R.string.LinkCopied);
+                if (copyText.startsWith("mailto:")) {
+                    copyText = copyText.substring(7);
+                    toastText = LocaleController.getString("EmailCopied", R.string.EmailCopied);
+                } else if (copyText.startsWith("tel:")) {
+                    copyText = copyText.substring(4);
+                    toastText = LocaleController.getString("PhoneCopied", R.string.PhoneCopied);
+                }
+                AndroidUtilities.addToClipboard(copyText);
+                Toast.makeText(parentActivity, toastText, Toast.LENGTH_SHORT).show();
             }
         });
         BottomSheet sheet = builder.create();
@@ -3747,7 +3751,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                     duration = 0;
                 }
                 duration /= 1000;
-                int size = (int) Math.ceil(videoPlayerTime.getPaint().measureText(String.format("%02d:%02d / %02d:%02d", duration / 60, duration % 60, duration / 60, duration % 60)));
+                int size = (int) Math.ceil(videoPlayerTime.getPaint().measureText(AndroidUtilities.formatLongDuration((int) duration)));
                 videoPlayerSeekbar.setSize(getMeasuredWidth() - AndroidUtilities.dp(48 + 16) - size, getMeasuredHeight());
             }
 
@@ -6265,7 +6269,7 @@ public void updatePlayingMessageProgress() {
                     }
                 }
             }
-            String timeString = String.format("%d:%02d", duration / 60, duration % 60);
+            String timeString = AndroidUtilities.formatShortDuration(duration);
             if (lastTimeString == null || lastTimeString != null && !lastTimeString.equals(timeString)) {
                 lastTimeString = timeString;
                 audioTimePaint.setTextSize(AndroidUtilities.dp(16));
@@ -10729,15 +10733,15 @@ private void setScaleToFill() {
     private void updateVideoPlayerTime() {
         String newText;
         if (videoPlayer == null) {
-            newText = String.format("%02d:%02d / %02d:%02d", 0, 0, 0, 0);
+            newText = AndroidUtilities.formatLongDuration(0, 0);
         } else {
             long current = videoPlayer.getCurrentPosition() / 1000;
             long total = videoPlayer.getDuration();
             total /= 1000;
             if (total != C.TIME_UNSET && current != C.TIME_UNSET) {
-                newText = String.format("%02d:%02d / %02d:%02d", current / 60, current % 60, total / 60, total % 60);
+                newText = AndroidUtilities.formatLongDuration((int) current, (int) total);
             } else {
-                newText = String.format("%02d:%02d / %02d:%02d", 0, 0, 0, 0);
+                newText = AndroidUtilities.formatLongDuration(0, 0);
             }
         }
         if (!TextUtils.equals(videoPlayerTime.getText(), newText)) {
@@ -10856,7 +10860,6 @@ public void onSurfaceTextureUpdated(SurfaceTexture surfaceTexture) {
                 duration = 0;
             }
             duration /= 1000;
-            int size = (int) Math.ceil(videoPlayerTime.getPaint().measureText(String.format("%02d:%02d / %02d:%02d", duration / 60, duration % 60, duration / 60, duration % 60)));
         }
         videoPlayer.preparePlayer(Uri.fromFile(file), "other");
         bottomLayout.setVisibility(View.VISIBLE);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java
index 81c94370e..a8880d0d3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java
@@ -11,17 +11,21 @@
 import android.annotation.SuppressLint;
 import android.content.Context;
 import android.graphics.Canvas;
+import android.graphics.Paint;
 import android.os.Build;
 import android.text.Layout;
 import android.text.Spannable;
 import android.text.SpannableStringBuilder;
 import android.text.StaticLayout;
+import android.text.TextPaint;
 import android.text.TextUtils;
 import android.text.style.ClickableSpan;
 import android.text.style.URLSpan;
 import android.util.TypedValue;
 import android.view.Gravity;
+import android.view.HapticFeedbackConstants;
 import android.view.MotionEvent;
+import android.view.ViewConfiguration;
 import android.widget.FrameLayout;
 import android.widget.TextView;
 
@@ -30,14 +34,68 @@
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessageObject;
-import org.telegram.messenger.browser.Browser;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.LinkPath;
 import org.telegram.ui.ActionBar.Theme;
-import org.telegram.ui.Components.URLSpanNoUnderline;
 
 public class AboutLinkCell extends FrameLayout {
 
+    public interface AboutLinkCellDelegate {
+        void onLinkPress(final String url);
+        void onLinkLongPress(final String url);
+    }
+
+    private boolean checkingForLongPress = false;
+    private CheckForLongPress pendingCheckForLongPress = null;
+    private int pressCount = 0;
+    private CheckForTap pendingCheckForTap = null;
+
+    private final class CheckForTap implements Runnable {
+        public void run() {
+            if (pendingCheckForLongPress == null) {
+                pendingCheckForLongPress = new CheckForLongPress();
+            }
+            pendingCheckForLongPress.currentPressCount = ++pressCount;
+            postDelayed(pendingCheckForLongPress, ViewConfiguration.getLongPressTimeout() - ViewConfiguration.getTapTimeout());
+        }
+    }
+
+    class CheckForLongPress implements Runnable {
+        public int currentPressCount;
+
+        public void run() {
+            if (checkingForLongPress && getParent() != null && currentPressCount == pressCount) {
+                checkingForLongPress = false;
+                performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);
+                didPressedLink(true);
+                MotionEvent event = MotionEvent.obtain(0, 0, MotionEvent.ACTION_CANCEL, 0, 0, 0);
+                onTouchEvent(event);
+                event.recycle();
+            }
+        }
+    }
+
+    protected void startCheckLongPress() {
+        if (checkingForLongPress) {
+            return;
+        }
+        checkingForLongPress = true;
+        if (pendingCheckForTap == null) {
+            pendingCheckForTap = new CheckForTap();
+        }
+        postDelayed(pendingCheckForTap, ViewConfiguration.getTapTimeout());
+    }
+
+    protected void cancelCheckLongPress() {
+        checkingForLongPress = false;
+        if (pendingCheckForLongPress != null) {
+            removeCallbacks(pendingCheckForLongPress);
+        }
+        if (pendingCheckForTap != null) {
+            removeCallbacks(pendingCheckForTap);
+        }
+    }
+
     private StaticLayout textLayout;
     private String oldText;
     private int textX;
@@ -48,6 +106,12 @@
     private ClickableSpan pressedLink;
     private LinkPath urlPath = new LinkPath();
 
+    private AboutLinkCellDelegate delegate;
+
+    public void setDelegate(AboutLinkCellDelegate aboutLinkCellDelegate) {
+        delegate = aboutLinkCellDelegate;
+    }
+
     public AboutLinkCell(Context context) {
         super(context);
 
@@ -63,8 +127,25 @@ public AboutLinkCell(Context context) {
         setWillNotDraw(false);
     }
 
-    protected void didPressUrl(String url) {
 
+    private void didPressedLink(boolean isLongPress) {
+        if (delegate == null || pressedLink == null) {
+            return;
+        }
+        try {
+            if (pressedLink instanceof URLSpan) {
+                String url = ((URLSpan) pressedLink).getURL();
+                if (isLongPress) {
+                    delegate.onLinkLongPress(url);
+                } else {
+                    delegate.onLinkPress(url);
+                }
+            } else {
+                pressedLink.onClick(this);
+            }
+        } catch (Exception e) {
+            FileLog.e(e);
+        }
     }
 
     private void resetPressedLink() {
@@ -79,7 +160,7 @@ public void setText(String text, boolean parseLinks) {
     }
 
     public void setTextAndValue(String text, String value, boolean parseLinks) {
-        if (TextUtils.isEmpty(text) || text != null && oldText != null && text.equals(oldText)) {
+        if (TextUtils.isEmpty(text) || text != null && text.equals(oldText)) {
             return;
         }
         oldText = text;
@@ -87,7 +168,8 @@ public void setTextAndValue(String text, String value, boolean parseLinks) {
         if (parseLinks) {
             MessageObject.addLinks(false, stringBuilder, false);
         }
-        Emoji.replaceEmoji(stringBuilder, Theme.profile_aboutTextPaint.getFontMetricsInt(), AndroidUtilities.dp(20), false);
+        TextPaint paint = getAboutPaint();
+        Emoji.replaceEmoji(stringBuilder, paint.getFontMetricsInt(), AndroidUtilities.dp(20), false);
         if (TextUtils.isEmpty(value)) {
             valueTextView.setVisibility(GONE);
         } else {
@@ -114,13 +196,16 @@ public boolean onTouchEvent(MotionEvent event) {
                         final int off = textLayout.getOffsetForHorizontal(line, x2);
 
                         final float left = textLayout.getLineLeft(line);
-                        if (left <= x2 && left + textLayout.getLineWidth(line) >= x2) {
+                        final float top = textLayout.getLineTop(line);
+                        final float bottom = textLayout.getLineBottom(line);
+                        if (left <= x2 && left + textLayout.getLineWidth(line) >= x2 && top <= y2 && bottom >= y2) {
                             Spannable buffer = (Spannable) textLayout.getText();
                             ClickableSpan[] link = buffer.getSpans(off, off, ClickableSpan.class);
                             if (link.length != 0) {
                                 resetPressedLink();
                                 pressedLink = link[0];
                                 result = true;
+                                startCheckLongPress();
                                 try {
                                     int start = buffer.getSpanStart(pressedLink);
                                     urlPath.setCurrentLayout(textLayout, start, 0);
@@ -139,22 +224,7 @@ public boolean onTouchEvent(MotionEvent event) {
                         FileLog.e(e);
                     }
                 } else if (pressedLink != null) {
-                    try {
-                        if (pressedLink instanceof URLSpanNoUnderline) {
-                            String url = ((URLSpanNoUnderline) pressedLink).getURL();
-                            if (url.startsWith("@") || url.startsWith("#") || url.startsWith("/")) {
-                                didPressUrl(url);
-                            }
-                        } else {
-                            if (pressedLink instanceof URLSpan) {
-                                Browser.openUrl(getContext(), ((URLSpan) pressedLink).getURL());
-                            } else {
-                                pressedLink.onClick(this);
-                            }
-                        }
-                    } catch (Exception e) {
-                        FileLog.e(e);
-                    }
+                    didPressedLink(false);
                     resetPressedLink();
                     result = true;
                 }
@@ -165,19 +235,28 @@ public boolean onTouchEvent(MotionEvent event) {
         return result || super.onTouchEvent(event);
     }
 
+    private TextPaint getAboutPaint() {
+        if (Theme.profile_aboutTextPaint != null) {
+            return Theme.profile_aboutTextPaint;
+        } else {
+            return Theme.settings_aboutTextPaint;
+        }
+    }
+
     @SuppressLint("DrawAllocation")
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         if (stringBuilder != null) {
             int maxWidth = MeasureSpec.getSize(widthMeasureSpec) - AndroidUtilities.dp(23 + 23);
+            TextPaint paint = getAboutPaint();
             if (Build.VERSION.SDK_INT >= 24) {
-                textLayout = StaticLayout.Builder.obtain(stringBuilder, 0, stringBuilder.length(), Theme.profile_aboutTextPaint, maxWidth)
+                textLayout = StaticLayout.Builder.obtain(stringBuilder, 0, stringBuilder.length(), paint, maxWidth)
                         .setBreakStrategy(StaticLayout.BREAK_STRATEGY_HIGH_QUALITY)
                         .setHyphenationFrequency(StaticLayout.HYPHENATION_FREQUENCY_NONE)
                         .setAlignment(LocaleController.isRTL ? Layout.Alignment.ALIGN_RIGHT : Layout.Alignment.ALIGN_LEFT)
                         .build();
             } else {
-                textLayout = new StaticLayout(stringBuilder, Theme.profile_aboutTextPaint, maxWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
+                textLayout = new StaticLayout(stringBuilder, paint, maxWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
             }
         }
         int height = (textLayout != null ? textLayout.getHeight() : AndroidUtilities.dp(20)) + AndroidUtilities.dp(16);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
index 8dd416087..6dcd5bb50 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
@@ -1652,10 +1652,8 @@ public void updatePlayingMessageProgress() {
                     delegate.videoTimerReached();
                 }
             }
-            int minutes = duration / 60;
-            int seconds = duration - minutes * 60;
             if (lastTime != duration) {
-                String str = String.format("%d:%02d", minutes, seconds);
+                String str = AndroidUtilities.formatShortDuration(duration);
                 infoWidth = (int) Math.ceil(Theme.chat_infoPaint.measureText(str));
                 infoLayout = new StaticLayout(str, Theme.chat_infoPaint, infoWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
                 lastTime = duration;
@@ -1675,7 +1673,7 @@ public void updatePlayingMessageProgress() {
             }
             if (lastTime != duration) {
                 lastTime = duration;
-                String timeString = String.format("%02d:%02d", duration / 60, duration % 60);
+                String timeString = AndroidUtilities.formatLongDuration(duration);
                 timeWidthAudio = (int) Math.ceil(Theme.chat_timePaint.measureText(timeString));
                 durationLayout = new StaticLayout(timeString, Theme.chat_timePaint, timeWidthAudio, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
                 invalidate();
@@ -1708,7 +1706,7 @@ public void updatePlayingMessageProgress() {
 
                 if (lastTime != duration) {
                     lastTime = duration;
-                    String timeString = String.format("%02d:%02d", duration / 60, duration % 60);
+                    String timeString = AndroidUtilities.formatLongDuration(duration);
                     timeWidthAudio = (int) Math.ceil(Theme.chat_audioTimePaint.measureText(timeString));
                     durationLayout = new StaticLayout(timeString, Theme.chat_audioTimePaint, timeWidthAudio, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
                 }
@@ -1720,12 +1718,7 @@ public void updatePlayingMessageProgress() {
                 }
                 if (lastTime != currentProgress) {
                     lastTime = currentProgress;
-                    String timeString;
-                    if (duration == 0) {
-                        timeString = String.format("%d:%02d / -:--", currentProgress / 60, currentProgress % 60);
-                    } else {
-                        timeString = String.format("%d:%02d / %d:%02d", currentProgress / 60, currentProgress % 60, duration / 60, duration % 60);
-                    }
+                    String timeString = AndroidUtilities.formatShortDuration(currentProgress, duration);
                     int timeWidth = (int) Math.ceil(Theme.chat_audioTimePaint.measureText(timeString));
                     durationLayout = new StaticLayout(timeString, Theme.chat_audioTimePaint, timeWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
                 }
@@ -3005,9 +2998,7 @@ private void setMessageContent(MessageObject messageObject, MessageObject.Groupe
                             drawPhotoImage = true;
 
                             if (type != null && type.equals("video") && duration != 0) {
-                                int minutes = duration / 60;
-                                int seconds = duration - minutes * 60;
-                                String str = String.format("%d:%02d", minutes, seconds);
+                                String str = AndroidUtilities.formatShortDuration(duration);
                                 durationWidth = (int) Math.ceil(Theme.chat_durationPaint.measureText(str));
                                 videoInfoLayout = new StaticLayout(str, Theme.chat_durationPaint, durationWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
                             } else if (hasGamePreview) {
@@ -4401,12 +4392,6 @@ protected void onLongPress() {
         if (pressedLink instanceof URLSpanMono) {
             delegate.didPressUrl(currentMessageObject, pressedLink, true);
             return;
-        } else if (pressedLink instanceof URLSpanNoUnderline) {
-            URLSpanNoUnderline url = (URLSpanNoUnderline) pressedLink;
-            if (url.getURL().startsWith("/")) {
-                delegate.didPressUrl(currentMessageObject, pressedLink, true);
-                return;
-            }
         } else if (pressedLink instanceof URLSpan) {
             delegate.didPressUrl(currentMessageObject, pressedLink, true);
             return;
@@ -4619,7 +4604,7 @@ private int createDocumentLayout(int maxWidth, MessageObject messageObject) {
                     break;
                 }
             }
-            int durationWidth = (int) Math.ceil(Theme.chat_audioTimePaint.measureText(String.format("%d:%02d / %d:%02d", duration / 60, duration % 60, duration / 60, duration % 60)));
+            int durationWidth = (int) Math.ceil(Theme.chat_audioTimePaint.measureText(AndroidUtilities.formatShortDuration(duration, duration)));
             widthBeforeNewTimeLine = backgroundWidth - AndroidUtilities.dp(10 + 76) - durationWidth;
             availableTimeWidth = backgroundWidth - AndroidUtilities.dp(28);
             return durationWidth;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoAttachPhotoCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoAttachPhotoCell.java
index 646e7a30a..a6b70e139 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoAttachPhotoCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoAttachPhotoCell.java
@@ -132,9 +132,7 @@ public void setPhotoEntry(MediaController.PhotoEntry entry, boolean needCheckSho
         if (photoEntry.isVideo) {
             imageView.setOrientation(0, true);
             videoInfoContainer.setVisibility(VISIBLE);
-            int minutes = photoEntry.duration / 60;
-            int seconds = photoEntry.duration - minutes * 60;
-            videoTextView.setText(String.format("%d:%02d", minutes, seconds));
+            videoTextView.setText(AndroidUtilities.formatShortDuration(photoEntry.duration));
         } else {
             videoInfoContainer.setVisibility(INVISIBLE);
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java
index d38853d95..eee61c5ff 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java
@@ -178,9 +178,7 @@ public void setMessageObject(MessageObject messageObject) {
             if (messageObject.isVideo()) {
                 videoInfoContainer.setVisibility(VISIBLE);
                 int duration = messageObject.getDuration();
-                int minutes = duration / 60;
-                int seconds = duration - minutes * 60;
-                videoTextView.setText(String.format("%d:%02d", minutes, seconds));
+                videoTextView.setText(AndroidUtilities.formatShortDuration(duration));
                 TLRPC.Document document = messageObject.getDocument();
                 TLRPC.PhotoSize thumb = FileLoader.getClosestPhotoSizeWithSize(document.thumbs, 50);
                 TLRPC.PhotoSize qualityThumb = FileLoader.getClosestPhotoSizeWithSize(document.thumbs, 320);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 0e5bb04cb..93298884f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -13227,7 +13227,7 @@ private void checkEditTimer() {
         int dt = messageObject.canEditMessageAnytime(currentChat) ? 6 * 60 : MessagesController.getInstance(currentAccount).maxEditTime + 5 * 60 - Math.abs(ConnectionsManager.getInstance(currentAccount).getCurrentTime() - messageObject.messageOwner.date);
         if (dt > 0) {
             if (dt <= 5 * 60) {
-                replyObjectTextView.setText(LocaleController.formatString("TimeToEdit", R.string.TimeToEdit, String.format("%d:%02d", dt / 60, dt % 60)));
+                replyObjectTextView.setText(LocaleController.formatString("TimeToEdit", R.string.TimeToEdit, AndroidUtilities.formatShortDuration(dt)));
             }
             AndroidUtilities.runOnUIThread(this::checkEditTimer, 1000);
         } else {
@@ -13821,32 +13821,36 @@ public void didPressUrl(MessageObject messageObject, final CharacterStyle url, b
                             String str = ((URLSpanNoUnderline) url).getURL();
                             if (str.startsWith("@")) {
                                 String username = str.substring(1).toLowerCase();
-                                if (currentChat != null && !TextUtils.isEmpty(currentChat.username) && username.equals(currentChat.username.toLowerCase()) ||
-                                        currentUser != null && !TextUtils.isEmpty(currentUser.username) && username.equals(currentUser.username.toLowerCase())) {
-                                    Bundle args = new Bundle();
-                                    if (currentChat != null) {
-                                        args.putInt("chat_id", currentChat.id);
-                                    } else if (currentUser != null) {
-                                        args.putInt("user_id", currentUser.id);
-                                        if (currentEncryptedChat != null) {
-                                            args.putLong("dialog_id", dialog_id);
+                                if (longPress) {
+                                    BottomSheet.Builder builder = new BottomSheet.Builder(getParentActivity());
+                                    builder.setTitle(str);
+                                    builder.setItems(new CharSequence[]{LocaleController.getString("Open", R.string.Open), LocaleController.getString("Copy", R.string.Copy)}, (dialog, which) -> {
+                                        if (which == 0) {
+                                            openUsername(username);
+                                        } else if (which == 1) {
+                                            AndroidUtilities.addToClipboard(str);
+                                            Toast.makeText(getParentActivity(), LocaleController.getString("TextCopied", R.string.TextCopied), Toast.LENGTH_SHORT).show();
                                         }
-                                    }
-                                    ProfileActivity fragment = new ProfileActivity(args);
-                                    fragment.setPlayProfileAnimation(true);
-                                    fragment.setChatInfo(chatInfo);
-                                    fragment.setUserInfo(userInfo);
-                                    presentFragment(fragment);
+                                    });
+                                    showDialog(builder.create());
                                 } else {
-                                    MessagesController.getInstance(currentAccount).openByUserName(username, ChatActivity.this, 0);
+                                    openUsername(username);
                                 }
                             } else if (str.startsWith("#") || str.startsWith("$")) {
-                                if (ChatObject.isChannel(currentChat)) {
-                                    openSearchWithText(str);
+                                if (longPress) {
+                                    BottomSheet.Builder builder = new BottomSheet.Builder(getParentActivity());
+                                    builder.setTitle(str);
+                                    builder.setItems(new CharSequence[]{LocaleController.getString("Open", R.string.Open), LocaleController.getString("Copy", R.string.Copy)}, (dialog, which) -> {
+                                        if (which == 0) {
+                                            openHashtag(str);
+                                        } else if (which == 1) {
+                                            AndroidUtilities.addToClipboard(str);
+                                            Toast.makeText(getParentActivity(), LocaleController.getString("TextCopied", R.string.TextCopied), Toast.LENGTH_SHORT).show();
+                                        }
+                                    });
+                                    showDialog(builder.create());
                                 } else {
-                                    DialogsActivity fragment = new DialogsActivity(null);
-                                    fragment.setSearchString(str);
-                                    presentFragment(fragment);
+                                    openHashtag(str);
                                 }
                             } else if (str.startsWith("/")) {
                                 if (URLSpanBotCommand.enabled) {
@@ -13865,13 +13869,17 @@ public void didPressUrl(MessageObject messageObject, final CharacterStyle url, b
                                     if (which == 0) {
                                         Browser.openUrl(getParentActivity(), urlFinal, inlineReturn == 0, false);
                                     } else if (which == 1) {
-                                        String url1 = urlFinal;
-                                        if (url1.startsWith("mailto:")) {
-                                            url1 = url1.substring(7);
-                                        } else if (url1.startsWith("tel:")) {
-                                            url1 = url1.substring(4);
+                                        String copyText = urlFinal;
+                                        String toastText = LocaleController.getString("LinkCopied", R.string.LinkCopied);
+                                        if (copyText.startsWith("mailto:")) {
+                                            copyText = copyText.substring(7);
+                                            toastText = LocaleController.getString("EmailCopied", R.string.EmailCopied);
+                                        } else if (copyText.startsWith("tel:")) {
+                                            copyText = copyText.substring(4);
+                                            toastText = LocaleController.getString("PhoneCopied", R.string.PhoneCopied);
                                         }
-                                        AndroidUtilities.addToClipboard(url1);
+                                        AndroidUtilities.addToClipboard(copyText);
+                                        Toast.makeText(getParentActivity(), toastText, Toast.LENGTH_SHORT).show();
                                     }
                                 });
                                 showDialog(builder.create());
@@ -13896,6 +13904,38 @@ public void didPressUrl(MessageObject messageObject, final CharacterStyle url, b
                         }
                     }
 
+                    private void openUsername(String username) {
+                        if (currentChat != null && !TextUtils.isEmpty(currentChat.username) && username.equals(currentChat.username.toLowerCase()) ||
+                                currentUser != null && !TextUtils.isEmpty(currentUser.username) && username.equals(currentUser.username.toLowerCase())) {
+                            Bundle args = new Bundle();
+                            if (currentChat != null) {
+                                args.putInt("chat_id", currentChat.id);
+                            } else if (currentUser != null) {
+                                args.putInt("user_id", currentUser.id);
+                                if (currentEncryptedChat != null) {
+                                    args.putLong("dialog_id", dialog_id);
+                                }
+                            }
+                            ProfileActivity fragment = new ProfileActivity(args);
+                            fragment.setPlayProfileAnimation(true);
+                            fragment.setChatInfo(chatInfo);
+                            fragment.setUserInfo(userInfo);
+                            presentFragment(fragment);
+                        } else {
+                            MessagesController.getInstance(currentAccount).openByUserName(username, ChatActivity.this, 0);
+                        }
+                    }
+
+                    private void openHashtag(String str) {
+                        if (ChatObject.isChannel(currentChat)) {
+                            openSearchWithText(str);
+                        } else {
+                            DialogsActivity fragment = new DialogsActivity(null);
+                            fragment.setSearchString(str);
+                            presentFragment(fragment);
+                        }
+                    }
+
                     @Override
                     public void needOpenWebView(String url, String title, String description, String originalUrl, int w, int h) {
                         try {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/AudioPlayerAlert.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/AudioPlayerAlert.java
index b3a09d477..eab79aa6f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/AudioPlayerAlert.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/AudioPlayerAlert.java
@@ -1052,7 +1052,7 @@ private void updateProgress(MessageObject messageObject) {
             }
             if (lastTime != messageObject.audioProgressSec) {
                 lastTime = messageObject.audioProgressSec;
-                timeTextView.setText(String.format("%d:%02d", messageObject.audioProgressSec / 60, messageObject.audioProgressSec % 60));
+                timeTextView.setText(AndroidUtilities.formatShortDuration(messageObject.audioProgressSec));
             }
         }
     }
@@ -1140,7 +1140,7 @@ private void updateTitle(boolean shutdown) {
 
             if (durationTextView != null) {
                 int duration = messageObject.getDuration();
-                durationTextView.setText(duration != 0 ? String.format("%d:%02d", duration / 60, duration % 60) : "-:--");
+                durationTextView.setText(duration != 0 ? AndroidUtilities.formatShortDuration(duration) : "-:--");
             }
         }
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
index 185c2c7eb..22f4ef088 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
@@ -3953,7 +3953,7 @@ public void didReceivedNotification(int id, int account, Object... args) {
                             break;
                         }
                     }
-                    recordedAudioTimeTextView.setText(String.format("%d:%02d", duration / 60, duration % 60));
+                    recordedAudioTimeTextView.setText(AndroidUtilities.formatShortDuration(duration));
                     closeKeyboard();
                     hidePopup(false);
                     checkSendButton(false);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
index b0ed28de9..7db000e44 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
@@ -1081,14 +1081,14 @@ public boolean shutterLongPressed() {
                 switchCameraButton.setAlpha(0.0f);
                 outputFile = AndroidUtilities.generateVideoPath(baseFragment instanceof ChatActivity && ((ChatActivity) baseFragment).isSecretChat());
                 recordTime.setAlpha(1.0f);
-                recordTime.setText(String.format("%02d:%02d", 0, 0));
+                recordTime.setText(AndroidUtilities.formatLongDuration(0));
                 videoRecordTime = 0;
                 videoRecordRunnable = () -> {
                     if (videoRecordRunnable == null) {
                         return;
                     }
                     videoRecordTime++;
-                    recordTime.setText(String.format("%02d:%02d", videoRecordTime / 60, videoRecordTime % 60));
+                    recordTime.setText(AndroidUtilities.formatLongDuration(videoRecordTime));
                     AndroidUtilities.runOnUIThread(videoRecordRunnable, 1000);
                 };
                 AndroidUtilities.lockOrientation(parentFragment.getParentActivity());
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PopupAudioView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PopupAudioView.java
index f18ec7f25..f1b828ede 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PopupAudioView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PopupAudioView.java
@@ -256,8 +256,8 @@ public void updateProgress() {
         } else {
             duration = currentMessageObject.audioProgressSec;
         }
-        String timeString = String.format("%02d:%02d", duration / 60, duration % 60);
-        if (lastTimeString == null || lastTimeString != null && !lastTimeString.equals(timeString)) {
+        String timeString = AndroidUtilities.formatLongDuration(duration);
+        if (lastTimeString == null || !lastTimeString.equals(timeString)) {
             timeWidth = (int)Math.ceil(timePaint.measureText(timeString));
             timeLayout = new StaticLayout(timeString, timePaint, timeWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/WebPlayerView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/WebPlayerView.java
index 3994b7ae4..d110163b6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/WebPlayerView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/WebPlayerView.java
@@ -1284,7 +1284,7 @@ public void setDuration(int value) {
                 return;
             }
             duration = value;
-            durationLayout = new StaticLayout(String.format(Locale.US, "%d:%02d", duration / 60, duration % 60), textPaint, AndroidUtilities.dp(1000), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
+            durationLayout = new StaticLayout(AndroidUtilities.formatShortDuration(duration), textPaint, AndroidUtilities.dp(1000), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
             if (durationLayout.getLineCount() > 0) {
                 durationWidth = (int) Math.ceil(durationLayout.getLineWidth(0));
             }
@@ -1301,7 +1301,7 @@ public void setProgress(int value) {
                 return;
             }
             progress = value;
-            progressLayout = new StaticLayout(String.format(Locale.US, "%d:%02d", progress / 60, progress % 60), textPaint, AndroidUtilities.dp(1000), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
+            progressLayout = new StaticLayout(AndroidUtilities.formatShortDuration(progress), textPaint, AndroidUtilities.dp(1000), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
             invalidate();
         }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DataUsageActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DataUsageActivity.java
index 668b4a27b..93e0a0174 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DataUsageActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DataUsageActivity.java
@@ -764,16 +764,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                             textCell.setTextAndValue(LocaleController.getString("IncomingCalls", R.string.IncomingCalls), String.format("%d", StatsController.getInstance(currentAccount).getRecivedItemsCount(currentType, type)), true);
                         } else if (position == callsTotalTimeRow) {
                             int total = StatsController.getInstance(currentAccount).getCallsTotalTime(currentType);
-                            int hours = total / 3600;
-                            total -= hours * 3600;
-                            int minutes = total / 60;
-                            total -= minutes * 60;
-                            String time;
-                            if (hours != 0) {
-                                time = String.format("%d:%02d:%02d", hours, minutes, total);
-                            } else {
-                                time = String.format("%d:%02d", minutes, total);
-                            }
+                            String time = AndroidUtilities.formatShortDuration(total);
                             textCell.setTextAndValue(LocaleController.getString("CallsTotalTime", R.string.CallsTotalTime), time, false);
                         } else if (position == messagesSentRow || position == photosSentRow || position == videosSentRow || position == audiosSentRow || position == filesSentRow) {
                             textCell.setTextAndValue(LocaleController.getString("CountSent", R.string.CountSent), String.format("%d", StatsController.getInstance(currentAccount).getSentItemsCount(currentType, type)), true);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
index 1e3f9af2b..f156bd872 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
@@ -1262,9 +1262,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                             imageView.setOrientation(photoEntry.orientation, true);
                             if (photoEntry.isVideo) {
                                 cell.videoInfoContainer.setVisibility(View.VISIBLE);
-                                int minutes = photoEntry.duration / 60;
-                                int seconds = photoEntry.duration - minutes * 60;
-                                cell.videoTextView.setText(String.format("%d:%02d", minutes, seconds));
+                                cell.videoTextView.setText(AndroidUtilities.formatShortDuration(photoEntry.duration));
                                 cell.setContentDescription(LocaleController.getString("AttachVideo", R.string.AttachVideo) + ", " + LocaleController.formatCallDuration(photoEntry.duration));
                                 imageView.setImage("vthumb://" + photoEntry.imageId + ":" + photoEntry.path, null, mContext.getResources().getDrawable(R.drawable.nophotos));
                             } else {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index 933d6ae5d..d55aa298f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -260,6 +260,7 @@
 
     private Object lastInsets;
     private boolean padImageForHorizontalInsets;
+    private int lastDuration;
 
     private boolean doneButtonPressed;
 
@@ -1351,6 +1352,8 @@ public void didReceivedNotification(int id, int account, Object... args) {
                     checkProgress(a, true);
                     if (videoPlayer == null && a == 0 && (currentMessageObject != null && currentMessageObject.isVideo() || currentBotInlineResult != null && (currentBotInlineResult.type.equals("video") || MessageObject.isVideoDocument(currentBotInlineResult.document)))) {
                         onActionClick(false);
+                    } else {
+                        animateGifWhenReady();
                     }
                     if (a == 0 && videoPlayer != null) {
                         currentVideoFinishedLoading = true;
@@ -3458,7 +3461,10 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                     duration = 0;
                 }
                 duration /= 1000;
-                int size = (int) Math.ceil(videoPlayerTime.getPaint().measureText(String.format("%02d:%02d / %02d:%02d", duration / 60, duration % 60, duration / 60, duration % 60)));
+                if (duration == 0 && lastDuration > 0) {
+                    duration = lastDuration;
+                }
+                int size = (int) Math.ceil(videoPlayerTime.getPaint().measureText(AndroidUtilities.formatVideoDuration((int) duration, (int) duration)));
                 videoPlayerSeekbar.setSize(getMeasuredWidth() - AndroidUtilities.dp(48 + 16) - size, getMeasuredHeight());
             }
 
@@ -3628,7 +3634,7 @@ private void closeCaptionEnter(boolean apply) {
     private void updateVideoPlayerTime() {
         String newText;
         if (videoPlayer == null) {
-            newText = String.format("%02d:%02d / %02d:%02d", 0, 0, 0, 0);
+            newText = AndroidUtilities.formatVideoDuration(0, 0);
         } else {
             long current = videoPlayer.getCurrentPosition();
             if (current < 0) {
@@ -3636,22 +3642,17 @@ private void updateVideoPlayerTime() {
             }
             long total = videoPlayer.getDuration();
             if (total < 0) {
-                total = 0;
+                total = lastDuration > 0? ((long) lastDuration * 1000): 0;
             }
-            if (total != C.TIME_UNSET && current != C.TIME_UNSET) {
-                if (!inPreview && videoTimelineView.getVisibility() == View.VISIBLE) {
-                    total *= (videoTimelineView.getRightProgress() - videoTimelineView.getLeftProgress());
-                    current -= videoTimelineView.getLeftProgress() * total;
-                    if (current > total) {
-                        current = total;
-                    }
+
+            if (!inPreview && videoTimelineView.getVisibility() == View.VISIBLE) {
+                total *= (videoTimelineView.getRightProgress() - videoTimelineView.getLeftProgress());
+                current -= videoTimelineView.getLeftProgress() * total;
+                if (current > total) {
+                    current = total;
                 }
-                current /= 1000;
-                total /= 1000;
-                newText = String.format("%02d:%02d / %02d:%02d", current / 60, current % 60, total / 60, total % 60);
-            } else {
-                newText = String.format("%02d:%02d / %02d:%02d", 0, 0, 0, 0);
             }
+            newText = AndroidUtilities.formatVideoDuration((int) (current / 1000), (int) (total / 1000));
         }
         videoPlayerTime.setText(newText);
     }
@@ -6353,8 +6354,23 @@ private void setIndexToImage(ImageReceiver imageReceiver, int index) {
                     }
                     return;
                 } else if (currentAnimation != null) {
-                    imageReceiver.setImageBitmap(currentAnimation);
+                    imageReceiver.setCrossfadeWithOldImage(true);
                     currentAnimation.setSecondParentView(containerView);
+                    if (currentAnimation.isLoadingStream() && !currentAnimation.hasBitmap()) {
+                        imageReceiver.setNeedsQualityThumb(true);
+                        if (messageObject.photoThumbs != null && !messageObject.photoThumbs.isEmpty()) {
+                            ImageReceiver.BitmapHolder placeHolder = null;
+                            if (currentThumb != null && imageReceiver == centerImage) {
+                                placeHolder = currentThumb;
+                            }
+                            TLRPC.PhotoSize thumbLocation = FileLoader.getClosestPhotoSizeWithSize(messageObject.photoThumbs, 100);
+                            imageReceiver.setImage(null, null, placeHolder == null ? ImageLocation.getForObject(thumbLocation, messageObject.photoThumbsObject) : null, "b", placeHolder != null ? new BitmapDrawable(placeHolder.bitmap) : null, 0, null, messageObject, 1);
+                        } else {
+                            imageReceiver.setImageBitmap(parentActivity.getResources().getDrawable(R.drawable.photoview_placeholder));
+                        }
+                    } else {
+                        imageReceiver.setImageBitmap(currentAnimation);
+                    }
                     return;
                 } else if (sharedMediaType == DataQuery.MEDIA_FILE) {
                     if (messageObject.canPreviewDocument()) {
@@ -6609,6 +6625,8 @@ public boolean openPhoto(final MessageObject messageObject, final TLRPC.FileLoca
             return false;
         }
         lastInsets = null;
+        lastDuration = messageObject != null? messageObject.getDuration(): 0;
+
         WindowManager wm = (WindowManager) parentActivity.getSystemService(Context.WINDOW_SERVICE);
         if (attachedToWindow) {
             try {
@@ -7728,6 +7746,14 @@ public void onAnimationCancel(Animator animation) {
         hintAnimation.start();
     }
 
+    private void animateGifWhenReady() {
+        if (currentMessageObject != null && currentMessageObject.isGif()) {
+            if (currentAnimation != null && centerImage.getDrawable() != currentAnimation && !currentAnimation.isLoadingStream() && animationInProgress != 1) {
+                setIndexToImage(centerImage, currentIndex);
+            }
+        }
+    }
+
     private void showHint(boolean hide, boolean enabled) {
         if (containerView == null || hide && hintTextView == null) {
             return;
@@ -7993,7 +8019,8 @@ private void onDraw(Canvas canvas) {
             drawProgress = progressView.getVisibility() != View.VISIBLE && (videoPlayer == null || !videoPlayer.isPlaying());
         } else {
             drawProgress = !drawTextureView && videoPlayerControlFrameLayout.getVisibility() != View.VISIBLE;
-            if (drawProgress && currentAnimation != null && !currentAnimation.isLoadingStream()) {
+            if (drawProgress && currentAnimation != null && !currentAnimation.isLoadingStream() && currentAnimation.hasBitmap()) {
+                animateGifWhenReady();
                 drawProgress = false;
             }
         }
@@ -8602,9 +8629,7 @@ private void updateVideoInfo() {
         }
 
         String videoDimension = String.format("%dx%d", width, height);
-        int minutes = (int) (estimatedDuration / 1000 / 60);
-        int seconds = (int) Math.ceil(estimatedDuration / 1000) - minutes * 60;
-        String videoTimeSize = String.format("%d:%02d, ~%s", minutes, seconds, AndroidUtilities.formatFileSize(estimatedSize));
+        String videoTimeSize = String.format("%s, ~%s", AndroidUtilities.formatShortDuration((int) (estimatedDuration / 1000)), AndroidUtilities.formatFileSize(estimatedSize));
         currentSubtitle = String.format("%s, %s", videoDimension, videoTimeSize);
         actionBar.setSubtitle(muteVideo ? null : currentSubtitle);
     }
@@ -9049,9 +9074,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                             imageView.setOrientation(photoEntry.orientation, true);
                             if (photoEntry.isVideo) {
                                 cell.videoInfoContainer.setVisibility(View.VISIBLE);
-                                int minutes = photoEntry.duration / 60;
-                                int seconds = photoEntry.duration - minutes * 60;
-                                cell.videoTextView.setText(String.format("%d:%02d", minutes, seconds));
+                                cell.videoTextView.setText(AndroidUtilities.formatShortDuration(photoEntry.duration));
                                 imageView.setImage("vthumb://" + photoEntry.imageId + ":" + photoEntry.path, null, mContext.getResources().getDrawable(R.drawable.nophotos));
                             } else {
                                 imageView.setImage("thumb://" + photoEntry.imageId + ":" + photoEntry.path, null, mContext.getResources().getDrawable(R.drawable.nophotos));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
index 994237496..d58054bf6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
@@ -64,7 +64,7 @@
 import org.telegram.messenger.SecretChatHelper;
 import org.telegram.messenger.SendMessagesHelper;
 import org.telegram.messenger.UserObject;
-import org.telegram.messenger.ApplicationLoader;
+import org.telegram.messenger.browser.Browser;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
@@ -77,6 +77,7 @@
 import org.telegram.messenger.UserConfig;
 import org.telegram.ui.ActionBar.AlertDialog;
 import org.telegram.ui.ActionBar.BackDrawable;
+import org.telegram.ui.ActionBar.BottomSheet;
 import org.telegram.ui.ActionBar.SimpleTextView;
 import org.telegram.ui.ActionBar.ThemeDescription;
 import org.telegram.ui.Cells.AboutLinkCell;
@@ -1243,20 +1244,12 @@ private boolean processOnClickOrPress(final int position) {
             } else {
                 return false;
             }
-            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
-            builder.setItems(new CharSequence[]{LocaleController.getString("Copy", R.string.Copy)}, (dialogInterface, i) -> {
-                if (i == 0) {
-                    try {
-                        android.content.ClipboardManager clipboard = (android.content.ClipboardManager) ApplicationLoader.applicationContext.getSystemService(Context.CLIPBOARD_SERVICE);
-                        android.content.ClipData clip = android.content.ClipData.newPlainText("label", "@" + username);
-                        clipboard.setPrimaryClip(clip);
-                        Toast.makeText(getParentActivity(), LocaleController.getString("TextCopied", R.string.TextCopied), Toast.LENGTH_SHORT).show();
-                    } catch (Exception e) {
-                        FileLog.e(e);
-                    }
-                }
-            });
-            showDialog(builder.create());
+            try {
+                AndroidUtilities.addToClipboard("@" + username);
+                Toast.makeText(getParentActivity(), LocaleController.getString("TextCopied", R.string.TextCopied), Toast.LENGTH_SHORT).show();
+            } catch (Exception e) {
+                FileLog.e(e);
+            }
             return true;
         } else if (position == phoneRow) {
             final TLRPC.User user = MessagesController.getInstance(currentAccount).getUser(user_id);
@@ -1287,9 +1280,7 @@ private boolean processOnClickOrPress(final int position) {
                     }
                 } else if (i == 1) {
                     try {
-                        android.content.ClipboardManager clipboard = (android.content.ClipboardManager) ApplicationLoader.applicationContext.getSystemService(Context.CLIPBOARD_SERVICE);
-                        android.content.ClipData clip = android.content.ClipData.newPlainText("label", "+" + user.phone);
-                        clipboard.setPrimaryClip(clip);
+                        AndroidUtilities.addToClipboard("+" + user.phone);
                         Toast.makeText(getParentActivity(), LocaleController.getString("PhoneCopied", R.string.PhoneCopied), Toast.LENGTH_SHORT).show();
                     } catch (Exception e) {
                         FileLog.e(e);
@@ -1301,25 +1292,21 @@ private boolean processOnClickOrPress(final int position) {
             showDialog(builder.create());
             return true;
         } else if (position == channelInfoRow || position == userInfoRow) {
-            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
-            builder.setItems(new CharSequence[]{LocaleController.getString("Copy", R.string.Copy)}, (dialogInterface, i) -> {
-                try {
-                    String about;
-                    if (position == channelInfoRow) {
-                        about = chatInfo != null ? chatInfo.about : null;
-                    } else {
-                        about = userInfo != null ? userInfo.about : null;
-                    }
-                    if (TextUtils.isEmpty(about)) {
-                        return;
-                    }
-                    AndroidUtilities.addToClipboard(about);
-                    Toast.makeText(getParentActivity(), LocaleController.getString("TextCopied", R.string.TextCopied), Toast.LENGTH_SHORT).show();
-                } catch (Exception e) {
-                    FileLog.e(e);
-                }
-            });
-            showDialog(builder.create());
+            String about;
+            if (position == channelInfoRow) {
+                about = chatInfo != null ? chatInfo.about : null;
+            } else {
+                about = userInfo != null ? userInfo.about : null;
+            }
+            if (TextUtils.isEmpty(about)) {
+                return false;
+            }
+            try {
+                AndroidUtilities.addToClipboard(about);
+                Toast.makeText(getParentActivity(), LocaleController.getString("TextCopied", R.string.TextCopied), Toast.LENGTH_SHORT).show();
+            } catch (Exception e) {
+                FileLog.e(e);
+            }
             return true;
         }
         return false;
@@ -2975,6 +2962,55 @@ public void onRequestPermissionsResultFragment(int requestCode, String[] permiss
         }
     }
 
+    AboutLinkCell.AboutLinkCellDelegate aboutLinkCellDelegate = new AboutLinkCell.AboutLinkCellDelegate() {
+        @Override
+        public void onLinkPress(final String url) {
+            if (url.startsWith("@")) {
+                MessagesController.getInstance(currentAccount).openByUserName(url.substring(1), ProfileActivity.this, 0);
+            } else if (url.startsWith("#")) {
+                DialogsActivity fragment = new DialogsActivity(null);
+                fragment.setSearchString(url);
+                presentFragment(fragment);
+            } else if (url.startsWith("/")) {
+                if (parentLayout.fragmentsStack.size() > 1) {
+                    BaseFragment previousFragment = parentLayout.fragmentsStack.get(parentLayout.fragmentsStack.size() - 2);
+                    if (previousFragment instanceof ChatActivity) {
+                        finishFragment();
+                        ((ChatActivity) previousFragment).chatActivityEnterView.setCommand(null, url, false, false);
+                    }
+                }
+            } else {
+                Browser.openUrl(getParentActivity(), url);
+            }
+        }
+
+        @Override
+        public void onLinkLongPress(final String url) {
+            BottomSheet.Builder builder = new BottomSheet.Builder(getParentActivity());
+            builder.setTitle(url);
+            builder.setItems(new CharSequence[]{LocaleController.getString("Open", R.string.Open), LocaleController.getString("Copy", R.string.Copy)}, (dialog, which) -> {
+                if (which == 0) {
+                    onLinkPress(url);
+                } else if (which == 1) {
+                    String copyText = url;
+                    String toastText = LocaleController.getString("LinkCopied", R.string.LinkCopied);
+                    if (url.startsWith("mailto:")) {
+                        copyText = url.substring(7);
+                        toastText = LocaleController.getString("EmailCopied", R.string.EmailCopied);
+                    } else if (url.startsWith("tel:")) {
+                        copyText = url.substring(4);
+                        toastText = LocaleController.getString("PhoneCopied", R.string.PhoneCopied);
+                    } else if (url.startsWith("@") || url.startsWith("/") || url.startsWith("#")) {
+                        toastText = LocaleController.getString("TextCopied", R.string.TextCopied);
+                    }
+                    AndroidUtilities.addToClipboard(copyText);
+                    Toast.makeText(getParentActivity(), toastText, Toast.LENGTH_SHORT).show();
+                }
+            });
+            showDialog(builder.create());
+        }
+    };
+
     private class ListAdapter extends RecyclerListView.SelectionAdapter {
 
         private Context mContext;
@@ -2996,26 +3032,8 @@ public ListAdapter(Context context) {
                     break;
                 }
                 case 3: {
-                    view = new AboutLinkCell(mContext) {
-                        @Override
-                        protected void didPressUrl(String url) {
-                            if (url.startsWith("@")) {
-                                MessagesController.getInstance(currentAccount).openByUserName(url.substring(1), ProfileActivity.this, 0);
-                            } else if (url.startsWith("#")) {
-                                DialogsActivity fragment = new DialogsActivity(null);
-                                fragment.setSearchString(url);
-                                presentFragment(fragment);
-                            } else if (url.startsWith("/")) {
-                                if (parentLayout.fragmentsStack.size() > 1) {
-                                    BaseFragment previousFragment = parentLayout.fragmentsStack.get(parentLayout.fragmentsStack.size() - 2);
-                                    if (previousFragment instanceof ChatActivity) {
-                                        finishFragment();
-                                        ((ChatActivity) previousFragment).chatActivityEnterView.setCommand(null, url, false, false);
-                                    }
-                                }
-                            }
-                        }
-                    };
+                    view = new AboutLinkCell(mContext);
+                    ((AboutLinkCell) view).setDelegate(aboutLinkCellDelegate);
                     break;
                 }
                 case 4: {
@@ -3094,7 +3112,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 case 3:
                     AboutLinkCell aboutLinkCell = (AboutLinkCell) holder.itemView;
                     if (position == userInfoRow) {
-                        aboutLinkCell.setTextAndValue(userInfo.about, LocaleController.getString("UserBio", R.string.UserBio), isBot);
+                        aboutLinkCell.setTextAndValue(userInfo.about, LocaleController.getString("UserBio", R.string.UserBio), true);
                     } else if (position == channelInfoRow) {
                         String text = chatInfo.about;
                         while (text.contains("\n\n\n")) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index d49b3e11d..bb7c9c25e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -80,6 +80,7 @@
 import org.telegram.ui.ActionBar.AlertDialog;
 import org.telegram.ui.ActionBar.BottomSheet;
 import org.telegram.ui.ActionBar.ThemeDescription;
+import org.telegram.ui.Cells.AboutLinkCell;
 import org.telegram.ui.Cells.EmptyCell;
 import org.telegram.ui.Cells.GraySectionCell;
 import org.telegram.ui.Cells.HeaderCell;
@@ -251,6 +252,7 @@ public void onFragmentDestroy() {
 
     @Override
     public View createView(Context context) {
+        Theme.createSettingsResources();
         actionBar.setBackgroundColor(Theme.getColor(Theme.key_avatar_backgroundActionBarBlue));
         actionBar.setItemsBackgroundColor(Theme.getColor(Theme.key_avatar_actionBarSelectorBlue), false);
         actionBar.setItemsColor(Theme.getColor(Theme.key_avatar_actionBarIconBlue), false);
@@ -434,6 +436,59 @@ public boolean onItemClick(View view, int position) {
                     showDialog(builder.create());
                     return true;
                 }
+                if (position == numberRow) {
+                    TLRPC.User user = UserConfig.getInstance(currentAccount).getCurrentUser();
+                    if (user == null || TextUtils.isEmpty(user.phone)) {
+                        return false;
+                    }
+                    AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+                    builder.setItems(new CharSequence[]{LocaleController.getString("Call", R.string.Call), LocaleController.getString("Copy", R.string.Copy)}, (dialogInterface, which) -> {
+                        if (which == 0) {
+                            try {
+                                Intent intent = new Intent(Intent.ACTION_DIAL, Uri.parse("tel:+" + user.phone));
+                                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+                                getParentActivity().startActivityForResult(intent, 500);
+                            } catch (Exception e) {
+                                FileLog.e(e);
+                            }
+                        } else if (which == 1) {
+                            try {
+                                AndroidUtilities.addToClipboard("+" + user.phone);
+                                Toast.makeText(getParentActivity(), LocaleController.getString("PhoneCopied", R.string.PhoneCopied), Toast.LENGTH_SHORT).show();
+                            } catch (Exception e) {
+                                FileLog.e(e);
+                            }
+                        }
+                    });
+                    showDialog(builder.create());
+                    return true;
+                }
+                if (position == usernameRow) {
+                    TLRPC.User user = UserConfig.getInstance(currentAccount).getCurrentUser();
+                    if (user == null || TextUtils.isEmpty(user.username)) {
+                        return false;
+                    }
+                    try {
+                        AndroidUtilities.addToClipboard("@" + user.username);
+                        Toast.makeText(getParentActivity(), LocaleController.getString("TextCopied", R.string.TextCopied), Toast.LENGTH_SHORT).show();
+                    } catch (Exception e) {
+                        FileLog.e(e);
+                    }
+                    return true;
+                }
+                if (position == bioRow) {
+                    String about = userInfo != null ? userInfo.about: null;
+                    if (TextUtils.isEmpty(about)) {
+                        return false;
+                    }
+                    try {
+                        AndroidUtilities.addToClipboard(about);
+                        Toast.makeText(getParentActivity(), LocaleController.getString("TextCopied", R.string.TextCopied), Toast.LENGTH_SHORT).show();
+                    } catch (Exception e) {
+                        FileLog.e(e);
+                    }
+                    return true;
+                }
                 if (position == versionRow) {
                     pressCount++;
                     if (pressCount >= 2 || BuildVars.DEBUG_PRIVATE_VERSION) {
@@ -1773,6 +1828,55 @@ public void search(String text) {
         }
     }
 
+    private AboutLinkCell.AboutLinkCellDelegate aboutLinkCellDelegate = new AboutLinkCell.AboutLinkCellDelegate() {
+        @Override
+        public void onLinkPress(final String url) {
+            if (url.startsWith("@")) {
+                MessagesController.getInstance(currentAccount).openByUserName(url.substring(1), SettingsActivity.this, 0);
+            } else if (url.startsWith("#")) {
+                DialogsActivity fragment = new DialogsActivity(null);
+                fragment.setSearchString(url);
+                presentFragment(fragment);
+            } else if (url.startsWith("/")) {
+                if (parentLayout.fragmentsStack.size() > 1) {
+                    BaseFragment previousFragment = parentLayout.fragmentsStack.get(parentLayout.fragmentsStack.size() - 2);
+                    if (previousFragment instanceof ChatActivity) {
+                        finishFragment();
+                        ((ChatActivity) previousFragment).chatActivityEnterView.setCommand(null, url, false, false);
+                    }
+                }
+            } else {
+                Browser.openUrl(getParentActivity(), url);
+            }
+        }
+
+        @Override
+        public void onLinkLongPress(final String url) {
+            BottomSheet.Builder builder = new BottomSheet.Builder(getParentActivity());
+            builder.setTitle(url);
+            builder.setItems(new CharSequence[]{LocaleController.getString("Open", R.string.Open), LocaleController.getString("Copy", R.string.Copy)}, (dialog, which) -> {
+                if (which == 0) {
+                    onLinkPress(url);
+                } else if (which == 1) {
+                    String copyText = url;
+                    String toastText = LocaleController.getString("LinkCopied", R.string.LinkCopied);
+                    if (url.startsWith("mailto:")) {
+                        copyText = url.substring(7);
+                        toastText = LocaleController.getString("EmailCopied", R.string.EmailCopied);
+                    } else if (url.startsWith("tel:")) {
+                        copyText = url.substring(4);
+                        toastText = LocaleController.getString("PhoneCopied", R.string.PhoneCopied);
+                    } else if (url.startsWith("@") || url.startsWith("/") || url.startsWith("#")) {
+                        toastText = LocaleController.getString("TextCopied", R.string.TextCopied);
+                    }
+                    AndroidUtilities.addToClipboard(copyText);
+                    Toast.makeText(getParentActivity(), toastText, Toast.LENGTH_SHORT).show();
+                }
+            });
+            showDialog(builder.create());
+        }
+    };
+
     private class ListAdapter extends RecyclerListView.SelectionAdapter {
 
         private Context mContext;
@@ -1841,13 +1945,17 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                             value = LocaleController.getString("UsernameEmpty", R.string.UsernameEmpty);
                         }
                         textCell.setTextAndValue(value, LocaleController.getString("Username", R.string.Username), true);
-                    } else if (position == bioRow) {
-                        String value;
+                    }
+                    break;
+                }
+                case 7: {
+                    if (position == bioRow) {
+                        AboutLinkCell aboutLinkCell = (AboutLinkCell) holder.itemView;
                         if (userInfo == null || !TextUtils.isEmpty(userInfo.about)) {
-                            value = userInfo == null ? LocaleController.getString("Loading", R.string.Loading) : userInfo.about;
-                            textCell.setTextWithEmojiAndValue(value, LocaleController.getString("UserBio", R.string.UserBio), false);
+                            String value = userInfo == null ? LocaleController.getString("Loading", R.string.Loading) : userInfo.about;
+                            aboutLinkCell.setTextAndValue(value, LocaleController.getString("UserBio", R.string.UserBio), true);
                         } else {
-                            textCell.setTextAndValue(LocaleController.getString("UserBio", R.string.UserBio), LocaleController.getString("UserBioDetail", R.string.UserBioDetail), false);
+                            aboutLinkCell.setTextAndValue(LocaleController.getString("UserBio", R.string.UserBio), LocaleController.getString("UserBioDetail", R.string.UserBioDetail), false);
                         }
                     }
                     break;
@@ -1926,6 +2034,12 @@ public boolean isEnabled(RecyclerView.ViewHolder holder) {
                     view = new TextDetailCell(mContext);
                     view.setBackgroundColor(Theme.getColor(Theme.key_windowBackgroundWhite));
                     break;
+                case 7:
+                    AboutLinkCell aboutLinkCell = new AboutLinkCell(mContext);
+                    aboutLinkCell.setBackgroundColor(Theme.getColor(Theme.key_windowBackgroundWhite));
+                    aboutLinkCell.setDelegate(aboutLinkCellDelegate);
+                    view = aboutLinkCell;
+                    break;
             }
             view.setLayoutParams(new RecyclerView.LayoutParams(RecyclerView.LayoutParams.MATCH_PARENT, RecyclerView.LayoutParams.WRAP_CONTENT));
             return new RecyclerListView.Holder(view);
@@ -1942,8 +2056,10 @@ public int getItemViewType(int position) {
                 return 2;
             } else if (position == versionRow) {
                 return 5;
-            } else if (position == numberRow || position == usernameRow || position == bioRow) {
+            } else if (position == numberRow || position == usernameRow) {
                 return 6;
+            } else if (position == bioRow) {
+                return 7;
             } else if (position == settingsSectionRow2 || position == numberSectionRow) {
                 return 4;
             } else {
@@ -1986,6 +2102,10 @@ public int getItemViewType(int position) {
                 new ThemeDescription(listView, 0, new Class[]{TextDetailCell.class}, new String[]{"textView"}, null, null, null, Theme.key_windowBackgroundWhiteBlackText),
                 new ThemeDescription(listView, 0, new Class[]{TextDetailCell.class}, new String[]{"valueTextView"}, null, null, null, Theme.key_windowBackgroundWhiteGrayText2),
 
+                new ThemeDescription(listView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{AboutLinkCell.class}, Theme.settings_aboutTextPaint, null, null, Theme.key_windowBackgroundWhiteBlackText),
+                new ThemeDescription(listView, ThemeDescription.FLAG_LINKCOLOR, new Class[]{AboutLinkCell.class}, Theme.settings_aboutTextPaint, null, null, Theme.key_windowBackgroundWhiteLinkText),
+                new ThemeDescription(listView, 0, new Class[]{AboutLinkCell.class}, Theme.linkSelectionPaint, null, null, Theme.key_windowBackgroundWhiteLinkSelection),
+
                 new ThemeDescription(listView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{TextInfoPrivacyCell.class}, null, null, null, Theme.key_windowBackgroundGrayShadow),
                 new ThemeDescription(listView, 0, new Class[]{TextInfoPrivacyCell.class}, new String[]{"textView"}, null, null, null, Theme.key_windowBackgroundWhiteGrayText3),
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/VoIPActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/VoIPActivity.java
index 7884035a1..1dbd804a0 100755
--- a/TMessagesProj/src/main/java/org/telegram/ui/VoIPActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/VoIPActivity.java
@@ -995,7 +995,7 @@ public void run() {
                 }
                 if(callState==VoIPService.STATE_ESTABLISHED || callState==VoIPService.STATE_RECONNECTING){
                     long duration=VoIPService.getSharedInstance().getCallDuration()/1000;
-                    durationText.setText(duration>3600 ? String.format("%d:%02d:%02d", duration/3600, duration%3600/60, duration%60) : String.format("%d:%02d", duration/60, duration%60));
+                    durationText.setText(AndroidUtilities.formatShortDuration((int) duration));
                     durationText.postDelayed(this, 500);
                 }
             }
