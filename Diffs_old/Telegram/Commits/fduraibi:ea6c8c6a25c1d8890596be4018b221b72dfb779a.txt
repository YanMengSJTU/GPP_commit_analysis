diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index 7998b5637..52181cf0d 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -3,7 +3,7 @@ buildscript {
         mavenCentral()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:0.12.+'
+        classpath 'com.android.tools.build:gradle:0.13.+'
     }
 }
 apply plugin: 'com.android.application'
@@ -25,7 +25,7 @@ dependencies {
 
 android {
     compileSdkVersion 19
-    buildToolsVersion '19.1.0'
+    buildToolsVersion '20.0.0'
 
     signingConfigs {
         debug {
@@ -80,7 +80,7 @@ android {
     defaultConfig {
         minSdkVersion 8
         targetSdkVersion 19
-        versionCode 344
-        versionName "1.9.2"
+        versionCode 355
+        versionName "1.9.4"
     }
 }
diff --git a/TMessagesProj/src/main/AndroidManifest.xml b/TMessagesProj/src/main/AndroidManifest.xml
index f7bfaaa0c..b6a7aa8a3 100644
--- a/TMessagesProj/src/main/AndroidManifest.xml
+++ b/TMessagesProj/src/main/AndroidManifest.xml
@@ -147,6 +147,8 @@
             </intent-filter>
         </receiver>
 
+        <receiver android:name="org.telegram.android.WearReplyReceiver" android:enabled="true"/>
+
         <uses-library android:name="com.sec.android.app.multiwindow" android:required="false" />
         <meta-data android:name="com.sec.android.support.multiwindow" android:value="true" />
         <meta-data android:name="com.sec.android.multiwindow.DEFAULT_SIZE_W" android:value="632dp" />
diff --git a/TMessagesProj/src/main/java/org/telegram/android/AndroidUtilities.java b/TMessagesProj/src/main/java/org/telegram/android/AndroidUtilities.java
index 969d49959..1e64f97a5 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/AndroidUtilities.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/AndroidUtilities.java
@@ -35,8 +35,7 @@
     private static final Hashtable<String, Typeface> typefaceCache = new Hashtable<String, Typeface>();
     private static int prevOrientation = -10;
     private static boolean waitingForSms = false;
-    private static final Integer smsLock = 2;
-    public static int externalCacheNotAvailableState = 0;
+    private static final Object smsLock = new Object();
 
     public static int statusBarHeight = 0;
     public static float density = 1;
@@ -211,8 +210,7 @@ public static void hideKeyboard(View view) {
     }
 
     public static File getCacheDir() {
-        if (externalCacheNotAvailableState == 1 || externalCacheNotAvailableState == 0 && Environment.getExternalStorageState().startsWith(Environment.MEDIA_MOUNTED)) {
-            externalCacheNotAvailableState = 1;
+        if (Environment.getExternalStorageState().startsWith(Environment.MEDIA_MOUNTED)) {
             try {
                 File file = ApplicationLoader.applicationContext.getExternalCacheDir();
                 if (file != null) {
@@ -222,7 +220,6 @@ public static File getCacheDir() {
                 FileLog.e("tmessages", e);
             }
         }
-        externalCacheNotAvailableState = 2;
         try {
             File file = ApplicationLoader.applicationContext.getCacheDir();
             if (file != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/android/ContactsController.java b/TMessagesProj/src/main/java/org/telegram/android/ContactsController.java
index 6278d4e5d..c5dfd57bc 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/ContactsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/ContactsController.java
@@ -17,7 +17,6 @@
 import android.net.Uri;
 import android.provider.BaseColumns;
 import android.provider.ContactsContract;
-import android.provider.Settings;
 import android.util.SparseArray;
 
 import org.telegram.PhoneFormat.PhoneFormat;
@@ -41,15 +40,14 @@
 public class ContactsController {
     private Account currentAccount;
     private boolean loadingContacts = false;
-    private static final Integer loadContactsSync = 1;
+    private static final Object loadContactsSync = new Object();
     private boolean ignoreChanges = false;
     private boolean contactsSyncInProgress = false;
-    private final Integer observerLock = 1;
+    private final Object observerLock = new Object();
     public boolean contactsLoaded = false;
     private boolean contactsBookLoaded = false;
     private String lastContactsVersions = "";
     private ArrayList<Integer> delayedContactsUpdate = new ArrayList<Integer>();
-    public int nameDisplayOrder = 1;
 
     public static class Contact {
         public int id;
@@ -101,14 +99,6 @@ public static ContactsController getInstance() {
         return localInstance;
     }
 
-    public ContactsController() {
-        try {
-            nameDisplayOrder = Settings.System.getInt(ApplicationLoader.applicationContext.getContentResolver(), "android.contacts.DISPLAY_ORDER");
-        } catch (Exception e) {
-            //don't promt
-        }
-    }
-
     public void cleanup() {
         contactsBook.clear();
         contactsBookSPhones.clear();
@@ -1576,7 +1566,7 @@ public void run() {
 
     public static String formatName(String firstName, String lastName) {
         String result = null;
-        if (ContactsController.getInstance().nameDisplayOrder == 1) {
+        if (LocaleController.nameDisplayOrder == 1) {
             result = firstName;
             if (result == null || result.length() == 0) {
                 result = lastName;
diff --git a/TMessagesProj/src/main/java/org/telegram/android/GcmBroadcastReceiver.java b/TMessagesProj/src/main/java/org/telegram/android/GcmBroadcastReceiver.java
index ebd061984..04f282cb6 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/GcmBroadcastReceiver.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/GcmBroadcastReceiver.java
@@ -16,13 +16,11 @@
 import org.json.JSONObject;
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLog;
-import org.telegram.messenger.Utilities;
 import org.telegram.ui.ApplicationLoader;
 
 public class GcmBroadcastReceiver extends BroadcastReceiver {
 
     public static final int NOTIFICATION_ID = 1;
-    private static final Integer sync = 1;
 
     @Override
     public void onReceive(final Context context, final Intent intent) {
diff --git a/TMessagesProj/src/main/java/org/telegram/android/ImageLoader.java b/TMessagesProj/src/main/java/org/telegram/android/ImageLoader.java
index df84cb69e..f77805d43 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/ImageLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/ImageLoader.java
@@ -161,7 +161,7 @@ protected void onCancelled() {
 
     private class CacheOutTask implements Runnable {
         private Thread runningThread = null;
-        private final Integer sync = 1;
+        private final Object sync = new Object();
 
         private CacheImage cacheImage = null;
         private boolean isCancelled = false;
@@ -640,54 +640,77 @@ public void run() {
 
         try {
             if (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {
-                telegramPath = new File(Environment.getExternalStorageDirectory(), LocaleController.getString("AppName", R.string.AppName));
+                telegramPath = new File(Environment.getExternalStorageDirectory(), "Telegram");
                 telegramPath.mkdirs();
-                if (telegramPath.isDirectory()) {
-                    try {
-                        File imagePath = new File(telegramPath, LocaleController.getString("AppName", R.string.AppName) + " Images");
-                        imagePath.mkdir();
-                        if (imagePath.isDirectory()) {
-                            mediaDirs.put(FileLoader.MEDIA_DIR_IMAGE, imagePath);
-                            FileLog.e("tmessages", "image path = " + imagePath);
+
+                boolean canRename = false;
+
+                try {
+                    for (int a = 0; a < 5; a++) {
+                        File srcFile = new File(cachePath, "temp.file");
+                        srcFile.createNewFile();
+                        File dstFile = new File(telegramPath, "temp.file");
+                        canRename = srcFile.renameTo(dstFile);
+                        srcFile.delete();
+                        dstFile.delete();
+                        if (canRename) {
+                            break;
                         }
-                    } catch (Exception e) {
-                        FileLog.e("tmessages", e);
                     }
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e);
+                }
 
-                    try {
-                        File videoPath = new File(telegramPath, LocaleController.getString("AppName", R.string.AppName) + " Video");
-                        videoPath.mkdir();
-                        if (videoPath.isDirectory()) {
-                            mediaDirs.put(FileLoader.MEDIA_DIR_VIDEO, videoPath);
-                            FileLog.e("tmessages", "video path = " + videoPath);
+                if (canRename) {
+                    if (telegramPath.isDirectory()) {
+                        try {
+                            File imagePath = new File(telegramPath, "Telegram Images");
+                            imagePath.mkdir();
+                            if (imagePath.isDirectory()) {
+                                mediaDirs.put(FileLoader.MEDIA_DIR_IMAGE, imagePath);
+                                FileLog.e("tmessages", "image path = " + imagePath);
+                            }
+                        } catch (Exception e) {
+                            FileLog.e("tmessages", e);
                         }
-                    } catch (Exception e) {
-                        FileLog.e("tmessages", e);
-                    }
 
-                    try {
-                        File audioPath = new File(telegramPath, LocaleController.getString("AppName", R.string.AppName) + " Audio");
-                        audioPath.mkdir();
-                        if (audioPath.isDirectory()) {
-                            new File(audioPath, ".nomedia").createNewFile();
-                            mediaDirs.put(FileLoader.MEDIA_DIR_AUDIO, audioPath);
-                            FileLog.e("tmessages", "audio path = " + audioPath);
+                        try {
+                            File videoPath = new File(telegramPath, "Telegram Video");
+                            videoPath.mkdir();
+                            if (videoPath.isDirectory()) {
+                                mediaDirs.put(FileLoader.MEDIA_DIR_VIDEO, videoPath);
+                                FileLog.e("tmessages", "video path = " + videoPath);
+                            }
+                        } catch (Exception e) {
+                            FileLog.e("tmessages", e);
                         }
-                    } catch (Exception e) {
-                        FileLog.e("tmessages", e);
-                    }
 
-                    try {
-                        File documentPath = new File(telegramPath, LocaleController.getString("AppName", R.string.AppName) + " Documents");
-                        documentPath.mkdir();
-                        if (documentPath.isDirectory()) {
-                            new File(documentPath, ".nomedia").createNewFile();
-                            mediaDirs.put(FileLoader.MEDIA_DIR_DOCUMENT, documentPath);
-                            FileLog.e("tmessages", "documents path = " + documentPath);
+                        try {
+                            File audioPath = new File(telegramPath, "Telegram Audio");
+                            audioPath.mkdir();
+                            if (audioPath.isDirectory()) {
+                                new File(audioPath, ".nomedia").createNewFile();
+                                mediaDirs.put(FileLoader.MEDIA_DIR_AUDIO, audioPath);
+                                FileLog.e("tmessages", "audio path = " + audioPath);
+                            }
+                        } catch (Exception e) {
+                            FileLog.e("tmessages", e);
+                        }
+
+                        try {
+                            File documentPath = new File(telegramPath, "Telegram Documents");
+                            documentPath.mkdir();
+                            if (documentPath.isDirectory()) {
+                                new File(documentPath, ".nomedia").createNewFile();
+                                mediaDirs.put(FileLoader.MEDIA_DIR_DOCUMENT, documentPath);
+                                FileLog.e("tmessages", "documents path = " + documentPath);
+                            }
+                        } catch (Exception e) {
+                            FileLog.e("tmessages", e);
                         }
-                    } catch (Exception e) {
-                        FileLog.e("tmessages", e);
                     }
+                } else {
+                    FileLog.e("tmessages", "this Android can't rename files");
                 }
             }
             MediaController.getInstance().checkSaveToGalleryFiles();
@@ -809,7 +832,7 @@ public void run() {
         });
     }
 
-    public void loadImage(final TLRPC.FileLocation fileLocation, final String httpUrl, final ImageReceiver imageView, final int size) {
+    public void loadImage(final TLRPC.FileLocation fileLocation, final String httpUrl, final ImageReceiver imageView, final int size, final boolean cacheOnly) {
         if ((fileLocation == null && httpUrl == null) || imageView == null || (fileLocation != null && !(fileLocation instanceof TLRPC.TL_fileLocation) && !(fileLocation instanceof TLRPC.TL_fileEncryptedLocation))) {
             return;
         }
@@ -861,7 +884,7 @@ public void loadImage(final TLRPC.FileLocation fileLocation, final String httpUr
         if (!added) {
             boolean onlyCache = false;
             File cacheFile = null;
-            if (size == 0 || httpUrl != null || fileLocation != null && (fileLocation.key != null || fileLocation.volume_id == Integer.MIN_VALUE && fileLocation.local_id < 0)) {
+            if (cacheOnly || size == 0 || httpUrl != null || fileLocation != null && (fileLocation.key != null || fileLocation.volume_id == Integer.MIN_VALUE && fileLocation.local_id < 0)) {
                 cacheFile = new File(FileLoader.getInstance().getDirectory(FileLoader.MEDIA_DIR_CACHE), url);
             } else {
                 cacheFile = new File(FileLoader.getInstance().getDirectory(FileLoader.MEDIA_DIR_IMAGE), url);
@@ -898,7 +921,7 @@ public void loadImage(final TLRPC.FileLocation fileLocation, final String httpUr
                 img.addImageView(imageView);
                 imageLoadingByUrl.put(url, img);
                 if (httpUrl == null) {
-                    FileLoader.getInstance().loadFile(fileLocation, size, size == 0 || fileLocation.key != null);
+                    FileLoader.getInstance().loadFile(fileLocation, size, size == 0 || fileLocation.key != null || cacheOnly);
                 } else {
                     String file = Utilities.MD5(httpUrl);
                     File cacheDir = FileLoader.getInstance().getDirectory(FileLoader.MEDIA_DIR_CACHE);
diff --git a/TMessagesProj/src/main/java/org/telegram/android/ImageReceiver.java b/TMessagesProj/src/main/java/org/telegram/android/ImageReceiver.java
index dc245900e..d371cab87 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/ImageReceiver.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/ImageReceiver.java
@@ -34,6 +34,7 @@
     private Rect drawRegion = new Rect();
     private boolean isVisible = true;
     private boolean isAspectFit = false;
+    private boolean lastCacheOnly = false;
 
     public ImageReceiver() {
 
@@ -43,19 +44,19 @@ public ImageReceiver(View view) {
         parentView = view;
     }
 
-    public void setImage(TLRPC.FileLocation path, String filter, Drawable placeholder) {
-        setImage(path, null, filter, placeholder, 0);
+    public void setImage(TLRPC.FileLocation path, String filter, Drawable placeholder, boolean cacheOnly) {
+        setImage(path, null, filter, placeholder, 0, cacheOnly);
     }
 
-    public void setImage(TLRPC.FileLocation path, String filter, Drawable placeholder, int size) {
-        setImage(path, null, filter, placeholder, size);
+    public void setImage(TLRPC.FileLocation path, String filter, Drawable placeholder, int size, boolean cacheOnly) {
+        setImage(path, null, filter, placeholder, size, cacheOnly);
     }
 
     public void setImage(String path, String filter, Drawable placeholder) {
-        setImage(null, path, filter, placeholder, 0);
+        setImage(null, path, filter, placeholder, 0, true);
     }
 
-    public void setImage(TLRPC.FileLocation fileLocation, String httpUrl, String filter, Drawable placeholder, int size) {
+    public void setImage(TLRPC.FileLocation fileLocation, String httpUrl, String filter, Drawable placeholder, int size, boolean cacheOnly) {
         if ((fileLocation == null && httpUrl == null) || (fileLocation != null && !(fileLocation instanceof TLRPC.TL_fileLocation) && !(fileLocation instanceof TLRPC.TL_fileEncryptedLocation))) {
             recycleBitmap(null);
             currentPath = null;
@@ -63,6 +64,7 @@ public void setImage(TLRPC.FileLocation fileLocation, String httpUrl, String fil
             last_path = null;
             last_httpUrl = null;
             last_filter = null;
+            lastCacheOnly = false;
             last_placeholder = placeholder;
             last_size = 0;
             currentImage = null;
@@ -101,9 +103,10 @@ public void setImage(TLRPC.FileLocation fileLocation, String httpUrl, String fil
         last_filter = filter;
         last_placeholder = placeholder;
         last_size = size;
+        lastCacheOnly = cacheOnly;
         if (img == null) {
             isPlaceholder = true;
-            ImageLoader.getInstance().loadImage(fileLocation, httpUrl, this, size);
+            ImageLoader.getInstance().loadImage(fileLocation, httpUrl, this, size, cacheOnly);
         } else {
             setImageBitmap(img, currentPath);
         }
@@ -136,6 +139,7 @@ public void setImageBitmap(Bitmap bitmap) {
         last_filter = null;
         currentImage = null;
         last_size = 0;
+        lastCacheOnly = false;
         if (parentView != null) {
             parentView.invalidate();
         }
@@ -152,6 +156,7 @@ public void setImageBitmap(Drawable bitmap) {
         last_httpUrl = null;
         last_filter = null;
         last_size = 0;
+        lastCacheOnly = false;
         if (parentView != null) {
             parentView.invalidate();
         }
@@ -213,7 +218,7 @@ public boolean draw(Canvas canvas, int x, int y, int w, int h) {
                             ImageLoader.getInstance().removeImage(currentPath);
                             currentPath = null;
                         }
-                        setImage(last_path, last_httpUrl, last_filter, last_placeholder, last_size);
+                        setImage(last_path, last_httpUrl, last_filter, last_placeholder, last_size, lastCacheOnly);
                         FileLog.e("tmessages", e);
                     }
                     canvas.restore();
@@ -238,7 +243,7 @@ public boolean draw(Canvas canvas, int x, int y, int w, int h) {
                                     ImageLoader.getInstance().removeImage(currentPath);
                                     currentPath = null;
                                 }
-                                setImage(last_path, last_httpUrl, last_filter, last_placeholder, last_size);
+                                setImage(last_path, last_httpUrl, last_filter, last_placeholder, last_size, lastCacheOnly);
                                 FileLog.e("tmessages", e);
                             }
                         }
@@ -255,7 +260,7 @@ public boolean draw(Canvas canvas, int x, int y, int w, int h) {
                                     ImageLoader.getInstance().removeImage(currentPath);
                                     currentPath = null;
                                 }
-                                setImage(last_path, last_httpUrl, last_filter, last_placeholder, last_size);
+                                setImage(last_path, last_httpUrl, last_filter, last_placeholder, last_size, lastCacheOnly);
                                 FileLog.e("tmessages", e);
                             }
                         }
@@ -273,7 +278,7 @@ public boolean draw(Canvas canvas, int x, int y, int w, int h) {
                             ImageLoader.getInstance().removeImage(currentPath);
                             currentPath = null;
                         }
-                        setImage(last_path, last_httpUrl, last_filter, last_placeholder, last_size);
+                        setImage(last_path, last_httpUrl, last_filter, last_placeholder, last_size, lastCacheOnly);
                         FileLog.e("tmessages", e);
                     }
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/LocaleController.java b/TMessagesProj/src/main/java/org/telegram/android/LocaleController.java
index c582bc0e4..06a4cb05e 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/LocaleController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/LocaleController.java
@@ -47,6 +47,7 @@
     static final int QUANTITY_MANY = 0x0010;
 
     public static boolean isRTL = false;
+    public static int nameDisplayOrder = 1;
     private static boolean is24HourFormat = false;
     public static FastDateFormat formatterDay;
     public static FastDateFormat formatterWeek;
@@ -74,7 +75,7 @@ public void onReceive(Context context, Intent intent) {
                 @Override
                 public void run() {
                     if (!formatterMonth.getTimeZone().equals(TimeZone.getDefault())) {
-                        LocaleController.recreateFormatters();
+                        LocaleController.getInstance().recreateFormatters();
                     }
                 }
             });
@@ -215,6 +216,14 @@ public LocaleController() {
         sortedLanguages.add(localeInfo);
         languagesDict.put(localeInfo.shortName, localeInfo);
 
+        localeInfo = new LocaleInfo();
+        localeInfo.name = "한국어";
+        localeInfo.nameEnglish = "Korean";
+        localeInfo.shortName = "ko";
+        localeInfo.pathToFile = null;
+        sortedLanguages.add(localeInfo);
+        languagesDict.put(localeInfo.shortName, localeInfo);
+
         loadOtherLanguages();
 
         for (LocaleInfo locale : otherLanguages) {
@@ -509,6 +518,19 @@ public void applyLanguage(LocaleInfo localeInfo, boolean override, boolean fromF
                 SharedPreferences.Editor editor = preferences.edit();
                 editor.remove("language");
                 editor.commit();
+
+                if (newLocale != null) {
+                    LocaleInfo info = null;
+                    if (newLocale.getLanguage() != null) {
+                        info = languagesDict.get(newLocale.getLanguage());
+                    }
+                    if (info == null) {
+                        info = languagesDict.get(getLocaleString(newLocale));
+                    }
+                    if (info == null) {
+                        newLocale = Locale.US;
+                    }
+                }
             }
             if (newLocale != null) {
                 if (localeInfo.pathToFile == null) {
@@ -541,14 +563,18 @@ public static String getCurrentLanguageName() {
         return getString("LanguageName", R.string.LanguageName);
     }
 
-    public static String getString(String key, int res) {
-        String value = getInstance().localeValues.get(key);
+    private String getStringInternal(String key, int res) {
+        String value = localeValues.get(key);
         if (value == null) {
             value = ApplicationLoader.applicationContext.getString(res);
         }
         return value;
     }
 
+    public static String getString(String key, int res) {
+        return getInstance().getStringInternal(key, res);
+    }
+
     public static String formatPluralString(String key, int plural) {
         if (key == null || key.length() == 0 || getInstance().currentPluralRules == null) {
             return "LOC_ERR:" + key;
@@ -658,52 +684,77 @@ public static String formatDateOnline(long date) {
         } else if (dateDay + 1 == day && year == dateYear) {
             return String.format("%s %s %s", LocaleController.getString("LastSeen", R.string.LastSeen), LocaleController.getString("YesterdayAt", R.string.YesterdayAt), formatterDay.format(new Date(date * 1000)));
         } else if (year == dateYear) {
-            return String.format("%s %s %s %s", LocaleController.getString("LastSeenDate", R.string.LastSeenDate), formatterMonth.format(new Date(date * 1000)), LocaleController.getString("OtherAt", R.string.OtherAt), formatterDay.format(new Date(date * 1000)));
+            String format = LocaleController.formatString("formatDateAtTime", R.string.formatDateAtTime, formatterMonth.format(new Date(date * 1000)), formatterDay.format(new Date(date * 1000)));
+            return String.format("%s %s", LocaleController.getString("LastSeenDate", R.string.LastSeenDate), format);
         } else {
-            return String.format("%s %s %s %s", LocaleController.getString("LastSeenDate", R.string.LastSeenDate), formatterYear.format(new Date(date * 1000)), LocaleController.getString("OtherAt", R.string.OtherAt), formatterDay.format(new Date(date * 1000)));
+            String format = LocaleController.formatString("formatDateAtTime", R.string.formatDateAtTime, formatterYear.format(new Date(date * 1000)), formatterDay.format(new Date(date * 1000)));
+            return String.format("%s %s", LocaleController.getString("LastSeenDate", R.string.LastSeenDate), format);
         }
     }
 
-    public static void recreateFormatters() {
-        Locale locale = Locale.getDefault();
+    public void recreateFormatters() {
+        Locale locale = currentLocale;
+        if (locale == null) {
+            locale = Locale.getDefault();
+        }
         String lang = locale.getLanguage();
         if (lang == null) {
             lang = "en";
         }
         isRTL = lang.toLowerCase().equals("ar");
-        if (lang.equals("en")) {
-            formatterMonth = FastDateFormat.getInstance("MMM dd", locale);
-            formatterYear = FastDateFormat.getInstance("dd.MM.yy", locale);
-            formatterYearMax = FastDateFormat.getInstance("dd.MM.yyyy", locale);
-            chatDate = FastDateFormat.getInstance("MMMM d", locale);
-            chatFullDate = FastDateFormat.getInstance("MMMM d, yyyy", locale);
-        } else if (lang.startsWith("es")) {
-            formatterMonth = FastDateFormat.getInstance("dd 'de' MMM", locale);
-            formatterYear = FastDateFormat.getInstance("dd.MM.yy", locale);
-            formatterYearMax = FastDateFormat.getInstance("dd.MM.yyyy", locale);
-            chatDate = FastDateFormat.getInstance("d 'de' MMMM", locale);
-            chatFullDate = FastDateFormat.getInstance("d 'de' MMMM 'de' yyyy", locale);
-        } else {
-            formatterMonth = FastDateFormat.getInstance("dd MMM", locale);
-            formatterYear = FastDateFormat.getInstance("dd.MM.yy", locale);
-            formatterYearMax = FastDateFormat.getInstance("dd.MM.yyyy", locale);
-            chatDate = FastDateFormat.getInstance("d MMMM", locale);
-            chatFullDate = FastDateFormat.getInstance("d MMMM yyyy", locale);
+        nameDisplayOrder = lang.toLowerCase().equals("ko") ? 2 : 1;
+        String formatString = getStringInternal("formatterMonth", R.string.formatterMonth);
+        if (formatString == null || formatString.length() == 0) {
+            formatString = "dd MMM";
         }
-        formatterWeek = FastDateFormat.getInstance("EEE", locale);
+        formatterMonth = FastDateFormat.getInstance(formatString, locale);
 
-        if (lang != null) {
+        formatString = getStringInternal("formatterYear", R.string.formatterYear);
+        if (formatString == null || formatString.length() == 0) {
+            formatString = "dd.MM.yy";
+        }
+        formatterYear = FastDateFormat.getInstance(formatString, locale);
+
+        formatString = getStringInternal("formatterYearMax", R.string.formatterYearMax);
+        if (formatString == null || formatString.length() == 0) {
+            formatString = "dd.MM.yyyy";
+        }
+        formatterYearMax = FastDateFormat.getInstance(formatString, locale);
+
+        formatString = getStringInternal("chatDate", R.string.chatDate);
+        if (formatString == null || formatString.length() == 0) {
+            formatString = "d MMMM";
+        }
+        chatDate = FastDateFormat.getInstance(formatString, locale);
+
+        formatString = getStringInternal("chatFullDate", R.string.chatFullDate);
+        if (formatString == null || formatString.length() == 0) {
+            formatString = "d MMMM yyyy";
+        }
+        chatFullDate = FastDateFormat.getInstance(formatString, locale);
+
+        formatString = getStringInternal("formatterWeek", R.string.formatterWeek);
+        if (formatString == null || formatString.length() == 0) {
+            formatString = "EEE";
+        }
+        formatterWeek = FastDateFormat.getInstance(formatString, locale);
+
+        if (is24HourFormat) {
+            formatString = getStringInternal("formatterDay24H", R.string.formatterDay24H);
+        } else {
+            formatString = getStringInternal("formatterDay12H", R.string.formatterDay12H);
+        }
+        if (formatString == null || formatString.length() == 0) {
             if (is24HourFormat) {
-                formatterDay = FastDateFormat.getInstance("HH:mm", locale);
+                formatString = "HH:mm";
             } else {
-                if (lang.toLowerCase().equals("ar")) {
-                    formatterDay = FastDateFormat.getInstance("h:mm a", locale);
-                } else {
-                    formatterDay = FastDateFormat.getInstance("h:mm a", Locale.US);
-                }
+                formatString = "h:mm a";
             }
+        }
+        if (lang.toLowerCase().equals("ar") || lang.toLowerCase().equals("ko")) {
+            formatterDay = FastDateFormat.getInstance(formatString, locale);
         } else {
-            formatterDay = FastDateFormat.getInstance("h:mm a", Locale.US);
+            formatterDay = FastDateFormat.getInstance(formatString, Locale.US);
         }
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/android/MediaController.java b/TMessagesProj/src/main/java/org/telegram/android/MediaController.java
index f68def86a..48e974fe5 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MediaController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MediaController.java
@@ -144,7 +144,7 @@ public PhotoEntry(int bucketId, int imageId, long dateTaken, String path, int or
         }
     }
 
-    private final static String MIME_TYPE = "video/avc";
+    public final static String MIME_TYPE = "video/avc";
     private final static int PROCESSOR_TYPE_OTHER = 0;
     private final static int PROCESSOR_TYPE_QCOM = 1;
     private final static int PROCESSOR_TYPE_INTEL = 2;
@@ -196,7 +196,7 @@ public PhotoEntry(int bucketId, int imageId, long dateTaken, String path, int or
     private long lastPlayPcm;
     private int ignoreFirstProgress = 0;
     private Timer progressTimer = null;
-    private final Integer progressTimerSync = 1;
+    private final Object progressTimerSync = new Object();
 
     private AudioRecord audioRecorder = null;
     private TLRPC.TL_audio recordingAudio = null;
@@ -208,10 +208,10 @@ public PhotoEntry(int bucketId, int imageId, long dateTaken, String path, int or
     private DispatchQueue playerQueue;
     private ArrayList<AudioBuffer> usedPlayerBuffers = new ArrayList<AudioBuffer>();
     private ArrayList<AudioBuffer> freePlayerBuffers = new ArrayList<AudioBuffer>();
-    private final Integer playerSync = 2;
-    private final Integer playerObjectSync = 3;
+    private final Object playerSync = new Object();
+    private final Object playerObjectSync = new Object();
 
-    private final Integer sync = 1;
+    private final Object sync = new Object();
 
     private ArrayList<ByteBuffer> recordBuffers = new ArrayList<ByteBuffer>();
     private ByteBuffer fileBuffer;
@@ -1799,10 +1799,10 @@ public void toggleSaveToGallery() {
 
     public void checkSaveToGalleryFiles() {
         try {
-            File telegramPath = new File(Environment.getExternalStorageDirectory(), LocaleController.getString("AppName", R.string.AppName));
-            File imagePath = new File(telegramPath, LocaleController.getString("AppName", R.string.AppName) + " Images");
+            File telegramPath = new File(Environment.getExternalStorageDirectory(), "Telegram");
+            File imagePath = new File(telegramPath, "Telegram Images");
             imagePath.mkdir();
-            File videoPath = new File(telegramPath, LocaleController.getString("AppName", R.string.AppName) + " Video");
+            File videoPath = new File(telegramPath, "Telegram Video");
             videoPath.mkdir();
 
             if (saveToGallery) {
@@ -1946,7 +1946,7 @@ private void startVideoConvertFromQueue() {
         }
     }
 
-    private static MediaCodecInfo selectCodec(String mimeType) {
+    public static MediaCodecInfo selectCodec(String mimeType) {
         int numCodecs = MediaCodecList.getCodecCount();
         MediaCodecInfo lastCodecInfo = null;
         for (int i = 0; i < numCodecs; i++) {
@@ -1982,7 +1982,7 @@ private static boolean isRecognizedFormat(int colorFormat) {
         }
     }
 
-    private static int selectColorFormat(MediaCodecInfo codecInfo, String mimeType) {
+    public static int selectColorFormat(MediaCodecInfo codecInfo, String mimeType) {
         MediaCodecInfo.CodecCapabilities capabilities = codecInfo.getCapabilitiesForType(mimeType);
         int lastColorFormat = 0;
         for (int i = 0; i < capabilities.colorFormats.length; i++) {
diff --git a/TMessagesProj/src/main/java/org/telegram/android/MessageObject.java b/TMessagesProj/src/main/java/org/telegram/android/MessageObject.java
index c41114a0a..36899d62f 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MessageObject.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MessageObject.java
@@ -217,7 +217,7 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
                         }
                     }
                 } else if (message.action instanceof TLRPC.TL_messageActionLoginUnknownLocation) {
-                    String date = String.format("%s %s %s", LocaleController.formatterYear.format(((long)message.date) * 1000), LocaleController.getString("OtherAt", R.string.OtherAt), LocaleController.formatterDay.format(((long)message.date) * 1000));
+                    String date = LocaleController.formatString("formatDateAtTime", R.string.formatDateAtTime, LocaleController.formatterYear.format(((long)message.date) * 1000), LocaleController.formatterDay.format(((long)message.date) * 1000));
                     TLRPC.User to_user = UserConfig.getCurrentUser();
                     if (to_user == null) {
                         if (users != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
index 5a3951682..ba6cd5cc2 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
@@ -1241,7 +1241,7 @@ public void sendTyping(final long dialog_id, int classGuid) {
                     return;
                 }
             }
-            req.typing = true;
+            req.action = new TLRPC.TL_sendMessageTypingAction();
             sendingTypings.put(dialog_id, true);
             long reqId = ConnectionsManager.getInstance().performRpc(req, new RPCRequest.RPCRequestDelegate() {
                 @Override
@@ -1648,7 +1648,7 @@ public void markDialogAsRead(final long dialog_id, final int max_id, final int m
         int high_id = (int)(dialog_id >> 32);
 
         if (lower_part != 0) {
-            if (max_id == 0 && offset == 0 || high_id == 1) {
+            if (max_positive_id == 0 && offset == 0 || high_id == 1) {
                 return;
             }
             TLRPC.TL_messages_readHistory req = new TLRPC.TL_messages_readHistory();
@@ -1668,6 +1668,7 @@ public void markDialogAsRead(final long dialog_id, final int max_id, final int m
             }
             req.max_id = max_positive_id;
             req.offset = offset;
+            req.read_contents = true;
             if (offset == 0) {
                 MessagesStorage.getInstance().processPendingRead(dialog_id, max_positive_id, max_date, false);
                 MessagesStorage.getInstance().storageQueue.postRunnable(new Runnable() {
@@ -1712,17 +1713,6 @@ public void run(TLObject response, TLRPC.TL_error error) {
                     }
                 });
             }
-
-            if (offset == 0) {
-                TLRPC.TL_messages_receivedMessages req2 = new TLRPC.TL_messages_receivedMessages();
-                req2.max_id = max_positive_id;
-                ConnectionsManager.getInstance().performRpc(req2, new RPCRequest.RPCRequestDelegate() {
-                    @Override
-                    public void run(TLObject response, TLRPC.TL_error error) {
-
-                    }
-                }, true, RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassFailOnServerErrors);
-            }
         } else {
             if (max_date == 0) {
                 return;
@@ -1967,7 +1957,7 @@ public void run() {
         }
     }
 
-    public void deleteUserFromChat(int chat_id, final TLRPC.User user, final TLRPC.ChatParticipants info) {
+    public void deleteUserFromChat(final int chat_id, final TLRPC.User user, final TLRPC.ChatParticipants info) {
         if (user == null) {
             return;
         }
@@ -2008,9 +1998,13 @@ public void run() {
                                     }
                                 }
                                 if (changed) {
-                                    MessagesStorage.getInstance().updateChatInfo(info.chat_id, info, true);
+                                    MessagesStorage.getInstance().updateChatInfo(chat_id, info, true);
                                     NotificationCenter.getInstance().postNotificationName(NotificationCenter.chatInfoDidLoaded, info.chat_id, info);
+                                } else {
+                                    MessagesStorage.getInstance().updateChatInfo(chat_id, user.id, true, 0, 0);
                                 }
+                            } else {
+                                MessagesStorage.getInstance().updateChatInfo(chat_id, user.id, true, 0, 0);
                             }
                         }
                     });
@@ -2575,6 +2569,7 @@ public void processUpdates(final TLRPC.Updates updates, boolean fromQueue) {
                     message.to_id.chat_id = updates.chat_id;
                     message.message = updates.message;
                     message.date = updates.date;
+                    message.flags = TLRPC.MESSAGE_FLAG_UNREAD;
                     message.unread = true;
                     message.media = new TLRPC.TL_messageMediaEmpty();
                     MessagesStorage.lastSeqValue = updates.seq;
@@ -2641,6 +2636,7 @@ public void run() {
                     message.message = updates.message;
                     message.date = updates.date;
                     message.unread = true;
+                    message.flags = TLRPC.MESSAGE_FLAG_UNREAD;
                     message.media = new TLRPC.TL_messageMediaEmpty();
                     MessagesStorage.lastSeqValue = updates.seq;
                     MessagesStorage.lastPtsValue = updates.pts;
@@ -2873,7 +2869,7 @@ public void run() {
             } else if (update instanceof TLRPC.TL_updateRestoreMessages) {
                 MessagesStorage.lastPtsValue = update.pts;
             } else if (update instanceof TLRPC.TL_updateUserTyping || update instanceof TLRPC.TL_updateChatUserTyping) {
-                if (update.user_id != UserConfig.getClientUserId()) {
+                if (update.action instanceof TLRPC.TL_sendMessageTypingAction && update.user_id != UserConfig.getClientUserId()) {
                     long uid = -update.chat_id;
                     if (uid == 0) {
                         uid = update.user_id;
@@ -2919,6 +2915,7 @@ public void run() {
                     newMessage.local_id = newMessage.id = UserConfig.getNewMessageId();
                     UserConfig.saveConfig(false);
                     newMessage.unread = true;
+                    newMessage.flags = TLRPC.MESSAGE_FLAG_UNREAD;
                     newMessage.date = update.date;
                     newMessage.from_id = update.user_id;
                     newMessage.to_id = new TLRPC.TL_peerUser();
@@ -2964,6 +2961,7 @@ public void run() {
                 newMessage.local_id = newMessage.id = UserConfig.getNewMessageId();
                 UserConfig.saveConfig(false);
                 newMessage.unread = true;
+                newMessage.flags = TLRPC.MESSAGE_FLAG_UNREAD;
                 newMessage.date = update.date;
                 newMessage.from_id = 777000;
                 newMessage.to_id = new TLRPC.TL_peerUser();
@@ -3509,6 +3507,7 @@ public int compare(TLRPC.TL_dialog tl_dialog, TLRPC.TL_dialog tl_dialog2) {
                     newMessage.to_id = new TLRPC.TL_peerUser();
                     newMessage.random_id = message.random_id;
                     newMessage.to_id.user_id = UserConfig.getClientUserId();
+                    newMessage.flags = TLRPC.MESSAGE_FLAG_UNREAD;
                     newMessage.out = false;
                     newMessage.unread = true;
                     newMessage.dialog_id = ((long)chat.id) << 32;
@@ -3657,6 +3656,7 @@ public int compare(TLRPC.TL_dialog tl_dialog, TLRPC.TL_dialog tl_dialog2) {
                         }
                         newMessage.local_id = newMessage.id = UserConfig.getNewMessageId();
                         UserConfig.saveConfig(false);
+                        newMessage.flags = TLRPC.MESSAGE_FLAG_UNREAD;
                         newMessage.unread = true;
                         newMessage.date = message.date;
                         newMessage.from_id = from_id;
diff --git a/TMessagesProj/src/main/java/org/telegram/android/MessagesStorage.java b/TMessagesProj/src/main/java/org/telegram/android/MessagesStorage.java
index 6b0459eb9..9661cc6e8 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MessagesStorage.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MessagesStorage.java
@@ -1213,23 +1213,19 @@ public void run() {
                     SQLiteCursor cursor = database.queryFinalized("SELECT u.data, u.status, u.name FROM users as u INNER JOIN contacts as c ON u.uid = c.uid");
                     while (cursor.next()) {
                         String name = cursor.stringValue(2);
-                        String[] args = name.split(" ");
-                        for (String str : args) {
-                            if (str.startsWith(q)) {
-                                ByteBufferDesc data = buffersStorage.getFreeBuffer(cursor.byteArrayLength(0));
-                                if (data != null && cursor.byteBufferValue(0, data.buffer) != 0) {
-                                    TLRPC.User user = (TLRPC.User)TLClassStore.Instance().TLdeserialize(data, data.readInt32());
-                                    if (user.id != UserConfig.getClientUserId()) {
-                                        if (user.status != null) {
-                                            user.status.expires = cursor.intValue(1);
-                                        }
-                                        resultArrayNames.add(Utilities.generateSearchName(user.first_name, user.last_name, q));
-                                        resultArray.add(user);
+                        if (name.startsWith(q) || name.contains(" " + q)) {
+                            ByteBufferDesc data = buffersStorage.getFreeBuffer(cursor.byteArrayLength(0));
+                            if (data != null && cursor.byteBufferValue(0, data.buffer) != 0) {
+                                TLRPC.User user = (TLRPC.User)TLClassStore.Instance().TLdeserialize(data, data.readInt32());
+                                if (user.id != UserConfig.getClientUserId()) {
+                                    if (user.status != null) {
+                                        user.status.expires = cursor.intValue(1);
                                     }
+                                    resultArrayNames.add(Utilities.generateSearchName(user.first_name, user.last_name, q));
+                                    resultArray.add(user);
                                 }
-                                buffersStorage.reuseFreeBuffer(data);
-                                break;
                             }
+                            buffersStorage.reuseFreeBuffer(data);
                         }
                     }
                     cursor.dispose();
@@ -1238,30 +1234,26 @@ public void run() {
                         cursor = database.queryFinalized("SELECT q.data, q.name, q.user, q.g, q.authkey, q.ttl, u.data, u.status FROM enc_chats as q INNER JOIN dialogs as d ON (q.uid << 32) = d.did INNER JOIN users as u ON q.user = u.uid");
                         while (cursor.next()) {
                             String name = cursor.stringValue(1);
-                            String[] args = name.split(" ");
-                            for (String arg : args) {
-                                if (arg.startsWith(q)) {
-                                    ByteBufferDesc data = buffersStorage.getFreeBuffer(cursor.byteArrayLength(0));
-                                    ByteBufferDesc data2 = buffersStorage.getFreeBuffer(cursor.byteArrayLength(6));
-                                    if (data != null && cursor.byteBufferValue(0, data.buffer) != 0 && cursor.byteBufferValue(6, data2.buffer) != 0) {
-                                        TLRPC.EncryptedChat chat = (TLRPC.EncryptedChat) TLClassStore.Instance().TLdeserialize(data, data.readInt32());
-                                        chat.user_id = cursor.intValue(2);
-                                        chat.a_or_b = cursor.byteArrayValue(3);
-                                        chat.auth_key = cursor.byteArrayValue(4);
-                                        chat.ttl = cursor.intValue(5);
-
-                                        TLRPC.User user = (TLRPC.User)TLClassStore.Instance().TLdeserialize(data2, data2.readInt32());
-                                        if (user.status != null) {
-                                            user.status.expires = cursor.intValue(7);
-                                        }
-                                        resultArrayNames.add(Html.fromHtml("<font color=\"#00a60e\">" + ContactsController.formatName(user.first_name, user.last_name) + "</font>"));
-                                        resultArray.add(chat);
-                                        encUsers.add(user);
+                            if (name.startsWith(q) || name.contains(" " + q)) {
+                                ByteBufferDesc data = buffersStorage.getFreeBuffer(cursor.byteArrayLength(0));
+                                ByteBufferDesc data2 = buffersStorage.getFreeBuffer(cursor.byteArrayLength(6));
+                                if (data != null && cursor.byteBufferValue(0, data.buffer) != 0 && cursor.byteBufferValue(6, data2.buffer) != 0) {
+                                    TLRPC.EncryptedChat chat = (TLRPC.EncryptedChat) TLClassStore.Instance().TLdeserialize(data, data.readInt32());
+                                    chat.user_id = cursor.intValue(2);
+                                    chat.a_or_b = cursor.byteArrayValue(3);
+                                    chat.auth_key = cursor.byteArrayValue(4);
+                                    chat.ttl = cursor.intValue(5);
+
+                                    TLRPC.User user = (TLRPC.User)TLClassStore.Instance().TLdeserialize(data2, data2.readInt32());
+                                    if (user.status != null) {
+                                        user.status.expires = cursor.intValue(7);
                                     }
-                                    buffersStorage.reuseFreeBuffer(data);
-                                    buffersStorage.reuseFreeBuffer(data2);
-                                    break;
+                                    resultArrayNames.add(Html.fromHtml("<font color=\"#00a60e\">" + ContactsController.formatName(user.first_name, user.last_name) + "</font>"));
+                                    resultArray.add(chat);
+                                    encUsers.add(user);
                                 }
+                                buffersStorage.reuseFreeBuffer(data);
+                                buffersStorage.reuseFreeBuffer(data2);
                             }
                         }
                         cursor.dispose();
@@ -1271,20 +1263,17 @@ public void run() {
                     while (cursor.next()) {
                         String name = cursor.stringValue(1);
                         String[] args = name.split(" ");
-                        for (String arg : args) {
-                            if (arg.startsWith(q)) {
-                                ByteBufferDesc data = buffersStorage.getFreeBuffer(cursor.byteArrayLength(0));
-                                if (data != null && cursor.byteBufferValue(0, data.buffer) != 0) {
-                                    TLRPC.Chat chat = (TLRPC.Chat) TLClassStore.Instance().TLdeserialize(data, data.readInt32());
-                                    if (!needEncrypted && chat.id < 0) {
-                                        continue;
-                                    }
-                                    resultArrayNames.add(Utilities.generateSearchName(chat.title, null, q));
-                                    resultArray.add(chat);
+                        if (name.startsWith(q) || name.contains(" " + q)) {
+                            ByteBufferDesc data = buffersStorage.getFreeBuffer(cursor.byteArrayLength(0));
+                            if (data != null && cursor.byteBufferValue(0, data.buffer) != 0) {
+                                TLRPC.Chat chat = (TLRPC.Chat) TLClassStore.Instance().TLdeserialize(data, data.readInt32());
+                                if (!needEncrypted && chat.id < 0) {
+                                    continue;
                                 }
-                                buffersStorage.reuseFreeBuffer(data);
-                                break;
+                                resultArrayNames.add(Utilities.generateSearchName(chat.title, null, q));
+                                resultArray.add(chat);
                             }
+                            buffersStorage.reuseFreeBuffer(data);
                         }
                     }
                     cursor.dispose();
diff --git a/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java b/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
index cc3327a4f..3aa873fac 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
@@ -18,10 +18,12 @@
 import android.graphics.drawable.BitmapDrawable;
 import android.media.AudioManager;
 import android.net.Uri;
+import android.os.Build;
 import android.os.SystemClock;
 import android.provider.Settings;
 import android.support.v4.app.NotificationCompat;
 import android.support.v4.app.NotificationManagerCompat;
+import android.support.v4.app.RemoteInput;
 
 import org.json.JSONArray;
 import org.json.JSONObject;
@@ -47,6 +49,8 @@
     private HashMap<Integer, MessageObject> pushMessagesDict = new HashMap<Integer, MessageObject>();
     private NotificationManagerCompat notificationManager = null;
     private HashMap<Long, Integer> pushDialogs = new HashMap<Long, Integer>();
+    private HashMap<Long, Integer> wearNoticationsIds = new HashMap<Long, Integer>();
+    private int wearNotificationId = 10000;
     public ArrayList<MessageObject> popupMessages = new ArrayList<MessageObject>();
     private long openned_dialog_id = 0;
     private int total_unread_count = 0;
@@ -79,6 +83,7 @@ public void cleanup() {
         pushMessagesDict.clear();
         pushDialogs.clear();
         popupMessages.clear();
+        wearNoticationsIds.clear();
         notifyCheck = false;
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
@@ -131,7 +136,7 @@ private String getStringForMessage(MessageObject messageObject, boolean shortMes
                         } else if (messageObject.messageOwner.action instanceof TLRPC.TL_messageActionUserUpdatedPhoto) {
                             msg = LocaleController.formatString("NotificationContactNewPhoto", R.string.NotificationContactNewPhoto, ContactsController.formatName(user.first_name, user.last_name));
                         } else if (messageObject.messageOwner.action instanceof TLRPC.TL_messageActionLoginUnknownLocation) {
-                            String date = String.format("%s %s %s", LocaleController.formatterYear.format(((long) messageObject.messageOwner.date) * 1000), LocaleController.getString("OtherAt", R.string.OtherAt), LocaleController.formatterDay.format(((long) messageObject.messageOwner.date) * 1000));
+                            String date = LocaleController.formatString("formatDateAtTime", R.string.formatDateAtTime, LocaleController.formatterYear.format(((long) messageObject.messageOwner.date) * 1000), LocaleController.formatterDay.format(((long) messageObject.messageOwner.date) * 1000));
                             msg = LocaleController.formatString("NotificationUnrecognizedDevice", R.string.NotificationUnrecognizedDevice, UserConfig.getCurrentUser().first_name, date, messageObject.messageOwner.action.title, messageObject.messageOwner.action.address);
                         }
                     } else {
@@ -261,6 +266,7 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
             MessageObject lastMessageObject = pushMessages.get(0);
 
             long dialog_id = lastMessageObject.getDialogId();
+            int mid = lastMessageObject.messageOwner.id;
             int chat_id = lastMessageObject.messageOwner.to_id.chat_id;
             int user_id = lastMessageObject.messageOwner.to_id.user_id;
             if (user_id == 0) {
@@ -379,7 +385,7 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
             if (pushDialogs.size() == 1) {
                 detailText = LocaleController.formatPluralString("NewMessages", total_unread_count);
             } else {
-                detailText = String.format("%s %s", LocaleController.formatPluralString("NewMessages", total_unread_count), LocaleController.formatPluralString("FromContacts", pushDialogs.size()));
+                detailText = LocaleController.formatString("NotificationMessagesPeopleDisplayOrder", R.string.NotificationMessagesPeopleDisplayOrder, LocaleController.formatPluralString("NewMessages", total_unread_count), LocaleController.formatPluralString("FromContacts", pushDialogs.size()));
             }
 
             NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(ApplicationLoader.applicationContext)
@@ -387,7 +393,9 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                     .setSmallIcon(R.drawable.notification)
                     .setAutoCancel(true)
                     .setNumber(total_unread_count)
-                    .setContentIntent(contentIntent);
+                    .setContentIntent(contentIntent)
+                    .setGroup("messages")
+                    .setGroupSummary(true);
 
             String lastMessage = null;
             String lastMessageFull = null;
@@ -479,18 +487,130 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                 mBuilder.setVibrate(new long[]{0, 0});
             }
 
-            //RemoteInput remoteInput = new RemoteInput.Builder(EXTRA_VOICE_REPLY).setLabel(LocaleController.getString("Reply", R.string.Reply)).build();
-
             notificationManager.notify(1, mBuilder.build());
             if (preferences.getBoolean("EnablePebbleNotifications", false)) {
                 sendAlertToPebble(lastMessageFull);
             }
+            showWearNotifications(notifyAboutLast);
             scheduleNotificationRepeat();
         } catch (Exception e) {
             FileLog.e("tmessages", e);
         }
     }
 
+    public void showWearNotifications(boolean notifyAboutLast) {
+        if (Build.VERSION.SDK_INT < 19) {
+            return;
+        }
+        ArrayList<Long> sortedDialogs = new ArrayList<Long>();
+        HashMap<Long, ArrayList<MessageObject>> messagesByDialogs = new HashMap<Long, ArrayList<MessageObject>>();
+        for (MessageObject messageObject : pushMessages) {
+            long dialog_id = messageObject.getDialogId();
+            if ((int)dialog_id == 0) {
+                continue;
+            }
+
+            ArrayList<MessageObject> arrayList = messagesByDialogs.get(dialog_id);
+            if (arrayList == null) {
+                arrayList = new ArrayList<MessageObject>();
+                messagesByDialogs.put(dialog_id, arrayList);
+                sortedDialogs.add(0, dialog_id);
+            }
+            arrayList.add(messageObject);
+        }
+
+        HashMap<Long, Integer> oldIds = new HashMap<Long, Integer>();
+        oldIds.putAll(wearNoticationsIds);
+        wearNoticationsIds.clear();
+
+        for (long dialog_id : sortedDialogs) {
+            ArrayList<MessageObject> messageObjects = messagesByDialogs.get(dialog_id);
+            int max_id = messageObjects.get(0).messageOwner.id;
+            TLRPC.Chat chat = null;
+            TLRPC.User user = null;
+            String name = null;
+            if (dialog_id > 0) {
+                user = MessagesController.getInstance().getUser((int)dialog_id);
+                if (user == null) {
+                    continue;
+                }
+            } else {
+                chat = MessagesController.getInstance().getChat(-(int)dialog_id);
+                if (chat == null) {
+                    continue;
+                }
+            }
+            if (chat != null) {
+                name = chat.title;
+            } else {
+                name = ContactsController.formatName(user.first_name, user.last_name);
+            }
+
+            Integer notificationId = oldIds.get(dialog_id);
+            if (notificationId == null) {
+                notificationId = wearNotificationId++;
+            } else {
+                oldIds.remove(dialog_id);
+            }
+
+            Intent replyIntent = new Intent(ApplicationLoader.applicationContext, WearReplyReceiver.class);
+            replyIntent.putExtra("dialog_id", dialog_id);
+            replyIntent.putExtra("max_id", max_id);
+            PendingIntent replyPendingIntent = PendingIntent.getBroadcast(ApplicationLoader.applicationContext, notificationId, replyIntent, PendingIntent.FLAG_UPDATE_CURRENT);
+            RemoteInput remoteInput = new RemoteInput.Builder(EXTRA_VOICE_REPLY).setLabel(LocaleController.getString("Reply", R.string.Reply)).build();
+            String replyToString;
+            if (chat != null) {
+                replyToString = LocaleController.formatString("ReplyToGroup", R.string.ReplyToGroup, name);
+            } else {
+                replyToString = LocaleController.formatString("ReplyToUser", R.string.ReplyToUser, name);
+            }
+            NotificationCompat.Action action = new NotificationCompat.Action.Builder(R.drawable.ic_reply_icon, replyToString, replyPendingIntent).addRemoteInput(remoteInput).build();
+
+            String text = "";
+            for (MessageObject messageObject : messageObjects) {
+                String message = getStringForMessage(messageObject, false);
+                if (message == null) {
+                    continue;
+                }
+                if (chat != null) {
+                    message = message.replace(" @ " + name, "");
+                } else {
+                    message = message.replace(name + ": ", "").replace(name + " ", "");
+                }
+                if (text.length() > 0) {
+                    text += "\n\n";
+                }
+                text += message;
+            }
+
+            Intent intent = new Intent(ApplicationLoader.applicationContext, LaunchActivity.class);
+            intent.setAction("com.tmessages.openchat" + Math.random() + Integer.MAX_VALUE);
+            intent.setFlags(32768);
+            if (chat != null) {
+                intent.putExtra("chatId", chat.id);
+            } else if (user != null) {
+                intent.putExtra("userId", user.id);
+            }
+            PendingIntent contentIntent = PendingIntent.getActivity(ApplicationLoader.applicationContext, 0, intent, PendingIntent.FLAG_ONE_SHOT);
+
+            NotificationCompat.Builder builder = new NotificationCompat.Builder(ApplicationLoader.applicationContext)
+                    .setContentTitle(name)
+                    .setSmallIcon(R.drawable.notification)
+                    .setGroup("messages")
+                    .setContentText(text)
+                    .setGroupSummary(false)
+                    .setContentIntent(contentIntent)
+                    .extend(new NotificationCompat.WearableExtender().addAction(action));
+
+            notificationManager.notify(notificationId, builder.build());
+            wearNoticationsIds.put(dialog_id, notificationId);
+        }
+
+        for (HashMap.Entry<Long, Integer> entry : oldIds.entrySet()) {
+            notificationManager.cancel(entry.getValue());
+        }
+    }
+
     private void dismissNotification() {
         try {
             notificationManager.cancel(1);
diff --git a/TMessagesProj/src/main/java/org/telegram/android/SendMessagesHelper.java b/TMessagesProj/src/main/java/org/telegram/android/SendMessagesHelper.java
index 4a0245596..990ce1785 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/SendMessagesHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/SendMessagesHelper.java
@@ -486,6 +486,7 @@ private int sendMessage(String message, double lat, double lon, TLRPC.TL_photo p
             }
             newMsg.local_id = newMsg.id = UserConfig.getNewMessageId();
             newMsg.from_id = UserConfig.getClientUserId();
+            newMsg.flags |= TLRPC.MESSAGE_FLAG_OUT;
             newMsg.out = true;
             UserConfig.saveConfig(false);
         }
@@ -493,6 +494,7 @@ private int sendMessage(String message, double lat, double lon, TLRPC.TL_photo p
             newMsg.random_id = getNextRandomId();
         }
         newMsg.date = ConnectionsManager.getInstance().getCurrentTime();
+        newMsg.flags |= TLRPC.MESSAGE_FLAG_UNREAD;
         newMsg.unread = true;
         newMsg.dialog_id = peer;
         int lower_id = (int) peer;
@@ -581,7 +583,7 @@ private int sendMessage(String message, double lat, double lon, TLRPC.TL_photo p
                         performSendMessageRequest(reqSend, newMsgObj, null);
                     }
                 } else {
-                    TLRPC.TL_decryptedMessage reqSend = new TLRPC.TL_decryptedMessage();
+                    TLRPC.TL_decryptedMessage_old reqSend = new TLRPC.TL_decryptedMessage_old();
                     reqSend.random_id = newMsg.random_id;
                     reqSend.random_bytes = new byte[Math.max(1, (int) Math.ceil(Utilities.random.nextDouble() * 16))];
                     Utilities.random.nextBytes(reqSend.random_bytes);
@@ -733,7 +735,7 @@ private int sendMessage(String message, double lat, double lon, TLRPC.TL_photo p
                         }
                     }
                 } else {
-                    TLRPC.TL_decryptedMessage reqSend = new TLRPC.TL_decryptedMessage();
+                    TLRPC.TL_decryptedMessage_old reqSend = new TLRPC.TL_decryptedMessage_old();
                     reqSend.random_id = newMsg.random_id;
                     reqSend.random_bytes = new byte[Math.max(1, (int) Math.ceil(Utilities.random.nextDouble() * 16))];
                     Utilities.random.nextBytes(reqSend.random_bytes);
@@ -1407,7 +1409,7 @@ public void sendMessagesDeleteMessage(ArrayList<Long> random_ids, TLRPC.Encrypte
         if (!(encryptedChat instanceof TLRPC.TL_encryptedChat)) {
             return;
         }
-        TLRPC.TL_decryptedMessageService reqSend = new TLRPC.TL_decryptedMessageService();
+        TLRPC.TL_decryptedMessageService_old reqSend = new TLRPC.TL_decryptedMessageService_old();
         reqSend.random_id = getNextRandomId();
         reqSend.random_bytes = new byte[Math.max(1, (int)Math.ceil(Utilities.random.nextDouble() * 16))];
         Utilities.random.nextBytes(reqSend.random_bytes);
@@ -1420,7 +1422,7 @@ public void sendClearHistoryMessage(TLRPC.EncryptedChat encryptedChat) {
         if (!(encryptedChat instanceof TLRPC.TL_encryptedChat)) {
             return;
         }
-        TLRPC.TL_decryptedMessageService reqSend = new TLRPC.TL_decryptedMessageService();
+        TLRPC.TL_decryptedMessageService_old reqSend = new TLRPC.TL_decryptedMessageService_old();
         reqSend.random_id = getNextRandomId();
         reqSend.random_bytes = new byte[Math.max(1, (int)Math.ceil(Utilities.random.nextDouble() * 16))];
         Utilities.random.nextBytes(reqSend.random_bytes);
@@ -1439,6 +1441,7 @@ public void sendTTLMessage(TLRPC.EncryptedChat encryptedChat) {
         newMsg.local_id = newMsg.id = UserConfig.getNewMessageId();
         newMsg.from_id = UserConfig.getClientUserId();
         newMsg.unread = true;
+        newMsg.flags = TLRPC.MESSAGE_FLAG_UNREAD | TLRPC.MESSAGE_FLAG_OUT;
         newMsg.dialog_id = ((long)encryptedChat.id) << 32;
         newMsg.to_id = new TLRPC.TL_peerUser();
         if (encryptedChat.participant_id == UserConfig.getClientUserId()) {
@@ -1461,7 +1464,7 @@ public void sendTTLMessage(TLRPC.EncryptedChat encryptedChat) {
         MessagesController.getInstance().updateInterfaceWithMessages(newMsg.dialog_id, objArr);
         NotificationCenter.getInstance().postNotificationName(NotificationCenter.dialogsNeedReload);
 
-        TLRPC.TL_decryptedMessageService reqSend = new TLRPC.TL_decryptedMessageService();
+        TLRPC.TL_decryptedMessageService_old reqSend = new TLRPC.TL_decryptedMessageService_old();
         reqSend.random_id = newMsg.random_id;
         reqSend.random_bytes = new byte[Math.max(1, (int)Math.ceil(Utilities.random.nextDouble() * 16))];
         Utilities.random.nextBytes(reqSend.random_bytes);
@@ -1486,6 +1489,7 @@ public void sendScreenshotMessage(TLRPC.EncryptedChat encryptedChat, ArrayList<L
         newMsg.local_id = newMsg.id = UserConfig.getNewMessageId();
         newMsg.from_id = UserConfig.getClientUserId();
         newMsg.unread = true;
+        newMsg.flags = TLRPC.MESSAGE_FLAG_UNREAD | TLRPC.MESSAGE_FLAG_OUT;
         newMsg.dialog_id = ((long)encryptedChat.id) << 32;
         newMsg.to_id = new TLRPC.TL_peerUser();
         if (encryptedChat.participant_id == UserConfig.getClientUserId()) {
@@ -1508,7 +1512,7 @@ public void sendScreenshotMessage(TLRPC.EncryptedChat encryptedChat, ArrayList<L
         MessagesController.getInstance().updateInterfaceWithMessages(newMsg.dialog_id, objArr);
         NotificationCenter.getInstance().postNotificationName(NotificationCenter.dialogsNeedReload);
 
-        TLRPC.TL_decryptedMessageService reqSend = new TLRPC.TL_decryptedMessageService();
+        TLRPC.TL_decryptedMessageService_old reqSend = new TLRPC.TL_decryptedMessageService_old();
         reqSend.random_id = newMsg.random_id;
         reqSend.random_bytes = new byte[Math.max(1, (int)Math.ceil(Utilities.random.nextDouble() * 16))];
         Utilities.random.nextBytes(reqSend.random_bytes);
diff --git a/TMessagesProj/src/main/java/org/telegram/android/WearReplyReceiver.java b/TMessagesProj/src/main/java/org/telegram/android/WearReplyReceiver.java
new file mode 100644
index 000000000..9e32dc6a6
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/android/WearReplyReceiver.java
@@ -0,0 +1,37 @@
+/*
+ * This is the source code of Telegram for Android v. 1.7.x.
+ * It is licensed under GNU GPL v. 2 or later.
+ * You should have received a copy of the license in this archive (see LICENSE).
+ *
+ * Copyright Nikolai Kudashov, 2013-2014.
+ */
+
+package org.telegram.android;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.v4.app.RemoteInput;
+
+public class WearReplyReceiver extends BroadcastReceiver {
+
+    @Override
+    public void onReceive(Context context, Intent intent) {
+        Bundle remoteInput = RemoteInput.getResultsFromIntent(intent);
+        if (remoteInput == null) {
+            return;
+        }
+        CharSequence text = remoteInput.getCharSequence(NotificationsController.EXTRA_VOICE_REPLY);
+        if (text == null || text.length() == 0) {
+            return;
+        }
+        long dialog_id = intent.getLongExtra("dialog_id", 0);
+        int max_id = intent.getIntExtra("max_id", 0);
+        if (dialog_id == 0 || max_id == 0) {
+            return;
+        }
+        SendMessagesHelper.getInstance().sendMessage(text.toString(), dialog_id);
+        MessagesController.getInstance().markDialogAsRead(dialog_id, max_id, max_id, 0, 0, true, false);
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/BuffersStorage.java b/TMessagesProj/src/main/java/org/telegram/messenger/BuffersStorage.java
index 5c39ae078..db28c5c73 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/BuffersStorage.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/BuffersStorage.java
@@ -19,7 +19,7 @@
     private final ArrayList<ByteBufferDesc> freeBuffers32768;
     private final ArrayList<ByteBufferDesc> freeBuffersBig;
     private boolean isThreadSafe;
-    private final static Integer sync = 1;
+    private final static Object sync = new Object();
 
     private static volatile BuffersStorage Instance = null;
     public static BuffersStorage getInstance() {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java b/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java
index 29f580089..e6e59293d 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java
@@ -9,9 +9,9 @@
 package org.telegram.messenger;
 
 public class BuildVars {
-    public static boolean DEBUG_VERSION = true;
-    public static int APP_ID = 2458;
-    public static String APP_HASH = "5bce48dc7d331e62c955669eb7233217";
+    public static boolean DEBUG_VERSION = false;
+    public static int APP_ID = 0; //obtaion your own APP_ID at https://core.telegram.org/api/obtaining_api_id
+    public static String APP_HASH = ""; //obtaion your own APP_HASH at https://core.telegram.org/api/obtaining_api_id
     public static String HOCKEY_APP_HASH = "your-hockeyapp-api-key-here";
     public static String GCM_SENDER_ID = "your-id";
     public static String SEND_LOGS_EMAIL = "email@gmail.com";
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java b/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
index 8a476f6b1..a1c538a44 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
@@ -833,7 +833,7 @@ private TLObject wrapInLayer(TLObject object, int datacenterId, RPCRequest reque
                 }
                 object = invoke;
             }
-            TLRPC.invokeWithLayer14 invoke = new TLRPC.invokeWithLayer14();
+            TLRPC.invokeWithLayer17 invoke = new TLRPC.invokeWithLayer17();
             invoke.query = object;
             FileLog.d("wrap in layer", "" + object);
             return invoke;
@@ -1604,12 +1604,12 @@ ByteBufferDesc createConnectionData(ArrayList<NetworkMessage> messages, ArrayLis
             TLRPC.TL_protoMessage message = networkMessage.protoMessage;
 
             if (BuildVars.DEBUG_VERSION) {
-                if (message.body instanceof TLRPC.invokeWithLayer14) {
-                    FileLog.d("tmessages", connection.getSissionId() + ":DC" + datacenter.datacenterId + "> Send message (" + message.seqno + ", " + message.msg_id + "): " + ((TLRPC.invokeWithLayer14)message.body).query);
+                if (message.body instanceof TLRPC.invokeWithLayer17) {
+                    FileLog.d("tmessages", connection.getSissionId() + ":DC" + datacenter.datacenterId + "> Send message (" + message.seqno + ", " + message.msg_id + "): " + ((TLRPC.invokeWithLayer17)message.body).query);
                 } else if (message.body instanceof TLRPC.initConnection) {
                     TLRPC.initConnection r = (TLRPC.initConnection)message.body;
-                    if (r.query instanceof TLRPC.invokeWithLayer14) {
-                        FileLog.d("tmessages", connection.getSissionId() + ":DC" + datacenter.datacenterId + "> Send message (" + message.seqno + ", " + message.msg_id + "): " + ((TLRPC.invokeWithLayer14)r.query).query);
+                    if (r.query instanceof TLRPC.invokeWithLayer17) {
+                        FileLog.d("tmessages", connection.getSissionId() + ":DC" + datacenter.datacenterId + "> Send message (" + message.seqno + ", " + message.msg_id + "): " + ((TLRPC.invokeWithLayer17)r.query).query);
                     } else {
                         FileLog.d("tmessages", connection.getSissionId() + ":DC" + datacenter.datacenterId + "> Send message (" + message.seqno + ", " + message.msg_id + "): " + r.query);
                     }
@@ -1644,12 +1644,12 @@ ByteBufferDesc createConnectionData(ArrayList<NetworkMessage> messages, ArrayLis
                 TLRPC.TL_protoMessage message = networkMessage.protoMessage;
                 containerMessages.add(message);
                 if (BuildVars.DEBUG_VERSION) {
-                    if (message.body instanceof TLRPC.invokeWithLayer14) {
-                        FileLog.d("tmessages", connection.getSissionId() + ":DC" + datacenter.datacenterId + "> Send message (" + message.seqno + ", " + message.msg_id + "): " + ((TLRPC.invokeWithLayer14)message.body).query);
+                    if (message.body instanceof TLRPC.invokeWithLayer17) {
+                        FileLog.d("tmessages", connection.getSissionId() + ":DC" + datacenter.datacenterId + "> Send message (" + message.seqno + ", " + message.msg_id + "): " + ((TLRPC.invokeWithLayer17)message.body).query);
                     } else if (message.body instanceof TLRPC.initConnection) {
                         TLRPC.initConnection r = (TLRPC.initConnection)message.body;
-                        if (r.query instanceof TLRPC.invokeWithLayer14) {
-                            FileLog.d("tmessages", connection.getSissionId() + ":DC" + datacenter.datacenterId + "> Send message (" + message.seqno + ", " + message.msg_id + "): " + ((TLRPC.invokeWithLayer14)r.query).query);
+                        if (r.query instanceof TLRPC.invokeWithLayer17) {
+                            FileLog.d("tmessages", connection.getSissionId() + ":DC" + datacenter.datacenterId + "> Send message (" + message.seqno + ", " + message.msg_id + "): " + ((TLRPC.invokeWithLayer17)r.query).query);
                         } else {
                             FileLog.d("tmessages", connection.getSissionId() + ":DC" + datacenter.datacenterId + "> Send message (" + message.seqno + ", " + message.msg_id + "): " + r.query);
                         }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/FileLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/FileLoader.java
index 9b1d25938..4d45efa60 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/FileLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/FileLoader.java
@@ -593,38 +593,42 @@ public static File getExistPathToAttach(TLObject attach) {
     }
 
     public static File getPathToAttach(TLObject attach) {
+        return getPathToAttach(attach, false);
+    }
+
+    public static File getPathToAttach(TLObject attach, boolean forceCache) {
         File dir = null;
         if (attach instanceof TLRPC.Video) {
             TLRPC.Video video = (TLRPC.Video)attach;
-            if (video.key != null) {
+            if (forceCache || video.key != null) {
                 dir = getInstance().getDirectory(MEDIA_DIR_CACHE);
             } else {
                 dir = getInstance().getDirectory(MEDIA_DIR_VIDEO);
             }
         } else if (attach instanceof TLRPC.Document) {
             TLRPC.Document document = (TLRPC.Document)attach;
-            if (document.key != null) {
+            if (forceCache || document.key != null) {
                 dir = getInstance().getDirectory(MEDIA_DIR_CACHE);
             } else {
                 dir = getInstance().getDirectory(MEDIA_DIR_DOCUMENT);
             }
         } else if (attach instanceof TLRPC.PhotoSize) {
             TLRPC.PhotoSize photoSize = (TLRPC.PhotoSize)attach;
-            if (photoSize.location == null || photoSize.location.key != null || photoSize.location.volume_id == Integer.MIN_VALUE && photoSize.location.local_id < 0) {
+            if (forceCache || photoSize.location == null || photoSize.location.key != null || photoSize.location.volume_id == Integer.MIN_VALUE && photoSize.location.local_id < 0) {
                 dir = getInstance().getDirectory(MEDIA_DIR_CACHE);
             } else {
                 dir = getInstance().getDirectory(MEDIA_DIR_IMAGE);
             }
         } else if (attach instanceof TLRPC.Audio) {
             TLRPC.Audio audio = (TLRPC.Audio)attach;
-            if (audio.key != null) {
+            if (forceCache || audio.key != null) {
                 dir = getInstance().getDirectory(MEDIA_DIR_CACHE);
             } else {
                 dir = getInstance().getDirectory(MEDIA_DIR_AUDIO);
             }
         } else if (attach instanceof TLRPC.FileLocation) {
             TLRPC.FileLocation fileLocation = (TLRPC.FileLocation)attach;
-            if (fileLocation.key != null || fileLocation.volume_id == Integer.MIN_VALUE && fileLocation.local_id < 0) {
+            if (forceCache || fileLocation.key != null || fileLocation.volume_id == Integer.MIN_VALUE && fileLocation.local_id < 0) {
                 dir = getInstance().getDirectory(MEDIA_DIR_CACHE);
             } else {
                 dir = getInstance().getDirectory(MEDIA_DIR_IMAGE);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/HandshakeAction.java b/TMessagesProj/src/main/java/org/telegram/messenger/HandshakeAction.java
index 49f6cedaf..770dbd6f3 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/HandshakeAction.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/HandshakeAction.java
@@ -87,7 +87,7 @@ void beginHandshake(boolean dropConnection) {
         reqPQMsgData = sendMessageData(reqPq, generateMessageId());
     }
 
-    final Integer lock = 1;
+    final Object lock = new Object();
     static ArrayList<HashMap<String, Object>> serverPublicKeys = null;
     HashMap<String, Object> selectPublicKey(ArrayList<Long> fingerprints) {
         synchronized (lock) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/TLClassStore.java b/TMessagesProj/src/main/java/org/telegram/messenger/TLClassStore.java
index 3961c717e..164abd926 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/TLClassStore.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/TLClassStore.java
@@ -24,6 +24,10 @@ public TLClassStore () {
         classStore.put(TLRPC.TL_error.constructor, TLRPC.TL_error.class);
         classStore.put(TLRPC.TL_messages_sentEncryptedMessage.constructor, TLRPC.TL_messages_sentEncryptedMessage.class);
         classStore.put(TLRPC.TL_messages_sentEncryptedFile.constructor, TLRPC.TL_messages_sentEncryptedFile.class);
+        classStore.put(TLRPC.TL_notifyAll.constructor, TLRPC.TL_notifyAll.class);
+        classStore.put(TLRPC.TL_notifyChats.constructor, TLRPC.TL_notifyChats.class);
+        classStore.put(TLRPC.TL_notifyUsers.constructor, TLRPC.TL_notifyUsers.class);
+        classStore.put(TLRPC.TL_notifyPeer.constructor, TLRPC.TL_notifyPeer.class);
         classStore.put(TLRPC.TL_auth_checkedPhone.constructor, TLRPC.TL_auth_checkedPhone.class);
         classStore.put(TLRPC.TL_msgs_ack.constructor, TLRPC.TL_msgs_ack.class);
         classStore.put(TLRPC.TL_messages_chatFull.constructor, TLRPC.TL_messages_chatFull.class);
@@ -54,6 +58,16 @@ public TLClassStore () {
         classStore.put(TLRPC.TL_message.constructor, TLRPC.TL_message.class);
         classStore.put(TLRPC.TL_messageService.constructor, TLRPC.TL_messageService.class);
         classStore.put(TLRPC.TL_inputPhoneContact.constructor, TLRPC.TL_inputPhoneContact.class);
+        classStore.put(TLRPC.TL_sendMessageGeoLocationAction.constructor, TLRPC.TL_sendMessageGeoLocationAction.class);
+        classStore.put(TLRPC.TL_sendMessageChooseContactAction.constructor, TLRPC.TL_sendMessageChooseContactAction.class);
+        classStore.put(TLRPC.TL_sendMessageTypingAction.constructor, TLRPC.TL_sendMessageTypingAction.class);
+        classStore.put(TLRPC.TL_sendMessageUploadDocumentAction.constructor, TLRPC.TL_sendMessageUploadDocumentAction.class);
+        classStore.put(TLRPC.TL_sendMessageRecordVideoAction.constructor, TLRPC.TL_sendMessageRecordVideoAction.class);
+        classStore.put(TLRPC.TL_sendMessageUploadPhotoAction.constructor, TLRPC.TL_sendMessageUploadPhotoAction.class);
+        classStore.put(TLRPC.TL_sendMessageUploadVideoAction.constructor, TLRPC.TL_sendMessageUploadVideoAction.class);
+        classStore.put(TLRPC.TL_sendMessageUploadAudioAction.constructor, TLRPC.TL_sendMessageUploadAudioAction.class);
+        classStore.put(TLRPC.TL_sendMessageCancelAction.constructor, TLRPC.TL_sendMessageCancelAction.class);
+        classStore.put(TLRPC.TL_sendMessageRecordAudioAction.constructor, TLRPC.TL_sendMessageRecordAudioAction.class);
         classStore.put(TLRPC.TL_invokeAfterMsg.constructor, TLRPC.TL_invokeAfterMsg.class);
         classStore.put(TLRPC.TL_messageMediaVideo.constructor, TLRPC.TL_messageMediaVideo.class);
         classStore.put(TLRPC.TL_messageMediaPhoto.constructor, TLRPC.TL_messageMediaPhoto.class);
@@ -63,6 +77,7 @@ public TLClassStore () {
         classStore.put(TLRPC.TL_messageMediaAudio.constructor, TLRPC.TL_messageMediaAudio.class);
         classStore.put(TLRPC.TL_messageMediaContact.constructor, TLRPC.TL_messageMediaContact.class);
         classStore.put(TLRPC.TL_messageMediaUnsupported.constructor, TLRPC.TL_messageMediaUnsupported.class);
+        classStore.put(TLRPC.TL_auth_sentAppCode.constructor, TLRPC.TL_auth_sentAppCode.class);
         classStore.put(TLRPC.TL_auth_sentCode.constructor, TLRPC.TL_auth_sentCode.class);
         classStore.put(TLRPC.TL_peerNotifySettingsEmpty.constructor, TLRPC.TL_peerNotifySettingsEmpty.class);
         classStore.put(TLRPC.TL_peerNotifySettings.constructor, TLRPC.TL_peerNotifySettings.class);
@@ -183,6 +198,7 @@ public TLClassStore () {
         classStore.put(TLRPC.TL_updateReadMessages.constructor, TLRPC.TL_updateReadMessages.class);
         classStore.put(TLRPC.TL_updateChatParticipantDelete.constructor, TLRPC.TL_updateChatParticipantDelete.class);
         classStore.put(TLRPC.TL_updateRestoreMessages.constructor, TLRPC.TL_updateRestoreMessages.class);
+        classStore.put(TLRPC.TL_updateNotifySettings.constructor, TLRPC.TL_updateNotifySettings.class);
         classStore.put(TLRPC.TL_updateUserTyping.constructor, TLRPC.TL_updateUserTyping.class);
         classStore.put(TLRPC.TL_updateChatUserTyping.constructor, TLRPC.TL_updateChatUserTyping.class);
         classStore.put(TLRPC.TL_updateUserName.constructor, TLRPC.TL_updateUserName.class);
@@ -194,6 +210,7 @@ public TLClassStore () {
         classStore.put(TLRPC.TL_updateDcOptions.constructor, TLRPC.TL_updateDcOptions.class);
         classStore.put(TLRPC.TL_updateChatParticipants.constructor, TLRPC.TL_updateChatParticipants.class);
         classStore.put(TLRPC.TL_updateEncryption.constructor, TLRPC.TL_updateEncryption.class);
+        classStore.put(TLRPC.TL_updateUserBlocked.constructor, TLRPC.TL_updateUserBlocked.class);
         classStore.put(TLRPC.TL_updateActivation.constructor, TLRPC.TL_updateActivation.class);
         classStore.put(TLRPC.TL_updateNewAuthorization.constructor, TLRPC.TL_updateNewAuthorization.class);
         classStore.put(TLRPC.TL_updateNewGeoChatMessage.constructor, TLRPC.TL_updateNewGeoChatMessage.class);
@@ -208,7 +225,13 @@ public TLClassStore () {
         classStore.put(TLRPC.TL_inputEncryptedFileBigUploaded.constructor, TLRPC.TL_inputEncryptedFileBigUploaded.class);
         classStore.put(TLRPC.TL_inputEncryptedFileEmpty.constructor, TLRPC.TL_inputEncryptedFileEmpty.class);
         classStore.put(TLRPC.TL_inputEncryptedFileUploaded.constructor, TLRPC.TL_inputEncryptedFileUploaded.class);
+        classStore.put(TLRPC.TL_decryptedMessageActionFlushHistory.constructor, TLRPC.TL_decryptedMessageActionFlushHistory.class);
+        classStore.put(TLRPC.TL_decryptedMessageActionNotifyLayer.constructor, TLRPC.TL_decryptedMessageActionNotifyLayer.class);
         classStore.put(TLRPC.TL_decryptedMessageActionSetMessageTTL.constructor, TLRPC.TL_decryptedMessageActionSetMessageTTL.class);
+        classStore.put(TLRPC.TL_decryptedMessageActionDeleteMessages.constructor, TLRPC.TL_decryptedMessageActionDeleteMessages.class);
+        classStore.put(TLRPC.TL_decryptedMessageActionTyping.constructor, TLRPC.TL_decryptedMessageActionTyping.class);
+        classStore.put(TLRPC.TL_decryptedMessageActionReadMessages.constructor, TLRPC.TL_decryptedMessageActionReadMessages.class);
+        classStore.put(TLRPC.TL_decryptedMessageActionScreenshotMessages.constructor, TLRPC.TL_decryptedMessageActionScreenshotMessages.class);
         classStore.put(TLRPC.TL_contacts_myLinkRequested.constructor, TLRPC.TL_contacts_myLinkRequested.class);
         classStore.put(TLRPC.TL_contacts_myLinkContact.constructor, TLRPC.TL_contacts_myLinkContact.class);
         classStore.put(TLRPC.TL_contacts_myLinkEmpty.constructor, TLRPC.TL_contacts_myLinkEmpty.class);
@@ -228,6 +251,7 @@ public TLClassStore () {
         classStore.put(TLRPC.TL_config.constructor, TLRPC.TL_config.class);
         classStore.put(TLRPC.TL_inputAudio.constructor, TLRPC.TL_inputAudio.class);
         classStore.put(TLRPC.TL_inputAudioEmpty.constructor, TLRPC.TL_inputAudioEmpty.class);
+        classStore.put(TLRPC.TL_help_support.constructor, TLRPC.TL_help_support.class);
         classStore.put(TLRPC.TL_messages_chats.constructor, TLRPC.TL_messages_chats.class);
         classStore.put(TLRPC.TL_contacts_found.constructor, TLRPC.TL_contacts_found.class);
         classStore.put(TLRPC.TL_chatParticipants.constructor, TLRPC.TL_chatParticipants.class);
@@ -245,18 +269,21 @@ public TLClassStore () {
         classStore.put(TLRPC.TL_chatEmpty.constructor, TLRPC.TL_chatEmpty.class);
         classStore.put(TLRPC.TL_chat.constructor, TLRPC.TL_chat.class);
         classStore.put(TLRPC.TL_storage_fileUnknown.constructor, TLRPC.TL_storage_fileUnknown.class);
+        classStore.put(TLRPC.TL_storage_fileMp4.constructor, TLRPC.TL_storage_fileMp4.class);
         classStore.put(TLRPC.TL_storage_fileWebp.constructor, TLRPC.TL_storage_fileWebp.class);
         classStore.put(TLRPC.TL_storage_filePng.constructor, TLRPC.TL_storage_filePng.class);
         classStore.put(TLRPC.TL_storage_fileGif.constructor, TLRPC.TL_storage_fileGif.class);
-        classStore.put(TLRPC.TL_storage_fileMov.constructor, TLRPC.TL_storage_fileMov.class);
+        classStore.put(TLRPC.TL_storage_filePdf.constructor, TLRPC.TL_storage_filePdf.class);
         classStore.put(TLRPC.TL_storage_fileMp3.constructor, TLRPC.TL_storage_fileMp3.class);
         classStore.put(TLRPC.TL_storage_fileJpeg.constructor, TLRPC.TL_storage_fileJpeg.class);
+        classStore.put(TLRPC.TL_storage_fileMov.constructor, TLRPC.TL_storage_fileMov.class);
         classStore.put(TLRPC.TL_storage_filePartial.constructor, TLRPC.TL_storage_filePartial.class);
-        classStore.put(TLRPC.TL_storage_fileMp4.constructor, TLRPC.TL_storage_fileMp4.class);
         classStore.put(TLRPC.TL_inputMessagesFilterVideo.constructor, TLRPC.TL_inputMessagesFilterVideo.class);
         classStore.put(TLRPC.TL_inputMessagesFilterEmpty.constructor, TLRPC.TL_inputMessagesFilterEmpty.class);
         classStore.put(TLRPC.TL_inputMessagesFilterPhotos.constructor, TLRPC.TL_inputMessagesFilterPhotos.class);
         classStore.put(TLRPC.TL_inputMessagesFilterPhotoVideo.constructor, TLRPC.TL_inputMessagesFilterPhotoVideo.class);
+        classStore.put(TLRPC.TL_inputMessagesFilterDocument.constructor, TLRPC.TL_inputMessagesFilterDocument.class);
+        classStore.put(TLRPC.TL_inputMessagesFilterAudio.constructor, TLRPC.TL_inputMessagesFilterAudio.class);
         classStore.put(TLRPC.TL_msgs_state_info.constructor, TLRPC.TL_msgs_state_info.class);
         classStore.put(TLRPC.TL_upload_file.constructor, TLRPC.TL_upload_file.class);
         classStore.put(TLRPC.TL_dialog.constructor, TLRPC.TL_dialog.class);
@@ -310,117 +337,6 @@ public TLClassStore () {
         classStore.put(TLRPC.TL_inputPhotoCrop.constructor, TLRPC.TL_inputPhotoCrop.class);
         classStore.put(TLRPC.TL_messages_dialogs.constructor, TLRPC.TL_messages_dialogs.class);
         classStore.put(TLRPC.TL_messages_dialogsSlice.constructor, TLRPC.TL_messages_dialogsSlice.class);
-        classStore.put(TLRPC.TL_req_pq.constructor, TLRPC.TL_req_pq.class);
-        classStore.put(TLRPC.TL_req_DH_params.constructor, TLRPC.TL_req_DH_params.class);
-        classStore.put(TLRPC.TL_set_client_DH_params.constructor, TLRPC.TL_set_client_DH_params.class);
-        classStore.put(TLRPC.TL_ping.constructor, TLRPC.TL_ping.class);
-        classStore.put(TLRPC.TL_ping_delay_disconnect.constructor, TLRPC.TL_ping_delay_disconnect.class);
-        classStore.put(TLRPC.TL_destroy_session.constructor, TLRPC.TL_destroy_session.class);
-        classStore.put(TLRPC.TL_destroy_sessions.constructor, TLRPC.TL_destroy_sessions.class);
-        classStore.put(TLRPC.TL_get_future_salts.constructor, TLRPC.TL_get_future_salts.class);
-        classStore.put(TLRPC.TL_rpc_drop_answer.constructor, TLRPC.TL_rpc_drop_answer.class);
-        classStore.put(TLRPC.TL_auth_checkPhone.constructor, TLRPC.TL_auth_checkPhone.class);
-        classStore.put(TLRPC.TL_auth_sendCode.constructor, TLRPC.TL_auth_sendCode.class);
-        classStore.put(TLRPC.TL_auth_sendCall.constructor, TLRPC.TL_auth_sendCall.class);
-        classStore.put(TLRPC.TL_auth_signUp.constructor, TLRPC.TL_auth_signUp.class);
-        classStore.put(TLRPC.TL_auth_signIn.constructor, TLRPC.TL_auth_signIn.class);
-        classStore.put(TLRPC.TL_auth_logOut.constructor, TLRPC.TL_auth_logOut.class);
-        classStore.put(TLRPC.TL_auth_resetAuthorizations.constructor, TLRPC.TL_auth_resetAuthorizations.class);
-        classStore.put(TLRPC.TL_auth_sendInvites.constructor, TLRPC.TL_auth_sendInvites.class);
-        classStore.put(TLRPC.TL_auth_exportAuthorization.constructor, TLRPC.TL_auth_exportAuthorization.class);
-        classStore.put(TLRPC.TL_auth_importAuthorization.constructor, TLRPC.TL_auth_importAuthorization.class);
-        classStore.put(TLRPC.TL_account_registerDevice.constructor, TLRPC.TL_account_registerDevice.class);
-        classStore.put(TLRPC.TL_account_unregisterDevice.constructor, TLRPC.TL_account_unregisterDevice.class);
-        classStore.put(TLRPC.TL_account_updateNotifySettings.constructor, TLRPC.TL_account_updateNotifySettings.class);
-        classStore.put(TLRPC.TL_account_getNotifySettings.constructor, TLRPC.TL_account_getNotifySettings.class);
-        classStore.put(TLRPC.TL_account_resetNotifySettings.constructor, TLRPC.TL_account_resetNotifySettings.class);
-        classStore.put(TLRPC.TL_account_updateProfile.constructor, TLRPC.TL_account_updateProfile.class);
-        classStore.put(TLRPC.TL_account_updateStatus.constructor, TLRPC.TL_account_updateStatus.class);
-        classStore.put(TLRPC.TL_account_getWallPapers.constructor, TLRPC.TL_account_getWallPapers.class);
-        classStore.put(TLRPC.TL_users_getUsers.constructor, TLRPC.TL_users_getUsers.class);
-        classStore.put(TLRPC.TL_users_getFullUser.constructor, TLRPC.TL_users_getFullUser.class);
-        classStore.put(TLRPC.TL_contacts_getStatuses.constructor, TLRPC.TL_contacts_getStatuses.class);
-        classStore.put(TLRPC.TL_contacts_getContacts.constructor, TLRPC.TL_contacts_getContacts.class);
-        classStore.put(TLRPC.TL_contacts_importContacts.constructor, TLRPC.TL_contacts_importContacts.class);
-        classStore.put(TLRPC.TL_contacts_search.constructor, TLRPC.TL_contacts_search.class);
-        classStore.put(TLRPC.TL_contacts_getSuggested.constructor, TLRPC.TL_contacts_getSuggested.class);
-        classStore.put(TLRPC.TL_contacts_deleteContact.constructor, TLRPC.TL_contacts_deleteContact.class);
-        classStore.put(TLRPC.TL_contacts_deleteContacts.constructor, TLRPC.TL_contacts_deleteContacts.class);
-        classStore.put(TLRPC.TL_contacts_block.constructor, TLRPC.TL_contacts_block.class);
-        classStore.put(TLRPC.TL_contacts_unblock.constructor, TLRPC.TL_contacts_unblock.class);
-        classStore.put(TLRPC.TL_contacts_getBlocked.constructor, TLRPC.TL_contacts_getBlocked.class);
-        classStore.put(TLRPC.TL_messages_getMessages.constructor, TLRPC.TL_messages_getMessages.class);
-        classStore.put(TLRPC.TL_messages_getDialogs.constructor, TLRPC.TL_messages_getDialogs.class);
-        classStore.put(TLRPC.TL_messages_getHistory.constructor, TLRPC.TL_messages_getHistory.class);
-        classStore.put(TLRPC.TL_messages_search.constructor, TLRPC.TL_messages_search.class);
-        classStore.put(TLRPC.TL_messages_readHistory.constructor, TLRPC.TL_messages_readHistory.class);
-        classStore.put(TLRPC.TL_messages_deleteHistory.constructor, TLRPC.TL_messages_deleteHistory.class);
-        classStore.put(TLRPC.TL_messages_deleteMessages.constructor, TLRPC.TL_messages_deleteMessages.class);
-        classStore.put(TLRPC.TL_messages_restoreMessages.constructor, TLRPC.TL_messages_restoreMessages.class);
-        classStore.put(TLRPC.TL_messages_receivedMessages.constructor, TLRPC.TL_messages_receivedMessages.class);
-        classStore.put(TLRPC.TL_messages_setTyping.constructor, TLRPC.TL_messages_setTyping.class);
-        classStore.put(TLRPC.TL_messages_sendMessage.constructor, TLRPC.TL_messages_sendMessage.class);
-        classStore.put(TLRPC.TL_messages_sendMedia.constructor, TLRPC.TL_messages_sendMedia.class);
-        classStore.put(TLRPC.TL_messages_forwardMessages.constructor, TLRPC.TL_messages_forwardMessages.class);
-        classStore.put(TLRPC.TL_messages_getChats.constructor, TLRPC.TL_messages_getChats.class);
-        classStore.put(TLRPC.TL_messages_getFullChat.constructor, TLRPC.TL_messages_getFullChat.class);
-        classStore.put(TLRPC.TL_messages_editChatTitle.constructor, TLRPC.TL_messages_editChatTitle.class);
-        classStore.put(TLRPC.TL_messages_editChatPhoto.constructor, TLRPC.TL_messages_editChatPhoto.class);
-        classStore.put(TLRPC.TL_messages_addChatUser.constructor, TLRPC.TL_messages_addChatUser.class);
-        classStore.put(TLRPC.TL_messages_deleteChatUser.constructor, TLRPC.TL_messages_deleteChatUser.class);
-        classStore.put(TLRPC.TL_messages_createChat.constructor, TLRPC.TL_messages_createChat.class);
-        classStore.put(TLRPC.TL_updates_getState.constructor, TLRPC.TL_updates_getState.class);
-        classStore.put(TLRPC.TL_updates_getDifference.constructor, TLRPC.TL_updates_getDifference.class);
-        classStore.put(TLRPC.TL_photos_updateProfilePhoto.constructor, TLRPC.TL_photos_updateProfilePhoto.class);
-        classStore.put(TLRPC.TL_photos_uploadProfilePhoto.constructor, TLRPC.TL_photos_uploadProfilePhoto.class);
-        classStore.put(TLRPC.TL_upload_saveFilePart.constructor, TLRPC.TL_upload_saveFilePart.class);
-        classStore.put(TLRPC.TL_upload_getFile.constructor, TLRPC.TL_upload_getFile.class);
-        classStore.put(TLRPC.TL_help_getConfig.constructor, TLRPC.TL_help_getConfig.class);
-        classStore.put(TLRPC.TL_help_getNearestDc.constructor, TLRPC.TL_help_getNearestDc.class);
-        classStore.put(TLRPC.TL_help_getAppUpdate.constructor, TLRPC.TL_help_getAppUpdate.class);
-        classStore.put(TLRPC.TL_help_saveAppLog.constructor, TLRPC.TL_help_saveAppLog.class);
-        classStore.put(TLRPC.TL_help_getInviteText.constructor, TLRPC.TL_help_getInviteText.class);
-        classStore.put(TLRPC.TL_photos_getUserPhotos.constructor, TLRPC.TL_photos_getUserPhotos.class);
-        classStore.put(TLRPC.TL_messages_forwardMessage.constructor, TLRPC.TL_messages_forwardMessage.class);
-        classStore.put(TLRPC.TL_messages_sendBroadcast.constructor, TLRPC.TL_messages_sendBroadcast.class);
-        classStore.put(TLRPC.TL_geochats_getLocated.constructor, TLRPC.TL_geochats_getLocated.class);
-        classStore.put(TLRPC.TL_geochats_getRecents.constructor, TLRPC.TL_geochats_getRecents.class);
-        classStore.put(TLRPC.TL_geochats_checkin.constructor, TLRPC.TL_geochats_checkin.class);
-        classStore.put(TLRPC.TL_geochats_getFullChat.constructor, TLRPC.TL_geochats_getFullChat.class);
-        classStore.put(TLRPC.TL_geochats_editChatTitle.constructor, TLRPC.TL_geochats_editChatTitle.class);
-        classStore.put(TLRPC.TL_geochats_editChatPhoto.constructor, TLRPC.TL_geochats_editChatPhoto.class);
-        classStore.put(TLRPC.TL_geochats_search.constructor, TLRPC.TL_geochats_search.class);
-        classStore.put(TLRPC.TL_geochats_getHistory.constructor, TLRPC.TL_geochats_getHistory.class);
-        classStore.put(TLRPC.TL_geochats_setTyping.constructor, TLRPC.TL_geochats_setTyping.class);
-        classStore.put(TLRPC.TL_geochats_sendMessage.constructor, TLRPC.TL_geochats_sendMessage.class);
-        classStore.put(TLRPC.TL_geochats_sendMedia.constructor, TLRPC.TL_geochats_sendMedia.class);
-        classStore.put(TLRPC.TL_geochats_createGeoChat.constructor, TLRPC.TL_geochats_createGeoChat.class);
-        classStore.put(TLRPC.TL_messages_getDhConfig.constructor, TLRPC.TL_messages_getDhConfig.class);
-        classStore.put(TLRPC.TL_messages_requestEncryption.constructor, TLRPC.TL_messages_requestEncryption.class);
-        classStore.put(TLRPC.TL_messages_acceptEncryption.constructor, TLRPC.TL_messages_acceptEncryption.class);
-        classStore.put(TLRPC.TL_messages_discardEncryption.constructor, TLRPC.TL_messages_discardEncryption.class);
-        classStore.put(TLRPC.TL_messages_setEncryptedTyping.constructor, TLRPC.TL_messages_setEncryptedTyping.class);
-        classStore.put(TLRPC.TL_messages_readEncryptedHistory.constructor, TLRPC.TL_messages_readEncryptedHistory.class);
-        classStore.put(TLRPC.TL_messages_sendEncrypted.constructor, TLRPC.TL_messages_sendEncrypted.class);
-        classStore.put(TLRPC.TL_messages_sendEncryptedFile.constructor, TLRPC.TL_messages_sendEncryptedFile.class);
-        classStore.put(TLRPC.TL_messages_sendEncryptedService.constructor, TLRPC.TL_messages_sendEncryptedService.class);
-        classStore.put(TLRPC.TL_messages_receivedQueue.constructor, TLRPC.TL_messages_receivedQueue.class);
-        classStore.put(TLRPC.TL_upload_saveBigFilePart.constructor, TLRPC.TL_upload_saveBigFilePart.class);
-        classStore.put(TLRPC.TL_help_support.constructor, TLRPC.TL_help_support.class);
-        classStore.put(TLRPC.TL_help_getSupport.constructor, TLRPC.TL_help_getSupport.class);
-        classStore.put(TLRPC.TL_decryptedMessageActionDeleteMessages.constructor, TLRPC.TL_decryptedMessageActionDeleteMessages.class);
-        classStore.put(TLRPC.TL_decryptedMessageActionFlushHistory.constructor, TLRPC.TL_decryptedMessageActionFlushHistory.class);
-        classStore.put(TLRPC.TL_decryptedMessageActionScreenshotMessages.constructor, TLRPC.TL_decryptedMessageActionScreenshotMessages.class);
-        classStore.put(TLRPC.TL_messageEcryptedAction.constructor, TLRPC.TL_messageEcryptedAction.class);
-        classStore.put(TLRPC.TL_decryptedMessageActionNotifyLayer.constructor, TLRPC.TL_decryptedMessageActionNotifyLayer.class);
-        classStore.put(TLRPC.TL_decryptedMessageActionReadMessages.constructor, TLRPC.TL_decryptedMessageActionReadMessages.class);
-        classStore.put(TLRPC.TL_updateNotifySettings.constructor, TLRPC.TL_updateNotifySettings.class);
-        classStore.put(TLRPC.TL_updateUserBlocked.constructor, TLRPC.TL_updateUserBlocked.class);
-        classStore.put(TLRPC.TL_notifyAll.constructor, TLRPC.TL_notifyAll.class);
-        classStore.put(TLRPC.TL_notifyChats.constructor, TLRPC.TL_notifyChats.class);
-        classStore.put(TLRPC.TL_notifyUsers.constructor, TLRPC.TL_notifyUsers.class);
-        classStore.put(TLRPC.TL_notifyPeer.constructor, TLRPC.TL_notifyPeer.class);
-        classStore.put(TLRPC.TL_photos_deletePhotos.constructor, TLRPC.TL_photos_deletePhotos.class);
 
         classStore.put(TLRPC.TL_msg_container.constructor, TLRPC.TL_msg_container.class);
         classStore.put(TLRPC.TL_fileEncryptedLocation.constructor, TLRPC.TL_fileEncryptedLocation.class);
@@ -441,6 +357,11 @@ public TLClassStore () {
         classStore.put(TLRPC.TL_audio_old.constructor, TLRPC.TL_audio_old.class);
         classStore.put(TLRPC.TL_video_old.constructor, TLRPC.TL_video_old.class);
         classStore.put(TLRPC.TL_messageActionCreatedBroadcastList.constructor, TLRPC.TL_messageActionCreatedBroadcastList.class);
+        classStore.put(TLRPC.TL_messageForwarded_old.constructor, TLRPC.TL_messageForwarded_old.class);
+        classStore.put(TLRPC.TL_message_old.constructor, TLRPC.TL_message_old.class);
+        classStore.put(TLRPC.TL_messageService_old.constructor, TLRPC.TL_messageService_old.class);
+        classStore.put(TLRPC.TL_decryptedMessageService_old.constructor, TLRPC.TL_decryptedMessageService_old.class);
+        classStore.put(TLRPC.TL_decryptedMessage_old.constructor, TLRPC.TL_decryptedMessage_old.class);
     }
 
     static TLClassStore store = null;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java b/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
index 3f08baa4a..111255042 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
@@ -13,6 +13,10 @@
 
 @SuppressWarnings("unchecked")
 public class TLRPC {
+
+    public static int MESSAGE_FLAG_UNREAD = 1;
+    public static int MESSAGE_FLAG_OUT = 2;
+
     public static class ChatPhoto extends TLObject {
         public FileLocation photo_small;
         public FileLocation photo_big;
@@ -815,32 +819,6 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
-    public static class TL_messageService extends Message {
-        public static int constructor = 0x9f8d60bb;
-
-
-        public void readParams(AbsSerializedData stream) {
-            id = stream.readInt32();
-            from_id = stream.readInt32();
-            to_id = (Peer)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
-            out = stream.readBool();
-            unread = stream.readBool();
-            date = stream.readInt32();
-            action = (MessageAction)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(id);
-            stream.writeInt32(from_id);
-            to_id.serializeToStream(stream);
-            stream.writeBool(out);
-            stream.writeBool(unread);
-            stream.writeInt32(date);
-            action.serializeToStream(stream);
-        }
-    }
-
     public static class TL_inputPhoneContact extends TLObject {
         public static int constructor = 0xf392b7f4;
 
@@ -865,6 +843,99 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
+    public static class SendMessageAction extends TLObject {
+    }
+
+    public static class TL_sendMessageGeoLocationAction extends SendMessageAction {
+        public static int constructor = 0x176f8ba1;
+
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+        }
+    }
+
+    public static class TL_sendMessageChooseContactAction extends SendMessageAction {
+        public static int constructor = 0x628cbc6f;
+
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+        }
+    }
+
+    public static class TL_sendMessageTypingAction extends SendMessageAction {
+        public static int constructor = 0x16bf744e;
+
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+        }
+    }
+
+    public static class TL_sendMessageUploadDocumentAction extends SendMessageAction {
+        public static int constructor = 0x8faee98e;
+
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+        }
+    }
+
+    public static class TL_sendMessageRecordVideoAction extends SendMessageAction {
+        public static int constructor = 0xa187d66f;
+
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+        }
+    }
+
+    public static class TL_sendMessageUploadPhotoAction extends SendMessageAction {
+        public static int constructor = 0x990a3c1a;
+
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+        }
+    }
+
+    public static class TL_sendMessageUploadVideoAction extends SendMessageAction {
+        public static int constructor = 0x92042ff7;
+
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+        }
+    }
+
+    public static class TL_sendMessageUploadAudioAction extends SendMessageAction {
+        public static int constructor = 0xe6ac8a6f;
+
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+        }
+    }
+
+    public static class TL_sendMessageCancelAction extends SendMessageAction {
+        public static int constructor = 0xfd5ec8f5;
+
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+        }
+    }
+
+    public static class TL_sendMessageRecordAudioAction extends SendMessageAction {
+        public static int constructor = 0xd52f73f7;
+
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+        }
+    }
+
     public static class TL_invokeAfterMsg extends TLObject {
         public static int constructor = 0xcb9f372d;
 
@@ -1009,13 +1080,36 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
-    public static class TL_auth_sentCode extends TLObject {
-        public static int constructor = 0xefed51d9;
-
+    public static class auth_SentCode extends TLObject {
         public boolean phone_registered;
         public String phone_code_hash;
         public int send_call_timeout;
         public boolean is_password;
+    }
+
+    public static class TL_auth_sentAppCode extends auth_SentCode {
+        public static int constructor = 0xe325edcf;
+
+
+        public void readParams(AbsSerializedData stream) {
+            phone_registered = stream.readBool();
+            phone_code_hash = stream.readString();
+            send_call_timeout = stream.readInt32();
+            is_password = stream.readBool();
+        }
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+            stream.writeBool(phone_registered);
+            stream.writeString(phone_code_hash);
+            stream.writeInt32(send_call_timeout);
+            stream.writeBool(is_password);
+        }
+    }
+
+    public static class TL_auth_sentCode extends auth_SentCode {
+        public static int constructor = 0xefed51d9;
+
 
         public void readParams(AbsSerializedData stream) {
             phone_registered = stream.readBool();
@@ -2463,18 +2557,23 @@ public void serializeToStream(AbsSerializedData stream) {
     public static class DecryptedMessage extends TLObject {
         public long random_id;
         public byte[] random_bytes;
+        public int in_seq_no;
+        public int out_seq_no;
         public DecryptedMessageAction action;
+        public int ttl;
         public String message;
         public DecryptedMessageMedia media;
     }
 
     public static class TL_decryptedMessageService extends DecryptedMessage {
-        public static int constructor = 0xaa48327d;
+        public static int constructor = 0xda431693;
 
 
         public void readParams(AbsSerializedData stream) {
             random_id = stream.readInt64();
             random_bytes = stream.readByteArray();
+            in_seq_no = stream.readInt32();
+            out_seq_no = stream.readInt32();
             action = (DecryptedMessageAction)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
         }
 
@@ -2482,17 +2581,22 @@ public void serializeToStream(AbsSerializedData stream) {
             stream.writeInt32(constructor);
             stream.writeInt64(random_id);
             stream.writeByteArray(random_bytes);
+            stream.writeInt32(in_seq_no);
+            stream.writeInt32(out_seq_no);
             action.serializeToStream(stream);
         }
     }
 
     public static class TL_decryptedMessage extends DecryptedMessage {
-        public static int constructor = 0x1f814f1f;
+        public static int constructor = 0x4e748938;
 
 
         public void readParams(AbsSerializedData stream) {
             random_id = stream.readInt64();
             random_bytes = stream.readByteArray();
+            in_seq_no = stream.readInt32();
+            out_seq_no = stream.readInt32();
+            ttl = stream.readInt32();
             message = stream.readString();
             media = (DecryptedMessageMedia)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
         }
@@ -2501,6 +2605,9 @@ public void serializeToStream(AbsSerializedData stream) {
             stream.writeInt32(constructor);
             stream.writeInt64(random_id);
             stream.writeByteArray(random_bytes);
+            stream.writeInt32(in_seq_no);
+            stream.writeInt32(out_seq_no);
+            stream.writeInt32(ttl);
             stream.writeString(message);
             media.serializeToStream(stream);
         }
@@ -3334,6 +3441,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public int version;
         public NotifyPeer peer;
         public PeerNotifySettings notify_settings;
+        public SendMessageAction action;
         public String first_name;
         public String last_name;
         public int qts;
@@ -3473,32 +3581,36 @@ public void serializeToStream(AbsSerializedData stream) {
     }
 
     public static class TL_updateUserTyping extends Update {
-        public static int constructor = 0x6baa8508;
+        public static int constructor = 0x5c486927;
 
 
         public void readParams(AbsSerializedData stream) {
             user_id = stream.readInt32();
+            action = (SendMessageAction)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
         }
 
         public void serializeToStream(AbsSerializedData stream) {
             stream.writeInt32(constructor);
             stream.writeInt32(user_id);
+            action.serializeToStream(stream);
         }
     }
 
     public static class TL_updateChatUserTyping extends Update {
-        public static int constructor = 0x3c46cfe6;
+        public static int constructor = 0x9a65ea1f;
 
 
         public void readParams(AbsSerializedData stream) {
             chat_id = stream.readInt32();
             user_id = stream.readInt32();
+            action = (SendMessageAction)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
         }
 
         public void serializeToStream(AbsSerializedData stream) {
             stream.writeInt32(constructor);
             stream.writeInt32(chat_id);
             stream.writeInt32(user_id);
+            action.serializeToStream(stream);
         }
     }
 
@@ -3942,6 +4054,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public int layer;
         public int ttl_seconds;
         public ArrayList<Long> random_ids = new ArrayList<Long>();
+        public SendMessageAction action;
     }
 
     public static class TL_decryptedMessageActionSetMessageTTL extends DecryptedMessageAction {
@@ -4002,6 +4115,20 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
+    public static class TL_decryptedMessageActionTyping extends DecryptedMessageAction {
+        public static int constructor = 0xccb27641;
+
+
+        public void readParams(AbsSerializedData stream) {
+            action = (SendMessageAction)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
+        }
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+            action.serializeToStream(stream);
+        }
+    }
+
     public static class contacts_MyLink extends TLObject {
         public boolean contact;
     }
@@ -4413,6 +4540,52 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
+    public static class TL_auth_sendSms extends TLObject {
+        public static int constructor = 0xda9f3e8;
+
+        public String phone_number;
+        public String phone_code_hash;
+
+        public Class responseClass () {
+            return Bool.class;
+        }
+
+        public void readParams(AbsSerializedData stream) {
+            phone_number = stream.readString();
+            phone_code_hash = stream.readString();
+        }
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+            stream.writeString(phone_number);
+            stream.writeString(phone_code_hash);
+        }
+    }
+
+    public static class TL_messages_readMessageContents extends TLObject {
+        public static int constructor = 0x354b5bc2;
+
+        public ArrayList<Integer> id = new ArrayList<Integer>();
+
+        public void readParams(AbsSerializedData stream) {
+            stream.readInt32();
+            int count = stream.readInt32();
+            for (int a = 0; a < count; a++) {
+                id.add(stream.readInt32());
+            }
+        }
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+            stream.writeInt32(0x1cb5c415);
+            int count = id.size();
+            stream.writeInt32(count);
+            for (Integer anId : id) {
+                stream.writeInt32(anId);
+            }
+        }
+    }
+
     public static class InputAudio extends TLObject {
         public long id;
         public long access_hash;
@@ -4892,6 +5065,15 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
+    public static class TL_storage_filePdf extends storage_FileType {
+        public static int constructor = 0xae1e508d;
+
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+        }
+    }
+
     public static class TL_storage_fileMov extends storage_FileType {
         public static int constructor = 0x4b09ebbc;
 
@@ -4976,6 +5158,24 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
+    public static class TL_inputMessagesFilterDocument extends MessagesFilter {
+        public static int constructor = 0x9eddf188;
+
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+        }
+    }
+
+    public static class TL_inputMessagesFilterAudio extends MessagesFilter {
+        public static int constructor = 0xcfc87522;
+
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+        }
+    }
+
     public static class TL_msgs_state_info extends TLObject {
         public static int constructor = 0x04deb57d;
 
@@ -7058,11 +7258,12 @@ public void serializeToStream(AbsSerializedData stream) {
     }
 
     public static class TL_messages_readHistory extends TLObject {
-        public static int constructor = 0xb04f2510;
+        public static int constructor = 0xeed884c6;
 
         public InputPeer peer;
         public int max_id;
         public int offset;
+        public boolean read_contents;
 
         public Class responseClass () {
             return TL_messages_affectedHistory.class;
@@ -7072,6 +7273,7 @@ public void readParams(AbsSerializedData stream) {
             peer = (InputPeer)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
             max_id = stream.readInt32();
             offset = stream.readInt32();
+            read_contents = stream.readBool();
         }
 
         public void serializeToStream(AbsSerializedData stream) {
@@ -7079,6 +7281,7 @@ public void serializeToStream(AbsSerializedData stream) {
             peer.serializeToStream(stream);
             stream.writeInt32(max_id);
             stream.writeInt32(offset);
+            stream.writeBool(read_contents);
         }
     }
 
@@ -7105,10 +7308,10 @@ public void serializeToStream(AbsSerializedData stream) {
     }
 
     public static class TL_messages_setTyping extends TLObject {
-        public static int constructor = 0x719839e9;
+        public static int constructor = 0xa3825e50;
 
         public InputPeer peer;
-        public boolean typing;
+        public SendMessageAction action;
 
         public Class responseClass () {
             return Bool.class;
@@ -7116,13 +7319,13 @@ public Class responseClass () {
 
         public void readParams(AbsSerializedData stream) {
             peer = (InputPeer)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
-            typing = stream.readBool();
+            action = (SendMessageAction)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
         }
 
         public void serializeToStream(AbsSerializedData stream) {
             stream.writeInt32(constructor);
             peer.serializeToStream(stream);
-            stream.writeBool(typing);
+            action.serializeToStream(stream);
         }
     }
 
@@ -8225,6 +8428,44 @@ public void freeResources() {
         }
     }
 
+    public static class TL_decryptedMessageService_old extends TL_decryptedMessageService {
+        public static int constructor = 0xaa48327d;
+
+
+        public void readParams(AbsSerializedData stream) {
+            random_id = stream.readInt64();
+            random_bytes = stream.readByteArray();
+            action = (DecryptedMessageAction)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
+        }
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+            stream.writeInt64(random_id);
+            stream.writeByteArray(random_bytes);
+            action.serializeToStream(stream);
+        }
+    }
+
+    public static class TL_decryptedMessage_old extends TL_decryptedMessage {
+        public static int constructor = 0x1f814f1f;
+
+
+        public void readParams(AbsSerializedData stream) {
+            random_id = stream.readInt64();
+            random_bytes = stream.readByteArray();
+            message = stream.readString();
+            media = (DecryptedMessageMedia)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
+        }
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+            stream.writeInt64(random_id);
+            stream.writeByteArray(random_bytes);
+            stream.writeString(message);
+            media.serializeToStream(stream);
+        }
+    }
+
     public static class TL_messages_sendEncryptedFile extends TLObject {
         public static int constructor = 0x9a901b66;
 
@@ -8522,6 +8763,7 @@ public void serializeToStream(AbsSerializedData stream) {
     }
 
     public static class Message extends TLObject {
+        public int flags;
         public int id;
         public int fwd_from_id;
         public int fwd_date;
@@ -8544,6 +8786,140 @@ public void serializeToStream(AbsSerializedData stream) {
     }
 
     public static class TL_messageForwarded extends Message {
+        public static int constructor = 0xa367e716;
+
+
+        public void readParams(AbsSerializedData stream) {
+            flags = stream.readInt32();
+            id = stream.readInt32();
+            fwd_from_id = stream.readInt32();
+            fwd_date = stream.readInt32();
+            from_id = stream.readInt32();
+            to_id = (Peer)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
+            date = stream.readInt32();
+            message = stream.readString();
+            media = (MessageMedia)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
+            out = (flags & MESSAGE_FLAG_OUT) != 0;
+            unread = (flags & MESSAGE_FLAG_UNREAD) != 0;
+            if (id < 0) {
+                fwd_msg_id = stream.readInt32();
+            }
+            if (id < 0 || (media != null && !(media instanceof TL_messageMediaEmpty) && message != null && message.length() != 0 && message.startsWith("-1"))) {
+                attachPath = stream.readString();
+            }
+            if (id < 0 && message.length() > 6 && media instanceof TL_messageMediaVideo) {
+                videoEditedInfo = new VideoEditedInfo();
+                videoEditedInfo.parseString(message);
+            }
+        }
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+            stream.writeInt32(flags);
+            stream.writeInt32(id);
+            stream.writeInt32(fwd_from_id);
+            stream.writeInt32(fwd_date);
+            stream.writeInt32(from_id);
+            to_id.serializeToStream(stream);
+            stream.writeInt32(date);
+            stream.writeString(message);
+            media.serializeToStream(stream);
+            if (id < 0) {
+                stream.writeInt32(fwd_msg_id);
+            }
+            stream.writeString(attachPath);
+        }
+    }
+
+    public static class TL_message extends Message {
+        public static int constructor = 0x567699b3;
+
+
+        public void readParams(AbsSerializedData stream) {
+            flags = stream.readInt32();
+            id = stream.readInt32();
+            from_id = stream.readInt32();
+            to_id = (Peer)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
+            date = stream.readInt32();
+            message = stream.readString();
+            media = (MessageMedia)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
+            out = (flags & 2) != 0;
+            unread = (flags & 1) != 0;
+            if (id < 0 || (media != null && !(media instanceof TL_messageMediaEmpty) && message != null && message.length() != 0 && message.startsWith("-1"))) {
+                attachPath = stream.readString();
+            }
+            if (id < 0 && message.length() > 6 && media instanceof TL_messageMediaVideo) {
+                videoEditedInfo = new VideoEditedInfo();
+                videoEditedInfo.parseString(message);
+            }
+        }
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+            stream.writeInt32(flags);
+            stream.writeInt32(id);
+            stream.writeInt32(from_id);
+            to_id.serializeToStream(stream);
+            stream.writeInt32(date);
+            stream.writeString(message);
+            media.serializeToStream(stream);
+            stream.writeString(attachPath);
+        }
+    }
+
+    public static class TL_messageService extends Message {
+        public static int constructor = 0x1d86f70e;
+
+
+        public void readParams(AbsSerializedData stream) {
+            flags = stream.readInt32();
+            id = stream.readInt32();
+            from_id = stream.readInt32();
+            to_id = (Peer)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
+            date = stream.readInt32();
+            action = (MessageAction)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
+            out = (flags & 2) != 0;
+            unread = (flags & 1) != 0;
+        }
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+            stream.writeInt32(flags);
+            stream.writeInt32(id);
+            stream.writeInt32(from_id);
+            to_id.serializeToStream(stream);
+            stream.writeInt32(date);
+            action.serializeToStream(stream);
+        }
+    }
+
+    public static class TL_messageService_old extends TL_messageService {
+        public static int constructor = 0x9f8d60bb;
+
+
+        public void readParams(AbsSerializedData stream) {
+            id = stream.readInt32();
+            from_id = stream.readInt32();
+            to_id = (Peer)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
+            out = stream.readBool();
+            unread = stream.readBool();
+            date = stream.readInt32();
+            action = (MessageAction)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
+        }
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+            stream.writeInt32(id);
+            stream.writeInt32(from_id);
+            to_id.serializeToStream(stream);
+            stream.writeBool(out);
+            stream.writeBool(unread);
+            stream.writeInt32(date);
+            action.serializeToStream(stream);
+        }
+    }
+
+    public static class TL_messageForwarded_old extends TL_messageForwarded {
         public static int constructor = 0x5f46804;
 
 
@@ -8589,7 +8965,7 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
-    public static class TL_message extends Message {
+    public static class TL_message_old extends TL_message {
         public static int constructor = 0x22eb6aba;
 
         public void readParams(AbsSerializedData stream) {
@@ -9226,8 +9602,8 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
-    public static class invokeWithLayer14 extends TLObject {
-        public static int constructor = 0x2b9b08fa;
+    public static class invokeWithLayer17 extends TLObject {
+        public static int constructor = 0x50858a19;
 
         public TLObject query;
 
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/TcpConnection.java b/TMessagesProj/src/main/java/org/telegram/messenger/TcpConnection.java
index 263ed8fdc..a2afb811c 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/TcpConnection.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/TcpConnection.java
@@ -48,7 +48,7 @@
     private boolean hasSomeDataSinceLastConnect = false;
     private int willRetryConnectCount = 5;
     private boolean isNextPort = false;
-    private final Integer timerSync = 1;
+    private final Object timerSync = new Object();
     private boolean wasConnected;
     private int lastPacketLength;
 
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
index a1e375373..f27723f54 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
@@ -28,7 +28,7 @@
     public static String contactsHash = "";
     public static String importHash = "";
     public static boolean blockedUsersLoaded = false;
-    private final static Integer sync = 1;
+    private final static Object sync = new Object();
     public static boolean saveIncomingPhotos = false;
     public static int contactsVersion = 1;
 
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java b/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
index e6d7ed8c6..02815f5ca 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
@@ -530,7 +530,7 @@ public static void addMediaToGallery(Uri uri) {
     private static File getAlbumDir() {
         File storageDir = null;
         if (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {
-            storageDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES), LocaleController.getString("AppName", R.string.AppName));
+            storageDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES), "Telegram");
             if (storageDir != null) {
                 if (!storageDir.mkdirs()) {
                     if (!storageDir.exists()){
@@ -644,7 +644,6 @@ public static CharSequence generateSearchName(String name, String name2, String
         if (name == null && name2 == null) {
             return "";
         }
-        int index;
         SpannableStringBuilder builder = new SpannableStringBuilder();
         String wholeString = name;
         if (wholeString == null || wholeString.length() == 0) {
@@ -653,28 +652,34 @@ public static CharSequence generateSearchName(String name, String name2, String
             wholeString += " " + name2;
         }
         wholeString = wholeString.trim();
-        String[] args = wholeString.split(" ");
-
-        for (String arg : args) {
-            String str = arg;
-            if (str != null) {
-                String lower = str.toLowerCase();
-                if (lower.startsWith(q)) {
-                    if (builder.length() != 0) {
-                        builder.append(" ");
-                    }
-                    String query = str.substring(0, q.length());
-                    builder.append(Html.fromHtml("<font color=\"#357aa8\">" + query + "</font>"));
-                    str = str.substring(q.length());
-                    builder.append(str);
-                } else {
-                    if (builder.length() != 0) {
-                        builder.append(" ");
-                    }
-                    builder.append(str);
-                }
+        String lower = " " + wholeString.toLowerCase();
+
+        int index = -1;
+        int lastIndex = 0;
+        while ((index = lower.indexOf(" " + q, lastIndex)) != -1) {
+            int idx = index - (index == 0 ? 0 : 1);
+            int end = q.length() + (index == 0 ? 0 : 1) + idx;
+
+            if (lastIndex != 0 && lastIndex != idx + 1) {
+                builder.append(wholeString.substring(lastIndex, idx));
+            } else if (lastIndex == 0 && idx != 0) {
+                builder.append(wholeString.substring(0, idx));
+            }
+
+            String query = wholeString.substring(idx, end);
+            if (query.startsWith(" ")) {
+                builder.append(" ");
             }
+            query.trim();
+            builder.append(Html.fromHtml("<font color=\"#357aa8\">" + query + "</font>"));
+
+            lastIndex = end;
+        }
+
+        if (lastIndex != -1 && lastIndex != wholeString.length()) {
+            builder.append(wholeString.substring(lastIndex, wholeString.length()));
         }
+
         return builder;
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivitySearchAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivitySearchAdapter.java
index 08ef989d8..c6fc1baf0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivitySearchAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivitySearchAdapter.java
@@ -87,7 +87,8 @@ public void run() {
 
                         for (TLRPC.TL_contact contact : contactsCopy) {
                             TLRPC.User user = MessagesController.getInstance().getUser(contact.user_id);
-                            if (user.first_name != null && user.first_name.toLowerCase().startsWith(q) || user.last_name != null && user.last_name.toLowerCase().startsWith(q)) {
+                            String name = ContactsController.formatName(user.first_name, user.last_name).toLowerCase();
+                            if (name.startsWith(q) || name.contains(" " + q)) {
                                 if (user.id == UserConfig.getClientUserId()) {
                                     continue;
                                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java
index fba3f0ccb..febf68909 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java
@@ -354,9 +354,9 @@ public void setMessageObject(MessageObject messageObject) {
                 if (audioUser.photo != null) {
                     currentPhoto = audioUser.photo.photo_small;
                 }
-                avatarImage.setImage(currentPhoto, "50_50", getResources().getDrawable(AndroidUtilities.getUserAvatarForId(uid)));
+                avatarImage.setImage(currentPhoto, "50_50", getResources().getDrawable(AndroidUtilities.getUserAvatarForId(uid)), false);
             } else {
-                avatarImage.setImage((TLRPC.FileLocation)null, "50_50", getResources().getDrawable(AndroidUtilities.getUserAvatarForId(uid)));
+                avatarImage.setImage((TLRPC.FileLocation)null, "50_50", getResources().getDrawable(AndroidUtilities.getUserAvatarForId(uid)), false);
             }
 
             if (messageObject.isOut()) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
index 480fd97dd..2577049de 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
@@ -265,9 +265,9 @@ public void setMessageObject(MessageObject messageObject) {
                 } else {
                     currentPhoto = null;
                 }
-                avatarImage.setImage(currentPhoto, "50_50", getResources().getDrawable(AndroidUtilities.getUserAvatarForId(currentUser.id)));
+                avatarImage.setImage(currentPhoto, "50_50", getResources().getDrawable(AndroidUtilities.getUserAvatarForId(currentUser.id)), false);
             } else {
-                avatarImage.setImage((TLRPC.FileLocation)null, "50_50", null);
+                avatarImage.setImage(null, "50_50", null, false);
             }
         }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java
index dc0173cf8..69af89fa3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java
@@ -140,6 +140,7 @@ public ChatMediaCell(Context context) {
 
             progressPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
             progressPaint.setStyle(Paint.Style.STROKE);
+            progressPaint.setStrokeCap(Paint.Cap.ROUND);
             progressPaint.setStrokeWidth(AndroidUtilities.dp(2));
 
             decelerateInterpolator = new DecelerateInterpolator();
@@ -313,9 +314,9 @@ private void didPressedButton() {
             cancelLoading = false;
             if (currentMessageObject.type == 1) {
                 if (currentMessageObject.imagePreview != null) {
-                    photoImage.setImage(currentPhotoObject.photoOwner.location, currentPhotoFilter, new BitmapDrawable(currentMessageObject.imagePreview), currentPhotoObject.photoOwner.size);
+                    photoImage.setImage(currentPhotoObject.photoOwner.location, currentPhotoFilter, new BitmapDrawable(currentMessageObject.imagePreview), currentPhotoObject.photoOwner.size, false);
                 } else {
-                    photoImage.setImage(currentPhotoObject.photoOwner.location, currentPhotoFilter, currentMessageObject.isOut() ? placeholderOutDrawable : placeholderInDrawable, currentPhotoObject.photoOwner.size);
+                    photoImage.setImage(currentPhotoObject.photoOwner.location, currentPhotoFilter, currentMessageObject.isOut() ? placeholderOutDrawable : placeholderInDrawable, currentPhotoObject.photoOwner.size, false);
                 }
             } else if (currentMessageObject.type == 8 || currentMessageObject.type == 9) {
                 FileLoader.getInstance().loadFile(currentMessageObject.messageOwner.media.document, true);
@@ -504,7 +505,7 @@ public void setMessageObject(MessageObject messageObject) {
                         photoImage.setImageBitmap(currentPhotoObject.image);
                     } else {
                         currentPhotoFilter = String.format(Locale.US, "%d_%d_b", photoWidth, photoHeight);
-                        photoImage.setImage(currentPhotoObject.photoOwner.location, currentPhotoFilter, null, 0);
+                        photoImage.setImage(currentPhotoObject.photoOwner.location, currentPhotoFilter, null, 0, false);
                     }
                 } else {
                     photoImage.setImageBitmap((BitmapDrawable)null);
@@ -597,9 +598,9 @@ public void setMessageObject(MessageObject messageObject) {
                         }
                         if (photoExist || MediaController.getInstance().canDownloadMedia(MediaController.AUTODOWNLOAD_MASK_PHOTO)) {
                             if (messageObject.imagePreview != null) {
-                                photoImage.setImage(currentPhotoObject.photoOwner.location, currentPhotoFilter, new BitmapDrawable(messageObject.imagePreview), noSize ? 0 : currentPhotoObject.photoOwner.size);
+                                photoImage.setImage(currentPhotoObject.photoOwner.location, currentPhotoFilter, new BitmapDrawable(messageObject.imagePreview), noSize ? 0 : currentPhotoObject.photoOwner.size, false);
                             } else {
-                                photoImage.setImage(currentPhotoObject.photoOwner.location, currentPhotoFilter, messageObject.isOut() ? placeholderOutDrawable : placeholderInDrawable, noSize ? 0 : currentPhotoObject.photoOwner.size);
+                                photoImage.setImage(currentPhotoObject.photoOwner.location, currentPhotoFilter, messageObject.isOut() ? placeholderOutDrawable : placeholderInDrawable, noSize ? 0 : currentPhotoObject.photoOwner.size, false);
                             }
                         } else {
                             photoNotSet = true;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatOrUserCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatOrUserCell.java
index 5b496167c..4b782b913 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatOrUserCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatOrUserCell.java
@@ -215,7 +215,7 @@ public void update(int mask) {
 
 
         lastAvatar = photo;
-        avatarImage.setImage(photo, "50_50", placeHolderId == 0 ? null : getResources().getDrawable(placeHolderId));
+        avatarImage.setImage(photo, "50_50", placeHolderId == 0 ? null : getResources().getDrawable(placeHolderId), false);
 
         if (getMeasuredWidth() != 0 || getMeasuredHeight() != 0) {
             buildLayout();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
index ef6f19191..99970c904 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
@@ -263,7 +263,7 @@ public void update(int mask) {
                 placeHolderId = AndroidUtilities.getBroadcastAvatarForId(chat.id);
             }
         }
-        avatarImage.setImage(photo, "50_50", placeHolderId == 0 ? null : getResources().getDrawable(placeHolderId));
+        avatarImage.setImage(photo, "50_50", placeHolderId == 0 ? null : getResources().getDrawable(placeHolderId), false);
 
         if (getMeasuredWidth() != 0 || getMeasuredHeight() != 0) {
             buildLayout();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 32b9561bd..e386307f8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -9,6 +9,8 @@
 package org.telegram.ui;
 
 import android.animation.Animator;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.Context;
@@ -114,6 +116,7 @@
     private View bottomOverlayChat;
     private TypingDotsDrawable typingDotsDrawable;
     private View emptyViewContainer;
+    private ArrayList<View> actionModeViews = new ArrayList<View>();
 
     private TextView bottomOverlayText;
 
@@ -552,6 +555,7 @@ public void onItemClick(int id) {
                         args.putBoolean("onlySelect", true);
                         args.putBoolean("serverOnly", true);
                         args.putString("selectAlertString", LocaleController.getString("ForwardMessagesTo", R.string.ForwardMessagesTo));
+                        args.putString("selectAlertStringGroup", LocaleController.getString("ForwardMessagesToGroup", R.string.ForwardMessagesToGroup));
                         MessagesActivity fragment = new MessagesActivity(args);
                         fragment.setDelegate(ChatActivity.this);
                         presentFragment(fragment);
@@ -581,8 +585,10 @@ public void onItemClick(int id) {
             item.addSubItem(attach_location, LocaleController.getString("ChatLocation", R.string.ChatLocation), R.drawable.ic_attach_location);
             menuItem = item;
 
+            actionModeViews.clear();
+
             ActionBarMenu actionMode = actionBarLayer.createActionMode();
-            actionMode.addItem(-2, R.drawable.ic_ab_done_gray, R.drawable.bar_selector_mode);
+            actionModeViews.add(actionMode.addItem(-2, R.drawable.ic_ab_done_gray, R.drawable.bar_selector_mode));
 
             FrameLayout layout = new FrameLayout(actionMode.getContext());
             layout.setBackgroundColor(0xffe5e5e5);
@@ -594,6 +600,7 @@ public void onItemClick(int id) {
             layoutParams.bottomMargin = AndroidUtilities.dp(12);
             layoutParams.gravity = Gravity.CENTER_VERTICAL;
             layout.setLayoutParams(layoutParams);
+            actionModeViews.add(layout);
 
             selectedMessagesCountTextView = new TextView(actionMode.getContext());
             selectedMessagesCountTextView.setTextSize(18);
@@ -617,13 +624,19 @@ public boolean onTouch(View v, MotionEvent event) {
             selectedMessagesCountTextView.setLayoutParams(layoutParams);
 
             if (currentEncryptedChat == null) {
+<<<<<<< HEAD
                 actionMode.addItem(quoteforward, R.drawable.ic_ab_fwd_quoteforward, R.drawable.bar_selector_mode);
                 actionMode.addItem(forward, R.drawable.ic_ab_fwd_forward, R.drawable.bar_selector_mode);
                 actionMode.addItem(copy, R.drawable.ic_ab_fwd_copy, R.drawable.bar_selector_mode);
                 actionMode.addItem(delete, R.drawable.ic_ab_fwd_delete, R.drawable.bar_selector_mode);
+=======
+                actionModeViews.add(actionMode.addItem(copy, R.drawable.ic_ab_fwd_copy, R.drawable.bar_selector_mode));
+                actionModeViews.add(actionMode.addItem(forward, R.drawable.ic_ab_fwd_forward, R.drawable.bar_selector_mode));
+                actionModeViews.add(actionMode.addItem(delete, R.drawable.ic_ab_fwd_delete, R.drawable.bar_selector_mode));
+>>>>>>> 43674c486f92415e669a102d0c403fc94cac2cd3
             } else {
-                actionMode.addItem(copy, R.drawable.ic_ab_fwd_copy, R.drawable.bar_selector_mode);
-                actionMode.addItem(delete, R.drawable.ic_ab_fwd_delete, R.drawable.bar_selector_mode);
+                actionModeViews.add(actionMode.addItem(copy, R.drawable.ic_ab_fwd_copy, R.drawable.bar_selector_mode));
+                actionModeViews.add(actionMode.addItem(delete, R.drawable.ic_ab_fwd_delete, R.drawable.bar_selector_mode));
             }
             actionMode.getItem(copy).setVisibility(selectedMessagesCanCopyIds.size() != 0 ? View.VISIBLE : View.GONE);
 
@@ -1278,8 +1291,8 @@ private void updateSubtitle() {
                     if (info != null) {
                         count = info.participants.size();
                     }
-                    if (onlineCount > 0 && count != 0) {
-                        actionBarLayer.setSubtitle(String.format("%s, %d %s", LocaleController.formatPluralString("Members", count), onlineCount, LocaleController.getString("Online", R.string.Online)));
+                    if (onlineCount > 1 && count != 0) {
+                        actionBarLayer.setSubtitle(String.format("%s, %s", LocaleController.formatPluralString("Members", count), LocaleController.formatPluralString("Online", onlineCount)));
                     } else {
                         actionBarLayer.setSubtitle(LocaleController.formatPluralString("Members", count));
                     }
@@ -2902,6 +2915,21 @@ public void onClick(DialogInterface dialogInterface, int i) {
             return;
         }
         actionBarLayer.showActionMode();
+        if (Build.VERSION.SDK_INT >= 11) {
+            AnimatorSet animatorSet = new AnimatorSet();
+            ArrayList<Animator> animators = new ArrayList<Animator>();
+            for (int a = 0; a < actionModeViews.size(); a++) {
+                View view = actionModeViews.get(a);
+                if (a < 2) {
+                    animators.add(ObjectAnimator.ofFloat(view, "translationX", -AndroidUtilities.dp(56), 0));
+                } else {
+                    animators.add(ObjectAnimator.ofFloat(view, "scaleY", 0.1f, 1.0f));
+                }
+            }
+            animatorSet.playTogether(animators);
+            animatorSet.setDuration(250);
+            animatorSet.start();
+        }
         addToSelectedMessages(message);
         updateActionModeTitle();
         updateVisibleRows();
@@ -2936,6 +2964,7 @@ private void processSelectedOption(int option) {
             args.putBoolean("onlySelect", true);
             args.putBoolean("serverOnly", true);
             args.putString("selectAlertString", LocaleController.getString("ForwardMessagesTo", R.string.ForwardMessagesTo));
+            args.putString("selectAlertStringGroup", LocaleController.getString("ForwardMessagesToGroup", R.string.ForwardMessagesToGroup));
             MessagesActivity fragment = new MessagesActivity(args);
             fragment.setDelegate(this);
             presentFragment(fragment);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java
index 1545a3e73..d3253ada9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java
@@ -630,7 +630,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 }
 
                 if (count != 0 && onlineCount > 1) {
-                    onlineText.setText(Html.fromHtml(String.format("%s, <font color='#357aa8'>%d %s</font>", LocaleController.formatPluralString("Members", count), onlineCount, LocaleController.getString("Online", R.string.Online))));
+                    onlineText.setText(Html.fromHtml(String.format("%s, <font color='#357aa8'>%s</font>", LocaleController.formatPluralString("Members", count), LocaleController.formatPluralString("Online", onlineCount))));
                 } else {
                     onlineText.setText(LocaleController.formatPluralString("Members", count));
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
index e2d872e39..d530fdc83 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
@@ -18,6 +18,7 @@
 import android.text.InputType;
 import android.view.Gravity;
 import android.view.LayoutInflater;
+import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.inputmethod.EditorInfo;
@@ -39,7 +40,6 @@
 import org.telegram.messenger.R;
 import org.telegram.messenger.RPCRequest;
 import org.telegram.messenger.UserConfig;
-import org.telegram.messenger.Utilities;
 import org.telegram.ui.Adapters.ContactsActivityAdapter;
 import org.telegram.ui.Adapters.ContactsActivitySearchAdapter;
 import org.telegram.ui.Cells.ChatOrUserCell;
@@ -203,6 +203,12 @@ public void onTextChanged(EditText editText) {
 
             listView = (PinnedHeaderListView)fragmentView.findViewById(R.id.listView);
             listView.setEmptyView(emptyTextView);
+            emptyTextView.setOnTouchListener(new View.OnTouchListener() {
+                @Override
+                public boolean onTouch(View v, MotionEvent event) {
+                    return true;
+                }
+            });
             listView.setVerticalScrollBarEnabled(false);
 
             listViewAdapter = new ContactsActivityAdapter(getParentActivity(), onlyUsers, usersAsSections, ignoreUsers);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java
index a71e38703..332381d6c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java
@@ -10,6 +10,7 @@
 
 import android.content.Context;
 import android.view.LayoutInflater;
+import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AbsListView;
@@ -193,6 +194,12 @@ public void onTextChanged(EditText editText) {
 
             listView = (PinnedHeaderListView)fragmentView.findViewById(R.id.listView);
             listView.setEmptyView(emptyTextView);
+            emptyTextView.setOnTouchListener(new View.OnTouchListener() {
+                @Override
+                public boolean onTouch(View v, MotionEvent event) {
+                    return true;
+                }
+            });
             listView.setVerticalScrollBarEnabled(false);
 
             listView.setAdapter(listViewAdapter = new ListAdapter(getParentActivity()));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
index d97f49816..293fc3a45 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
@@ -17,6 +17,7 @@
 import android.os.Environment;
 import android.os.StatFs;
 import android.view.LayoutInflater;
+import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
@@ -151,6 +152,12 @@ public void onItemClick(int id) {
             fragmentView = inflater.inflate(R.layout.document_select_layout, container, false);
             listAdapter = new ListAdapter(getParentActivity());
             emptyView = (TextView)fragmentView.findViewById(R.id.searchEmptyView);
+            emptyView.setOnTouchListener(new View.OnTouchListener() {
+                @Override
+                public boolean onTouch(View v, MotionEvent event) {
+                    return true;
+                }
+            });
             listView = (ListView)fragmentView.findViewById(R.id.listView);
             listView.setEmptyView(emptyView);
             listView.setAdapter(listAdapter);
@@ -400,10 +407,10 @@ private void listRoots() {
         items.add(fs);
 
         try {
-            File telegramPath = new File(Environment.getExternalStorageDirectory(), LocaleController.getString("AppName", R.string.AppName));
+            File telegramPath = new File(Environment.getExternalStorageDirectory(), "Telegram");
             if (telegramPath.exists()) {
                 fs = new ListItem();
-                fs.title = LocaleController.getString("AppName", R.string.AppName);
+                fs.title = "Telegram";
                 fs.subtitle = telegramPath.toString();
                 fs.icon = R.drawable.ic_directory;
                 fs.file = telegramPath;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
index 9aefe5125..52395ca14 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
@@ -24,6 +24,7 @@
 import android.text.TextWatcher;
 import android.text.style.ImageSpan;
 import android.view.LayoutInflater;
+import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AbsListView;
@@ -175,6 +176,12 @@ public void onItemClick(int id) {
 
             emptyTextView = (TextView)fragmentView.findViewById(R.id.searchEmptyView);
             emptyTextView.setText(LocaleController.getString("NoContacts", R.string.NoContacts));
+            emptyTextView.setOnTouchListener(new View.OnTouchListener() {
+                @Override
+                public boolean onTouch(View v, MotionEvent event) {
+                    return true;
+                }
+            });
             userSelectEditText = (EditText)fragmentView.findViewById(R.id.bubble_input_text);
             userSelectEditText.setHint(LocaleController.getString("SendMessageTo", R.string.SendMessageTo));
             if (Build.VERSION.SDK_INT >= 11) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java
index bee83e3f3..0ab87bc8b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java
@@ -12,6 +12,7 @@
 import android.content.Context;
 import android.content.DialogInterface;
 import android.view.LayoutInflater;
+import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AbsListView;
@@ -108,6 +109,12 @@ public void onTextChanged(EditText editText) {
             listView.setAdapter(listAdapter);
             emptyTextView = (TextView)fragmentView.findViewById(R.id.searchEmptyView);
             listView.setEmptyView(emptyTextView);
+            emptyTextView.setOnTouchListener(new View.OnTouchListener() {
+                @Override
+                public boolean onTouch(View v, MotionEvent event) {
+                    return true;
+                }
+            });
             searchListViewAdapter = new SearchAdapter(getParentActivity());
 
             listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index 67534eb82..f42452d5d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -562,9 +562,8 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
                 pushOpened = true;
             }
         } else if (showDialogsList) {
-            for (int a = 1; a < actionBarLayout.fragmentsStack.size(); a++) {
-                actionBarLayout.removeFragmentFromStack(actionBarLayout.fragmentsStack.get(a));
-                a--;
+            if (!AndroidUtilities.isTablet()) {
+                actionBarLayout.removeAllFragments();
             }
             pushOpened = false;
             isNew = false;
@@ -576,6 +575,7 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
             Bundle args = new Bundle();
             args.putBoolean("onlySelect", true);
             args.putString("selectAlertString", LocaleController.getString("SendMessagesTo", R.string.SendMessagesTo));
+            args.putString("selectAlertStringGroup", LocaleController.getString("SendMessagesToGroup", R.string.SendMessagesToGroup));
             MessagesActivity fragment = new MessagesActivity(args);
             fragment.setDelegate(this);
             actionBarLayout.presentFragment(fragment, false, true, true);
@@ -583,6 +583,11 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
             if (PhotoViewer.getInstance().isVisible()) {
                 PhotoViewer.getInstance().closePhoto(false);
             }
+
+            if (AndroidUtilities.isTablet()) {
+                actionBarLayout.showLastFragment();
+                rightActionBarLayout.showLastFragment();
+            }
         }
         if (open_settings != 0) {
             actionBarLayout.presentFragment(new SettingsActivity(), false, true, true);
@@ -745,6 +750,7 @@ public void needLayout() {
 
                 if (AndroidUtilities.isSmallTablet() && actionBarLayout.fragmentsStack.size() == 2) {
                     BaseFragment chatFragment = actionBarLayout.fragmentsStack.get(1);
+                    chatFragment.onPause();
                     actionBarLayout.fragmentsStack.remove(1);
                     actionBarLayout.showLastFragment();
                     rightActionBarLayout.fragmentsStack.add(chatFragment);
@@ -770,6 +776,7 @@ public void needLayout() {
 
                 if (rightActionBarLayout.fragmentsStack.size() == 1) {
                     BaseFragment chatFragment = rightActionBarLayout.fragmentsStack.get(0);
+                    chatFragment.onPause();
                     rightActionBarLayout.fragmentsStack.remove(0);
                     actionBarLayout.presentFragment(chatFragment, false, true, false);
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivitySmsView.java b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivitySmsView.java
index ace4d2365..d9187fba1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivitySmsView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivitySmsView.java
@@ -54,7 +54,7 @@
 
     private Timer timeTimer;
     private Timer codeTimer;
-    private static final Integer timerSync = 1;
+    private static final Object timerSync = new Object();
     private volatile int time = 60000;
     private volatile int codeTime = 15000;
     private double lastCurrentTime;
@@ -165,7 +165,7 @@ public void setParams(Bundle params) {
 
         destroyTimer();
         destroyCodeTimer();
-        timeText.setText(String.format("%s 1:00", LocaleController.getString("CallText", R.string.CallText)));
+        timeText.setText(LocaleController.formatString("CallText", R.string.CallText, 1, 0));
         lastCurrentTime = System.currentTimeMillis();
         problemText.setVisibility(time < 1000 ? VISIBLE : GONE);
 
@@ -230,7 +230,7 @@ public void run() {
                         if (time >= 1000) {
                             int minutes = time / 1000 / 60;
                             int seconds = time / 1000 - minutes * 60;
-                            timeText.setText(String.format("%s %d:%02d", LocaleController.getString("CallText", R.string.CallText), minutes, seconds));
+                            timeText.setText(LocaleController.formatString("CallText", R.string.CallText, minutes, seconds));
                         } else {
                             timeText.setText(LocaleController.getString("Calling", R.string.Calling));
                             destroyTimer();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
index 50051bbfb..5118653fd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
@@ -13,6 +13,7 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.view.LayoutInflater;
+import android.view.MotionEvent;
 import android.view.Surface;
 import android.view.View;
 import android.view.ViewGroup;
@@ -107,6 +108,12 @@ public void onItemClick(int id) {
 
             emptyView = (TextView)fragmentView.findViewById(R.id.searchEmptyView);
             emptyView.setText(LocaleController.getString("NoMedia", R.string.NoMedia));
+            emptyView.setOnTouchListener(new View.OnTouchListener() {
+                @Override
+                public boolean onTouch(View v, MotionEvent event) {
+                    return true;
+                }
+            });
             listView = (GridView)fragmentView.findViewById(R.id.media_grid);
             progressView = fragmentView.findViewById(R.id.progressLayout);
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/MessagesActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/MessagesActivity.java
index 552f17527..9471d2fb9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/MessagesActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/MessagesActivity.java
@@ -13,6 +13,7 @@
 import android.content.DialogInterface;
 import android.os.Bundle;
 import android.view.LayoutInflater;
+import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AbsListView;
@@ -51,8 +52,9 @@
     private MessagesAdapter messagesListViewAdapter;
     private TextView searchEmptyView;
     private View progressView;
-    private View empryView;
+    private View emptyView;
     private String selectAlertString;
+    private String selectAlertStringGroup;
     private boolean serverOnly = false;
 
     private static boolean dialogsLoaded = false;
@@ -101,6 +103,7 @@ public boolean onFragmentCreate() {
             onlySelect = arguments.getBoolean("onlySelect", false);
             serverOnly = arguments.getBoolean("serverOnly", false);
             selectAlertString = arguments.getString("selectAlertString");
+            selectAlertStringGroup = arguments.getString("selectAlertStringGroup");
         }
         if (!dialogsLoaded) {
             MessagesController.getInstance().loadDialogs(0, 0, 100, true);
@@ -134,8 +137,8 @@ public void onSearchExpand() {
                     if (messagesListView != null) {
                         messagesListView.setEmptyView(searchEmptyView);
                     }
-                    if (empryView != null) {
-                        empryView.setVisibility(View.GONE);
+                    if (emptyView != null) {
+                        emptyView.setVisibility(View.GONE);
                     }
                 }
 
@@ -145,7 +148,7 @@ public void onSearchCollapse() {
                     searching = false;
                     searchWas = false;
                     if (messagesListView != null) {
-                        messagesListView.setEmptyView(empryView);
+                        messagesListView.setEmptyView(emptyView);
                         searchEmptyView.setVisibility(View.GONE);
                     }
                     if (messagesListViewAdapter != null) {
@@ -164,7 +167,7 @@ public void onTextChanged(EditText editText) {
                         }
                         if (searchEmptyView != null) {
                             messagesListView.setEmptyView(searchEmptyView);
-                            empryView.setVisibility(View.GONE);
+                            emptyView.setVisibility(View.GONE);
                         }
                     }
                 }
@@ -236,8 +239,20 @@ public void onItemClick(int id) {
             progressView = fragmentView.findViewById(R.id.progressLayout);
             messagesListViewAdapter.notifyDataSetChanged();
             searchEmptyView = (TextView)fragmentView.findViewById(R.id.searchEmptyView);
+            searchEmptyView.setOnTouchListener(new View.OnTouchListener() {
+                @Override
+                public boolean onTouch(View v, MotionEvent event) {
+                    return true;
+                }
+            });
             searchEmptyView.setText(LocaleController.getString("NoResult", R.string.NoResult));
-            empryView = fragmentView.findViewById(R.id.list_empty_view);
+            emptyView = fragmentView.findViewById(R.id.list_empty_view);
+            emptyView.setOnTouchListener(new View.OnTouchListener() {
+                @Override
+                public boolean onTouch(View v, MotionEvent event) {
+                    return true;
+                }
+            });
             TextView textView = (TextView)fragmentView.findViewById(R.id.list_empty_view_text1);
             textView.setText(LocaleController.getString("NoChats", R.string.NoChats));
             textView = (TextView)fragmentView.findViewById(R.id.list_empty_view_text2);
@@ -246,14 +261,14 @@ public void onItemClick(int id) {
             if (MessagesController.getInstance().loadingDialogs && MessagesController.getInstance().dialogs.isEmpty()) {
                 messagesListView.setEmptyView(null);
                 searchEmptyView.setVisibility(View.GONE);
-                empryView.setVisibility(View.GONE);
+                emptyView.setVisibility(View.GONE);
                 progressView.setVisibility(View.VISIBLE);
             } else {
                 if (searching && searchWas) {
                     messagesListView.setEmptyView(searchEmptyView);
-                    empryView.setVisibility(View.GONE);
+                    emptyView.setVisibility(View.GONE);
                 } else {
-                    messagesListView.setEmptyView(empryView);
+                    messagesListView.setEmptyView(emptyView);
                     searchEmptyView.setVisibility(View.GONE);
                 }
                 progressView.setVisibility(View.GONE);
@@ -458,15 +473,15 @@ public void didReceivedNotification(int id, Object... args) {
                         messagesListView.setEmptyView(null);
                     }
                     searchEmptyView.setVisibility(View.GONE);
-                    empryView.setVisibility(View.GONE);
+                    emptyView.setVisibility(View.GONE);
                     progressView.setVisibility(View.VISIBLE);
                 } else {
                     if (messagesListView.getEmptyView() == null) {
                         if (searching && searchWas) {
                             messagesListView.setEmptyView(searchEmptyView);
-                            empryView.setVisibility(View.GONE);
+                            emptyView.setVisibility(View.GONE);
                         } else {
-                            messagesListView.setEmptyView(empryView);
+                            messagesListView.setEmptyView(emptyView);
                             searchEmptyView.setVisibility(View.GONE);
                         }
                     }
@@ -538,7 +553,7 @@ public MessagesActivityDelegate getDelegate() {
     }
 
     private void didSelectResult(final long dialog_id, boolean useAlert, final boolean param) {
-        if (useAlert && selectAlertString != null) {
+        if (useAlert && selectAlertString != null && selectAlertStringGroup != null) {
             if (getParentActivity() == null) {
                 return;
             }
@@ -552,7 +567,7 @@ private void didSelectResult(final long dialog_id, boolean useAlert, final boole
                     if (chat == null) {
                         return;
                     }
-                    builder.setMessage(LocaleController.formatStringSimple(selectAlertString, chat.title));
+                    builder.setMessage(LocaleController.formatStringSimple(selectAlertStringGroup, chat.title));
                 } else {
                     if (lower_part > 0) {
                         TLRPC.User user = MessagesController.getInstance().getUser(lower_part);
@@ -565,7 +580,7 @@ private void didSelectResult(final long dialog_id, boolean useAlert, final boole
                         if (chat == null) {
                             return;
                         }
-                        builder.setMessage(LocaleController.formatStringSimple(selectAlertString, chat.title));
+                        builder.setMessage(LocaleController.formatStringSimple(selectAlertStringGroup, chat.title));
                     }
                 }
             } else {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
index 81b253b91..f9ce31655 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
@@ -12,6 +12,7 @@
 import android.content.Context;
 import android.os.Build;
 import android.view.LayoutInflater;
+import android.view.MotionEvent;
 import android.view.Surface;
 import android.view.View;
 import android.view.ViewGroup;
@@ -119,6 +120,12 @@ public void onItemClick(int id) {
             fragmentView = inflater.inflate(R.layout.photo_picker_layout, container, false);
 
             emptyView = (TextView)fragmentView.findViewById(R.id.searchEmptyView);
+            emptyView.setOnTouchListener(new View.OnTouchListener() {
+                @Override
+                public boolean onTouch(View v, MotionEvent event) {
+                    return true;
+                }
+            });
             emptyView.setText(LocaleController.getString("NoPhotos", R.string.NoPhotos));
             listView = (GridView)fragmentView.findViewById(R.id.media_grid);
             progressView = fragmentView.findViewById(R.id.progressLayout);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index 65d47fe8b..c1c13b1b4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -513,7 +513,7 @@ public void onItemClick(int id) {
                     if (currentMessageObject != null) {
                         f = FileLoader.getPathToMessage(currentMessageObject.messageOwner);
                     } else if (currentFileLocation != null) {
-                        f = FileLoader.getPathToAttach(currentFileLocation);
+                        f = FileLoader.getPathToAttach(currentFileLocation, avatarsUserId != 0);
                     }
 
                     if (f != null && f.exists()) {
@@ -572,7 +572,7 @@ public boolean canOpenMenu() {
                         return true;
                     }
                 } else if (currentFileLocation != null) {
-                    File f = FileLoader.getPathToAttach(currentFileLocation);
+                    File f = FileLoader.getPathToAttach(currentFileLocation, avatarsUserId != 0);
                     if (f.exists()) {
                         return true;
                     }
@@ -616,7 +616,7 @@ public void onClick(View v) {
                     if (fileLocation == null) {
                         return;
                     }
-                    File f = FileLoader.getPathToAttach(fileLocation);
+                    File f = FileLoader.getPathToAttach(fileLocation, avatarsUserId != 0);
                     if (f.exists()) {
                         Intent intent = new Intent(Intent.ACTION_SEND);
                         if (f.toString().endsWith("mp4")) {
@@ -1341,7 +1341,7 @@ public void setImageIndex(int index, boolean init) {
             if (currentMessageObject != null) {
                 f = FileLoader.getPathToMessage(currentMessageObject.messageOwner);
             } else if (currentFileLocation != null) {
-                f = FileLoader.getPathToAttach(currentFileLocation);
+                f = FileLoader.getPathToAttach(currentFileLocation, avatarsUserId != 0);
             }
             if (f.exists()) {
                 progressBar.setVisibility(View.GONE);
@@ -1399,7 +1399,7 @@ private void setIndexToImage(ImageReceiver imageReceiver, int index) {
                         if (currentThumb != null && imageReceiver == centerImage) {
                             placeHolder = currentThumb;
                         }
-                        imageReceiver.setImage(fileLocation, null, placeHolder != null ? new BitmapDrawable(null, placeHolder) : null, 0);
+                        imageReceiver.setImage(fileLocation, null, placeHolder != null ? new BitmapDrawable(null, placeHolder) : null, 0, true);
                     } else {
                         imageReceiver.setImageBitmap(parentActivity.getResources().getDrawable(R.drawable.photoview_placeholder));
                     }
@@ -1414,7 +1414,7 @@ private void setIndexToImage(ImageReceiver imageReceiver, int index) {
                     if (size[0] == 0) {
                         size[0] = -1;
                     }
-                    imageReceiver.setImage(fileLocation, null, placeHolder != null ? new BitmapDrawable(null, placeHolder) : null, size[0]);
+                    imageReceiver.setImage(fileLocation, null, placeHolder != null ? new BitmapDrawable(null, placeHolder) : null, size[0], avatarsUserId != 0);
                 }
             } else {
                 if (size[0] == 0) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsBlockedUsersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsBlockedUsersActivity.java
index ef88c1e02..b1f888cad 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsBlockedUsersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsBlockedUsersActivity.java
@@ -13,6 +13,7 @@
 import android.content.DialogInterface;
 import android.os.Bundle;
 import android.view.LayoutInflater;
+import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
@@ -88,6 +89,12 @@ public void onItemClick(int id) {
             listView = (ListView)fragmentView.findViewById(R.id.listView);
             progressView = fragmentView.findViewById(R.id.progressLayout);
             emptyView = (TextView)fragmentView.findViewById(R.id.searchEmptyView);
+            emptyView.setOnTouchListener(new View.OnTouchListener() {
+                @Override
+                public boolean onTouch(View v, MotionEvent event) {
+                    return true;
+                }
+            });
             emptyView.setText(LocaleController.getString("NoBlocked", R.string.NoBlocked));
             if (MessagesController.getInstance().loadingBlockedUsers) {
                 progressView.setVisibility(View.VISIBLE);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
index dd536e5a9..01072920e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
@@ -13,6 +13,7 @@
 import android.content.SharedPreferences;
 import android.content.res.Configuration;
 import android.graphics.SurfaceTexture;
+import android.media.MediaCodecInfo;
 import android.media.MediaPlayer;
 import android.os.Build;
 import android.os.Bundle;
@@ -41,6 +42,7 @@
 
 import org.telegram.android.AndroidUtilities;
 import org.telegram.android.LocaleController;
+import org.telegram.android.MediaController;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
 import org.telegram.messenger.Utilities;
@@ -234,7 +236,7 @@ public void onItemClick(int id) {
                             }
                         }
                         if (delegate != null) {
-                            if (compressVideo.getVisibility() == View.VISIBLE && !compressVideo.isChecked()) {
+                            if (compressVideo.getVisibility() == View.GONE || compressVideo.getVisibility() == View.VISIBLE && !compressVideo.isChecked()) {
                                 delegate.didFinishEditVideo(videoPath, startTime, endTime, originalWidth, originalHeight, rotationValue, originalWidth, originalHeight, bitrate, estimatedSize, esimatedDuration);
                             } else {
                                 delegate.didFinishEditVideo(videoPath, startTime, endTime, resultWidth, resultHeight, rotationValue, originalWidth, originalHeight, bitrate, estimatedSize, esimatedDuration);
@@ -272,6 +274,27 @@ public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                     updateVideoEditedInfo();
                 }
             });
+
+            if (Build.VERSION.SDK_INT < 18) {
+                MediaCodecInfo codecInfo = MediaController.selectCodec(MediaController.MIME_TYPE);
+                if (codecInfo == null) {
+                    compressVideo.setVisibility(View.GONE);
+                } else {
+                    String name = codecInfo.getName();
+                    if (name.equals("OMX.google.h264.encoder") ||
+                            name.equals("OMX.ST.VFM.H264Enc") ||
+                            name.equals("OMX.Exynos.avc.enc") ||
+                            name.equals("OMX.MARVELL.VIDEO.HW.CODA7542ENCODER") ||
+                            name.equals("OMX.MARVELL.VIDEO.H264ENCODER")) {
+                        compressVideo.setVisibility(View.GONE);
+                    } else {
+                        if (MediaController.selectColorFormat(codecInfo, MediaController.MIME_TYPE) == 0) {
+                            compressVideo.setVisibility(View.GONE);
+                        }
+                    }
+                }
+            }
+
             TextView titleTextView = (TextView) fragmentView.findViewById(R.id.original_title);
             titleTextView.setText(LocaleController.getString("OriginalVideo", R.string.OriginalVideo));
             titleTextView = (TextView) fragmentView.findViewById(R.id.edited_title);
@@ -457,7 +480,7 @@ private void updateVideoEditedInfo() {
         int width = 0;
         int height = 0;
 
-        if (compressVideo.getVisibility() == View.VISIBLE && !compressVideo.isChecked()) {
+        if (compressVideo.getVisibility() == View.GONE || compressVideo.getVisibility() == View.VISIBLE && !compressVideo.isChecked()) {
             width = rotationValue == 90 || rotationValue == 270 ? originalHeight : originalWidth;
             height = rotationValue == 90 || rotationValue == 270 ? originalWidth : originalHeight;
             estimatedSize = (int)(originalSize * ((float)esimatedDuration / videoDuration));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/BackupImageView.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/BackupImageView.java
index 7010f4e16..529f715cd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/BackupImageView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/BackupImageView.java
@@ -69,7 +69,7 @@ public void setImage(TLRPC.FileLocation path, String httpUrl, String filter, int
         } else if (placeholder != 0) {
             placeholderDrawable = getResources().getDrawable(placeholder);
         }
-        imageReceiver.setImage(path, httpUrl, filter, placeholderDrawable, size);
+        imageReceiver.setImage(path, httpUrl, filter, placeholderDrawable, size, false);
     }
 
     public void setImageBitmap(Bitmap bitmap) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/ChatActivityEnterView.java
index 4ad431328..cd5181e2d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/ChatActivityEnterView.java
@@ -9,10 +9,14 @@
 package org.telegram.ui.Views;
 
 import android.animation.Animator;
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.app.Activity;
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.graphics.Rect;
+import android.os.Build;
 import android.os.PowerManager;
 import android.text.Editable;
 import android.text.TextWatcher;
@@ -63,6 +67,8 @@
     private View slideText;
     private PowerManager.WakeLock mWakeLock = null;
     private SizeNotifierRelativeLayout sizeNotifierRelativeLayout;
+    private Object runningAnimation = null;
+    private int runningAnimationType = 0;
 
     private int keyboardHeight = 0;
     private int keyboardHeightLand = 0;
@@ -124,7 +130,6 @@ public void setContainerView(Activity activity, View containerView) {
         messsageEditText.setHint(LocaleController.getString("TypeMessage", R.string.TypeMessage));
 
         sendButton = (ImageButton)containerView.findViewById(R.id.chat_send_button);
-        sendButton.setEnabled(false);
         sendButton.setVisibility(View.INVISIBLE);
         emojiButton = (ImageView)containerView.findViewById(R.id.chat_smile_button);
         audioSendButton = (ImageButton)containerView.findViewById(R.id.chat_audio_send_button);
@@ -270,8 +275,7 @@ public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
                 }
 
                 String message = getTrimmedString(charSequence.toString());
-                sendButton.setEnabled(message.length() != 0);
-                checkSendButton();
+                checkSendButton(true);
 
                 if (message.length() != 0 && lastTypingTimeSend < System.currentTimeMillis() - 5000 && !ignoreTextChange) {
                     int currentTime = ConnectionsManager.getInstance().getCurrentTime();
@@ -308,7 +312,7 @@ public void afterTextChanged(Editable editable) {
             }
         });
 
-        checkSendButton();
+        checkSendButton(false);
     }
 
     private void sendMessage() {
@@ -348,14 +352,107 @@ private String getTrimmedString(String src) {
         return src;
     }
 
-    private void checkSendButton() {
+    private void checkSendButton(boolean animated) {
         String message = getTrimmedString(messsageEditText.getText().toString());
         if (message.length() > 0) {
-            sendButton.setVisibility(View.VISIBLE);
-            audioSendButton.setVisibility(View.INVISIBLE);
-        } else {
-            sendButton.setVisibility(View.INVISIBLE);
-            audioSendButton.setVisibility(View.VISIBLE);
+            if (audioSendButton.getVisibility() == View.VISIBLE) {
+                if (Build.VERSION.SDK_INT >= 11 && animated) {
+                    if (runningAnimationType == 1) {
+                        return;
+                    }
+                    if (runningAnimation != null) {
+                        ((AnimatorSet)runningAnimation).cancel();
+                        runningAnimation = null;
+                    }
+
+                    sendButton.setVisibility(View.VISIBLE);
+                    AnimatorSet animatorSet = new AnimatorSet();
+                    runningAnimation = animatorSet;
+                    runningAnimationType = 1;
+                    animatorSet.playTogether(
+                            ObjectAnimator.ofFloat(audioSendButton, "scaleX", 0.1f),
+                            ObjectAnimator.ofFloat(audioSendButton, "scaleY", 0.1f),
+                            ObjectAnimator.ofFloat(audioSendButton, "alpha", 0.0f),
+                            ObjectAnimator.ofFloat(sendButton, "scaleX", 1.0f),
+                            ObjectAnimator.ofFloat(sendButton, "scaleY", 1.0f),
+                            ObjectAnimator.ofFloat(sendButton, "alpha", 1.0f)
+                    );
+
+                    animatorSet.setDuration(200);
+                    animatorSet.addListener(new AnimatorListenerAdapter() {
+                        @Override
+                        public void onAnimationEnd(Animator animation) {
+                            if (animation == runningAnimation) {
+                                sendButton.setVisibility(View.VISIBLE);
+                                audioSendButton.setVisibility(View.INVISIBLE);
+                                runningAnimation = null;
+                                runningAnimationType = 0;
+                            }
+                        }
+                    });
+                    animatorSet.start();
+                } else {
+                    if (Build.VERSION.SDK_INT >= 11) {
+                        audioSendButton.setScaleX(0.1f);
+                        audioSendButton.setScaleY(0.1f);
+                        audioSendButton.setAlpha(0.0f);
+                        sendButton.setScaleX(1.0f);
+                        sendButton.setScaleY(1.0f);
+                        sendButton.setAlpha(1.0f);
+                    }
+                    sendButton.setVisibility(View.VISIBLE);
+                    audioSendButton.setVisibility(View.INVISIBLE);
+                }
+            }
+        } else if (sendButton.getVisibility() == View.VISIBLE) {
+            if (Build.VERSION.SDK_INT >= 11 && animated) {
+                if (runningAnimationType == 2) {
+                    return;
+                }
+
+                if (runningAnimation != null) {
+                    ((AnimatorSet)runningAnimation).cancel();
+                    runningAnimation = null;
+                }
+
+                audioSendButton.setVisibility(View.VISIBLE);
+                AnimatorSet animatorSet = new AnimatorSet();
+                runningAnimation = animatorSet;
+                runningAnimationType = 2;
+                animatorSet.playTogether(
+                        ObjectAnimator.ofFloat(sendButton, "scaleX", 0.1f),
+                        ObjectAnimator.ofFloat(sendButton, "scaleY", 0.1f),
+                        ObjectAnimator.ofFloat(sendButton, "alpha", 0.0f),
+                        ObjectAnimator.ofFloat(audioSendButton, "scaleX", 1.0f),
+                        ObjectAnimator.ofFloat(audioSendButton, "scaleY", 1.0f),
+                        ObjectAnimator.ofFloat(audioSendButton, "alpha", 1.0f)
+                );
+
+                animatorSet.setDuration(200);
+                animatorSet.addListener(new AnimatorListenerAdapter() {
+                    @Override
+                    public void onAnimationEnd(Animator animation) {
+                        if (animation == runningAnimation) {
+                            sendButton.setVisibility(View.INVISIBLE);
+                            audioSendButton.setVisibility(View.VISIBLE);
+                            runningAnimation = null;
+                            runningAnimationType = 0;
+                        }
+                    }
+                });
+                animatorSet.start();
+            } else {
+                if (Build.VERSION.SDK_INT >= 11) {
+                    sendButton.setScaleX(0.1f);
+                    sendButton.setScaleY(0.1f);
+                    sendButton.setAlpha(0.0f);
+                    audioSendButton.setScaleX(1.0f);
+                    audioSendButton.setScaleY(1.0f);
+                    audioSendButton.setAlpha(1.0f);
+                }
+                sendButton.setVisibility(View.INVISIBLE);
+                audioSendButton.setVisibility(View.VISIBLE);
+            }
         }
     }
 
@@ -596,7 +693,7 @@ public void onSizeChanged(int height) {
         }
         int rotation = manager.getDefaultDisplay().getRotation();
 
-        if (height > AndroidUtilities.dp(50)) {
+        if (height > AndroidUtilities.dp(50) && keyboardVisible) {
             if (rotation == Surface.ROTATION_270 || rotation == Surface.ROTATION_90) {
                 keyboardHeightLand = height;
                 ApplicationLoader.applicationContext.getSharedPreferences("emoji", 0).edit().putInt("kbd_height_land3", keyboardHeightLand).commit();
@@ -607,25 +704,29 @@ public void onSizeChanged(int height) {
         }
 
         if (emojiPopup != null && emojiPopup.isShowing()) {
-            WindowManager wm = (WindowManager) ApplicationLoader.applicationContext.getSystemService(Context.WINDOW_SERVICE);
-            final WindowManager.LayoutParams layoutParams = (WindowManager.LayoutParams)emojiPopup.getContentView().getLayoutParams();
-            layoutParams.width = AndroidUtilities.displaySize.x;
+            int newHeight = 0;
             if (rotation == Surface.ROTATION_270 || rotation == Surface.ROTATION_90) {
-                layoutParams.height = keyboardHeightLand;
+                newHeight = keyboardHeightLand;
             } else {
-                layoutParams.height = keyboardHeight;
+                newHeight = keyboardHeight;
             }
-            wm.updateViewLayout(emojiPopup.getContentView(), layoutParams);
-            if (!keyboardVisible) {
-                sizeNotifierRelativeLayout.post(new Runnable() {
-                    @Override
-                    public void run() {
-                        if (sizeNotifierRelativeLayout != null) {
-                            sizeNotifierRelativeLayout.setPadding(0, 0, 0, layoutParams.height);
-                            sizeNotifierRelativeLayout.requestLayout();
+            final WindowManager.LayoutParams layoutParams = (WindowManager.LayoutParams)emojiPopup.getContentView().getLayoutParams();
+            if (layoutParams.width != AndroidUtilities.displaySize.x || layoutParams.height != newHeight) {
+                WindowManager wm = (WindowManager) ApplicationLoader.applicationContext.getSystemService(Context.WINDOW_SERVICE);
+                layoutParams.width = AndroidUtilities.displaySize.x;
+                layoutParams.height = newHeight;
+                wm.updateViewLayout(emojiPopup.getContentView(), layoutParams);
+                if (!keyboardVisible) {
+                    sizeNotifierRelativeLayout.post(new Runnable() {
+                        @Override
+                        public void run() {
+                            if (sizeNotifierRelativeLayout != null) {
+                                sizeNotifierRelativeLayout.setPadding(0, 0, 0, layoutParams.height);
+                                sizeNotifierRelativeLayout.requestLayout();
+                            }
                         }
-                    }
-                });
+                    });
+                }
             }
         }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/VideoTimelineView.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/VideoTimelineView.java
index 926c08db4..92e2ef3a2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/VideoTimelineView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/VideoTimelineView.java
@@ -41,7 +41,7 @@
     private VideoTimelineViewDelegate delegate = null;
     private ArrayList<Bitmap> frames = new ArrayList<Bitmap>();
     private AsyncTask<Integer, Integer, Bitmap> currentTask = null;
-    private static final Integer sync = 1;
+    private static final Object sync = new Object();
     private long frameTimeOffset = 0;
     private int frameWidth = 0;
     private int frameHeight = 0;
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/ic_reply_icon.png b/TMessagesProj/src/main/res/drawable-hdpi/ic_reply_icon.png
new file mode 100755
index 000000000..f483f3427
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/ic_reply_icon.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/ic_reply_icon.png b/TMessagesProj/src/main/res/drawable-mdpi/ic_reply_icon.png
new file mode 100755
index 000000000..513865901
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/ic_reply_icon.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/ic_reply_icon.png b/TMessagesProj/src/main/res/drawable-xhdpi/ic_reply_icon.png
new file mode 100755
index 000000000..9caeae67c
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/ic_reply_icon.png differ
diff --git a/TMessagesProj/src/main/res/drawable/send_button_states.xml b/TMessagesProj/src/main/res/drawable/send_button_states.xml
deleted file mode 100644
index 90174a3d0..000000000
--- a/TMessagesProj/src/main/res/drawable/send_button_states.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:drawable="@drawable/ic_send_disabled" android:state_enabled="false" />
-    <item android:drawable="@drawable/ic_send" />
-</selector>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/chat_layout.xml b/TMessagesProj/src/main/res/layout/chat_layout.xml
index e9d9bbb11..11e46e8fc 100644
--- a/TMessagesProj/src/main/res/layout/chat_layout.xml
+++ b/TMessagesProj/src/main/res/layout/chat_layout.xml
@@ -133,7 +133,7 @@
             android:layout_alignParentRight="true"
             android:layout_alignBottom="@+id/chat_text_edit"
             android:enabled="false"
-            android:src="@drawable/send_button_states"
+            android:src="@drawable/ic_send"
             android:background="@android:color/transparent"/>
 
         <EditText
diff --git a/TMessagesProj/src/main/res/layout/popup_notification_layout.xml b/TMessagesProj/src/main/res/layout/popup_notification_layout.xml
index 32cd0f23e..c00e824f6 100644
--- a/TMessagesProj/src/main/res/layout/popup_notification_layout.xml
+++ b/TMessagesProj/src/main/res/layout/popup_notification_layout.xml
@@ -49,7 +49,7 @@
                     android:layout_alignParentRight="true"
                     android:layout_alignBottom="@+id/chat_text_edit"
                     android:enabled="false"
-                    android:src="@drawable/send_button_states"
+                    android:src="@drawable/ic_send"
                     android:background="@android:color/transparent"/>
 
                 <EditText
diff --git a/TMessagesProj/src/main/res/values-ar/strings.xml b/TMessagesProj/src/main/res/values-ar/strings.xml
index c9ffe3de8..704a6fe93 100644
--- a/TMessagesProj/src/main/res/values-ar/strings.xml
+++ b/TMessagesProj/src/main/res/values-ar/strings.xml
@@ -15,7 +15,7 @@
     <!--code enter view-->
     <string name="YourCode">رمز التفعيل</string>
     <string name="SentSmsCode">تم إرسال رسالة قصيرة تحتوي على رمز التفعيل الخاص بك</string>
-    <string name="CallText">سنتصل بك خلال</string>
+    <string name="CallText">%1$d:%2$02d سنتصل بك خلال</string>
     <string name="Calling">جاري الاتصال بك ...</string>
     <string name="Code">رمز التفعيل</string>
     <string name="WrongNumber">الرقم خاطئ؟</string>
@@ -152,13 +152,15 @@
     <string name="NotificationUnrecognizedDevice">%1$s,\nتم تسجيل الدخول لحسابك من جهاز جديد يوم %2$s\n\nالجهاز: %3$s\nالموقع: %4$s\n\nإذا لم يكن أنت من سجل الدخول، يمكنك الذهاب للإعدادات ثم تسجيل الخروج من كافة الأجهزة الأخرى.\n\nشكرًا,\nفريق عمل تيليجرام</string>
     <string name="NotificationContactNewPhoto">%1$s قام بتغيير صورته الشخصية</string>
     <string name="Reply">الرد</string>
+    <string name="ReplyToGroup">Reply to %1$s</string>
+    <string name="ReplyToUser">Reply to %1$s</string>
+    <string name="NotificationMessagesPeopleDisplayOrder">%1$s %2$s</string>
     <!--contacts view-->
     <string name="SelectContact">اختر جهة اتصال</string>
     <string name="NoContacts">لا توجد جهات اتصال بعد</string>
     <string name="InviteText">http://telegram.org/dl2 مرحبا! هيا نستخدم تيليجرام: </string>
     <string name="TodayAt">اليوم الساعة</string>
     <string name="YesterdayAt">أمس الساعة</string>
-    <string name="OtherAt">الساعة</string>
     <string name="Online">متصل</string>
     <string name="Offline">غير متصل</string>
     <string name="LastSeen">آخر ظهور</string>
@@ -380,6 +382,8 @@
     <string name="AreYouSureDeleteContact">هل أنت متأكد من رغبتك في حذف جهة الاتصال هذه؟</string>
     <string name="AreYouSureSecretChat">هل أنت متأكد من أنك تريد بدء محادثة سرية؟</string>
     <string name="ForwardFromMyName">أعد الإرسال باستخدام اسمي</string>
+    <string name="SendMessagesToGroup">هل ترغب في إرسال رسالة إلى %1$s؟</string>
+    <string name="ForwardMessagesToGroup">؟%1$s هل تريد إعادة توجيه الرسائل إلى</string>
     <!--Intro view-->
     <string name="Page1Title">تيليجرام</string>
     <string name="Page2Title">سريع</string>
@@ -397,6 +401,12 @@
     <string name="Page7Message"><![CDATA[<b>تيليجرام</b>]]> الرسائل مشفرة بشكل قوي وتستطيع تدمير ذاتها</string>
     <string name="StartMessaging">إبدأ المراسلة</string>
     <!--plurals-->
+    <string name="Online_zero">%1$d متصل</string>
+    <string name="Online_one">%1$d متصل</string>
+    <string name="Online_two">%1$d متصل</string>
+    <string name="Online_few">%1$d متصل</string>
+    <string name="Online_many">%1$d متصل</string>
+    <string name="Online_other">%1$d متصل</string>
     <string name="Members_zero">لا يوجد أعضاء</string>
     <string name="Members_one">%1$d عضو</string>
     <string name="Members_two">%1$d عضوان</string>
@@ -427,6 +437,16 @@
     <string name="FromContacts_few">من %1$d جهات اتصال</string>
     <string name="FromContacts_many">من %1$d جهة اتصال</string>
     <string name="FromContacts_other">من %1$d جهة اتصال</string>
+    <!--date formatters-->
+    <string name="formatterMonth">dd MMM</string>
+    <string name="formatterYear">dd.MM.yy</string>
+    <string name="formatterYearMax">dd.MM.yyyy</string>
+    <string name="chatDate">d MMMM</string>
+    <string name="chatFullDate">d MMMM yyyy</string>
+    <string name="formatterWeek">EEE</string>
+    <string name="formatterDay24H">HH:mm</string>
+    <string name="formatterDay12H">h:mm a</string>
+    <string name="formatDateAtTime">%1$s الساعة %2$s</string>
     <!--Don't change this! Not for localization!-->
     <string name="CacheTag">CACHE_TAG</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-de/strings.xml b/TMessagesProj/src/main/res/values-de/strings.xml
index 148303008..6079eee96 100644
--- a/TMessagesProj/src/main/res/values-de/strings.xml
+++ b/TMessagesProj/src/main/res/values-de/strings.xml
@@ -15,7 +15,7 @@
     <!--code enter view-->
     <string name="YourCode">Dein Code</string>
     <string name="SentSmsCode">Wir haben dir eine SMS mit einem Aktivierungscode zugeschickt</string>
-    <string name="CallText">Wir rufen dich an in</string>
+    <string name="CallText">Wir rufen dich an in %1$d:%2$02d</string>
     <string name="Calling">Wir rufen dich an…</string>
     <string name="Code">Code</string>
     <string name="WrongNumber">Falsche Nummer?</string>
@@ -96,13 +96,13 @@
     <string name="Selected">Ausgewählt: %d</string>
     <string name="ShareMyContactInfo">MEINE TELEFONNUMMER TEILEN</string>
     <string name="AddToContacts">ZU KONTAKTEN HINZUFÜGEN</string>
-    <string name="EncryptedPlaceholderTitleIncoming">%s hat dich zu einem geheimen Chat eingeladen.</string>
-    <string name="EncryptedPlaceholderTitleOutgoing">Du hast %s zu einem geheimen Chat eingeladen.</string>
+    <string name="EncryptedPlaceholderTitleIncoming">%s hat dich zu einem\nEnde-zu-Ende verschlüsselten\nGeheimen Chat eingeladen.</string>
+    <string name="EncryptedPlaceholderTitleOutgoing">Du hast %s zu einem\nEnde-zu-Ende verschlüsselten\nGeheimen Chat eingeladen.</string>
     <string name="EncryptedDescriptionTitle">Geheime Chats in Kürze:</string>
-    <string name="EncryptedDescription1">Ende-zu-Ende Verschlüsselung</string>
-    <string name="EncryptedDescription2">Keine Serverspeicherung</string>
-    <string name="EncryptedDescription3">Selbstzerstörungs-Timer</string>
-    <string name="EncryptedDescription4">Verbieten Weiterleitung</string>
+    <string name="EncryptedDescription1">Keine Serverspeicherung</string>
+    <string name="EncryptedDescription2">Selbstzerstörungs-Timer</string>
+    <string name="EncryptedDescription3">Verbieten Weiterleitung</string>
+    <string name="EncryptedDescription4">Löschen sich bei Abmeldung</string>
     <string name="YouWereKicked">Du wurdest aus der Gruppe entfernt</string>
     <string name="YouLeft">Du hast die Gruppe verlassen</string>
     <string name="DeleteThisGroup">Diese Gruppe löschen</string>
@@ -152,13 +152,15 @@
     <string name="NotificationUnrecognizedDevice">%1$s,\nWir haben eine Anmeldung von einem neuen Gerät am %2$s festgestellt.\n\nGerät: %3$s\nStandort: %4$s\n\nWenn du das nicht selbst gewesen bist, melde alle anderen Sitzungen in den Telegram Einstellungen unverzüglich ab.\n\nMit freundlichen Grüßen,\nDas Telegram Team</string>
     <string name="NotificationContactNewPhoto">%1$s hat das Profilbild geändert</string>
     <string name="Reply">Beantworten</string>
+    <string name="ReplyToGroup">%1$s antworten</string>
+    <string name="ReplyToUser">%1$s antworten</string>
+    <string name="NotificationMessagesPeopleDisplayOrder">%1$s %2$s</string>
     <!--contacts view-->
     <string name="SelectContact">Kontakt auswählen</string>
     <string name="NoContacts">Noch keine Kontakte</string>
     <string name="InviteText">Hey, lass uns zu Telegram wechseln: http://telegram.org/dl2</string>
     <string name="TodayAt">heute um</string>
     <string name="YesterdayAt">gestern um</string>
-    <string name="OtherAt">um</string>
     <string name="Online">online</string>
     <string name="Offline">offline</string>
     <string name="LastSeen">zul. online</string>
@@ -255,7 +257,7 @@
     <string name="Enabled">Aktiviert</string>
     <string name="Disabled">Deaktiviert</string>
     <string name="NotificationsService">Mitteilungsdienst</string>
-    <string name="NotificationsServiceDisableInfo">Sofern Google Play Dienste ausreichend für deine Mitteilungen sind, kannst du unseren Mitteilungsdienst abschalten. Wir empfehlen allerdings, unseren Dienst dauerhaft aktiviert zu lassen um über neue Nachrichten in Echtzeit informiert zu werden.</string>
+    <string name="NotificationsServiceDisableInfo">Sofern Google Play Dienste ausreichend für deine Mitteilungen sind, kannst du unseren Mitteilungsdienst abschalten. Wir empfehlen allerdings, unseren Dienst dauerhaft aktiviert zu lassen, um über neue Nachrichten in Echtzeit informiert zu werden.</string>
     <string name="SortBy">sortiert nach</string>
     <string name="ImportContacts">Kontakte importieren</string>
     <string name="WiFiOnly">Nur über W-LAN</string>
@@ -380,6 +382,8 @@
     <string name="AreYouSureDeleteContact">Diesen Kontakt wirklich löschen?</string>
     <string name="AreYouSureSecretChat">Geheimen Chat starten?</string>
     <string name="ForwardFromMyName">mit meinem Namen weiterleiten</string>
+    <string name="SendMessagesToGroup">Nachricht an %1$s senden?</string>
+    <string name="ForwardMessagesToGroup">Weiterleiten an %1$s?</string>
     <!--Intro view-->
     <string name="Page1Title">Telegram</string>
     <string name="Page2Title">Schnell</string>
@@ -396,7 +400,13 @@
     <string name="Page6Message"><![CDATA[<b>Telegram</b>]]> lässt sich von verschiedenen Geräten<![CDATA[<br/>]]>gleichzeitig nutzen.</string>
     <string name="Page7Message"><![CDATA[<b>Telegram</b>]]>-Nachrichten sind stark verschlüsselt<![CDATA[<br/>]]>und können sich selbst zerstören.</string>
     <string name="StartMessaging">Jetzt beginnen</string>
-    <!--plurals-->
+    <!--plural-->
+    <string name="Online_zero">%1$d online</string>
+    <string name="Online_one">%1$d online</string>
+    <string name="Online_two">%1$d online</string>
+    <string name="Online_few">%1$d online</string>
+    <string name="Online_many">%1$d online</string>
+    <string name="Online_other">%1$d online</string>
     <string name="Members_zero">keine Mitglieder</string>
     <string name="Members_one">%1$d Mitglied</string>
     <string name="Members_two">%1$d Mitglieder</string>
@@ -427,6 +437,16 @@
     <string name="FromContacts_few">von %1$d Kontakten</string>
     <string name="FromContacts_many">von %1$d Kontakten</string>
     <string name="FromContacts_other">von %1$d Kontakten</string>
+    <!--date formatters-->
+    <string name="formatterMonth">dd MMM</string>
+    <string name="formatterYear">dd.MM.yy</string>
+    <string name="formatterYearMax">dd.MM.yyyy</string>
+    <string name="chatDate">d MMMM</string>
+    <string name="chatFullDate">d MMMM, yyyy</string>
+    <string name="formatterWeek">EEE</string>
+    <string name="formatterDay24H">HH:mm</string>
+    <string name="formatterDay12H">h:mm a</string>
+    <string name="formatDateAtTime">%1$s um %2$s</string>
     <!--Don't change this! Not for localization!-->
     <string name="CacheTag">CACHE_TAG</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-es/strings.xml b/TMessagesProj/src/main/res/values-es/strings.xml
index bf8ba050a..ba7d18e32 100644
--- a/TMessagesProj/src/main/res/values-es/strings.xml
+++ b/TMessagesProj/src/main/res/values-es/strings.xml
@@ -15,7 +15,7 @@
     <!--code enter view-->
     <string name="YourCode">Tu código</string>
     <string name="SentSmsCode">Enviamos un SMS con el código de activación al número</string>
-    <string name="CallText">Te llamaremos en</string>
+    <string name="CallText">Te llamaremos en %1$d:%2$02d</string>
     <string name="Calling">Llamándote...</string>
     <string name="Code">Código</string>
     <string name="WrongNumber">¿Número incorrecto?</string>
@@ -152,13 +152,15 @@
     <string name="NotificationUnrecognizedDevice">%1$s,\nDetectamos un inicio de sesión en tu cuenta desde un nuevo dispositivo, el %2$s\n\nDispositivo: %3$s\nUbicación: %4$s\n\nSi no eras tú, puedes ir a Ajustes - Cerrar todas las otras sesiones.\n\nAtentamente,\nEl equipo de Telegram</string>
     <string name="NotificationContactNewPhoto">%1$s actualizó su foto de perfil</string>
     <string name="Reply">Responder</string>
+    <string name="ReplyToGroup">Responder a %1$s</string>
+    <string name="ReplyToUser">Responder a %1$s</string>
+    <string name="NotificationMessagesPeopleDisplayOrder">%1$s %2$s</string>
     <!--contacts view-->
     <string name="SelectContact">Elegir contacto</string>
     <string name="NoContacts">Aún sin contactos</string>
     <string name="InviteText">Oye, cambiémonos a Telegram: http://telegram.org/dl2</string>
     <string name="TodayAt">hoy a las</string>
     <string name="YesterdayAt">ayer a las</string>
-    <string name="OtherAt">a las</string>
     <string name="Online">en línea</string>
     <string name="Offline">fuera de línea</string>
     <string name="LastSeen">últ. vez</string>
@@ -380,6 +382,8 @@
     <string name="AreYouSureDeleteContact">¿Quieres eliminar este contacto?</string>
     <string name="AreYouSureSecretChat">¿Quieres iniciar un chat secreto?</string>
     <string name="ForwardFromMyName">reenviar desde mi nombre</string>
+    <string name="SendMessagesToGroup">¿Enviar mensajes a %1$s?</string>
+    <string name="ForwardMessagesToGroup">¿Reenviar mensajes a %1$s?</string>
     <!--Intro view-->
     <string name="Page1Title">Telegram</string>
     <string name="Page2Title">Rápida</string>
@@ -396,7 +400,13 @@
     <string name="Page6Message"><![CDATA[<b>Telegram</b>]]> te permite acceder a tus<![CDATA[<br/>]]>mensajes desde múltiples dispositivos.</string>
     <string name="Page7Message"><![CDATA[<b>Telegram</b>]]> posee mensajes fuertemente<![CDATA[<br/>]]>cifrados y se pueden autodestruir.</string>
     <string name="StartMessaging">Empieza a conversar</string>
-    <!--plurals-->
+    <!--plural-->
+    <string name="Online_zero">%1$d en línea</string>
+    <string name="Online_one">%1$d en línea</string>
+    <string name="Online_two">%1$d en línea</string>
+    <string name="Online_few">%1$d en línea</string>
+    <string name="Online_many">%1$d en línea</string>
+    <string name="Online_other">%1$d en línea</string>
     <string name="Members_zero">sin miembros</string>
     <string name="Members_one">%1$d miembro</string>
     <string name="Members_two">%1$d miembros</string>
@@ -427,6 +437,16 @@
     <string name="FromContacts_few">de %1$d contactos</string>
     <string name="FromContacts_many">de %1$d contactos</string>
     <string name="FromContacts_other">de %1$d contactos</string>
+    <!--date formatters-->
+    <string name="formatterMonth">dd \'de\' MMM</string>
+    <string name="formatterYear">dd.MM.yy</string>
+    <string name="formatterYearMax">dd.MM.yyyy</string>
+    <string name="chatDate">d \'de\' MMMM</string>
+    <string name="chatFullDate">d \'de\' MMMM \'de\' yyyy</string>
+    <string name="formatterWeek">EEE</string>
+    <string name="formatterDay24H">HH:mm</string>
+    <string name="formatterDay12H">h:mm a</string>
+    <string name="formatDateAtTime">%1$s a las %2$s</string>
     <!--Don't change this! Not for localization!-->
     <string name="CacheTag">CACHE_TAG</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index eb40f095b..0874a9767 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -15,7 +15,7 @@
     <!--code enter view-->
     <string name="YourCode">Il tuo codice</string>
     <string name="SentSmsCode">Abbiamo inviato un SMS al tuo telefono con il codice di attivazione</string>
-    <string name="CallText">Ti telefoneremo tra</string>
+    <string name="CallText">Ti telefoneremo tra %1$d:%2$02d</string>
     <string name="Calling">Ti stiamo chiamando…</string>
     <string name="Code">Codice</string>
     <string name="WrongNumber">Numero errato?</string>
@@ -152,13 +152,15 @@
     <string name="NotificationUnrecognizedDevice">%1$s,\nAbbiamo rilevato un accesso al tuo account da un nuovo dispositivo %2$s\n\nDispositivo: %3$s\nPosizione: %4$s\n\nSe non sei stato tu, puoi andare su Impostazioni - Termina tutte le sessioni.\n\nGrazie,\nil team di Telegram</string>
     <string name="NotificationContactNewPhoto">%1$s ha aggiornato la foto del profilo</string>
     <string name="Reply">Rispondi</string>
+    <string name="ReplyToGroup">Rispondi a %1$s</string>
+    <string name="ReplyToUser">Rispondi a %1$s</string>
+    <string name="NotificationMessagesPeopleDisplayOrder">%1$s %2$s</string>
     <!--contacts view-->
     <string name="SelectContact">Seleziona contatto</string>
     <string name="NoContacts">Ancora nessun contatto</string>
     <string name="InviteText">Ciao, passa a Telegram: http://telegram.org/dl2</string>
     <string name="TodayAt">oggi alle</string>
     <string name="YesterdayAt">ieri alle</string>
-    <string name="OtherAt">alle</string>
     <string name="Online">in linea</string>
     <string name="Offline">non in linea</string>
     <string name="LastSeen">ultimo accesso</string>
@@ -380,6 +382,8 @@
     <string name="AreYouSureDeleteContact">Eliminare questo contatto?</string>
     <string name="AreYouSureSecretChat">Iniziare una chat segreta?</string>
     <string name="ForwardFromMyName">inoltra dal mio nome</string>
+    <string name="SendMessagesToGroup">Inviare messaggi a %1$s?</string>
+    <string name="ForwardMessagesToGroup">Inoltra messaggi a %1$s?</string>
     <!--Intro view-->
     <string name="Page1Title">Telegram</string>
     <string name="Page2Title">Veloce</string>
@@ -396,7 +400,13 @@
     <string name="Page6Message"><![CDATA[<b>Telegram</b>]]> ti consente di accedere<![CDATA[<br/>]]>ai messaggi da più dispositivi.</string>
     <string name="Page7Message"><![CDATA[<b>Telegram</b>]]> cifra in maniera sicura i messaggi<![CDATA[<br/>]]>e può far sì che si autodistruggano.</string>
     <string name="StartMessaging">Inizia a inviare messaggi</string>
-    <!--plurals-->
+    <!--plural-->
+    <string name="Online_zero">%1$d in linea</string>
+    <string name="Online_one">%1$d in linea</string>
+    <string name="Online_two">%1$d in linea</string>
+    <string name="Online_few">%1$d in linea</string>
+    <string name="Online_many">%1$d in linea</string>
+    <string name="Online_other">%1$d in linea</string>
     <string name="Members_zero">nessun membro</string>
     <string name="Members_one">%1$d membro</string>
     <string name="Members_two">%1$d membri</string>
@@ -427,6 +437,16 @@
     <string name="FromContacts_few">da %1$d contatti</string>
     <string name="FromContacts_many">da %1$d contatti</string>
     <string name="FromContacts_other">da %1$d contatti</string>
+    <!--date formatters-->
+    <string name="formatterMonth">dd MMM</string>
+    <string name="formatterYear">dd.MM.yy</string>
+    <string name="formatterYearMax">dd.MM.yyyy</string>
+    <string name="chatDate">d MMMM</string>
+    <string name="chatFullDate">d MMMM, yyyy</string>
+    <string name="formatterWeek">EEE</string>
+    <string name="formatterDay24H">HH:mm</string>
+    <string name="formatterDay12H">h:mm a</string>
+    <string name="formatDateAtTime">%1$s alle %2$s</string>
     <!--Don't change this! Not for localization!-->
     <string name="CacheTag">CACHE_TAG</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-ko/strings.xml b/TMessagesProj/src/main/res/values-ko/strings.xml
new file mode 100644
index 000000000..754bc2100
--- /dev/null
+++ b/TMessagesProj/src/main/res/values-ko/strings.xml
@@ -0,0 +1,449 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<!--https://www.transifex.com/projects/p/telegram/language/ko/members/-->
+
+<resources>
+    <string name="AppName">텔레그램</string>
+    <string name="LanguageName">한국어</string>
+    <string name="LanguageNameInEnglish">Korean</string>
+    <string name="LanguageCode">ko</string>
+    <!--signin view-->
+    <string name="YourPhone">전화번호 입력</string>
+    <string name="StartText">국가번호와 전화번호를 입력하세요.<![CDATA[\n]]>대한민국 국가번호: 82</string>
+    <string name="ChooseCountry">국가를 선택하세요</string>
+    <string name="WrongCountry">올바른 국가번호를 입력하세요</string>
+    <!--code enter view-->
+    <string name="YourCode">인증코드 입력</string>
+    <string name="SentSmsCode">인증코드 메시지를 아래 번호로 전송했습니다<![CDATA[<br/>]]></string>
+    <string name="CallText">텔레그램이 %1$d:%2$02d 후에는 전화를 겁니다.</string>
+    <string name="Calling">텔레그램이 전화 거는 중...</string>
+    <string name="Code">코드</string>
+    <string name="WrongNumber">전화번호가 틀렸나요?</string>
+    <string name="DidNotGetTheCode">코드를 받지 못하셨나요?</string>
+    <!--signup view-->
+    <string name="YourName">이름 입력</string>
+    <string name="RegisterText">이름을 입력하세요</string>
+    <!--<string name="RegisterText">Set up your name and picture</string>-->
+    <string name="FirstName">이름(필수)</string>
+    <string name="LastName">성(선택)</string>
+    <string name="CancelRegistration">가입 취소</string>
+    <!--chats view-->
+    <string name="Chats">채팅방</string>
+    <string name="Search">검색</string>
+    <string name="NewMessages">새 메시지</string>
+    <string name="Settings">설정</string>
+    <string name="Contacts">주소록</string>
+    <string name="NewGroup">새 그룹</string>
+    <string name="Yesterday">어제</string>
+    <string name="NoResult">결과 없음</string>
+    <string name="NoChats">채팅방이 없습니다...</string>
+    <string name="NoChatsHelp">대화를 시작하려면 우측 상단의\n초대하기 버튼을 누르거나\n메뉴 버튼을 눌러 보세요.</string>
+    <string name="WaitingForNetwork">네트워크 연결을 기다리는 중...</string>
+    <string name="Connecting">연결 중...</string>
+    <string name="Updating">업데이트 중...</string>
+    <string name="NewSecretChat">비밀대화 시작</string>
+    <string name="AwaitingEncryption">%s님을 기다리는 중...</string>
+    <string name="EncryptionRejected">비밀대화가 끝났습니다</string>
+    <string name="EncryptionProcessing">암호키 교환중...</string>
+    <string name="EncryptedChatStartedOutgoing">%s님이 비밀대화에 참여했습니다.</string>
+    <string name="EncryptedChatStartedIncoming">비밀대화에 참여했습니다.</string>
+    <string name="ClearHistory">대화내용 지우기</string>
+    <string name="DeleteChat">채팅방 나가기</string>
+    <string name="HiddenName">숨긴 이름</string>
+    <string name="SelectChat">채팅방 선택</string>
+    <!--broadcasts-->
+    <string name="BroadcastList">단체 메시지 리스트</string>
+    <string name="NewBroadcastList">새 단체 메시지 리스트</string>
+    <string name="EnterListName">리스트 이름을 입력하세요</string>
+    <string name="YouCreatedBroadcastList">단체 메시지 리스트를 만들었습니다</string>
+    <string name="AddRecipient">받는 사람 추가</string>
+    <string name="KickFromBroadcast">리스트에서 제외</string>
+    <!--documents view-->
+    <string name="SelectFile">파일 선택</string>
+    <string name="FreeOfTotal">%2$s 중 %1$s 남음</string>
+    <string name="UnknownError">알 수 없는 오류</string>
+    <string name="AccessError">접근 오류</string>
+    <string name="NoFiles">파일이 없습니다</string>
+    <string name="FileUploadLimit">파일 크기는 %1$s보다 작아야 합니다</string>
+    <string name="NotMounted">스토리지가 마운트되지 않음</string>
+    <string name="UsbActive">USB 전송 활성</string>
+    <string name="InternalStorage">내부 저장소</string>
+    <string name="ExternalStorage">외부 저장소</string>
+    <string name="SystemRoot">시스템 루트</string>
+    <string name="SdCard">SD 카드</string>
+    <!--chat view-->
+    <string name="Invisible">숨김</string>
+    <string name="Typing">입력 중...</string>
+    <string name="Attach">첨부</string>
+    <string name="IsTyping">님이 입력 중...</string>
+    <string name="AreTyping">님이 입력 중...</string>
+    <string name="GotAQuestion">텔레그램에 관해\n궁금한 사항이 있나요?</string>
+    <string name="ChatTakePhoto">사진 촬영</string>
+    <string name="ChatGallery">앨범</string>
+    <string name="ChatLocation">위치</string>
+    <string name="ChatVideo">동영상</string>
+    <string name="ChatDocument">문서</string>
+    <string name="NoMessages">메시지가 없습니다...</string>
+    <string name="ViewPhoto">사진 보기</string>
+    <string name="ViewLocation">위치 보기</string>
+    <string name="ViewVideo">동영상 재생</string>
+    <string name="ForwardedMessage">전달된 메시지</string>
+    <string name="From">보낸 사람</string>
+    <string name="NoRecent">최근에 사용한 이모티콘</string>
+    <string name="Message">메시지</string>
+    <string name="TypeMessage">메시지 입력</string>
+    <string name="DOWNLOAD">다운로드</string>
+    <string name="Selected">선택: %d</string>
+    <string name="ShareMyContactInfo">내 연락처 공유</string>
+    <string name="AddToContacts">주소록에 추가</string>
+    <string name="EncryptedPlaceholderTitleIncoming">%s님이 비밀대화에 초대했습니다.</string>
+    <string name="EncryptedPlaceholderTitleOutgoing">%s님을 비밀대화에 초대했습니다.</string>
+    <string name="EncryptedDescriptionTitle">비밀대화는</string>
+    <string name="EncryptedDescription1">단대단 암호화를 사용합니다</string>
+    <string name="EncryptedDescription2">서버에 어떤 흔적도 남기지 않습니다</string>
+    <string name="EncryptedDescription3">일정 시간 후에 자동삭제가 가능합니다</string>
+    <string name="EncryptedDescription4">전달 기능이 허용되지 않습니다</string>
+    <string name="YouWereKicked">그룹에서 추방되었습니다</string>
+    <string name="YouLeft">그룹을 떠났습니다</string>
+    <string name="DeleteThisGroup">이 그룹 삭제</string>
+    <string name="DeleteThisChat">이 채팅방 삭제</string>
+    <string name="SlideToCancel">밀어서 취소</string>
+    <string name="SaveToDownloads">다운로드 폴더에 저장</string>
+    <string name="ApplyLocalizationFile">언어 파일 적용</string>
+    <string name="UnsupportedAttachment">지원하지 않는 형식입니다</string>
+    <!--notification-->
+    <string name="EncryptedChatRequested">비밀대화를 요청했습니다</string>
+    <string name="EncryptedChatAccepted">비밀대화를 시작했습니다</string>
+    <string name="MessageLifetimeChanged">%1$s님이 자동삭제를 %2$s 후로 설정했습니다</string>
+    <string name="MessageLifetimeChangedOutgoing">자동삭제를 %1$s 후로 설정했습니다</string>
+    <string name="MessageLifetimeRemoved">%1$s님이 자동삭제를 해제했습니다</string>
+    <string name="MessageLifetimeYouRemoved">자동삭제를 해제했습니다</string>
+    <string name="MessageLifetime2s">2초</string>
+    <string name="MessageLifetime5s">5초</string>
+    <string name="MessageLifetime1m">1분</string>
+    <string name="MessageLifetime1h">1시간</string>
+    <string name="MessageLifetime1d">하루</string>
+    <string name="MessageLifetime1w">일주일</string>
+    <string name="YouHaveNewMessage">새 메시지가 있습니다</string>
+    <string name="NotificationMessageText">%1$s: %2$s</string>
+    <string name="NotificationMessageNoText">%1$s님이 메시지를 보냈습니다</string>
+    <string name="NotificationMessagePhoto">%1$s님이 사진을 보냈습니다</string>
+    <string name="NotificationMessageVideo">%1$s님이 동영상을 보냈습니다</string>
+    <string name="NotificationMessageContact">%1$s님이 연락처를 공유했습니다</string>
+    <string name="NotificationMessageMap">%1$s님이 위치를 보냈습니다</string>
+    <string name="NotificationMessageDocument">%1$s님이 문서를 보냈습니다</string>
+    <string name="NotificationMessageAudio">%1$s님이 음성메시지를 보냈습니다</string>
+    <string name="NotificationMessageGroupText">%1$s @ %2$s: %3$s</string>
+    <string name="NotificationMessageGroupNoText">%1$s님이 %2$s 그룹에 메시지를 보냈습니다</string>
+    <string name="NotificationMessageGroupPhoto">%1$s님이 %2$s 그룹에 사진을 보냈습니다</string>
+    <string name="NotificationMessageGroupVideo">%1$s님이 %2$s 그룹에 동영상을 보냈습니다</string>
+    <string name="NotificationMessageGroupContact">%1$s님이 %2$s 그룹에 연락처를 공유했습니다</string>
+    <string name="NotificationMessageGroupMap">%1$s님이 %2$s 그룹에 위치를 보냈습니다</string>
+    <string name="NotificationMessageGroupDocument">%1$s님이 %2$s 그룹에 문서를 보냈습니다</string>
+    <string name="NotificationMessageGroupAudio">%1$s님이 %2$s 그룹에 음성메시지를 보냈습니다</string>
+    <string name="NotificationInvitedToGroup">%1$s님이 %2$s 그룹에 초대했습니다</string>
+    <string name="NotificationEditedGroupName">%1$s님이 그룹 이름을 %2$s 그룹으로 변경했습니다</string>
+    <string name="NotificationEditedGroupPhoto">%1$s님이 %2$s 그룹 사진을 변경했습니다</string>
+    <string name="NotificationGroupAddMember">%1$s님이 %3$s님을 %2$s 그룹에 초대했습니다</string>
+    <string name="NotificationGroupKickMember">%1$s님이 %3$s님을 %2$s 그룹에서 추방했습니다</string>
+    <string name="NotificationGroupKickYou">%1$s님이 %2$s 그룹에서 추방했습니다</string>
+    <string name="NotificationGroupLeftMember">%1$s님이 %2$s 그룹을 떠났습니다</string>
+    <string name="NotificationContactJoined">%1$s님이 텔레그램에 가입했습니다!</string>
+    <string name="NotificationUnrecognizedDevice">%1$s님,\n%2$s에 새 기기에서 회원님의 계정에 로그인하였습니다.\n\n기기: %3$s\n위치: %4$s\n\n본인의 접속이 아니라면 \'설정\'으로 가서 \'다른 모든 세션 종료\'를 실행하세요.\n\n감사합니다.\n텔레그램 팀 드림</string>
+    <string name="NotificationContactNewPhoto">%1$s님이 프로필 사진을 변경했습니다</string>
+    <string name="Reply">답장</string>
+    <string name="ReplyToGroup">%1$s 그룹에 답장하기</string>
+    <string name="ReplyToUser">%1$s님에게 답장하기</string>
+    <string name="NotificationMessagesPeopleDisplayOrder">%2$s %1$s</string>
+    <!--contacts view-->
+    <string name="SelectContact">대화상대 선택</string>
+    <string name="NoContacts">대화상대가 없습니다</string>
+    <string name="InviteText">텔레그램으로 초대합니다! http://telegram.org/dl2</string>
+    <string name="TodayAt">오늘</string>
+    <string name="YesterdayAt">어제</string>
+    <string name="Online">온라인</string>
+    <string name="Offline">오프라인</string>
+    <string name="LastSeen">마지막 접속: </string>
+    <string name="LastSeenDate">마지막 접속: </string>
+    <string name="InviteFriends">친구 초대</string>
+    <!--group create view-->
+    <string name="SendMessageTo">메시지 보내기...</string>
+    <string name="EnterGroupNamePlaceholder">그룹 이름 입력</string>
+    <string name="GroupName">그룹 이름</string>
+    <string name="AllContacts">모든 대화상대</string>
+    <string name="MembersCount">대화상대 %1$d/%2$d</string>
+    <!--group info view-->
+    <string name="EnterGroupNameTitle">그룹 이름을 입력하세요</string>
+    <string name="SharedMedia">공유한 미디어</string>
+    <string name="GroupInfo">그룹 정보</string>
+    <string name="SHAREDMEDIA">공유한 미디어</string>
+    <string name="SETTINGS">설정</string>
+    <string name="AddMember">대화상대 추가</string>
+    <string name="DeleteAndExit">그룹에서 나가기</string>
+    <string name="Notifications">알림</string>
+    <string name="KickFromGroup">그룹에서 내보내기</string>
+    <!--contact info view-->
+    <string name="ShareContact">공유</string>
+    <string name="AddContact">추가</string>
+    <string name="BlockContact">차단</string>
+    <string name="EditContact">편집</string>
+    <string name="DeleteContact">삭제</string>
+    <string name="PhoneHome">집</string>
+    <string name="PhoneMobile">휴대전화</string>
+    <string name="PhoneWork">직장</string>
+    <string name="PhoneOther">기타</string>
+    <string name="PhoneMain">기본</string>
+    <string name="ContactInfo">연락처 정보</string>
+    <string name="PHONE">전화번호</string>
+    <string name="StartEncryptedChat">비밀대화 시작</string>
+    <string name="CreateEncryptedChatError">오류가 발생했습니다.</string>
+    <string name="CreateEncryptedChatOutdatedError">%1$s님의 텔레그램 버전이 낮아 비밀대화를 시작할 수 없습니다.\n\n비밀대화를 시작하려면 %2$s님이 텔레그램을 업데이트해야 합니다.</string>
+    <string name="SecretTitle">비밀대화</string>
+    <string name="EncryptionKey">암호화 키</string>
+    <string name="MessageLifetime">자동삭제 타이머</string>
+    <string name="ShortMessageLifetimeForever">해제</string>
+    <string name="ShortMessageLifetime2s">2초</string>
+    <string name="ShortMessageLifetime5s">5초</string>
+    <string name="ShortMessageLifetime1m">1분</string>
+    <string name="ShortMessageLifetime1h">1시간</string>
+    <string name="ShortMessageLifetime1d">하루</string>
+    <string name="ShortMessageLifetime1w">일주일</string>
+    <string name="EncryptionKeyDescription">이 이미지는 <![CDATA[<b>]]>%1$s<![CDATA[</b>]]>님과의 비밀대화에 사용 중인 암호화 키의 모습입니다.<![CDATA[<br><br>]]>이 이미지가 <![CDATA[<b>]]>%2$s<![CDATA[</b>]]>님의 암호화 키와 똑같다면 대화는 200%% 안전합니다.<![CDATA[<br><br>]]>더 자세한 사항은 telegram.org 를 참고해 주세요.</string>
+    <!--settings view-->
+    <string name="ResetNotificationsText">모든 알림 설정이 초기화되었습니다</string>
+    <string name="TextSize">채팅 글자 크기</string>
+    <string name="AskAQuestion">질문하기</string>
+    <string name="EnableAnimations">화면 전환 효과 사용</string>
+    <string name="Unblock">차단 해제</string>
+    <string name="UnblockText">차단을 해제하려면 대화상대를 길게 누르세요.</string>
+    <string name="NoBlocked">차단한 친구가 없습니다</string>
+    <string name="YourPhoneNumber">전화번호</string>
+    <string name="MessageNotifications">메시지 알림</string>
+    <string name="Alert">알림 사용</string>
+    <string name="MessagePreview">메시지 미리보기</string>
+    <string name="GroupNotifications">그룹 알림</string>
+    <string name="Sound">알림음</string>
+    <string name="InAppNotifications">앱을 실행 중일 때 알림</string>
+    <string name="InAppSounds">실행 중일 때 알림음</string>
+    <string name="InAppVibrate">실행 중일 때 진동</string>
+    <string name="Vibrate">진동</string>
+    <string name="InAppPreview">실행 중일 때 미리보기</string>
+    <string name="Reset">초기화</string>
+    <string name="ResetAllNotifications">모든 알림 설정 초기화</string>
+    <string name="UndoAllCustom">연락처와 그룹에 대한 모든 알림 설정을 처음 상태로 되돌립니다.</string>
+    <string name="NotificationsAndSounds">알림 및 소리</string>
+    <string name="BlockedUsers">차단 목록</string>
+    <string name="SaveIncomingPhotos">받은 사진 저장</string>
+    <string name="LogOut">로그아웃</string>
+    <string name="YourFirstNameAndLastName">이름</string>
+    <string name="NoSound">알림음 없음</string>
+    <string name="Default">기본값</string>
+    <string name="Support">지원</string>
+    <string name="ChatBackground">채팅방 배경화면</string>
+    <string name="MessagesSettings">메시지</string>
+    <string name="SendByEnter">엔터키로 메시지 전송</string>
+    <string name="TerminateAllSessions">다른 모든 세션 종료</string>
+    <string name="Events">이벤트</string>
+    <string name="ContactJoined">친구의 텔레그램 가입 알림</string>
+    <string name="Pebble">PEBBLE 스마트워치 지원</string>
+    <string name="Language">언어</string>
+    <string name="AskAQuestionInfo">텔레그램에 관한 질문은 자원봉사자들이 답변해 드립니다. 신속한 답변을 위해 노력하지만 답변이 다소 늦을 수 있습니다.<![CDATA[<br><br>]]>일반적인 문제와 <![CDATA[<a href=\"http://telegram.org/faq/ko#g\">해결방법</a>]]>에 대해서는 \'<![CDATA[<a href=\"http://telegram.org/faq/ko#a\">자주 묻는 질문</a>]]>\'을 확인해 보세요.</string>
+    <string name="AskButton">질문하기</string>
+    <string name="TelegramFaq">자주 묻는 질문</string>
+    <string name="TelegramFaqUrl">https://telegram.org/faq/ko</string>
+    <string name="DeleteLocalization">언어를 삭제할까요?</string>
+    <string name="IncorrectLocalization">언어 파일이 올바르지 않습니다.</string>
+    <string name="Enabled">켜기</string>
+    <string name="Disabled">끄기</string>
+    <string name="NotificationsService">알림 서비스</string>
+    <string name="NotificationsServiceDisableInfo">알림 서비스를 비활성화 하면 새로운 메시지의 알림이 다소 늦을 수 있습니다.<![CDATA[\n]]>텔레그램이 백그라운드에서 작동하며 알림을 바로 알릴 수 있도록 활성화 하는것을 권장합니다.</string>
+    <string name="SortBy">정렬</string>
+    <string name="ImportContacts">연락처 가져오기</string>
+    <string name="WiFiOnly">WiFi 전용</string>
+    <string name="SortFirstName">이름</string>
+    <string name="SortLastName">성</string>
+    <string name="LedColor">LED 색상</string>
+    <string name="PopupNotification">알림 팝업</string>
+    <string name="NoPopup">사용 안 함</string>
+    <string name="OnlyWhenScreenOn">화면이 켜져 있을 때만</string>
+    <string name="OnlyWhenScreenOff">화면이 꺼져 있을 때만</string>
+    <string name="AlwaysShowPopup">항상 표시</string>
+    <string name="BadgeNumber">앱 아이콘에 알림 개수 표시</string>
+    <string name="Short">짧게</string>
+    <string name="Long">길게</string>
+    <string name="SystemDefault">시스템 기본값</string>
+    <string name="SettingsDefault">설정 기본값</string>
+    <string name="AutomaticMediaDownload">미디어 자동 다운로드</string>
+    <string name="WhenUsingMobileData">모바일 데이터를 사용 중일 때</string>
+    <string name="WhenConnectedOnWiFi">Wi-Fi에 연결 중일 때</string>
+    <string name="WhenRoaming">로밍 중일 때</string>
+    <string name="NoMediaAutoDownload">다운로드 안함</string>
+    <string name="SaveToGallerySettings">앨범에 자동 저장</string>
+    <!--media view-->
+    <string name="NoMedia">공유한 미디어가 없습니다</string>
+    <string name="CancelDownload">다운로드 취소</string>
+    <!--map view-->
+    <string name="MyLocation">내 위치</string>
+    <string name="Map">지도</string>
+    <string name="Satellite">위성</string>
+    <string name="Hybrid">혼합</string>
+    <string name="MetersAway">m 떨어짐</string>
+    <string name="KMetersAway">km 떨어짐</string>
+    <string name="SendLocation">위치 보내기</string>
+    <string name="ShareLocation">위치 공유</string>
+    <!--photo gallery view-->
+    <string name="ShowAllMedia">모든 미디어 보기</string>
+    <string name="SaveToGallery">앨범에 저장</string>
+    <string name="Of">%1$d / %2$d</string>
+    <string name="Gallery">앨범</string>
+    <string name="AllPhotos">모든 사진</string>
+    <string name="NoPhotos">사진이 없습니다.</string>
+    <!--edit video view-->
+    <string name="EditVideo">동영상 편집</string>
+    <string name="OriginalVideo">동영상 원본</string>
+    <string name="EditedVideo">편집한 동영상</string>
+    <string name="SendingVideo">동영상 보내는 중...</string>
+    <string name="CompressVideo">동영상 크기 줄이기</string>
+    <!--button titles-->
+    <string name="Next">다음</string>
+    <string name="Back">뒤로</string>
+    <string name="Done">완료</string>
+    <string name="Open">열기</string>
+    <string name="Cancel">취소</string>
+    <string name="Add">추가</string>
+    <string name="Edit">편집</string>
+    <string name="Send">보내기</string>
+    <string name="Call">전화 걸기</string>
+    <string name="Copy">복사</string>
+    <string name="Delete">삭제</string>
+    <string name="Forward">전달</string>
+    <string name="Retry">재전송</string>
+    <string name="FromCamera">사진 촬영</string>
+    <string name="FromGalley">앨범</string>
+    <string name="DeletePhoto">사진 삭제</string>
+    <string name="OpenPhoto">사진 열기</string>
+    <string name="Set">설정</string>
+    <string name="OK">확인</string>
+    <!--messages-->
+    <string name="ActionKickUser">un1님이 un2님을 추방했습니다</string>
+    <string name="ActionLeftUser">un1님이 퇴장했습니다</string>
+    <string name="ActionAddUser">un1님이 un2님을 초대했습니다</string>
+    <string name="ActionRemovedPhoto">un1님이 그룹 사진을 삭제했습니다</string>
+    <string name="ActionChangedPhoto">un1님이 그룹 사진을 변경했습니다</string>
+    <string name="ActionChangedTitle">un1님이 그룹 이름을 un2 그룹으로 변경했습니다</string>
+    <string name="ActionCreateGroup">un1님이 그룹을 만들었습니다</string>
+    <string name="ActionYouKickUser">un2님을 추방했습니다</string>
+    <string name="ActionYouLeftUser">그룹을 떠났습니다</string>
+    <string name="ActionYouAddUser">un2님을 초대했습니다</string>
+    <string name="ActionYouRemovedPhoto">그룹 사진을 삭제했습니다</string>
+    <string name="ActionYouChangedPhoto">그룹 사진을 변경했습니다</string>
+    <string name="ActionYouChangedTitle">그룹 이름을 un2 그룹으로 변경했습니다</string>
+    <string name="ActionYouCreateGroup">그룹을 만들었습니다</string>
+    <string name="ActionKickUserYou">un1님이 추방했습니다</string>
+    <string name="ActionAddUserYou">un1님이 그룹에 초대했습니다</string>
+    <string name="UnsuppotedMedia">이 메시지는 사용 중인 텔레그램의 버전이 낮아 지원하지 않습니다. 앱을 업데이트 하세요: http://telegram.org/update</string>
+    <string name="AttachPhoto">사진</string>
+    <string name="AttachVideo">동영상</string>
+    <string name="AttachLocation">위치</string>
+    <string name="AttachContact">연락처</string>
+    <string name="AttachDocument">문서</string>
+    <string name="AttachAudio">음성메시지</string>
+    <string name="FromYou">나</string>
+    <string name="ActionTakeScreenshootYou">화면을 캡처했습니다!</string>
+    <string name="ActionTakeScreenshoot">un1님이 화면을 캡처했습니다!</string>
+    <!--Alert messages-->
+    <string name="InvalidPhoneNumber">올바른 전화번호를 입력해 주세요</string>
+    <string name="CodeExpired">코드가 만료되었습니다. 다시 로그인하세요</string>
+    <string name="FloodWait">너무 많이 시도하셨습니다. 나중에 다시 시도하세요</string>
+    <string name="InvalidCode">올바른 코드를 입력해 주세요</string>
+    <string name="InvalidFirstName">올바른 이름을 입력해 주세요</string>
+    <string name="InvalidLastName">올바른 성을 입력해 주세요</string>
+    <string name="Loading">불러오는 중...</string>
+    <string name="NoPlayerInstalled">동영상 재생 앱이 없습니다. 계속하려면 앱을 설치해 주세요.</string>
+    <string name="NoMailInstalled">sms@telegram.org 이메일 주소로 이 문제를 보내주세요.</string>
+    <string name="NoHandleAppInstalled">\'%1$s\' 파일 형식을 처리할 앱이 없습니다. 계속하려면 앱을 설치해 주세요.</string>
+    <string name="InviteUser">친구가 아직 텔레그램을 사용하지 않네요. 초대해 보세요!</string>
+    <string name="AreYouSure">확실합니까?</string>
+    <string name="AddContactQ">주소록에 추가할까요?</string>
+    <string name="AddToTheGroup">%1$s님을 그룹에 초대할까요?\n\n전달할 최근 메시지 개수:</string>
+    <string name="ForwardMessagesTo">%1$s님에게 메시지를 전달할까요?</string>
+    <string name="DeleteChatQuestion">이 채팅방을 삭제할까요?</string>
+    <string name="SendMessagesTo">%1$s님에게 메시지를 보낼까요?</string>
+    <string name="AreYouSureLogout">로그아웃을 하시겠습니까?</string>
+    <string name="AreYouSureSessions">현재 기기를 제외하고 다른 기기에 로그인된 세션을 모두 종료시킬까요?</string>
+    <string name="AreYouSureDeleteAndExit">그룹에서 나갈까요?</string>
+    <string name="AreYouSureDeleteThisChat">채팅방을 삭제할까요?</string>
+    <string name="AreYouSureShareMyContactInfo">연락처를 공유할까요?</string>
+    <string name="AreYouSureBlockContact">대화상대를 차단할까요?</string>
+    <string name="AreYouSureUnblockContact">차단을 해제할까요?</string>
+    <string name="AreYouSureDeleteContact">대화상대를 삭제할까요?</string>
+    <string name="AreYouSureSecretChat">비밀대화를 시작할까요?</string>
+    <string name="ForwardFromMyName">내 이름으로 전달</string>
+    <string name="SendMessagesToGroup">%1$s 그룹에 메시지를 보낼까요?</string>
+    <string name="ForwardMessagesToGroup">%1$s 그룹에 메시지를 전달할까요?</string>
+    <!--Intro view-->
+    <string name="Page1Title">텔레그램</string>
+    <string name="Page2Title">눈부신 속도</string>
+    <string name="Page3Title">완전 무료</string>
+    <string name="Page4Title">보안성</string>
+    <string name="Page5Title">강력함</string>
+    <string name="Page6Title">클라우드 기반</string>
+    <string name="Page7Title">사생활 보호</string>
+    <string name="Page1Message">세상에서 가장 <![CDATA[<b>빠르고 안전한</b><br/><b>무료</b>]]> 메신저입니다.</string>
+    <string name="Page2Message"><![CDATA[<b>텔레그램</b>]]>은 어떤 메신저보다도<![CDATA[<br/>]]>빠르게 메시지를 전송합니다.</string>
+    <string name="Page3Message"><![CDATA[<b>텔레그램</b>]]>은 영원히 무료입니다.<![CDATA[<br/>]]>광고도 없고 이용료도 없습니다.</string>
+    <string name="Page4Message"><![CDATA[<b>텔레그램</b>]]>은 그 어떤 누구로부터도<![CDATA[<br/>]]>메시지를 안전하게 보호합니다.</string>
+    <string name="Page5Message"><![CDATA[<b>텔레그램</b>]]>은 대화나 미디어의<![CDATA[<br/>]]>용량에 제한이 없습니다.</string>
+    <string name="Page6Message"><![CDATA[<b>텔레그램</b>]]>은 다른 기기에서도<![CDATA[<br/>]]>동시에 사용할 수 있습니다.</string>
+    <string name="Page7Message"><![CDATA[<b>텔레그램</b>]]>은 메시지를 강력하게 암호화하며<![CDATA[<br/>]]>자동으로 삭제되게 할 수 있습니다.</string>
+    <string name="StartMessaging">시작하기</string>
+    <!--plural-->
+    <string name="Online_zero">온라인 %1$d명</string>
+    <string name="Online_one">온라인 %1$d명</string>
+    <string name="Online_two">온라인 %1$d명</string>
+    <string name="Online_few">온라인 %1$d명</string>
+    <string name="Online_many">온라인 %1$d명</string>
+    <string name="Online_other">온라인 %1$d명</string>
+    <string name="Members_zero">대화상대 없음</string>
+    <string name="Members_one">대화상대 %1$d명</string>
+    <string name="Members_two">대화상대 %1$d명</string>
+    <string name="Members_few">대화상대 %1$d명</string>
+    <string name="Members_many">대화상대 %1$d명</string>
+    <string name="Members_other">대화상대 %1$d명</string>
+    <string name="AndMoreTyping_zero">외 %1$d명이 입력 중</string>
+    <string name="AndMoreTyping_one">외 %1$d명이 입력 중</string>
+    <string name="AndMoreTyping_two">외 %1$d명이 입력 중</string>
+    <string name="AndMoreTyping_few">외 %1$d명이 입력 중</string>
+    <string name="AndMoreTyping_many">외 %1$d명이 입력 중</string>
+    <string name="AndMoreTyping_other">외 %1$d명이 입력 중</string>
+    <string name="NewMessages_zero">새 메시지 없음</string>
+    <string name="NewMessages_one">새 메시지 %1$d건</string>
+    <string name="NewMessages_two">새 메시지 %1$d건</string>
+    <string name="NewMessages_few">새 메시지 %1$d건</string>
+    <string name="NewMessages_many">새 메시지 %1$d건</string>
+    <string name="NewMessages_other">새 메시지 %1$d건</string>
+    <string name="messages_zero">메시지 없음</string>
+    <string name="messages_one">메시지 %1$d건</string>
+    <string name="messages_two">메시지 %1$d건</string>
+    <string name="messages_few">메시지 %1$d건</string>
+    <string name="messages_many">메시지 %1$d건</string>
+    <string name="messages_other">메시지 %1$d건</string>
+    <string name="FromContacts_zero">보낸곳 없음 -</string>
+    <string name="FromContacts_one">채팅방 %1$d개에서</string>
+    <string name="FromContacts_two">채팅방 %1$d개에서</string>
+    <string name="FromContacts_few">채팅방 %1$d개에서</string>
+    <string name="FromContacts_many">채팅방 %1$d개에서</string>
+    <string name="FromContacts_other">채팅방 %1$d개에서</string>
+    <!--date formatters-->
+    <string name="formatterMonth">M\'월\' d\'일\'</string>
+    <string name="formatterYear">yyyy.MM.dd.</string>
+    <string name="formatterYearMax">yyyy. MM. dd.</string>
+    <string name="chatDate">M\'월\' d\'일\' EEEE</string>
+    <string name="chatFullDate">yyyy\'년\' M\'월\' d\'일\' EEEE</string>
+    <string name="formatterWeek">EEEE</string>
+    <string name="formatterDay24H">HH:mm</string>
+    <string name="formatterDay12H">a h:mm</string>
+    <string name="formatDateAtTime">%1$s %2$s</string>
+    <!--Don't change this! Not for localization!-->
+    <string name="CacheTag">CACHE_TAG</string>
+</resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-nl/strings.xml b/TMessagesProj/src/main/res/values-nl/strings.xml
index de47b75eb..a075363f4 100644
--- a/TMessagesProj/src/main/res/values-nl/strings.xml
+++ b/TMessagesProj/src/main/res/values-nl/strings.xml
@@ -15,7 +15,7 @@
     <!--code enter view-->
     <string name="YourCode">Je code</string>
     <string name="SentSmsCode">We hebben een sms met een activatiecode verzonden naar je telefoon</string>
-    <string name="CallText">We bellen je over</string>
+    <string name="CallText">We bellen je over %1$d:%2$02d</string>
     <string name="Calling">We bellen je…</string>
     <string name="Code">Code</string>
     <string name="WrongNumber">Verkeerd nummer?</string>
@@ -152,13 +152,15 @@
     <string name="NotificationUnrecognizedDevice">%1$s,\nEr is op je account ingelogd vanaf een nieuw apparaat op %2$s\n\nApparaat: %3$s\nLocatie: %4$s\n\nAls jij dit niet was, kun je alle sessies beëindigen via Instellingen – Beëindig alle andere sessies.\n\nBedankt,\nHet Telegram-team</string>
     <string name="NotificationContactNewPhoto">%1$s heeft zijn/haar profielfoto gewijzigd</string>
     <string name="Reply">Antwoord</string>
+    <string name="ReplyToGroup">Antwoord op %1$s</string>
+    <string name="ReplyToUser">Antwoord op %1$s</string>
+    <string name="NotificationMessagesPeopleDisplayOrder">%1$s %2$s</string>
     <!--contacts view-->
     <string name="SelectContact">Kies een contact</string>
     <string name="NoContacts">Nog geen contacten</string>
     <string name="InviteText">Hey! Zullen we overstappen op Telegram? http://telegram.org/dl2</string>
     <string name="TodayAt">vandaag om</string>
     <string name="YesterdayAt">gisteren om</string>
-    <string name="OtherAt">om</string>
     <string name="Online">online</string>
     <string name="Offline">offline</string>
     <string name="LastSeen">gezien</string>
@@ -380,6 +382,8 @@
     <string name="AreYouSureDeleteContact">Weet je zeker dat je deze contactpersoon wilt verwijderen?</string>
     <string name="AreYouSureSecretChat">Weet je zeker dat je een geheime chat wilt starten?</string>
     <string name="ForwardFromMyName">doorsturen via mijn eigen naam</string>
+    <string name="SendMessagesToGroup">Berichten naar %1$s verzenden?</string>
+    <string name="ForwardMessagesToGroup">Berichten naar %1$s doorsturen?</string>
     <!--Intro view-->
     <string name="Page1Title">Telegram</string>
     <string name="Page2Title">Snel</string>
@@ -396,7 +400,13 @@
     <string name="Page6Message"><![CDATA[<b>Telegram</b>]]> biedt toegang tot je berichten<![CDATA[<br/>]]>vanaf meerdere apparaten.</string>
     <string name="Page7Message"><![CDATA[<b>Telegram</b>]]> berichten zijn sterk versleuteld<![CDATA[<br/>]]>en kunnen zichzelf vernietigen.</string>
     <string name="StartMessaging">Begin met chatten</string>
-    <!--plurals-->
+    <!--plural-->
+    <string name="Online_zero">%1$d online</string>
+    <string name="Online_one">%1$d online</string>
+    <string name="Online_two">%1$d online</string>
+    <string name="Online_few">%1$d online</string>
+    <string name="Online_many">%1$d online</string>
+    <string name="Online_other">%1$d online</string>
     <string name="Members_zero">geen deelnemers</string>
     <string name="Members_one">%1$d deelnemer</string>
     <string name="Members_two">%1$d deelnemers</string>
@@ -427,6 +437,16 @@
     <string name="FromContacts_few">van %1$d contactpersonen</string>
     <string name="FromContacts_many">van %1$d contactpersonen</string>
     <string name="FromContacts_other">van %1$d contactpersonen</string>
+    <!--date formatters-->
+    <string name="formatterMonth">dd MMM</string>
+    <string name="formatterYear">dd-MM-yy</string>
+    <string name="formatterYearMax">dd-MM-yyyy</string>
+    <string name="chatDate">d MMMM</string>
+    <string name="chatFullDate">d MMMM yyyy</string>
+    <string name="formatterWeek">EEE</string>
+    <string name="formatterDay24H">HH:mm</string>
+    <string name="formatterDay12H">h:mm a</string>
+    <string name="formatDateAtTime">%1$s om %2$s</string>
     <!--Don't change this! Not for localization!-->
     <string name="CacheTag">CACHE_TAG</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
index 2845a3c6b..ef43e948f 100644
--- a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
@@ -15,7 +15,7 @@
     <!--code enter view-->
     <string name="YourCode">Seu código</string>
     <string name="SentSmsCode">Enviamos uma SMS com um código de ativação para o seu telefone</string>
-    <string name="CallText">Vamos te ligar em</string>
+    <string name="CallText">Vamos te ligar em %1$d:%2$02d</string>
     <string name="Calling">Estamos te ligando...</string>
     <string name="Code">Código</string>
     <string name="WrongNumber">Número incorreto?</string>
@@ -152,13 +152,15 @@
     <string name="NotificationUnrecognizedDevice">%1$s,\nNós detectamos um login na sua conta de um novo dispositivo %2$s\n\nDispositivo: %3$s\nLocalização: %4$s\nSe não foi você, você pode ir em Configurações - Terminar todas as sessões.\n\nAtenciosamente,\nTime do Telegram</string>
     <string name="NotificationContactNewPhoto">%1$s atualizou a foto do perfil</string>
     <string name="Reply">Responder</string>
+    <string name="ReplyToGroup">Reply to %1$s</string>
+    <string name="ReplyToUser">Reply to %1$s</string>
+    <string name="NotificationMessagesPeopleDisplayOrder">%1$s %2$s</string>
     <!--contacts view-->
     <string name="SelectContact">Selecionar Contato</string>
     <string name="NoContacts">Ainda não há contatos</string>
     <string name="InviteText">Ei, vamos mudar para o Telegram: http://telegram.org/dl2</string>
     <string name="TodayAt">hoje às</string>
     <string name="YesterdayAt">ontem às</string>
-    <string name="OtherAt">às</string>
     <string name="Online">online</string>
     <string name="Offline">offline</string>
     <string name="LastSeen">visto</string>
@@ -380,6 +382,8 @@
     <string name="AreYouSureDeleteContact">Você tem certeza que deseja deletar este contato?</string>
     <string name="AreYouSureSecretChat">Você tem certeza que deseja começar uma conversa secreta?</string>
     <string name="ForwardFromMyName">encaminhar pelo meu nome</string>
+    <string name="SendMessagesToGroup">Enviar mensagens para %1$s?</string>
+    <string name="ForwardMessagesToGroup">Encaminhar mensagem para %1$s?</string>
     <!--Intro view-->
     <string name="Page1Title">Telegram</string>
     <string name="Page2Title">Rápido</string>
@@ -397,6 +401,12 @@
     <string name="Page7Message"><![CDATA[<b>Telegram</b>]]> possui mensagens fortemente<![CDATA[<br/>]]>encriptadas e podem se auto-destruir.</string>
     <string name="StartMessaging">Comece a conversar</string>
     <!--plurals-->
+    <string name="Online_zero">%1$d online</string>
+    <string name="Online_one">%1$d online</string>
+    <string name="Online_two">%1$d online</string>
+    <string name="Online_few">%1$d online</string>
+    <string name="Online_many">%1$d online</string>
+    <string name="Online_other">%1$d online</string>
     <string name="Members_zero">sem membros</string>
     <string name="Members_one">%1$d membro</string>
     <string name="Members_two">%1$d membros</string>
@@ -427,6 +437,16 @@
     <string name="FromContacts_few">de %1$d contatos</string>
     <string name="FromContacts_many">de %1$d contatos</string>
     <string name="FromContacts_other">de %1$d contatos</string>
+    <!--date formatters-->
+    <string name="formatterMonth">dd MMM</string>
+    <string name="formatterYear">dd.MM.yy</string>
+    <string name="formatterYearMax">dd.MM.yyyy</string>
+    <string name="chatDate">d MMMM</string>
+    <string name="chatFullDate">d MMMM yyyy</string>
+    <string name="formatterWeek">EEE</string>
+    <string name="formatterDay24H">HH:mm</string>
+    <string name="formatterDay12H">h:mm a</string>
+    <string name="formatDateAtTime">%1$s às %2$s</string>
     <!--Don't change this! Not for localization!-->
     <string name="CacheTag">CACHE_TAG</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-pt-rPT/strings.xml b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
index 165f24e1b..cc4c0a7a3 100644
--- a/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
@@ -15,7 +15,7 @@
     <!--code enter view-->
     <string name="YourCode">Seu código</string>
     <string name="SentSmsCode">Enviamos uma SMS com um código de ativação para o seu telefone</string>
-    <string name="CallText">Vamos te ligar em</string>
+    <string name="CallText">Vamos te ligar em %1$d:%2$02d</string>
     <string name="Calling">Estamos te ligando...</string>
     <string name="Code">Código</string>
     <string name="WrongNumber">Número incorreto?</string>
@@ -152,13 +152,15 @@
     <string name="NotificationUnrecognizedDevice">%1$s,\nNós detectamos um login na sua conta de um novo dispositivo %2$s\n\nDispositivo: %3$s\nLocalização: %4$s\nSe não foi você, você pode ir em Configurações - Terminar todas as sessões.\n\nAtenciosamente,\nTime do Telegram</string>
     <string name="NotificationContactNewPhoto">%1$s atualizou a foto do perfil</string>
     <string name="Reply">Responder</string>
+    <string name="ReplyToGroup">Reply to %1$s</string>
+    <string name="ReplyToUser">Reply to %1$s</string>
+    <string name="NotificationMessagesPeopleDisplayOrder">%1$s %2$s</string>
     <!--contacts view-->
     <string name="SelectContact">Selecionar Contato</string>
     <string name="NoContacts">Ainda não há contatos</string>
     <string name="InviteText">Ei, vamos mudar para o Telegram: http://telegram.org/dl2</string>
     <string name="TodayAt">hoje às</string>
     <string name="YesterdayAt">ontem às</string>
-    <string name="OtherAt">às</string>
     <string name="Online">online</string>
     <string name="Offline">offline</string>
     <string name="LastSeen">visto</string>
@@ -380,6 +382,8 @@
     <string name="AreYouSureDeleteContact">Você tem certeza que deseja deletar este contato?</string>
     <string name="AreYouSureSecretChat">Você tem certeza que deseja começar uma conversa secreta?</string>
     <string name="ForwardFromMyName">encaminhar pelo meu nome</string>
+    <string name="SendMessagesToGroup">Enviar mensagens para %1$s?</string>
+    <string name="ForwardMessagesToGroup">Encaminhar mensagem para %1$s?</string>
     <!--Intro view-->
     <string name="Page1Title">Telegram</string>
     <string name="Page2Title">Rápido</string>
@@ -397,6 +401,12 @@
     <string name="Page7Message"><![CDATA[<b>Telegram</b>]]> possui mensagens fortemente<![CDATA[<br/>]]>encriptadas e podem se auto-destruir.</string>
     <string name="StartMessaging">Comece a conversar</string>
     <!--plurals-->
+    <string name="Online_zero">%1$d online</string>
+    <string name="Online_one">%1$d online</string>
+    <string name="Online_two">%1$d online</string>
+    <string name="Online_few">%1$d online</string>
+    <string name="Online_many">%1$d online</string>
+    <string name="Online_other">%1$d online</string>
     <string name="Members_zero">sem membros</string>
     <string name="Members_one">%1$d membro</string>
     <string name="Members_two">%1$d membros</string>
@@ -427,6 +437,16 @@
     <string name="FromContacts_few">de %1$d contatos</string>
     <string name="FromContacts_many">de %1$d contatos</string>
     <string name="FromContacts_other">de %1$d contatos</string>
+    <!--date formatters-->
+    <string name="formatterMonth">dd MMM</string>
+    <string name="formatterYear">dd.MM.yy</string>
+    <string name="formatterYearMax">dd.MM.yyyy</string>
+    <string name="chatDate">d MMMM</string>
+    <string name="chatFullDate">d MMMM yyyy</string>
+    <string name="formatterWeek">EEE</string>
+    <string name="formatterDay24H">HH:mm</string>
+    <string name="formatterDay12H">h:mm a</string>
+    <string name="formatDateAtTime">%1$s às %2$s</string>
     <!--Don't change this! Not for localization!-->
     <string name="CacheTag">CACHE_TAG</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index b6c2da0d2..3cfae4b62 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -15,7 +15,7 @@
     <!--code enter view-->
     <string name="YourCode">Your code</string>
     <string name="SentSmsCode">We\'ve sent an SMS with an activation code to your phone</string>
-    <string name="CallText">We will call you in</string>
+    <string name="CallText">We will call you in %1$d:%2$02d</string>
     <string name="Calling">Calling you...</string>
     <string name="Code">Code</string>
     <string name="WrongNumber">Wrong number?</string>
@@ -152,13 +152,15 @@
     <string name="NotificationUnrecognizedDevice">%1$s,\nWe detected a login into your account from a new device on %2$s\n\nDevice: %3$s\nLocation: %4$s\n\nIf this wasn\'t you, you can go to Settings - Terminate all sessions.\n\nSincerely,\nThe Telegram Team</string>
     <string name="NotificationContactNewPhoto">%1$s updated profile photo</string>
     <string name="Reply">Reply</string>
+    <string name="ReplyToGroup">Reply to %1$s</string>
+    <string name="ReplyToUser">Reply to %1$s</string>
+    <string name="NotificationMessagesPeopleDisplayOrder">%1$s %2$s</string>
     <!--contacts view-->
     <string name="SelectContact">Select Contact</string>
     <string name="NoContacts">No contacts yet</string>
     <string name="InviteText">Hey, let\'s switch to Telegram: http://telegram.org/dl2</string>
     <string name="TodayAt">today at</string>
     <string name="YesterdayAt">yesterday at</string>
-    <string name="OtherAt">at</string>
     <string name="Online">online</string>
     <string name="Offline">offline</string>
     <string name="LastSeen">last seen</string>
@@ -380,6 +382,8 @@
     <string name="AreYouSureDeleteContact">Are you sure you want to delete this contact?</string>
     <string name="AreYouSureSecretChat">Are you sure you want to start a secret chat?</string>
     <string name="ForwardFromMyName">forward from my name</string>
+    <string name="SendMessagesToGroup">Send messages to %1$s?</string>
+    <string name="ForwardMessagesToGroup">Forward messages to %1$s?</string>
     <!--Intro view-->
     <string name="Page1Title">Telegram</string>
     <string name="Page2Title">Fast</string>
@@ -396,7 +400,13 @@
     <string name="Page6Message"><![CDATA[<b>Telegram</b>]]> lets you access your messages<![CDATA[<br/>]]>from multiple devices.</string>
     <string name="Page7Message"><![CDATA[<b>Telegram</b>]]> messages are heavily encrypted<![CDATA[<br/>]]>and can self-destruct.</string>
     <string name="StartMessaging">Start Messaging</string>
-    <!--plurals-->
+    <!--plural-->
+    <string name="Online_zero">%1$d online</string>
+    <string name="Online_one">%1$d online</string>
+    <string name="Online_two">%1$d online</string>
+    <string name="Online_few">%1$d online</string>
+    <string name="Online_many">%1$d online</string>
+    <string name="Online_other">%1$d online</string>
     <string name="Members_zero">no members</string>
     <string name="Members_one">%1$d member</string>
     <string name="Members_two">%1$d members</string>
@@ -427,6 +437,16 @@
     <string name="FromContacts_few">from %1$d contacts</string>
     <string name="FromContacts_many">from %1$d contacts</string>
     <string name="FromContacts_other">from %1$d contacts</string>
+    <!--date formatters-->
+    <string name="formatterMonth">MMM dd</string>
+    <string name="formatterYear">dd.MM.yy</string>
+    <string name="formatterYearMax">dd.MM.yyyy</string>
+    <string name="chatDate">MMMM d</string>
+    <string name="chatFullDate">MMMM d, yyyy</string>
+    <string name="formatterWeek">EEE</string>
+    <string name="formatterDay24H">HH:mm</string>
+    <string name="formatterDay12H">h:mm a</string>
+    <string name="formatDateAtTime">%1$s at %2$s</string>
     <!--Don't change this! Not for localization!-->
     <string name="CacheTag">CACHE_TAG</string>
 </resources>
\ No newline at end of file
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 138d9cf0f..45c257f58 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Mon Jun 09 01:00:32 MSK 2014
+#Mon Oct 06 17:04:43 MSK 2014
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=http\://services.gradle.org/distributions/gradle-1.12-all.zip
+distributionUrl=http\://services.gradle.org/distributions/gradle-2.1-all.zip
