diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index e63276143..7f23bb5ea 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -27,6 +27,7 @@
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.Build;
+import android.os.Handler;
 import android.os.PowerManager;
 import android.os.Vibrator;
 import android.provider.Settings;
@@ -35,6 +36,7 @@
 import android.text.Html;
 import android.util.SparseArray;
 
+import com.aniways.Utils;
 import com.aniways.anigram.messenger.R;
 
 import org.json.JSONArray;
@@ -2325,11 +2327,22 @@ public void run(TLObject response, TLRPC.TL_error error) {
 
                     TLRPC.User user = users.get(newMsgObj.messageOwner.from_id);
 
-                    String senderName = user.first_name + " " + user.last_name;
+                    final String senderName = user.first_name + " " + user.last_name;
+
+                    final String isAttachment = newMsgObj.messageOwner.media instanceof TLRPC.TL_messageMediaEmpty ? "false" : "true";
 
                     if(peer != null){
-                        new NotificationSenderTask().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, String.valueOf(peer.user_id), String.valueOf(peer.chat_id), senderName, newMsgObj.messageText.toString());
-                    }
+                        new Handler().post(new Runnable() {
+                            @Override
+                            public void run() {
+                                if(Utils.isAndroidVersionAtLeast(11)){
+                                    new NotificationSenderTask().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, String.valueOf(peer.user_id), String.valueOf(peer.chat_id), senderName, isAttachment, newMsgObj.messageText.toString());
+                                }else{
+                                    new NotificationSenderTask().execute(String.valueOf(peer.user_id), String.valueOf(peer.chat_id), senderName, isAttachment, newMsgObj.messageText.toString());
+                                }
+                                }
+                        });
+                        }
 
                     if (response instanceof TLRPC.TL_messages_sentMessage) {
                         TLRPC.TL_messages_sentMessage res = (TLRPC.TL_messages_sentMessage) response;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationSenderTask.java b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationSenderTask.java
index 1eb32eaf0..d182b923a 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationSenderTask.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationSenderTask.java
@@ -1,6 +1,9 @@
 package org.telegram.messenger;
 
 import android.os.AsyncTask;
+import android.os.Handler;
+
+import com.aniways.Utils;
 
 import static org.telegram.messenger.TLRPC.TL_messages_sendMessage;
 
@@ -12,28 +15,52 @@
 
     @Override
     protected String doInBackground(String... params) {
-        int user_id = Integer.parseInt(params[0]);
-        int chat_id = Integer.parseInt(params[1]);
-        String senderName = params[2];
-        final String messageText = params[3].isEmpty() ? "attachment received from " + senderName : senderName + " says " + params[3];
-
-        if(user_id != 0){
-            new RequestTask().execute(NOTIFICATION_URL, String.valueOf(user_id), messageText);
-        } else {
-            TLRPC.TL_messages_getFullChat getFullChat = new TLRPC.TL_messages_getFullChat();
-            getFullChat.chat_id = chat_id;
-            ConnectionsManager.getInstance().performRpc(getFullChat, new RPCRequest.RPCRequestDelegate() {
-                @Override
-                public void run(TLObject response, TLRPC.TL_error error) {
-                    if(error == null) {
-                        TLRPC.ChatParticipants participants = ((TLRPC.TL_messages_chatFull) response).full_chat.participants;
-                        for (TLRPC.TL_chatParticipant cp : participants.participants) {
-                            new RequestTask().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, NOTIFICATION_URL, String.valueOf(cp.user_id), messageText);
+        try {
+            final int user_id = Integer.parseInt(params[0]);
+            final int chat_id = Integer.parseInt(params[1]);
+            String senderName = params[2];
+            boolean isAttachment = Boolean.parseBoolean(params[3]);
+            final String messageText = isAttachment ? params[4] + " received from " + senderName : senderName + " says " + params[4];
+
+            if (user_id != 0) {
+                new Handler().post(new Runnable() {
+                    @Override
+                    public void run() {
+                        if(Utils.isAndroidVersionAtLeast(11)){
+                            new RequestTask().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, NOTIFICATION_URL, String.valueOf(user_id), messageText);
+                        } else {
+                            new RequestTask().execute(NOTIFICATION_URL, String.valueOf(user_id), messageText);
+                        }
+                    }
+                });
+
+            } else {
+                TLRPC.TL_messages_getFullChat getFullChat = new TLRPC.TL_messages_getFullChat();
+                getFullChat.chat_id = chat_id;
+                ConnectionsManager.getInstance().performRpc(getFullChat, new RPCRequest.RPCRequestDelegate() {
+                    @Override
+                    public void run(TLObject response, TLRPC.TL_error error) {
+                        if (error == null) {
+                            TLRPC.ChatParticipants participants = ((TLRPC.TL_messages_chatFull) response).full_chat.participants;
+                            for (final TLRPC.TL_chatParticipant cp : participants.participants) {
+                                new Handler().post(new Runnable(){
+                                    @Override
+                                    public void run() {
+                                        if(Utils.isAndroidVersionAtLeast(11)) {
+                                            new RequestTask().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, NOTIFICATION_URL, String.valueOf(cp.user_id), messageText);
+                                        } else {
+                                            new RequestTask().execute(NOTIFICATION_URL, String.valueOf(cp.user_id), messageText);
+                                        }
+                                    }
+                                });
+                                }
                         }
+
                     }
+                }, null, true, RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassFailOnServerErrors | RPCRequest.RPCRequestClassCanCompress);
+            }
+        } catch (Exception e){
 
-                }
-            }, null, true, RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassFailOnServerErrors | RPCRequest.RPCRequestClassCanCompress);
         }
 
         return null;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/RequestTask.java b/TMessagesProj/src/main/java/org/telegram/messenger/RequestTask.java
index 442024170..a80e0ff02 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/RequestTask.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/RequestTask.java
@@ -2,6 +2,8 @@
 
 import android.os.AsyncTask;
 
+import com.aniways.service.utils.AniwaysServiceUtils;
+
 import org.apache.http.HttpResponse;
 import org.apache.http.HttpStatus;
 import org.apache.http.NameValuePair;
@@ -11,8 +13,10 @@
 import org.apache.http.client.entity.UrlEncodedFormEntity;
 import org.apache.http.client.methods.HttpGet;
 import org.apache.http.client.methods.HttpPost;
+import org.apache.http.conn.params.ConnManagerParams;
 import org.apache.http.impl.client.DefaultHttpClient;
 import org.apache.http.message.BasicNameValuePair;
+import org.apache.http.params.HttpConnectionParams;
 
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
